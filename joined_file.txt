
--------------------------------------------------------------
--------------------------------------------------------------
--                                                          --
-- This VHDL file has been generated by the verilog2vhdl    --
-- tool.                                                    --
-- Contact help@edautils.com  for support/info.--
--                                                          --
--                                                          --
--------------------------------------------------------------
--------------------------------------------------------------
--
--
-- Assumptions: 
--         (1) All the parameters are of type INTEGER, and hence the translated generics are of this type
--
--
-- Generated by : bhanu on 9/28/12 11:44 PM
--
--
--library ieee;
--use ieee.std_logic_1164.all;
--package vl2vh_common_pack is 
--    type vl2vh_memory_type is      array  ( natural range <> , natural range <>  )  of std_logic ;
--    function vl2vh_ternary_func(  constant cond : std_logic;  constant trueval : std_logic;  constant falseval : std_logic)  return std_logic; 
--    function vl2vh_ternary_func(  constant cond : std_logic;  constant trueval : std_logic_vector;  constant falseval : std_logic_vector)  return std_logic_vector; 
--end package; 


--library ieee;
--library work;
--use ieee.std_logic_1164.all;
--use ieee.std_logic_misc.all;
--use ieee.numeric_std.all;
--use work.vl2vh_common_pack.all;

LIBRARY ieee, synopsys;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;
USE ieee.std_logic_unsigned.all;
USE ieee.std_logic_misc.all;
use synopsys.attributes.all;

entity a23_alu is 
     port (
        i_a_in :  in std_logic_vector( 31  downto 0  );
        i_b_in :  in std_logic_vector( 31  downto 0  );
        i_barrel_shift_carry :  in std_logic;
        i_status_bits_carry :  in std_logic;
        i_function :  in std_logic_vector( 8  downto 0  );
        o_out :  out std_logic_vector( 31  downto 0  );
        o_flags :  out std_logic_vector( 3  downto 0  )
    );
end entity; 


architecture rtl of a23_alu is 
    signal a : std_logic_vector( 31  downto 0  );
    signal b : std_logic_vector( 31  downto 0  );
    signal b_not : std_logic_vector( 31  downto 0  );
    signal and_out : std_logic_vector( 31  downto 0  );
    signal or_out : std_logic_vector( 31  downto 0  );
    signal xor_out : std_logic_vector( 31  downto 0  );
    signal sign_ex8_out : std_logic_vector( 31  downto 0  );
    signal sign_ex_16_out : std_logic_vector( 31  downto 0  );
    signal zero_ex8_out : std_logic_vector( 31  downto 0  );
    signal zero_ex_16_out : std_logic_vector( 31  downto 0  );
    signal fadder_out : std_logic_vector( 32  downto 0  );
    signal swap_sel : std_logic;
    signal not_sel : std_logic;
    signal cin_sel : std_logic_vector( 1  downto 0  );
    signal cout_sel : std_logic;
    signal out_sel : std_logic_vector( 3  downto 0  );
    signal carry_in : std_logic;
    signal carry_out : std_logic;
    signal overflow_out : std_logic;
    signal fadder_carry_out : std_logic;

 -- Introducing a signal   o_out_int
  
    signal   o_out_int : std_logic_vector( 31  downto 0  );

    begin 

--  Syntax error in VHDL
--  ( swap_sel & not_sel & cin_sel & cout_sel & out_sel ) <= i_function;
         

        swap_sel <= i_function(8);
        not_sel  <= i_function(7);
        cin_sel  <= i_function(6 downto 5);
        cout_sel <= i_function(4);
        out_sel  <= i_function(3 downto 0); 

      --  Syntax error in VHDL
      --  a <= vl2vh_ternary_func( swap_sel, i_b_in, i_a_in );
        a <= i_b_in when swap_sel = '1' else i_a_in;

      --  Syntax error in VHDL
      --   b <= vl2vh_ternary_func( swap_sel, i_a_in, i_b_in );
        b <= i_a_in when swap_sel = '1' else i_b_in;

      --  Syntax error in VHDL
      --  b_not <= vl2vh_ternary_func( not_sel, (  not b ) , b );
          b_not <= (not b) when not_sel = '1' else b;


--      carry_in <= vl2vh_ternary_func( ( cin_sel = '0'  ) , '0' , vl2vh_ternary_func( ( cin_sel = '1'  ) , '1' , i_status_bits_carry ) );
       carry_in  <= '0' when cin_sel = "00" else
                    '1' when cin_sel = "01" else i_status_bits_carry;


--        carry_out <= vl2vh_ternary_func( ( cout_sel = '0'  ) , fadder_carry_out, i_barrel_shift_carry );
       carry_out  <= fadder_carry_out when cout_sel = '0' else i_barrel_shift_carry;

--        overflow_out <= ( out_sel = X"1"  )  and ( ( ( (  not a(31 ) )  and (  not b_not(31 ) )  )  and fadder_out(31 ) )  or ( ( a(31 ) and b_not(31 ) )  and (  not fadder_out(31 ) )  )  ) ;

        overflow_out <= ( ( ( (  not a(31 ) )  and (  not b_not(31 ) )  )  and fadder_out(31 ) )  or ( ( a(31 ) and b_not(31 ) )  and (  not fadder_out(31 ) )  )  )  when ( out_sel = X"1"  ) else '0';

        fadder_out <= ( ( ( '0'  & a ) + ( '0'  & b_not ) )  + ( '0'  & carry_in ) ) ;
        fadder_carry_out <= fadder_out(32);
        and_out <= ( a and b_not ) ;
        or_out <= ( a or b_not ) ;
        xor_out <= ( a xor b_not ) ;
        zero_ex8_out <= ( conv_std_logic_vector(0,24) & b_not(7  downto 0 ) );
        zero_ex_16_out <= ( conv_std_logic_vector(0,16)  & b_not(15  downto 0 ) );

--        sign_ex8_out <= ( ( b_not(7 ) & b_not(7 ) & b_not(7 ) & b_not(7 ) & b_not(7 ) & b_not(7 ) & b_not(7 ) & b_not(7 ) & b_not(7 ) & b_not(7 ) & b_not(7 ) & b_not(7 ) & b_not(7 ) & b_not(7 ) & b_not(7 ) & b_not(7 ) & b_not(7 ) & b_not(7 ) & b_not(7 ) & b_not(7 ) & b_not(7 ) & b_not(7 ) & b_not(7 ) & b_not(7 ) ) & b_not(7  downto 0 ) );

     sign_ex8_out <= (31 downto 8 => b_not(7)) & b_not(7 downto 0);

--        sign_ex_16_out <= ( ( b_not(15 ) & b_not(15 ) & b_not(15 ) & b_not(15 ) & b_not(15 ) & b_not(15 ) & b_not(15 ) & b_not(15 ) & b_not(15 ) & b_not(15 ) & b_not(15 ) & b_not(15 ) & b_not(15 ) & b_not(15 ) & b_not(15 ) & b_not(15 ) ) & b_not(15  downto 0 ) );

     sign_ex_16_out <= (31 downto 16 => b_not(15)) & b_not(15 downto 0);

     --   o_out <= vl2vh_ternary_func( ( out_sel = '0'  ) , b_not, vl2vh_ternary_func( ( out_sel = '1'  ) , fadder_out(31  downto 0 ), vl2vh_ternary_func( ( out_sel = "10"  ) , zero_ex_16_out, vl2vh_ternary_func( ( out_sel = "11"  ) , zero_ex8_out, vl2vh_ternary_func( ( out_sel = "100"  ) , sign_ex_16_out, vl2vh_ternary_func( ( out_sel = "101"  ) , sign_ex8_out, vl2vh_ternary_func( ( out_sel = "110"  ) , xor_out, vl2vh_ternary_func( ( out_sel = "111"  ) , or_out, and_out ) ) ) ) ) ) ) );

         o_out_int <= b_not when out_sel = "000"                    else
                  fadder_out(31 downto 0) when out_sel = "001"  else
                  zero_ex_16_out          when out_sel = "010"  else
                  zero_ex8_out            when out_sel = "011"  else
                  sign_ex_16_out          when out_sel = "100"  else
                  sign_ex8_out            when out_sel = "101"  else
                  xor_out                 when out_sel = "110"  else
                  or_out                  when out_sel = "111"  else
                  and_out;

        o_out <= o_out_int;
 

--        o_flags <= ( o_out(31 ) & ( OR_REDUCE( o_out ) = '0'  )  & carry_out & overflow_out );
        o_flags <=  o_out_int(31 ) & (not(OR_REDUCE(o_out_int)))  & carry_out & overflow_out ;
    end rtl; 



--------------------------------------------------------------
--------------------------------------------------------------
--                                                          --
-- This VHDL file has been generated by the verilog2vhdl    --
-- tool.                                                    --
-- Contact help@edautils.com  for support/info.--
--                                                          --
--                                                          --
--------------------------------------------------------------
--------------------------------------------------------------
LIBRARY ieee, synopsys;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;
USE ieee.std_logic_unsigned.all;
USE ieee.std_logic_misc.all;
use synopsys.attributes.all;


entity a23_barrel_shift is 
generic (
                 CONSTANT REGOP : std_logic_vector(3 DOWNTO 0) := X"0";
                 CONSTANT MULT : std_logic_vector(3 DOWNTO 0) := X"1";
                 CONSTANT SWAP : std_logic_vector(3 DOWNTO 0) := X"2";
                 CONSTANT TRANS : std_logic_vector(3 DOWNTO 0) := X"3";
                 CONSTANT MTRANS : std_logic_vector(3 DOWNTO 0) := X"4";
                 CONSTANT BRANCH : std_logic_vector(3 DOWNTO 0) := X"5";
                 CONSTANT CODTRANS : std_logic_vector(3 DOWNTO 0) := X"6";
                 CONSTANT COREGOP : std_logic_vector(3 DOWNTO 0) := X"7";
                 CONSTANT CORTRANS : std_logic_vector(3 DOWNTO 0) := X"8";
                 CONSTANT SWI : std_logic_vector(3 DOWNTO 0) := X"9";
                 CONSTANT AND_VHDL : std_logic_vector(3 DOWNTO 0) := X"0";
                 CONSTANT EOR : std_logic_vector(3 DOWNTO 0) := X"1";
                 CONSTANT SUB : std_logic_vector(3 DOWNTO 0) := X"2";
                 CONSTANT RSB : std_logic_vector(3 DOWNTO 0) := X"3";
                 CONSTANT ADD : std_logic_vector(3 DOWNTO 0) := X"4";
                 CONSTANT ADC : std_logic_vector(3 DOWNTO 0) := X"5";
                 CONSTANT SBC : std_logic_vector(3 DOWNTO 0) := X"6";
                 CONSTANT RSC : std_logic_vector(3 DOWNTO 0) := X"7";
                 CONSTANT TST : std_logic_vector(3 DOWNTO 0) := X"8";
                 CONSTANT TEQ : std_logic_vector(3 DOWNTO 0) := X"9";
                 CONSTANT CMP : std_logic_vector(3 DOWNTO 0) := X"a";
                 CONSTANT CMN : std_logic_vector(3 DOWNTO 0) := X"b";
                 CONSTANT ORR : std_logic_vector(3 DOWNTO 0) := X"c";
                 CONSTANT MOV : std_logic_vector(3 DOWNTO 0) := X"d";
                 CONSTANT BIC : std_logic_vector(3 DOWNTO 0) := X"e";
                 CONSTANT MVN : std_logic_vector(3 DOWNTO 0) := X"f";
                 CONSTANT EQ : std_logic_vector(3 DOWNTO 0) := X"0";
                 CONSTANT NE : std_logic_vector(3 DOWNTO 0) := X"1";
                 CONSTANT CS : std_logic_vector(3 DOWNTO 0) := X"2";
                 CONSTANT CC : std_logic_vector(3 DOWNTO 0) := X"3";
                 CONSTANT MI : std_logic_vector(3 DOWNTO 0) := X"4";
                 CONSTANT PL : std_logic_vector(3 DOWNTO 0) := X"5";
                 CONSTANT VS : std_logic_vector(3 DOWNTO 0) := X"6";
                 CONSTANT VC : std_logic_vector(3 DOWNTO 0) := X"7";
                 CONSTANT HI : std_logic_vector(3 DOWNTO 0) := X"8";
                 CONSTANT LS : std_logic_vector(3 DOWNTO 0) := X"9";
                 CONSTANT GE : std_logic_vector(3 DOWNTO 0) := X"a";
                 CONSTANT LT : std_logic_vector(3 DOWNTO 0) := X"b";
                 CONSTANT GT : std_logic_vector(3 DOWNTO 0) := X"c";
                 CONSTANT LE : std_logic_vector(3 DOWNTO 0) := X"d";
                 CONSTANT AL : std_logic_vector(3 DOWNTO 0) := X"e";
                 CONSTANT NV : std_logic_vector(3 DOWNTO 0) := X"f";
                 CONSTANT LSL : std_logic_vector(1 DOWNTO 0) := "00";
                 CONSTANT LSR : std_logic_vector(1 DOWNTO 0) := "01";
                 CONSTANT ASR : std_logic_vector(1 DOWNTO 0) := "10";
                 CONSTANT RRX : std_logic_vector(1 DOWNTO 0) := "11";
                 CONSTANT ROR_VHDL : std_logic_vector(1 DOWNTO 0) := "11";
                 CONSTANT SVC : std_logic_vector(1 DOWNTO 0) := B"11";
                 CONSTANT IRQ : std_logic_vector(1 DOWNTO 0) := B"10";
                 CONSTANT FIRQ : std_logic_vector(1 DOWNTO 0) := B"01";
                 CONSTANT USR : std_logic_vector(1 DOWNTO 0) := B"00";
                 CONSTANT OH_USR : std_logic_vector(5 DOWNTO 0) := "000000";
                 CONSTANT OH_IRQ : std_logic_vector(5 DOWNTO 0) := "000001";
                 CONSTANT OH_FIRQ : std_logic_vector(5 DOWNTO 0) := "000010";
                 CONSTANT OH_SVC : std_logic_vector(5 DOWNTO 0) := "000011");

                                                                     
     port (
        i_in :  in std_logic_vector( 31  downto 0  );
        i_carry_in :  in std_logic;
        i_shift_amount :  in std_logic_vector( 7  downto 0  );
        i_shift_imm_zero :  in std_logic;
        i_function :  in std_logic_vector( 1  downto 0  );
        o_out :  out std_logic_vector( 31  downto 0  );
        o_carry_out :  out std_logic
    );
end ;


architecture rtl of a23_barrel_shift is 
    signal lsl_out : std_logic_vector( 32  downto 0  );
    signal lsr_out : std_logic_vector( 32  downto 0  );
    signal asr_out : std_logic_vector( 32  downto 0  );
    signal ror_out : std_logic_vector( 32  downto 0  );
    begin 

          lsl_out <= (i_carry_in & i_in)                    when i_shift_imm_zero = '1' else
                     (i_carry_in & i_in)                    when i_shift_amount   =  0  else
                     (i_in(31) & i_in(30 downto 0) & '0')   when i_shift_amount   =  1  else
                     (i_in(30) & i_in(29 downto 0) & "00")  when i_shift_amount   =  2  else 
                     (i_in(29) & i_in(28 downto 0) & "000") when i_shift_amount  =  3  else 
                     (i_in(28) & i_in(27 downto 0) & "0000") when i_shift_amount  =  4  else 
                     (i_in(27) & i_in(26 downto 0) & "00000") when i_shift_amount  =  5  else 
                     (i_in(26) & i_in(25 downto 0) & "000000") when i_shift_amount  =  6  else 
                     (i_in(25) & i_in(24 downto 0) & "0000000") when i_shift_amount  =  7  else 
                     (i_in(24) & i_in(23 downto 0) & "00000000") when i_shift_amount  =  8  else 
                     (i_in(23) & i_in(22 downto 0) & "000000000") when i_shift_amount  =  9  else 
                     (i_in(22) & i_in(21 downto 0) & "0000000000") when i_shift_amount  =  10  else 
                     (i_in(21) & i_in(20 downto 0) & "00000000000") when i_shift_amount  =  11  else 
                    
                     (i_in(20) & i_in(19 downto 0) & "000000000000") when i_shift_amount  =  12  else 
                     (i_in(19) & i_in(18 downto 0) & "0000000000000") when i_shift_amount  =  13  else 
                     (i_in(18) & i_in(17 downto 0) & "00000000000000") when i_shift_amount  =  14  else 
                     (i_in(17) & i_in(16 downto 0) & "000000000000000") when i_shift_amount  =  15  else 
                     (i_in(16) & i_in(15 downto 0) & "0000000000000000") when i_shift_amount  =  16  else 
                     (i_in(15) & i_in(14 downto 0) & "00000000000000000") when i_shift_amount  =  17  else 
 
		     (i_in(14) & i_in(13 downto 0) & "000000000000000000") when i_shift_amount  =  18  else 
                     (i_in(13) & i_in(12 downto 0) & "0000000000000000000") when i_shift_amount  =  19  else 
                     (i_in(12) & i_in(11 downto 0) & "00000000000000000000") when i_shift_amount  =  20  else 
                     (i_in(11) & i_in(10 downto 0) & "000000000000000000000") when i_shift_amount  =  21  else 
                     (i_in(10) & i_in(9 downto 0)  & "0000000000000000000000") when i_shift_amount  =  22  else 
                     (i_in(9) & i_in(8 downto 0)   & "00000000000000000000000") when i_shift_amount  =   23  else 
                     (i_in(8) & i_in(7 downto 0)   & "000000000000000000000000") when i_shift_amount  =   24  else 
                     (i_in(7) & i_in(6 downto 0)   & "0000000000000000000000000") when i_shift_amount  =   25  else 
                     (i_in(6) & i_in(5 downto 0)   & "00000000000000000000000000") when i_shift_amount  =   26  else 
                     (i_in(5) & i_in(4 downto 0)   & "000000000000000000000000000") when i_shift_amount  =   27  else 
                     (i_in(4) & i_in(3 downto 0)   & "0000000000000000000000000000") when i_shift_amount  =   28  else 
                     (i_in(3) & i_in(2 downto 0)   & "00000000000000000000000000000") when i_shift_amount  =   29  else 
                     (i_in(2) & i_in(1 downto 0)   & "000000000000000000000000000000") when i_shift_amount  =   30  else 
                     (i_in(1) & i_in(0)            & "0000000000000000000000000000000") when i_shift_amount  =   31  else 
                     (i_in(0) & X"00000000") when i_shift_amount  =   32  else 
                     ('0' & X"00000000");

          lsr_out <= (i_in(31) & X"00000000")                    when i_shift_imm_zero = '1' else
                     (i_carry_in & i_in)                    when i_shift_amount    =  0  else
                     (i_in(0) & '0' & i_in(31 downto 1))   when i_shift_amount    =  1  else
                     (i_in(1) & "00" & i_in(31 downto 2))  when i_shift_amount    =  2  else 
                     (i_in(2) & "000" & i_in(31 downto 3)) when i_shift_amount    =  3  else 
                     (i_in(3) & "0000" & i_in(31 downto 4)) when i_shift_amount   =  4  else 
                     (i_in(4) & "00000" & i_in(31 downto 5)) when i_shift_amount  =  5  else 
                     (i_in(5) & "000000" & i_in(31 downto 6)) when i_shift_amount  =  6  else 
                     (i_in(6) & "0000000" & i_in(31 downto 7)) when i_shift_amount  =  7  else 
                     (i_in(7) & "00000000" & i_in(31 downto 8)) when i_shift_amount  =  8  else 
                     (i_in(8) & "000000000" & i_in(31 downto 9)) when i_shift_amount  =  9  else 
                     (i_in(9) & "0000000000" & i_in(31 downto 10)) when i_shift_amount  =  10  else 
                    (i_in(10) & "00000000000" & i_in(31 downto 11)) when i_shift_amount  =  11  else 
                    
                    (i_in(11) & "000000000000" & i_in(31 downto 12)) when i_shift_amount  =  12  else 
                    (i_in(12) & "0000000000000" & i_in(31 downto 13)) when i_shift_amount  =  13  else 
                    (i_in(13) & "00000000000000" & i_in(31 downto 14)) when i_shift_amount  =  14  else 
                    (i_in(14) & "000000000000000" & i_in(31 downto 15)) when i_shift_amount  =  15  else 
                    (i_in(15) & "0000000000000000" & i_in(31 downto 16)) when i_shift_amount  =  16  else 
                    (i_in(16) & "00000000000000000" & i_in(31 downto 17)) when i_shift_amount  =  17  else 
 
		    (i_in(17) & "000000000000000000" & i_in(31 downto 18)) when i_shift_amount  =  18  else 
                    (i_in(18) & "0000000000000000000" & i_in(31 downto 19)) when i_shift_amount  =  19  else 
                    (i_in(19) & "00000000000000000000" & i_in(31 downto 20)) when i_shift_amount  =  20  else 
                    (i_in(20) & "000000000000000000000" & i_in(31 downto 21)) when i_shift_amount  =  21  else 
                    (i_in(21) & "0000000000000000000000" & i_in(31 downto 22)) when i_shift_amount  =  22  else 
                    (i_in(22) & "00000000000000000000000" & i_in(31 downto 23)) when i_shift_amount  =   23  else 
                    (i_in(23) & "000000000000000000000000" & i_in(31 downto 24)) when i_shift_amount  =   24  else 
                    (i_in(24) & "0000000000000000000000000" & i_in(31 downto 25)) when i_shift_amount  =   25  else 
                    (i_in(25) & "00000000000000000000000000" & i_in(31 downto 26)) when i_shift_amount  =   26  else 
                    (i_in(26) & "000000000000000000000000000" & i_in(31 downto 27)) when i_shift_amount  =   27  else 
                    (i_in(27) & "0000000000000000000000000000" & i_in(31 downto 28)) when i_shift_amount  =   28  else 
                    (i_in(28) & "00000000000000000000000000000" & i_in(31 downto 29)) when i_shift_amount  =   29  else 
                    (i_in(29) & "000000000000000000000000000000" & i_in(31 downto 30)) when i_shift_amount  =   30  else 
                    (i_in(30) & "0000000000000000000000000000000" & i_in(31)) when i_shift_amount  =   31  else 
                    (i_in(31) & X"00000000") when i_shift_amount  =   32  else 
                    ('0' & X"00000000") ;

      asr_out <=  (i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
                   i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
                   i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
                   i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
                   i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
                   i_in(31) & i_in(31) & i_in(31))   when i_shift_amount = 0     else
                   i_in(0) & (i_in(31) & i_in(31)) & i_in(30 downto 1) when  i_shift_amount = 1 else
                   i_in(1) & (i_in(31) & i_in(31) & i_in(31)) & i_in(30 downto 2) when  i_shift_amount = 2 else
                   i_in(2) & (i_in(31) & i_in(31) & i_in(31) & i_in(31)) & i_in(30 downto 3) when  i_shift_amount = 3 else
                   i_in(3) & (i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31)) when  i_shift_amount = 4 else
                   i_in(4) & (i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
                   i_in(31)) & i_in(30 downto 5) when  i_shift_amount = 5 else
                   i_in(5) & (i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
                   i_in(31) & i_in(31)) & i_in(30 downto 6) when  i_shift_amount = 6 else
                   i_in(6) & (i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
                   i_in(31) & i_in(31) & i_in(31)) & i_in(30 downto 7) when  i_shift_amount = 7 else
                   i_in(7) & (i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
                   i_in(31) & i_in(31)) & i_in(30 downto 8) when  i_shift_amount = 8 else
                   i_in(8) & (i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
                   i_in(31) & i_in(31) & i_in(31)) & i_in(30 downto 9) when  i_shift_amount = 9 else
		   i_in(9) & (i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
                   i_in(31) & i_in(31) & i_in(31) & i_in(31)) & i_in(30 DOWNTO 10) when i_shift_amount = 10  else
		   i_in(10) & (i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
                   i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31)) & i_in(30 DOWNTO 11) when i_shift_amount = 11 else
                   i_in(11) & (i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
		   i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31)) & i_in(30 DOWNTO 12) when i_shift_amount =12 else 
                   i_in(12) & (i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
		   i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31)) & i_in(30 DOWNTO 13) when i_shift_amount = 13 else 
                   i_in(13) & (i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
		   i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31)) & i_in(30 DOWNTO 14) when i_shift_amount = 14 else 
                   i_in(14) & (i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
                   i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31)) & i_in(30 DOWNTO 15) when i_shift_amount = 15 else
                   i_in(15) & (i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
                   i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31)) & i_in(30 DOWNTO 16) when i_shift_amount = 16 else
                   i_in(16) & (i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
                   i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31)) & 
                   i_in(30 DOWNTO 17) when i_shift_amount = 17 else
		   i_in(17) & (i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
                   i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31)) & 
		   i_in(30 DOWNTO 18) when i_shift_amount = 18 else 
		   i_in(18) & (i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
         	   i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31)) & 
                   i_in(30 DOWNTO 19) when i_shift_amount = 19 else 
                   i_in(19) & (i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
                   i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31)) & 
                   i_in(30 DOWNTO 20) when i_shift_amount = 20 else 
                   i_in(20) & (i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
		   i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
                   i_in(31) & i_in(31)) & i_in(30 DOWNTO 21) when i_shift_amount = 21 else 
		   i_in(21) & (i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
		   i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
                   i_in(31) & i_in(31) & i_in(31)) & i_in(30 DOWNTO 22) when i_shift_amount = 22 else 
		   i_in(22) & (i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
		   i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
		   i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31)) & 
		   i_in(30 DOWNTO 23) when i_shift_amount = 23 else 
		   i_in(23) & (i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
                   i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
		   i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31)) & 
                   i_in(30 DOWNTO 24) when i_shift_amount = 24 else 
		   i_in(24) & (i_in(31) & i_in(31) & i_in(31) & 
		i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
		i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
		i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
		i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
		i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
		i_in(31) & i_in(31) & i_in(31)) & i_in(30 DOWNTO 25) when i_shift_amount = 25 else
		i_in(25) & (i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
		i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
		i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
		i_in(31) & i_in(31) & i_in(31) & i_in(31)) & i_in(30 DOWNTO 26) when i_shift_amount = 26 else 
		i_in(26) & (i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
		i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
		i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
		i_in(31) & i_in(31)) & i_in(30 DOWNTO 27) when i_shift_amount = 27 else 
		i_in(27) & (i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
		i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
		i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
		i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31)) & i_in(30 DOWNTO 28) when i_shift_amount = 28 else 
		i_in(28) & (i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
		i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
		i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
		i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31)) & i_in(30 DOWNTO 29) when i_shift_amount = 29 else 
		i_in(29) & (i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
		i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
		i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & 
		i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31) & i_in(31)) & i_in(30) when i_shift_amount = 30 else 
                i_in(30) & (others => i_in(31)) when i_shift_amount = 31 else 
		(others => i_in(31));

	
	ror_out <= i_in(0) & i_carry_in & i_in(31 downto 1)        when i_shift_imm_zero = '1' else
                   i_carry_in & i_in 	                           when i_shift_amount(7 downto 0)  = X"00" else
                   i_in(31) & i_in 			           when i_shift_amount(4 downto 0)  = "00000" else
                   i_in(0) & i_in(0) & i_in(31 downto 1)           when  i_shift_amount(4 downto 0) = "00001" else
                   i_in(1) & i_in(1 downto  0) & i_in(31 downto 2) when  i_shift_amount(4 downto 0) = "00010" else
                   i_in(2) & i_in(2 downto  0) & i_in(31 downto 3) when  i_shift_amount(4 downto 0) = "00011" else
                   i_in(3) & i_in(3 downto  0) & i_in(31 downto 4) when  i_shift_amount(4 downto 0) = "00100" else
                   i_in(4) & i_in(4 downto  0) & i_in(31 downto 5) when  i_shift_amount(4 downto 0) = "00101" else
                   i_in(5) & i_in(5 downto  0) & i_in(31 downto 6) when  i_shift_amount(4 downto 0) = "00110" else
                   i_in(6) & i_in(6 downto  0) & i_in(31 downto 7) when  i_shift_amount(4 downto 0) = "00111" else
                   i_in(7) & i_in(7 downto  0) & i_in(31 downto 8) when  i_shift_amount(4 downto 0) = "01000" else
                   i_in(8) & i_in(8 downto  0) & i_in(31 downto 9) when  i_shift_amount(4 downto 0) = "01001" else
                   i_in(9) & i_in(9 downto  0) & i_in(31 downto 10) when  i_shift_amount(4 downto 0) = "01010" else
                   i_in(10) & i_in(10 downto  0) & i_in(31 downto 11) when  i_shift_amount(4 downto 0) = "01011" else
                   i_in(11) & i_in(11 downto  0) & i_in(31 downto 12) when  i_shift_amount(4 downto 0) = "01100" else
                   i_in(12) & i_in(12 downto  0) & i_in(31 downto 13) when  i_shift_amount(4 downto 0) = "01101" else
                   i_in(13) & i_in(13 downto  0) & i_in(31 downto 14) when  i_shift_amount(4 downto 0) = "01110" else
                   i_in(14) & i_in(14 downto  0) & i_in(31 downto 15) when  i_shift_amount(4 downto 0) = "01111" else
                   i_in(15) & i_in(15 downto  0) & i_in(31 downto 16) when  i_shift_amount(4 downto 0) = "10000" else
                   i_in(16) & i_in(16 downto  0) & i_in(31 downto 17) when  i_shift_amount(4 downto 0) = "10001" else
                   i_in(17) & i_in(17 downto  0) & i_in(31 downto 18) when  i_shift_amount(4 downto 0) = "10010" else
                   i_in(18) & i_in(18 downto  0) & i_in(31 downto 19) when  i_shift_amount(4 downto 0) = "10011" else
                   i_in(19) & i_in(19 downto  0) & i_in(31 downto 20) when  i_shift_amount(4 downto 0) = "10100" else
                   i_in(20) & i_in(20 downto  0) & i_in(31 downto 21) when  i_shift_amount(4 downto 0) = "10101" else
                   i_in(21) & i_in(21 downto  0) & i_in(31 downto 22) when  i_shift_amount(4 downto 0) = "10110" else
                   i_in(22) & i_in(22 downto  0) & i_in(31 downto 23) when  i_shift_amount(4 downto 0) = "10111" else
                   i_in(23) & i_in(23 downto  0) & i_in(31 downto 24) when  i_shift_amount(4 downto 0) = "11000" else
                   i_in(24) & i_in(24 downto  0) & i_in(31 downto 25) when  i_shift_amount(4 downto 0) = "11001" else
                   i_in(25) & i_in(25 downto  0) & i_in(31 downto 26) when  i_shift_amount(4 downto 0) = "11010" else
                   i_in(26) & i_in(26 downto  0) & i_in(31 downto 27) when  i_shift_amount(4 downto 0) = "11011" else
                   i_in(27) & i_in(27 downto  0) & i_in(31 downto 28) when  i_shift_amount(4 downto 0) = "11100" else
                   i_in(28) & i_in(28 downto  0) & i_in(31 downto 29) when  i_shift_amount(4 downto 0) = "11101" else
                   i_in(29) & i_in(29 downto  0) & i_in(31 downto 30) when  i_shift_amount(4 downto 0) = "11110" else
                   i_in(30) & i_in(30 downto  0) & i_in(31 downto 31);

       	 o_carry_out <= lsl_out(32) when i_function = LSL else
   	                lsr_out(32) when i_function = LSR else
        	        asr_out(32) when i_function = ASR else
                 	ror_out(32); 
       	 
	o_out 	     <= lsl_out(31 downto 0) when i_function = LSL else
   	                lsr_out(31 downto 0) when i_function = LSR else
        	        asr_out(31 downto 0) when i_function = ASR else
                 	ror_out(31 downto 0); 
 
    end rtl; 



--------------------------------------------------------------
--------------------------------------------------------------
--                                                          --
-- This VHDL file has been generated by the verilog2vhdl    --
-- tool.                                                    --
-- Contact help@edautils.com  for support/info.--
--                                                          --
--                                                          --
--------------------------------------------------------------
--------------------------------------------------------------
--
--
-- Assumptions: 
--         (1) All the parameters are of type INTEGER, and hence the translated generics are of this type
--
--
-- Generated by : bhanu on 10/7/12 9:03 PM
--
--
LIBRARY ieee, synopsys;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;
USE ieee.std_logic_signed.all;
use ieee.std_logic_misc.all;
use ieee.std_logic_textio.all;
use synopsys.attributes.all;

entity a23_cache is 
   GENERIC (     CONSTANT A23_CACHE_WAYS : integer := 2;
                 CONSTANT CACHE_LINES : integer := 256;
                 CONSTANT CACHE_WORDS_PER_LINE : integer := 4;
                 CONSTANT C_INIT : integer := 0;
                 CONSTANT C_CORE : integer := 1;
                 CONSTANT C_FILL : integer := 2;
                 CONSTANT C_INVA : integer := 3;
                 CONSTANT C_STATES: integer := 4;

  		 CONSTANT REGOP : std_logic_vector(3 DOWNTO 0) := X"0";	
                 CONSTANT MULT : std_logic_vector(3 DOWNTO 0) := X"1";	
                 CONSTANT SWAP : std_logic_vector(3 DOWNTO 0) := X"2";	
                 CONSTANT TRANS : std_logic_vector(3 DOWNTO 0) := X"3";	
                 CONSTANT MTRANS : std_logic_vector(3 DOWNTO 0) := X"4";	
                 CONSTANT BRANCH : std_logic_vector(3 DOWNTO 0) := X"5";	
                 CONSTANT CODTRANS : std_logic_vector(3 DOWNTO 0) := X"6";	
                 CONSTANT COREGOP : std_logic_vector(3 DOWNTO 0) := X"7";	
                 CONSTANT CORTRANS : std_logic_vector(3 DOWNTO 0) := X"8";	
                 CONSTANT SWI : std_logic_vector(3 DOWNTO 0) := X"9";	
                 CONSTANT AND_VHDL : std_logic_vector(3 DOWNTO 0) := X"0";	
                 CONSTANT EOR : std_logic_vector(3 DOWNTO 0) := X"1";	
                 CONSTANT SUB : std_logic_vector(3 DOWNTO 0) := X"2";	
                 CONSTANT RSB : std_logic_vector(3 DOWNTO 0) := X"3";	
                 CONSTANT ADD : std_logic_vector(3 DOWNTO 0) := X"4";	
                 CONSTANT ADC : std_logic_vector(3 DOWNTO 0) := X"5";	
                 CONSTANT SBC : std_logic_vector(3 DOWNTO 0) := X"6";	
                 CONSTANT RSC : std_logic_vector(3 DOWNTO 0) := X"7";	
                 CONSTANT TST : std_logic_vector(3 DOWNTO 0) := X"8";	
                 CONSTANT TEQ : std_logic_vector(3 DOWNTO 0) := X"9";	
                 CONSTANT CMP : std_logic_vector(3 DOWNTO 0) := X"a";	
                 CONSTANT CMN : std_logic_vector(3 DOWNTO 0) := X"b";	
                 CONSTANT ORR : std_logic_vector(3 DOWNTO 0) := X"c";	
                 CONSTANT MOV : std_logic_vector(3 DOWNTO 0) := X"d";	
                 CONSTANT BIC : std_logic_vector(3 DOWNTO 0) := X"e";	
                 CONSTANT MVN : std_logic_vector(3 DOWNTO 0) := X"f";	
                 CONSTANT EQ : std_logic_vector(3 DOWNTO 0) := X"0";	
                 CONSTANT NE : std_logic_vector(3 DOWNTO 0) := X"1";	
                 CONSTANT CS : std_logic_vector(3 DOWNTO 0) := X"2";	
                 CONSTANT CC : std_logic_vector(3 DOWNTO 0) := X"3";	
                 CONSTANT MI : std_logic_vector(3 DOWNTO 0) := X"4";	
                 CONSTANT PL : std_logic_vector(3 DOWNTO 0) := X"5";	
                 CONSTANT VS : std_logic_vector(3 DOWNTO 0) := X"6";	
                 CONSTANT VC : std_logic_vector(3 DOWNTO 0) := X"7";	
                 CONSTANT HI : std_logic_vector(3 DOWNTO 0) := X"8";	
                 CONSTANT LS : std_logic_vector(3 DOWNTO 0) := X"9";	
                 CONSTANT GE : std_logic_vector(3 DOWNTO 0) := X"a";	
                 CONSTANT LT : std_logic_vector(3 DOWNTO 0) := X"b";	
                 CONSTANT GT : std_logic_vector(3 DOWNTO 0) := X"c";	
                 CONSTANT LE : std_logic_vector(3 DOWNTO 0) := X"d";	
                 CONSTANT AL : std_logic_vector(3 DOWNTO 0) := X"e";	
                 CONSTANT NV : std_logic_vector(3 DOWNTO 0) := X"f";	
                 CONSTANT LSL : std_logic_vector(1 DOWNTO 0) := "00";	
                 CONSTANT LSR : std_logic_vector(1 DOWNTO 0) := "01";	
                 CONSTANT ASR : std_logic_vector(1 DOWNTO 0) := "10";	
                 CONSTANT RRX : std_logic_vector(1 DOWNTO 0) := "11";	
                 CONSTANT ROR_VHDL : std_logic_vector(1 DOWNTO 0) := "11";	
                 CONSTANT SVC : std_logic_vector(1 DOWNTO 0) := B"11";	
                 CONSTANT IRQ : std_logic_vector(1 DOWNTO 0) := B"10";	
                 CONSTANT FIRQ : std_logic_vector(1 DOWNTO 0) := B"01";	
                 CONSTANT USR : std_logic_vector(1 DOWNTO 0) := B"00";	
                 CONSTANT OH_USR : integer  := 0;	
                 CONSTANT OH_IRQ : integer  := 1;	
                 CONSTANT OH_FIRQ : integer := 2;	
                 CONSTANT OH_SVC : integer  :=  3);

        --CACHE_ADDR_WIDTH : INTEGER := to_integer( UNSIGNED'( log2( CACHE_LINES ) ) );
        --WORD_SEL_WIDTH : INTEGER := to_integer( UNSIGNED'( log2( CACHE_WORDS_PER_LINE ) ) );
        --TAG_ADDR_WIDTH : INTEGER := to_integer( UNSIGNED'( ( ( ( 32  - CACHE_ADDR_WIDTH )  - WORD_SEL_WIDTH )  - 2  )  ) );
        --TAG_WIDTH : INTEGER := to_integer( UNSIGNED'( ( TAG_ADDR_WIDTH + 1  )  ) );
     port (
        reset_b :  in std_logic;
        i_clk :  in std_logic;
        i_select :  in std_logic;
        i_exclusive :  in std_logic;
        i_write_data :  in std_logic_vector( 31  downto 0  );
        i_write_enable :  in std_logic;
        i_address :  in std_logic_vector( 31  downto 0  );
        i_address_nxt :  in std_logic_vector( 31  downto 0  );
        i_byte_enable :  in std_logic_vector( 3  downto 0  );
        i_cache_enable :  in std_logic;
        i_cache_flush :  in std_logic;
        o_read_data :  out std_logic_vector( 31  downto 0  );
        i_core_stall :  in std_logic;
        o_stall :  out std_logic;
        o_wb_req :  out std_logic;
        i_wb_address :  in std_logic_vector( 31  downto 0  );
        i_wb_read_data :  in std_logic_vector( 31  downto 0  );
        i_wb_stall :  in std_logic
    );
end entity; 


architecture rtl of a23_cache is 


    function pcf(   pc_reg : unsigned ( 31  downto 0  ) )  
                   return unsigned is 
        variable  pcf_return_dummy_var : unsigned ( 31  downto 0  );
    begin
        pcf_return_dummy_var := ( "000000"  & pc_reg(25  downto 2 ) & "00"  );
         return pcf_return_dummy_var;
    end;

    function decode( reg_sel : unsigned ( 3  downto 0  ))  return unsigned is 
        variable decode_return_dummy_var : unsigned ( 14  downto 0  );
    begin
        case  ( reg_sel ) is 
	  when X"0"  => 
                decode_return_dummy_var := ("000" &  X"001") ;
            when  X"1"  => 
                decode_return_dummy_var := ("000" & X"002") ;
            when  X"2"  => 
                decode_return_dummy_var := ("000" &  X"004") ;
            when 
                X"3"  => 
                decode_return_dummy_var := ("000" &  X"008") ;
            when 
                X"4"  => 
                decode_return_dummy_var := ("000" &  X"010") ;
            when 
                X"5"  => 
                decode_return_dummy_var := ("000" & X"020") ;
            when 
                X"6"  => 
                decode_return_dummy_var := ("000" & X"040") ;
            when 
                X"7"  => 
                decode_return_dummy_var := ("000" & X"080") ;
            when 
                X"8"  => 
                decode_return_dummy_var := ("000" & X"100") ;
            when 
                X"9"  => 
                decode_return_dummy_var := ("000" & X"200") ;
            when 
                X"a"  => 
                decode_return_dummy_var := ("000" & X"400") ;
            when 
                X"b"  => 
                decode_return_dummy_var := ("000" & X"800");
            when 
                X"c"  => 
                decode_return_dummy_var := ("001" & X"000") ;
            when 
                X"d"  => 
                decode_return_dummy_var := ("010" & X"000");
            when 
                X"e"  => 
                decode_return_dummy_var := ("100" & X"000") ;
            when 
                 others  => 
                decode_return_dummy_var := (X"000" & "000");

        end case;
         return decode_return_dummy_var;
    end;

    function oh_status_bits_mode(fn_status_bits_mode : std_logic_vector( 1  downto 0  ))  return std_logic_vector is 
        variable oh_status_bits_mode_return_dummy_var : std_logic_vector( 3  downto 0  );
    begin
  if (fn_status_bits_mode = SVC) then 
  oh_status_bits_mode_return_dummy_var := To_StdLogicVector ("0001" sll OH_SVC); 
  elsif (fn_status_bits_mode = IRQ) then
  oh_status_bits_mode_return_dummy_var := To_StdLogicVector ("0001" sll OH_IRQ) ;
  elsif (fn_status_bits_mode = FIRQ) then
  oh_status_bits_mode_return_dummy_var := To_StdLogicVector ("0001" sll OH_FIRQ) ;
  else
  oh_status_bits_mode_return_dummy_var := To_StdLogicVector ("0001" sll OH_USR);
  end if;
  return oh_status_bits_mode_return_dummy_var;
   end;

function to_std_logic(c: character) return std_logic is 
    variable sl: std_logic;
    begin
      case c is
        when 'U' => 
           sl := 'U'; 
        when 'X' =>
           sl := 'X';
        when '0' => 
           sl := '0';
        when '1' => 
           sl := '1';
        when 'Z' => 
           sl := 'Z';
        when 'W' => 
           sl := 'W';
        when 'L' => 
           sl := 'L';
        when 'H' => 
           sl := 'H';
        when '-' => 
           sl := '-';
        when others =>
           sl := 'X'; 
    end case;
   return sl;
  end to_std_logic;




function to_std_logic_vector(s: string) return std_logic_vector is 
  variable slv: std_logic_vector(s'high-s'low downto 0);
  variable k: integer;
begin
   k := s'high-s'low;
  for i in s'range loop
     slv(k) := to_std_logic(s(i));
     k      := k - 1;
  end loop;
  return slv;
end to_std_logic_vector;                                       


    function mode_name(  constant mode : std_logic_vector( 4  downto 0  ))  return std_logic_vector is 
        variable mode_name_return_dummy_var : std_logic_vector ( 111  downto 0  );
    begin

	 if ( mode = USR) then
		mode_name_return_dummy_var := to_std_logic_vector ("User");
	 elsif ( mode = SVC) then
		 mode_name_return_dummy_var := to_std_logic_vector("Supervisor");
	 elsif (mode = IRQ) then
		 mode_name_return_dummy_var := to_std_logic_vector("Interrupt"); 
	 elsif (mode = FIRQ) then
	 	mode_name_return_dummy_var := to_std_logic_vector("Fast Interrupt");
	 else
	 	mode_name_return_dummy_var := to_std_logic_vector("UNKNOWN");
	 end if;
         return mode_name_return_dummy_var;
    end;


  FUNCTION conditional_execute (condition : IN std_logic_vector(3 DOWNTO 0);
                 flags : IN std_logic_vector(3 DOWNTO 0)) RETURN std_logic   
 IS 
        VARIABLE conditional_execute : std_logic;	

BEGIN
    if (condition = AL OR (condition = EQ AND 
		To_bit(flags(2)) /= '0') OR (condition = NE AND 
		NOT (To_bit(flags(2)) /= '0')) OR (condition = CS AND 
		To_bit(flags(1)) /= '0') OR (condition = CC AND 
		NOT (To_bit(flags(1)) /= '0')) OR (condition = MI AND 
		To_bit(flags(3)) /= '0') OR (condition = PL AND 
		NOT (To_bit(flags(3)) /= '0')) OR (condition = VS AND 
		To_bit(flags(0)) /= '0') OR (condition = VC AND 
		NOT (To_bit(flags(0)) /= '0')) OR (condition = HI AND 
		To_bit(flags(1)) /= '0' AND NOT (To_bit(flags(2)) /= '0')) OR 
		(condition = LS AND (NOT (To_bit(flags(1)) /= '0') OR 
		To_bit(flags(2)) /= '0')) OR (condition = GE AND 
		flags(3) = flags(0)) OR (condition = LT AND 
		flags(3) /= flags(0)) OR (condition = GT AND 
		NOT (To_bit(flags(2)) /= '0') AND flags(3) = flags(0)) OR 
		(condition = LE AND (To_bit(flags(2)) /= '0' OR 
		flags(3) /= flags(0))))	then
    conditional_execute := '1';
    end if;

    RETURN conditional_execute;
END;

    function log2(  constant num : integer )  return   integer is
        variable log2_return_dummy_var : integer;
        variable i : integer;
    begin
        log2_return_dummy_var := 0 ;
        i := 0 ;
        while ( ( i < 30  )  ) loop
            if ((2**i > num)  and ( log2_return_dummy_var = 0))  then 
                log2_return_dummy_var := ( i - 1 ) ;
            end if;
            i := (i + 1) ;
        end loop;
         return log2_return_dummy_var;
    end;
function Bool_to_Std_Logic(L: BOOLEAN) return std_ulogic is 
     begin 
         if L then 
             return('1'); 
         else 
             return('0'); 
         end if; 
     end function; 

                 CONSTANT WAYS : integer := A23_CACHE_WAYS;
                 CONSTANT CACHE_ADDR_WIDTH : integer := log2( CACHE_LINES );
                 CONSTANT WORD_SEL_WIDTH : integer := log2( CACHE_WORDS_PER_LINE );
                 CONSTANT TAG_ADDR_WIDTH : integer := 32 - CACHE_ADDR_WIDTH - WORD_SEL_WIDTH - 2;
                 CONSTANT TAG_WIDTH : integer := TAG_ADDR_WIDTH +  1;
                 CONSTANT CACHE_LINE_WIDTH : integer := CACHE_WORDS_PER_LINE * 32;
                 CONSTANT TAG_ADDR32_LSB : integer := CACHE_ADDR_WIDTH + WORD_SEL_WIDTH + 2;
                 CONSTANT CACHE_ADDR32_MSB : integer := CACHE_ADDR_WIDTH + WORD_SEL_WIDTH + 2 - 1;
                 CONSTANT CACHE_ADDR32_LSB : integer := WORD_SEL_WIDTH + 2;
                 CONSTANT WORD_SEL_MSB : integer := WORD_SEL_WIDTH + 2 - 1;
                 CONSTANT WORD_SEL_LSB : integer := 2;
                 CONSTANT DATA_WIDTH : integer := 21;
                 CONSTANT ADDRESS_WIDTH : integer := 8;
    type  tagRdWay IS ARRAY((WAYS - 1) DOWNTO 0) OF std_logic_vector(( TAG_WIDTH - 1  )  downto 0  );
    type  dataRdWay IS ARRAY((WAYS - 1) DOWNTO 0) OF std_logic_vector(( CACHE_LINE_WIDTH - 1  )  downto 0  );
    signal c_state : std_logic_vector( 3  downto 0  );
    signal source_sel : std_logic_vector( (C_STATES - 1)  downto 0 );
    signal init_count : std_logic_vector( CACHE_ADDR_WIDTH downto 0  );
    signal tag_rdata_way : tagRdWay;
    signal data_rdata_way : dataRdWay;
    signal data_wenable_way : std_logic_vector( ( WAYS - 1  )  downto 0  );
    signal data_hit_way : std_logic_vector( ( WAYS - 1  )  downto 0  );
    signal tag_wenable_way : std_logic_vector( ( WAYS - 1  )  downto 0  );
    signal select_way : std_logic_vector( ( WAYS - 1  )  downto 0  );
    signal next_way : std_logic_vector( ( WAYS - 1  )  downto 0  );
    signal valid_bits_r : std_logic_vector( ( WAYS - 1  )  downto 0  );
    signal random_num : std_logic_vector( 3  downto 0  );
    signal tag_address : std_logic_vector( ( CACHE_ADDR_WIDTH - 1  )  downto 0  );
    signal tag_wdata : std_logic_vector( ( TAG_WIDTH - 1  )  downto 0  );
    signal tag_wenable : std_logic;
    signal read_miss_wdata : std_logic_vector( ( CACHE_LINE_WIDTH - 1  )  downto 0  );
    signal write_hit_wdata : std_logic_vector( ( CACHE_LINE_WIDTH - 1  )  downto 0  );
    signal data_wdata : std_logic_vector( ( CACHE_LINE_WIDTH - 1  )  downto 0  );
    signal data_address : std_logic_vector( ( CACHE_ADDR_WIDTH - 1  )  downto 0  );
    signal write_data_word : std_logic_vector( 31  downto 0  );
    signal hit : std_logic;
    signal read_miss : std_logic;
    signal write_miss : std_logic;
    signal write_hit : std_logic;
    signal miss_address : std_logic_vector( 31  downto 0  );
    signal hit_rdata : std_logic_vector( ( CACHE_LINE_WIDTH - 1  )  downto 0  );
    signal write_stall : std_logic;
    signal cache_busy_stall : std_logic;
    signal read_stall : std_logic;
    signal enable : std_logic;
    signal address : std_logic_vector( ( CACHE_ADDR_WIDTH - 1  )  downto 0  );
    signal wb_rdata_burst : std_logic_vector( ( CACHE_LINE_WIDTH - 1  )  downto 0  );
    signal wb_read_buf_valid : std_logic;
    signal wb_read_buf_address : std_logic_vector( 31  downto 0  );
    signal wb_read_buf_data : std_logic_vector( 31  downto 0  );
    signal wb_read_buf_hit : std_logic;
    signal exclusive_access : std_logic;
    signal ex_read_hit : std_logic;
    signal ex_read_hit_r : std_logic;
    signal ex_read_hit_way : std_logic_vector( ( WAYS - 1  )  downto 0  );
    signal ex_read_address : std_logic_vector( ( CACHE_ADDR_WIDTH - 1  )  downto 0  );
    signal ex_read_hit_clear : std_logic;
    signal ex_read_cache_busy : std_logic;
    signal o_wb_req_int: std_logic;
    signal o_read_data_int :std_logic_vector( 31  downto 0  );

   constant  CS_INIT : std_logic_vector(3 DOWNTO 0) := "0000";
   constant  CS_IDLE : std_logic_vector(3 DOWNTO 0) := "0001";
   constant  CS_FILL1 : std_logic_vector(3 DOWNTO 0) := "0010";
   constant  CS_FILL2 : std_logic_vector(3 DOWNTO 0) := "0011";
   constant  CS_FILL3 : std_logic_vector(3 DOWNTO 0) := "0100";
   constant  CS_FILL4 : std_logic_vector(3 DOWNTO 0) := "0101";
   constant  CS_FILL_COMPLETE : std_logic_vector(3 DOWNTO 0) := "0110";
   constant  CS_TURN_AROUND : std_logic_vector(3 DOWNTO 0) := "0111";
   constant  CS_WRITE_HIT1 : std_logic_vector(3 DOWNTO 0) := "1000";
   constant  CS_EX_DELETE : std_logic_vector(3 DOWNTO 0) := "1001";
   component bram_addr8_data20
 port
    (
      reset_b        : in  std_logic;
      i_clk          : in  std_logic;
      i_write_data   : in  std_logic_vector(19 downto 0);
      i_write_enable : in  std_logic;
      i_address      : in  std_logic_vector(7 downto 0);
      o_read_data    : out std_logic_vector(19 downto 0)
    );
end component;

   component generic_sram_line_en
generic (
        DATA_WIDTH : INTEGER := 21 ;
        ADDRESS_WIDTH : INTEGER := 8 
    );

  port (
        reset_b :  in std_logic;
        i_clk :  in std_logic;
        i_write_data :  in std_logic_vector( ( DATA_WIDTH - 1  )  downto 0  );
        i_write_enable :  in std_logic;
        i_address :  in std_logic_vector( ( ADDRESS_WIDTH - 1  )  downto 0  );
        o_read_data :  out std_logic_vector( ( DATA_WIDTH - 1  )  downto 0  )
    );
end component;

component bram_addr8_data128
  port
    (
      reset_b        : in  std_logic;
      i_clk          : in  std_logic;
      i_write_data   : in  std_logic_vector(127 downto 0);
      i_write_enable : in  std_logic;
      i_address      : in  std_logic_vector(7 downto 0);
      o_read_data    : out std_logic_vector(127 downto 0)
    );

end component;

    begin 

	o_wb_req <= o_wb_req_int;
        o_read_data <= o_read_data_int ;
        address <= i_address(CACHE_ADDR32_MSB downto CACHE_ADDR32_LSB) when i_core_stall = '1' else
		   i_address_nxt(CACHE_ADDR32_MSB downto CACHE_ADDR32_LSB);


        o_read_data_int <= wb_read_buf_data when wb_read_buf_hit = '1' else
		       hit_rdata(31 downto 0) when i_address(WORD_SEL_MSB downto WORD_SEL_LSB) = "00" else
		       hit_rdata(63 downto 32) when i_address(WORD_SEL_MSB downto WORD_SEL_LSB) = "01" else
		       hit_rdata(95 downto 64) when i_address(WORD_SEL_MSB downto WORD_SEL_LSB) = "10" else
                       hit_rdata(127 downto 96);
	

        o_stall <= (((read_stall or write_stall )  or cache_busy_stall )  or ex_read_cache_busy ) ;
        o_wb_req_int <= ((read_miss or write_miss)  and Bool_to_Std_Logic(c_state = CS_IDLE))  or  Bool_to_Std_Logic(c_state = CS_WRITE_HIT1);

        process 
        begin
            wait until ( i_clk'EVENT and ( i_clk = '1' )  ) ;
            if ((reset_b = '0')) then 
                c_state <= CS_IDLE;
                source_sel <= To_StdLogicVector( "0001"  sll C_CORE ) ;
                init_count <= (others => '0') ;
                select_way <= (others => '0') ;
                random_num <= X"f" ;
            else 
                if ( i_cache_flush = '1') then 
                    c_state <=conv_std_logic_vector(C_INIT,4);
                    source_sel <= To_StdLogicVector( "0001"  sll C_INIT ) ;
                    init_count <= (others => '0');
                else 
                    case  ( c_state ) is 
                        when 
                            CS_INIT => 
                            --if ((init_count < CACHE_LINES(CACHE_ADDR_WIDTH downto 0))) then 
                            if (init_count < CACHE_LINES) then
                                init_count <= (init_count + '1'  ) ;
                                source_sel <= To_StdLogicVector( "0001"  sll C_INIT ) ;
                            else 
                                source_sel <= To_StdLogicVector( "0001"  sll C_CORE ) ;
                                c_state <= CS_TURN_AROUND;
                            end if;
                        when 
                            CS_IDLE => 
                            source_sel <= To_StdLogicVector( "0001"  sll C_CORE ) ;
                            if ((ex_read_hit or ex_read_hit_r) = '1') then 
                                select_way <= ( data_hit_way or ex_read_hit_way) ;
                                c_state <= CS_EX_DELETE;
                                source_sel <= To_StdLogicVector("0001"  sll C_INVA) ;
                            else 
                                if (read_miss = '1' ) then 
                                    if (i_wb_stall = '0' ) then 
                                        c_state <= CS_FILL1;
                                    end if;
                                else 
                                    if ( write_hit = '1') then 
                                        c_state <= CS_WRITE_HIT1;
                                    end if;
                                end if;
                            end if;
                        when 
                            CS_FILL1 => 
                            if (i_wb_stall = '0') then 
                                c_state <= CS_FILL2;
                            end if;
                        when 
                            CS_FILL2 => 
                            if (i_wb_stall = '0') then 
                                c_state <= CS_FILL3;
                            end if;
                        when 
                            CS_FILL3 => 
                            if (i_wb_stall = '0') then 
                                c_state <= CS_FILL4;
                            end if;
                        when 
                            CS_FILL4 => 
                            if (i_wb_stall = '0') then 
                                c_state <= CS_FILL_COMPLETE;
                                source_sel <= To_StdLogicVector( "0001"  sll C_FILL ) ;
                                select_way <= next_way;
                                random_num <= ( random_num(2 ) & random_num(1 ) & random_num(0 ) & ( random_num(3 ) xor random_num(2 ) )  );
                            end if;
                        when 
                            CS_FILL_COMPLETE => 
                            if (i_wb_stall = '0') then 
                                source_sel <= To_StdLogicVector( "0001"  sll C_CORE ) ;
                                c_state <= CS_TURN_AROUND;
                            end if;
                        when 
                            CS_TURN_AROUND => 
                            c_state <= CS_IDLE;
                        when 
                            CS_EX_DELETE => 
                            c_state <= CS_TURN_AROUND;
                            source_sel <= To_StdLogicVector( "0001"  sll C_CORE ) ;
                        when 
                            CS_WRITE_HIT1 => 
                            if ( i_wb_stall ='0') then 
                                c_state <= CS_IDLE;
                            end if;

			when 
			   others => c_state <= c_state;
			

                    end case;
                end if;
            end if;
        end process;

        process 
        begin
            wait until ( i_clk'EVENT and ( i_clk = '1' )  ) ;
            if (reset_b = '0') then 
                wb_rdata_burst <= (others => '0') ;
            else 
                if (i_wb_stall = '0') then 
                    wb_rdata_burst <= ( i_wb_read_data & wb_rdata_burst(127  downto 32 ) );
                end if;
            end if;
        end process;

        process 
        begin
            wait until ( i_clk'EVENT and ( i_clk = '1' )  ) ;
            if ( reset_b = '0'  ) then 
                wb_read_buf_valid <= '0' ;
                wb_read_buf_address <= (others => '0') ;
                wb_read_buf_data <= (others => '0') ;
            else 
                if ( ( ( ( ( c_state = CS_FILL1 )  or ( c_state = CS_FILL2 )  )  or ( c_state = CS_FILL3 )  )  or ( c_state = CS_FILL4 )  )  ) then 
                    if (i_wb_stall = '0') then 
                        wb_read_buf_valid <= '1' ;
                        wb_read_buf_address <= i_wb_address;
                        wb_read_buf_data <= i_wb_read_data;
                    end if;
                else 
                    wb_read_buf_valid <= '0' ;
                end if;
            end if;
        end process;


        process 
        begin
            wait until ( i_clk'EVENT and ( i_clk = '1' )  ) ;
            if (reset_b = '0') then 
                miss_address <= (others => '0');
            else 
                if ( o_wb_req_int = '1') then 
                    miss_address <= i_address;
                end if;
            end if;
        end process;

        ex_read_hit_clear <= Bool_to_Std_Logic( c_state = CS_EX_DELETE ) ;

        process 
        begin
            wait until ( i_clk'EVENT and ( i_clk = '1' )  ) ;
            if (reset_b = '0'  ) then 
                ex_read_hit_r <= '0' ;
                ex_read_hit_way <= (others => '0');
            else 
                if ( ex_read_hit_clear = '1') then 
                    ex_read_hit_r <= '0' ;
                    ex_read_hit_way <= (others => '0');
                else 
                    if ( ex_read_hit = '1') then 
                        ex_read_hit_r <= '1' ;
                        ex_read_hit_way <= data_hit_way;
                    else 
                        if ((c_state = CS_FILL_COMPLETE)  and (ex_read_hit_r = '1')) then 
                            ex_read_hit_way <= select_way;
                        end if;
                    end if;
                end if;
            end if;
        end process;

        process 
        begin
            wait until ( i_clk'EVENT and ( i_clk = '1' )  ) ;
            if (reset_b = '0') then 
                ex_read_address <= (others => '0');
            else 
                if ( ex_read_hit = '1' ) then 
                    ex_read_address <= i_address(CACHE_ADDR32_MSB downto CACHE_ADDR32_LSB);
                end if;
            end if;
        end process;

	tag_address <= miss_address(CACHE_ADDR32_MSB downto CACHE_ADDR32_LSB) when source_sel(C_FILL) = '1' else
                       ex_read_address when source_sel(C_INVA) = '1' else
		       init_count(CACHE_ADDR_WIDTH - 1 downto 0) when source_sel(C_INIT) = '1' else
		       address when source_sel(C_CORE) = '1' else (CACHE_ADDR_WIDTH -1 downto 0 => '0');

	data_address <= i_address(CACHE_ADDR32_MSB downto CACHE_ADDR32_LSB) when write_hit = '1' else
			miss_address(CACHE_ADDR32_MSB downto CACHE_ADDR32_LSB) when source_sel(C_FILL) = '1' else
			address  when source_sel(C_CORE) = '1' else (CACHE_ADDR_WIDTH -1 downto 0 => '0');

       tag_wdata    <= ("1" & miss_address(31 downto TAG_ADDR32_LSB)) when source_sel(C_FILL) = '1' else
			(TAG_WIDTH -1 downto 0 => '0');

	data_wdata  <= write_hit_wdata when (write_hit = '1') and (c_state = CS_IDLE) else
			read_miss_wdata; 

	read_miss_wdata <= wb_rdata_burst when miss_address(3 downto 2) = "00" else
			  (wb_rdata_burst(95 downto 0) & wb_rdata_burst(127 downto 96)) when miss_address( 3 downto 2) = "01" else
			  (wb_rdata_burst(63 downto 0) & wb_rdata_burst(127 downto 64)) when miss_address( 3 downto 2) = "10" else
			  (wb_rdata_burst(31 downto 0) & wb_rdata_burst(127 downto 32));

	write_hit_wdata <= hit_rdata(127 downto 32) & write_data_word when i_address(3 downto 2) = "00" else
			(hit_rdata(127 downto 64) & write_data_word & hit_rdata(31 downto 0)) when i_address(3 downto 2) = "01" else
			(hit_rdata(127 downto 96) & write_data_word & hit_rdata(63 downto 0)) when i_address(3 downto 2) = "10" else
			 write_data_word & hit_rdata(95 downto 0) ;
       
	 write_data_word <= o_read_data_int(31 downto 8) & i_write_data( 7 downto 0) when i_byte_enable = "0001" else		 
              o_read_data_int(31 downto 16) & i_write_data(15 downto 8) & o_read_data_int(7 downto 0) when i_byte_enable = "0010" else		 
             o_read_data_int(31 downto 24) & i_write_data(23 downto 16) & o_read_data_int(15 downto 0) when i_byte_enable = "0100" else		 
            i_write_data(31 downto 24) & o_read_data_int(23 downto 0) when i_byte_enable = "1000" else		 
            o_read_data_int(31 downto 16) & i_write_data(15 downto 0) when i_byte_enable = "0011" else		 
           i_write_data(31 downto 16) & o_read_data_int(15 downto 0) when i_byte_enable = "1100" else		 
    i_write_data;

	tag_wenable <= '1' when source_sel(C_INVA) = '1' else
		       '1' when source_sel(C_FILL)  = '1'else
		       '1' when source_sel(C_INIT)  = '1'else
		       '0' when source_sel(C_CORE)  = '1'else
     			'0';


        enable <= ( i_select and i_cache_enable ) ;
        exclusive_access <= ( i_exclusive and i_cache_enable ) ;
        wb_read_buf_hit <= ( ( enable and Bool_to_Std_Logic( wb_read_buf_address = i_address )  )  and wb_read_buf_valid ) ;
        hit <= OR_REDUCE( data_hit_way );
	        write_hit <= ( ( enable and i_write_enable )  and hit ) ;
        write_miss <= ( ( ( enable and i_write_enable )  and (  not hit )  )  and Bool_to_Std_Logic( c_state /= CS_WRITE_HIT1 )  ) ;
        read_miss <= ( ( enable and (  not i_write_enable )  )  and (  not ( hit or wb_read_buf_hit )  )  ) ;
        ex_read_hit <= ( ( exclusive_access and (  not i_write_enable )  )  and ( hit or wb_read_buf_hit )  ) ;
        ex_read_cache_busy <= ( ( exclusive_access and (  not i_write_enable )  )  and Bool_to_Std_Logic( c_state /= CS_IDLE )  ) ;
        write_stall <= ( ( ( write_hit and Bool_to_Std_Logic( c_state /= CS_WRITE_HIT1 )  )  or ( write_miss and Bool_to_Std_Logic( c_state /= CS_IDLE )  )  )  or i_wb_stall ) ;
        read_stall <= read_miss;
        cache_busy_stall <= ( ( ( Bool_to_Std_Logic( c_state = CS_TURN_AROUND )  or Bool_to_Std_Logic( c_state = CS_FILL1 )  )  and enable )  or Bool_to_Std_Logic( c_state = CS_INIT )  ) ;

 u_tag0: bram_addr8_data20
 port map (
    reset_b        => reset_b,
    i_clk          => i_clk,
    i_write_data   => tag_wdata(19 downto 0),
    i_write_enable => tag_wenable_way(0),
    i_address      => tag_address,
    o_read_data    => tag_rdata_way(0)(19 downto 0));

 u_tag0_line_en: generic_sram_line_en
 generic map (
              DATA_WIDTH            => 1,
	      ADDRESS_WIDTH         => CACHE_ADDR_WIDTH)
 port map (
    reset_b        => reset_b,
    i_clk          => i_clk,
    i_write_data   => tag_wdata(20 downto 20),
    i_write_enable => tag_wenable_way(0),
    i_address      => tag_address,
    o_read_data    => tag_rdata_way(0)(20 downto 20));


 u_data0:bram_addr8_data128
port map (
    reset_b        => reset_b,
    i_clk          => i_clk,
    i_write_data   => data_wdata,
    i_write_enable => data_wenable_way(0),
    i_address      => data_address,
    o_read_data    => data_rdata_way(0));


 u_tag1: bram_addr8_data20
 port map (
    reset_b        => reset_b,
    i_clk          => i_clk,
    i_write_data   => tag_wdata(19 downto 0),
    i_write_enable => tag_wenable_way(1),
    i_address      => tag_address,
    o_read_data    => tag_rdata_way(1)(19 downto 0));



 u_tag1_line_en: generic_sram_line_en
 generic map (
              DATA_WIDTH            => 1,
	      ADDRESS_WIDTH         => CACHE_ADDR_WIDTH)
 port map (
    reset_b        => reset_b,
    i_clk          => i_clk,
    i_write_data   => tag_wdata(20 downto 20),
    i_write_enable => tag_wenable_way(1),
    i_address      => tag_address,
    o_read_data    => tag_rdata_way(1)(20 downto 20));

 u_data1:bram_addr8_data128
port map (
    reset_b        => reset_b,
    i_clk          => i_clk,
    i_write_data   => data_wdata,
    i_write_enable => data_wenable_way(1),
    i_address      => data_address,
    o_read_data    => data_rdata_way(1));


  tag_wenable_way(0) <= tag_wenable and (select_way(0) or source_sel(C_INIT));
  data_wenable_way(0) <= (source_sel(C_FILL) and select_way(0)) or 
                         (write_hit and data_hit_way(0) and Bool_to_Std_Logic(c_state = CS_IDLE));

  data_hit_way(0) <= tag_rdata_way(0)(TAG_WIDTH -1) and 
                     Bool_to_Std_Logic(tag_rdata_way(0)(TAG_ADDR_WIDTH -1 downto 0) = i_address(31 downto TAG_ADDR32_LSB)) and
		     Bool_to_Std_Logic(c_state = CS_IDLE); 

  tag_wenable_way(1) <= tag_wenable and (select_way(1) or source_sel(C_INIT));
  data_wenable_way(1) <= (source_sel(C_FILL) and select_way(1)) or 
                         (write_hit and data_hit_way(1) and Bool_to_Std_Logic(c_state = CS_IDLE));

  data_hit_way(1) <= tag_rdata_way(1)(TAG_WIDTH -1) and 
                     Bool_to_Std_Logic(tag_rdata_way(1)(TAG_ADDR_WIDTH -1 downto 0) = i_address(31 downto TAG_ADDR32_LSB)) and
		     Bool_to_Std_Logic(c_state = CS_IDLE); 


        process 
        begin
            wait until ( i_clk'EVENT and ( i_clk = '1' )  ) ;
            if (reset_b = '0') then 
                valid_bits_r <= (others => '0');
            elsif (c_state = CS_IDLE) then
		 valid_bits_r <= (tag_rdata_way(1)(TAG_WIDTH -1) & tag_rdata_way(1)(TAG_WIDTH -1));
	    end if;
	end process;
               
       hit_rdata <= data_rdata_way(0) when data_hit_way(0) = '1' else
	            data_rdata_way(1) when data_hit_way(1) = '1' else
		    (CACHE_LINE_WIDTH -1 downto 0 => '0');



    process(valid_bits_r, random_num)
	begin
        if (valid_bits_r(0) = '0' ) then
            next_way     <= "01";
        elsif (valid_bits_r(1) = '0' )then
           next_way     <= "10";
        else
            case random_num(3 downto 1) is
              when "000"|"011"|"101"|"110" =>  
                 next_way <= "10";
              when others =>    next_way <= "01";
            end case;
         end if;
         end process;

    end rtl; 



-- This VHDL was converted from Verilog using the
-- Icarus Verilog VHDL Code Generator 0.10.0 (devel) ()

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

-- Generated from Verilog module a23_coprocessor (a23_coprocessor.v:1)
entity a23_coprocessor is
  port (
    i_clk : in std_logic;
    i_copro_crm : in unsigned(3 downto 0);
    i_copro_crn : in unsigned(3 downto 0);
    i_copro_num : in unsigned(3 downto 0);
    i_copro_opcode1 : in unsigned(2 downto 0);
    i_copro_opcode2 : in unsigned(2 downto 0);
    i_copro_operation : in unsigned(1 downto 0);
    i_copro_write_data : in unsigned(31 downto 0);
    i_fault : in std_logic;
    i_fault_address : in unsigned(31 downto 0);
    i_fault_status : in unsigned(7 downto 0);
    i_fetch_stall : in std_logic;
    o_cache_enable : out std_logic;
    o_cache_flush : out std_logic;
    o_cacheable_area : out unsigned(31 downto 0);
    o_copro_read_data : out unsigned(31 downto 0);
    reset_b : in std_logic
  );
end entity; 

-- Generated from Verilog module a23_coprocessor (a23_coprocessor.v:1)
architecture from_verilog of a23_coprocessor is
  signal o_copro_read_data_Reg : unsigned(31 downto 0);
  signal tmp_s10 : std_logic;  -- Temporary created at a23_coprocessor.v:84
  signal tmp_s12 : std_logic;  -- Temporary created at a23_coprocessor.v:84
  signal tmp_s14 : unsigned(3 downto 0);  -- Temporary created at a23_coprocessor.v:84
  signal tmp_s16 : std_logic;  -- Temporary created at a23_coprocessor.v:84
  signal tmp_s7 : std_logic;  -- Temporary created at a23_coprocessor.v:84
  signal tmp_s8 : unsigned(1 downto 0);  -- Temporary created at a23_coprocessor.v:84
  signal cache_control : unsigned(2 downto 0);  -- Declared at a23_coprocessor.v:24
  signal cacheable_area : unsigned(31 downto 0);  -- Declared at a23_coprocessor.v:26
  signal copro15_reg1_write : std_logic;  -- Declared at a23_coprocessor.v:36
  signal disruptive_area : unsigned(31 downto 0);  -- Declared at a23_coprocessor.v:30
  signal fault_address : unsigned(31 downto 0);  -- Declared at a23_coprocessor.v:34
  signal fault_status : unsigned(7 downto 0);  -- Declared at a23_coprocessor.v:33
  signal updateable_area : unsigned(31 downto 0);  -- Declared at a23_coprocessor.v:28
begin
  o_copro_read_data <= o_copro_read_data_Reg;
  o_cache_flush <= copro15_reg1_write;
  o_cacheable_area <= cacheable_area;
  tmp_s12 <= tmp_s7 and tmp_s10;
  copro15_reg1_write <= tmp_s12 and tmp_s16;
  o_cache_enable <= cache_control(0);
  tmp_s7 <= not i_fetch_stall;
  tmp_s10 <= '1' when i_copro_operation = tmp_s8 else '0';
  tmp_s16 <= '1' when i_copro_crn = tmp_s14 else '0';
  tmp_s14 <= X"1";
  tmp_s8 <= "10";
  
  -- Generated from always process in a23_coprocessor (a23_coprocessor.v:43)
  process 
  begin
    if rising_edge(i_clk) then
      if (not reset_b) = '1' then
        fault_status <= X"00";
        fault_address <= X"00000000";
      else
        if (not i_fetch_stall) = '1' then
          if i_fault = '1' then
            fault_status <= i_fault_status;
            fault_address <= i_fault_address;
          end if;
        end if;
      end if;
    end if;
  end process;
  
  -- Generated from always process in a23_coprocessor (a23_coprocessor.v:64)
  process (i_clk) is
  begin
    if rising_edge(i_clk) then
      if (not reset_b) = '1' then
        cache_control <= "000";
        cacheable_area <= X"00000000";
        updateable_area <= X"00000000";
        disruptive_area <= X"00000000";
      else
        if (not i_fetch_stall) = '1' then
          if i_copro_operation = "10" then
            case i_copro_crn is
              when X"2" =>
                cache_control <= i_copro_write_data(0 + 2 downto 0);
              when X"3" =>
                cacheable_area <= i_copro_write_data;
              when X"4" =>
                updateable_area <= i_copro_write_data;
              when X"5" =>
                disruptive_area <= i_copro_write_data;
              when others =>
                null;
            end case;
          end if;
        end if;
      end if;
    end if;
  end process;
  
  -- Generated from always process in a23_coprocessor (a23_coprocessor.v:87)
  process 
  begin
    if rising_edge(i_clk) then
      if (not reset_b) = '1' then
        o_copro_read_data_Reg <= X"00000000";
      else
        if (not i_fetch_stall) = '1' then
          case i_copro_crn is
            when X"0" =>
              o_copro_read_data_Reg <= X"41560300";
            when X"2" =>
              o_copro_read_data_Reg <= "00000000000000000000000000000" & cache_control;
            when X"3" =>
              o_copro_read_data_Reg <= cacheable_area;
            when X"4" =>
              o_copro_read_data_Reg <= updateable_area;
            when X"5" =>
              o_copro_read_data_Reg <= disruptive_area;
            when X"6" =>
              o_copro_read_data_Reg <= X"000000" & fault_status;
            when X"7" =>
              o_copro_read_data_Reg <= fault_address;
            when others =>
              o_copro_read_data_Reg <= X"00000000";
          end case;
        end if;
      end if;
    end if;
  end process;
end from_verilog;


--------------------------------------------------------------
--------------------------------------------------------------
--                                                          --
-- This VHDL file has been generated by the verilog2vhdl    --
-- tool.                                                    --
-- Contact help@edautils.com  for support/info.--
--                                                          --
--                                                          --
--------------------------------------------------------------
--------------------------------------------------------------
--
--
-- Assumptions: 
--         (1) All the parameters are of type INTEGER, and hence the translated generics are of this type
--
LIBRARY ieee, synopsys;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;
USE ieee.std_logic_signed.all;
use ieee.std_logic_misc.all;
use ieee.std_logic_textio.all;
use synopsys.attributes.all;

entity a23_core is 
     port (
        reset_b :  in std_logic;
        i_clk :  in std_logic;
        i_irq :  in std_logic;
        i_firq :  in std_logic;
        i_system_rdy :  in std_logic;
        o_jtag_pc :  out std_logic_vector( 31  downto 0  );
        o_wb_adr :  out std_logic_vector( 31  downto 0  );
        o_wb_sel :  out std_logic_vector( 3  downto 0  );
        o_wb_we :  out std_logic;
        i_wb_dat :  in std_logic_vector( 31  downto 0  );
        o_wb_dat :  out std_logic_vector( 31  downto 0  );
        o_wb_cyc :  out std_logic;
        o_wb_stb :  out std_logic;
        i_wb_ack :  in std_logic;
        i_wb_err :  in std_logic;
        o_cpuwait :  out std_logic
    );
end entity; 


architecture rtl of a23_core is 
    signal execute_address : std_logic_vector( 31  downto 0  );
    signal execute_address_valid : std_logic;
    signal execute_address_nxt : std_logic_vector( 31  downto 0  );
    signal write_data : std_logic_vector( 31  downto 0  );
    signal write_enable : std_logic;
    signal read_data : std_logic_vector( 31  downto 0  );
    signal priviledged : std_logic;
    signal exclusive_exec : std_logic;
    signal data_access_exec : std_logic;
    signal byte_enable : std_logic_vector( 3  downto 0  );
    signal data_access : std_logic;
    signal exclusive : std_logic;
    signal cache_enable : std_logic;
    signal cache_flush : std_logic;
    signal cacheable_area : std_logic_vector( 31  downto 0  );
    signal fetch_stall : std_logic;
    signal status_bits_mode : std_logic_vector( 1  downto 0  );
    signal status_bits_irq_mask : std_logic;
    signal status_bits_firq_mask : std_logic;
    signal status_bits_flags_wen : std_logic;
    signal status_bits_mode_wen : std_logic;
    signal status_bits_irq_mask_wen : std_logic;
    signal status_bits_firq_mask_wen : std_logic;
    signal execute_status_bits : std_logic_vector( 31  downto 0  );
    signal imm32 : std_logic_vector( 31  downto 0  );
    signal imm_shift_amount : std_logic_vector( 4  downto 0  );
    signal shift_imm_zero : std_logic;
    signal condition : std_logic_vector( 3  downto 0  );
    signal read_data_s2 : std_logic_vector( 31  downto 0  );
    signal read_data_alignment : std_logic_vector( 4  downto 0  );
    signal rm_sel : std_logic_vector( 3  downto 0  );
    signal rds_sel : std_logic_vector( 3  downto 0  );
    signal rn_sel : std_logic_vector( 3  downto 0  );
    signal barrel_shift_amount_sel : std_logic_vector( 1  downto 0  );
    signal barrel_shift_data_sel : std_logic_vector( 1  downto 0  );
    signal barrel_shift_function : std_logic_vector( 1  downto 0  );
    signal alu_function : std_logic_vector( 8  downto 0  );
    signal multiply_function : std_logic_vector( 1  downto 0  );
    signal interrupt_vector_sel : std_logic_vector( 2  downto 0  );
    signal address_sel : std_logic_vector( 3  downto 0  );
    signal pc_sel : std_logic_vector( 1  downto 0  );
    signal byte_enable_sel : std_logic_vector( 1  downto 0  );
    signal status_bits_sel : std_logic_vector( 2  downto 0  );
    signal reg_write_sel : std_logic_vector( 2  downto 0  );
    signal user_mode_regs_load : std_logic;
    signal user_mode_regs_store_nxt : std_logic;
    signal firq_not_user_mode : std_logic;
    signal write_data_wen : std_logic;
    signal copro_write_data_wen : std_logic;
    signal base_address_wen : std_logic;
    signal pc_wen : std_logic;
    signal reg_bank_wen : std_logic_vector( 14  downto 0  );
    signal copro_opcode1 : std_logic_vector( 2  downto 0  );
    signal copro_opcode2 : std_logic_vector( 2  downto 0  );
    signal copro_crn : std_logic_vector( 3  downto 0  );
    signal copro_crm : std_logic_vector( 3  downto 0  );
    signal copro_num : std_logic_vector( 3  downto 0  );
    signal copro_operation : std_logic_vector( 1  downto 0  );
    signal copro_read_data : std_logic_vector( 31  downto 0  );
    signal copro_write_data : std_logic_vector( 31  downto 0  );
    signal multiply_done : std_logic;
    signal decode_fault : std_logic;
    signal iabt_trigger : std_logic;
    signal dabt_trigger : std_logic;
    signal decode_fault_status : std_logic_vector( 7  downto 0  );
    signal iabt_fault_status : std_logic_vector( 7  downto 0  );
    signal dabt_fault_status : std_logic_vector( 7  downto 0  );
    signal decode_fault_address : std_logic_vector( 31  downto 0  );
    signal iabt_fault_address : std_logic_vector( 31  downto 0  );
    signal dabt_fault_address : std_logic_vector( 31  downto 0  );
    signal adex : std_logic;
    signal address4fetch :std_logic_vector(31 downto 0);
    component a23_fetch is 
         port (
            reset_b :  in std_logic;
            i_clk :  in std_logic;
            i_address :  in std_logic_vector(31 downto 0);
            i_address_valid :  in std_logic;
            i_address_nxt :  in std_logic_vector( 31  downto 0  );
            i_write_data :  in std_logic_vector( 31  downto 0  );
            i_write_enable :  in std_logic;
            o_read_data :  out std_logic_vector( 31  downto 0  );
            i_priviledged :  in std_logic;
            i_byte_enable :  in std_logic_vector( 3  downto 0  );
            i_data_access :  in std_logic;
            i_exclusive :  in std_logic;
            i_cache_enable :  in std_logic;
            i_cache_flush :  in std_logic;
            i_cacheable_area :  in std_logic_vector( 31  downto 0  );
            i_system_rdy :  in std_logic;
            o_fetch_stall :  out std_logic;
            o_wb_adr :  out std_logic_vector( 31  downto 0  );
            o_wb_sel :  out std_logic_vector( 3  downto 0  );
            o_wb_we :  out std_logic;
            i_wb_dat :  in std_logic_vector( 31  downto 0  );
            o_wb_dat :  out std_logic_vector( 31  downto 0  );
            o_wb_cyc :  out std_logic;
            o_wb_stb :  out std_logic;
            i_wb_ack :  in std_logic;
            i_wb_err :  in std_logic
        );
    end component; 
    component a23_decode is 
         port (
            reset_b :  in std_logic;
            i_clk :  in std_logic;
            i_read_data :  in std_logic_vector( 31  downto 0  );
            i_execute_address :  inout std_logic_vector( 31  downto 0  );
            i_adex :  in std_logic;
            i_iabt :  in std_logic;
            i_dabt :  in std_logic;
            i_abt_status :  in std_logic_vector(7 downto 0);
            o_read_data :  out std_logic_vector( 31  downto 0  );
            o_read_data_alignment :  out std_logic_vector( 4  downto 0  );
            i_irq :  in std_logic;
            i_firq :  in std_logic;
            i_fetch_stall :  in std_logic;
            i_execute_status_bits :  in std_logic_vector( 31  downto 0  );
            i_multiply_done :  inout std_logic;
            o_status_bits_mode :  out std_logic_vector( 1  downto 0  );
            o_status_bits_irq_mask :  out std_logic;
            o_status_bits_firq_mask :  out std_logic;
            o_imm32 :  out std_logic_vector( 31  downto 0  );
            o_imm_shift_amount :  out std_logic_vector( 4  downto 0  );
            o_shift_imm_zero :  out std_logic;
            o_condition :  out std_logic_vector( 3  downto 0  );
            o_exclusive_exec :  out std_logic;
            o_data_access_exec :  out std_logic;
            o_rm_sel :  out std_logic_vector( 3  downto 0  );
            o_rds_sel :  out std_logic_vector( 3  downto 0  );
            o_rn_sel :  out std_logic_vector( 3  downto 0  );
            o_barrel_shift_amount_sel :  out std_logic_vector( 1  downto 0  );
            o_barrel_shift_data_sel :  out std_logic_vector( 1  downto 0  );
            o_barrel_shift_function :  out std_logic_vector( 1  downto 0  );
            o_alu_function :  out std_logic_vector( 8  downto 0  );
            o_multiply_function :  out std_logic_vector( 1  downto 0  );
            o_interrupt_vector_sel :  out std_logic_vector( 2  downto 0  );
            o_address_sel :  out std_logic_vector( 3  downto 0  );
            o_pc_sel :  out std_logic_vector( 1  downto 0  );
            o_byte_enable_sel :  out std_logic_vector( 1  downto 0  );
            o_status_bits_sel :  out std_logic_vector( 2  downto 0  );
            o_reg_write_sel :  out std_logic_vector( 2  downto 0  );
            o_user_mode_regs_load :  out std_logic;
            o_user_mode_regs_store_nxt :  out std_logic;
            o_firq_not_user_mode :  out std_logic;
            o_write_data_wen :  out std_logic;
            o_base_address_wen :  out std_logic;
            o_pc_wen :  out std_logic;
            o_reg_bank_wen :  out std_logic_vector( 14  downto 0  );
            o_status_bits_flags_wen :  out std_logic;
            o_status_bits_mode_wen :  out std_logic;
            o_status_bits_irq_mask_wen :  out std_logic;
            o_status_bits_firq_mask_wen :  out std_logic;
            o_copro_opcode1 :  out std_logic_vector( 2  downto 0  );
            o_copro_opcode2 :  out std_logic_vector( 2  downto 0  );
            o_copro_crn :  out std_logic_vector( 3  downto 0  );
            o_copro_crm :  out std_logic_vector( 3  downto 0  );
            o_copro_num :  out std_logic_vector( 3  downto 0  );
            o_copro_operation :  out std_logic_vector( 1  downto 0  );
            o_copro_write_data_wen :  out std_logic;
            o_iabt_trigger :  out std_logic;
            o_iabt_address :  out std_logic_vector( 31  downto 0  );
            o_iabt_status :  out std_logic_vector( 7  downto 0  );
            o_dabt_trigger :  out std_logic;
            o_dabt_address :  out std_logic_vector( 31  downto 0  );
            o_dabt_status :  out std_logic_vector( 7  downto 0  )
        );
    end component; 
    component a23_execute is 
         port (
            reset_b :  in std_logic;
            i_clk :  in std_logic;
            i_read_data :  in std_logic_vector( 31  downto 0  );
            i_read_data_alignment :  in std_logic_vector( 4  downto 0  );
            i_copro_read_data :  in std_logic_vector( 31  downto 0  );
            o_write_data :  out std_logic_vector( 31  downto 0  );
            o_copro_write_data :  out std_logic_vector( 31  downto 0  );
            o_address :  out std_logic_vector( 31  downto 0  );
            o_address_valid :  out std_logic;
            o_address_nxt :  out std_logic_vector( 31  downto 0  );
            o_adex :  out std_logic;
            o_byte_enable :  out std_logic_vector( 3  downto 0  );
            o_data_access :  out std_logic;
            o_write_enable :  out std_logic;
            o_exclusive :  out std_logic;
            o_priviledged :  out std_logic;
            o_status_bits :  out std_logic_vector( 31  downto 0  );
            o_multiply_done :  out std_logic;
            jtag_pc :  out std_logic_vector( 31  downto 0  );
            i_fetch_stall :  in std_logic;
            i_status_bits_mode :  in std_logic_vector( 1  downto 0  );
            i_status_bits_irq_mask :  in std_logic;
            i_status_bits_firq_mask :  in std_logic;
            i_imm32 :  in std_logic_vector( 31  downto 0  );
            i_imm_shift_amount :  in std_logic_vector( 4  downto 0  );
            i_shift_imm_zero :  in std_logic;
            i_condition :  in std_logic_vector( 3  downto 0  );
            i_exclusive_exec :  in std_logic;
            i_data_access_exec :  in std_logic;
            i_rm_sel :  in std_logic_vector( 3  downto 0  );
            i_rds_sel :  in std_logic_vector( 3  downto 0  );
            i_rn_sel :  in std_logic_vector( 3  downto 0  );
            i_barrel_shift_amount_sel :  in std_logic_vector( 1  downto 0  );
            i_barrel_shift_data_sel :  in std_logic_vector( 1  downto 0  );
            i_barrel_shift_function :  in std_logic_vector( 1  downto 0  );
            i_alu_function :  in std_logic_vector( 8  downto 0  );
            i_multiply_function :  in std_logic_vector( 1  downto 0  );
            i_interrupt_vector_sel :  in std_logic_vector( 2  downto 0  );
            i_address_sel :  in std_logic_vector( 3  downto 0  );
            i_pc_sel :  in std_logic_vector( 1  downto 0  );
            i_byte_enable_sel :  in std_logic_vector( 1  downto 0  );
            i_status_bits_sel :  in std_logic_vector( 2  downto 0  );
            i_reg_write_sel :  in std_logic_vector( 2  downto 0  );
            i_user_mode_regs_load :  in std_logic;
            i_user_mode_regs_store_nxt :  in std_logic;
            i_firq_not_user_mode :  in std_logic;
            i_write_data_wen :  in std_logic;
            i_base_address_wen :  in std_logic;
            i_pc_wen :  in std_logic;
            i_reg_bank_wen :  in std_logic_vector( 14  downto 0  );
            i_status_bits_flags_wen :  in std_logic;
            i_status_bits_mode_wen :  in std_logic;
            i_status_bits_irq_mask_wen :  in std_logic;
            i_status_bits_firq_mask_wen :  in std_logic;
            i_copro_write_data_wen :  in std_logic
        );
    end component; 
    component a23_coprocessor is 
         port (
            reset_b :  in std_logic;
            i_clk :  in std_logic;
            i_fetch_stall :  in std_logic;
            i_copro_opcode1 :  in std_logic_vector( 2  downto 0  );
            i_copro_opcode2 :  in std_logic_vector( 2  downto 0  );
            i_copro_crn :  in std_logic_vector( 3  downto 0  );
            i_copro_crm :  in std_logic_vector( 3  downto 0  );
            i_copro_num :  in std_logic_vector( 3  downto 0  );
            i_copro_operation :  in std_logic_vector( 1  downto 0  );
            i_copro_write_data :  in std_logic_vector( 31  downto 0  );
            i_fault :  in std_logic;
            i_fault_status :  in std_logic_vector( 7  downto 0  );
            i_fault_address :  in std_logic_vector( 31  downto 0  );
            o_copro_read_data :  out std_logic_vector( 31  downto 0  );
            o_cache_enable :  out std_logic;
            o_cache_flush :  out std_logic;
            o_cacheable_area :  out std_logic_vector( 31  downto 0  )
        );
    end component; 
    begin 
        decode_fault_status <= dabt_fault_status when dabt_trigger = '1' else iabt_fault_status;
        decode_fault_address <= dabt_fault_address when dabt_trigger = '1' else iabt_fault_address;
        decode_fault <= ( dabt_trigger or iabt_trigger ) ;
        o_cpuwait <= fetch_stall;


         address4fetch <= ( execute_address(31  downto 2 ) & "00" );
        u_fetch : a23_fetch
            port map (
                i_address => address4fetch,
                i_address_nxt => execute_address_nxt,
                i_address_valid => execute_address_valid,
                i_byte_enable => byte_enable,
                i_cache_enable => cache_enable,
                i_cache_flush => cache_flush,
                i_cacheable_area => cacheable_area,
                i_clk => i_clk,
                i_data_access => data_access,
                i_exclusive => exclusive,
                i_priviledged => priviledged,
                i_system_rdy => i_system_rdy,
                i_wb_ack => i_wb_ack,
                i_wb_dat => i_wb_dat,
                i_wb_err => i_wb_err,
                i_write_data => write_data,
                i_write_enable => write_enable,
                o_fetch_stall => fetch_stall,
                o_read_data => read_data,
                o_wb_adr => o_wb_adr,
                o_wb_cyc => o_wb_cyc,
                o_wb_dat => o_wb_dat,
                o_wb_sel => o_wb_sel,
                o_wb_stb => o_wb_stb,
                o_wb_we => o_wb_we,
                reset_b => reset_b
                );
        u_decode : a23_decode
            port map (
                i_abt_status => (others => '0') ,
                i_adex => adex,
                i_clk => i_clk,
                i_dabt => '0' ,
                i_execute_address => execute_address,
                i_execute_status_bits => execute_status_bits,
                i_fetch_stall => fetch_stall,
                i_firq => i_firq,
                i_iabt => '0' ,
                i_irq => i_irq,
                i_multiply_done => multiply_done,
                i_read_data => read_data,
                o_address_sel => address_sel,
                o_alu_function => alu_function,
                o_barrel_shift_amount_sel => barrel_shift_amount_sel,
                o_barrel_shift_data_sel => barrel_shift_data_sel,
                o_barrel_shift_function => barrel_shift_function,
                o_base_address_wen => base_address_wen,
                o_byte_enable_sel => byte_enable_sel,
                o_condition => condition,
                o_copro_crm => copro_crm,
                o_copro_crn => copro_crn,
                o_copro_num => copro_num,
                o_copro_opcode1 => copro_opcode1,
                o_copro_opcode2 => copro_opcode2,
                o_copro_operation => copro_operation,
                o_copro_write_data_wen => copro_write_data_wen,
                o_dabt_address => dabt_fault_address,
                o_dabt_status => dabt_fault_status,
                o_dabt_trigger => dabt_trigger,
                o_data_access_exec => data_access_exec,
                o_exclusive_exec => exclusive_exec,
                o_firq_not_user_mode => firq_not_user_mode,
                o_iabt_address => iabt_fault_address,
                o_iabt_status => iabt_fault_status,
                o_iabt_trigger => iabt_trigger,
                o_imm32 => imm32,
                o_imm_shift_amount => imm_shift_amount,
                o_interrupt_vector_sel => interrupt_vector_sel,
                o_multiply_function => multiply_function,
                o_pc_sel => pc_sel,
                o_pc_wen => pc_wen,
                o_rds_sel => rds_sel,
                o_read_data => read_data_s2,
                o_read_data_alignment => read_data_alignment,
                o_reg_bank_wen => reg_bank_wen,
                o_reg_write_sel => reg_write_sel,
                o_rm_sel => rm_sel,
                o_rn_sel => rn_sel,
                o_shift_imm_zero => shift_imm_zero,
                o_status_bits_firq_mask => status_bits_firq_mask,
                o_status_bits_firq_mask_wen => status_bits_firq_mask_wen,
                o_status_bits_flags_wen => status_bits_flags_wen,
                o_status_bits_irq_mask => status_bits_irq_mask,
                o_status_bits_irq_mask_wen => status_bits_irq_mask_wen,
                o_status_bits_mode => status_bits_mode,
                o_status_bits_mode_wen => status_bits_mode_wen,
                o_status_bits_sel => status_bits_sel,
                o_user_mode_regs_load => user_mode_regs_load,
                o_user_mode_regs_store_nxt => user_mode_regs_store_nxt,
                o_write_data_wen => write_data_wen,
                reset_b => reset_b
                );
        u_execute : a23_execute
            port map (
                i_address_sel => address_sel,
                i_alu_function => alu_function,
                i_barrel_shift_amount_sel => barrel_shift_amount_sel,
                i_barrel_shift_data_sel => barrel_shift_data_sel,
                i_barrel_shift_function => barrel_shift_function,
                i_base_address_wen => base_address_wen,
                i_byte_enable_sel => byte_enable_sel,
                i_clk => i_clk,
                i_condition => condition,
                i_copro_read_data => copro_read_data,
                i_copro_write_data_wen => copro_write_data_wen,
                i_data_access_exec => data_access_exec,
                i_exclusive_exec => exclusive_exec,
                i_fetch_stall => fetch_stall,
                i_firq_not_user_mode => firq_not_user_mode,
                i_imm32 => imm32,
                i_imm_shift_amount => imm_shift_amount,
                i_interrupt_vector_sel => interrupt_vector_sel,
                i_multiply_function => multiply_function,
                i_pc_sel => pc_sel,
                i_pc_wen => pc_wen,
                i_rds_sel => rds_sel,
                i_read_data => read_data_s2,
                i_read_data_alignment => read_data_alignment,
                i_reg_bank_wen => reg_bank_wen,
                i_reg_write_sel => reg_write_sel,
                i_rm_sel => rm_sel,
                i_rn_sel => rn_sel,
                i_shift_imm_zero => shift_imm_zero,
                i_status_bits_firq_mask => status_bits_firq_mask,
                i_status_bits_firq_mask_wen => status_bits_firq_mask_wen,
                i_status_bits_flags_wen => status_bits_flags_wen,
                i_status_bits_irq_mask => status_bits_irq_mask,
                i_status_bits_irq_mask_wen => status_bits_irq_mask_wen,
                i_status_bits_mode => status_bits_mode,
                i_status_bits_mode_wen => status_bits_mode_wen,
                i_status_bits_sel => status_bits_sel,
                i_user_mode_regs_load => user_mode_regs_load,
                i_user_mode_regs_store_nxt => user_mode_regs_store_nxt,
                i_write_data_wen => write_data_wen,
                jtag_pc => o_jtag_pc,
                o_address => execute_address,
                o_address_nxt => execute_address_nxt,
                o_address_valid => execute_address_valid,
                o_adex => adex,
                o_byte_enable => byte_enable,
                o_copro_write_data => copro_write_data,
                o_data_access => data_access,
                o_exclusive => exclusive,
                o_multiply_done => multiply_done,
                o_priviledged => priviledged,
                o_status_bits => execute_status_bits,
                o_write_data => write_data,
                o_write_enable => write_enable,
                reset_b => reset_b
                );
        u_coprocessor : a23_coprocessor
            port map (
                i_clk => i_clk,
                i_copro_crm => copro_crm,
                i_copro_crn => copro_crn,
                i_copro_num => copro_num,
                i_copro_opcode1 => copro_opcode1,
                i_copro_opcode2 => copro_opcode2,
                i_copro_operation => copro_operation,
                i_copro_write_data => copro_write_data,
                i_fault => decode_fault,
                i_fault_address => decode_fault_address,
                i_fault_status => decode_fault_status,
                i_fetch_stall => fetch_stall,
                o_cache_enable => cache_enable,
                o_cache_flush => cache_flush,
                o_cacheable_area => cacheable_area,
                o_copro_read_data => copro_read_data,
                reset_b => reset_b
                );
end rtl; 




library IEEE;

use IEEE.std_logic_1164.all;

package CONV_PACK_a23_wishbone is

-- define attributes
attribute ENUM_ENCODING : STRING;

-- define any necessary types
type UNSIGNED is array (INTEGER range <>) of std_logic;

end CONV_PACK_a23_wishbone;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_a23_wishbone.all;

entity a23_wishbone is

   port( i_address : in UNSIGNED (31 downto 0);  i_byte_enable : in UNSIGNED (3
         downto 0);  i_cache_req, i_clk, i_data_access, i_exclusive, i_select, 
         i_wb_ack : in std_logic;  i_wb_dat : in UNSIGNED (31 downto 0);  
         i_wb_err : in std_logic;  i_write_data : in UNSIGNED (31 downto 0);  
         i_write_enable : in std_logic;  o_stall : out std_logic;  o_wb_adr : 
         out UNSIGNED (31 downto 0);  o_wb_cyc : out std_logic;  o_wb_dat : out
         UNSIGNED (31 downto 0);  o_wb_sel : out UNSIGNED (3 downto 0);  
         o_wb_stb, o_wb_we : out std_logic;  reset_b : in std_logic);

end a23_wishbone;

architecture SYN_from_verilog of a23_wishbone is

   component INVX0
      port( INP : in std_logic;  ZN : out std_logic);
   end component;
   
   component NAND2X1
      port( IN1, IN2 : in std_logic;  QN : out std_logic);
   end component;
   
   component NOR2X0
      port( IN1, IN2 : in std_logic;  QN : out std_logic);
   end component;
   
   component OA21X1
      port( IN1, IN2, IN3 : in std_logic;  Q : out std_logic);
   end component;
   
   component OAI21X1
      port( IN1, IN2, IN3 : in std_logic;  QN : out std_logic);
   end component;
   
   component AND2X1
      port( IN1, IN2 : in std_logic;  Q : out std_logic);
   end component;
   
   component MUX21X1
      port( IN1, IN2, S : in std_logic;  Q : out std_logic);
   end component;
   
   component NAND3X0
      port( IN1, IN2, IN3 : in std_logic;  QN : out std_logic);
   end component;
   
   component AND3X1
      port( IN1, IN2, IN3 : in std_logic;  Q : out std_logic);
   end component;
   
   component AO21X1
      port( IN1, IN2, IN3 : in std_logic;  Q : out std_logic);
   end component;
   
   component AO221X1
      port( IN1, IN2, IN3, IN4, IN5 : in std_logic;  Q : out std_logic);
   end component;
   
   component AO22X1
      port( IN1, IN2, IN3, IN4 : in std_logic;  Q : out std_logic);
   end component;
   
   component AOI21X1
      port( IN1, IN2, IN3 : in std_logic;  QN : out std_logic);
   end component;
   
   component NAND4X0
      port( IN1, IN2, IN3, IN4 : in std_logic;  QN : out std_logic);
   end component;
   
   component OR4X1
      port( IN1, IN2, IN3, IN4 : in std_logic;  Q : out std_logic);
   end component;
   
   component AOI22X1
      port( IN1, IN2, IN3, IN4 : in std_logic;  QN : out std_logic);
   end component;
   
   component OAI22X1
      port( IN1, IN2, IN3, IN4 : in std_logic;  QN : out std_logic);
   end component;
   
   component XNOR2X1
      port( IN1, IN2 : in std_logic;  Q : out std_logic);
   end component;
   
   component AO222X1
      port( IN1, IN2, IN3, IN4, IN5, IN6 : in std_logic;  Q : out std_logic);
   end component;
   
   component DFFX1
      port( D, CLK : in std_logic;  Q, QN : out std_logic);
   end component;
   
   signal o_wb_adr_31_port, o_wb_adr_30_port, o_wb_adr_29_port, 
      o_wb_adr_28_port, o_wb_adr_27_port, o_wb_adr_26_port, o_wb_adr_25_port, 
      o_wb_adr_24_port, o_wb_adr_23_port, o_wb_adr_22_port, o_wb_adr_21_port, 
      o_wb_adr_20_port, o_wb_adr_19_port, o_wb_adr_18_port, o_wb_adr_17_port, 
      o_wb_adr_16_port, o_wb_adr_15_port, o_wb_adr_14_port, o_wb_adr_13_port, 
      o_wb_adr_12_port, o_wb_adr_11_port, o_wb_adr_10_port, o_wb_adr_9_port, 
      o_wb_adr_8_port, o_wb_adr_7_port, o_wb_adr_6_port, o_wb_adr_5_port, 
      o_wb_adr_4_port, o_wb_adr_3_port, o_wb_adr_2_port, o_wb_adr_1_port, 
      o_wb_adr_0_port, o_wb_cyc_port, o_wb_dat_31_port, o_wb_dat_30_port, 
      o_wb_dat_29_port, o_wb_dat_28_port, o_wb_dat_27_port, o_wb_dat_26_port, 
      o_wb_dat_25_port, o_wb_dat_24_port, o_wb_dat_23_port, o_wb_dat_22_port, 
      o_wb_dat_21_port, o_wb_dat_20_port, o_wb_dat_19_port, o_wb_dat_18_port, 
      o_wb_dat_17_port, o_wb_dat_16_port, o_wb_dat_15_port, o_wb_dat_14_port, 
      o_wb_dat_13_port, o_wb_dat_12_port, o_wb_dat_11_port, o_wb_dat_10_port, 
      o_wb_dat_9_port, o_wb_dat_8_port, o_wb_dat_7_port, o_wb_dat_6_port, 
      o_wb_dat_5_port, o_wb_dat_4_port, o_wb_dat_3_port, o_wb_dat_2_port, 
      o_wb_dat_1_port, o_wb_dat_0_port, o_wb_sel_3_port, o_wb_sel_2_port, 
      o_wb_sel_1_port, o_wb_sel_0_port, o_wb_stb_port, o_wb_we_port, 
      servicing_cache, tmp_s16_2_port, tmp_s16_1_port, tmp_s16_0_port, 
      wbuf_busy_r, wbuf_sel_r_3_port, wbuf_sel_r_2_port, wbuf_sel_r_1_port, 
      wbuf_sel_r_0_port, wbuf_addr_r_31_port, wbuf_addr_r_30_port, 
      wbuf_addr_r_29_port, wbuf_addr_r_28_port, wbuf_addr_r_27_port, 
      wbuf_addr_r_26_port, wbuf_addr_r_25_port, wbuf_addr_r_24_port, 
      wbuf_addr_r_23_port, wbuf_addr_r_22_port, wbuf_addr_r_21_port, 
      wbuf_addr_r_20_port, wbuf_addr_r_19_port, wbuf_addr_r_18_port, 
      wbuf_addr_r_17_port, wbuf_addr_r_16_port, wbuf_addr_r_15_port, 
      wbuf_addr_r_14_port, wbuf_addr_r_13_port, wbuf_addr_r_12_port, 
      wbuf_addr_r_11_port, wbuf_addr_r_10_port, wbuf_addr_r_9_port, 
      wbuf_addr_r_8_port, wbuf_addr_r_7_port, wbuf_addr_r_6_port, 
      wbuf_addr_r_5_port, wbuf_addr_r_4_port, wbuf_addr_r_3_port, 
      wbuf_addr_r_2_port, exclusive_access, n1, n2, n3, n4, n5, n6, n7, n8, n10
      , n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, 
      n25, n26, n27, n28, n29, n30, n31, n32, n33, n35, n36, n37, n38, n39, n40
      , n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, 
      n55, n56, n57, n58, n59, n60, n61, n62, n63, n64, n65, n66, n67, n68, n69
      , n70, n71, n72, n73, n74, n75, n76, n77, n78, n79, n80, n81, n82, n83, 
      n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94, n95, n96, n97, n98
      , n99, n100, n101, n102, n103, n104, n105, n106, n107, n108, n109, n110, 
      n111, n112, n113, n114, n115, n116, n117, n118, n119, n120, n121, n122, 
      n123, n124, n125, n126, n127, n128, n129, n130, n131, n132, n133, n134, 
      n135, n136, n137, n138, n139, n140, n141, n142, n143, n144, n145, n146, 
      n147, n148, n149, n150, n151, n152, n153, n154, n155, n156, n157, n158, 
      n159, n160, n161, n162, n163, n164, n165, n166, n167, n168, n169, n170, 
      n171, n172, n173, n174, n175, n176, n177, n178, n179, n180, n181, n182, 
      n183, n184, n185, n186, n187, n188, n189, n190, n191, n192, n193, n194, 
      n195, n196, n197, n198, n199, n200, n201, n202, n203, n204, n205, n206, 
      n207, n208, n209, n210, n211, n212, n_1000, n_1001, n_1002, n_1003, 
      n_1004, n_1005, n_1006, n_1007, n_1008, n_1009, n_1010, n_1011, n_1012, 
      n_1013, n_1014, n_1015, n_1016, n_1017, n_1018, n_1019, n_1020, n_1021, 
      n_1022, n_1023, n_1024, n_1025, n_1026, n_1027, n_1028, n_1029, n_1030, 
      n_1031, n_1032, n_1033, n_1034, n_1035, n_1036, n_1037, n_1038, n_1039, 
      n_1040, n_1041, n_1042, n_1043, n_1044, n_1045, n_1046, n_1047, n_1048, 
      n_1049, n_1050, n_1051, n_1052, n_1053, n_1054, n_1055, n_1056, n_1057, 
      n_1058, n_1059, n_1060, n_1061, n_1062, n_1063, n_1064, n_1065, n_1066, 
      n_1067, n_1068, n_1069, n_1070, n_1071, n_1072, n_1073, n_1074, n_1075, 
      n_1076, n_1077, n_1078, n_1079, n_1080, n_1081, n_1082, n_1083, n_1084, 
      n_1085, n_1086, n_1087, n_1088, n_1089, n_1090, n_1091, n_1092, n_1093, 
      n_1094, n_1095, n_1096, n_1097, n_1098, n_1099, n_1100, n_1101, n_1102 : 
      std_logic;

begin
   o_wb_adr <= ( o_wb_adr_31_port, o_wb_adr_30_port, o_wb_adr_29_port, 
      o_wb_adr_28_port, o_wb_adr_27_port, o_wb_adr_26_port, o_wb_adr_25_port, 
      o_wb_adr_24_port, o_wb_adr_23_port, o_wb_adr_22_port, o_wb_adr_21_port, 
      o_wb_adr_20_port, o_wb_adr_19_port, o_wb_adr_18_port, o_wb_adr_17_port, 
      o_wb_adr_16_port, o_wb_adr_15_port, o_wb_adr_14_port, o_wb_adr_13_port, 
      o_wb_adr_12_port, o_wb_adr_11_port, o_wb_adr_10_port, o_wb_adr_9_port, 
      o_wb_adr_8_port, o_wb_adr_7_port, o_wb_adr_6_port, o_wb_adr_5_port, 
      o_wb_adr_4_port, o_wb_adr_3_port, o_wb_adr_2_port, o_wb_adr_1_port, 
      o_wb_adr_0_port );
   o_wb_cyc <= o_wb_cyc_port;
   o_wb_dat <= ( o_wb_dat_31_port, o_wb_dat_30_port, o_wb_dat_29_port, 
      o_wb_dat_28_port, o_wb_dat_27_port, o_wb_dat_26_port, o_wb_dat_25_port, 
      o_wb_dat_24_port, o_wb_dat_23_port, o_wb_dat_22_port, o_wb_dat_21_port, 
      o_wb_dat_20_port, o_wb_dat_19_port, o_wb_dat_18_port, o_wb_dat_17_port, 
      o_wb_dat_16_port, o_wb_dat_15_port, o_wb_dat_14_port, o_wb_dat_13_port, 
      o_wb_dat_12_port, o_wb_dat_11_port, o_wb_dat_10_port, o_wb_dat_9_port, 
      o_wb_dat_8_port, o_wb_dat_7_port, o_wb_dat_6_port, o_wb_dat_5_port, 
      o_wb_dat_4_port, o_wb_dat_3_port, o_wb_dat_2_port, o_wb_dat_1_port, 
      o_wb_dat_0_port );
   o_wb_sel <= ( o_wb_sel_3_port, o_wb_sel_2_port, o_wb_sel_1_port, 
      o_wb_sel_0_port );
   o_wb_stb <= o_wb_stb_port;
   o_wb_we <= o_wb_we_port;
   
   wishbone_st_reg_0_inst : DFFX1 port map( D => n202, CLK => i_clk, Q => 
                           tmp_s16_0_port, QN => n20);
   wishbone_st_reg_1_inst : DFFX1 port map( D => n199, CLK => i_clk, Q => 
                           tmp_s16_1_port, QN => n19);
   o_wb_stb_Reg_reg : DFFX1 port map( D => n198, CLK => i_clk, Q => 
                           o_wb_stb_port, QN => n10);
   wbuf_sel_r_reg_3_inst : DFFX1 port map( D => n131, CLK => i_clk, Q => 
                           wbuf_sel_r_3_port, QN => n_1000);
   wbuf_sel_r_reg_2_inst : DFFX1 port map( D => n132, CLK => i_clk, Q => 
                           wbuf_sel_r_2_port, QN => n_1001);
   wbuf_sel_r_reg_1_inst : DFFX1 port map( D => n133, CLK => i_clk, Q => 
                           wbuf_sel_r_1_port, QN => n_1002);
   wbuf_sel_r_reg_0_inst : DFFX1 port map( D => n134, CLK => i_clk, Q => 
                           wbuf_sel_r_0_port, QN => n_1003);
   wbuf_addr_r_reg_31_inst : DFFX1 port map( D => n135, CLK => i_clk, Q => 
                           wbuf_addr_r_31_port, QN => n_1004);
   wbuf_addr_r_reg_30_inst : DFFX1 port map( D => n136, CLK => i_clk, Q => 
                           wbuf_addr_r_30_port, QN => n_1005);
   wbuf_addr_r_reg_29_inst : DFFX1 port map( D => n137, CLK => i_clk, Q => 
                           wbuf_addr_r_29_port, QN => n_1006);
   wbuf_addr_r_reg_28_inst : DFFX1 port map( D => n138, CLK => i_clk, Q => 
                           wbuf_addr_r_28_port, QN => n_1007);
   wbuf_addr_r_reg_27_inst : DFFX1 port map( D => n139, CLK => i_clk, Q => 
                           wbuf_addr_r_27_port, QN => n_1008);
   wbuf_addr_r_reg_26_inst : DFFX1 port map( D => n140, CLK => i_clk, Q => 
                           wbuf_addr_r_26_port, QN => n_1009);
   wbuf_addr_r_reg_25_inst : DFFX1 port map( D => n141, CLK => i_clk, Q => 
                           wbuf_addr_r_25_port, QN => n_1010);
   wbuf_addr_r_reg_24_inst : DFFX1 port map( D => n142, CLK => i_clk, Q => 
                           wbuf_addr_r_24_port, QN => n_1011);
   wbuf_addr_r_reg_23_inst : DFFX1 port map( D => n143, CLK => i_clk, Q => 
                           wbuf_addr_r_23_port, QN => n_1012);
   wbuf_addr_r_reg_22_inst : DFFX1 port map( D => n144, CLK => i_clk, Q => 
                           wbuf_addr_r_22_port, QN => n_1013);
   wbuf_addr_r_reg_21_inst : DFFX1 port map( D => n145, CLK => i_clk, Q => 
                           wbuf_addr_r_21_port, QN => n_1014);
   wbuf_addr_r_reg_20_inst : DFFX1 port map( D => n146, CLK => i_clk, Q => 
                           wbuf_addr_r_20_port, QN => n_1015);
   wbuf_addr_r_reg_19_inst : DFFX1 port map( D => n147, CLK => i_clk, Q => 
                           wbuf_addr_r_19_port, QN => n_1016);
   wbuf_addr_r_reg_18_inst : DFFX1 port map( D => n148, CLK => i_clk, Q => 
                           wbuf_addr_r_18_port, QN => n_1017);
   wbuf_addr_r_reg_17_inst : DFFX1 port map( D => n149, CLK => i_clk, Q => 
                           wbuf_addr_r_17_port, QN => n_1018);
   wbuf_addr_r_reg_16_inst : DFFX1 port map( D => n150, CLK => i_clk, Q => 
                           wbuf_addr_r_16_port, QN => n_1019);
   wbuf_addr_r_reg_15_inst : DFFX1 port map( D => n151, CLK => i_clk, Q => 
                           wbuf_addr_r_15_port, QN => n_1020);
   wbuf_addr_r_reg_14_inst : DFFX1 port map( D => n152, CLK => i_clk, Q => 
                           wbuf_addr_r_14_port, QN => n_1021);
   wbuf_addr_r_reg_13_inst : DFFX1 port map( D => n153, CLK => i_clk, Q => 
                           wbuf_addr_r_13_port, QN => n_1022);
   wbuf_addr_r_reg_12_inst : DFFX1 port map( D => n154, CLK => i_clk, Q => 
                           wbuf_addr_r_12_port, QN => n_1023);
   wbuf_addr_r_reg_11_inst : DFFX1 port map( D => n155, CLK => i_clk, Q => 
                           wbuf_addr_r_11_port, QN => n_1024);
   wbuf_addr_r_reg_10_inst : DFFX1 port map( D => n156, CLK => i_clk, Q => 
                           wbuf_addr_r_10_port, QN => n_1025);
   wbuf_addr_r_reg_9_inst : DFFX1 port map( D => n157, CLK => i_clk, Q => 
                           wbuf_addr_r_9_port, QN => n_1026);
   wbuf_addr_r_reg_8_inst : DFFX1 port map( D => n158, CLK => i_clk, Q => 
                           wbuf_addr_r_8_port, QN => n_1027);
   wbuf_addr_r_reg_7_inst : DFFX1 port map( D => n159, CLK => i_clk, Q => 
                           wbuf_addr_r_7_port, QN => n_1028);
   wbuf_addr_r_reg_6_inst : DFFX1 port map( D => n160, CLK => i_clk, Q => 
                           wbuf_addr_r_6_port, QN => n_1029);
   wbuf_addr_r_reg_5_inst : DFFX1 port map( D => n161, CLK => i_clk, Q => 
                           wbuf_addr_r_5_port, QN => n_1030);
   wbuf_addr_r_reg_4_inst : DFFX1 port map( D => n162, CLK => i_clk, Q => 
                           wbuf_addr_r_4_port, QN => n_1031);
   wbuf_addr_r_reg_3_inst : DFFX1 port map( D => n163, CLK => i_clk, Q => 
                           wbuf_addr_r_3_port, QN => n_1032);
   wbuf_addr_r_reg_2_inst : DFFX1 port map( D => n164, CLK => i_clk, Q => 
                           wbuf_addr_r_2_port, QN => n_1033);
   wbuf_busy_r_reg : DFFX1 port map( D => n165, CLK => i_clk, Q => wbuf_busy_r,
                           QN => n4);
   o_wb_dat_Reg_reg_31_inst : DFFX1 port map( D => n166, CLK => i_clk, Q => 
                           o_wb_dat_31_port, QN => n_1034);
   o_wb_dat_Reg_reg_30_inst : DFFX1 port map( D => n167, CLK => i_clk, Q => 
                           o_wb_dat_30_port, QN => n_1035);
   o_wb_dat_Reg_reg_29_inst : DFFX1 port map( D => n168, CLK => i_clk, Q => 
                           o_wb_dat_29_port, QN => n_1036);
   o_wb_dat_Reg_reg_28_inst : DFFX1 port map( D => n169, CLK => i_clk, Q => 
                           o_wb_dat_28_port, QN => n_1037);
   o_wb_dat_Reg_reg_27_inst : DFFX1 port map( D => n170, CLK => i_clk, Q => 
                           o_wb_dat_27_port, QN => n_1038);
   o_wb_dat_Reg_reg_26_inst : DFFX1 port map( D => n171, CLK => i_clk, Q => 
                           o_wb_dat_26_port, QN => n_1039);
   o_wb_dat_Reg_reg_25_inst : DFFX1 port map( D => n172, CLK => i_clk, Q => 
                           o_wb_dat_25_port, QN => n_1040);
   o_wb_dat_Reg_reg_24_inst : DFFX1 port map( D => n173, CLK => i_clk, Q => 
                           o_wb_dat_24_port, QN => n_1041);
   o_wb_dat_Reg_reg_23_inst : DFFX1 port map( D => n174, CLK => i_clk, Q => 
                           o_wb_dat_23_port, QN => n_1042);
   o_wb_dat_Reg_reg_22_inst : DFFX1 port map( D => n175, CLK => i_clk, Q => 
                           o_wb_dat_22_port, QN => n_1043);
   o_wb_dat_Reg_reg_21_inst : DFFX1 port map( D => n176, CLK => i_clk, Q => 
                           o_wb_dat_21_port, QN => n_1044);
   o_wb_dat_Reg_reg_20_inst : DFFX1 port map( D => n177, CLK => i_clk, Q => 
                           o_wb_dat_20_port, QN => n_1045);
   o_wb_dat_Reg_reg_19_inst : DFFX1 port map( D => n178, CLK => i_clk, Q => 
                           o_wb_dat_19_port, QN => n_1046);
   o_wb_dat_Reg_reg_18_inst : DFFX1 port map( D => n179, CLK => i_clk, Q => 
                           o_wb_dat_18_port, QN => n_1047);
   o_wb_dat_Reg_reg_17_inst : DFFX1 port map( D => n180, CLK => i_clk, Q => 
                           o_wb_dat_17_port, QN => n_1048);
   o_wb_dat_Reg_reg_16_inst : DFFX1 port map( D => n181, CLK => i_clk, Q => 
                           o_wb_dat_16_port, QN => n_1049);
   o_wb_dat_Reg_reg_15_inst : DFFX1 port map( D => n182, CLK => i_clk, Q => 
                           o_wb_dat_15_port, QN => n_1050);
   o_wb_dat_Reg_reg_14_inst : DFFX1 port map( D => n183, CLK => i_clk, Q => 
                           o_wb_dat_14_port, QN => n_1051);
   o_wb_dat_Reg_reg_13_inst : DFFX1 port map( D => n184, CLK => i_clk, Q => 
                           o_wb_dat_13_port, QN => n_1052);
   o_wb_dat_Reg_reg_12_inst : DFFX1 port map( D => n185, CLK => i_clk, Q => 
                           o_wb_dat_12_port, QN => n_1053);
   o_wb_dat_Reg_reg_11_inst : DFFX1 port map( D => n186, CLK => i_clk, Q => 
                           o_wb_dat_11_port, QN => n_1054);
   o_wb_dat_Reg_reg_10_inst : DFFX1 port map( D => n187, CLK => i_clk, Q => 
                           o_wb_dat_10_port, QN => n_1055);
   o_wb_dat_Reg_reg_9_inst : DFFX1 port map( D => n188, CLK => i_clk, Q => 
                           o_wb_dat_9_port, QN => n_1056);
   o_wb_dat_Reg_reg_8_inst : DFFX1 port map( D => n189, CLK => i_clk, Q => 
                           o_wb_dat_8_port, QN => n_1057);
   o_wb_dat_Reg_reg_7_inst : DFFX1 port map( D => n190, CLK => i_clk, Q => 
                           o_wb_dat_7_port, QN => n_1058);
   o_wb_dat_Reg_reg_6_inst : DFFX1 port map( D => n191, CLK => i_clk, Q => 
                           o_wb_dat_6_port, QN => n_1059);
   o_wb_dat_Reg_reg_5_inst : DFFX1 port map( D => n192, CLK => i_clk, Q => 
                           o_wb_dat_5_port, QN => n_1060);
   o_wb_dat_Reg_reg_4_inst : DFFX1 port map( D => n193, CLK => i_clk, Q => 
                           o_wb_dat_4_port, QN => n_1061);
   o_wb_dat_Reg_reg_3_inst : DFFX1 port map( D => n194, CLK => i_clk, Q => 
                           o_wb_dat_3_port, QN => n_1062);
   o_wb_dat_Reg_reg_2_inst : DFFX1 port map( D => n195, CLK => i_clk, Q => 
                           o_wb_dat_2_port, QN => n_1063);
   o_wb_dat_Reg_reg_1_inst : DFFX1 port map( D => n196, CLK => i_clk, Q => 
                           o_wb_dat_1_port, QN => n_1064);
   o_wb_dat_Reg_reg_0_inst : DFFX1 port map( D => n197, CLK => i_clk, Q => 
                           o_wb_dat_0_port, QN => n_1065);
   o_wb_we_Reg_reg : DFFX1 port map( D => n201, CLK => i_clk, Q => o_wb_we_port
                           , QN => n11);
   o_wb_adr_Reg_reg_31_inst : DFFX1 port map( D => n92, CLK => i_clk, Q => 
                           o_wb_adr_31_port, QN => n_1066);
   o_wb_adr_Reg_reg_30_inst : DFFX1 port map( D => n93, CLK => i_clk, Q => 
                           o_wb_adr_30_port, QN => n_1067);
   o_wb_adr_Reg_reg_29_inst : DFFX1 port map( D => n94, CLK => i_clk, Q => 
                           o_wb_adr_29_port, QN => n_1068);
   o_wb_adr_Reg_reg_28_inst : DFFX1 port map( D => n95, CLK => i_clk, Q => 
                           o_wb_adr_28_port, QN => n_1069);
   o_wb_adr_Reg_reg_27_inst : DFFX1 port map( D => n96, CLK => i_clk, Q => 
                           o_wb_adr_27_port, QN => n_1070);
   o_wb_adr_Reg_reg_26_inst : DFFX1 port map( D => n97, CLK => i_clk, Q => 
                           o_wb_adr_26_port, QN => n_1071);
   o_wb_adr_Reg_reg_25_inst : DFFX1 port map( D => n98, CLK => i_clk, Q => 
                           o_wb_adr_25_port, QN => n_1072);
   o_wb_adr_Reg_reg_24_inst : DFFX1 port map( D => n99, CLK => i_clk, Q => 
                           o_wb_adr_24_port, QN => n_1073);
   o_wb_adr_Reg_reg_23_inst : DFFX1 port map( D => n100, CLK => i_clk, Q => 
                           o_wb_adr_23_port, QN => n_1074);
   o_wb_adr_Reg_reg_22_inst : DFFX1 port map( D => n101, CLK => i_clk, Q => 
                           o_wb_adr_22_port, QN => n_1075);
   o_wb_adr_Reg_reg_21_inst : DFFX1 port map( D => n102, CLK => i_clk, Q => 
                           o_wb_adr_21_port, QN => n_1076);
   o_wb_adr_Reg_reg_20_inst : DFFX1 port map( D => n103, CLK => i_clk, Q => 
                           o_wb_adr_20_port, QN => n_1077);
   o_wb_adr_Reg_reg_19_inst : DFFX1 port map( D => n104, CLK => i_clk, Q => 
                           o_wb_adr_19_port, QN => n_1078);
   o_wb_adr_Reg_reg_18_inst : DFFX1 port map( D => n105, CLK => i_clk, Q => 
                           o_wb_adr_18_port, QN => n_1079);
   o_wb_adr_Reg_reg_17_inst : DFFX1 port map( D => n106, CLK => i_clk, Q => 
                           o_wb_adr_17_port, QN => n_1080);
   o_wb_adr_Reg_reg_16_inst : DFFX1 port map( D => n107, CLK => i_clk, Q => 
                           o_wb_adr_16_port, QN => n_1081);
   o_wb_adr_Reg_reg_15_inst : DFFX1 port map( D => n108, CLK => i_clk, Q => 
                           o_wb_adr_15_port, QN => n_1082);
   o_wb_adr_Reg_reg_14_inst : DFFX1 port map( D => n109, CLK => i_clk, Q => 
                           o_wb_adr_14_port, QN => n_1083);
   o_wb_adr_Reg_reg_13_inst : DFFX1 port map( D => n110, CLK => i_clk, Q => 
                           o_wb_adr_13_port, QN => n_1084);
   o_wb_adr_Reg_reg_12_inst : DFFX1 port map( D => n111, CLK => i_clk, Q => 
                           o_wb_adr_12_port, QN => n_1085);
   o_wb_adr_Reg_reg_11_inst : DFFX1 port map( D => n112, CLK => i_clk, Q => 
                           o_wb_adr_11_port, QN => n_1086);
   o_wb_adr_Reg_reg_10_inst : DFFX1 port map( D => n113, CLK => i_clk, Q => 
                           o_wb_adr_10_port, QN => n_1087);
   o_wb_adr_Reg_reg_9_inst : DFFX1 port map( D => n114, CLK => i_clk, Q => 
                           o_wb_adr_9_port, QN => n_1088);
   o_wb_adr_Reg_reg_8_inst : DFFX1 port map( D => n115, CLK => i_clk, Q => 
                           o_wb_adr_8_port, QN => n_1089);
   o_wb_adr_Reg_reg_7_inst : DFFX1 port map( D => n116, CLK => i_clk, Q => 
                           o_wb_adr_7_port, QN => n_1090);
   o_wb_adr_Reg_reg_6_inst : DFFX1 port map( D => n117, CLK => i_clk, Q => 
                           o_wb_adr_6_port, QN => n_1091);
   o_wb_adr_Reg_reg_5_inst : DFFX1 port map( D => n118, CLK => i_clk, Q => 
                           o_wb_adr_5_port, QN => n_1092);
   o_wb_adr_Reg_reg_4_inst : DFFX1 port map( D => n119, CLK => i_clk, Q => 
                           o_wb_adr_4_port, QN => n_1093);
   o_wb_adr_Reg_reg_1_inst : DFFX1 port map( D => n122, CLK => i_clk, Q => 
                           o_wb_adr_1_port, QN => n_1094);
   o_wb_adr_Reg_reg_0_inst : DFFX1 port map( D => n123, CLK => i_clk, Q => 
                           o_wb_adr_0_port, QN => n_1095);
   o_wb_sel_Reg_reg_3_inst : DFFX1 port map( D => n127, CLK => i_clk, Q => 
                           o_wb_sel_3_port, QN => n_1096);
   o_wb_sel_Reg_reg_2_inst : DFFX1 port map( D => n128, CLK => i_clk, Q => 
                           o_wb_sel_2_port, QN => n_1097);
   o_wb_sel_Reg_reg_1_inst : DFFX1 port map( D => n129, CLK => i_clk, Q => 
                           o_wb_sel_1_port, QN => n_1098);
   o_wb_sel_Reg_reg_0_inst : DFFX1 port map( D => n130, CLK => i_clk, Q => 
                           o_wb_sel_0_port, QN => n_1099);
   exclusive_access_reg : DFFX1 port map( D => n126, CLK => i_clk, Q => 
                           exclusive_access, QN => n5);
   o_wb_cyc_Reg_reg : DFFX1 port map( D => n125, CLK => i_clk, Q => 
                           o_wb_cyc_port, QN => n_1100);
   wishbone_st_reg_2_inst : DFFX1 port map( D => n200, CLK => i_clk, Q => 
                           tmp_s16_2_port, QN => n18);
   o_wb_adr_Reg_reg_2_inst : DFFX1 port map( D => n121, CLK => i_clk, Q => 
                           o_wb_adr_2_port, QN => n12);
   o_wb_adr_Reg_reg_3_inst : DFFX1 port map( D => n120, CLK => i_clk, Q => 
                           o_wb_adr_3_port, QN => n_1101);
   servicing_cache_reg : DFFX1 port map( D => n124, CLK => i_clk, Q => 
                           servicing_cache, QN => n_1102);
   U51 : AO222X1 port map( IN1 => servicing_cache, IN2 => n27, IN3 => n24, IN4 
                           => n28, IN5 => n29, IN6 => n30, Q => o_stall);
   U52 : AO222X1 port map( IN1 => wbuf_addr_r_31_port, IN2 => n206, IN3 => 
                           i_address(31), IN4 => n208, IN5 => o_wb_adr_31_port,
                           IN6 => n212, Q => n92);
   U53 : AO222X1 port map( IN1 => wbuf_addr_r_30_port, IN2 => n32, IN3 => 
                           i_address(30), IN4 => n33, IN5 => o_wb_adr_30_port, 
                           IN6 => n212, Q => n93);
   U54 : AO222X1 port map( IN1 => wbuf_addr_r_29_port, IN2 => n207, IN3 => 
                           i_address(29), IN4 => n209, IN5 => o_wb_adr_29_port,
                           IN6 => n212, Q => n94);
   U55 : AO222X1 port map( IN1 => wbuf_addr_r_28_port, IN2 => n206, IN3 => 
                           i_address(28), IN4 => n208, IN5 => o_wb_adr_28_port,
                           IN6 => n212, Q => n95);
   U56 : AO222X1 port map( IN1 => wbuf_addr_r_27_port, IN2 => n32, IN3 => 
                           i_address(27), IN4 => n33, IN5 => o_wb_adr_27_port, 
                           IN6 => n212, Q => n96);
   U57 : AO222X1 port map( IN1 => wbuf_addr_r_26_port, IN2 => n207, IN3 => 
                           i_address(26), IN4 => n209, IN5 => o_wb_adr_26_port,
                           IN6 => n212, Q => n97);
   U58 : AO222X1 port map( IN1 => wbuf_addr_r_25_port, IN2 => n206, IN3 => 
                           i_address(25), IN4 => n208, IN5 => o_wb_adr_25_port,
                           IN6 => n212, Q => n98);
   U59 : AO222X1 port map( IN1 => wbuf_addr_r_24_port, IN2 => n32, IN3 => 
                           i_address(24), IN4 => n33, IN5 => o_wb_adr_24_port, 
                           IN6 => n212, Q => n99);
   U60 : AO222X1 port map( IN1 => wbuf_addr_r_23_port, IN2 => n207, IN3 => 
                           i_address(23), IN4 => n209, IN5 => o_wb_adr_23_port,
                           IN6 => n212, Q => n100);
   U61 : AO222X1 port map( IN1 => wbuf_addr_r_22_port, IN2 => n206, IN3 => 
                           i_address(22), IN4 => n208, IN5 => o_wb_adr_22_port,
                           IN6 => n212, Q => n101);
   U62 : AO222X1 port map( IN1 => wbuf_addr_r_21_port, IN2 => n32, IN3 => 
                           i_address(21), IN4 => n33, IN5 => o_wb_adr_21_port, 
                           IN6 => n212, Q => n102);
   U63 : AO222X1 port map( IN1 => wbuf_addr_r_20_port, IN2 => n207, IN3 => 
                           i_address(20), IN4 => n209, IN5 => o_wb_adr_20_port,
                           IN6 => n212, Q => n103);
   U64 : AO222X1 port map( IN1 => wbuf_addr_r_19_port, IN2 => n206, IN3 => 
                           i_address(19), IN4 => n208, IN5 => o_wb_adr_19_port,
                           IN6 => n212, Q => n104);
   U65 : AO222X1 port map( IN1 => wbuf_addr_r_18_port, IN2 => n32, IN3 => 
                           i_address(18), IN4 => n33, IN5 => o_wb_adr_18_port, 
                           IN6 => n212, Q => n105);
   U66 : AO222X1 port map( IN1 => wbuf_addr_r_17_port, IN2 => n207, IN3 => 
                           i_address(17), IN4 => n209, IN5 => o_wb_adr_17_port,
                           IN6 => n212, Q => n106);
   U67 : AO222X1 port map( IN1 => wbuf_addr_r_16_port, IN2 => n206, IN3 => 
                           i_address(16), IN4 => n208, IN5 => o_wb_adr_16_port,
                           IN6 => n212, Q => n107);
   U68 : AO222X1 port map( IN1 => wbuf_addr_r_15_port, IN2 => n32, IN3 => 
                           i_address(15), IN4 => n33, IN5 => o_wb_adr_15_port, 
                           IN6 => n212, Q => n108);
   U69 : AO222X1 port map( IN1 => wbuf_addr_r_14_port, IN2 => n207, IN3 => 
                           i_address(14), IN4 => n209, IN5 => o_wb_adr_14_port,
                           IN6 => n212, Q => n109);
   U70 : AO222X1 port map( IN1 => wbuf_addr_r_13_port, IN2 => n206, IN3 => 
                           i_address(13), IN4 => n208, IN5 => o_wb_adr_13_port,
                           IN6 => n212, Q => n110);
   U71 : AO222X1 port map( IN1 => wbuf_addr_r_12_port, IN2 => n32, IN3 => 
                           i_address(12), IN4 => n33, IN5 => o_wb_adr_12_port, 
                           IN6 => n212, Q => n111);
   U72 : AO222X1 port map( IN1 => wbuf_addr_r_11_port, IN2 => n207, IN3 => 
                           i_address(11), IN4 => n209, IN5 => o_wb_adr_11_port,
                           IN6 => n212, Q => n112);
   U73 : AO222X1 port map( IN1 => wbuf_addr_r_10_port, IN2 => n206, IN3 => 
                           i_address(10), IN4 => n208, IN5 => o_wb_adr_10_port,
                           IN6 => n212, Q => n113);
   U74 : AO222X1 port map( IN1 => wbuf_addr_r_9_port, IN2 => n32, IN3 => 
                           i_address(9), IN4 => n33, IN5 => o_wb_adr_9_port, 
                           IN6 => n212, Q => n114);
   U75 : AO222X1 port map( IN1 => wbuf_addr_r_8_port, IN2 => n207, IN3 => 
                           i_address(8), IN4 => n209, IN5 => o_wb_adr_8_port, 
                           IN6 => n212, Q => n115);
   U76 : AO222X1 port map( IN1 => wbuf_addr_r_7_port, IN2 => n206, IN3 => 
                           i_address(7), IN4 => n208, IN5 => o_wb_adr_7_port, 
                           IN6 => n212, Q => n116);
   U77 : AO222X1 port map( IN1 => wbuf_addr_r_6_port, IN2 => n32, IN3 => 
                           i_address(6), IN4 => n33, IN5 => o_wb_adr_6_port, 
                           IN6 => n212, Q => n117);
   U78 : AO222X1 port map( IN1 => wbuf_addr_r_5_port, IN2 => n207, IN3 => 
                           i_address(5), IN4 => n209, IN5 => o_wb_adr_5_port, 
                           IN6 => n212, Q => n118);
   U79 : AO222X1 port map( IN1 => wbuf_addr_r_4_port, IN2 => n206, IN3 => 
                           i_address(4), IN4 => n208, IN5 => o_wb_adr_4_port, 
                           IN6 => n212, Q => n119);
   U83 : OAI21X1 port map( IN1 => n38, IN2 => n15, IN3 => n39, QN => n37);
   U84 : NAND3X0 port map( IN1 => n40, IN2 => n41, IN3 => reset_b, QN => n39);
   U85 : XNOR2X1 port map( IN1 => o_wb_adr_3_port, IN2 => n12, Q => n40);
   U86 : AOI22X1 port map( IN1 => n4, IN2 => i_address(3), IN3 => wbuf_busy_r, 
                           IN4 => wbuf_addr_r_3_port, QN => n38);
   U87 : OAI22X1 port map( IN1 => n12, IN2 => n36, IN3 => n8, IN4 => n42, QN =>
                           n121);
   U88 : NAND3X0 port map( IN1 => n41, IN2 => n12, IN3 => reset_b, QN => n44);
   U89 : AOI22X1 port map( IN1 => n4, IN2 => i_address(2), IN3 => wbuf_busy_r, 
                           IN4 => wbuf_addr_r_2_port, QN => n43);
   U90 : AO21X1 port map( IN1 => i_wb_ack, IN2 => n41, IN3 => n203, Q => n36);
   U91 : AO22X1 port map( IN1 => o_wb_adr_1_port, IN2 => n212, IN3 => n35, IN4 
                           => n45, Q => n122);
   U92 : NAND3X0 port map( IN1 => n3, IN2 => n48, IN3 => n2, QN => n47);
   U93 : NAND3X0 port map( IN1 => n3, IN2 => n49, IN3 => n2, QN => n46);
   U94 : AO22X1 port map( IN1 => o_wb_adr_0_port, IN2 => n212, IN3 => n35, IN4 
                           => n50, Q => n123);
   U95 : NAND4X0 port map( IN1 => n1, IN2 => n2, IN3 => n3, IN4 => n48, QN => 
                           n52);
   U96 : OR4X1 port map( IN1 => n48, IN2 => n49, IN3 => n53, IN4 => n2, Q => 
                           n51);
   U97 : NAND3X0 port map( IN1 => n57, IN2 => n58, IN3 => n59, QN => n56);
   U98 : NAND3X0 port map( IN1 => servicing_cache, IN2 => n60, IN3 => n13, QN 
                           => n55);
   U99 : AO221X1 port map( IN1 => n62, IN2 => exclusive_access, IN3 => 
                           o_wb_cyc_port, IN4 => n63, IN5 => n64, Q => n125);
   U100 : OAI21X1 port map( IN1 => n5, IN2 => n65, IN3 => n66, QN => n126);
   U101 : NAND4X0 port map( IN1 => i_exclusive, IN2 => reset_b, IN3 => n65, IN4
                           => n21, QN => n66);
   U102 : NAND3X0 port map( IN1 => n68, IN2 => n58, IN3 => n14, QN => n67);
   U103 : AO22X1 port map( IN1 => o_wb_sel_3_port, IN2 => n212, IN3 => n35, IN4
                           => n48, Q => n127);
   U104 : AO221X1 port map( IN1 => i_byte_enable(3), IN2 => n4, IN3 => 
                           wbuf_sel_r_3_port, IN4 => wbuf_busy_r, IN5 => n69, Q
                           => n48);
   U105 : AO22X1 port map( IN1 => o_wb_sel_2_port, IN2 => n212, IN3 => n35, IN4
                           => n49, Q => n128);
   U106 : AO221X1 port map( IN1 => i_byte_enable(2), IN2 => n4, IN3 => 
                           wbuf_sel_r_2_port, IN4 => wbuf_busy_r, IN5 => n69, Q
                           => n49);
   U107 : AO22X1 port map( IN1 => o_wb_sel_1_port, IN2 => n212, IN3 => n35, IN4
                           => n54, Q => n129);
   U108 : AO221X1 port map( IN1 => i_byte_enable(1), IN2 => n4, IN3 => 
                           wbuf_sel_r_1_port, IN4 => wbuf_busy_r, IN5 => n69, Q
                           => n54);
   U109 : AO22X1 port map( IN1 => o_wb_sel_0_port, IN2 => n212, IN3 => n35, IN4
                           => n53, Q => n130);
   U110 : AO221X1 port map( IN1 => i_byte_enable(0), IN2 => n4, IN3 => 
                           wbuf_sel_r_0_port, IN4 => wbuf_busy_r, IN5 => n69, Q
                           => n53);
   U111 : AO22X1 port map( IN1 => n70, IN2 => wbuf_sel_r_3_port, IN3 => n71, 
                           IN4 => i_byte_enable(3), Q => n131);
   U112 : AO22X1 port map( IN1 => n70, IN2 => wbuf_sel_r_2_port, IN3 => n211, 
                           IN4 => i_byte_enable(2), Q => n132);
   U113 : AO22X1 port map( IN1 => n70, IN2 => wbuf_sel_r_1_port, IN3 => n71, 
                           IN4 => i_byte_enable(1), Q => n133);
   U114 : AO22X1 port map( IN1 => n70, IN2 => wbuf_sel_r_0_port, IN3 => n211, 
                           IN4 => i_byte_enable(0), Q => n134);
   U115 : AO22X1 port map( IN1 => n70, IN2 => wbuf_addr_r_31_port, IN3 => n71, 
                           IN4 => i_address(31), Q => n135);
   U116 : AO22X1 port map( IN1 => n70, IN2 => wbuf_addr_r_30_port, IN3 => n211,
                           IN4 => i_address(30), Q => n136);
   U117 : AO22X1 port map( IN1 => n70, IN2 => wbuf_addr_r_29_port, IN3 => n71, 
                           IN4 => i_address(29), Q => n137);
   U118 : AO22X1 port map( IN1 => n70, IN2 => wbuf_addr_r_28_port, IN3 => n211,
                           IN4 => i_address(28), Q => n138);
   U119 : AO22X1 port map( IN1 => n70, IN2 => wbuf_addr_r_27_port, IN3 => n71, 
                           IN4 => i_address(27), Q => n139);
   U120 : AO22X1 port map( IN1 => n70, IN2 => wbuf_addr_r_26_port, IN3 => n211,
                           IN4 => i_address(26), Q => n140);
   U121 : AO22X1 port map( IN1 => n70, IN2 => wbuf_addr_r_25_port, IN3 => n71, 
                           IN4 => i_address(25), Q => n141);
   U122 : AO22X1 port map( IN1 => n70, IN2 => wbuf_addr_r_24_port, IN3 => n211,
                           IN4 => i_address(24), Q => n142);
   U123 : AO22X1 port map( IN1 => n70, IN2 => wbuf_addr_r_23_port, IN3 => n71, 
                           IN4 => i_address(23), Q => n143);
   U124 : AO22X1 port map( IN1 => n70, IN2 => wbuf_addr_r_22_port, IN3 => n211,
                           IN4 => i_address(22), Q => n144);
   U125 : AO22X1 port map( IN1 => n70, IN2 => wbuf_addr_r_21_port, IN3 => n71, 
                           IN4 => i_address(21), Q => n145);
   U126 : AO22X1 port map( IN1 => n70, IN2 => wbuf_addr_r_20_port, IN3 => n211,
                           IN4 => i_address(20), Q => n146);
   U127 : AO22X1 port map( IN1 => n70, IN2 => wbuf_addr_r_19_port, IN3 => n71, 
                           IN4 => i_address(19), Q => n147);
   U128 : AO22X1 port map( IN1 => n70, IN2 => wbuf_addr_r_18_port, IN3 => n211,
                           IN4 => i_address(18), Q => n148);
   U129 : AO22X1 port map( IN1 => n70, IN2 => wbuf_addr_r_17_port, IN3 => n71, 
                           IN4 => i_address(17), Q => n149);
   U130 : AO22X1 port map( IN1 => n70, IN2 => wbuf_addr_r_16_port, IN3 => n211,
                           IN4 => i_address(16), Q => n150);
   U131 : AO22X1 port map( IN1 => n70, IN2 => wbuf_addr_r_15_port, IN3 => n71, 
                           IN4 => i_address(15), Q => n151);
   U132 : AO22X1 port map( IN1 => n70, IN2 => wbuf_addr_r_14_port, IN3 => n211,
                           IN4 => i_address(14), Q => n152);
   U133 : AO22X1 port map( IN1 => n70, IN2 => wbuf_addr_r_13_port, IN3 => n71, 
                           IN4 => i_address(13), Q => n153);
   U134 : AO22X1 port map( IN1 => n70, IN2 => wbuf_addr_r_12_port, IN3 => n211,
                           IN4 => i_address(12), Q => n154);
   U135 : AO22X1 port map( IN1 => n70, IN2 => wbuf_addr_r_11_port, IN3 => n71, 
                           IN4 => i_address(11), Q => n155);
   U136 : AO22X1 port map( IN1 => n70, IN2 => wbuf_addr_r_10_port, IN3 => n211,
                           IN4 => i_address(10), Q => n156);
   U137 : AO22X1 port map( IN1 => n70, IN2 => wbuf_addr_r_9_port, IN3 => n71, 
                           IN4 => i_address(9), Q => n157);
   U138 : AO22X1 port map( IN1 => n70, IN2 => wbuf_addr_r_8_port, IN3 => n211, 
                           IN4 => i_address(8), Q => n158);
   U139 : AO22X1 port map( IN1 => n70, IN2 => wbuf_addr_r_7_port, IN3 => n71, 
                           IN4 => i_address(7), Q => n159);
   U140 : AO22X1 port map( IN1 => n70, IN2 => wbuf_addr_r_6_port, IN3 => n211, 
                           IN4 => i_address(6), Q => n160);
   U141 : AO22X1 port map( IN1 => n70, IN2 => wbuf_addr_r_5_port, IN3 => n71, 
                           IN4 => i_address(5), Q => n161);
   U142 : AO22X1 port map( IN1 => n70, IN2 => wbuf_addr_r_4_port, IN3 => n211, 
                           IN4 => i_address(4), Q => n162);
   U143 : AO22X1 port map( IN1 => n70, IN2 => wbuf_addr_r_3_port, IN3 => n71, 
                           IN4 => i_address(3), Q => n163);
   U144 : AO22X1 port map( IN1 => n70, IN2 => wbuf_addr_r_2_port, IN3 => n211, 
                           IN4 => i_address(2), Q => n164);
   U145 : AND3X1 port map( IN1 => n30, IN2 => n4, IN3 => n74, Q => n72);
   U146 : AO22X1 port map( IN1 => o_wb_dat_31_port, IN2 => n205, IN3 => 
                           i_write_data(31), IN4 => n76, Q => n166);
   U147 : AO22X1 port map( IN1 => o_wb_dat_30_port, IN2 => n204, IN3 => 
                           i_write_data(30), IN4 => n210, Q => n167);
   U148 : AO22X1 port map( IN1 => o_wb_dat_29_port, IN2 => n75, IN3 => 
                           i_write_data(29), IN4 => n76, Q => n168);
   U149 : AO22X1 port map( IN1 => o_wb_dat_28_port, IN2 => n205, IN3 => 
                           i_write_data(28), IN4 => n210, Q => n169);
   U150 : AO22X1 port map( IN1 => o_wb_dat_27_port, IN2 => n204, IN3 => 
                           i_write_data(27), IN4 => n76, Q => n170);
   U151 : AO22X1 port map( IN1 => o_wb_dat_26_port, IN2 => n75, IN3 => 
                           i_write_data(26), IN4 => n210, Q => n171);
   U152 : AO22X1 port map( IN1 => o_wb_dat_25_port, IN2 => n205, IN3 => 
                           i_write_data(25), IN4 => n76, Q => n172);
   U153 : AO22X1 port map( IN1 => o_wb_dat_24_port, IN2 => n204, IN3 => 
                           i_write_data(24), IN4 => n210, Q => n173);
   U154 : AO22X1 port map( IN1 => o_wb_dat_23_port, IN2 => n75, IN3 => 
                           i_write_data(23), IN4 => n76, Q => n174);
   U155 : AO22X1 port map( IN1 => o_wb_dat_22_port, IN2 => n205, IN3 => 
                           i_write_data(22), IN4 => n210, Q => n175);
   U156 : AO22X1 port map( IN1 => o_wb_dat_21_port, IN2 => n204, IN3 => 
                           i_write_data(21), IN4 => n76, Q => n176);
   U157 : AO22X1 port map( IN1 => o_wb_dat_20_port, IN2 => n75, IN3 => 
                           i_write_data(20), IN4 => n210, Q => n177);
   U158 : AO22X1 port map( IN1 => o_wb_dat_19_port, IN2 => n205, IN3 => 
                           i_write_data(19), IN4 => n76, Q => n178);
   U159 : AO22X1 port map( IN1 => o_wb_dat_18_port, IN2 => n204, IN3 => 
                           i_write_data(18), IN4 => n210, Q => n179);
   U160 : AO22X1 port map( IN1 => o_wb_dat_17_port, IN2 => n75, IN3 => 
                           i_write_data(17), IN4 => n76, Q => n180);
   U161 : AO22X1 port map( IN1 => o_wb_dat_16_port, IN2 => n205, IN3 => 
                           i_write_data(16), IN4 => n210, Q => n181);
   U162 : AO22X1 port map( IN1 => o_wb_dat_15_port, IN2 => n204, IN3 => 
                           i_write_data(15), IN4 => n76, Q => n182);
   U163 : AO22X1 port map( IN1 => o_wb_dat_14_port, IN2 => n75, IN3 => 
                           i_write_data(14), IN4 => n210, Q => n183);
   U164 : AO22X1 port map( IN1 => o_wb_dat_13_port, IN2 => n205, IN3 => 
                           i_write_data(13), IN4 => n76, Q => n184);
   U165 : AO22X1 port map( IN1 => o_wb_dat_12_port, IN2 => n204, IN3 => 
                           i_write_data(12), IN4 => n210, Q => n185);
   U166 : AO22X1 port map( IN1 => o_wb_dat_11_port, IN2 => n75, IN3 => 
                           i_write_data(11), IN4 => n76, Q => n186);
   U167 : AO22X1 port map( IN1 => o_wb_dat_10_port, IN2 => n205, IN3 => 
                           i_write_data(10), IN4 => n210, Q => n187);
   U168 : AO22X1 port map( IN1 => o_wb_dat_9_port, IN2 => n204, IN3 => 
                           i_write_data(9), IN4 => n76, Q => n188);
   U169 : AO22X1 port map( IN1 => o_wb_dat_8_port, IN2 => n75, IN3 => 
                           i_write_data(8), IN4 => n210, Q => n189);
   U170 : AO22X1 port map( IN1 => o_wb_dat_7_port, IN2 => n205, IN3 => 
                           i_write_data(7), IN4 => n76, Q => n190);
   U171 : AO22X1 port map( IN1 => o_wb_dat_6_port, IN2 => n204, IN3 => 
                           i_write_data(6), IN4 => n210, Q => n191);
   U172 : AO22X1 port map( IN1 => o_wb_dat_5_port, IN2 => n75, IN3 => 
                           i_write_data(5), IN4 => n76, Q => n192);
   U173 : AO22X1 port map( IN1 => o_wb_dat_4_port, IN2 => n205, IN3 => 
                           i_write_data(4), IN4 => n210, Q => n193);
   U174 : AO22X1 port map( IN1 => o_wb_dat_3_port, IN2 => n204, IN3 => 
                           i_write_data(3), IN4 => n76, Q => n194);
   U175 : AO22X1 port map( IN1 => o_wb_dat_2_port, IN2 => n75, IN3 => 
                           i_write_data(2), IN4 => n210, Q => n195);
   U176 : AO22X1 port map( IN1 => o_wb_dat_1_port, IN2 => n205, IN3 => 
                           i_write_data(1), IN4 => n76, Q => n196);
   U177 : AO22X1 port map( IN1 => o_wb_dat_0_port, IN2 => n204, IN3 => 
                           i_write_data(0), IN4 => n210, Q => n197);
   U179 : AO21X1 port map( IN1 => n63, IN2 => o_wb_stb_port, IN3 => n64, Q => 
                           n198);
   U180 : AO22X1 port map( IN1 => n6, IN2 => tmp_s16_1_port, IN3 => n79, IN4 =>
                           reset_b, Q => n199);
   U181 : AO22X1 port map( IN1 => n6, IN2 => tmp_s16_2_port, IN3 => n81, IN4 =>
                           n82, Q => n200);
   U182 : AO22X1 port map( IN1 => n17, IN2 => reset_b, IN3 => n57, IN4 => n83, 
                           Q => n81);
   U183 : AO22X1 port map( IN1 => n78, IN2 => o_wb_we_port, IN3 => n85, IN4 => 
                           n57, Q => n201);
   U185 : AOI21X1 port map( IN1 => n29, IN2 => i_wb_ack, IN3 => n203, QN => n78
                           );
   U186 : AO21X1 port map( IN1 => n23, IN2 => n22, IN3 => n74, Q => n77);
   U187 : AO22X1 port map( IN1 => n6, IN2 => tmp_s16_0_port, IN3 => n87, IN4 =>
                           n82, Q => n202);
   U188 : AO22X1 port map( IN1 => n16, IN2 => reset_b, IN3 => n88, IN4 => n59, 
                           Q => n87);
   U189 : AO221X1 port map( IN1 => n14, IN2 => n90, IN3 => i_wb_ack, IN4 => n41
                           , IN5 => n61, Q => n82);
   U190 : AO21X1 port map( IN1 => n29, IN2 => i_wb_ack, IN3 => n26, Q => n61);
   U191 : AND3X1 port map( IN1 => n20, IN2 => n19, IN3 => tmp_s16_2_port, Q => 
                           n29);
   U192 : NAND3X0 port map( IN1 => tmp_s16_0_port, IN2 => n18, IN3 => 
                           tmp_s16_1_port, QN => n84);
   U193 : AND2X1 port map( IN1 => n89, IN2 => n91, Q => n80);
   U194 : NAND3X0 port map( IN1 => n19, IN2 => n18, IN3 => tmp_s16_0_port, QN 
                           => n91);
   U195 : NAND3X0 port map( IN1 => n20, IN2 => n18, IN3 => tmp_s16_1_port, QN 
                           => n89);
   U196 : NAND3X0 port map( IN1 => n58, IN2 => n21, IN3 => n31, QN => n90);
   U197 : NAND3X0 port map( IN1 => n19, IN2 => n18, IN3 => n20, QN => n60);
   U198 : NOR2X0 port map( IN1 => n26, IN2 => n77, QN => n210);
   U199 : OA21X1 port map( IN1 => i_cache_req, IN2 => i_select, IN3 => 
                           i_write_enable, Q => n30);
   U200 : NOR2X0 port map( IN1 => n26, IN2 => n77, QN => n76);
   U201 : MUX21X1 port map( IN1 => o_wb_adr_3_port, IN2 => n37, S => n36, Q => 
                           n120);
   U202 : INVX0 port map( INP => n57, ZN => n15);
   U203 : NOR2X0 port map( IN1 => n15, IN2 => n77, QN => n64);
   U204 : INVX0 port map( INP => n27, ZN => n23);
   U205 : NAND2X1 port map( IN1 => n23, IN2 => n21, QN => n68);
   U206 : NOR2X0 port map( IN1 => n26, IN2 => n72, QN => n70);
   U207 : NOR2X0 port map( IN1 => n26, IN2 => n70, QN => n211);
   U208 : NOR2X0 port map( IN1 => n26, IN2 => n70, QN => n71);
   U209 : NOR2X0 port map( IN1 => n26, IN2 => n212, QN => n35);
   U210 : NOR2X0 port map( IN1 => n26, IN2 => n60, QN => n57);
   U211 : INVX0 port map( INP => n82, ZN => n6);
   U212 : NAND2X1 port map( IN1 => n80, IN2 => n84, QN => n41);
   U213 : INVX0 port map( INP => n54, ZN => n2);
   U214 : INVX0 port map( INP => n60, ZN => n14);
   U215 : OA21X1 port map( IN1 => n60, IN2 => n7, IN3 => n78, Q => n63);
   U216 : INVX0 port map( INP => n53, ZN => n3);
   U217 : INVX0 port map( INP => n58, ZN => n7);
   U218 : INVX0 port map( INP => n203, ZN => n212);
   U219 : INVX0 port map( INP => n49, ZN => n1);
   U220 : INVX0 port map( INP => n36, ZN => n8);
   U221 : INVX0 port map( INP => n59, ZN => n21);
   U222 : NAND2X1 port map( IN1 => n31, IN2 => n86, QN => n27);
   U223 : NAND2X1 port map( IN1 => n55, IN2 => n56, QN => n124);
   U224 : INVX0 port map( INP => n61, ZN => n13);
   U225 : NOR2X0 port map( IN1 => n30, IN2 => wbuf_busy_r, QN => n69);
   U226 : NAND2X1 port map( IN1 => reset_b, IN2 => n67, QN => n65);
   U227 : AND2X1 port map( IN1 => reset_b, IN2 => n77, Q => n204);
   U228 : AND2X1 port map( IN1 => reset_b, IN2 => n77, Q => n75);
   U229 : AND2X1 port map( IN1 => n35, IN2 => n4, Q => n208);
   U230 : NOR2X0 port map( IN1 => n10, IN2 => i_wb_ack, QN => n74);
   U231 : NAND2X1 port map( IN1 => o_wb_we_port, IN2 => n74, QN => n58);
   U232 : AND2X1 port map( IN1 => n35, IN2 => n4, Q => n209);
   U233 : AND2X1 port map( IN1 => n35, IN2 => n4, Q => n33);
   U234 : AND2X1 port map( IN1 => wbuf_busy_r, IN2 => n35, Q => n206);
   U235 : AND2X1 port map( IN1 => reset_b, IN2 => n77, Q => n205);
   U236 : AND2X1 port map( IN1 => wbuf_busy_r, IN2 => n35, Q => n207);
   U237 : AND2X1 port map( IN1 => wbuf_busy_r, IN2 => n35, Q => n32);
   U238 : NOR2X0 port map( IN1 => n63, IN2 => n26, QN => n62);
   U239 : OAI21X1 port map( IN1 => n60, IN2 => n77, IN3 => reset_b, QN => n203)
                           ;
   U240 : NAND2X1 port map( IN1 => n59, IN2 => n58, QN => n83);
   U241 : INVX0 port map( INP => n84, ZN => n17);
   U242 : NOR2X0 port map( IN1 => n80, IN2 => n6, QN => n79);
   U243 : INVX0 port map( INP => n89, ZN => n16);
   U244 : NOR2X0 port map( IN1 => n7, IN2 => n15, QN => n88);
   U245 : NOR2X0 port map( IN1 => n69, IN2 => n78, QN => n85);
   U246 : NAND2X1 port map( IN1 => n51, IN2 => n52, QN => n50);
   U247 : NAND2X1 port map( IN1 => n46, IN2 => n47, QN => n45);
   U248 : OA21X1 port map( IN1 => n73, IN2 => n72, IN3 => reset_b, Q => n165);
   U249 : NOR2X0 port map( IN1 => n10, IN2 => n4, QN => n73);
   U250 : OA21X1 port map( IN1 => n43, IN2 => n15, IN3 => n44, Q => n42);
   U251 : INVX0 port map( INP => reset_b, ZN => n26);
   U252 : NOR2X0 port map( IN1 => n22, IN2 => i_write_enable, QN => n59);
   U253 : NAND2X1 port map( IN1 => i_select, IN2 => n25, QN => n31);
   U254 : INVX0 port map( INP => n31, ZN => n24);
   U255 : NAND2X1 port map( IN1 => i_wb_ack, IN2 => n11, QN => n28);
   U256 : INVX0 port map( INP => i_cache_req, ZN => n22);
   U257 : NAND2X1 port map( IN1 => i_write_enable, IN2 => i_select, QN => n86);
   U258 : INVX0 port map( INP => i_write_enable, ZN => n25);

end SYN_from_verilog;

--------------------------------------------------------------
--------------------------------------------------------------
--                                                          --
-- This VHDL file has been generated by the verilog2vhdl    --
-- tool.                                                    --
-- Contact help@edautils.com  for support/info.--
--                                                          --
--                                                          --
--------------------------------------------------------------
--------------------------------------------------------------
--
--
-- Assumptions: 
--         (1) All the parameters are of ins_type INTEGER, and hence the translated generics are of this ins_type
--
--
-- Generated by : bhanu on 9/28/12 11:51 PM
--
--
LIBRARY ieee, synopsys;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_signed.all;
use ieee.numeric_std.all;
use ieee.std_logic_misc.all;
use ieee.std_logic_textio.all;

entity a23_decode is 

    GENERIC (        CONSTANT REGOP : std_logic_vector(3 DOWNTO 0) := X"0";	
                 CONSTANT MULT : std_logic_vector(3 DOWNTO 0) := X"1";	
                 CONSTANT SWAP : std_logic_vector(3 DOWNTO 0) := X"2";	
                 CONSTANT TRANS : std_logic_vector(3 DOWNTO 0) := X"3";	
                 CONSTANT MTRANS : std_logic_vector(3 DOWNTO 0) := X"4";	
                 CONSTANT BRANCH : std_logic_vector(3 DOWNTO 0) := X"5";	
                 CONSTANT CODTRANS : std_logic_vector(3 DOWNTO 0) := X"6";	
                 CONSTANT COREGOP : std_logic_vector(3 DOWNTO 0) := X"7";	
                 CONSTANT CORTRANS : std_logic_vector(3 DOWNTO 0) := X"8";	
                 CONSTANT SWI : std_logic_vector(3 DOWNTO 0) := X"9";	
                 CONSTANT AND_OP : std_logic_vector(3 DOWNTO 0) := X"0";	
                 CONSTANT EOR : std_logic_vector(3 DOWNTO 0) := X"1";	
                 CONSTANT SUB : std_logic_vector(3 DOWNTO 0) := X"2";	
                 CONSTANT RSB : std_logic_vector(3 DOWNTO 0) := X"3";	
                 CONSTANT ADD : std_logic_vector(3 DOWNTO 0) := X"4";	
                 CONSTANT ADC : std_logic_vector(3 DOWNTO 0) := X"5";	
                 CONSTANT SBC : std_logic_vector(3 DOWNTO 0) := X"6";	
                 CONSTANT RSC : std_logic_vector(3 DOWNTO 0) := X"7";	
                 CONSTANT TST : std_logic_vector(3 DOWNTO 0) := X"8";	
                 CONSTANT TEQ : std_logic_vector(3 DOWNTO 0) := X"9";	
                 CONSTANT CMP : std_logic_vector(3 DOWNTO 0) := X"a";	
                 CONSTANT CMN : std_logic_vector(3 DOWNTO 0) := X"b";	
                 CONSTANT ORR : std_logic_vector(3 DOWNTO 0) := X"c";	
                 CONSTANT MOV : std_logic_vector(3 DOWNTO 0) := X"d";	
                 CONSTANT BIC : std_logic_vector(3 DOWNTO 0) := X"e";	
                 CONSTANT MVN : std_logic_vector(3 DOWNTO 0) := X"f";	
                 CONSTANT EQ : std_logic_vector(3 DOWNTO 0) := X"0";	
                 CONSTANT NE : std_logic_vector(3 DOWNTO 0) := X"1";	
                 CONSTANT CS : std_logic_vector(3 DOWNTO 0) := X"2";	
                 CONSTANT CC : std_logic_vector(3 DOWNTO 0) := X"3";	
                 CONSTANT MI : std_logic_vector(3 DOWNTO 0) := X"4";	
                 CONSTANT PL : std_logic_vector(3 DOWNTO 0) := X"5";	
                 CONSTANT VS : std_logic_vector(3 DOWNTO 0) := X"6";	
                 CONSTANT VC : std_logic_vector(3 DOWNTO 0) := X"7";	
                 CONSTANT HI : std_logic_vector(3 DOWNTO 0) := X"8";	
                 CONSTANT LS : std_logic_vector(3 DOWNTO 0) := X"9";	
                 CONSTANT GE : std_logic_vector(3 DOWNTO 0) := X"a";	
                 CONSTANT LT : std_logic_vector(3 DOWNTO 0) := X"b";	
                 CONSTANT GT : std_logic_vector(3 DOWNTO 0) := X"c";	
                 CONSTANT LE : std_logic_vector(3 DOWNTO 0) := X"d";	
                 CONSTANT AL : std_logic_vector(3 DOWNTO 0) := X"e";	
                 CONSTANT NV : std_logic_vector(3 DOWNTO 0) := X"f";	
                 CONSTANT LSL : std_logic_vector(1 DOWNTO 0) := "00";	
                 CONSTANT LSR : std_logic_vector(1 DOWNTO 0) := "01";	
                 CONSTANT ASR : std_logic_vector(1 DOWNTO 0) := "10";	
                 CONSTANT RRX : std_logic_vector(1 DOWNTO 0) := "11";	
                 CONSTANT ROR_OP : std_logic_vector(1 DOWNTO 0) := "11";	
                 CONSTANT SVC : std_logic_vector(1 DOWNTO 0) := B"11";	
                 CONSTANT IRQ : std_logic_vector(1 DOWNTO 0) := B"10";	
                 CONSTANT FIRQ : std_logic_vector(1 DOWNTO 0) := B"01";	
                 CONSTANT USR : std_logic_vector(1 DOWNTO 0) := B"00";	
                 CONSTANT OH_USR : integer := 0;
                 CONSTANT OH_IRQ : integer := 1;	
                 CONSTANT OH_FIRQ : integer := 2;
                 CONSTANT OH_SVC : integer := 3;
                 CONSTANT RST_WAIT1 : std_logic_vector(4 DOWNTO 0) := "00000";	
                 CONSTANT RST_WAIT2 : std_logic_vector(4 DOWNTO 0) := "00001";	
                 CONSTANT INT_WAIT1 : std_logic_vector(4 DOWNTO 0) := "00010";	
                 CONSTANT INT_WAIT2 : std_logic_vector(4 DOWNTO 0) := "00011";	
                 CONSTANT EXECUTE : std_logic_vector(4 DOWNTO 0) := "00100";	
                 CONSTANT PRE_FETCH_EXEC : std_logic_vector(4 DOWNTO 0) := "00101";	
                 CONSTANT MEM_WAIT1 : std_logic_vector(4 DOWNTO 0) := "00110";	
                 CONSTANT MEM_WAIT2 : std_logic_vector(4 DOWNTO 0) := "00111";	
                 CONSTANT PC_STALL1 : std_logic_vector(4 DOWNTO 0) := "01000";	
                 CONSTANT PC_STALL2 : std_logic_vector(4 DOWNTO 0) := "01001";	
                 CONSTANT MTRANS_EXEC1 : std_logic_vector(4 DOWNTO 0) := "01010";	
                 CONSTANT MTRANS_EXEC2 : std_logic_vector(4 DOWNTO 0) := "01011";	
                 CONSTANT MTRANS_EXEC3 : std_logic_vector(4 DOWNTO 0) := "01100";	
                 CONSTANT MTRANS_EXEC3B : std_logic_vector(4 DOWNTO 0) := "01101";	
                 CONSTANT MTRANS_EXEC4 : std_logic_vector(4 DOWNTO 0) := "01110";	
                 CONSTANT MTRANS5_ABORT : std_logic_vector(4 DOWNTO 0) := "01111";	
                 CONSTANT MULT_PROC1 : std_logic_vector(4 DOWNTO 0) := "10000";	
                 CONSTANT MULT_PROC2 : std_logic_vector(4 DOWNTO 0) := "10001";	
                 CONSTANT MULT_STORE : std_logic_vector(4 DOWNTO 0) := "10011";	
                 CONSTANT MULT_ACCUMU : std_logic_vector(4 DOWNTO 0) := "10100";	
                 CONSTANT SWAP_WRITE : std_logic_vector(4 DOWNTO 0) := "10110";	
                 CONSTANT SWAP_WAIT1 : std_logic_vector(4 DOWNTO 0) := "10111";	
                 CONSTANT SWAP_WAIT2 : std_logic_vector(4 DOWNTO 0) := "11000";	
                 CONSTANT COPRO_WAIT : std_logic_vector(4 DOWNTO 0) := "11001");	
     port (
        reset_b :  in std_logic;
        i_clk :  in std_logic;
        i_read_data :  in std_logic_vector( 31  downto 0  );
        i_fetch_stall :  in std_logic;
        i_irq :  in std_logic;
        i_firq :  in std_logic;
        i_dabt :  in std_logic;
        i_iabt :  in std_logic;
        i_adex :  in std_logic;
        i_execute_address :  in std_logic_vector( 31  downto 0  );
        i_abt_status :  in std_logic_vector( 7  downto 0  );
        i_execute_status_bits :  in std_logic_vector( 31  downto 0  );
        i_multiply_done :  in std_logic;
        o_read_data :  out std_logic_vector( 31  downto 0  );
        o_read_data_alignment :  out std_logic_vector( 4  downto 0  );
        o_imm32 :  out std_logic_vector( 31  downto 0  );
        o_imm_shift_amount :  out std_logic_vector( 4  downto 0  );
        o_shift_imm_zero :  out std_logic;
        o_condition :  out std_logic_vector( 3  downto 0  );
        o_exclusive_exec :  out std_logic;
        o_data_access_exec :  out std_logic;
        o_status_bits_mode :  out std_logic_vector( 1  downto 0  );
        o_status_bits_irq_mask :  out std_logic;
        o_status_bits_firq_mask :  out std_logic;
        o_rm_sel :  out std_logic_vector( 3  downto 0  );
        o_rds_sel :  out std_logic_vector( 3  downto 0  );
        o_rn_sel :  out std_logic_vector( 3  downto 0  );
        o_barrel_shift_amount_sel :  out std_logic_vector( 1  downto 0  );
        o_barrel_shift_data_sel :  out std_logic_vector( 1  downto 0  );
        o_barrel_shift_function :  out std_logic_vector( 1  downto 0  );
        o_alu_function :  out std_logic_vector( 8  downto 0  );
        o_multiply_function :  out std_logic_vector( 1  downto 0  );
        o_interrupt_vector_sel :  out std_logic_vector( 2  downto 0  );
        o_address_sel :  out std_logic_vector( 3  downto 0  );
        o_pc_sel :  out std_logic_vector( 1  downto 0  );
        o_byte_enable_sel :  out std_logic_vector( 1  downto 0  );
        o_status_bits_sel :  out std_logic_vector( 2  downto 0  );
        o_reg_write_sel :  out std_logic_vector( 2  downto 0  );
        o_user_mode_regs_load :  out std_logic;
        o_user_mode_regs_store_nxt :  out std_logic;
        o_firq_not_user_mode :  out std_logic;
        o_write_data_wen :  out std_logic;
        o_base_address_wen :  out std_logic;
        o_pc_wen :  out std_logic;
        o_reg_bank_wen :  out std_logic_vector( 14  downto 0  );
        o_status_bits_flags_wen :  out std_logic;
        o_status_bits_mode_wen :  out std_logic;
        o_status_bits_irq_mask_wen :  out std_logic;
        o_status_bits_firq_mask_wen :  out std_logic;
        o_copro_opcode1 :  out std_logic_vector( 2  downto 0  );
        o_copro_opcode2 :  out std_logic_vector( 2  downto 0  );
        o_copro_crn :  out std_logic_vector( 3  downto 0  );
        o_copro_crm :  out std_logic_vector( 3  downto 0  );
        o_copro_num :  out std_logic_vector( 3  downto 0  );
        o_copro_operation :  out std_logic_vector( 1  downto 0  );
        o_copro_write_data_wen :  out std_logic;
        o_iabt_trigger :  out std_logic;
        o_iabt_address :  out std_logic_vector( 31  downto 0  );
        o_iabt_status :  out std_logic_vector( 7  downto 0  );
        o_dabt_trigger :  out std_logic;
        o_dabt_address :  out std_logic_vector( 31  downto 0  );
        o_dabt_status :  out std_logic_vector( 7  downto 0  )
    );
end entity; 


architecture rtl_decode of a23_decode is 

    function pcf(   pc_reg : unsigned ( 31  downto 0  ) )  
                   return unsigned is 
        variable  pcf_return_dummy_var : unsigned ( 31  downto 0  );
    begin
        pcf_return_dummy_var := ( "000000"  & pc_reg(25  downto 2 ) & "00"  );
         return pcf_return_dummy_var;
    end;

    function decode( reg_sel : std_logic_vector ( 3  downto 0  ))  return std_logic_vector is 
        variable decode_return_dummy_var : std_logic_vector ( 14  downto 0  );
    begin
        case  ( reg_sel ) is 
            when X"0"  => 
                decode_return_dummy_var := ("000" &  X"001") ;
            when  X"1"  => 
                decode_return_dummy_var := ("000" & X"002") ;
            when  X"2"  => 
                decode_return_dummy_var := ("000" &  X"004") ;
            when 
                X"3"  => 
                decode_return_dummy_var := ("000" &  X"008") ;
            when 
                X"4"  => 
                decode_return_dummy_var := ("000" &  X"010") ;
            when 
                X"5"  => 
                decode_return_dummy_var := ("000" & X"020") ;
            when 
                X"6"  => 
                decode_return_dummy_var := ("000" & X"040") ;
            when 
                X"7"  => 
                decode_return_dummy_var := ("000" & X"080") ;
            when 
                X"8"  => 
                decode_return_dummy_var := ("000" & X"100") ;
            when 
                X"9"  => 
                decode_return_dummy_var := ("000" & X"200") ;
            when 
                X"a"  => 
                decode_return_dummy_var := ("000" & X"400") ;
            when 
                X"b"  => 
                decode_return_dummy_var := ("000" & X"800");
            when 
                X"c"  => 
                decode_return_dummy_var := ("001" & X"000") ;
            when 
                X"d"  => 
                decode_return_dummy_var := ("010" & X"000");
            when 
                X"e"  => 
                decode_return_dummy_var := ("100" & X"000") ;
            when 
                 others  => 
                decode_return_dummy_var := (X"000" & "000");
        end case;
         return decode_return_dummy_var;
    end;

    function oh_status_bits_mode(fn_status_bits_mode : std_logic_vector( 1  downto 0  ))  return std_logic_vector is 
        variable oh_status_bits_mode_return_dummy_var : std_logic_vector( 3  downto 0  );
    begin
  if (fn_status_bits_mode = SVC) then 
  oh_status_bits_mode_return_dummy_var := To_StdLogicVector ("0001" sll OH_SVC); 
  elsif (fn_status_bits_mode = IRQ) then
  oh_status_bits_mode_return_dummy_var := To_StdLogicVector ("0001" sll OH_IRQ) ;
  elsif (fn_status_bits_mode = FIRQ) then
  oh_status_bits_mode_return_dummy_var := To_StdLogicVector ("0001" sll OH_FIRQ) ;
  else
  oh_status_bits_mode_return_dummy_var := To_StdLogicVector ("0001" sll OH_USR);
  end if;
  return oh_status_bits_mode_return_dummy_var;
   end;

function to_std_logic(c: character) return std_logic is 
    variable sl: std_logic;
    begin
      case c is
        when 'U' => 
           sl := 'U'; 
        when 'X' =>
           sl := 'X';
        when '0' => 
           sl := '0';
        when '1' => 
           sl := '1';
        when 'Z' => 
           sl := 'Z';
        when 'W' => 
           sl := 'W';
        when 'L' => 
           sl := 'L';
        when 'H' => 
           sl := 'H';
        when '-' => 
           sl := '-';
        when others =>
           sl := 'X'; 
    end case;
   return sl;
  end to_std_logic;




function to_std_logic_vector(s: string) return std_logic_vector is 
  variable slv: std_logic_vector(s'high-s'low downto 0);
  variable k: integer;
begin
   k := s'high-s'low;
  for i in s'range loop
     slv(k) := to_std_logic(s(i));
     k      := k - 1;
  end loop;
  return slv;
end to_std_logic_vector;                                       


    function mode_name(  constant mode : std_logic_vector( 4  downto 0  ))  return std_logic_vector is 
        variable mode_name_return_dummy_var : std_logic_vector ( 111  downto 0  );
    begin

	 if ( mode = USR) then
		mode_name_return_dummy_var := to_std_logic_vector ("User");
	 elsif ( mode = SVC) then
		 mode_name_return_dummy_var := to_std_logic_vector("Supervisor");
	 elsif (mode = IRQ) then
		 mode_name_return_dummy_var := to_std_logic_vector("Interrupt"); 
	 elsif (mode = FIRQ) then
	 	mode_name_return_dummy_var := to_std_logic_vector("Fast Interrupt");
	 else
	 	mode_name_return_dummy_var := to_std_logic_vector("UNKNOWN");
	 end if;
         return mode_name_return_dummy_var;
    end;


  FUNCTION conditional_execute (condition : IN std_logic_vector(3 DOWNTO 0);
                 flags : IN std_logic_vector(3 DOWNTO 0)) RETURN std_logic   
 IS 
        VARIABLE conditional_execute : std_logic;	

BEGIN
    if (condition = AL OR (condition = EQ AND 
		To_bit(flags(2)) /= '0') OR (condition = NE AND 
		NOT (To_bit(flags(2)) /= '0')) OR (condition = CS AND 
		To_bit(flags(1)) /= '0') OR (condition = CC AND 
		NOT (To_bit(flags(1)) /= '0')) OR (condition = MI AND 
		To_bit(flags(3)) /= '0') OR (condition = PL AND 
		NOT (To_bit(flags(3)) /= '0')) OR (condition = VS AND 
		To_bit(flags(0)) /= '0') OR (condition = VC AND 
		NOT (To_bit(flags(0)) /= '0')) OR (condition = HI AND 
		To_bit(flags(1)) /= '0' AND NOT (To_bit(flags(2)) /= '0')) OR 
		(condition = LS AND (NOT (To_bit(flags(1)) /= '0') OR 
		To_bit(flags(2)) /= '0')) OR (condition = GE AND 
		flags(3) = flags(0)) OR (condition = LT AND 
		flags(3) /= flags(0)) OR (condition = GT AND 
		NOT (To_bit(flags(2)) /= '0') AND flags(3) = flags(0)) OR 
		(condition = LE AND (To_bit(flags(2)) /= '0' OR 
		flags(3) /= flags(0))))	then
    conditional_execute := '1';
    end if;

    RETURN conditional_execute;
END;

    function log2(  constant num : integer )  return   integer is
        variable log2_return_dummy_var : integer;
        variable i : integer;
    begin
        log2_return_dummy_var := 0 ;
        i := 0 ;
        while ( ( i < 30  )  ) loop
            if ((2**i > num)  and ( log2_return_dummy_var = 0))  then 
                log2_return_dummy_var := ( i - 1 ) ;
            end if;
            i := (i + 1) ;
        end loop;
         return log2_return_dummy_var;
    end;
function Bool_to_Std_Logic(L: BOOLEAN) return std_ulogic is 
     begin 
         if L then 
             return('1'); 
         else 
             return('0'); 
         end if; 
     end function; 
 



    signal instruction : std_logic_vector( 31  downto 0  );
    signal instruction_iabt : std_logic;
    signal instruction_adex : std_logic;
    signal instruction_address : std_logic_vector( 31  downto 0  );
    signal instruction_iabt_status : std_logic_vector( 7  downto 0  );
    signal instruction_sel : std_logic_vector( 1  downto 0  );
    signal ins_type : std_logic_vector( 3  downto 0  );
    signal opcode : std_logic_vector( 3  downto 0  );
    signal imm8 : std_logic_vector( 7  downto 0  );
    signal offset12 : std_logic_vector( 31  downto 0  );
    signal offset24 : std_logic_vector( 31  downto 0  );
    signal shift_imm : std_logic_vector( 4  downto 0  );
    signal opcode_compare : std_logic;
    signal mem_op : std_logic;
    signal load_op : std_logic;
    signal store_op : std_logic;
    signal write_pc : std_logic;
    signal immediate_shifter_operand : std_logic;
    signal rds_use_rs : std_logic;
    signal branch_ins : std_logic;
    signal mem_op_pre_indexed : std_logic;
    signal mem_op_post_indexed : std_logic;
    signal imm32_nxt : std_logic_vector( 31  downto 0  );
    signal imm_shift_amount_nxt : std_logic_vector( 4  downto 0  );
    signal shift_imm_zero_nxt : std_logic;
    signal condition_nxt : std_logic_vector( 3  downto 0  );
    signal exclusive_exec_nxt : std_logic;
    signal data_access_exec_nxt : std_logic;
    signal barrel_shift_function_nxt : std_logic_vector( 1  downto 0  );
    signal alu_function_nxt : std_logic_vector( 8  downto 0  );
    signal multiply_function_nxt : std_logic_vector( 1  downto 0  );
    signal status_bits_mode_nxt : std_logic_vector( 1  downto 0  );
    signal status_bits_irq_mask_nxt : std_logic;
    signal status_bits_firq_mask_nxt : std_logic;
    signal rm_sel_nxt : std_logic_vector( 3  downto 0  );
    signal rds_sel_nxt : std_logic_vector( 3  downto 0  );
    signal rn_sel_nxt : std_logic_vector( 3  downto 0  );
    signal barrel_shift_amount_sel_nxt : std_logic_vector( 1  downto 0  );
    signal barrel_shift_data_sel_nxt : std_logic_vector( 1  downto 0  );
    signal address_sel_nxt : std_logic_vector( 3  downto 0  );
    signal pc_sel_nxt : std_logic_vector( 1  downto 0  );
    signal byte_enable_sel_nxt : std_logic_vector( 1  downto 0  );
    signal status_bits_sel_nxt : std_logic_vector( 2  downto 0  );
    signal reg_write_sel_nxt : std_logic_vector( 2  downto 0  );
    signal user_mode_regs_load_nxt : std_logic;
    signal firq_not_user_mode_nxt : std_logic;
    signal alu_swap_sel_nxt : std_logic;
    signal alu_not_sel_nxt : std_logic;
    signal alu_cin_sel_nxt : std_logic_vector( 1  downto 0  );
    signal alu_cout_sel_nxt : std_logic;
    signal alu_out_sel_nxt : std_logic_vector( 3  downto 0  );
    signal write_data_wen_nxt : std_logic;
    signal copro_write_data_wen_nxt : std_logic;
    signal base_address_wen_nxt : std_logic;
    signal pc_wen_nxt : std_logic;
    signal reg_bank_wen_nxt : std_logic_vector( 14  downto 0  );
    signal status_bits_flags_wen_nxt : std_logic;
    signal status_bits_mode_wen_nxt : std_logic;
    signal status_bits_irq_mask_wen_nxt : std_logic;
    signal status_bits_firq_mask_wen_nxt : std_logic;
    signal saved_current_instruction_wen : std_logic;
    signal pre_fetch_instruction_wen : std_logic;
    signal control_state : std_logic_vector( 4  downto 0  );
    signal control_state_nxt : std_logic_vector( 4  downto 0  );
    signal dabt : std_logic;
    signal dabt_reg : std_logic;
    signal dabt_reg_d1 : std_logic;
    signal iabt_reg : std_logic;
    signal adex_reg : std_logic;
    signal abt_address_reg : std_logic_vector( 31  downto 0  );
    signal abt_status_reg : std_logic_vector( 7  downto 0  );
    signal saved_current_instruction : std_logic_vector( 31  downto 0  );
    signal saved_current_instruction_iabt : std_logic;
    signal saved_current_instruction_adex : std_logic;
    signal saved_current_instruction_address : std_logic_vector( 31  downto 0  );
    signal saved_current_instruction_iabt_status : std_logic_vector( 7  downto 0  );
    signal pre_fetch_instruction : std_logic_vector( 31  downto 0  );
    signal pre_fetch_instruction_iabt : std_logic;
    signal pre_fetch_instruction_adex : std_logic;
    signal pre_fetch_instruction_address : std_logic_vector( 31  downto 0  );
    signal pre_fetch_instruction_iabt_status : std_logic_vector( 7  downto 0  );
    signal instruction_valid : std_logic;
    signal instruction_execute : std_logic;
    signal mtrans_reg : std_logic_vector( 3  downto 0  );
    signal mtrans_reg_d1 : std_logic_vector( 3  downto 0  );
    signal mtrans_reg_d2 : std_logic_vector( 3  downto 0  );
    signal mtrans_instruction_nxt : std_logic_vector( 31  downto 0  );
    signal mtrans_base_reg_change : std_logic_vector( 31  downto 0  );
    signal mtrans_num_registers : std_logic_vector( 4  downto 0  );
    signal use_saved_current_instruction : std_logic;
    signal use_pre_fetch_instruction : std_logic;
    signal interrupt : std_logic;
    signal interrupt_mode : std_logic_vector( 1  downto 0  );
    signal next_interrupt : std_logic_vector( 2  downto 0  );
--    signal IRQ : INTEGER := 2;
--    signal FIRQ : INTEGER := 1; 
    signal firq_request : std_logic;
    signal irq_request : std_logic;
    signal swi_request : std_logic;
    signal und_request : std_logic;
    signal dabt_request : std_logic;
    signal copro_operation_nxt : std_logic_vector( 1  downto 0  );
    signal mtrans_r15 : std_logic;
    signal mtrans_r15_nxt : std_logic;
    signal restore_base_address : std_logic;
    signal restore_base_address_nxt : std_logic;
    signal regop_set_flags : std_logic;
    signal o_status_bits_mode_int : std_logic_vector(1 downto 0);
    signal o_read_data_int :std_logic_vector(31 downto 0);
    signal irq_sig : std_logic;
    signal firq_sig : std_logic;
    signal o_status_bits_irq_mask_int :std_logic;
    signal o_status_bits_firq_mask_int :std_logic;
    signal o_multiply_function_int :std_logic_vector( 1 downto 0); 
    signal o_condition_int :std_logic_vector(3 downto 0) ; 
    begin 
    
    o_status_bits_mode <= o_status_bits_mode_int;
    o_read_data <= o_read_data_int;	
    o_status_bits_irq_mask <= o_status_bits_irq_mask_int ;
    o_status_bits_firq_mask <= o_status_bits_firq_mask_int ;
    o_multiply_function  <= o_multiply_function_int;
    o_condition  <= o_condition_int ;

        o_iabt_trigger <= instruction_iabt when(( o_status_bits_mode_int = SVC )  and ( control_state = INT_WAIT1 )) 
                              else '0';
        o_iabt_address <= instruction_address;
        o_iabt_status <= instruction_iabt_status;
        o_dabt_trigger <= ( dabt_reg and (  not dabt_reg_d1 )  ) ;
        o_dabt_address <= abt_address_reg;
        o_dabt_status <= abt_status_reg;
        use_saved_current_instruction <= '1' when( (instruction_execute = '1') and ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( control_state = MEM_WAIT1 )  or ( control_state = MEM_WAIT2 )  )  or ( control_state = MTRANS_EXEC1 )  )  or ( control_state = MTRANS_EXEC2 )  )  or ( control_state = MTRANS_EXEC3 )  )  or ( control_state = MTRANS_EXEC3B )  )  or ( control_state = MTRANS_EXEC4 )  )  or ( control_state = MTRANS5_ABORT )  )  or ( control_state = MULT_PROC1 )  )  or ( control_state = MULT_PROC2 )  )  or ( control_state = MULT_ACCUMU )  )  or ( control_state = MULT_STORE )  )  or ( control_state = INT_WAIT1 )  )  or ( control_state = INT_WAIT2 )  )  or ( control_state = SWAP_WRITE )  )  or ( control_state = SWAP_WAIT1 )  )  or ( control_state = SWAP_WAIT2 )  )  or ( control_state = COPRO_WAIT )  )  ) else '0';

        use_pre_fetch_instruction <='1' when ( control_state = PRE_FETCH_EXEC ) else '0';

        instruction_sel <= "01" when (use_saved_current_instruction = '1') else
			   "10" when (use_pre_fetch_instruction = '1') else
			   "00";
	instruction   <= o_read_data_int when (instruction_sel = "00") else
                       	 saved_current_instruction when (instruction_sel = "01") else	
			 pre_fetch_instruction;

	 instruction_iabt <= iabt_reg when instruction_sel = "00" else
                       	     saved_current_instruction_iabt when (instruction_sel = "01") else	
			     pre_fetch_instruction_iabt;

	 instruction_address <= abt_address_reg when instruction_sel = "00" else
                       	     saved_current_instruction_address when (instruction_sel = "01") else	
			     pre_fetch_instruction_address;

	 instruction_iabt_status <= abt_status_reg when instruction_sel = "00" else
                       	     saved_current_instruction_iabt_status when (instruction_sel = "01") else	
			     pre_fetch_instruction_iabt_status;
	 
	instruction_adex <= adex_reg when instruction_sel = "00" else
                       	     saved_current_instruction_adex when (instruction_sel = "01") else	
			     pre_fetch_instruction_adex;



	process (instruction)
	begin
         ins_type <= SWI;
	 if(std_match("00010-001001", instruction (27 downto 20) & instruction (7 downto 4))) then
           ins_type <= SWAP;
	end if;
	 if(std_match("000000--1001", instruction (27 downto 20) & instruction (7 downto 4))) then
           ins_type <= MULT;
	end if;
	 if(std_match("00----------", instruction (27 downto 20) & instruction (7 downto 4))) then
           ins_type <= REGOP;
	end if;
	 if(std_match("01----------", instruction (27 downto 20) & instruction (7 downto 4))) then
           ins_type <= TRANS;
	end if;
	 if(std_match("100---------", instruction (27 downto 20) & instruction (7 downto 4))) then
           ins_type <= MTRANS;
	end if;
	 if(std_match("101---------", instruction (27 downto 20) & instruction (7 downto 4))) then
           ins_type <= BRANCH;
	end if;
	 if(std_match("110---------", instruction (27 downto 20) & instruction (7 downto 4))) then
           ins_type <= CODTRANS;
	end if;
	 if(std_match("1110-------0", instruction (27 downto 20) & instruction (7 downto 4))) then
           ins_type <= COREGOP;
	end if;
	 if(std_match("1110-------1", instruction (27 downto 20) & instruction (7 downto 4))) then
           ins_type <= CORTRANS;
	end if;


	end process;

 
        --process (instruction)
        --begin
        --    case  ( ( instruction(27  downto 20 ) & instruction(7  downto 4 ) ) ) is 
         --       when 
          --          B"00010-001001"  => 
           --         ins_type <= SWAP;
           --     when 
           --         B"000000??1001"  => 
           --         ins_type <= MULT;
           --     when 
           --         B"00??????????"  => 
           --         ins_type <= REGOP;
           --     when 
           --         B"01??????????"  => 
           --         ins_type <= TRANS;
           --     when 
           --         B"100?????????"  => 
           --         ins_type <= MTRANS;
           --     when 
           --         B"101?????????"  => 
           --         ins_type <= BRANCH;
          --      when 
           --         B"110?????????"  => 
           --         ins_type <= CODTRANS;
           --     when 
           --         B"1110???????0"  => 
           --         ins_type <= COREGOP;
           --     when 
           --         B"1110???????1"  => 
           --         ins_type <= CORTRANS;
           --     when 
           --          others  => 
           --         ins_type <= SWI;
           -- end case;
      --  end process;

        opcode <= instruction(24  downto 21 );

        condition_nxt <= instruction(31  downto 28 );

        rm_sel_nxt <= instruction(3  downto 0 );

        rn_sel_nxt <= "1111" when branch_ins = '1' else
		       instruction(19 downto 16);

	rds_sel_nxt <= instruction(3 downto 0) when control_state = SWAP_WRITE else
		       mtrans_reg 	       when ins_type = MTRANS else
		       "1111"		       when branch_ins = '1' else
			instruction (11 downto 8) when rds_use_rs = '1' else
			instruction(15 downto 12) ;


        shift_imm <= instruction(11  downto 7 );
        offset12 <= ( X"00000"  & instruction(11  downto 0 ) );
        offset24 <= (31 downto 26 => instruction (23)) & instruction(23  downto 0 ) & "00";
        imm8 <= instruction(7  downto 0 );
        immediate_shifter_operand <= instruction(25 );
        
	rds_use_rs <= ( ( (Bool_to_Std_Logic(ins_type = REGOP)  and (  not instruction(25 ) )  )  and instruction(4 ) )  or 
                         (Bool_to_Std_Logic (ins_type = MULT)  and ( ( Bool_to_Std_Logic( control_state = MULT_PROC1 )  or
                           Bool_to_Std_Logic( control_state = MULT_PROC2 ))  or ( instruction_valid and (  not interrupt ))))) ;

        branch_ins <= '1' when ( ins_type = BRANCH ) else '0';

        opcode_compare <= ( ( ( Bool_to_Std_Logic( opcode = CMP )  or Bool_to_Std_Logic( opcode = CMN )  )  or
                                 Bool_to_Std_Logic( opcode = TEQ )  )  or Bool_to_Std_Logic( opcode = TST )  ) ;
        mem_op <= Bool_to_Std_Logic( ins_type = TRANS ) ;
        load_op <= ( mem_op and instruction(20 ) ) ;
        store_op <= ( mem_op and (  not instruction(20 ) )  ) ;
        write_pc <= ( pc_wen_nxt and Bool_to_Std_Logic(pc_sel_nxt /= "00")  ) ;
        regop_set_flags <= ( Bool_to_Std_Logic( ins_type = REGOP )  and instruction(20 ) ) ;
        mem_op_pre_indexed <= ( instruction(24 ) and instruction(21 ) ) ;
        mem_op_post_indexed <= (  not instruction(24 ) ) ;

        imm32_nxt <= X"00000000" when ins_type = MULT else
		     mtrans_base_reg_change  when ins_type = MTRANS else
		     offset24 when ins_type = BRANCH else
	             offset12 when ins_type = TRANS else
		     (X"000000" & imm8(7 downto 0)) when instruction(11 downto 8) = X"0" else
		     (imm8(1 downto 0) & X"000000" &  imm8(7 downto 2)) when instruction(11 downto 8) = X"1" else
		     (imm8(3 downto 0) & X"000000" &  imm8(7 downto 4)) when instruction(11 downto 8) = X"2" else
		     (imm8(5 downto 0) & X"000000" &  imm8(7 downto 6)) when instruction(11 downto 8) = X"3" else
		     (imm8(7 downto 0) & X"000000" ) when instruction(11 downto 8) = X"4" else 
		     ("00" & imm8(7 downto 0) & X"00000" & "00" ) when instruction(11 downto 8) = X"5" else 
		     (X"0" & imm8(7 downto 0) & X"00000" ) when instruction(11 downto 8) = X"6" else 
		     ("000000" & imm8(7 downto 0) & X"0000" & "00" ) when instruction(11 downto 8) = X"7" else 
		     (X"00" & imm8(7 downto 0) & X"0000" ) when instruction(11 downto 8) = X"8" else 
		     (X"00" & "00" & imm8(7 downto 0) & X"000" & "00" ) when instruction(11 downto 8) = X"9" else 
		     (X"000" & imm8(7 downto 0) & X"000" ) when instruction(11 downto 8) = X"a" else 
		     (X"000" & "00" & imm8(7 downto 0) & X"00" & "00" ) when instruction(11 downto 8) = X"b" else 
		     (X"0000" & imm8(7 downto 0) & X"00" ) when instruction(11 downto 8) = X"c" else 
		     (X"0000" & "00" & imm8(7 downto 0) & X"0" & "00" ) when instruction(11 downto 8) = X"d" else 
		     (X"00000" & imm8(7 downto 0) & X"0" ) when instruction(11 downto 8) = X"e" else 
                     (X"00000" & "00" &  imm8(7 downto 0) & "00");


        imm_shift_amount_nxt <= shift_imm;
        shift_imm_zero_nxt <= ( Bool_to_Std_Logic( imm_shift_amount_nxt = "00000"  )  and Bool_to_Std_Logic( barrel_shift_amount_sel_nxt = "10"  )  ) ;
        alu_function_nxt <= ( alu_swap_sel_nxt & alu_not_sel_nxt & alu_cin_sel_nxt & alu_cout_sel_nxt & alu_out_sel_nxt );


        process (instruction)
        begin
	mtrans_reg <= X"f";
	 if(std_match("---------------1", instruction (15 downto 0))) then
           mtrans_reg <= X"0";
	end if;
	 if(std_match("--------------10", instruction (15 downto 0))) then
           mtrans_reg <= X"1";
	end if;
	 if(std_match("-------------100", instruction (15 downto 0))) then
           mtrans_reg <= X"2";
	end if;
	 if(std_match("------------1000", instruction (15 downto 0))) then
           mtrans_reg <= X"3";
	end if;
	 if(std_match("-----------10000", instruction (15 downto 0))) then
           mtrans_reg <= X"4";
	end if;
	 if(std_match("----------100000", instruction (15 downto 0))) then
           mtrans_reg <= X"5";
	end if;
	 if(std_match("---------1000000", instruction (15 downto 0))) then
           mtrans_reg <= X"6";
	end if;
	 if(std_match("--------10000000", instruction (15 downto 0))) then
           mtrans_reg <= X"7";
	end if;
	 if(std_match("-------100000000", instruction (15 downto 0))) then
           mtrans_reg <= X"8";
	end if;
	 if(std_match("------1000000000", instruction (15 downto 0))) then
           mtrans_reg <= X"9";
	end if;
	 if(std_match("-----10000000000", instruction (15 downto 0))) then
           mtrans_reg <= X"a";
	end if;
	 if(std_match("----100000000000", instruction (15 downto 0))) then
           mtrans_reg <= X"b";
	end if;
	 if(std_match("---1000000000000", instruction (15 downto 0))) then
           mtrans_reg <= X"c";
	end if;
	 if(std_match("--10000000000000", instruction (15 downto 0))) then
           mtrans_reg <= X"d";
	end if;
	 if(std_match("-100000000000000", instruction (15 downto 0))) then
           mtrans_reg <= X"e";
	end if;
        end process;

        process (instruction)
        begin
                    mtrans_instruction_nxt <= ( instruction(31  downto 16 ) & X"0000"  );
	 if(std_match("---------------1", instruction (15 downto 0))) then
                    mtrans_instruction_nxt <= ( instruction(31  downto 16 ) & instruction(15  downto 1 ) & "0"  );
	 end if;
	 if(std_match("--------------10", instruction (15 downto 0))) then
                    mtrans_instruction_nxt <= ( instruction(31  downto 16 ) & instruction(15  downto 2 ) & "00"  );
	end if;
	 if(std_match("-------------100", instruction (15 downto 0))) then
                    mtrans_instruction_nxt <= ( instruction(31  downto 16 ) & instruction(15  downto 3 ) & "000"  );
	end if;
	 if(std_match("------------1000", instruction (15 downto 0))) then
                    mtrans_instruction_nxt <= ( instruction(31  downto 16 ) & instruction(15  downto 4 ) & "0000"  );
	 end if;
	 if(std_match("-----------10000", instruction (15 downto 0))) then
                    mtrans_instruction_nxt <= ( instruction(31  downto 16 ) & instruction(15  downto 5 ) & "00000"  );
	 end if;
	 if(std_match("----------100000", instruction (15 downto 0))) then
                    mtrans_instruction_nxt <= ( instruction(31  downto 16 ) & instruction(15  downto 6 ) & "000000"  );
	 end if;
	 if(std_match("---------1000000", instruction (15 downto 0))) then
                    mtrans_instruction_nxt <= ( instruction(31  downto 16 ) & instruction(15  downto 7 ) & "0000000"  );
	 end if;
	 if(std_match("--------10000000", instruction (15 downto 0))) then
                    mtrans_instruction_nxt <= ( instruction(31  downto 16 ) & instruction(15  downto 8 ) & X"00"  );
	end if;
	 if(std_match("-------100000000", instruction (15 downto 0))) then
                    mtrans_instruction_nxt <= ( instruction(31  downto 16 ) & instruction(15  downto 9 ) & "000000000"  );
	end if;
	 if(std_match("------1000000000", instruction (15 downto 0))) then
                    mtrans_instruction_nxt <= ( instruction(31  downto 16 ) & instruction(15  downto 10 ) & "0000000000"  );
	end if;
	 if(std_match("-----10000000000", instruction (15 downto 0))) then
                    mtrans_instruction_nxt <= ( instruction(31  downto 16 ) & instruction(15  downto 11 ) & "00000000000"  );
	end if;
	 if(std_match("----100000000000", instruction (15 downto 0))) then
                    mtrans_instruction_nxt <= ( instruction(31  downto 16 ) & instruction(15  downto 12 ) & "000000000000"  );
	end if;
	 if(std_match("---1000000000000", instruction (15 downto 0))) then
                    mtrans_instruction_nxt <= ( instruction(31  downto 16 ) & instruction(15  downto 13 ) & "0000000000000"  );
	end if;
	 if(std_match("--10000000000000", instruction (15 downto 0))) then
                    mtrans_instruction_nxt <= ( instruction(31  downto 16 ) & instruction(15  downto 14 ) & "00000000000000"  );
	 end if;
	 if(std_match("-100000000000000", instruction (15 downto 0))) then
                    mtrans_instruction_nxt <= ( instruction(31  downto 16 ) & instruction(15 ) & "000000000000000"  );
	end if;
        end process;


        mtrans_num_registers <= ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( X"0"  & instruction(15 ) ) + ( X"0"  & instruction(14 ) ) )  + ( X"0"  & instruction(13 ) ) )  + ( X"0"  & instruction(12 ) ) )  + ( X"0"  & instruction(11 ) ) )  + ( X"0"  & instruction(10 ) ) )  + ( X"0"  & instruction(9 ) ) )  + ( X"0"  & instruction(8 ) ) )  + ( X"0"  & instruction(7 ) ) )  + ( X"0"  & instruction(6 ) ) )  + ( X"0"  & instruction(5 ) ) )  + ( X"0"  & instruction(4 ) ) )  + ( X"0"  & instruction(3 ) ) )  + ( X"0"  & instruction(2 ) ) )  + ( X"0"  & instruction(1 ) ) )  + ( X"0"  & instruction(0 ) ) ) ;
        mtrans_base_reg_change <= ( X"000000" & "0"  & mtrans_num_registers & "00"  );
        firq_request <= ( firq_sig and (  not i_execute_status_bits(26))) ;
        irq_request <= ( irq_sig and (  not i_execute_status_bits(27 ) )  ) ;
        swi_request <=  '1' when ( ins_type = SWI ) else '0';
        dabt_request <= dabt_reg;
        und_request <= '1' when(((ins_type = CODTRANS)  or (ins_type = COREGOP ))  or (( ins_type = CORTRANS )  and ( instruction(11  downto 8 ) /= X"15" )));
	next_interrupt <= "001" when dabt_request = '1' else
			  "010" when firq_request = '1' else
			  "011" when irq_request = '1' else
			   "100" when instruction_adex = '1' else
			   "101" when instruction_iabt = '1' else
			    "110" when und_request = '1' else
			   "111" when swi_request = '1' else "000";

        interrupt <= ( ( Bool_to_Std_Logic( next_interrupt /= "000"  )  and Bool_to_Std_Logic( next_interrupt /= "111"  )  )  and 
                         Bool_to_Std_Logic( next_interrupt /= "110"  )  ) ;

	interrupt_mode <= FIRQ when next_interrupt = "010" else
			  IRQ  when next_interrupt = "010" else
			  SVC  when next_interrupt = "100" else
			  SVC  when next_interrupt = "101" else
			  SVC  when next_interrupt = "110" else
			  SVC  when next_interrupt = "111" else
			  SVC  when next_interrupt = "001" else
                          USR;

        process(i_execute_status_bits , o_status_bits_irq_mask_int , o_status_bits_firq_mask_int , restore_base_address,
               mtrans_r15 , instruction_valid , interrupt , ins_type , opcode_compare , immediate_shifter_operand , opcode,
               mem_op,store_op , mem_op_pre_indexed , mem_op_post_indexed , rn_sel_nxt , shift_imm , und_request , interrupt_mode,
               regop_set_flags , next_interrupt , control_state , instruction_execute,load_op , i_execute_address,dabt , mtrans_reg_d2,
	       o_multiply_function_int , o_status_bits_mode_int , write_pc , mtrans_instruction_nxt , mtrans_num_registers , instruction_execute,
i_multiply_done , o_multiply_function_int , instruction_valid , mem_op , instruction , write_pc , mtrans_instruction_nxt , mtrans_num_registers
)
-- user emacs to generate correct sensitivity list
        begin
            status_bits_mode_nxt <= i_execute_status_bits(1  downto 0 );
            status_bits_irq_mask_nxt <= o_status_bits_irq_mask_int;
            status_bits_firq_mask_nxt <= o_status_bits_firq_mask_int;
            exclusive_exec_nxt <= '0' ;
            data_access_exec_nxt <= '0' ;
            copro_operation_nxt <= "00" ;
            saved_current_instruction_wen <= '0' ;
            pre_fetch_instruction_wen <= '0' ;
            mtrans_r15_nxt <= mtrans_r15;
            restore_base_address_nxt <= restore_base_address;
            barrel_shift_amount_sel_nxt <= (others => '0');
            barrel_shift_data_sel_nxt <= (others => '0');
            barrel_shift_function_nxt <= (others => '0');
            multiply_function_nxt <= (others => '0');
            address_sel_nxt <= (others => '0');
            pc_sel_nxt <=  (others => '0');
            byte_enable_sel_nxt <=  (others => '0');
            status_bits_sel_nxt <= (others => '0');
            reg_write_sel_nxt <=  (others => '0');
            user_mode_regs_load_nxt <= '0';
            o_user_mode_regs_store_nxt <= '0';
            alu_swap_sel_nxt <= '0';
            alu_not_sel_nxt <= '0';
            alu_cin_sel_nxt <= (others => '0');
            alu_cout_sel_nxt <= '0';
            alu_out_sel_nxt <= (others => '0');
            write_data_wen_nxt <= '0';
            copro_write_data_wen_nxt <= '0';
            base_address_wen_nxt <= '0';
            pc_wen_nxt <= '0';
            reg_bank_wen_nxt <= (others => '0');
            status_bits_flags_wen_nxt <= '0';
            status_bits_mode_wen_nxt <= '0';
            status_bits_irq_mask_wen_nxt <= '0';
            status_bits_firq_mask_wen_nxt <= '0';
            if ((instruction_valid and (  not interrupt)) = '1') then 
                if ( ( ins_type = REGOP )  ) then 
                    if ( (opcode_compare = '0' )  ) then 
                        if ( ( instruction(15  downto 12 ) = X"1111"  )  ) then 
                            pc_sel_nxt <= "10" ;
                            address_sel_nxt <= X"1" ;
                        else 
                            reg_bank_wen_nxt <= decode( instruction(15  downto 12 ) );
                        end if;
                    end if;
                    if ( (immediate_shifter_operand = '0')) then 
                        barrel_shift_function_nxt <= instruction(6  downto 5 );
                    end if;
                    if ( (immediate_shifter_operand = '0')) then 
                        barrel_shift_data_sel_nxt <= "10" ;
                    end if;
                    if  ( (immediate_shifter_operand = '0' )  and (instruction(4) = '1'))  then 
                        barrel_shift_amount_sel_nxt <= "01" ;
                    end if;
                    if  ( (immediate_shifter_operand = '0')  and (instruction(4 ) = '0' )  )   then 
                        barrel_shift_amount_sel_nxt <= "10" ;
                    end if;
                    if ( ( ( opcode = ADD )  or ( opcode = CMN )  )  ) then 
                        alu_out_sel_nxt <= "0001";
                    end if;
                    if ( ( opcode = ADC )  ) then 
                        alu_out_sel_nxt <= "0001" ;
                        alu_cin_sel_nxt <= "10" ;
                    end if;
                    if ( ( ( opcode = SUB )  or ( opcode = CMP )  )  ) then 
                        alu_out_sel_nxt <= "0001" ;
                        alu_cin_sel_nxt <= "10" ;
                        alu_not_sel_nxt <= '1' ;
                    end if;
                    if ( ( opcode = SBC )  ) then 
                        alu_out_sel_nxt <= X"1" ;
                        alu_cin_sel_nxt <= "10" ;
                        alu_not_sel_nxt <= '1' ;
                    end if;
                    if ( ( opcode = RSB )  ) then 
                        alu_out_sel_nxt <= X"1" ;
                        alu_cin_sel_nxt <= "10" ;
                        alu_not_sel_nxt <= '1' ;
                        alu_swap_sel_nxt <= '1' ;
                    end if;
                    if ( ( opcode = RSC )  ) then 
                        alu_out_sel_nxt <= X"1" ;
                        alu_cin_sel_nxt <= "10" ;
                        alu_not_sel_nxt <= '1' ;
                        alu_swap_sel_nxt <= '1' ;
                    end if;
                    if ((( opcode = AND_OP)  or ( opcode = TST )  )  ) then 
                        alu_out_sel_nxt <= X"8" ;
                        alu_cout_sel_nxt <= '1' ;
                    end if;
                    if ( ( ( opcode = EOR )  or ( opcode = TEQ )  )  ) then 
                        alu_out_sel_nxt <= X"6" ;
                        alu_cout_sel_nxt <= '1' ;
                    end if;
                    if ( ( opcode = ORR )  ) then 
                        alu_out_sel_nxt <= X"7" ;
                        alu_cout_sel_nxt <= '1' ;
                    end if;
                    if ( ( opcode = BIC )  ) then 
                        alu_out_sel_nxt <= X"8" ;
                        alu_not_sel_nxt <= '1' ;
                        alu_cout_sel_nxt <= '1' ;
                    end if;
                    if ( ( opcode = MOV )  ) then 
                        alu_cout_sel_nxt <= '1' ;
                    end if;
                    if ( ( opcode = MVN )  ) then 
                        alu_not_sel_nxt <= '1' ;
                        alu_cout_sel_nxt <= '1' ;
                    end if;
                end if;
                if ( mem_op = '1' ) then 
                    saved_current_instruction_wen <= '1' ;
                    pc_wen_nxt <= '0' ;
                    data_access_exec_nxt <= '1' ;
                    alu_out_sel_nxt <= X"1" ;
                    if  (instruction(23) = '0') then 
                        alu_cin_sel_nxt <= "10" ;
                        alu_not_sel_nxt <= '1' ;
                    end if;
                    if ( store_op  = '1') then 
                        write_data_wen_nxt <= '1' ;
                        if ((ins_type = TRANS)  and (instruction(22) = '1')) then 
                            byte_enable_sel_nxt <= "01" ;
                        end if;
                    end if;
                    if ( ( mem_op_pre_indexed or mem_op_post_indexed ) = '1') then 
                        if ( ( rn_sel_nxt = X"15"  )  ) then 
                            pc_sel_nxt <= "01" ;
                        else 
                            reg_bank_wen_nxt <= decode( rn_sel_nxt );
                        end if;
                    end if;
                    if ( mem_op_post_indexed  = '1') then 
                        address_sel_nxt <= X"4" ;
                    else 
                        address_sel_nxt <= X"1" ;
                    end if;
                    if ( (instruction(25) = '1')and (ins_type = TRANS)) then 
                        barrel_shift_data_sel_nxt <= "10" ;
                    end if;
                    if (((ins_type = TRANS )  and (instruction(25 ) = '1') )  and ( shift_imm /= "00000"))   then 
                        barrel_shift_function_nxt <= instruction(6  downto 5 );
                        barrel_shift_amount_sel_nxt <= "10" ;
                    end if;
                end if;
                if ( ( ins_type = BRANCH )) then 
                    pc_sel_nxt <= "01" ;
                    address_sel_nxt <= X"1" ;
                    alu_out_sel_nxt <= X"1" ;
                    if ( instruction(24) = '1' ) then 
                        reg_bank_wen_nxt <= decode( X"e"  );
                        reg_write_sel_nxt <= "001" ;
                    end if;
                end if;
                if ( ( ins_type = MTRANS )  ) then 
                    saved_current_instruction_wen <= '1' ;
                    pc_wen_nxt <= '0' ;
                    data_access_exec_nxt <= '1' ;
                    alu_out_sel_nxt <= X"1" ;
                    mtrans_r15_nxt <= instruction(15 );
                    base_address_wen_nxt <= '1' ;
                    restore_base_address_nxt <= instruction(20) and OR_REDUCE(instruction(15 downto 0) and (To_StdLogicVector ("0000000000000001"  sll (CONV_INTEGER(instruction(19 downto 16 )))))) ;
                    if ( instruction(23)= '1' ) then 
                        if ( instruction(24)= '1' ) then 
                            address_sel_nxt <= X"7" ;
                        else 
                            address_sel_nxt <= X"4" ;
                        end if;
                    else 
                        alu_cin_sel_nxt <= "01" ;
                        alu_not_sel_nxt <= '1' ;
                        if ( instruction(24) = '0')  then 
                            address_sel_nxt <= X"6" ;
                        else 
                            address_sel_nxt <= X"1" ;
                        end if;
                    end if;
                    if ( instruction(20) = '0') then 
                        write_data_wen_nxt <= '1' ;
                    end if;
                    if ( ( ( instruction(22  downto 20 ) & instruction(15 ) ) = B"1010"  )  ) then 
                        user_mode_regs_load_nxt <= '1' ;
                    end if;
                    if ( ( ( instruction(22  downto 20 ) ) = B"100"  )  ) then 
                        o_user_mode_regs_store_nxt <= '1' ;
                    end if;
                    if ( instruction(21) = '1') then 
                        reg_bank_wen_nxt <= decode( rn_sel_nxt );
                    end if;
                end if;
                if ( ( ins_type = MULT )  ) then 
                    multiply_function_nxt(0 ) <= '1' ;
                    saved_current_instruction_wen <= '1' ;
                    pc_wen_nxt <= '0' ;
                    if ( instruction(21) = '1' ) then 
                        multiply_function_nxt(1 ) <= '1' ;
                    end if;
                end if;
                if ( ( ins_type = SWAP )  ) then 
                    saved_current_instruction_wen <= '1' ;
                    pc_wen_nxt <= '0' ;
                    data_access_exec_nxt <= '1' ;
                    barrel_shift_data_sel_nxt <= "10" ;
                    address_sel_nxt <= X"4" ;
                    exclusive_exec_nxt <= '1' ;
                end if;
                if ( ( ( ins_type = CORTRANS )  and (   und_request = '0'  )  )  ) then 
                    saved_current_instruction_wen <= '1' ;
                    pc_wen_nxt <= '0' ;
                    address_sel_nxt <= X"3" ;
                    if ( instruction(20) = '1') then 
                        copro_operation_nxt <= "01" ;
                    else 
                        copro_operation_nxt <= "00" ;
                        copro_write_data_wen_nxt <= '1' ;
                    end if;
                end if;
                if ((ins_type = SWI )  or (und_request = '1')) then 
                    reg_write_sel_nxt <= "001" ;
                    reg_bank_wen_nxt <= decode( X"e"  );
                    address_sel_nxt <= X"2" ;
                    pc_sel_nxt <= "10" ;
                    status_bits_mode_nxt <= interrupt_mode;
                    status_bits_mode_wen_nxt <= '1' ;
                    status_bits_irq_mask_nxt <= '1' ;
                    status_bits_irq_mask_wen_nxt <= '1' ;
                end if;
                if ( regop_set_flags = '1' ) then 
                    status_bits_flags_wen_nxt <= '1' ;
                    if ( ( instruction(15  downto 12 ) = X"15"  )  ) then 
                        status_bits_sel_nxt <= "001" ;
                        if ( ( i_execute_status_bits(1  downto 0 ) /= USR )  ) then 
                            status_bits_mode_wen_nxt <= '1' ;
                            status_bits_irq_mask_wen_nxt <= '1' ;
                            status_bits_firq_mask_wen_nxt <= '1' ;
                        end if;
                    end if;
                end if;
            end if;
            if ( ( ( instruction_valid and interrupt ) = '1')  and ( next_interrupt /= "110"))  then 
                saved_current_instruction_wen <= '1' ;
                if ( ( next_interrupt = "100"  )  ) then 
                    reg_write_sel_nxt <= "111" ;
                else 
                    reg_write_sel_nxt <= "001" ;
                end if;
                reg_bank_wen_nxt <= decode( X"e"  );
                address_sel_nxt <= X"2" ;
                pc_sel_nxt <= "10" ;
                status_bits_mode_nxt <= interrupt_mode;
                status_bits_mode_wen_nxt <= '1' ;
                status_bits_irq_mask_nxt <= '1' ;
                status_bits_irq_mask_wen_nxt <= '1' ;
                if ( ( next_interrupt = "10"  )  ) then 
                    status_bits_firq_mask_nxt <= '1' ;
                    status_bits_firq_mask_wen_nxt <= '1' ;
                end if;
            end if;
            if  ( control_state = MEM_WAIT1 ) then 
                pre_fetch_instruction_wen <= '1' ;
                if (instruction_execute = '1' ) then 
                    address_sel_nxt <= X"3" ;
                    pc_wen_nxt <= '0' ;
                end if;
            end if;
            if  ((control_state = MEM_WAIT2 )  and (load_op = '1')) then 
                barrel_shift_data_sel_nxt <= "10" ;
                barrel_shift_amount_sel_nxt <= "11" ;
                if ((i_execute_address(1  downto 0 ) /= "00")) then 
                    barrel_shift_function_nxt <= ROR_OP;
                end if;
                if ((( ins_type = TRANS )  and (instruction(22) = '1'))) then 
                    alu_out_sel_nxt <= X"3" ;
                end if;
                if (dabt = '0') then 
                    if ( ( instruction(15  downto 12 ) = X"15"  )  ) then 
                        pc_sel_nxt <= "01" ;
                        address_sel_nxt <= X"1" ;
                    else 
                        reg_bank_wen_nxt <= decode( instruction(15  downto 12 ) );
                    end if;
                end if;
            end if;
            if ( ( control_state = MTRANS_EXEC1 )  ) then 
                pre_fetch_instruction_wen <= '1' ;
                if ( instruction_execute = '1' ) then 
                    address_sel_nxt <= X"5" ;
                    pc_wen_nxt <= '0' ;
                    data_access_exec_nxt <= '1' ;
                    if (instruction(20) = '0') then 
                        write_data_wen_nxt <= '1' ;
                    end if;
                    if ( ( ( instruction(22  downto 20 ) & mtrans_r15 ) = B"1010"  )  ) then 
                        user_mode_regs_load_nxt <= '1' ;
                    end if;
                    if ( ( ( instruction(22  downto 20 ) ) = B"100"  )  ) then 
                        o_user_mode_regs_store_nxt <= '1' ;
                    end if;
                end if;
            end if;
            if ( ( control_state = MTRANS_EXEC2 )  ) then 
                address_sel_nxt <= X"5" ;
                pc_wen_nxt <= '0' ;
                data_access_exec_nxt <= '1' ;
                barrel_shift_data_sel_nxt <= "01" ;
                if (instruction(20) = '1' ) then 
                    if (dabt = '0') then 
                        reg_bank_wen_nxt <= decode( mtrans_reg_d2 );
                    end if;
                else 
                    write_data_wen_nxt <= '1' ;
                end if;
                if ( ( ( instruction(22  downto 20 ) & mtrans_r15 ) = B"1010"  )  ) then 
                    user_mode_regs_load_nxt <= '1' ;
                end if;
                if ( ( ( instruction(22  downto 20 ) ) = B"100"  )  ) then 
                    o_user_mode_regs_store_nxt <= '1' ;
                end if;
            end if;
            if  ( ( control_state = MTRANS_EXEC3 )  and (instruction_execute  = '1')  ) then 
                address_sel_nxt <= X"3" ;
                pc_wen_nxt <= '0' ;
                barrel_shift_data_sel_nxt <= "01" ;
                if (( instruction(20 ) = '1') and (dabt = '0')) then 
                    reg_bank_wen_nxt <= decode( mtrans_reg_d2 );
                end if;
                if ((( instruction(22  downto 20 ) & mtrans_r15 ) = B"1010"  )  ) then 
                    user_mode_regs_load_nxt <= '1' ;
                end if;
                if ((( instruction(22  downto 20 ) ) = B"100"  )  ) then 
                    o_user_mode_regs_store_nxt <= '1' ;
                end if;
            end if;
            if (( control_state = MTRANS_EXEC3B )  and (instruction_execute = '1')) then 
                pre_fetch_instruction_wen <= '1' ;
                address_sel_nxt <= X"3" ;
                pc_wen_nxt <= '0' ;
                if ((( instruction(22  downto 20 ) & mtrans_r15 ) = B"1010"  )  ) then 
                    user_mode_regs_load_nxt <= '1' ;
                end if;
                if ( ( ( instruction(22  downto 20 ) ) = B"100"  )  ) then 
                    o_user_mode_regs_store_nxt <= '1' ;
                end if;
            end if;
            if ( ( control_state = MTRANS_EXEC4 )  ) then 
                barrel_shift_data_sel_nxt <= "10" ;
                if ( instruction(20) = '1' ) then 
                    if ( dabt = '0'  ) then 
                        if ( ( mtrans_reg_d2 = X"15"  )  ) then 
                            address_sel_nxt <= X"1" ;
                            pc_sel_nxt <= "10" ;
                            pc_wen_nxt <= '1' ;
                            if ( instruction(22) = '1') then 
                                status_bits_sel_nxt <= "111" ;
                                status_bits_flags_wen_nxt <= '1' ;
                                if ( ( i_execute_status_bits(1  downto 0 ) /= USR )  ) then 
                                    status_bits_mode_wen_nxt <= '1' ;
                                    status_bits_irq_mask_wen_nxt <= '1' ;
                                    status_bits_firq_mask_wen_nxt <= '1' ;
                                end if;
                            end if;
                        else 
                            reg_bank_wen_nxt <= decode( mtrans_reg_d2 );
                        end if;
                    end if;
                end if;
                if ( dabt = '1' ) then 
                    pc_wen_nxt <= '0' ;
                end if;
                if ( ( ( instruction(22  downto 20 ) & mtrans_r15 ) = B"1010"  )  ) then 
                    user_mode_regs_load_nxt <= '1' ;
                end if;
                if ( ( ( instruction(22  downto 20 ) ) = B"100"  )  ) then 
                    o_user_mode_regs_store_nxt <= '1' ;
                end if;
            end if;
            if ( ( control_state = MTRANS5_ABORT )  ) then 
                if ( restore_base_address = '1' ) then 
                    reg_write_sel_nxt <= "110" ;
                    reg_bank_wen_nxt <= decode( instruction(19  downto 16 ) );
                end if;
            end if;
            if  ( ( control_state = MULT_PROC1 )  and (instruction_execute = '1')  ) then 
                pre_fetch_instruction_wen <= '1' ;
                pc_wen_nxt <= '0' ;
                multiply_function_nxt <= o_multiply_function_int;
            end if;
            if ( ( control_state = MULT_PROC2 )  ) then 
                pc_wen_nxt <= '0' ;
                address_sel_nxt <= X"3" ;
                multiply_function_nxt <= o_multiply_function_int;
            end if;
            if ( ( control_state = MULT_STORE )  ) then 
                reg_write_sel_nxt <= "011" ;
                multiply_function_nxt <= o_multiply_function_int;
                if ( ( ins_type = MULT )  ) then 
                    reg_bank_wen_nxt <= decode( instruction(19  downto 16 ) );
                else 
                    reg_bank_wen_nxt <= decode( instruction(15  downto 12 ) );
                end if;
                if ( instruction(20) = '1') then 
                    status_bits_sel_nxt <= "100" ;
                    status_bits_flags_wen_nxt <= '1' ;
                end if;
            end if;
            if ( ( control_state = MULT_ACCUMU )  ) then 
                multiply_function_nxt <= o_multiply_function_int;
                pc_wen_nxt <= '0' ;
                address_sel_nxt <= X"3" ;
            end if;
            if (((control_state = SWAP_WRITE)  and (instruction_execute = '1'))) then 
                barrel_shift_data_sel_nxt <= "10" ;
                address_sel_nxt <= X"4" ;
                write_data_wen_nxt <= '1' ;
                data_access_exec_nxt <= '1' ;
                if ( instruction(22) = '1' ) then 
                    byte_enable_sel_nxt <= "01" ;
                end if;
                if ( instruction_execute = '1' ) then 
                    pc_wen_nxt <= '0' ;
                end if;
                pre_fetch_instruction_wen <= '1' ;
            end if;
            if ( ( control_state = SWAP_WAIT1 )  ) then 
                barrel_shift_data_sel_nxt <= "01" ;
                barrel_shift_amount_sel_nxt <= "11" ;
                if ( ( i_execute_address(1  downto 0 ) /= "00"  )  ) then 
                    barrel_shift_function_nxt <= ROR_OP;
                end if;
                if ( instruction_execute = '1' ) then 
                    address_sel_nxt <= X"3" ;
                    pc_wen_nxt <= '0' ;
                end if;
                if ( instruction(22) = '1' ) then 
                    alu_out_sel_nxt <= X"3" ;
                end if;
                if ( (dabt = '0')) then 
                    if ( ( instruction(15  downto 12 ) = X"15"  )  ) then 
                        pc_sel_nxt <= "10" ;
                        address_sel_nxt <= X"1" ;
                    else 
                        reg_bank_wen_nxt <= decode( instruction(15  downto 12 ) );
                    end if;
                end if;
            end if;
            if  ( ( control_state = COPRO_WAIT )  and (instruction_execute = '1') ) then 
                pre_fetch_instruction_wen <= '1' ;
                if ( instruction(20) = '1') then 
                    if ( ( instruction(15  downto 12 ) = X"f"  )  ) then 
                        status_bits_sel_nxt <= "011" ;
                        status_bits_flags_wen_nxt <= '1' ;
                        if ( ( i_execute_status_bits(1  downto 0 ) /= USR )  ) then 
                            status_bits_mode_wen_nxt <= '1' ;
                            status_bits_irq_mask_wen_nxt <= '1' ;
                            status_bits_firq_mask_wen_nxt <= '1' ;
                        end if;
                    else 
                        reg_bank_wen_nxt <= decode( instruction(15  downto 12 ) );
                    end if;
                    reg_write_sel_nxt <= "101" ;
                else 
                    copro_operation_nxt <= "10" ;
                end if;
            end if;
            if ( ( control_state = INT_WAIT1 )  ) then 
                status_bits_mode_nxt <= o_status_bits_mode_int;
            end if;
        end process;

        firq_not_user_mode_nxt <= Bool_to_Std_Logic ( (user_mode_regs_load_nxt = '0' )  and ( status_bits_mode_nxt = FIRQ )  ) ;

        instruction_execute <= conditional_execute( o_condition_int, i_execute_status_bits(31  downto 28 ) );


        instruction_valid <=  '1' when ( ( ( control_state = EXECUTE )  or ( control_state = PRE_FETCH_EXEC )  )  or ( (instruction_execute = '0' )  and ( ( ( ( ( ( ( ( control_state = PC_STALL1 )  or ( control_state = MEM_WAIT1 )  )  or ( control_state = COPRO_WAIT )  )  or ( control_state = SWAP_WRITE )  )  or ( control_state = MULT_PROC1 )  )  or ( control_state = MTRANS_EXEC1 )  )  or ( control_state = MTRANS_EXEC3 )  )  or ( control_state = MTRANS_EXEC3B )  )  )  )  else '0';

        process (control_state , write_pc , mtrans_instruction_nxt , mtrans_num_registers , dabt , instruction_execute , 
		i_multiply_done , o_multiply_function_int , instruction_valid , mem_op , ins_type , und_request , interrupt)
        begin
            control_state_nxt <= control_state;
            if ( control_state = RST_WAIT1 ) then 
                control_state_nxt <= RST_WAIT2;
            end if;
            if ( ( control_state = RST_WAIT2 )  ) then 
                control_state_nxt <= EXECUTE;
            end if;
            if ( ( control_state = INT_WAIT1 )  ) then 
                control_state_nxt <= INT_WAIT2;
            end if;
            if ( ( control_state = INT_WAIT2 )  ) then 
                control_state_nxt <= EXECUTE;
            end if;
            if ( ( control_state = COPRO_WAIT )  ) then 
                control_state_nxt <= PRE_FETCH_EXEC;
            end if;
            if ( ( control_state = PC_STALL1 )  ) then 
                control_state_nxt <= PC_STALL2;
            end if;
            if ( ( control_state = PC_STALL2 )  ) then 
                control_state_nxt <= EXECUTE;
            end if;
            if ( ( control_state = SWAP_WRITE )  ) then 
                control_state_nxt <= SWAP_WAIT1;
            end if;
            if ( ( control_state = SWAP_WAIT1 )  ) then 
                control_state_nxt <= SWAP_WAIT2;
            end if;
            if ( ( control_state = MULT_STORE )  ) then 
                control_state_nxt <= PRE_FETCH_EXEC;
            end if;
            if ( ( control_state = MTRANS5_ABORT )  ) then 
                control_state_nxt <= PRE_FETCH_EXEC;
            end if;
            if ( ( control_state = MEM_WAIT1 )  ) then 
                control_state_nxt <= MEM_WAIT2;
            end if;
            if ( ( ( control_state = MEM_WAIT2 )  or ( control_state = SWAP_WAIT2 )  )  ) then 
                if ( write_pc = '1') then 
                    control_state_nxt <= PC_STALL1;
                else 
                    control_state_nxt <= PRE_FETCH_EXEC;
                end if;
            end if;
            if ( ( control_state = MTRANS_EXEC1 )  ) then 
                if ( ( mtrans_instruction_nxt(15  downto 0 ) /= X"0000"  )  ) then 
                    control_state_nxt <= MTRANS_EXEC2;
                else 
                    control_state_nxt <= MTRANS_EXEC3;
                end if;
            end if;
            if ( ( ( control_state = MTRANS_EXEC2 )  and ( mtrans_num_registers = "00001"  )  )  ) then 
                control_state_nxt <= MTRANS_EXEC3;
            end if;
            if ( ( control_state = MTRANS_EXEC3 )  ) then 
                control_state_nxt <= MTRANS_EXEC4;
            end if;
            if ( ( control_state = MTRANS_EXEC3B )  ) then 
                control_state_nxt <= MTRANS_EXEC4;
            end if;
            if ( ( control_state = MTRANS_EXEC4 )  ) then 
                if ( dabt = '1' ) then 
                    control_state_nxt <= MTRANS5_ABORT;
                else 
                    if ( write_pc = '1' ) then 
                        control_state_nxt <= PC_STALL1;
                    else 
                        control_state_nxt <= PRE_FETCH_EXEC;
                    end if;
                end if;
            end if;
            if ( ( control_state = MULT_PROC1 )  ) then 
                if ( instruction_execute = '0'  ) then 
                    control_state_nxt <= PRE_FETCH_EXEC;
                else 
                    control_state_nxt <= MULT_PROC2;
                end if;
            end if;
            if ( ( control_state = MULT_PROC2 )  ) then 
                if ( i_multiply_done = '1' ) then 
                    if ( o_multiply_function_int(1) = '1') then 
                        control_state_nxt <= MULT_ACCUMU;
                    else 
                        control_state_nxt <= MULT_STORE;
                    end if;
                end if;
            end if;
            if ( ( control_state = MULT_ACCUMU )  ) then 
                control_state_nxt <= MULT_STORE;
            end if;
            if ( instruction_valid = '1') then 
                control_state_nxt <= EXECUTE;
                if ( mem_op = '1' ) then 
                    control_state_nxt <= MEM_WAIT1;
                end if;
                if ( write_pc = '1') then 
                    control_state_nxt <= PC_STALL1;
                end if;
                if ( ( ins_type = MTRANS )  ) then 
                    if ( ( mtrans_num_registers /= "00000"  )  ) then 
                        if ( ( mtrans_num_registers = "00001"  )  ) then 
                            control_state_nxt <= MTRANS_EXEC3B;
                        else 
                            control_state_nxt <= MTRANS_EXEC1;
                        end if;
                    else 
                        control_state_nxt <= MTRANS_EXEC3;
                    end if;
                end if;
                if ( ( ins_type = MULT )  ) then 
                    control_state_nxt <= MULT_PROC1;
                end if;
                if ( ( ins_type = SWAP )  ) then 
                    control_state_nxt <= SWAP_WRITE;
                end if;
                if ( ( ( ins_type = CORTRANS )  and (und_request = '0' )  )  ) then 
                    control_state_nxt <= COPRO_WAIT;
                end if;
                if ( interrupt = '1' ) then 
                    control_state_nxt <= INT_WAIT1;
                end if;
            end if;
        end process;

        process 
        begin
            wait until ( i_clk'EVENT and ( i_clk = '1' )  ) ;
            if ( reset_b = '0') then 
                o_read_data_int <= (others => '0') ;
                o_read_data_alignment <= (others => '0') ;
                abt_address_reg <= (others => '0');
                iabt_reg <= '0';
                adex_reg <=  '0';
                abt_status_reg <= (others => '0');
                o_status_bits_mode_int <= B"11" ;
                o_status_bits_irq_mask_int <= '1' ;
                o_status_bits_firq_mask_int <= '1' ;
                o_imm32 <= (others => '0') ;
                o_imm_shift_amount <= (others => '0') ;
                o_shift_imm_zero <= '0' ;
                o_condition_int <= X"e" ;
                o_exclusive_exec <= '0'; 
                o_data_access_exec <= '0';
                o_rm_sel <= (others => '0');
                o_rds_sel <= (others => '0');
                o_rn_sel <= (others => '0');
                o_barrel_shift_amount_sel <=(others => '0'); 
                o_barrel_shift_data_sel <= (others => '0');
                o_barrel_shift_function <=(others => '0');
                o_alu_function <= (others => '0');
                o_multiply_function_int <= (others => '0');
                o_interrupt_vector_sel <= (others => '0');
                o_address_sel <= X"2" ;
                o_pc_sel <= "10" ;
                o_byte_enable_sel <= (others => '0');
                o_status_bits_sel <= (others => '0');
                o_reg_write_sel <= (others => '0');
                o_user_mode_regs_load <= '0';
                o_firq_not_user_mode <= '0';
                o_write_data_wen <= '0';
                o_base_address_wen <= '0';
                o_pc_wen <= '1' ;
                o_reg_bank_wen <= (others => '0');
                o_status_bits_flags_wen <= '0';
                o_status_bits_mode_wen <=  '0';
                o_status_bits_irq_mask_wen <=  '0';
                o_status_bits_firq_mask_wen <= '0';
                o_copro_opcode1 <= (others => '0');
                o_copro_opcode2 <= (others => '0');
                o_copro_crn <= (others => '0');
                o_copro_crm <= (others => '0');
                o_copro_num <= (others => '0');
                o_copro_operation <= (others => '0');
                o_copro_write_data_wen <= '0';
                mtrans_r15 <=  '0';
                restore_base_address <= '0';
                control_state <= RST_WAIT1;
                mtrans_reg_d1 <= (others => '0');
                mtrans_reg_d2 <= (others => '0');
            else 
                if (i_fetch_stall = '0' ) then 
                    o_read_data_int <= i_read_data;
                    o_read_data_alignment <= ( i_execute_address(1  downto 0 ) & "000"  );
                    abt_address_reg <= i_execute_address;
                    iabt_reg <= i_iabt;
                    adex_reg <= i_adex;
                    abt_status_reg <= i_abt_status;
                    o_status_bits_mode_int <= status_bits_mode_nxt;
                    o_status_bits_irq_mask_int <= status_bits_irq_mask_nxt;
                    o_status_bits_firq_mask_int <= status_bits_firq_mask_nxt;
                    o_imm32 <= imm32_nxt;
                    o_imm_shift_amount <= imm_shift_amount_nxt;
                    o_shift_imm_zero <= shift_imm_zero_nxt;
                    if( (instruction_valid and (not interrupt)) = '1') then
                      o_condition_int <= condition_nxt;
		    else
		     o_condition_int <= AL;
                   end if;
                    o_exclusive_exec <= exclusive_exec_nxt;
                    o_data_access_exec <= data_access_exec_nxt;
                    o_rm_sel <= rm_sel_nxt;
                    o_rds_sel <= rds_sel_nxt;
                    o_rn_sel <= rn_sel_nxt;
                    o_barrel_shift_amount_sel <= barrel_shift_amount_sel_nxt;
                    o_barrel_shift_data_sel <= barrel_shift_data_sel_nxt;
                    o_barrel_shift_function <= barrel_shift_function_nxt;
                    o_alu_function <= alu_function_nxt;
                    o_multiply_function_int <= multiply_function_nxt;
                    o_interrupt_vector_sel <= next_interrupt;
                    o_address_sel <= address_sel_nxt;
                    o_pc_sel <= pc_sel_nxt;
                    o_byte_enable_sel <= byte_enable_sel_nxt;
                    o_status_bits_sel <= status_bits_sel_nxt;
                    o_reg_write_sel <= reg_write_sel_nxt;
                    o_user_mode_regs_load <= user_mode_regs_load_nxt;
                    o_firq_not_user_mode <= firq_not_user_mode_nxt;
                    o_write_data_wen <= write_data_wen_nxt;
                    o_base_address_wen <= base_address_wen_nxt;
                    o_pc_wen <= pc_wen_nxt;
                    o_reg_bank_wen <= reg_bank_wen_nxt;
                    o_status_bits_flags_wen <= status_bits_flags_wen_nxt;
                    o_status_bits_mode_wen <= status_bits_mode_wen_nxt;
                    o_status_bits_irq_mask_wen <= status_bits_irq_mask_wen_nxt;
                    o_status_bits_firq_mask_wen <= status_bits_firq_mask_wen_nxt;
                    o_copro_opcode1 <= instruction(23  downto 21 );
                    o_copro_opcode2 <= instruction(7  downto 5 );
                    o_copro_crn <= instruction(19  downto 16 );
                    o_copro_crm <= instruction(3  downto 0 );
                    o_copro_num <= instruction(11  downto 8 );
                    o_copro_operation <= copro_operation_nxt;
                    o_copro_write_data_wen <= copro_write_data_wen_nxt;
                    mtrans_r15 <= mtrans_r15_nxt;
                    restore_base_address <= restore_base_address_nxt;
                    control_state <= control_state_nxt;
                    mtrans_reg_d1 <= mtrans_reg;
                    mtrans_reg_d2 <= mtrans_reg_d1;
                end if;
            end if;
        end process;


        process 
        begin
            wait until ( i_clk'EVENT and ( i_clk = '1' )  ) ;
            if (reset_b = '0') then 
                saved_current_instruction <= (others => '0');
                saved_current_instruction_iabt <=  '0';
                saved_current_instruction_adex <=  '0';
                saved_current_instruction_address <= (others => '0');
                saved_current_instruction_iabt_status <= (others => '0');
                saved_current_instruction <= (others => '0');
                saved_current_instruction_iabt <= '0';
                saved_current_instruction_adex <= '0';
                saved_current_instruction_address <= (others => '0');
                saved_current_instruction_iabt_status <= (others => '0');
                pre_fetch_instruction <= (others => '0');
                pre_fetch_instruction_iabt <= '0';
                pre_fetch_instruction_adex <= '0';
                pre_fetch_instruction_address <= (others => '0');
                pre_fetch_instruction_iabt_status <= (others => '0');
            else 
                if (i_fetch_stall = '0') then 
                    if (ins_type = MTRANS) then 
                        saved_current_instruction <= mtrans_instruction_nxt;
                        saved_current_instruction_iabt <= instruction_iabt;
                        saved_current_instruction_adex <= instruction_adex;
                        saved_current_instruction_address <= instruction_address;
                        saved_current_instruction_iabt_status <= instruction_iabt_status;
                    else 
                        if ( saved_current_instruction_wen = '1') then 
                            saved_current_instruction <= instruction;
                            saved_current_instruction_iabt <= instruction_iabt;
                            saved_current_instruction_adex <= instruction_adex;
                            saved_current_instruction_address <= instruction_address;
                            saved_current_instruction_iabt_status <= instruction_iabt_status;
                        end if;
                    end if;
                    if ( pre_fetch_instruction_wen = '1') then 
                        pre_fetch_instruction <= o_read_data_int;
                        pre_fetch_instruction_iabt <= iabt_reg;
                        pre_fetch_instruction_adex <= adex_reg;
                        pre_fetch_instruction_address <= abt_address_reg;
                        pre_fetch_instruction_iabt_status <= abt_status_reg;
                    end if;
                end if;
            end if;
        end process;

        process 
        begin
            wait until ( i_clk'EVENT and ( i_clk = '1' )  ) ;
            if (  reset_b = '0'  ) then 
                irq_sig <=  '0';
                firq_sig <=  '0';
                dabt_reg <= '0' ;
            else 
                if ( i_fetch_stall ='0' ) then 
                    irq_sig <= i_irq;
                    firq_sig <= i_firq;
                    if ( ( ( control_state = INT_WAIT1 )  and ( o_status_bits_mode_int = SVC )  )  ) then 
                        dabt_reg <=  '0';
                    else 
                        dabt_reg <= ( dabt_reg or i_dabt ) ;
                    end if;
                    dabt_reg_d1 <= dabt_reg;
                end if;
            end if;
        end process;
        dabt <= ( dabt_reg or i_dabt ) ;
    end rtl_decode; 



--------------------------------------------------------------
--------------------------------------------------------------
--                                                          --
-- This VHDL file has been generated by the verilog2vhdl    --
-- tool.                                                    --
-- Contact help@edautils.com  for support/info.--
--                                                          --
--                                                          --
--------------------------------------------------------------
--------------------------------------------------------------
--
--
-- Assumptions: 
--         (1) All the parameters are of type INTEGER, and hence the translated generics are of this type
--
--
--
--

LIBRARY ieee, synopsys;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;
USE ieee.std_logic_signed.all;
use ieee.std_logic_misc.all;
use ieee.std_logic_textio.all; 

entity a23_execute is 
 GENERIC (      CONSTANT REGOP : std_logic_vector(3 DOWNTO 0) := X"0";	
                 CONSTANT MULT : std_logic_vector(3 DOWNTO 0) := X"1";	
                 CONSTANT SWAP : std_logic_vector(3 DOWNTO 0) := X"2";	
                 CONSTANT TRANS : std_logic_vector(3 DOWNTO 0) := X"3";	
                 CONSTANT MTRANS : std_logic_vector(3 DOWNTO 0) := X"4";	
                 CONSTANT BRANCH : std_logic_vector(3 DOWNTO 0) := X"5";	
                 CONSTANT CODTRANS : std_logic_vector(3 DOWNTO 0) := X"6";	
                 CONSTANT COREGOP : std_logic_vector(3 DOWNTO 0) := X"7";	
                 CONSTANT CORTRANS : std_logic_vector(3 DOWNTO 0) := X"8";	
                 CONSTANT SWI : std_logic_vector(3 DOWNTO 0) := X"9";	
                 CONSTANT AND_VHDL : std_logic_vector(3 DOWNTO 0) := X"0";	
                 CONSTANT EOR : std_logic_vector(3 DOWNTO 0) := X"1";	
                 CONSTANT SUB : std_logic_vector(3 DOWNTO 0) := X"2";	
                 CONSTANT RSB : std_logic_vector(3 DOWNTO 0) := X"3";	
                 CONSTANT ADD : std_logic_vector(3 DOWNTO 0) := X"4";	
                 CONSTANT ADC : std_logic_vector(3 DOWNTO 0) := X"5";	
                 CONSTANT SBC : std_logic_vector(3 DOWNTO 0) := X"6";	
                 CONSTANT RSC : std_logic_vector(3 DOWNTO 0) := X"7";	
                 CONSTANT TST : std_logic_vector(3 DOWNTO 0) := X"8";	
                 CONSTANT TEQ : std_logic_vector(3 DOWNTO 0) := X"9";	
                 CONSTANT CMP : std_logic_vector(3 DOWNTO 0) := X"a";	
                 CONSTANT CMN : std_logic_vector(3 DOWNTO 0) := X"b";	
                 CONSTANT ORR : std_logic_vector(3 DOWNTO 0) := X"c";	
                 CONSTANT MOV : std_logic_vector(3 DOWNTO 0) := X"d";	
                 CONSTANT BIC : std_logic_vector(3 DOWNTO 0) := X"e";	
                 CONSTANT MVN : std_logic_vector(3 DOWNTO 0) := X"f";	
                 CONSTANT EQ : std_logic_vector(3 DOWNTO 0) := X"0";	
                 CONSTANT NE : std_logic_vector(3 DOWNTO 0) := X"1";	
                 CONSTANT CS : std_logic_vector(3 DOWNTO 0) := X"2";	
                 CONSTANT CC : std_logic_vector(3 DOWNTO 0) := X"3";	
                 CONSTANT MI : std_logic_vector(3 DOWNTO 0) := X"4";	
                 CONSTANT PL : std_logic_vector(3 DOWNTO 0) := X"5";	
                 CONSTANT VS : std_logic_vector(3 DOWNTO 0) := X"6";	
                 CONSTANT VC : std_logic_vector(3 DOWNTO 0) := X"7";	
                 CONSTANT HI : std_logic_vector(3 DOWNTO 0) := X"8";	
                 CONSTANT LS : std_logic_vector(3 DOWNTO 0) := X"9";	
                 CONSTANT GE : std_logic_vector(3 DOWNTO 0) := X"a";	
                 CONSTANT LT : std_logic_vector(3 DOWNTO 0) := X"b";	
                 CONSTANT GT : std_logic_vector(3 DOWNTO 0) := X"c";	
                 CONSTANT LE : std_logic_vector(3 DOWNTO 0) := X"d";	
                 CONSTANT AL : std_logic_vector(3 DOWNTO 0) := X"e";	
                 CONSTANT NV : std_logic_vector(3 DOWNTO 0) := X"f";	
                 CONSTANT LSL : std_logic_vector(1 DOWNTO 0) := "00";	
                 CONSTANT LSR : std_logic_vector(1 DOWNTO 0) := "01";	
                 CONSTANT ASR : std_logic_vector(1 DOWNTO 0) := "10";	
                 CONSTANT RRX : std_logic_vector(1 DOWNTO 0) := "11";	
                 CONSTANT ROR_VHDL : std_logic_vector(1 DOWNTO 0) := "11";	
                 CONSTANT SVC : std_logic_vector(1 DOWNTO 0) := B"11";	
                 CONSTANT IRQ : std_logic_vector(1 DOWNTO 0) := B"10";	
                 CONSTANT FIRQ : std_logic_vector(1 DOWNTO 0) := B"01";	
                 CONSTANT USR : std_logic_vector(1 DOWNTO 0) := B"00";	
                 CONSTANT OH_USR : integer  := 0;	
                 CONSTANT OH_IRQ : integer  := 1;	
                 CONSTANT OH_FIRQ : integer := 2;	
                 CONSTANT OH_SVC : integer  :=  3);

    
     port (
        reset_b :  in std_logic;
        i_clk :  in std_logic;
        i_read_data :  in std_logic_vector( 31  downto 0  );
        i_read_data_alignment :  in std_logic_vector( 4  downto 0  );
        i_copro_read_data :  in std_logic_vector( 31  downto 0  );
        i_data_access_exec :  in std_logic;
        o_copro_write_data :  out std_logic_vector( 31  downto 0  );
        o_write_data :  out std_logic_vector( 31  downto 0  );
        o_address :  out std_logic_vector( 31  downto 0  );
        o_adex :  out std_logic;
        o_address_valid :  out std_logic;
        o_address_nxt :  out std_logic_vector( 31  downto 0  );
        o_priviledged :  out std_logic;
        o_exclusive :  out std_logic;
        o_write_enable :  out std_logic;
        o_byte_enable :  out std_logic_vector( 3  downto 0  );
        o_data_access :  out std_logic;
        o_status_bits :  out std_logic_vector( 31  downto 0  );
        o_multiply_done :  out std_logic;
        jtag_pc :  out std_logic_vector( 31  downto 0  );
        i_fetch_stall :  in std_logic;
        i_status_bits_mode :  in std_logic_vector( 1  downto 0  );
        i_status_bits_irq_mask :  in std_logic;
        i_status_bits_firq_mask :  in std_logic;
        i_imm32 :  in std_logic_vector( 31  downto 0  );
        i_imm_shift_amount :  in std_logic_vector( 4  downto 0  );
        i_shift_imm_zero :  in std_logic;
        i_condition :  in std_logic_vector( 3  downto 0  );
        i_exclusive_exec :  in std_logic;
        i_rm_sel :  in std_logic_vector( 3  downto 0  );
        i_rds_sel :  in std_logic_vector( 3  downto 0  );
        i_rn_sel :  in std_logic_vector( 3  downto 0  );
        i_barrel_shift_amount_sel :  in std_logic_vector( 1  downto 0  );
        i_barrel_shift_data_sel :  in std_logic_vector( 1  downto 0  );
        i_barrel_shift_function :  in std_logic_vector( 1  downto 0  );
        i_alu_function :  in std_logic_vector( 8  downto 0  );
        i_multiply_function :  in std_logic_vector( 1  downto 0  );
        i_interrupt_vector_sel :  in std_logic_vector( 2  downto 0  );
        i_address_sel :  in std_logic_vector( 3  downto 0  );
        i_pc_sel :  in std_logic_vector( 1  downto 0  );
        i_byte_enable_sel :  in std_logic_vector( 1  downto 0  );
        i_status_bits_sel :  in std_logic_vector( 2  downto 0  );
        i_reg_write_sel :  in std_logic_vector( 2  downto 0  );
        i_user_mode_regs_load :  in std_logic;
        i_user_mode_regs_store_nxt :  in std_logic;
        i_firq_not_user_mode :  in std_logic;
        i_write_data_wen :  in std_logic;
        i_base_address_wen :  in std_logic;
        i_pc_wen :  in std_logic;
        i_reg_bank_wen :  in std_logic_vector( 14  downto 0  );
        i_status_bits_flags_wen :  in std_logic;
        i_status_bits_mode_wen :  in std_logic;
        i_status_bits_irq_mask_wen :  in std_logic;
        i_status_bits_firq_mask_wen :  in std_logic;
        i_copro_write_data_wen :  in std_logic
    );
end entity; 


architecture rtl of a23_execute is 

 function pcf(   pc_reg : std_logic_vector ( 31  downto 0  ) )  
                   return std_logic_vector is 
        variable  pcf_return_dummy_var : std_logic_vector ( 31  downto 0  );
    begin
        pcf_return_dummy_var := ( "000000"  & pc_reg(25  downto 2 ) & "00"  );
         return pcf_return_dummy_var;
    end;

    function decode( reg_sel : unsigned ( 3  downto 0  ))  return unsigned is 
        variable decode_return_dummy_var : unsigned ( 14  downto 0  );
    begin
        case  ( reg_sel ) is 
            when X"0"  => 
                decode_return_dummy_var := ("000" &  X"001") ;
            when  X"1"  => 
                decode_return_dummy_var := ("000" & X"002") ;
            when  X"2"  => 
                decode_return_dummy_var := ("000" &  X"004") ;
            when 
                X"3"  => 
                decode_return_dummy_var := ("000" &  X"008") ;
            when 
                X"4"  => 
                decode_return_dummy_var := ("000" &  X"010") ;
            when 
                X"5"  => 
                decode_return_dummy_var := ("000" & X"020") ;
            when 
                X"6"  => 
                decode_return_dummy_var := ("000" & X"040") ;
            when 
                X"7"  => 
                decode_return_dummy_var := ("000" & X"080") ;
            when 
                X"8"  => 
                decode_return_dummy_var := ("000" & X"100") ;
            when 
                X"9"  => 
                decode_return_dummy_var := ("000" & X"200") ;
            when 
                X"a"  => 
                decode_return_dummy_var := ("000" & X"400") ;
            when 
                X"b"  => 
                decode_return_dummy_var := ("000" & X"800");
            when 
                X"c"  => 
                decode_return_dummy_var := ("001" & X"000") ;
            when 
                X"d"  => 
                decode_return_dummy_var := ("010" & X"000");
            when 
                X"e"  => 
                decode_return_dummy_var := ("100" & X"000") ;
            when 
                 others  => 
                decode_return_dummy_var := (X"000" & "000");

        end case;
         return decode_return_dummy_var;
    end;

    function oh_status_bits_mode(fn_status_bits_mode : std_logic_vector( 1  downto 0  ))  return std_logic_vector is 
        variable oh_status_bits_mode_return_dummy_var : std_logic_vector( 3  downto 0  );
    begin
  if (fn_status_bits_mode = SVC) then 
  oh_status_bits_mode_return_dummy_var := To_StdLogicVector ("0001" sll OH_SVC); 
  elsif (fn_status_bits_mode = IRQ) then
  oh_status_bits_mode_return_dummy_var := To_StdLogicVector ("0001" sll OH_IRQ) ;
  elsif (fn_status_bits_mode = FIRQ) then
  oh_status_bits_mode_return_dummy_var := To_StdLogicVector ("0001" sll OH_FIRQ) ;
  else
  oh_status_bits_mode_return_dummy_var := To_StdLogicVector ("0001" sll OH_USR);
  end if;
  return oh_status_bits_mode_return_dummy_var;
   end;

function to_std_logic(c: character) return std_logic is 
    variable sl: std_logic;
    begin
      case c is
        when 'U' => 
           sl := 'U'; 
        when 'X' =>
           sl := 'X';
        when '0' => 
           sl := '0';
        when '1' => 
           sl := '1';
        when 'Z' => 
           sl := 'Z';
        when 'W' => 
           sl := 'W';
        when 'L' => 
           sl := 'L';
        when 'H' => 
           sl := 'H';
        when '-' => 
           sl := '-';
        when others =>
           sl := 'X'; 
    end case;
   return sl;
  end to_std_logic;




function to_std_logic_vector(s: string) return std_logic_vector is 
  variable slv: std_logic_vector(s'high-s'low downto 0);
  variable k: integer;
begin
   k := s'high-s'low;
  for i in s'range loop
     slv(k) := to_std_logic(s(i));
     k      := k - 1;
  end loop;
  return slv;
end to_std_logic_vector;                                       


    function mode_name(  constant mode : std_logic_vector( 4  downto 0  ))  return std_logic_vector is 
        variable mode_name_return_dummy_var : std_logic_vector ( 111  downto 0  );
    begin

	 if ( mode = USR) then
		mode_name_return_dummy_var := to_std_logic_vector ("User");
	 elsif ( mode = SVC) then
		 mode_name_return_dummy_var := to_std_logic_vector("Supervisor");
	 elsif (mode = IRQ) then
		 mode_name_return_dummy_var := to_std_logic_vector("Interrupt"); 
	 elsif (mode = FIRQ) then
	 	mode_name_return_dummy_var := to_std_logic_vector("Fast Interrupt");
	 else
	 	mode_name_return_dummy_var := to_std_logic_vector("UNKNOWN");
	 end if;
         return mode_name_return_dummy_var;
    end;


  FUNCTION conditional_execute (condition : IN std_logic_vector(3 DOWNTO 0);
                 flags : IN std_logic_vector(3 DOWNTO 0)) RETURN std_logic   
 IS 
        VARIABLE conditional_execute : std_logic;	

BEGIN
    if (condition = AL OR (condition = EQ AND 
		To_bit(flags(2)) /= '0') OR (condition = NE AND 
		NOT (To_bit(flags(2)) /= '0')) OR (condition = CS AND 
		To_bit(flags(1)) /= '0') OR (condition = CC AND 
		NOT (To_bit(flags(1)) /= '0')) OR (condition = MI AND 
		To_bit(flags(3)) /= '0') OR (condition = PL AND 
		NOT (To_bit(flags(3)) /= '0')) OR (condition = VS AND 
		To_bit(flags(0)) /= '0') OR (condition = VC AND 
		NOT (To_bit(flags(0)) /= '0')) OR (condition = HI AND 
		To_bit(flags(1)) /= '0' AND NOT (To_bit(flags(2)) /= '0')) OR 
		(condition = LS AND (NOT (To_bit(flags(1)) /= '0') OR 
		To_bit(flags(2)) /= '0')) OR (condition = GE AND 
		flags(3) = flags(0)) OR (condition = LT AND 
		flags(3) /= flags(0)) OR (condition = GT AND 
		NOT (To_bit(flags(2)) /= '0') AND flags(3) = flags(0)) OR 
		(condition = LE AND (To_bit(flags(2)) /= '0' OR 
		flags(3) /= flags(0))))	then
    conditional_execute := '1';
    end if;

    RETURN conditional_execute;
END;

 function log2(  constant num : integer )  return   integer is
        variable log2_return_dummy_var : integer;
        variable i : integer;
    begin
        log2_return_dummy_var := 0 ;
        i := 0 ;
        while ( ( i < 30  )  ) loop
            if ((2**i > num)  and ( log2_return_dummy_var = 0))  then 
                log2_return_dummy_var := ( i - 1 ) ;
            end if;
            i := (i + 1) ;
        end loop;
         return log2_return_dummy_var;
    end;
function Bool_to_Std_Logic(L: BOOLEAN) return std_ulogic is 
     begin 
         if L then 
             return('1'); 
         else 
             return('0'); 
         end if; 
     end function; 
 
    signal write_data_nxt : std_logic_vector( 31  downto 0  );
    signal byte_enable_nxt : std_logic_vector( 3  downto 0  );
    signal pc_plus4 : std_logic_vector( 31  downto 0  );
    signal pc_minus4 : std_logic_vector( 31  downto 0  );
    signal address_plus4 : std_logic_vector( 31  downto 0  );
    signal alu_plus4 : std_logic_vector( 31  downto 0  );
    signal rn_plus4 : std_logic_vector( 31  downto 0  );
    signal alu_out : std_logic_vector( 31  downto 0  );
    signal alu_flags : std_logic_vector( 3  downto 0  );
    signal rm : std_logic_vector( 31  downto 0  );
    signal rs : std_logic_vector( 31  downto 0  );
    signal rd : std_logic_vector( 31  downto 0  );
    signal rn : std_logic_vector( 31  downto 0  );
    signal pc : std_logic_vector( 31  downto 0  );
    signal pc_nxt : std_logic_vector( 31  downto 0  );
    signal write_enable_nxt : std_logic;
    signal interrupt_vector : std_logic_vector( 31  downto 0  );
    signal shift_amount : std_logic_vector( 7  downto 0  );
    signal barrel_shift_in : std_logic_vector( 31  downto 0  );
    signal barrel_shift_out : std_logic_vector( 31  downto 0  );
    signal barrel_shift_carry : std_logic;
    signal status_bits_flags_nxt : std_logic_vector( 3  downto 0  );
    signal status_bits_flags : std_logic_vector( 3  downto 0  );
    signal status_bits_mode_nxt : std_logic_vector( 1  downto 0  );
    signal status_bits_mode : std_logic_vector( 1  downto 0  );
    signal status_bits_mode_rds_oh_nxt : std_logic_vector( 3  downto 0  );
    signal status_bits_mode_rds_oh : std_logic_vector( 3  downto 0  );
    signal status_bits_mode_rds_oh_update : std_logic;
    signal status_bits_irq_mask_nxt : std_logic;
    signal status_bits_irq_mask : std_logic;
    signal status_bits_firq_mask_nxt : std_logic;
    signal status_bits_firq_mask : std_logic;
    signal execute : std_logic;
    signal reg_write_nxt : std_logic_vector( 31  downto 0  );
    signal pc_wen : std_logic;
    signal reg_bank_wen : std_logic_vector( 14  downto 0  );
    signal multiply_out : std_logic_vector( 31  downto 0  );
    signal multiply_flags : std_logic_vector( 1  downto 0  );
    signal base_address : std_logic_vector( 31  downto 0  );
    signal priviledged_nxt : std_logic;
    signal priviledged_update : std_logic;
    signal address_update : std_logic;
    signal base_address_update : std_logic;
    signal write_data_update : std_logic;
    signal copro_write_data_update : std_logic;
    signal byte_enable_update : std_logic;
    signal data_access_update : std_logic;
    signal write_enable_update : std_logic;
    signal exclusive_update : std_logic;
    signal status_bits_flags_update : std_logic;
    signal status_bits_mode_update : std_logic;
    signal status_bits_irq_mask_update : std_logic;
    signal status_bits_firq_mask_update : std_logic;
    signal alu_out_pc_filtered : std_logic_vector( 31  downto 0  );
    signal adex_nxt : std_logic;
    signal save_int_pc : std_logic_vector( 31  downto 0  );
    signal save_int_pc_m4 : std_logic_vector( 31  downto 0  );
    signal o_address_int :   std_logic_vector( 31  downto 0  );
    signal o_address_nxt_int : std_logic_vector( 31  downto 0  ); 
    signal o_status_bits_int : std_logic_vector( 31  downto 0  );
    signal multiply_out_int : unsigned (31 downto 0);
    signal multiply_flags_int : unsigned (1 downto 0);
    signal rm_unsigned : unsigned (31 downto 0);
    signal rs_unsigned : unsigned (31 downto 0);
    signal i_multiply_function_unsigned : unsigned (1 downto 0);


    component a23_barrel_shift is 
         port (
            i_in :  in std_logic_vector( 31  downto 0  );
            i_carry_in :  in std_logic;
            i_shift_amount :  in std_logic_vector( 7  downto 0  );
            i_shift_imm_zero :  in std_logic;
            i_function :  in std_logic_vector( 1  downto 0  );
            o_out :  out std_logic_vector( 31  downto 0  );
            o_carry_out :  out std_logic
        );
    end component; 
    component a23_alu is 
         port (
            i_a_in :  in std_logic_vector( 31  downto 0  );
            i_b_in :  in std_logic_vector( 31  downto 0  );
            i_barrel_shift_carry :  in std_logic;
            i_status_bits_carry :  in std_logic;
            i_function :  in std_logic_vector( 8  downto 0  );
            o_out :  out std_logic_vector( 31  downto 0  );
            o_flags :  out std_logic_vector( 3  downto 0  )
        );
    end component; 
    component a23_multiply is 
         port (
            reset_b :  in std_logic;
            i_clk :  in std_logic;
            i_fetch_stall :  in std_logic;
            i_a_in :  in unsigned( 31  downto 0  );
            i_b_in :  in unsigned( 31  downto 0  );
            i_function :  in unsigned( 1  downto 0  );
            i_execute :  in std_logic;
            o_out :  out unsigned( 31  downto 0  );
            o_flags :  out unsigned( 1  downto 0  );
            o_done :  out std_logic
        );
    end component; 
    component a23_register_bank is 
         port (
            reset_b :  in std_logic;
            i_clk :  in std_logic;
            i_fetch_stall :  in std_logic;
            i_rm_sel :  in std_logic_vector( 3  downto 0  );
            i_rds_sel :  in std_logic_vector( 3  downto 0  );
            i_rn_sel :  in std_logic_vector( 3  downto 0  );
            i_pc_wen :  in std_logic;
            i_reg_bank_wen :  in std_logic_vector( 14  downto 0  );
            i_pc :  in std_logic_vector( 23  downto 0  );
            i_reg :  in std_logic_vector( 31  downto 0  );
            i_mode_idec :  in std_logic_vector( 1  downto 0  );
            i_mode_exec :  in std_logic_vector( 1  downto 0  );
            i_status_bits_flags :  in std_logic_vector( 3  downto 0  );
            i_status_bits_irq_mask :  in std_logic;
            i_status_bits_firq_mask :  in std_logic;
            i_firq_not_user_mode :  in std_logic;
            i_mode_rds_exec :  in std_logic_vector( 3  downto 0  );
            i_user_mode_regs_load :  in std_logic;
            o_rm :  out std_logic_vector( 31  downto 0  );
            o_rs :  out std_logic_vector( 31  downto 0  );
            o_rd :  out std_logic_vector( 31  downto 0  );
            o_rn :  out std_logic_vector( 31  downto 0  );
            o_pc :  out std_logic_vector( 31  downto 0  )
        );
    end component; 
    begin 

   o_address     <= o_address_int;
   o_address_nxt <= o_address_nxt_int;
   o_status_bits <= o_status_bits_int;



        o_status_bits_int <= ( status_bits_flags & status_bits_irq_mask & status_bits_firq_mask & X"000000"  & status_bits_mode );

        status_bits_flags_nxt <= alu_flags                        when  i_status_bits_sel = "000" else
                                alu_out(31 downto 28)            when  i_status_bits_sel = "001" else
                                i_copro_read_data(31 downto 28)  when  i_status_bits_sel = "011" else
                                (multiply_flags & status_bits_flags (1 downto 0));
          
        status_bits_mode_nxt <= i_status_bits_mode when i_status_bits_sel = "000" else
                                alu_out (1 downto 0) when i_status_bits_sel = "001" else
                                i_copro_read_data (1 downto 0);


       status_bits_mode_rds_oh_nxt <= To_StdLogicVector("0001" sll OH_USR) when i_user_mode_regs_store_nxt = '1' else
                                   oh_status_bits_mode(status_bits_mode_nxt) when status_bits_mode_update = '1' else
                                   oh_status_bits_mode(status_bits_mode);

        status_bits_irq_mask_nxt <=  i_status_bits_irq_mask when    i_status_bits_sel = "000" else
                                     alu_out(27) when i_status_bits_sel = "001" else
                                      i_copro_read_data(27);

	status_bits_firq_mask_nxt <= i_status_bits_firq_mask when i_status_bits_sel  = "000" else
				    alu_out(26) when i_status_bits_sel = "001" else
				   i_copro_read_data(26);
               
            
        pc_plus4 <= ( pc + 4  ) ;
        pc_minus4 <= ( pc - 4  ) ;
        address_plus4 <= ( o_address_int + 4  ) ;
        alu_plus4 <= ( alu_out  + 4  ) ;
        rn_plus4 <= ( rn + 4  ) ;

        shift_amount <= X"00" when i_barrel_shift_amount_sel = "00" else
                        rs( 7 downto 0) when i_barrel_shift_amount_sel = "01" else
                        ("000" & i_imm_shift_amount) when i_barrel_shift_amount_sel = "10" else
                        ("000" & i_read_data_alignment);

	barrel_shift_in <= i_imm32 when i_barrel_shift_data_sel = "00" else
 		           i_read_data when i_barrel_shift_data_sel = "01" else
			   rm;

        interrupt_vector <= X"00000000" when i_interrupt_vector_sel = "000" else
			    X"00000010" when i_interrupt_vector_sel = "001" else
 			    X"0000001c" when i_interrupt_vector_sel = "010" else
 			    X"00000018" when i_interrupt_vector_sel = "011" else		
 			    X"0000000c" when i_interrupt_vector_sel = "100" else		
 			    X"00000004" when i_interrupt_vector_sel = "101" else		
 			    X"00000008" when i_interrupt_vector_sel = "111" else		
 			    X"00000014"; 		

	alu_out_pc_filtered <= pcf(alu_out) when ((pc_wen = '1') and (i_pc_sel = "01")) else
			       alu_out;

	o_address_nxt_int <= pc_plus4 when (execute = '0') else
 			 pc_plus4 when (i_address_sel = "0000") else
			 alu_out_pc_filtered when (i_address_sel = "0001") else
			 interrupt_vector when (i_address_sel = "0010") else
			 pc 		  when (i_address_sel = "0011") else
			 rn 		 when (i_address_sel = "0100") else
			address_plus4 when (i_address_sel = "0101") else
			alu_plus4     when (i_address_sel = "0110") else
			rn_plus4;
         
       

        adex_nxt <= ( OR_REDUCE( o_address_nxt_int(31  downto 26 ) ) and (  not i_data_access_exec )  ) ;
      
        pc_nxt <= pc_plus4 when (execute = '0') else
                  pc_plus4 when (i_pc_sel = "00") else
		  alu_out  when (i_pc_sel = "01") else
	          interrupt_vector;   

        save_int_pc <= ( status_bits_flags & status_bits_irq_mask & status_bits_firq_mask & pc(25  downto 2 ) & status_bits_mode );

        save_int_pc_m4 <= ( status_bits_flags & status_bits_irq_mask & status_bits_firq_mask & pc_minus4(25  downto 2 ) & status_bits_mode );

        reg_write_nxt <= alu_out          when i_reg_write_sel = "000" else
			 save_int_pc_m4   when i_reg_write_sel = "001" else
			 multiply_out     when i_reg_write_sel = "010" else
			 o_status_bits_int    when i_reg_write_sel = "011" else
			 i_copro_read_data when i_reg_write_sel = "101" else
			 base_address      when i_reg_write_sel = "110" else
			save_int_pc ;

	byte_enable_nxt <= "1111" when  i_byte_enable_sel = "00" else
			   "0011" when (i_byte_enable_sel = "10") and (o_address_nxt_int(1) ='0') else
			   "1100" when (i_byte_enable_sel = "10") and (o_address_nxt_int(1) ='1') else
                           "0001" when (o_address_nxt_int(1 downto 0) = "00" ) else
                           "0010" when (o_address_nxt_int(1 downto 0) = "01" ) else
			   "0100" when (o_address_nxt_int(1 downto 0) = "10" ) else
    			   "1000" ;

	write_data_nxt <= rd when (i_byte_enable_sel = X"00") else 
			(rd(7 downto 0) & rd(7 downto 0) & rd(7 downto 0) & rd( 7 downto 0));

        execute <= conditional_execute( i_condition, status_bits_flags );

        pc_wen <= ( i_pc_wen or (  not execute )  ) ;

	reg_bank_wen <= ( 14 downto 0 => execute) and (i_reg_bank_wen ) ;

	priviledged_nxt <= '1' when  (((i_status_bits_mode_wen = '1') and (status_bits_mode_nxt /= USR))
			   or ((i_status_bits_mode_wen = '0') and (status_bits_mode /= USR))) else '0';


        write_enable_nxt <= ( execute and i_write_data_wen ) ;
        priviledged_update <= (  not i_fetch_stall ) ;
        data_access_update <= ( (  not i_fetch_stall )  and execute ) ;
        write_enable_update <= (  not i_fetch_stall ) ;
        write_data_update <= ( ( (  not i_fetch_stall )  and execute )  and i_write_data_wen ) ;
        exclusive_update <= ( (  not i_fetch_stall )  and execute ) ;
        address_update <= (  not i_fetch_stall ) ;
        byte_enable_update <= ( ( (  not i_fetch_stall )  and execute )  and i_write_data_wen ) ;
        copro_write_data_update <= ( ( (  not i_fetch_stall )  and execute )  and i_copro_write_data_wen ) ;
        base_address_update <= ( ( (  not i_fetch_stall )  and execute )  and i_base_address_wen ) ;
        status_bits_flags_update <= ( ( (  not i_fetch_stall )  and execute )  and i_status_bits_flags_wen ) ;
        status_bits_mode_update <= ( ( (  not i_fetch_stall )  and execute )  and i_status_bits_mode_wen ) ;
        status_bits_mode_rds_oh_update <= (  not i_fetch_stall ) ;
        status_bits_irq_mask_update <= ( ( (  not i_fetch_stall )  and execute )  and i_status_bits_irq_mask_wen ) ;
        status_bits_firq_mask_update <= ( ( (  not i_fetch_stall )  and execute )  and i_status_bits_firq_mask_wen ) ;

        process 
        begin
            wait until ( i_clk'EVENT and ( i_clk = '1' )  ) ;
            if ( (   reset_b = '0' )  ) then 
                o_priviledged <= '0' ;
                o_exclusive <= '0' ;
                o_data_access <= '0' ;
                o_write_enable <= '0' ;
                o_write_data <= (others => '0') ;
                o_address_int <= X"dead_dead" ;
                o_adex <= '0' ;
                o_address_valid <= '0' ;
                o_byte_enable <= (others => '0');
                o_copro_write_data <= (others => '0');
                base_address <= (others => '0');
                status_bits_flags <= (others => '0');
                status_bits_mode <= SVC;
                status_bits_mode_rds_oh <= To_StdLogicVector( "0001"  sll OH_SVC ) ;
                status_bits_irq_mask <= '1' ;
                status_bits_firq_mask <= '1' ;
            else 
		if(priviledged_update = '1') then
			o_priviledged <= priviledged_nxt;
		end if;
		if(exclusive_update = '1') then 
			o_exclusive <= i_exclusive_exec;
		end if;
		if(data_access_update = '1') then
			o_data_access <= i_data_access_exec;
		end if;
		if(write_enable_update = '1') then
			o_write_enable <= write_enable_nxt;
		end if;
		if(write_data_update = '1') then
			o_write_data <= write_data_nxt;
		end if;
		if(address_update = '1') then
			o_address_int <= o_address_nxt_int;
		end if;
		if(address_update = '1') then
			o_adex <= adex_nxt;
		end if;
		if(address_update = '1') then
			o_address_valid <= '1';
		end if;
		if(byte_enable_update = '1') then
			o_byte_enable <= byte_enable_nxt;
		end if;
		if(copro_write_data_update = '1') then
			o_copro_write_data <= write_data_nxt;
		end if;
		if(base_address_update = '1') then
			base_address <= rn;
		end if;
		if(status_bits_flags_update = '1') then
			status_bits_flags <= status_bits_flags_nxt;
		end if;
		if(status_bits_mode_update = '1') then
			status_bits_mode <= status_bits_mode_nxt;
		end if;
		if(status_bits_mode_update = '1') then
			status_bits_mode <= status_bits_mode_nxt;
		end if;
		if(status_bits_mode_rds_oh_update = '1') then
			status_bits_mode_rds_oh <= status_bits_mode_rds_oh_nxt;
		end if;
		if(status_bits_irq_mask_update = '1') then
			status_bits_irq_mask <= status_bits_irq_mask_nxt;
		end if;
		if(status_bits_firq_mask_update = '1') then
			status_bits_firq_mask <= status_bits_firq_mask_nxt;
		end if;

            end if;
        end process;

        u_barrel_shift : a23_barrel_shift
            port map (
                i_carry_in => status_bits_flags(1 ),
                i_function => i_barrel_shift_function,
                i_in => barrel_shift_in,
                i_shift_amount => shift_amount,
                i_shift_imm_zero => i_shift_imm_zero,
                o_carry_out => barrel_shift_carry,
                o_out => barrel_shift_out
                );
        u_alu : a23_alu
            port map (
                i_a_in => rn,
                i_b_in => barrel_shift_out,
                i_barrel_shift_carry => barrel_shift_carry,
                i_function => i_alu_function,
                i_status_bits_carry => status_bits_flags(1 ),
                o_flags => alu_flags,
                o_out => alu_out
                );
        u_multiply : a23_multiply
            port map (
                reset_b => reset_b,
                i_clk => i_clk,
                i_fetch_stall => i_fetch_stall,
                i_a_in => rs_unsigned,
                i_b_in => rm_unsigned,
                i_function => i_multiply_function_unsigned,
                i_execute => execute,
                o_out => (multiply_out_int),
                o_flags => (multiply_flags_int),
                o_done => o_multiply_done
                );

         rs_unsigned <= unsigned (rs);
         rm_unsigned <= unsigned (rm);
         i_multiply_function_unsigned <= unsigned (i_multiply_function);
	 multiply_out   <= conv_std_logic_vector (multiply_out_int,32);         
         multiply_flags <= conv_std_logic_vector (multiply_flags_int,2);

        u_register_bank : a23_register_bank
            port map (
                i_clk => i_clk,
                i_fetch_stall => i_fetch_stall,
                i_firq_not_user_mode => i_firq_not_user_mode,
                i_mode_exec => status_bits_mode,
                i_mode_idec => i_status_bits_mode,
                i_mode_rds_exec => status_bits_mode_rds_oh,
                i_pc => pc_nxt(25  downto 2 ),
                i_pc_wen => pc_wen,
                i_rds_sel => i_rds_sel,
                i_reg => reg_write_nxt,
                i_reg_bank_wen => reg_bank_wen,
                i_rm_sel => i_rm_sel,
                i_rn_sel => i_rn_sel,
                i_status_bits_firq_mask => status_bits_firq_mask,
                i_status_bits_flags => status_bits_flags,
                i_status_bits_irq_mask => status_bits_irq_mask,
                i_user_mode_regs_load => i_user_mode_regs_load,
                o_pc => pc,
                o_rd => rd,
                o_rm => rm,
                o_rn => rn,
                o_rs => rs,
                reset_b => reset_b
                );
end rtl; 



--------------------------------------------------------------
--------------------------------------------------------------
--                                                          --
-- This VHDL file has been generated by the verilog2vhdl    --
-- tool.                                                    --
-- Contact help@edautils.com  for support/info.--
--                                                          --
--                                                          --
--------------------------------------------------------------
--------------------------------------------------------------
--
--
-- Assumptions: 
--         (1) All the parameters are of type INTEGER, and hence the translated generics are of this type
--
--
--
--

LIBRARY ieee, synopsys;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;
USE ieee.std_logic_signed.all;
use ieee.std_logic_misc.all;
use ieee.std_logic_textio.all; 

entity a23_execute is 
 GENERIC (      CONSTANT REGOP : std_logic_vector(3 DOWNTO 0) := X"0";	
                 CONSTANT MULT : std_logic_vector(3 DOWNTO 0) := X"1";	
                 CONSTANT SWAP : std_logic_vector(3 DOWNTO 0) := X"2";	
                 CONSTANT TRANS : std_logic_vector(3 DOWNTO 0) := X"3";	
                 CONSTANT MTRANS : std_logic_vector(3 DOWNTO 0) := X"4";	
                 CONSTANT BRANCH : std_logic_vector(3 DOWNTO 0) := X"5";	
                 CONSTANT CODTRANS : std_logic_vector(3 DOWNTO 0) := X"6";	
                 CONSTANT COREGOP : std_logic_vector(3 DOWNTO 0) := X"7";	
                 CONSTANT CORTRANS : std_logic_vector(3 DOWNTO 0) := X"8";	
                 CONSTANT SWI : std_logic_vector(3 DOWNTO 0) := X"9";	
                 CONSTANT AND_VHDL : std_logic_vector(3 DOWNTO 0) := X"0";	
                 CONSTANT EOR : std_logic_vector(3 DOWNTO 0) := X"1";	
                 CONSTANT SUB : std_logic_vector(3 DOWNTO 0) := X"2";	
                 CONSTANT RSB : std_logic_vector(3 DOWNTO 0) := X"3";	
                 CONSTANT ADD : std_logic_vector(3 DOWNTO 0) := X"4";	
                 CONSTANT ADC : std_logic_vector(3 DOWNTO 0) := X"5";	
                 CONSTANT SBC : std_logic_vector(3 DOWNTO 0) := X"6";	
                 CONSTANT RSC : std_logic_vector(3 DOWNTO 0) := X"7";	
                 CONSTANT TST : std_logic_vector(3 DOWNTO 0) := X"8";	
                 CONSTANT TEQ : std_logic_vector(3 DOWNTO 0) := X"9";	
                 CONSTANT CMP : std_logic_vector(3 DOWNTO 0) := X"a";	
                 CONSTANT CMN : std_logic_vector(3 DOWNTO 0) := X"b";	
                 CONSTANT ORR : std_logic_vector(3 DOWNTO 0) := X"c";	
                 CONSTANT MOV : std_logic_vector(3 DOWNTO 0) := X"d";	
                 CONSTANT BIC : std_logic_vector(3 DOWNTO 0) := X"e";	
                 CONSTANT MVN : std_logic_vector(3 DOWNTO 0) := X"f";	
                 CONSTANT EQ : std_logic_vector(3 DOWNTO 0) := X"0";	
                 CONSTANT NE : std_logic_vector(3 DOWNTO 0) := X"1";	
                 CONSTANT CS : std_logic_vector(3 DOWNTO 0) := X"2";	
                 CONSTANT CC : std_logic_vector(3 DOWNTO 0) := X"3";	
                 CONSTANT MI : std_logic_vector(3 DOWNTO 0) := X"4";	
                 CONSTANT PL : std_logic_vector(3 DOWNTO 0) := X"5";	
                 CONSTANT VS : std_logic_vector(3 DOWNTO 0) := X"6";	
                 CONSTANT VC : std_logic_vector(3 DOWNTO 0) := X"7";	
                 CONSTANT HI : std_logic_vector(3 DOWNTO 0) := X"8";	
                 CONSTANT LS : std_logic_vector(3 DOWNTO 0) := X"9";	
                 CONSTANT GE : std_logic_vector(3 DOWNTO 0) := X"a";	
                 CONSTANT LT : std_logic_vector(3 DOWNTO 0) := X"b";	
                 CONSTANT GT : std_logic_vector(3 DOWNTO 0) := X"c";	
                 CONSTANT LE : std_logic_vector(3 DOWNTO 0) := X"d";	
                 CONSTANT AL : std_logic_vector(3 DOWNTO 0) := X"e";	
                 CONSTANT NV : std_logic_vector(3 DOWNTO 0) := X"f";	
                 CONSTANT LSL : std_logic_vector(1 DOWNTO 0) := "00";	
                 CONSTANT LSR : std_logic_vector(1 DOWNTO 0) := "01";	
                 CONSTANT ASR : std_logic_vector(1 DOWNTO 0) := "10";	
                 CONSTANT RRX : std_logic_vector(1 DOWNTO 0) := "11";	
                 CONSTANT ROR_VHDL : std_logic_vector(1 DOWNTO 0) := "11";	
                 CONSTANT SVC : std_logic_vector(1 DOWNTO 0) := B"11";	
                 CONSTANT IRQ : std_logic_vector(1 DOWNTO 0) := B"10";	
                 CONSTANT FIRQ : std_logic_vector(1 DOWNTO 0) := B"01";	
                 CONSTANT USR : std_logic_vector(1 DOWNTO 0) := B"00";	
                 CONSTANT OH_USR : integer  := 0;	
                 CONSTANT OH_IRQ : integer  := 1;	
                 CONSTANT OH_FIRQ : integer := 2;	
                 CONSTANT OH_SVC : integer  :=  3);

    
     port (
        reset_b :  in std_logic;
        i_clk :  in std_logic;
        i_read_data :  in std_logic_vector( 31  downto 0  );
        i_read_data_alignment :  in std_logic_vector( 4  downto 0  );
        i_copro_read_data :  in std_logic_vector( 31  downto 0  );
        i_data_access_exec :  in std_logic;
        o_copro_write_data :  out std_logic_vector( 31  downto 0  );
        o_write_data :  out std_logic_vector( 31  downto 0  );
        o_address :  out std_logic_vector( 31  downto 0  );
        o_adex :  out std_logic;
        o_address_valid :  out std_logic;
        o_address_nxt :  out std_logic_vector( 31  downto 0  );
        o_priviledged :  out std_logic;
        o_exclusive :  out std_logic;
        o_write_enable :  out std_logic;
        o_byte_enable :  out std_logic_vector( 3  downto 0  );
        o_data_access :  out std_logic;
        o_status_bits :  out std_logic_vector( 31  downto 0  );
        o_multiply_done :  out std_logic;
        jtag_pc :  out std_logic_vector( 31  downto 0  );
        i_fetch_stall :  in std_logic;
        i_status_bits_mode :  in std_logic_vector( 1  downto 0  );
        i_status_bits_irq_mask :  in std_logic;
        i_status_bits_firq_mask :  in std_logic;
        i_imm32 :  in std_logic_vector( 31  downto 0  );
        i_imm_shift_amount :  in std_logic_vector( 4  downto 0  );
        i_shift_imm_zero :  in std_logic;
        i_condition :  in std_logic_vector( 3  downto 0  );
        i_exclusive_exec :  in std_logic;
        i_rm_sel :  in std_logic_vector( 3  downto 0  );
        i_rds_sel :  in std_logic_vector( 3  downto 0  );
        i_rn_sel :  in std_logic_vector( 3  downto 0  );
        i_barrel_shift_amount_sel :  in std_logic_vector( 1  downto 0  );
        i_barrel_shift_data_sel :  in std_logic_vector( 1  downto 0  );
        i_barrel_shift_function :  in std_logic_vector( 1  downto 0  );
        i_alu_function :  in std_logic_vector( 8  downto 0  );
        i_multiply_function :  in std_logic_vector( 1  downto 0  );
        i_interrupt_vector_sel :  in std_logic_vector( 2  downto 0  );
        i_address_sel :  in std_logic_vector( 3  downto 0  );
        i_pc_sel :  in std_logic_vector( 1  downto 0  );
        i_byte_enable_sel :  in std_logic_vector( 1  downto 0  );
        i_status_bits_sel :  in std_logic_vector( 2  downto 0  );
        i_reg_write_sel :  in std_logic_vector( 2  downto 0  );
        i_user_mode_regs_load :  in std_logic;
        i_user_mode_regs_store_nxt :  in std_logic;
        i_firq_not_user_mode :  in std_logic;
        i_write_data_wen :  in std_logic;
        i_base_address_wen :  in std_logic;
        i_pc_wen :  in std_logic;
        i_reg_bank_wen :  in std_logic_vector( 14  downto 0  );
        i_status_bits_flags_wen :  in std_logic;
        i_status_bits_mode_wen :  in std_logic;
        i_status_bits_irq_mask_wen :  in std_logic;
        i_status_bits_firq_mask_wen :  in std_logic;
        i_copro_write_data_wen :  in std_logic
    );
end entity; 


architecture rtl of a23_execute is 

 function pcf(   pc_reg : std_logic_vector ( 31  downto 0  ) )  
                   return std_logic_vector is 
        variable  pcf_return_dummy_var : std_logic_vector ( 31  downto 0  );
    begin
        pcf_return_dummy_var := ( "000000"  & pc_reg(25  downto 2 ) & "00"  );
         return pcf_return_dummy_var;
    end;

    function decode( reg_sel : unsigned ( 3  downto 0  ))  return unsigned is 
        variable decode_return_dummy_var : unsigned ( 14  downto 0  );
    begin
        case  ( reg_sel ) is 
            when X"0"  => 
                decode_return_dummy_var := X"0001" ;
            when  X"1"  => 
                decode_return_dummy_var := X"0002" ;
            when  X"2"  => 
                decode_return_dummy_var := X"0004" ;
            when 
                X"3"  => 
                decode_return_dummy_var := X"0008" ;
            when 
                X"4"  => 
                decode_return_dummy_var := X"0010" ;
            when 
                X"5"  => 
                decode_return_dummy_var := X"0020" ;
            when 
                X"6"  => 
                decode_return_dummy_var := X"0040" ;
            when 
                X"7"  => 
                decode_return_dummy_var := X"0080" ;
            when 
                X"8"  => 
                decode_return_dummy_var := X"0100" ;
            when 
                X"9"  => 
                decode_return_dummy_var := X"0200" ;
            when 
                X"a"  => 
                decode_return_dummy_var := X"0400" ;
            when 
                X"b"  => 
                decode_return_dummy_var := X"0800" ;
            when 
                X"c"  => 
                decode_return_dummy_var := X"1000" ;
            when 
                X"d"  => 
                decode_return_dummy_var := X"2000" ;
            when 
                X"e"  => 
                decode_return_dummy_var := X"4000" ;
            when 
                 others  => 
                decode_return_dummy_var := X"0000" ;
        end case;
         return decode_return_dummy_var;
    end;

    function oh_status_bits_mode(fn_status_bits_mode : std_logic_vector( 1  downto 0  ))  return std_logic_vector is 
        variable oh_status_bits_mode_return_dummy_var : std_logic_vector( 3  downto 0  );
    begin
  if (fn_status_bits_mode = SVC) then 
  oh_status_bits_mode_return_dummy_var := To_StdLogicVector ("1" sll OH_SVC); 
  elsif (fn_status_bits_mode = IRQ) then
  oh_status_bits_mode_return_dummy_var := To_StdLogicVector ("1" sll OH_IRQ) ;
  elsif (fn_status_bits_mode = FIRQ) then
  oh_status_bits_mode_return_dummy_var := To_StdLogicVector ("1" sll OH_FIRQ) ;
  else
  oh_status_bits_mode_return_dummy_var := To_StdLogicVector ("1" sll OH_USR);
  end if;
  return oh_status_bits_mode_return_dummy_var;
   end;

function to_std_logic(c: character) return std_logic is 
    variable sl: std_logic;
    begin
      case c is
        when 'U' => 
           sl := 'U'; 
        when 'X' =>
           sl := 'X';
        when '0' => 
           sl := '0';
        when '1' => 
           sl := '1';
        when 'Z' => 
           sl := 'Z';
        when 'W' => 
           sl := 'W';
        when 'L' => 
           sl := 'L';
        when 'H' => 
           sl := 'H';
        when '-' => 
           sl := '-';
        when others =>
           sl := 'X'; 
    end case;
   return sl;
  end to_std_logic;




function to_std_logic_vector(s: string) return std_logic_vector is 
  variable slv: std_logic_vector(s'high-s'low downto 0);
  variable k: integer;
begin
   k := s'high-s'low;
  for i in s'range loop
     slv(k) := to_std_logic(s(i));
     k      := k - 1;
  end loop;
  return slv;
end to_std_logic_vector;                                       


    function mode_name(  constant mode : std_logic_vector( 4  downto 0  ))  return std_logic_vector is 
        variable mode_name_return_dummy_var : std_logic_vector ( 111  downto 0  );
    begin

	 if ( mode = USR) then
		mode_name_return_dummy_var := to_std_logic_vector ("User");
	 elsif ( mode = SVC) then
		 mode_name_return_dummy_var := to_std_logic_vector("Supervisor");
	 elsif (mode = IRQ) then
		 mode_name_return_dummy_var := to_std_logic_vector("Interrupt"); 
	 elsif (mode = FIRQ) then
	 	mode_name_return_dummy_var := to_std_logic_vector("Fast Interrupt");
	 else
	 	mode_name_return_dummy_var := to_std_logic_vector("UNKNOWN");
	 end if;
         return mode_name_return_dummy_var;
    end;


  FUNCTION conditional_execute (condition : IN std_logic_vector(3 DOWNTO 0);
                 flags : IN std_logic_vector(3 DOWNTO 0)) RETURN std_logic   
 IS 
        VARIABLE conditional_execute : std_logic;	

BEGIN
    if (condition = AL OR (condition = EQ AND 
		To_bit(flags(2)) /= '0') OR (condition = NE AND 
		NOT (To_bit(flags(2)) /= '0')) OR (condition = CS AND 
		To_bit(flags(1)) /= '0') OR (condition = CC AND 
		NOT (To_bit(flags(1)) /= '0')) OR (condition = MI AND 
		To_bit(flags(3)) /= '0') OR (condition = PL AND 
		NOT (To_bit(flags(3)) /= '0')) OR (condition = VS AND 
		To_bit(flags(0)) /= '0') OR (condition = VC AND 
		NOT (To_bit(flags(0)) /= '0')) OR (condition = HI AND 
		To_bit(flags(1)) /= '0' AND NOT (To_bit(flags(2)) /= '0')) OR 
		(condition = LS AND (NOT (To_bit(flags(1)) /= '0') OR 
		To_bit(flags(2)) /= '0')) OR (condition = GE AND 
		flags(3) = flags(0)) OR (condition = LT AND 
		flags(3) /= flags(0)) OR (condition = GT AND 
		NOT (To_bit(flags(2)) /= '0') AND flags(3) = flags(0)) OR 
		(condition = LE AND (To_bit(flags(2)) /= '0' OR 
		flags(3) /= flags(0))))	then
    conditional_execute := '1';
    end if;

    RETURN conditional_execute;
END;

 function log2(  constant num : integer )  return   integer is
        variable log2_return_dummy_var : integer;
        variable i : integer;
    begin
        log2_return_dummy_var := 0 ;
        i := 0 ;
        while ( ( i < 30  )  ) loop
            if ((2**i > num)  and ( log2_return_dummy_var = 0))  then 
                log2_return_dummy_var := ( i - 1 ) ;
            end if;
            i := (i + 1) ;
        end loop;
         return log2_return_dummy_var;
    end;
function Bool_to_Std_Logic(L: BOOLEAN) return std_ulogic is 
     begin 
         if L then 
             return('1'); 
         else 
             return('0'); 
         end if; 
     end function; 
 
    signal write_data_nxt : std_logic_vector( 31  downto 0  );
    signal byte_enable_nxt : std_logic_vector( 3  downto 0  );
    signal pc_plus4 : std_logic_vector( 31  downto 0  );
    signal pc_minus4 : std_logic_vector( 31  downto 0  );
    signal address_plus4 : std_logic_vector( 31  downto 0  );
    signal alu_plus4 : std_logic_vector( 31  downto 0  );
    signal rn_plus4 : std_logic_vector( 31  downto 0  );
    signal alu_out : std_logic_vector( 31  downto 0  );
    signal alu_flags : std_logic_vector( 3  downto 0  );
    signal rm : std_logic_vector( 31  downto 0  );
    signal rs : std_logic_vector( 31  downto 0  );
    signal rd : std_logic_vector( 31  downto 0  );
    signal rn : std_logic_vector( 31  downto 0  );
    signal pc : std_logic_vector( 31  downto 0  );
    signal pc_nxt : std_logic_vector( 31  downto 0  );
    signal write_enable_nxt : std_logic;
    signal interrupt_vector : std_logic_vector( 31  downto 0  );
    signal shift_amount : std_logic_vector( 7  downto 0  );
    signal barrel_shift_in : std_logic_vector( 31  downto 0  );
    signal barrel_shift_out : std_logic_vector( 31  downto 0  );
    signal barrel_shift_carry : std_logic;
    signal status_bits_flags_nxt : std_logic_vector( 3  downto 0  );
    signal status_bits_flags : std_logic_vector( 3  downto 0  );
    signal status_bits_mode_nxt : std_logic_vector( 1  downto 0  );
    signal status_bits_mode : std_logic_vector( 1  downto 0  );
    signal status_bits_mode_rds_oh_nxt : std_logic_vector( 3  downto 0  );
    signal status_bits_mode_rds_oh : std_logic_vector( 3  downto 0  );
    signal status_bits_mode_rds_oh_update : std_logic;
    signal status_bits_irq_mask_nxt : std_logic;
    signal status_bits_irq_mask : std_logic;
    signal status_bits_firq_mask_nxt : std_logic;
    signal status_bits_firq_mask : std_logic;
    signal execute : std_logic;
    signal reg_write_nxt : std_logic_vector( 31  downto 0  );
    signal pc_wen : std_logic;
    signal reg_bank_wen : std_logic_vector( 14  downto 0  );
    signal multiply_out : std_logic_vector( 31  downto 0  );
    signal multiply_flags : std_logic_vector( 1  downto 0  );
    signal base_address : std_logic_vector( 31  downto 0  );
    signal priviledged_nxt : std_logic;
    signal priviledged_update : std_logic;
    signal address_update : std_logic;
    signal base_address_update : std_logic;
    signal write_data_update : std_logic;
    signal copro_write_data_update : std_logic;
    signal byte_enable_update : std_logic;
    signal data_access_update : std_logic;
    signal write_enable_update : std_logic;
    signal exclusive_update : std_logic;
    signal status_bits_flags_update : std_logic;
    signal status_bits_mode_update : std_logic;
    signal status_bits_irq_mask_update : std_logic;
    signal status_bits_firq_mask_update : std_logic;
    signal alu_out_pc_filtered : std_logic_vector( 31  downto 0  );
    signal adex_nxt : std_logic;
    signal save_int_pc : std_logic_vector( 31  downto 0  );
    signal save_int_pc_m4 : std_logic_vector( 31  downto 0  );
    signal o_address_int :   std_logic_vector( 31  downto 0  );
    signal o_address_nxt_int : std_logic_vector( 31  downto 0  ); 
    signal o_status_bits_int : std_logic_vector( 31  downto 0  );


    component a23_barrel_shift is 
         port (
            i_in :  in std_logic_vector( 31  downto 0  );
            i_carry_in :  in std_logic;
            i_shift_amount :  in std_logic_vector( 7  downto 0  );
            i_shift_imm_zero :  in std_logic;
            i_function :  in std_logic_vector( 1  downto 0  );
            o_out :  out std_logic_vector( 31  downto 0  );
            o_carry_out :  out std_logic
        );
    end component; 
    component a23_alu is 
         port (
            i_a_in :  in std_logic_vector( 31  downto 0  );
            i_b_in :  in std_logic_vector( 31  downto 0  );
            i_barrel_shift_carry :  in std_logic;
            i_status_bits_carry :  in std_logic;
            i_function :  in std_logic_vector( 8  downto 0  );
            o_out :  out std_logic_vector( 31  downto 0  );
            o_flags :  out std_logic_vector( 3  downto 0  )
        );
    end component; 
    component a23_multiply is 
         port (
            reset_b :  in std_logic;
            i_clk :  in std_logic;
            i_fetch_stall :  in std_logic;
            i_a_in :  in std_logic_vector( 31  downto 0  );
            i_b_in :  in std_logic_vector( 31  downto 0  );
            i_function :  in std_logic_vector( 1  downto 0  );
            i_execute :  in std_logic;
            o_out :  out std_logic_vector( 31  downto 0  );
            o_flags :  out std_logic_vector( 1  downto 0  );
            o_done :  out std_logic
        );
    end component; 
    component a23_register_bank is 
         port (
            reset_b :  in std_logic;
            i_clk :  in std_logic;
            i_fetch_stall :  in std_logic;
            i_rm_sel :  in std_logic_vector( 3  downto 0  );
            i_rds_sel :  in std_logic_vector( 3  downto 0  );
            i_rn_sel :  in std_logic_vector( 3  downto 0  );
            i_pc_wen :  in std_logic;
            i_reg_bank_wen :  in std_logic_vector( 14  downto 0  );
            i_pc :  in std_logic_vector( 23  downto 0  );
            i_reg :  in std_logic_vector( 31  downto 0  );
            i_mode_idec :  in std_logic_vector( 1  downto 0  );
            i_mode_exec :  in std_logic_vector( 1  downto 0  );
            i_status_bits_flags :  in std_logic_vector( 3  downto 0  );
            i_status_bits_irq_mask :  in std_logic;
            i_status_bits_firq_mask :  in std_logic;
            i_firq_not_user_mode :  in std_logic;
            i_mode_rds_exec :  in std_logic_vector( 3  downto 0  );
            i_user_mode_regs_load :  in std_logic;
            o_rm :  out std_logic_vector( 31  downto 0  );
            o_rs :  out std_logic_vector( 31  downto 0  );
            o_rd :  out std_logic_vector( 31  downto 0  );
            o_rn :  out std_logic_vector( 31  downto 0  );
            o_pc :  out std_logic_vector( 31  downto 0  )
        );
    end component; 
    begin 

   o_address     <= o_address_int;
   o_address_nxt <= o_address_nxt_int;
   o_status_bits <= o_status_bits_int;



        o_status_bits_int <= ( status_bits_flags & status_bits_irq_mask & status_bits_firq_mask & X"000000"  & status_bits_mode );

        status_bits_flags_nxt <= alu_flags                        when  i_status_bits_sel = "000" else
                                alu_out(31 downto 28)            when  i_status_bits_sel = "001" else
                                i_copro_read_data(31 downto 28)  when  i_status_bits_sel = "011" else
                                (multiply_flags & status_bits_flags (1 downto 0));
          
        status_bits_mode_nxt <= i_status_bits_mode when i_status_bits_sel = "000" else
                                alu_out (1 downto 0) when i_status_bits_sel = "001" else
                                i_copro_read_data (1 downto 0);


       status_bits_mode_rds_oh_nxt <= To_StdLogicVector("1" sll OH_USR) when i_user_mode_regs_store_nxt = '1' else
                                   oh_status_bits_mode(status_bits_mode_nxt) when status_bits_mode_update = '1' else
                                   oh_status_bits_mode(status_bits_mode);

        status_bits_irq_mask_nxt <=  i_status_bits_irq_mask when    i_status_bits_sel = "000" else
                                     alu_out(27) when i_status_bits_sel = "001" else
                                      i_copro_read_data(27);

	status_bits_firq_mask_nxt <= i_status_bits_firq_mask when i_status_bits_sel  = "000" else
				    alu_out(26) when i_status_bits_sel = "001" else
				   i_copro_read_data(26);
               
            
        pc_plus4 <= ( pc + 4  ) ;
        pc_minus4 <= ( pc - 4  ) ;
        address_plus4 <= ( o_address_int + 4  ) ;
        alu_plus4 <= ( alu_out  + 4  ) ;
        rn_plus4 <= ( rn + 4  ) ;

        shift_amount <= X"00" when i_barrel_shift_amount_sel = "00" else
                        rs( 7 downto 0) when i_barrel_shift_amount_sel = "01" else
                        ("000" & i_imm_shift_amount) when i_barrel_shift_amount_sel = "10" else
                        ("000" & i_read_data_alignment);

	barrel_shift_in <= i_imm32 when i_barrel_shift_data_sel = "00" else
 		           i_read_data when i_barrel_shift_data_sel = "01" else
			   rm;

        interrupt_vector <= X"00000000" when i_interrupt_vector_sel = "000" else
			    X"00000010" when i_interrupt_vector_sel = "001" else
 			    X"0000001c" when i_interrupt_vector_sel = "010" else
 			    X"00000018" when i_interrupt_vector_sel = "011" else		
 			    X"0000000c" when i_interrupt_vector_sel = "100" else		
 			    X"00000004" when i_interrupt_vector_sel = "101" else		
 			    X"00000008" when i_interrupt_vector_sel = "111" else		
 			    X"00000014"; 		

	alu_out_pc_filtered <= pcf(alu_out) when ((pc_wen = '1') and (i_pc_sel = "01")) else
			       alu_out;

	o_address_nxt_int <= pc_plus4 when (execute = '0') else
 			 pc_plus4 when (i_address_sel = "0000") else
			 alu_out_pc_filtered when (i_address_sel = "0001") else
			 interrupt_vector when (i_address_sel = "0010") else
			 pc 		  when (i_address_sel = "0011") else
			 rn 		 when (i_address_sel = "0100") else
			address_plus4 when (i_address_sel = "0101") else
			alu_plus4     when (i_address_sel = "0110") else
			rn_plus4;
         
       

        adex_nxt <= ( OR_REDUCE( o_address_nxt_int(31  downto 26 ) ) and (  not i_data_access_exec )  ) ;
      
        pc_nxt <= pc_plus4 when (execute = '0') else
                  pc_plus4 when (i_pc_sel = "00") else
		  alu_out  when (i_pc_sel = "01") else
	          interrupt_vector;   

        save_int_pc <= ( status_bits_flags & status_bits_irq_mask & status_bits_firq_mask & pc(25  downto 2 ) & status_bits_mode );

        save_int_pc_m4 <= ( status_bits_flags & status_bits_irq_mask & status_bits_firq_mask & pc_minus4(25  downto 2 ) & status_bits_mode );

        reg_write_nxt <= alu_out          when i_reg_write_sel = "000" else
			 save_int_pc_m4   when i_reg_write_sel = "001" else
			 multiply_out     when i_reg_write_sel = "010" else
			 o_status_bits_int    when i_reg_write_sel = "011" else
			 i_copro_read_data when i_reg_write_sel = "101" else
			 base_address      when i_reg_write_sel = "110" else
			save_int_pc ;

	byte_enable_nxt <= "1111" when  i_byte_enable_sel = "00" else
			   "0011" when (i_byte_enable_sel = "10") and (o_address_nxt_int(1) ='0') else
			   "1100" when (i_byte_enable_sel = "10") and (o_address_nxt_int(1) ='1') else
                           "0001" when (o_address_nxt_int(1 downto 0) = "00" ) else
                           "0010" when (o_address_nxt_int(1 downto 0) = "01" ) else
			   "0100" when (o_address_nxt_int(1 downto 0) = "10" ) else
    			   "1000" ;

	write_data_nxt <= rd when (i_byte_enable_sel = "00") else 
			(rd(7 downto 0) & rd(7 downto 0) & rd(7 downto 0) & rd( 7 downto 0));

        execute <= conditional_execute( i_condition, status_bits_flags );

        pc_wen <= ( i_pc_wen or (  not execute )  ) ;

	reg_bank_wen <= ( 14 downto 0 => execute) and (i_reg_bank_wen ) ;

	priviledged_nxt <= '1' when  (((i_status_bits_mode_wen = '1') and (status_bits_mode_nxt /= USR))
			   or ((i_status_bits_mode_wen = '0') and (status_bits_mode /= USR))) else '0';


        write_enable_nxt <= ( execute and i_write_data_wen ) ;
        priviledged_update <= (  not i_fetch_stall ) ;
        data_access_update <= ( (  not i_fetch_stall )  and execute ) ;
        write_enable_update <= (  not i_fetch_stall ) ;
        write_data_update <= ( ( (  not i_fetch_stall )  and execute )  and i_write_data_wen ) ;
        exclusive_update <= ( (  not i_fetch_stall )  and execute ) ;
        address_update <= (  not i_fetch_stall ) ;
        byte_enable_update <= ( ( (  not i_fetch_stall )  and execute )  and i_write_data_wen ) ;
        copro_write_data_update <= ( ( (  not i_fetch_stall )  and execute )  and i_copro_write_data_wen ) ;
        base_address_update <= ( ( (  not i_fetch_stall )  and execute )  and i_base_address_wen ) ;
        status_bits_flags_update <= ( ( (  not i_fetch_stall )  and execute )  and i_status_bits_flags_wen ) ;
        status_bits_mode_update <= ( ( (  not i_fetch_stall )  and execute )  and i_status_bits_mode_wen ) ;
        status_bits_mode_rds_oh_update <= (  not i_fetch_stall ) ;
        status_bits_irq_mask_update <= ( ( (  not i_fetch_stall )  and execute )  and i_status_bits_irq_mask_wen ) ;
        status_bits_firq_mask_update <= ( ( (  not i_fetch_stall )  and execute )  and i_status_bits_firq_mask_wen ) ;
        process 
        begin
            wait until ( i_clk'EVENT and ( i_clk = '1' )  ) ;
            if ( (   reset_b = '0' )  ) then 
                o_priviledged <= '0' ;
                o_exclusive <= '0' ;
                o_data_access <= '0' ;
                o_write_enable <= '0' ;
                o_write_data <= (others => '0') ;
                o_address <= X"dead_dead" ;
                o_adex <= '0' ;
                o_address_valid <= '0' ;
                o_byte_enable <= (others => '0');
                o_copro_write_data <= (others => '0');
                base_address <= (others => '0');
                status_bits_flags <= (others => '0');
                status_bits_mode <= SVC;
                status_bits_mode_rds_oh <= To_StdLogicVector( "1"  sll OH_SVC ) ;
                status_bits_irq_mask <= '1' ;
                status_bits_firq_mask <= '1' ;
            else 
		if(priviledged_update = '1') then
			o_priviledged <= priviledged_nxt;
		end if;
		if(exclusive_update = '1') then 
			o_exclusive <= i_exclusive_exec;
		end if;
		if(data_access_update = '1') then
			o_data_access <= i_data_access_exec;
		end if;
		if(write_enable_update = '1') then
			o_write_enable <= write_enable_nxt;
		end if;
		if(write_data_update = '1') then
			o_write_data <= write_data_nxt;
		end if;
		if(address_update = '1') then
			o_address <= o_address_nxt_int;
		end if;
		if(address_update = '1') then
			o_adex <= adex_nxt;
		end if;
		if(address_update = '1') then
			o_address_valid <= '1';
		end if;
		if(byte_enable_update = '1') then
			o_byte_enable <= byte_enable_nxt;
		end if;
		if(copro_write_data_update = '1') then
			o_copro_write_data <= write_data_nxt;
		end if;
		if(base_address_update = '1') then
			base_address <= rn;
		end if;
		if(status_bits_flags_update = '1') then
			status_bits_flags <= status_bits_flags_nxt;
		end if;
		if(status_bits_mode_update = '1') then
			status_bits_mode <= status_bits_mode_nxt;
		end if;
		if(status_bits_mode_update = '1') then
			status_bits_mode <= status_bits_mode_nxt;
		end if;
		if(status_bits_mode_rds_oh_update = '1') then
			status_bits_mode_rds_oh <= status_bits_mode_rds_oh_nxt;
		end if;
		if(status_bits_irq_mask_update = '1') then
			status_bits_irq_mask <= status_bits_irq_mask_nxt;
		end if;
		if(status_bits_firq_mask_update = '1') then
			status_bits_firq_mask <= status_bits_firq_mask_nxt;
		end if;

            end if;
        end process;

        u_barrel_shift : a23_barrel_shift
            port map (
                i_carry_in => status_bits_flags(1 ),
                i_function => i_barrel_shift_function,
                i_in => barrel_shift_in,
                i_shift_amount => shift_amount,
                i_shift_imm_zero => i_shift_imm_zero,
                o_carry_out => barrel_shift_carry,
                o_out => barrel_shift_out
                );
        u_alu : a23_alu
            port map (
                i_a_in => rn,
                i_b_in => barrel_shift_out,
                i_barrel_shift_carry => barrel_shift_carry,
                i_function => i_alu_function,
                i_status_bits_carry => status_bits_flags(1 ),
                o_flags => alu_flags,
                o_out => alu_out
                );
        u_multiply : a23_multiply
            port map (
                reset_b => reset_b,
                i_clk => i_clk,
                i_fetch_stall => i_fetch_stall,
                i_a_in => rs,
                i_b_in => rm,
                i_function => i_multiply_function,
                i_execute => execute,
                o_out => multiply_out,
                o_flags => multiply_flags,
                o_done => o_multiply_done
                );


        u_register_bank : a23_register_bank
            port map (
                i_clk => i_clk,
                i_fetch_stall => i_fetch_stall,
                i_firq_not_user_mode => i_firq_not_user_mode,
                i_mode_exec => status_bits_mode,
                i_mode_idec => i_status_bits_mode,
                i_mode_rds_exec => status_bits_mode_rds_oh,
                i_pc => pc_nxt(25  downto 2 ),
                i_pc_wen => pc_wen,
                i_rds_sel => i_rds_sel,
                i_reg => reg_write_nxt,
                i_reg_bank_wen => reg_bank_wen,
                i_rm_sel => i_rm_sel,
                i_rn_sel => i_rn_sel,
                i_status_bits_firq_mask => status_bits_firq_mask,
                i_status_bits_flags => status_bits_flags,
                i_status_bits_irq_mask => status_bits_irq_mask,
                i_user_mode_regs_load => i_user_mode_regs_load,
                o_pc => pc,
                o_rd => rd,
                o_rm => rm,
                o_rn => rn,
                o_rs => rs,
                reset_b => reset_b
                );
end rtl; 



--------------------------------------------------------------
--------------------------------------------------------------
--                                                          --
-- This VHDL file has been generated by the verilog2vhdl    --
-- tool.                                                    --
-- Contact help@edautils.com  for support/info.--
--                                                          --
--                                                          --
--------------------------------------------------------------
--------------------------------------------------------------
--
--
-- Assumptions: 
--         (1) All the parameters are of type INTEGER, and hence the translated generics are of this type
--
--
--
--

LIBRARY ieee, synopsys;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;
USE ieee.std_logic_signed.all;
use ieee.std_logic_misc.all;
use ieee.std_logic_textio.all; 

entity a23_execute is 
 GENERIC (      CONSTANT REGOP : std_logic_vector(3 DOWNTO 0) := X"0";	
                 CONSTANT MULT : std_logic_vector(3 DOWNTO 0) := X"1";	
                 CONSTANT SWAP : std_logic_vector(3 DOWNTO 0) := X"2";	
                 CONSTANT TRANS : std_logic_vector(3 DOWNTO 0) := X"3";	
                 CONSTANT MTRANS : std_logic_vector(3 DOWNTO 0) := X"4";	
                 CONSTANT BRANCH : std_logic_vector(3 DOWNTO 0) := X"5";	
                 CONSTANT CODTRANS : std_logic_vector(3 DOWNTO 0) := X"6";	
                 CONSTANT COREGOP : std_logic_vector(3 DOWNTO 0) := X"7";	
                 CONSTANT CORTRANS : std_logic_vector(3 DOWNTO 0) := X"8";	
                 CONSTANT SWI : std_logic_vector(3 DOWNTO 0) := X"9";	
                 CONSTANT AND_VHDL : std_logic_vector(3 DOWNTO 0) := X"0";	
                 CONSTANT EOR : std_logic_vector(3 DOWNTO 0) := X"1";	
                 CONSTANT SUB : std_logic_vector(3 DOWNTO 0) := X"2";	
                 CONSTANT RSB : std_logic_vector(3 DOWNTO 0) := X"3";	
                 CONSTANT ADD : std_logic_vector(3 DOWNTO 0) := X"4";	
                 CONSTANT ADC : std_logic_vector(3 DOWNTO 0) := X"5";	
                 CONSTANT SBC : std_logic_vector(3 DOWNTO 0) := X"6";	
                 CONSTANT RSC : std_logic_vector(3 DOWNTO 0) := X"7";	
                 CONSTANT TST : std_logic_vector(3 DOWNTO 0) := X"8";	
                 CONSTANT TEQ : std_logic_vector(3 DOWNTO 0) := X"9";	
                 CONSTANT CMP : std_logic_vector(3 DOWNTO 0) := X"a";	
                 CONSTANT CMN : std_logic_vector(3 DOWNTO 0) := X"b";	
                 CONSTANT ORR : std_logic_vector(3 DOWNTO 0) := X"c";	
                 CONSTANT MOV : std_logic_vector(3 DOWNTO 0) := X"d";	
                 CONSTANT BIC : std_logic_vector(3 DOWNTO 0) := X"e";	
                 CONSTANT MVN : std_logic_vector(3 DOWNTO 0) := X"f";	
                 CONSTANT EQ : std_logic_vector(3 DOWNTO 0) := X"0";	
                 CONSTANT NE : std_logic_vector(3 DOWNTO 0) := X"1";	
                 CONSTANT CS : std_logic_vector(3 DOWNTO 0) := X"2";	
                 CONSTANT CC : std_logic_vector(3 DOWNTO 0) := X"3";	
                 CONSTANT MI : std_logic_vector(3 DOWNTO 0) := X"4";	
                 CONSTANT PL : std_logic_vector(3 DOWNTO 0) := X"5";	
                 CONSTANT VS : std_logic_vector(3 DOWNTO 0) := X"6";	
                 CONSTANT VC : std_logic_vector(3 DOWNTO 0) := X"7";	
                 CONSTANT HI : std_logic_vector(3 DOWNTO 0) := X"8";	
                 CONSTANT LS : std_logic_vector(3 DOWNTO 0) := X"9";	
                 CONSTANT GE : std_logic_vector(3 DOWNTO 0) := X"a";	
                 CONSTANT LT : std_logic_vector(3 DOWNTO 0) := X"b";	
                 CONSTANT GT : std_logic_vector(3 DOWNTO 0) := X"c";	
                 CONSTANT LE : std_logic_vector(3 DOWNTO 0) := X"d";	
                 CONSTANT AL : std_logic_vector(3 DOWNTO 0) := X"e";	
                 CONSTANT NV : std_logic_vector(3 DOWNTO 0) := X"f";	
                 CONSTANT LSL : std_logic_vector(1 DOWNTO 0) := "00";	
                 CONSTANT LSR : std_logic_vector(1 DOWNTO 0) := "01";	
                 CONSTANT ASR : std_logic_vector(1 DOWNTO 0) := "10";	
                 CONSTANT RRX : std_logic_vector(1 DOWNTO 0) := "11";	
                 CONSTANT ROR_VHDL : std_logic_vector(1 DOWNTO 0) := "11";	
                 CONSTANT SVC : std_logic_vector(1 DOWNTO 0) := B"11";	
                 CONSTANT IRQ : std_logic_vector(1 DOWNTO 0) := B"10";	
                 CONSTANT FIRQ : std_logic_vector(1 DOWNTO 0) := B"01";	
                 CONSTANT USR : std_logic_vector(1 DOWNTO 0) := B"00";	
                 CONSTANT OH_USR : integer  := 0;	
                 CONSTANT OH_IRQ : integer  := 1;	
                 CONSTANT OH_FIRQ : integer := 2;	
                 CONSTANT OH_SVC : integer  :=  3);

    
     port (
        reset_b :  in std_logic;
        i_clk :  in std_logic;
        i_read_data :  in std_logic_vector( 31  downto 0  );
        i_read_data_alignment :  in std_logic_vector( 4  downto 0  );
        i_copro_read_data :  in std_logic_vector( 31  downto 0  );
        i_data_access_exec :  in std_logic;
        o_copro_write_data :  out std_logic_vector( 31  downto 0  );
        o_write_data :  out std_logic_vector( 31  downto 0  );
        o_address :  out std_logic_vector( 31  downto 0  );
        o_adex :  out std_logic;
        o_address_valid :  out std_logic;
        o_address_nxt :  out std_logic_vector( 31  downto 0  );
        o_priviledged :  out std_logic;
        o_exclusive :  out std_logic;
        o_write_enable :  out std_logic;
        o_byte_enable :  out std_logic_vector( 3  downto 0  );
        o_data_access :  out std_logic;
        o_status_bits :  out std_logic_vector( 31  downto 0  );
        o_multiply_done :  out std_logic;
        jtag_pc :  out std_logic_vector( 31  downto 0  );
        i_fetch_stall :  in std_logic;
        i_status_bits_mode :  in std_logic_vector( 1  downto 0  );
        i_status_bits_irq_mask :  in std_logic;
        i_status_bits_firq_mask :  in std_logic;
        i_imm32 :  in std_logic_vector( 31  downto 0  );
        i_imm_shift_amount :  in std_logic_vector( 4  downto 0  );
        i_shift_imm_zero :  in std_logic;
        i_condition :  in std_logic_vector( 3  downto 0  );
        i_exclusive_exec :  in std_logic;
        i_rm_sel :  in std_logic_vector( 3  downto 0  );
        i_rds_sel :  in std_logic_vector( 3  downto 0  );
        i_rn_sel :  in std_logic_vector( 3  downto 0  );
        i_barrel_shift_amount_sel :  in std_logic_vector( 1  downto 0  );
        i_barrel_shift_data_sel :  in std_logic_vector( 1  downto 0  );
        i_barrel_shift_function :  in std_logic_vector( 1  downto 0  );
        i_alu_function :  in std_logic_vector( 8  downto 0  );
        i_multiply_function :  in std_logic_vector( 1  downto 0  );
        i_interrupt_vector_sel :  in std_logic_vector( 2  downto 0  );
        i_address_sel :  in std_logic_vector( 3  downto 0  );
        i_pc_sel :  in std_logic_vector( 1  downto 0  );
        i_byte_enable_sel :  in std_logic_vector( 1  downto 0  );
        i_status_bits_sel :  in std_logic_vector( 2  downto 0  );
        i_reg_write_sel :  in std_logic_vector( 2  downto 0  );
        i_user_mode_regs_load :  in std_logic;
        i_user_mode_regs_store_nxt :  in std_logic;
        i_firq_not_user_mode :  in std_logic;
        i_write_data_wen :  in std_logic;
        i_base_address_wen :  in std_logic;
        i_pc_wen :  in std_logic;
        i_reg_bank_wen :  in std_logic_vector( 14  downto 0  );
        i_status_bits_flags_wen :  in std_logic;
        i_status_bits_mode_wen :  in std_logic;
        i_status_bits_irq_mask_wen :  in std_logic;
        i_status_bits_firq_mask_wen :  in std_logic;
        i_copro_write_data_wen :  in std_logic
    );
end entity; 


architecture rtl of a23_execute is 

 function pcf(   pc_reg : std_logic_vector ( 31  downto 0  ) )  
                   return std_logic_vector is 
        variable  pcf_return_dummy_var : std_logic_vector ( 31  downto 0  );
    begin
        pcf_return_dummy_var := ( "000000"  & pc_reg(25  downto 2 ) & "00"  );
         return pcf_return_dummy_var;
    end;

    function decode( reg_sel : unsigned ( 3  downto 0  ))  return unsigned is 
        variable decode_return_dummy_var : unsigned ( 14  downto 0  );
    begin
        case  ( reg_sel ) is 
            when X"0"  => 
                decode_return_dummy_var := X"0001" ;
            when  X"1"  => 
                decode_return_dummy_var := X"0002" ;
            when  X"2"  => 
                decode_return_dummy_var := X"0004" ;
            when 
                X"3"  => 
                decode_return_dummy_var := X"0008" ;
            when 
                X"4"  => 
                decode_return_dummy_var := X"0010" ;
            when 
                X"5"  => 
                decode_return_dummy_var := X"0020" ;
            when 
                X"6"  => 
                decode_return_dummy_var := X"0040" ;
            when 
                X"7"  => 
                decode_return_dummy_var := X"0080" ;
            when 
                X"8"  => 
                decode_return_dummy_var := X"0100" ;
            when 
                X"9"  => 
                decode_return_dummy_var := X"0200" ;
            when 
                X"a"  => 
                decode_return_dummy_var := X"0400" ;
            when 
                X"b"  => 
                decode_return_dummy_var := X"0800" ;
            when 
                X"c"  => 
                decode_return_dummy_var := X"1000" ;
            when 
                X"d"  => 
                decode_return_dummy_var := X"2000" ;
            when 
                X"e"  => 
                decode_return_dummy_var := X"4000" ;
            when 
                 others  => 
                decode_return_dummy_var := X"0000" ;
        end case;
         return decode_return_dummy_var;
    end;

    function oh_status_bits_mode(fn_status_bits_mode : std_logic_vector( 1  downto 0  ))  return std_logic_vector is 
        variable oh_status_bits_mode_return_dummy_var : std_logic_vector( 3  downto 0  );
    begin
  if (fn_status_bits_mode = SVC) then 
  oh_status_bits_mode_return_dummy_var := To_StdLogicVector ("1" sll OH_SVC); 
  elsif (fn_status_bits_mode = IRQ) then
  oh_status_bits_mode_return_dummy_var := To_StdLogicVector ("1" sll OH_IRQ) ;
  elsif (fn_status_bits_mode = FIRQ) then
  oh_status_bits_mode_return_dummy_var := To_StdLogicVector ("1" sll OH_FIRQ) ;
  else
  oh_status_bits_mode_return_dummy_var := To_StdLogicVector ("1" sll OH_USR);
  end if;
  return oh_status_bits_mode_return_dummy_var;
   end;

function to_std_logic(c: character) return std_logic is 
    variable sl: std_logic;
    begin
      case c is
        when 'U' => 
           sl := 'U'; 
        when 'X' =>
           sl := 'X';
        when '0' => 
           sl := '0';
        when '1' => 
           sl := '1';
        when 'Z' => 
           sl := 'Z';
        when 'W' => 
           sl := 'W';
        when 'L' => 
           sl := 'L';
        when 'H' => 
           sl := 'H';
        when '-' => 
           sl := '-';
        when others =>
           sl := 'X'; 
    end case;
   return sl;
  end to_std_logic;




function to_std_logic_vector(s: string) return std_logic_vector is 
  variable slv: std_logic_vector(s'high-s'low downto 0);
  variable k: integer;
begin
   k := s'high-s'low;
  for i in s'range loop
     slv(k) := to_std_logic(s(i));
     k      := k - 1;
  end loop;
  return slv;
end to_std_logic_vector;                                       


    function mode_name(  constant mode : std_logic_vector( 4  downto 0  ))  return std_logic_vector is 
        variable mode_name_return_dummy_var : std_logic_vector ( 111  downto 0  );
    begin

	 if ( mode = USR) then
		mode_name_return_dummy_var := to_std_logic_vector ("User");
	 elsif ( mode = SVC) then
		 mode_name_return_dummy_var := to_std_logic_vector("Supervisor");
	 elsif (mode = IRQ) then
		 mode_name_return_dummy_var := to_std_logic_vector("Interrupt"); 
	 elsif (mode = FIRQ) then
	 	mode_name_return_dummy_var := to_std_logic_vector("Fast Interrupt");
	 else
	 	mode_name_return_dummy_var := to_std_logic_vector("UNKNOWN");
	 end if;
         return mode_name_return_dummy_var;
    end;


  FUNCTION conditional_execute (condition : IN std_logic_vector(3 DOWNTO 0);
                 flags : IN std_logic_vector(3 DOWNTO 0)) RETURN std_logic   
 IS 
        VARIABLE conditional_execute : std_logic;	

BEGIN
    if (condition = AL OR (condition = EQ AND 
		To_bit(flags(2)) /= '0') OR (condition = NE AND 
		NOT (To_bit(flags(2)) /= '0')) OR (condition = CS AND 
		To_bit(flags(1)) /= '0') OR (condition = CC AND 
		NOT (To_bit(flags(1)) /= '0')) OR (condition = MI AND 
		To_bit(flags(3)) /= '0') OR (condition = PL AND 
		NOT (To_bit(flags(3)) /= '0')) OR (condition = VS AND 
		To_bit(flags(0)) /= '0') OR (condition = VC AND 
		NOT (To_bit(flags(0)) /= '0')) OR (condition = HI AND 
		To_bit(flags(1)) /= '0' AND NOT (To_bit(flags(2)) /= '0')) OR 
		(condition = LS AND (NOT (To_bit(flags(1)) /= '0') OR 
		To_bit(flags(2)) /= '0')) OR (condition = GE AND 
		flags(3) = flags(0)) OR (condition = LT AND 
		flags(3) /= flags(0)) OR (condition = GT AND 
		NOT (To_bit(flags(2)) /= '0') AND flags(3) = flags(0)) OR 
		(condition = LE AND (To_bit(flags(2)) /= '0' OR 
		flags(3) /= flags(0))))	then
    conditional_execute := '1';
    end if;

    RETURN conditional_execute;
END;

 function log2(  constant num : integer )  return   integer is
        variable log2_return_dummy_var : integer;
        variable i : integer;
    begin
        log2_return_dummy_var := 0 ;
        i := 0 ;
        while ( ( i < 30  )  ) loop
            if ((2**i > num)  and ( log2_return_dummy_var = 0))  then 
                log2_return_dummy_var := ( i - 1 ) ;
            end if;
            i := (i + 1) ;
        end loop;
         return log2_return_dummy_var;
    end;
function Bool_to_Std_Logic(L: BOOLEAN) return std_ulogic is 
     begin 
         if L then 
             return('1'); 
         else 
             return('0'); 
         end if; 
     end function; 
 
    signal write_data_nxt : std_logic_vector( 31  downto 0  );
    signal byte_enable_nxt : std_logic_vector( 3  downto 0  );
    signal pc_plus4 : std_logic_vector( 31  downto 0  );
    signal pc_minus4 : std_logic_vector( 31  downto 0  );
    signal address_plus4 : std_logic_vector( 31  downto 0  );
    signal alu_plus4 : std_logic_vector( 31  downto 0  );
    signal rn_plus4 : std_logic_vector( 31  downto 0  );
    signal alu_out : std_logic_vector( 31  downto 0  );
    signal alu_flags : std_logic_vector( 3  downto 0  );
    signal rm : std_logic_vector( 31  downto 0  );
    signal rs : std_logic_vector( 31  downto 0  );
    signal rd : std_logic_vector( 31  downto 0  );
    signal rn : std_logic_vector( 31  downto 0  );
    signal pc : std_logic_vector( 31  downto 0  );
    signal pc_nxt : std_logic_vector( 31  downto 0  );
    signal write_enable_nxt : std_logic;
    signal interrupt_vector : std_logic_vector( 31  downto 0  );
    signal shift_amount : std_logic_vector( 7  downto 0  );
    signal barrel_shift_in : std_logic_vector( 31  downto 0  );
    signal barrel_shift_out : std_logic_vector( 31  downto 0  );
    signal barrel_shift_carry : std_logic;
    signal status_bits_flags_nxt : std_logic_vector( 3  downto 0  );
    signal status_bits_flags : std_logic_vector( 3  downto 0  );
    signal status_bits_mode_nxt : std_logic_vector( 1  downto 0  );
    signal status_bits_mode : std_logic_vector( 1  downto 0  );
    signal status_bits_mode_rds_oh_nxt : std_logic_vector( 3  downto 0  );
    signal status_bits_mode_rds_oh : std_logic_vector( 3  downto 0  );
    signal status_bits_mode_rds_oh_update : std_logic;
    signal status_bits_irq_mask_nxt : std_logic;
    signal status_bits_irq_mask : std_logic;
    signal status_bits_firq_mask_nxt : std_logic;
    signal status_bits_firq_mask : std_logic;
    signal execute : std_logic;
    signal reg_write_nxt : std_logic_vector( 31  downto 0  );
    signal pc_wen : std_logic;
    signal reg_bank_wen : std_logic_vector( 14  downto 0  );
    signal multiply_out : std_logic_vector( 31  downto 0  );
    signal multiply_flags : std_logic_vector( 1  downto 0  );
    signal base_address : std_logic_vector( 31  downto 0  );
    signal priviledged_nxt : std_logic;
    signal priviledged_update : std_logic;
    signal address_update : std_logic;
    signal base_address_update : std_logic;
    signal write_data_update : std_logic;
    signal copro_write_data_update : std_logic;
    signal byte_enable_update : std_logic;
    signal data_access_update : std_logic;
    signal write_enable_update : std_logic;
    signal exclusive_update : std_logic;
    signal status_bits_flags_update : std_logic;
    signal status_bits_mode_update : std_logic;
    signal status_bits_irq_mask_update : std_logic;
    signal status_bits_firq_mask_update : std_logic;
    signal alu_out_pc_filtered : std_logic_vector( 31  downto 0  );
    signal adex_nxt : std_logic;
    signal save_int_pc : std_logic_vector( 31  downto 0  );
    signal save_int_pc_m4 : std_logic_vector( 31  downto 0  );
    signal o_address_int :   std_logic_vector( 31  downto 0  );
    signal o_address_nxt_int : std_logic_vector( 31  downto 0  ); 
    signal o_status_bits_int : std_logic_vector( 31  downto 0  );
    signal multiply_out_int : unsigned (31 downto 0);
    signal multiply_flags_int : unsigned (1 downto 0);
    signal rm_unsigned : unsigned (31 downto 0);
    signal rs_unsigned : unsigned (31 downto 0);
    signal i_multiply_function_unsigned : unsigned (1 downto 0);


    component a23_barrel_shift is 
         port (
            i_in :  in std_logic_vector( 31  downto 0  );
            i_carry_in :  in std_logic;
            i_shift_amount :  in std_logic_vector( 7  downto 0  );
            i_shift_imm_zero :  in std_logic;
            i_function :  in std_logic_vector( 1  downto 0  );
            o_out :  out std_logic_vector( 31  downto 0  );
            o_carry_out :  out std_logic
        );
    end component; 
    component a23_alu is 
         port (
            i_a_in :  in std_logic_vector( 31  downto 0  );
            i_b_in :  in std_logic_vector( 31  downto 0  );
            i_barrel_shift_carry :  in std_logic;
            i_status_bits_carry :  in std_logic;
            i_function :  in std_logic_vector( 8  downto 0  );
            o_out :  out std_logic_vector( 31  downto 0  );
            o_flags :  out std_logic_vector( 3  downto 0  )
        );
    end component; 
    component a23_multiply is 
         port (
            reset_b :  in std_logic;
            i_clk :  in std_logic;
            i_fetch_stall :  in std_logic;
            i_a_in :  in unsigned( 31  downto 0  );
            i_b_in :  in unsigned( 31  downto 0  );
            i_function :  in unsigned( 1  downto 0  );
            i_execute :  in std_logic;
            o_out :  out unsigned( 31  downto 0  );
            o_flags :  out unsigned( 1  downto 0  );
            o_done :  out std_logic
        );
    end component; 
    component a23_register_bank is 
         port (
            reset_b :  in std_logic;
            i_clk :  in std_logic;
            i_fetch_stall :  in std_logic;
            i_rm_sel :  in std_logic_vector( 3  downto 0  );
            i_rds_sel :  in std_logic_vector( 3  downto 0  );
            i_rn_sel :  in std_logic_vector( 3  downto 0  );
            i_pc_wen :  in std_logic;
            i_reg_bank_wen :  in std_logic_vector( 14  downto 0  );
            i_pc :  in std_logic_vector( 23  downto 0  );
            i_reg :  in std_logic_vector( 31  downto 0  );
            i_mode_idec :  in std_logic_vector( 1  downto 0  );
            i_mode_exec :  in std_logic_vector( 1  downto 0  );
            i_status_bits_flags :  in std_logic_vector( 3  downto 0  );
            i_status_bits_irq_mask :  in std_logic;
            i_status_bits_firq_mask :  in std_logic;
            i_firq_not_user_mode :  in std_logic;
            i_mode_rds_exec :  in std_logic_vector( 3  downto 0  );
            i_user_mode_regs_load :  in std_logic;
            o_rm :  out std_logic_vector( 31  downto 0  );
            o_rs :  out std_logic_vector( 31  downto 0  );
            o_rd :  out std_logic_vector( 31  downto 0  );
            o_rn :  out std_logic_vector( 31  downto 0  );
            o_pc :  out std_logic_vector( 31  downto 0  )
        );
    end component; 
    begin 

   o_address     <= o_address_int;
   o_address_nxt <= o_address_nxt_int;
   o_status_bits <= o_status_bits_int;



        o_status_bits_int <= ( status_bits_flags & status_bits_irq_mask & status_bits_firq_mask & X"000000"  & status_bits_mode );

        status_bits_flags_nxt <= alu_flags                        when  i_status_bits_sel = "000" else
                                alu_out(31 downto 28)            when  i_status_bits_sel = "001" else
                                i_copro_read_data(31 downto 28)  when  i_status_bits_sel = "011" else
                                (multiply_flags & status_bits_flags (1 downto 0));
          
        status_bits_mode_nxt <= i_status_bits_mode when i_status_bits_sel = "000" else
                                alu_out (1 downto 0) when i_status_bits_sel = "001" else
                                i_copro_read_data (1 downto 0);


       status_bits_mode_rds_oh_nxt <= To_StdLogicVector("1" sll OH_USR) when i_user_mode_regs_store_nxt = '1' else
                                   oh_status_bits_mode(status_bits_mode_nxt) when status_bits_mode_update = '1' else
                                   oh_status_bits_mode(status_bits_mode);

        status_bits_irq_mask_nxt <=  i_status_bits_irq_mask when    i_status_bits_sel = "000" else
                                     alu_out(27) when i_status_bits_sel = "001" else
                                      i_copro_read_data(27);

	status_bits_firq_mask_nxt <= i_status_bits_firq_mask when i_status_bits_sel  = "000" else
				    alu_out(26) when i_status_bits_sel = "001" else
				   i_copro_read_data(26);
               
            
        pc_plus4 <= ( pc + 4  ) ;
        pc_minus4 <= ( pc - 4  ) ;
        address_plus4 <= ( o_address_int + 4  ) ;
        alu_plus4 <= ( alu_out  + 4  ) ;
        rn_plus4 <= ( rn + 4  ) ;

        shift_amount <= X"00" when i_barrel_shift_amount_sel = "00" else
                        rs( 7 downto 0) when i_barrel_shift_amount_sel = "01" else
                        ("000" & i_imm_shift_amount) when i_barrel_shift_amount_sel = "10" else
                        ("000" & i_read_data_alignment);

	barrel_shift_in <= i_imm32 when i_barrel_shift_data_sel = "00" else
 		           i_read_data when i_barrel_shift_data_sel = "01" else
			   rm;

        interrupt_vector <= X"00000000" when i_interrupt_vector_sel = "000" else
			    X"00000010" when i_interrupt_vector_sel = "001" else
 			    X"0000001c" when i_interrupt_vector_sel = "010" else
 			    X"00000018" when i_interrupt_vector_sel = "011" else		
 			    X"0000000c" when i_interrupt_vector_sel = "100" else		
 			    X"00000004" when i_interrupt_vector_sel = "101" else		
 			    X"00000008" when i_interrupt_vector_sel = "111" else		
 			    X"00000014"; 		

	alu_out_pc_filtered <= pcf(alu_out) when ((pc_wen = '1') and (i_pc_sel = "01")) else
			       alu_out;

	o_address_nxt_int <= pc_plus4 when (execute = '0') else
 			 pc_plus4 when (i_address_sel = "0000") else
			 alu_out_pc_filtered when (i_address_sel = "0001") else
			 interrupt_vector when (i_address_sel = "0010") else
			 pc 		  when (i_address_sel = "0011") else
			 rn 		 when (i_address_sel = "0100") else
			address_plus4 when (i_address_sel = "0101") else
			alu_plus4     when (i_address_sel = "0110") else
			rn_plus4;
         
       

        adex_nxt <= ( OR_REDUCE( o_address_nxt_int(31  downto 26 ) ) and (  not i_data_access_exec )  ) ;
      
        pc_nxt <= pc_plus4 when (execute = '0') else
                  pc_plus4 when (i_pc_sel = "00") else
		  alu_out  when (i_pc_sel = "01") else
	          interrupt_vector;   

        save_int_pc <= ( status_bits_flags & status_bits_irq_mask & status_bits_firq_mask & pc(25  downto 2 ) & status_bits_mode );

        save_int_pc_m4 <= ( status_bits_flags & status_bits_irq_mask & status_bits_firq_mask & pc_minus4(25  downto 2 ) & status_bits_mode );

        reg_write_nxt <= alu_out          when i_reg_write_sel = "000" else
			 save_int_pc_m4   when i_reg_write_sel = "001" else
			 multiply_out     when i_reg_write_sel = "010" else
			 o_status_bits_int    when i_reg_write_sel = "011" else
			 i_copro_read_data when i_reg_write_sel = "101" else
			 base_address      when i_reg_write_sel = "110" else
			save_int_pc ;

	byte_enable_nxt <= "1111" when  i_byte_enable_sel = "00" else
			   "0011" when (i_byte_enable_sel = "10") and (o_address_nxt_int(1) ='0') else
			   "1100" when (i_byte_enable_sel = "10") and (o_address_nxt_int(1) ='1') else
                           "0001" when (o_address_nxt_int(1 downto 0) = "00" ) else
                           "0010" when (o_address_nxt_int(1 downto 0) = "01" ) else
			   "0100" when (o_address_nxt_int(1 downto 0) = "10" ) else
    			   "1000" ;

	write_data_nxt <= rd when (i_byte_enable_sel = X"00") else 
			(rd(7 downto 0) & rd(7 downto 0) & rd(7 downto 0) & rd( 7 downto 0));

        execute <= conditional_execute( i_condition, status_bits_flags );

        pc_wen <= ( i_pc_wen or (  not execute )  ) ;

	reg_bank_wen <= ( 14 downto 0 => execute) and (i_reg_bank_wen ) ;

	priviledged_nxt <= '1' when  (((i_status_bits_mode_wen = '1') and (status_bits_mode_nxt /= USR))
			   or ((i_status_bits_mode_wen = '0') and (status_bits_mode /= USR))) else '0';


        write_enable_nxt <= ( execute and i_write_data_wen ) ;
        priviledged_update <= (  not i_fetch_stall ) ;
        data_access_update <= ( (  not i_fetch_stall )  and execute ) ;
        write_enable_update <= (  not i_fetch_stall ) ;
        write_data_update <= ( ( (  not i_fetch_stall )  and execute )  and i_write_data_wen ) ;
        exclusive_update <= ( (  not i_fetch_stall )  and execute ) ;
        address_update <= (  not i_fetch_stall ) ;
        byte_enable_update <= ( ( (  not i_fetch_stall )  and execute )  and i_write_data_wen ) ;
        copro_write_data_update <= ( ( (  not i_fetch_stall )  and execute )  and i_copro_write_data_wen ) ;
        base_address_update <= ( ( (  not i_fetch_stall )  and execute )  and i_base_address_wen ) ;
        status_bits_flags_update <= ( ( (  not i_fetch_stall )  and execute )  and i_status_bits_flags_wen ) ;
        status_bits_mode_update <= ( ( (  not i_fetch_stall )  and execute )  and i_status_bits_mode_wen ) ;
        status_bits_mode_rds_oh_update <= (  not i_fetch_stall ) ;
        status_bits_irq_mask_update <= ( ( (  not i_fetch_stall )  and execute )  and i_status_bits_irq_mask_wen ) ;
        status_bits_firq_mask_update <= ( ( (  not i_fetch_stall )  and execute )  and i_status_bits_firq_mask_wen ) ;
        process 
        begin
            wait until ( i_clk'EVENT and ( i_clk = '1' )  ) ;
            if ( (   reset_b = '0' )  ) then 
                o_priviledged <= '0' ;
                o_exclusive <= '0' ;
                o_data_access <= '0' ;
                o_write_enable <= '0' ;
                o_write_data <= (others => '0') ;
                o_address <= X"dead_dead" ;
                o_adex <= '0' ;
                o_address_valid <= '0' ;
                o_byte_enable <= (others => '0');
                o_copro_write_data <= (others => '0');
                base_address <= (others => '0');
                status_bits_flags <= (others => '0');
                status_bits_mode <= SVC;
                status_bits_mode_rds_oh <= To_StdLogicVector( "1"  sll OH_SVC ) ;
                status_bits_irq_mask <= '1' ;
                status_bits_firq_mask <= '1' ;
            else 
		if(priviledged_update = '1') then
			o_priviledged <= priviledged_nxt;
		end if;
		if(exclusive_update = '1') then 
			o_exclusive <= i_exclusive_exec;
		end if;
		if(data_access_update = '1') then
			o_data_access <= i_data_access_exec;
		end if;
		if(write_enable_update = '1') then
			o_write_enable <= write_enable_nxt;
		end if;
		if(write_data_update = '1') then
			o_write_data <= write_data_nxt;
		end if;
		if(address_update = '1') then
			o_address <= o_address_nxt_int;
		end if;
		if(address_update = '1') then
			o_adex <= adex_nxt;
		end if;
		if(address_update = '1') then
			o_address_valid <= '1';
		end if;
		if(byte_enable_update = '1') then
			o_byte_enable <= byte_enable_nxt;
		end if;
		if(copro_write_data_update = '1') then
			o_copro_write_data <= write_data_nxt;
		end if;
		if(base_address_update = '1') then
			base_address <= rn;
		end if;
		if(status_bits_flags_update = '1') then
			status_bits_flags <= status_bits_flags_nxt;
		end if;
		if(status_bits_mode_update = '1') then
			status_bits_mode <= status_bits_mode_nxt;
		end if;
		if(status_bits_mode_update = '1') then
			status_bits_mode <= status_bits_mode_nxt;
		end if;
		if(status_bits_mode_rds_oh_update = '1') then
			status_bits_mode_rds_oh <= status_bits_mode_rds_oh_nxt;
		end if;
		if(status_bits_irq_mask_update = '1') then
			status_bits_irq_mask <= status_bits_irq_mask_nxt;
		end if;
		if(status_bits_firq_mask_update = '1') then
			status_bits_firq_mask <= status_bits_firq_mask_nxt;
		end if;

            end if;
        end process;

        u_barrel_shift : a23_barrel_shift
            port map (
                i_carry_in => status_bits_flags(1 ),
                i_function => i_barrel_shift_function,
                i_in => barrel_shift_in,
                i_shift_amount => shift_amount,
                i_shift_imm_zero => i_shift_imm_zero,
                o_carry_out => barrel_shift_carry,
                o_out => barrel_shift_out
                );
        u_alu : a23_alu
            port map (
                i_a_in => rn,
                i_b_in => barrel_shift_out,
                i_barrel_shift_carry => barrel_shift_carry,
                i_function => i_alu_function,
                i_status_bits_carry => status_bits_flags(1 ),
                o_flags => alu_flags,
                o_out => alu_out
                );
        u_multiply : a23_multiply
            port map (
                reset_b => reset_b,
                i_clk => i_clk,
                i_fetch_stall => i_fetch_stall,
                i_a_in => rs_unsigned,
                i_b_in => rm_unsigned,
                i_function => i_multiply_function_unsigned,
                i_execute => execute,
                o_out => (multiply_out_int),
                o_flags => (multiply_flags_int),
                o_done => o_multiply_done
                );

         rs_unsigned <= unsigned (rs);
         rm_unsigned <= unsigned (rm);
         i_multiply_function_unsigned <= unsigned (i_multiply_function);
	 multiply_out   <= conv_std_logic_vector (multiply_out_int,32);         
         multiply_flags <= conv_std_logic_vector (multiply_flags_int,2);

        u_register_bank : a23_register_bank
            port map (
                i_clk => i_clk,
                i_fetch_stall => i_fetch_stall,
                i_firq_not_user_mode => i_firq_not_user_mode,
                i_mode_exec => status_bits_mode,
                i_mode_idec => i_status_bits_mode,
                i_mode_rds_exec => status_bits_mode_rds_oh,
                i_pc => pc_nxt(25  downto 2 ),
                i_pc_wen => pc_wen,
                i_rds_sel => i_rds_sel,
                i_reg => reg_write_nxt,
                i_reg_bank_wen => reg_bank_wen,
                i_rm_sel => i_rm_sel,
                i_rn_sel => i_rn_sel,
                i_status_bits_firq_mask => status_bits_firq_mask,
                i_status_bits_flags => status_bits_flags,
                i_status_bits_irq_mask => status_bits_irq_mask,
                i_user_mode_regs_load => i_user_mode_regs_load,
                o_pc => pc,
                o_rd => rd,
                o_rm => rm,
                o_rn => rn,
                o_rs => rs,
                reset_b => reset_b
                );
    end rtl; 



--------------------------------------------------------------
--------------------------------------------------------------
--                                                          --
-- This VHDL file has been generated by the verilog2vhdl    --
-- tool.                                                    --
-- Contact help@edautils.com  for support/info.--
--                                                          --
--                                                          --
--------------------------------------------------------------
--------------------------------------------------------------
--
--
-- Assumptions: 
--         (1) All the parameters are of type INTEGER, and hence the translated generics are of this type
--
--
--
--
LIBRARY ieee, synopsys;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_signed.all;
use ieee.numeric_std.all;
use ieee.std_logic_misc.all;
use ieee.std_logic_textio.all;
entity a23_fetch is 
generic (
        MAIN_MSB : INTEGER := 27 ;
        MAIN_BASE : INTEGER := 0 ;
        SENS_BASE : INTEGER := 12288 ;
        SPI_BASE : INTEGER := 16384 ;
        I2C_BASE : INTEGER := 20480 ;
        UART0_BASE : INTEGER := 24576 ;
        arm_TM_BASE : INTEGER := 53248 ;
        arm_IC_BASE : INTEGER := 57344 ;
        TEST_BASE : INTEGER := 61440 
    );
     port (
        reset_b :  in std_logic;
        i_clk :  in std_logic;
        i_address :  in std_logic_vector( 31  downto 0  );
        i_address_valid :  in std_logic;
        i_address_nxt :  in std_logic_vector( 31  downto 0  );
        i_write_data :  in std_logic_vector( 31  downto 0  );
        i_write_enable :  in std_logic;
        o_read_data :  out std_logic_vector( 31  downto 0  );
        i_priviledged :  in std_logic;
        i_exclusive :  in std_logic;
        i_byte_enable :  in std_logic_vector( 3  downto 0  );
        i_data_access :  in std_logic;
        i_cache_enable :  in std_logic;
        i_cache_flush :  in std_logic;
        i_cacheable_area :  in std_logic_vector( 31  downto 0  );
        i_system_rdy :  in std_logic;
        o_fetch_stall :  out std_logic;
        o_wb_adr :  out std_logic_vector( 31  downto 0  );
        o_wb_sel :  out std_logic_vector( 3  downto 0  );
        o_wb_we :  out std_logic;
        i_wb_dat :  in std_logic_vector( 31  downto 0  );
        o_wb_dat :  out std_logic_vector( 31  downto 0  );
        o_wb_cyc :  out std_logic;
        o_wb_stb :  out std_logic;
        i_wb_ack :  in std_logic;
        i_wb_err :  in std_logic
    );
end entity; 


architecture rtl of a23_fetch is 

function Bool_to_Std_Logic(L: BOOLEAN) return std_ulogic is 
     begin 
         if L then 
             return('1'); 
         else 
             return('0'); 
         end if; 
     end function; 

    function in_main_mem(  constant address : std_logic_vector( 31  downto 0  ))  return std_logic is 
        variable in_main_mem_return_dummy_var : std_logic;
    begin
        in_main_mem_return_dummy_var := Bool_to_Std_Logic( ( address >= MAIN_BASE )  and ( address < (MAIN_BASE + (2**(MAIN_MSB  + 1)) -1))); 
         return in_main_mem_return_dummy_var;
    end;
    function in_sens(  constant address : std_logic_vector( 31  downto 0  ))  return std_logic is 
        variable in_sens_return_dummy_var : std_logic;
    begin
        in_sens_return_dummy_var := Bool_to_Std_Logic( address(31  downto 16 ) = SENS_BASE ) ;
         return in_sens_return_dummy_var;
    end;
    function in_spi(  constant address : std_logic_vector( 31  downto 0  ))  return std_logic is 
        variable in_spi_return_dummy_var : std_logic;
    begin
        in_spi_return_dummy_var := Bool_to_Std_Logic( address(31  downto 16 ) = SPI_BASE ) ;
         return in_spi_return_dummy_var;
    end;
    function in_i2c(  constant address : std_logic_vector( 31  downto 0  ))  return std_logic is 
        variable in_i2c_return_dummy_var : std_logic;
    begin
        in_i2c_return_dummy_var := Bool_to_Std_Logic( address(31  downto 16 ) = I2C_BASE ) ;
         return in_i2c_return_dummy_var;
    end;
    function in_uart(  constant address : std_logic_vector( 31  downto 0  ))  return std_logic is 
        variable in_uart_return_dummy_var : std_logic;
    begin
        in_uart_return_dummy_var := Bool_to_Std_Logic( address(31  downto 16 ) = UART0_BASE ) ;
         return in_uart_return_dummy_var;
    end;
    function in_ic(  constant address : std_logic_vector( 31  downto 0  ))  return std_logic is 
        variable in_ic_return_dummy_var : std_logic;
    begin
        in_ic_return_dummy_var := Bool_to_Std_Logic( address(31  downto 16 ) = arm_IC_BASE ) ;
         return in_ic_return_dummy_var;
    end;
    function in_tm(  constant address : std_logic_vector( 31  downto 0  ))  return std_logic is 
        variable in_tm_return_dummy_var : std_logic;
    begin
        in_tm_return_dummy_var := Bool_to_Std_Logic( address(31  downto 16 ) = arm_TM_BASE ) ;
         return in_tm_return_dummy_var;
    end;
    function in_test(  constant address : std_logic_vector( 31  downto 0  ))  return std_logic is 
        variable in_test_return_dummy_var : std_logic;
    begin
        in_test_return_dummy_var := Bool_to_Std_Logic( address(31  downto 16 ) = TEST_BASE ) ;
         return in_test_return_dummy_var;
    end;
    function in_cachable_mem( address : std_logic_vector( 31  downto 0  ))  return std_logic is 
        variable in_cachable_mem_return_dummy_var : std_logic;
    begin
        in_cachable_mem_return_dummy_var := in_main_mem( address );
         return in_cachable_mem_return_dummy_var;
    end;
    signal cache_stall : std_logic;
    signal wb_stall : std_logic;
    signal cache_read_data : std_logic_vector( 31  downto 0  );
    signal sel_cache : std_logic;
    signal sel_wb : std_logic;
    signal cache_wb_req : std_logic;
    signal address_cachable : std_logic;
    signal o_wb_stb_int :std_logic; 
    signal o_fetch_stall_int :std_logic;
    signal o_wb_adr_int : std_logic_vector( 31  downto 0  );
    signal wb_stb_ack :std_logic;

    component a23_cache is 
         port (
            reset_b :  in std_logic;
            i_clk :  in std_logic;
            i_select :  in std_logic;
            i_exclusive :  in std_logic;
            i_write_data :  in std_logic_vector( 31  downto 0  );
            i_write_enable :  in std_logic;
            i_address :  in std_logic_vector( 31  downto 0  );
            i_address_nxt :  in std_logic_vector( 31  downto 0  );
            i_byte_enable :  in std_logic_vector( 3  downto 0  );
            i_cache_enable :  in std_logic;
            i_cache_flush :  in std_logic;
            o_read_data :  out std_logic_vector( 31  downto 0  );
            o_stall :  out std_logic;
            i_core_stall :  in std_logic;
            o_wb_req :  out std_logic;
            i_wb_address :  in std_logic_vector( 31  downto 0  );
            i_wb_read_data :  in std_logic_vector( 31  downto 0  );
            i_wb_stall :  in std_logic
        );
    end component; 
    component a23_wishbone is 
         port (
            reset_b :  in std_logic;
            i_clk :  in std_logic;
            i_select :  in std_logic;
            i_write_data :  in std_logic_vector( 31  downto 0  );
            i_write_enable :  in std_logic;
            i_byte_enable :  in std_logic_vector( 3  downto 0  );
            i_data_access :  in std_logic;
            i_exclusive :  in std_logic;
            i_address :  in std_logic_vector( 31  downto 0  );
            o_stall :  out std_logic;
            i_cache_req :  in std_logic;
            o_wb_adr :  out std_logic_vector( 31  downto 0  );
            o_wb_sel :  out std_logic_vector( 3  downto 0  );
            o_wb_we :  out std_logic;
            i_wb_dat :  in std_logic_vector( 31  downto 0  );
            o_wb_dat :  out std_logic_vector( 31  downto 0  );
            o_wb_cyc :  out std_logic;
            o_wb_stb :  out std_logic;
            i_wb_ack :  in std_logic;
            i_wb_err :  in std_logic
        );
    end component; 
    begin 
     o_wb_stb <= o_wb_stb_int;
     o_wb_adr <= o_wb_adr_int ;

     address_cachable <= ( in_cachable_mem(i_address)) and i_cacheable_area(CONV_INTEGER(i_address(25  downto 21 )))  ;

     sel_cache <= ( ( ( address_cachable and i_address_valid )  and i_cache_enable )  and (  not i_exclusive )  ) ;
     sel_wb <= ( ( (  not sel_cache )  and i_address_valid )  and (  not cache_stall )  ) ;

     o_read_data <= cache_read_data when sel_cache = '1' else
		       i_wb_dat        when sel_wb = '1' else
		      X"ffeeddcc";

    wb_stb_ack <=   o_wb_stb_int and (  not i_wb_ack )   ;

        o_fetch_stall_int <= ( ( (  not i_system_rdy )  or wb_stall )  or cache_stall ) ;
        u_cache : a23_cache
            port map (
                i_address => i_address,
                i_address_nxt => i_address_nxt,
                i_byte_enable => i_byte_enable,
                i_cache_enable => i_cache_enable,
                i_cache_flush => i_cache_flush,
                i_clk => i_clk,
                i_core_stall => o_fetch_stall_int,
                i_exclusive => i_exclusive,
                i_select => sel_cache,
                i_wb_address => o_wb_adr_int,
                i_wb_read_data => i_wb_dat,
                i_wb_stall => wb_stb_ack ,
                i_write_data => i_write_data,
                i_write_enable => i_write_enable,
                o_read_data => cache_read_data,
                o_stall => cache_stall,
                o_wb_req => cache_wb_req,
                reset_b => reset_b
                );
        u_wishbone : a23_wishbone
            port map (
                i_address => i_address,
                i_byte_enable => i_byte_enable,
                i_cache_req => cache_wb_req,
                i_clk => i_clk,
                i_data_access => i_data_access,
                i_exclusive => i_exclusive,
                i_select => sel_wb,
                i_wb_ack => i_wb_ack,
                i_wb_dat => i_wb_dat,
                i_wb_err => i_wb_err,
                i_write_data => i_write_data,
                i_write_enable => i_write_enable,
                o_stall => wb_stall,
                o_wb_adr => o_wb_adr_int,
                o_wb_cyc => o_wb_cyc,
                o_wb_dat => o_wb_dat,
                o_wb_sel => o_wb_sel,
                o_wb_stb => o_wb_stb_int,
                o_wb_we => o_wb_we,
                reset_b => reset_b
                );
end rtl; 



-- This VHDL was converted from Verilog using the
-- Icarus Verilog VHDL Code Generator 0.10.0 (devel) ()

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

-- Generated from Verilog module a23_multiply (a23_multiply.v:1)
entity a23_multiply is
  port (
    i_a_in : in unsigned(31 downto 0);
    i_b_in : in unsigned(31 downto 0);
    i_clk : in std_logic;
    i_execute : in std_logic;
    i_fetch_stall : in std_logic;
    i_function : in unsigned(1 downto 0);
    o_done : out std_logic;
    o_flags : out unsigned(1 downto 0);
    o_out : out unsigned(31 downto 0);
    reset_b : in std_logic
  );
end entity; 

-- Generated from Verilog module a23_multiply (a23_multiply.v:1)
architecture from_verilog of a23_multiply is
  signal tmp_s10 : unsigned(33 downto 0);  -- Temporary created at a23_multiply.v:38
  signal tmp_s12 : unsigned(33 downto 0);  -- Temporary created at a23_multiply.v:38
  signal tmp_s14 : unsigned(33 downto 0);  -- Temporary created at a23_multiply.v:38
  signal tmp_s19 : unsigned(1 downto 0);  -- Temporary created at a23_multiply.v:40
  signal tmp_s20 : unsigned(1 downto 0);  -- Temporary created at a23_multiply.v:40
  signal tmp_s22 : std_logic;  -- Temporary created at a23_multiply.v:40
  signal tmp_s25 : unsigned(1 downto 0);  -- Temporary created at a23_multiply.v:41
  signal tmp_s26 : unsigned(1 downto 0);  -- Temporary created at a23_multiply.v:41
  signal tmp_s28 : std_logic;  -- Temporary created at a23_multiply.v:41
  signal tmp_s30 : unsigned(33 downto 0);  -- Temporary created at a23_multiply.v:42
  signal tmp_s32 : unsigned(33 downto 0);  -- Temporary created at a23_multiply.v:41
  signal tmp_s37 : unsigned(33 downto 0);  -- Temporary created at a23_multiply.v:45
  signal tmp_s4 : unsigned(1 downto 0);  -- Temporary created at a23_multiply.v:37
  signal tmp_s40 : std_logic;  -- Temporary created at a23_multiply.v:47
  signal tmp_s43 : unsigned(31 downto 0);  -- Temporary created at a23_multiply.v:47
  signal tmp_s44 : unsigned(32 downto 0);  -- Temporary created at a23_multiply.v:47
  signal tmp_s46 : std_logic;  -- Temporary created at a23_multiply.v:47
  signal tmp_s48 : unsigned(32 downto 0);  -- Temporary created at a23_multiply.v:47
  signal tmp_s8 : unsigned(1 downto 0);  -- Temporary created at a23_multiply.v:38
  signal accumulate : std_logic;  -- Declared at a23_multiply.v:18
  signal count : unsigned(5 downto 0);  -- Declared at a23_multiply.v:24
  signal count_nxt : unsigned(5 downto 0);  -- Declared at a23_multiply.v:25
  signal enable : std_logic;  -- Declared at a23_multiply.v:17
  signal flags_nxt : unsigned(1 downto 0);  -- Declared at a23_multiply.v:28
  signal multiplier : unsigned(33 downto 0);  -- Declared at a23_multiply.v:19
  signal multiplier_bar : unsigned(33 downto 0);  -- Declared at a23_multiply.v:20
  signal product : unsigned(67 downto 0);  -- Declared at a23_multiply.v:26
  signal product_nxt : unsigned(67 downto 0);  -- Declared at a23_multiply.v:27
  signal sum : unsigned(33 downto 0);  -- Declared at a23_multiply.v:21
  signal sum34_b : unsigned(33 downto 0);  -- Declared at a23_multiply.v:22
  signal sum_acc1 : unsigned(32 downto 0);  -- Declared at a23_multiply.v:31
  signal sum_acc1_carry : std_logic;  -- Declared at a23_multiply.v:29
  signal sum_acc1_carry_nxt : std_logic;  -- Declared at a23_multiply.v:30
  
  function Boolean_To_Logic(B : Boolean) return std_logic is
  begin
    if B then
      return '1';
    else
      return '0';
    end if;
  end function;
begin
  tmp_s12 <= not tmp_s10;
  o_flags <= flags_nxt;
  enable <= i_function(0);
  accumulate <= i_function(1);
  multiplier <= tmp_s4 & i_a_in;
  tmp_s10 <= tmp_s8 & i_a_in;
  multiplier_bar <= tmp_s12 + tmp_s14;
  tmp_s19 <= product(1 downto 0);
  tmp_s22 <= '1' when tmp_s19 = tmp_s20 else '0';
  tmp_s25 <= product(1 downto 0);
  tmp_s28 <= '1' when tmp_s25 = tmp_s26 else '0';
  tmp_s32 <= multiplier_bar when tmp_s28 = '1' else tmp_s30;
  sum34_b <= multiplier when tmp_s22 = '1' else tmp_s32;
  tmp_s37 <= product(67 downto 34);
  sum <= tmp_s37 + sum34_b;
  tmp_s43 <= product(32 downto 1);
  tmp_s44 <= tmp_s40 & tmp_s43;
  tmp_s48 <= tmp_s46 & i_a_in;
  sum_acc1 <= tmp_s44 + tmp_s48;
  o_out <= product(32 downto 1);
  tmp_s14 <= "0000000000000000000000000000000001";
  tmp_s20 <= "01";
  tmp_s26 <= "10";
  tmp_s30 <= "0000000000000000000000000000000000";
  tmp_s4 <= "00";
  tmp_s40 <= '0';
  tmp_s46 <= '0';
  tmp_s8 <= "00";
  
  -- Generated from initial process in a23_multiply (a23_multiply.v:13)
  
  -- Generated from always process in a23_multiply (a23_multiply.v:50)
  process (count, sum_acc1_carry, product, i_b_in, sum, accumulate, sum_acc1, enable) is
  begin
    count_nxt <= count;
    sum_acc1_carry_nxt <= sum_acc1_carry;
    product_nxt <= product;
    flags_nxt <= product(32) & Boolean_To_Logic (product(32 downto 1) = X"00000000") ;
    if count = "000000" then
      product_nxt <= Resize("000000000000000000000000000000000" & '0' & i_b_in & '0', 68);
    else
      if count <= "100001" then
        product_nxt <= sum(33) & sum & product(33 downto 1);
      else
        if (count = "100010") and (accumulate = '1') then
          product_nxt <= Resize(product(64 downto 33) & sum_acc1(31 downto 0) & '0', 68);
          sum_acc1_carry_nxt <= sum_acc1(32);
        end if;
      end if;
    end if;
    if count = "000000" then
      if enable = '1' then
        count_nxt <= "000001";
      else
        count_nxt <= "000000";
      end if;
    else
      if ((count = "100010") and ((not accumulate) = '1')) or ((count = "100011") and (accumulate = '1')) then
        count_nxt <= "000000";
      else
        count_nxt <= count + "000001";
      end if;
    end if;
  end process;
  
  -- Generated from always process in a23_multiply (a23_multiply.v:77)
  process (i_clk) is
  begin
    if rising_edge(i_clk) then
      if (not reset_b) = '1' then
        count <= "000000";
        product <= "00000000000000000000000000000000000000000000000000000000000000000000";
        sum_acc1_carry <= '0';
        o_done <= '0';
      else
        if (not i_fetch_stall) = '1' then
          if i_execute = '1' then
            count <= count_nxt;
          else
            count <= count;
          end if;
          if i_execute = '1' then
            product <= product_nxt;
          else
            product <= product;
          end if;
          if i_execute = '1' then
            sum_acc1_carry <= sum_acc1_carry_nxt;
          else
            sum_acc1_carry <= sum_acc1_carry;
          end if;
          if i_execute = '1' then
            o_done <= Boolean_To_Logic(count = "011111");
          end if;
        end if;
      end if;
    end if;
  end process;
end from_verilog;


--------------------------------------------------------------
--------------------------------------------------------------
--                                                          --
-- This VHDL file has been generated by the verilog2vhdl    --
-- tool.                                                    --
-- Contact help@edautils.com  for support/info.--
--                                                          --
--                                                          --
--------------------------------------------------------------
--------------------------------------------------------------
--
--
-- Assumptions: 
--         (1) All the parameters are of type INTEGER, and hence the translated generics are of this type
--
--
--
--
LIBRARY ieee, synopsys;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;
USE ieee.std_logic_signed.all;
use ieee.std_logic_misc.all;
use ieee.std_logic_textio.all; 

use synopsys.attributes.all;
entity a23_multiply is 
     port (
        reset_b :  in std_logic;
        i_clk :  in std_logic;
        i_fetch_stall :  in std_logic;
        i_a_in :  in std_logic_vector( 31  downto 0  );
        i_b_in :  in std_logic_vector( 31  downto 0  );
        i_function :  in std_logic_vector( 1  downto 0  );
        i_execute :  in std_logic;
        o_out :  out std_logic_vector( 31  downto 0  );
        o_flags :  out std_logic_vector( 1  downto 0  );
        o_done :  out std_logic
    );
end entity; 


architecture rtl of a23_multiply is 
    signal enable : std_logic;
    signal accumulate : std_logic;
    signal multiplier : std_logic_vector( 33  downto 0  );
    signal multiplier_bar : std_logic_vector( 33  downto 0  );
    signal sum : std_logic_vector( 33  downto 0  );
    signal sum34_b : std_logic_vector( 33  downto 0  );
    signal count : std_logic_vector( 5  downto 0  );
    signal count_nxt : std_logic_vector( 5  downto 0  );
    signal product : std_logic_vector( 67  downto 0  );
    signal product_nxt : std_logic_vector( 67  downto 0  );
    signal flags_nxt : std_logic_vector( 1  downto 0  );
    signal sum_acc1_carry : std_logic;
    signal sum_acc1_carry_nxt : std_logic;
    signal sum_acc1 : std_logic_vector( 32  downto 0  );

function Bool_to_Std_Logic(L: BOOLEAN) return std_logic is 
     begin 
         if L then 
             return('1'); 
         else 
             return('0'); 
         end if; 
     end function; 
    begin 
        
        enable <= i_function(0);
        accumulate <= i_function(1);
        multiplier <= ("00" & i_a_in);
        multiplier_bar <= ((not("00"  & i_a_in))  + "0000000000000000000000000000000001"  ) ;
        sum34_b <= multiplier when product(1 downto 0) = "01" else
		   multiplier_bar when product(1 downto 0) = "10" else
                   (others => '0');


        sum <= ( product(67  downto 34 ) + sum34_b ) ;
        sum_acc1 <= (('0'  & product(32  downto 1)) + ('0'  & i_a_in )) ;

        process (count,sum_acc1_carry,product,i_b_in,sum,
		 accumulate,product,sum_acc1,enable)
        begin
            count_nxt <= count;
            sum_acc1_carry_nxt <= sum_acc1_carry;
            product_nxt <= product;
            flags_nxt <= (product(32) & Bool_to_Std_Logic(product(32  downto 1) = X"00000000"));
            if ((count = "000000")) then 
                product_nxt <= (X"00000000"  & "000"  & i_b_in & '0'  );
            elsif ( ( count <= 33  )  ) then 
                    product_nxt <= (sum(33) & sum & product(33  downto 1));
            elsif ((count = 34)  and (accumulate = '1'))  then 
                        product_nxt <= ("000" & product(64  downto 33 ) & sum_acc1(31  downto 0 ) & '0'  );
                        sum_acc1_carry_nxt <= sum_acc1(32 );
            end if;
            if ((count = "000000"  )  ) then 
                if (enable = '1') then
                   count_nxt <= "000001";
		else
       		   count_nxt <= "000000";
		end if;
            elsif (((count = 34)  and (accumulate = '0'))  or ((count = 35)  and (accumulate = '1'))) then 
                    count_nxt <= "000000" ;
            else 
                    count_nxt <= (count + 1) ;
            end if;
        end process;

        process 
        begin
            wait until ( i_clk'EVENT and ( i_clk = '1' )  ) ;
            if ((reset_b = '0')) then 
                count <=  (others => '0');
                product <= (others => '0');
                sum_acc1_carry <= '0';
                o_done <= '0' ;
            else 
                if (i_fetch_stall = '0') then 
		   if (i_execute = '1') then
		 	count <= count_nxt;
			product <= product_nxt;
			sum_acc1_carry <= sum_acc1_carry_nxt;
			o_done <= Bool_to_Std_Logic(count = 31);
		   end if;
                end if;
            end if;
        end process;
        o_out <= product(32  downto 1 );
        o_flags <= flags_nxt;
end rtl; 



------------------------------------------------------------------------
-- Disclaimer: USC makes no representation, either expressed or implied,
-- as to the adequacy, accuracy, sufficiency or freedom from defect of
-- any kind, nor shall USC incur any responsibility or obligation
-- whatsoever by reason of such Data. All Data is provided on an “as-is”
-- basis. To the maximum extent permitted by law, in no event will USC be
-- responsible for any incidental damages, consequential damages,
-- exemplary damages of any kind, lost goodwill, lost profits, lost
-- business and/or any indirect economic damages whatsoever regardless of
-- whether such damages arise from claims based upon contract,
-- negligence, tort (including strict liability or other legal theory), a
-- breach of any warranty or term of any agreement, and regardless of
-- whether a party was advised or had reason to know of the possibility
-- of incurring such damages in advance.
--
-- Software Distribution Notice: Software downloaded through this website
-- is being provided for the sole use of the Integrity and Reliability of
-- Integrated Circuits Program. DARPA has stipulated that neither this
-- software nor any derivatives of this software may be redistributed to
-- any third party. This software must be returned unmodified to the IRIS
-- Release Server website upon DARPA notification or, in any event,
-- before the end of the IRIS Program.
------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

-- Block RAM Memory Model: 8-bit Address 128-bit Data
-- 32 KB Memory

entity bram_addr8_data128 is
  port
    (
      reset_b        : in  std_logic;
      i_clk          : in  std_logic;
      i_write_data   : in  std_logic_vector(127 downto 0);
      i_write_enable : in  std_logic;
      i_address      : in  std_logic_vector(7 downto 0);
      o_read_data    : out std_logic_vector(127 downto 0)
    );
end entity bram_addr8_data128;

------------------------------------------------------------------------------
-- ARCHITECTURE SECTION
------------------------------------------------------------------------------
architecture IMP of bram_addr8_data128 is
  constant C_AWIDTH : integer := 8;
  constant C_DWIDTH : integer := 128;

  -- Inferred BRAM
  type ram_storage is array(0 to 2**C_AWIDTH-1) of std_logic_vector(C_DWIDTH-1 downto 0);
  shared variable RAM_DATA : ram_storage := (others => (others => '0'));

-------------------------------------------------------------------------------
-- BEGIN
-------------------------------------------------------------------------------
begin

  -----------------------------------------------------------------------------
  -- Port Process
  -----------------------------------------------------------------------------
  PORT_PROC : process (i_clk) is
  begin
    if ((i_clk'event) and (i_clk = '1')) then
      if (i_write_enable = '0') then
        -- Read from BRAM
        o_read_data <= RAM_DATA(conv_integer(i_address));
      else
        -- Output 0's
        o_read_data <= (others => '0');
        -- Write to BRAM
        RAM_DATA(conv_integer(i_address)) := i_write_data;
      end if;
    end if;
  end process PORT_PROC;
  
end IMP;

------------------------------------------------------------------------
-- Disclaimer: USC makes no representation, either expressed or implied,
-- as to the adequacy, accuracy, sufficiency or freedom from defect of
-- any kind, nor shall USC incur any responsibility or obligation
-- whatsoever by reason of such Data. All Data is provided on an “as-is”
-- basis. To the maximum extent permitted by law, in no event will USC be
-- responsible for any incidental damages, consequential damages,
-- exemplary damages of any kind, lost goodwill, lost profits, lost
-- business and/or any indirect economic damages whatsoever regardless of
-- whether such damages arise from claims based upon contract,
-- negligence, tort (including strict liability or other legal theory), a
-- breach of any warranty or term of any agreement, and regardless of
-- whether a party was advised or had reason to know of the possibility
-- of incurring such damages in advance.
--
-- Software Distribution Notice: Software downloaded through this website
-- is being provided for the sole use of the Integrity and Reliability of
-- Integrated Circuits Program. DARPA has stipulated that neither this
-- software nor any derivatives of this software may be redistributed to
-- any third party. This software must be returned unmodified to the IRIS
-- Release Server website upon DARPA notification or, in any event,
-- before the end of the IRIS Program.
------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

-- Block RAM Memory Model: 8-bit Address 20-bit Data
-- 5120 bit Memory

entity bram_addr8_data20 is
  port
    (
      reset_b        : in  std_logic;
      i_clk          : in  std_logic;
      i_write_data   : in  std_logic_vector(19 downto 0);
      i_write_enable : in  std_logic;
      i_address      : in  std_logic_vector(7 downto 0);
      o_read_data    : out std_logic_vector(19 downto 0)
    );
end entity bram_addr8_data20;

------------------------------------------------------------------------------
-- ARCHITECTURE SECTION
------------------------------------------------------------------------------
architecture IMP of bram_addr8_data20 is
  constant C_AWIDTH : integer := 8;
  constant C_DWIDTH : integer := 20;

  -- Inferred BRAM
  type ram_storage is array(0 to 2**C_AWIDTH-1) of std_logic_vector(C_DWIDTH-1 downto 0);
  shared variable RAM_DATA : ram_storage := (others => (others => '0'));

-------------------------------------------------------------------------------
-- BEGIN
-------------------------------------------------------------------------------
begin

  -----------------------------------------------------------------------------
  -- Port Process
  -----------------------------------------------------------------------------
  PORT_PROC : process (i_clk) is
  begin
    if ((i_clk'event) and (i_clk = '1')) then
      if (i_write_enable = '0') then
        -- Read from BRAM
        o_read_data <= RAM_DATA(conv_integer(i_address));
      else
        -- Output 0's
        o_read_data <= (others => '0');
        -- Write to BRAM
        RAM_DATA(conv_integer(i_address)) := i_write_data;
      end if;
    end if;
  end process PORT_PROC;
  
end IMP;

------------------------------------------------------------------------
-- Disclaimer: USC makes no representation, either expressed or implied,
-- as to the adequacy, accuracy, sufficiency or freedom from defect of
-- any kind, nor shall USC incur any responsibility or obligation
-- whatsoever by reason of such Data. All Data is provided on an “as-is”
-- basis. To the maximum extent permitted by law, in no event will USC be
-- responsible for any incidental damages, consequential damages,
-- exemplary damages of any kind, lost goodwill, lost profits, lost
-- business and/or any indirect economic damages whatsoever regardless of
-- whether such damages arise from claims based upon contract,
-- negligence, tort (including strict liability or other legal theory), a
-- breach of any warranty or term of any agreement, and regardless of
-- whether a party was advised or had reason to know of the possibility
-- of incurring such damages in advance.
--
-- Software Distribution Notice: Software downloaded through this website
-- is being provided for the sole use of the Integrity and Reliability of
-- Integrated Circuits Program. DARPA has stipulated that neither this
-- software nor any derivatives of this software may be redistributed to
-- any third party. This software must be returned unmodified to the IRIS
-- Release Server website upon DARPA notification or, in any event,
-- before the end of the IRIS Program.
------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

package axi4s_pkg is
  constant C_RESET_LEVEL  : std_logic := '0';
  constant C_SWITCH_WIDTH : natural   := 32;  
  constant C_TID_WIDTH    : natural   := 3;   
  constant C_TDEST_WIDTH  : natural   := 5;   
  constant C_TUSER_WIDTH  : natural   := 4;   

  constant BITS_PER_BYTE        : natural := 8;
  constant C_DATA_WIDTH_IN_BYTE : natural := C_SWITCH_WIDTH/BITS_PER_BYTE;

  constant C_PACKET_HEADER_LENGTH : natural := 3;   
  constant C_PACKET_FOOTER_LENGTH : natural := 1;   
  constant C_PACKET_OVERHEAD      : natural := C_PACKET_HEADER_LENGTH +
                                                C_PACKET_FOOTER_LENGTH;
  constant C_PACKET_LAST_DATA_WORD : natural := 1;  

  constant C_LL_PACKET_OVERHEAD : natural := 3;

  constant C_TRANSACTION_OVERHEAD   : natural := 3;  
  constant C_WB2AXI4S_PACKET_LENGTH : natural := C_PACKET_OVERHEAD +
                                                 C_TRANSACTION_OVERHEAD;
  constant C_WB_SINGLE_XFER : natural := 1;          

  constant C_AXI4S_ADDR_WIDTH : natural := 4;
  constant C_AXI4S_ADDR_HIGH  : natural := C_SWITCH_WIDTH;
  constant C_AXI4S_ADDR_LOW   : natural := C_AXI4S_ADDR_HIGH - C_AXI4S_ADDR_WIDTH;

  constant C_AXI4S_MEM_PORT_NUM    : std_logic_vector(3 downto 0)               := x"0";
  constant C_AXI4S_ARM_PORT_NUM    : std_logic_vector(3 downto 0)               := x"1";
  constant C_AXI4S_PERIPH_PORT_NUM : std_logic_vector(3 downto 0)               := x"2";
  constant C_AXI4S_CRYPTO_PORT_NUM : std_logic_vector(3 downto 0)               := x"3";
  constant C_AXI4S_NULL_PORT_NUM   : std_logic_vector(3 downto 0)               := x"4";  
  constant C_AXI4S_MEM_PORT        : std_logic_vector(C_TDEST_WIDTH-1 downto 0) := "10000";
  constant C_AXI4S_ARM_PORT        : std_logic_vector(C_TDEST_WIDTH-1 downto 0) := "01000";
  constant C_AXI4S_PERIPH_PORT     : std_logic_vector(C_TDEST_WIDTH-1 downto 0) := "00100";
  constant C_AXI4S_CRYPTO_PORT     : std_logic_vector(C_TDEST_WIDTH-1 downto 0) := "00010";
  constant C_AXI4S_NULL_PORT       : std_logic_vector(C_TDEST_WIDTH-1 downto 0) := "00001";  

  constant TIMER_BASE_ADDR  : std_logic_vector(31 downto 0) := C_AXI4S_PERIPH_PORT_NUM & x"0000000";
  constant INTCTR_BASE_ADDR : std_logic_vector(31 downto 0) := C_AXI4S_PERIPH_PORT_NUM & x"1000000";
  constant UART_BASE_ADDR   : std_logic_vector(31 downto 0) := C_AXI4S_PERIPH_PORT_NUM & x"2000000";

  constant C_AXI4S_PORT_PAD  : std_logic_vector(C_SWITCH_WIDTH-C_TDEST_WIDTH-1 downto 0) := (others => '0');
  type     AXI4S_PORTS_ARRAY_TYPE is array (0 to C_TDEST_WIDTH-1) of std_logic_vector(C_TDEST_WIDTH-1 downto 0);
  constant AXI4S_PORTS_ARRAY : AXI4S_PORTS_ARRAY_TYPE                                    := (C_AXI4S_MEM_PORT, C_AXI4S_ARM_PORT, C_AXI4S_PERIPH_PORT, C_AXI4S_CRYPTO_PORT, C_AXI4S_NULL_PORT);

  constant C_SUBSYSTEM_MEM_BASEADDR       : std_logic_vector(C_SWITCH_WIDTH-1 downto 0) := C_AXI4S_MEM_PORT_NUM & x"0000000";
  constant C_SUBSYSTEM_MEM_HIGHADDR       : std_logic_vector(C_SWITCH_WIDTH-1 downto 0) := C_AXI4S_MEM_PORT_NUM & x"FFFFFFF";
  constant C_SUBSYSTEM_ARM_BASEADDR       : std_logic_vector(C_SWITCH_WIDTH-1 downto 0) := C_AXI4S_ARM_PORT_NUM & x"0000000";
  constant C_SUBSYSTEM_ARM_HIGHADDR       : std_logic_vector(C_SWITCH_WIDTH-1 downto 0) := C_AXI4S_ARM_PORT_NUM & x"FFFFFFF";
  constant C_SUBSYSTEM_PERIPH_BASEADDR    : std_logic_vector(C_SWITCH_WIDTH-1 downto 0) := C_AXI4S_PERIPH_PORT_NUM & x"0000000";
  constant C_SUBSYSTEM_PERIPH_HIGHADDR    : std_logic_vector(C_SWITCH_WIDTH-1 downto 0) := C_AXI4S_PERIPH_PORT_NUM & x"FFFFFFF";
  constant C_SUBSYSTEM_CRYPTO_BASEADDR    : std_logic_vector(C_SWITCH_WIDTH-1 downto 0) := C_AXI4S_CRYPTO_PORT_NUM & x"0000000";
  constant C_SUBSYSTEM_CRYPTO_HIGHADDR    : std_logic_vector(C_SWITCH_WIDTH-1 downto 0) := C_AXI4S_CRYPTO_PORT_NUM & x"FFFFFFF";
  constant C_SUBSYSTEM_CRYPTO_DM_BASEADDR : std_logic_vector(C_SWITCH_WIDTH-1 downto 0) := C_AXI4S_CRYPTO_PORT_NUM & x"1000000";
  constant C_SUBSYSTEM_CRYPTO_DM_HIGHADDR : std_logic_vector(C_SWITCH_WIDTH-1 downto 0) := C_AXI4S_CRYPTO_PORT_NUM & x"1FFFFFF";
  constant C_SUBSYSTEM_CRYPTO_IO_BASEADDR : std_logic_vector(C_SWITCH_WIDTH-1 downto 0) := C_AXI4S_CRYPTO_PORT_NUM & x"2000000";
  constant C_SUBSYSTEM_CRYPTO_IO_HIGHADDR : std_logic_vector(C_SWITCH_WIDTH-1 downto 0) := C_AXI4S_CRYPTO_PORT_NUM & x"2FFFFFF";
  constant C_SUBSYSTEM_CRYPTO_LL_BASEADDR : std_logic_vector(C_SWITCH_WIDTH-1 downto 0) := C_AXI4S_CRYPTO_PORT_NUM & x"3000000";
  constant C_SUBSYSTEM_CRYPTO_LL_HIGHADDR : std_logic_vector(C_SWITCH_WIDTH-1 downto 0) := C_AXI4S_CRYPTO_PORT_NUM & x"3FFFFFF";
  constant C_SUBSYSTEM_CRYPTO_PF_BASEADDR : std_logic_vector(C_SWITCH_WIDTH-1 downto 0) := C_AXI4S_CRYPTO_PORT_NUM & x"4000000";
  constant C_SUBSYSTEM_CRYPTO_PF_HIGHADDR : std_logic_vector(C_SWITCH_WIDTH-1 downto 0) := C_AXI4S_CRYPTO_PORT_NUM & x"4FFFFFF";

  constant C_TRANS_WIDTH       : natural                                     := 4;
  constant C_TRANS_TYPE_RD_REQ : std_logic_vector                            := "0000";
  constant C_TRANS_TYPE_WR_REQ : std_logic_vector                            := "0001";
  constant C_TRANS_TYPE_RD_ACK : std_logic_vector                            := "0010";
  constant C_TRANS_TYPE_WR_ACK : std_logic_vector                            := "0011";
  constant C_TRANS_TYPE_PAD    : std_logic_vector                            := "0000";
  constant C_TRANS_HIGH        : natural                                     := C_SWITCH_WIDTH;
  constant C_TRANS_LOW         : natural                                     := C_SWITCH_WIDTH-C_TRANS_WIDTH;
  constant C_TRANS_ACK_LEN     : std_logic_vector(C_SWITCH_WIDTH-1 downto 0) := (others => '0');

  constant C_TRANS_ID_WIDTH : natural          := C_SWITCH_WIDTH - C_TRANS_WIDTH;
  constant C_NULL_TRANS_ID  : std_logic_vector := x"0000000";

  constant C_ARM_TRANS_PAD : std_logic_vector(C_TRANS_LOW-C_AXI4S_ADDR_WIDTH-1 downto 0) := (others => '0');
  constant C_ARM_TRANS_ID  : std_logic_vector(C_TRANS_LOW-1 downto 0)                    := C_AXI4S_ARM_PORT_NUM & C_ARM_TRANS_PAD;

  constant C_CRYPTO_SEL_WIDTH : integer          := 2;
  constant C_CRYPTO_SEL_JH    : std_logic_vector := "00";
  constant C_CRYPTO_SEL_BLAKE : std_logic_vector := "01";
  constant C_CRYPTO_SEL_SKEIN : std_logic_vector := "10";
  constant C_CRYPTO_SEL_NULL  : std_logic_vector := "11";

  constant C_IF_CTRL_LEN    : natural          := 2;
  constant C_IF_CTRL_CLEAR  : std_logic_vector := "00";  
  constant C_IF_CTRL_SEND   : std_logic_vector := "11";  
  constant C_IF_CTRL_HIGH   : natural          := C_SWITCH_WIDTH;
  constant C_IF_CTRL_LOW    : natural          := C_SWITCH_WIDTH-C_IF_CTRL_LEN;
  constant C_MEM_ADDR_WIDTH : natural          := 28;

  type axi4s_type is
  record
    tdata  : std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    tstrb  : std_logic_vector(C_DATA_WIDTH_IN_BYTE-1 downto 0);
    tkeep  : std_logic_vector(C_DATA_WIDTH_IN_BYTE-1 downto 0);
    tvalid : std_logic;                 
    tlast  : std_logic;                 
    tid    : std_logic_vector(C_TID_WIDTH-1 downto 0);
    tdest  : std_logic_vector(C_TDEST_WIDTH-1 downto 0);
    tuser  : std_logic_vector(C_TUSER_WIDTH-1 downto 0);
    tready : std_logic;                 
  end record;

  type ll_type is
  record
    data      : std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    data_be   : std_logic_vector(C_SWITCH_WIDTH/8-1 downto 0);
    src_rdy_n : std_logic;
    dst_rdy_n : std_logic;
    sof_n     : std_logic;
    eof_n     : std_logic;
  end record;

  type dsl_axi_type is
  record
    dst : std_logic_vector(C_TDEST_WIDTH-1 downto 0);
    src : std_logic_vector(C_TDEST_WIDTH-1 downto 0);
    len : std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
  end record;

  type axi4s_vector_type is array (natural range <>) of axi4s_type;

  type ll_vector_type is array (natural range <>) of ll_type;

  type dsl_vector_type is array (natural range <>) of dsl_axi_type;

  type natural_vector is array (natural range <>) of natural;

  type register_vector is array (natural range <>) of std_logic_vector(C_SWITCH_WIDTH-1 downto 0);

  subtype sel_type is natural;
  type    sel_array_type is array (natural range <>) of sel_type;

  type data_width_vector is array (natural range <>) of natural;

  type stream_pos_vector is array (natural range <>) of natural;

  function tx_dst_lookup (p : integer) return std_logic_vector;
  
end axi4s_pkg;


package body axi4s_pkg is

  function tx_dst_lookup (p : integer)
    return std_logic_vector is
    variable tmp : std_logic_vector(C_TDEST_WIDTH-1 downto 0) := (others => '0');
  begin
    if (p >= 0) and (p < C_TDEST_WIDTH) then
      tmp := AXI4S_PORTS_ARRAY(p);
    else
      tmp := (others => '0');
    end if;
    return tmp;
  end;
  
end axi4s_pkg;
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

use work.axi4s_pkg.all ;

package axi4s_switch_pkg is
CONSTANT I_RADIX     : natural :=  5 ;
CONSTANT O_RADIX     : natural :=  5 ;
CONSTANT IO_RADIX    : natural := I_RADIX*O_RADIX ;

  type io_array is array (natural range <>) of std_logic_vector(0 to O_RADIX-1) ;

  function cal_new_tag(current_tag : std_logic_vector ;
                       push_tag    : std_logic_vector ;
                       pop_tag     : std_logic_vector)
                       return std_logic_vector ;
 
  function cal_wait_queue(wait_queue_reg    : natural_vector ;
                          wait_queue_next   : natural_vector ;
                          current_tag       : std_logic_vector ;
                          push_tag          : std_logic_vector ;
                          pop_tag           : std_logic_vector)
                          return natural_vector ;
  
  function cal_dest_queue(dest_queue_reg    : io_array ;
                          dest_queue_next   : io_array ;
                          current_tag       : std_logic_vector ;
                          push_tag          : std_logic_vector ;
                          pop_tag           : std_logic_vector)
                          return io_array;


  function vector_and_or(vec0 : std_logic_vector; 
                         vec1 : std_logic_vector) 
                         return std_logic ;
  
  function cal_output_select (output_select  : natural_vector ;
                              output_release : std_logic_vector)
                              return natural_vector ;

  function output_select_gen(output_req : std_logic_vector ; 
                             src_port   : natural ) 
                             return natural_vector ;

  function natural_vector_or(nvec0 : natural_vector ; 
                             nvec1 : natural_vector ) 
                             return natural_vector ;

  function count_ones (vec : std_logic_vector) return natural ;

end package axi4s_switch_pkg;


package body axi4s_switch_pkg is
  function count_ones (vec : std_logic_vector) return natural is
    variable count : natural ;
  begin
    count := 0 ;
    for i in vec'range loop
      if vec(i) = '1' then
        count := count + 1 ; 
      else 
        exit ;
      end if ;
    end loop ;
    return count ;
  end function count_ones ;
  
  function cal_wait_queue(wait_queue_reg    : natural_vector ;
                          wait_queue_next   : natural_vector ;
                          current_tag       : std_logic_vector ;
                          push_tag          : std_logic_vector ;
                          pop_tag           : std_logic_vector)
                          return natural_vector is
    variable wait_queue    : natural_vector(wait_queue_reg'range) ;
    variable count_pop     : natural ;
    variable count_push    : natural ;
    variable count_current : natural ;
    variable count_temp    : natural ;
  begin
    count_current := 0 ;
    count_pop     := 0 ;
    count_push    := 0 ;
    count_temp    := 0 ;
    wait_queue    := (others => 0) ;

    count_current := count_ones(current_tag) ;
    count_pop     := count_ones(pop_tag) ;
    count_push    := count_ones(push_tag) ;

    if count_pop = count_current then
      wait_queue  := (others => 0) ;
      count_temp  := 0 ;
    else  
      for i in current_tag'range loop
        if current_tag(count_pop+i) = '1' then
          wait_queue(i) := wait_queue_reg(count_pop+i) ;
          count_temp    := count_temp + 1 ;
        else
          exit ;
        end if ;
      end loop ;
    end if ;
  
    for i in push_tag'range loop
      if push_tag(i) = '1' then
        wait_queue(count_temp+i) := wait_queue_next(i) ;
        if count_temp+i = push_tag'right then
          exit ;
        end if ;
      else
        exit ;
      end if ;
    end loop ;
    return wait_queue ;
  end function cal_wait_queue ;




  
  function cal_dest_queue(dest_queue_reg    : io_array ;
                          dest_queue_next   : io_array ;
                          current_tag       : std_logic_vector ;
                          push_tag          : std_logic_vector ;
                          pop_tag           : std_logic_vector)
                          return io_array is
    variable dest_queue    : io_array(dest_queue_reg'range) ;
    variable count_pop     : natural ;
    variable count_push    : natural ;
    variable count_current : natural ;
    variable count_temp    : natural ;
  begin
    count_current := 0 ;
    count_pop     := 0 ;
    count_push    := 0 ;
    count_temp    := 0 ;
    dest_queue    := (others => (others => '0')) ;

    count_current := count_ones(current_tag) ;
    count_pop     := count_ones(pop_tag) ;
    count_push    := count_ones(push_tag) ;

    if count_pop = count_current then
      dest_queue  := (others => (others =>'0')) ;
      count_temp  := 0 ;
    else  
      for i in current_tag'range loop
        if current_tag(count_pop+i) = '1' then
          dest_queue(i) := dest_queue_reg(count_pop+i) ;
          count_temp    := count_temp + 1 ;
        else
          exit ;
        end if ;
      end loop ;
    end if ;
  
    for i in push_tag'range loop
      if push_tag(i) = '1' then
        dest_queue(count_temp+i) := dest_queue_next(i) ;
        if count_temp+i = push_tag'right then
          exit ;
        end if ;
      else
        exit ;
      end if ;
    end loop ;
    return dest_queue ;
  end function cal_dest_queue ;

  function cal_new_tag(current_tag : std_logic_vector ;
                       push_tag    : std_logic_vector ;
                       pop_tag     : std_logic_vector )
                       return std_logic_vector is
    variable temp_tag   : std_logic_vector(current_tag'range) ;
    variable count_pop  : natural ;
    variable count_push : natural ;
    variable count_current : natural ;
    variable count_temp : natural ;
  begin
    count_current := 0 ;
    count_pop     := 0 ;
    count_push    := 0 ;
    count_temp    := 0 ;
    temp_tag      := (others => '0') ;

    count_current := count_ones(current_tag) ;
    count_pop     := count_ones(pop_tag) ;
    count_push    := count_ones(push_tag) ;

    if count_pop = count_current then
      temp_tag    := (others => '0') ;
      count_temp  := 0 ;
    else  
      for i in current_tag'range loop
        if current_tag(count_pop+i) = '1' then
          temp_tag(i)    := current_tag(count_pop+i) ;
          count_temp     := count_temp + 1 ;
        else
          exit ;
        end if ;
      end loop ;
    end if ;

  
    for i in push_tag'range loop
      if push_tag(i) = '1' then
        temp_tag(count_temp+i) := push_tag(i) ;
        if count_temp+i = push_tag'right then
          exit ;
        end if ;
      else
        exit ;
      end if ;
    end loop ;

    return temp_tag ;
  end function cal_new_tag ;


  function vector_and_or (vec0 : std_logic_vector ;
                          vec1 : std_logic_vector )
                          return std_logic is
    variable vec2 : std_logic_vector (vec0'range) ;
    variable temp : std_logic ;
  begin
    vec2          := vec0 and vec1 ;
    temp          := '0' ;  
    for i in vec0'range loop
      temp        := temp or vec2(i) ;
    end loop ;
    return temp ;
  end function vector_and_or ;

  function output_select_gen (output_req : std_logic_vector ; 
                              src_port   : natural) 
                              return natural_vector is
    variable output_select_v : natural_vector(output_req'range) := (others => 0) ;
  begin
    for i in output_req'range loop
      if output_req(i) = '1' then
        output_select_v(i) := src_port ;
      end if ;
    end loop ;
    return output_select_v ;
  end function output_select_gen ;

  function cal_output_select (output_select  : natural_vector ;
                              output_release : std_logic_vector)
                              return natural_vector is
    variable temp : natural_vector (output_select'range) ;
  begin
    temp := output_select ;
    for i in output_select'range loop
      if output_release(i) = '1' then
        temp(i) := 0 ;
      end if ;
    end loop ;
    return temp ;
  end function cal_output_select ;

  function natural_vector_or (nvec0 : natural_vector ;
                              nvec1 : natural_vector )
                              return natural_vector is
    variable nvec2 : natural_vector(nvec0'range) ;
  begin
    nvec2 := (others => 0) ; 
    for i in nvec0'range loop
      if nvec0(i) = 0 then
        nvec2(i) := nvec1(i) ;
      else
        nvec2(i) := nvec0(i) ;  
      end if ;
    end loop ;
    return nvec2 ;
  end function natural_vector_or ;

end package body axi4s_switch_pkg ;

library ieee;
use ieee.std_logic_1164.all;

package sha3_pkg is		
	constant SHA3_ROUND1	:integer:= 1;
	constant SHA3_ROUND2	:integer:= 2;
	constant SHA3_ROUND3	:integer:= 3;
	
	constant HASH_SIZE_224	:integer:=224;
	constant HASH_SIZE_256	:integer:=256;
	constant HASH_SIZE_384	:integer:=384;
	constant HASH_SIZE_512	:integer:=512;

	constant SCCA_BASED : integer := 0;			
	constant SCCA_TREE_BASED : integer := 1;
	constant CSA_BASED : integer := 2;
	constant PC_BASED : integer := 3;
	constant CSA_CPA_BASED : integer := 4;
	constant CLA_BASED : integer := 5;
	constant FCCA_BASED : integer := 6;
	constant FCCA_TREE_BASED : integer := 7;
	constant DSP_BASED : integer := 8;	
	
	constant YES : integer := 1;
	constant NO : integer := 0;
	
	
	constant SPARTAN3 : integer := 0;
	constant VIRTEX4 : integer := 1;
	constant VIRTEX5 : integer := 2;

	constant ZERO_WAIT_STATE			: integer:=0;
	constant ONE_WAIT_STATE				: integer:=1;  
	constant ZERO_WAIT_STATE_PREFETCH		: integer:=2; 

	constant DISTRIBUTED				: integer:=0; 
	constant BRAM					: integer:=1; 
	constant COMBINATIONAL				: integer:=2; 

	constant COUNTER_STYLE_1				: integer:=1; 
	constant COUNTER_STYLE_2				: integer:=2; 
	constant COUNTER_STYLE_3				: integer:=3; 
	
	constant GND					: std_logic := '0';
	constant VCC					: std_logic := '1';
	
	constant AES_SBOX_SIZE				:integer:=8;
	constant AES_WORD_SIZE				:integer:=32;
	constant AES_BLOCK_SIZE				:integer:=128;
	constant AES_KEY_SIZE				:integer:=128;
	constant AES_ROUND_BASIC			:integer:=1;
	constant AES_ROUND_TBOX				:integer:=2;
	
	type rom_pad64bit_type is array (0 to 7) of std_logic_vector(7 downto 0);
	constant lookup_sel_lvl2_64bit_pad : rom_pad64bit_type := (
		"10000000", "01000000", "00100000", "00010000", 
		"00001000", "00000100", "00000010", "00000001");	
	
	constant lookup_sel_lvl1_64bit_pad : rom_pad64bit_type := (
		"00000000", "10000000",	"11000000",	"11100000",
		"11110000",	"11111000",	"11111100",	"11111110");	
	
	type rom_pad32bit_type is array (0 to 3) of std_logic_vector(3 downto 0); 
	constant lookup_sel_lvl2_32bit_pad : rom_pad32bit_type := ("1000", "0100", "0010", "0001");	
	
	constant lookup_sel_lvl1_32bit_pad : rom_pad32bit_type := ("0000", "1000",	"1100",	"1110");	
	
	
	function shrx ( x : std_logic_vector; y : integer) return std_logic_vector;	
	function shlx ( x : std_logic_vector; y : integer) return std_logic_vector;	
	function rorx ( x : std_logic_vector; y : integer) return std_logic_vector;	
	function rolx ( x : std_logic_vector; y : integer) return std_logic_vector;
	
	function log2 (N: natural) return natural;
	
	function switch_endian_byte (  x : std_logic_vector; width : integer; w : integer ) return std_logic_vector;
	function switch_endian_word (  x : std_logic_vector; width : integer; w : integer ) return std_logic_vector; 

	function GF_SQ_SCL_2 ( x : in  STD_LOGIC_VECTOR (1 downto 0)) return STD_LOGIC_VECTOR;
	function GF_SCL_2 ( x : in  STD_LOGIC_VECTOR (1 downto 0)) return STD_LOGIC_VECTOR;
	function GF_MUL_2 ( x,y : in  STD_LOGIC_VECTOR (1 downto 0)) return STD_LOGIC_VECTOR;
	function GF_MUL_SCL_2 ( x,y : in  STD_LOGIC_VECTOR (1 downto 0))return STD_LOGIC_VECTOR;   
	function GF_INV_2 ( x : in  STD_LOGIC_VECTOR (1 downto 0)) return STD_LOGIC_VECTOR;
	function GF_SQ_2 ( x : in  STD_LOGIC_VECTOR (1 downto 0)) return STD_LOGIC_VECTOR;
	function MUL_X ( x : in  STD_LOGIC_VECTOR (7 downto 0)) return STD_LOGIC_VECTOR;
	function MUL_MX ( x : in  STD_LOGIC_VECTOR (7 downto 0)) return STD_LOGIC_VECTOR; 
	function GF_INV_4 ( x : in  STD_LOGIC_VECTOR (3 downto 0))return STD_LOGIC_VECTOR;
	function GF_MUL_4 ( x, y : in  STD_LOGIC_VECTOR (3 downto 0))return STD_LOGIC_VECTOR;  
	function GF_SQ_SCL_4 ( x : in  STD_LOGIC_VECTOR (3 downto 0))return STD_LOGIC_VECTOR;  
	function GF_INV_8 ( x : in  STD_LOGIC_VECTOR (7 downto 0))return STD_LOGIC_VECTOR; 
   
   
	component csa is 
		generic (n :integer := 32);
		port (
			a		: in std_logic_vector(n-1 downto 0);
			b		: in std_logic_vector(n-1 downto 0);
			cin		: in std_logic_vector(n-1 downto 0);
			s		: out std_logic_vector(n-1 downto 0);
			cout	: out std_logic_vector(n-1 downto 0));
	end component;	   

	component fcca is 
		generic (n :integer := 32);
		port (
			a		: in std_logic_vector(n-1 downto 0);
			b		: in std_logic_vector(n-1 downto 0);
			s		: out std_logic_vector(n-1 downto 0));
	end component;		
	
	component pc is 
	generic (n :integer :=32);
	port (
		a		: in std_logic_vector(n-1 downto 0);
		b		: in std_logic_vector(n-1 downto 0);
		c		: in std_logic_vector(n-1 downto 0);
		d		: in std_logic_vector(n-1 downto 0);
		e		: in std_logic_vector(n-1 downto 0);
		s0		: out std_logic_vector(n-1 downto 0);
		s1		: out std_logic_vector(n-1 downto 0);
		s2		: out std_logic_vector(n-1 downto 0)
	);
	end component;

	component regn is
		generic ( 
			N : integer := 32;
			init : std_logic_vector
		);
		port ( 	  
		    clk : in std_logic;	 
			rst : in std_logic;
		    en : in std_logic; 
			input  : in std_logic_vector(N-1 downto 0);
	        output : out std_logic_vector(N-1 downto 0)
		);
	end component;


	component d_ff is 
	port(
		clk		: in std_logic;
		ena		: in std_logic;
		rst		: in std_logic;
		d		: in std_logic;
		q		: out std_logic);
	end component;

	component piso is
		generic ( 
			N	: integer := 512;	
			M	: integer := 32		
		);
		port (
			clk 	 : in std_logic;
			en   : in std_logic;
			sel	 : in std_logic;
			input  : in std_logic_vector(N-1 downto 0);
			output : out std_logic_vector(M-1 downto 0)
		);
	end component;
	
	component sipo is
		generic ( 
			N	: integer := 512;
			M	: integer := 32		
		);
		port (
			clk 	 : in std_logic;				 
			en     : in std_logic;
			input  : in std_logic_vector(M-1 downto 0);
			output : out std_logic_vector(N-1 downto 0)
		);
	end component;
	
	component countern is
		generic ( 
		    N : integer := 2;
		    step:integer:=1;
		    style	:integer :=COUNTER_STYLE_1	
		);
		port ( 	  
		clk : in std_logic;
		rst : in std_logic;
	    load : in std_logic;
	    en : in std_logic; 
		input  : in std_logic_vector(N-1 downto 0);
        output : out std_logic_vector(N-1 downto 0)
		);
	end component; 

	component decountern is
		generic ( 
		n : integer := 64;	  
			sub : integer := 1
		);
		port ( 	  
			clk : in std_logic;
			rst		: in std_logic;
		    load : in std_logic;
		    en : in std_logic; 
			input  : in std_logic_vector(n-1 downto 0);
	        output : out std_logic_vector(n-1 downto 0)
		);
	end component;
	
	component counter_ud is
	generic ( 
		N 	: integer := 2;
		step	: integer  := 1;
		sub : integer := 1	
	);
	port ( 	  
		clk : in std_logic;
		rst : in std_logic;
	    load : in std_logic;
	    en : in std_logic; 
		 updown: in std_logic;
		input  : in std_logic_vector(N-1 downto 0);
        output : out std_logic_vector(N-1 downto 0)
	);
end component;

	component sr_reg is		
		generic ( init : std_logic := '0' );
		port (					
			rst			: in std_logic;
			clk 		: in std_logic;
			set     	: in std_logic;
			clr         : in std_logic;
			output		: out std_logic
		);				 
	end component;		 

	component sync_clock is
		generic (
		fr : integer := 1
		);
		port (						 
			rst		   	: in std_logic;
			fast_clock 	: in std_logic;
			slow_clock 	: in std_logic;
			sync		: out std_logic
		);
	end component;
	
	component fifo_ram is
		generic ( 	
			fifo_mode	: integer := ZERO_WAIT_STATE;	
			depth 		: integer := 512;
			log2depth  	: integer := 9;
			n 		: integer := 64 );	
		port ( 	
			clk 		: in  std_logic;
			write 		: in  std_logic;
			rd_addr 	: in  std_logic_vector (log2depth-1 downto 0);
			wr_addr 	: in  std_logic_vector (log2depth-1 downto 0);
			din 		: in  std_logic_vector (n-1 downto 0);
			dout 		: out std_logic_vector (n-1 downto 0));
	end component;
	
	component fifo
		generic (
			fifo_mode	: integer := ONE_WAIT_STATE;	
			depth 		: integer := 64;
			log2depth 	: integer := 6;
			N 		: integer := 32);
		port (
			clk				: in std_logic;
			rst				: in std_logic;
			write			: in std_logic; 
			read			: in std_logic;
			din 			: in std_logic_vector(n-1 downto 0);
			dout	 		: out std_logic_vector(n-1 downto 0);
			full			: in std_logic; 
			empty 			: out std_logic);
	end component; 

	component aes_sbox_sync is
	port( 
			clk		: in std_logic;
			input 		: in std_logic_vector(AES_SBOX_SIZE-1 downto 0);
	        	output 		: out std_logic_vector(AES_SBOX_SIZE-1 downto 0));
	end component;
	
	component aes_sbox is
	generic (rom_style :integer:=DISTRIBUTED);	
	port( 
		
			input 		: in std_logic_vector(AES_SBOX_SIZE-1 downto 0);
	        output 		: out std_logic_vector(AES_SBOX_SIZE-1 downto 0));
	end component;
	
	component aes_mul is
	generic (cons :integer := 3);
	port( 
		input 		: in std_logic_vector(AES_SBOX_SIZE-1 downto 0);
	        output 		: out std_logic_vector(AES_SBOX_SIZE-1 downto 0));
	end component;
	
	component aes_mixcolumn is
	port( 
		input 		: in std_logic_vector(AES_WORD_SIZE-1 downto 0);
	     output 		: out std_logic_vector(AES_WORD_SIZE-1 downto 0));
	end component;
	
	
	component aes_shiftrow is
	generic (n	:integer := AES_BLOCK_SIZE;	s 	:integer := AES_SBOX_SIZE);
	port( 
		input 		: in std_logic_vector(n-1 downto 0);
	    output 		: out std_logic_vector(n-1 downto 0));
	end component;
	
	component aes_tbox0 is
	port (
		address 	: in std_logic_vector(AES_SBOX_SIZE-1 downto 0);
		dout 		: out std_logic_vector(AES_WORD_SIZE-1 downto 0));
	end component; 
	
	component aes_tbox1 is
	port (
		address 	: in std_logic_vector(AES_SBOX_SIZE-1 downto 0);
		dout 		: out std_logic_vector(AES_WORD_SIZE-1 downto 0));
	end component; 
	
	component aes_tbox2 is
	port (
		address 	: in std_logic_vector(AES_SBOX_SIZE-1 downto 0);
		dout 		: out std_logic_vector(AES_WORD_SIZE-1 downto 0));
	end component; 

	component aes_tbox3 is
	port (
		address 	: in std_logic_vector(AES_SBOX_SIZE-1 downto 0);
		dout 		: out std_logic_vector(AES_WORD_SIZE-1 downto 0));
	end component; 
	
	component aes_tbox0_sync is
	port (
		clk 		: in std_logic;
		address 	: in std_logic_vector(AES_SBOX_SIZE-1 downto 0);
		dout 		: out std_logic_vector(AES_WORD_SIZE-1 downto 0));

	end component;

	component aes_tbox1_sync is
	port (
		clk 		: in std_logic;
		address 	: in std_logic_vector(AES_SBOX_SIZE-1 downto 0);
		dout 		: out std_logic_vector(AES_WORD_SIZE-1 downto 0));

	end component;
	
		component aes_tbox2_sync is
	port (
		clk 		: in std_logic;
		address 	: in std_logic_vector(AES_SBOX_SIZE-1 downto 0);
		dout 		: out std_logic_vector(AES_WORD_SIZE-1 downto 0));

	end component;
	
	component aes_tbox3_sync is
	port (
		clk 		: in std_logic;
		address 	: in std_logic_vector(AES_SBOX_SIZE-1 downto 0);
		dout 		: out std_logic_vector(AES_WORD_SIZE-1 downto 0));

	end component;
	
	component aes_round is
	generic (rom_style :integer:=DISTRIBUTED);
	port( 
		input 		: in std_logic_vector(AES_BLOCK_SIZE-1 downto 0);
		key			: in std_logic_vector(AES_BLOCK_SIZE-1 downto 0);
        output 		: out std_logic_vector(AES_BLOCK_SIZE-1 downto 0));
	end component;
	
	component aes_round_sync is
	generic (rom_style :integer:=DISTRIBUTED);
	port( 
		clk			: in std_logic;
		input 		: in std_logic_vector(AES_BLOCK_SIZE-1 downto 0);
		key			: in std_logic_vector(AES_BLOCK_SIZE-1 downto 0);
        output 		: out std_logic_vector(AES_BLOCK_SIZE-1 downto 0));
	end component;
	
	component sha3_fsm3 is					
		generic ( w : integer := 64; h : integer := 256 );
		port (	   
			clk  : in std_logic;
			rst		: in std_logic;
		
			eo : out std_logic;
			
			output_write : in std_logic;	
			output_write_clr : out std_logic;	
			output_busy_clr  : out std_logic;	
			
			dst_ready : in std_logic;
			dst_write : out std_logic
		);
	end component;

	component aes_sbox_logic is
	    Port ( S_IN : in  STD_LOGIC_VECTOR (7 downto 0);
	           S_OUT : out  STD_LOGIC_VECTOR (7 downto 0));
	end component;

	component shfreg is
	generic ( 
		width : integer := 32; 
		depth : integer := 16 );
	port (
		clk : in std_logic;
		en : in std_logic;
		i : in std_logic_vector(width-1 downto 0);
		o : out std_logic_vector(width-1 downto 0) );
	end component;
	
	component adder is 
	generic (
		adder_type : integer:= SCCA_BASED;
		n : integer := 64);
	port(
		a : in std_logic_vector(n-1 downto 0);
		b : in std_logic_vector(n-1 downto 0);
		s : out std_logic_vector(n-1 downto 0)
	);		
	end component;	
	
		component adder2 is 
	generic (
		n : integer := 64);
	port(
		a : in std_logic_vector(n-1 downto 0);
		b : in std_logic_vector(n-1 downto 0);
		s : out std_logic_vector(n-1 downto 0)
	);		
	end component;
	
	component regna is
		generic (  
			RST_ACTIVE_VALUE : std_logic := '0';
			N : integer := 32;
			INIT : std_logic_vector
		);
		port ( 	  
		    clk 	: in std_logic;
			rst 	: in std_logic;
		    en 		: in std_logic; 
			input  	: in std_logic_vector(N-1 downto 0);
	        output 	: out std_logic_vector(N-1 downto 0)
		);
	end component;	   
	
	component sr_rega is
		generic (	 
			RST_ACTIVE_VALUE : std_logic := '0';
		  	INIT : std_logic := '0'
		);
		port (					
			rst			: in std_logic;
			clk 		: in std_logic;
			set     	: in std_logic;
			clr         : in std_logic;
			output		: out std_logic
		);				 
	end component;		
	
	component counterna is
		generic ( 	   
			RST_ACTIVE_VALUE : std_logic := '0';
			N 	: integer := 2	
		);
		port ( 	  
			clk : in std_logic;
			rst : in std_logic;
		    load : in std_logic;
		    en : in std_logic; 
	        output : out std_logic_vector(N-1 downto 0)
		);
	end component;		
end sha3_pkg;

package body sha3_pkg is
	function shrx ( x : std_logic_vector; y : integer) return std_logic_vector is
		variable zeros	: std_logic_vector(y-1 downto 0) := (others => '0'); 
	begin						 							
		return (zeros & x(x'high downto y));
	end shrx;	   
	
	function shlx ( x : std_logic_vector; y : integer) return std_logic_vector is
		variable zeros	: std_logic_vector(y-1 downto 0) := (others => '0');
	begin		
		return (x(x'high-y downto x'low) & zeros);
	end shlx;																						 
	
	function rorx ( x : std_logic_vector; y : integer) return std_logic_vector is
	begin						 							
		return (x(y-1 downto x'low) & x(x'high downto y));
	end rorx;	   
	
	function rolx ( x : std_logic_vector; y : integer) return std_logic_vector is
	begin						 							
		return (x(x'high-y downto x'low) & x(x'high downto x'high-y+1));
	end rolx;	   
	
	function log2 (N: natural) return natural is 
	begin	
		
		 if ( N = 0 ) then 
			 return 0;
		 elsif N <= 2 then
			 return 1;
		 else					 
			if (N mod 2 = 0) then
				return 1 + log2(N/2);
			else
				return 1 + log2((N+1)/2);
			end if;			
		 end if;	
	end;

	function switch_endian_byte (  x : std_logic_vector; width : integer; w : integer ) return std_logic_vector is
		variable xseg : integer := width/w;
		variable wseg : integer := w/8;			   
		variable retval : std_logic_vector(width-1 downto 0);
	begin				  
		for i in xseg downto 1 loop
			for j in 0 to wseg-1 loop
				retval(i*w - 1 - j*8 downto i*w - 8 - j*8 ) := x(i*w - 1 - (wseg-1-j)*8 downto i*w - 8 - (wseg-1-j)*8);
			end loop;
		end loop;
		return(retval);				
	end switch_endian_byte;		  
	
	function switch_endian_word ( x : std_logic_vector; width : integer; w : integer ) return std_logic_vector is
		variable xseg : integer := width/w;   
		variable retval : std_logic_vector(width-1 downto 0);
	begin				  
		for i in xseg downto 1 loop			
			retval(i*w - 1 downto w*(i-1) ) := x(w*(xseg-i+1) - 1 downto w*(xseg-i));			
		end loop;
		return(retval);				
	end switch_endian_word;	
	
	function GF_SQ_SCL_2 ( x : in  STD_LOGIC_VECTOR (1 downto 0)) return STD_LOGIC_VECTOR is 
		variable y : STD_LOGIC_VECTOR (1 downto 0);
	begin
		y := x(1) & (x(1) xor x(0));	
		return y;
	end GF_SQ_SCL_2;
	
	
	function GF_SCL_2 ( x : in  STD_LOGIC_VECTOR (1 downto 0)) return STD_LOGIC_VECTOR is 	
		variable y : STD_LOGIC_VECTOR (1 downto 0);	
	begin
		y := x(0) & (x(1) xor x(0));	
		return y;
	end GF_SCL_2;


	function GF_MUL_2 ( x,y : in  STD_LOGIC_VECTOR (1 downto 0)) return STD_LOGIC_VECTOR is 
		variable o : STD_LOGIC_VECTOR (1 downto 0);	
	begin			
		o := (((x(1) xor x(0)) and (y(1) xor y(0))) xor (x(1) and y(1))) & (((x(1) xor x(0)) and (y(1) xor y(0))) xor (x(0) and y(0)));		
		return o;
	end GF_MUL_2; 
	
	
	function GF_MUL_SCL_2 ( x,y : in  STD_LOGIC_VECTOR (1 downto 0)) return STD_LOGIC_VECTOR is 	
		variable o : STD_LOGIC_VECTOR (1 downto 0);	
	begin		
		o := (((x(1) xor x(0)) and (y(1) xor y(0))) xor (x(0) and y(0))) & ((x(1) and y(1)) xor (x(0) and y(0)));		
		return o;
	end GF_MUL_SCL_2;		 

	
	function GF_INV_2 ( x : in  STD_LOGIC_VECTOR (1 downto 0)) return STD_LOGIC_VECTOR is 
		variable y : STD_LOGIC_VECTOR (1 downto 0);
	begin
		y(1) := x(0);
	  	y(0) := x(1);
		return y;
	end GF_INV_2;
	
	
	function GF_SQ_2 ( x : in  STD_LOGIC_VECTOR (1 downto 0)) return STD_LOGIC_VECTOR is 
		variable y : STD_LOGIC_VECTOR (1 downto 0);
	begin
	  	y(1) := x(0);
	  	y(0) := x(1);
		return y;
	end GF_SQ_2; 
	
	function MUL_X ( x : in  STD_LOGIC_VECTOR (7 downto 0)) return STD_LOGIC_VECTOR is 
		variable y : STD_LOGIC_VECTOR (7 downto 0);
	begin
		y(7) := x(7) xor x(6) xor x(5) xor x(2) xor x(1) xor x(0);
		y(6) := x(6) xor x(5) xor x(4) xor x(0);
		y(5) := x(6) xor x(5) xor x(1) xor x(0);	
		y(4) := x(7) xor x(6) xor x(5) xor x(0);
		y(3) := x(7) xor x(4) xor x(3) xor x(1) xor x(0);
		y(2) := x(0);
		y(1) := x(6) xor x(5) xor x(0);
		y(0) := x(6) xor x(3) xor x(2) xor x(1) xor x(0);
		return y;
	end MUL_X;	  

	function MUL_MX ( x : in  STD_LOGIC_VECTOR (7 downto 0)) return STD_LOGIC_VECTOR is 
		variable y : STD_LOGIC_VECTOR (7 downto 0);
	begin
		y(7) := x(5) xor x(3);	
		y(6) := x(7) xor x(3);
		y(5) := x(6) xor x(0);
		y(4) := x(7) xor x(5) xor x(3);
		y(3) := x(7) xor x(6) xor x(5) xor x(4) xor x(3);
		y(2) := x(6) xor x(5) xor x(3) xor x(2) xor x(0);
		y(1) := x(5) xor x(4) xor x(1);
		y(0) := x(6) xor x(4) xor x(1);
	return y;
	end MUL_MX;	   


	
	function GF_INV_4 ( x : in  STD_LOGIC_VECTOR (3 downto 0)) return STD_LOGIC_VECTOR is 
		variable y : STD_LOGIC_VECTOR (3 downto 0);
		variable r0, r1, SQ_IN, SQ_OUT, MUL_1_OUT, GF_INV_IN, GF_INV_OUT, MUL_2_OUT , MUL_3_OUT :STD_LOGIC_VECTOR (1 downto 0);
	begin
		r1 := x(3 downto 2);
		r0 := x(1 downto 0);
		SQ_IN := r1 xor r0;
		SQ_OUT := GF_SQ_SCL_2 ( x => SQ_IN);
		MUL_1_OUT := GF_MUL_2( x => r1, y => r0);
		GF_INV_IN := MUL_1_OUT xor SQ_OUT;
		GF_INV_OUT := GF_INV_2(x => GF_INV_IN);
		MUL_2_OUT := GF_MUL_2 ( x => r1, y => GF_INV_OUT);
		MUL_3_OUT := GF_MUL_2 ( x => GF_INV_OUT, y => r0);
		y := MUL_3_OUT & MUL_2_OUT;
		return y;
	end GF_INV_4;
	

	function GF_MUL_4 ( x,y : in  STD_LOGIC_VECTOR (3 downto 0)) return STD_LOGIC_VECTOR is 
		variable o : STD_LOGIC_VECTOR (3 downto 0);
		variable tao1, tao0, delta1, delta0, fi1, fi0, tmp1, tmp0, RES_MUL1, RES_MUL0,RES_MUL_SCL: std_logic_vector (1 downto 0);
	begin
		tao1 := x(3 downto 2);
		tao0 := x(1 downto 0);
		delta1 := y(3 downto 2);
		delta0 := y(1 downto 0);
		tmp1 := tao1 xor tao0;
		tmp0 := delta1 xor delta0;
		RES_MUL1 := GF_MUL_2 ( x=> tao1, y=> delta1);
		RES_MUL0 := GF_MUL_2 ( x=> tao0, y=> delta0);
		RES_MUL_SCL := GF_MUL_SCL_2( x=> tmp1, y=> tmp0);
		fi1 := RES_MUL1 xor RES_MUL_SCL;
		fi0 := RES_MUL0 xor RES_MUL_SCL;
		o := fi1 & fi0;
		return o;
	end GF_MUL_4;	

	function GF_SQ_SCL_4 ( x : in  STD_LOGIC_VECTOR (3 downto 0)) return STD_LOGIC_VECTOR is 
		variable y : STD_LOGIC_VECTOR (3 downto 0);
		variable tao1, tao0, delta1, delta0, tmp1, tmp0: std_logic_vector (1 downto 0);
	begin
		tao1 := x(3 downto 2);
		tao0 := x(1 downto 0);
		tmp1 := tao1 xor tao0;
		tmp0 := GF_SCL_2 ( x => tao0);
		delta1 := GF_SQ_2( x=> tmp1);
		delta0 := GF_SQ_2 ( x=> tmp0);
		y := delta1 & delta0;
		return y;
	end GF_SQ_SCL_4;  
	

	function GF_INV_8 ( x : in  STD_LOGIC_VECTOR (7 downto 0)) return STD_LOGIC_VECTOR is 
		variable y : STD_LOGIC_VECTOR (7 downto 0);
		variable r0, r1, SQ_IN, SQ_OUT, MUL_1_OUT, GF_INV_IN, GF_INV_OUT, MUL_2_OUT , MUL_3_OUT :STD_LOGIC_VECTOR (3 downto 0);
	begin
		r1 := x(7 downto 4);
		r0 := x(3 downto 0);
		SQ_IN := r1 xor r0;
		SQ_OUT := GF_SQ_SCL_4 ( x => SQ_IN);
		MUL_1_OUT := GF_MUL_4 ( x => r1, y => r0);	
		GF_INV_IN := MUL_1_OUT xor SQ_OUT;	
		GF_INV_OUT := GF_INV_4 (x => GF_INV_IN);
		MUL_2_OUT := GF_MUL_4 ( x => r1, y => GF_INV_OUT);	
		MUL_3_OUT := GF_MUL_4 ( x => GF_INV_OUT, y => r0);	
		y := MUL_3_OUT  & MUL_2_OUT;
		return y;
	end GF_INV_8;
	
end package body sha3_pkg;library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

package perf_mon_pkg is
  constant C_CMD_GET_ALL_PERF : integer := 0;  
  constant C_CMD_GET_MON_PERF : integer := 1;  
  constant C_CMD_WRD_ALL_PERF : integer := 2;  
  constant C_CMD_WRD_MON_PERF : integer := 3;  
  constant C_CMD_RST_ALL_PERF : integer := 4;  
  constant C_CMD_RST_MON_PERF : integer := 5;  
  constant C_CMD_ENA_ALL_PERF : integer := 6;  
  constant C_CMD_ENA_MON_PERF : integer := 7;  
  constant C_CMD_DIS_ALL_PERF : integer := 8;  
  constant C_CMD_DIS_MON_PERF : integer := 9;  
  
  constant C_CMD_GET_PERF     : integer := 0;
  constant C_CMD_RST_PERF     : integer := 1;
  constant C_CMD_ENA_PERF     : integer := 2;
  constant C_CMD_DIS_PERF     : integer := 3;
 
  constant C_CMD_WIDTH      : integer := 8;  
  constant C_MON_WIDTH      : integer := 4;  

  constant C_TIMER_DWIDTH         : integer := 64;

end perf_mon_pkg;

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;


package zpu_pkg is


  constant wordPower       : integer                      := 5;
  constant DontCareValue   : std_logic                    := '0';
  constant ZPU_Frequency   : std_logic_vector(7 downto 0) := x"64";
  constant maxAddrBitIncIO : integer                      := 31;  



  constant spStart : std_logic_vector(maxAddrBitIncIO downto 0) := x"0000fff0";

  constant byteBits   : integer := wordPower-3;  
  constant maxAddrBit : integer := maxAddrBitIncIO-1;
  constant ioBit      : integer := maxAddrBit+1;
  constant wordSize   : integer := 2**wordPower;
  constant wordBytes  : integer := wordSize/8;
  constant minAddrBit : integer := byteBits;
  constant stack_bits : integer := 5;
  constant stack_size : integer := 2**stack_bits;


  constant OpCode_Im               : std_logic_vector(7 downto 7) := "1";
  constant OpCode_StoreSP          : std_logic_vector(7 downto 5) := "010";
  constant OpCode_LoadSP           : std_logic_vector(7 downto 5) := "011";
  constant OpCode_Emulate          : std_logic_vector(7 downto 5) := "001";
  constant OpCode_AddSP            : std_logic_vector(7 downto 4) := "0001";
  constant OpCode_Short            : std_logic_vector(7 downto 4) := "0000";
  constant OpCode_Break            : std_logic_vector(3 downto 0) := "0000";
  constant OpCode_NA4              : std_logic_vector(3 downto 0) := "0001";
  constant OpCode_PushSP           : std_logic_vector(3 downto 0) := "0010";
  constant OpCode_NA3              : std_logic_vector(3 downto 0) := "0011";
  constant OpCode_PopPC            : std_logic_vector(3 downto 0) := "0100";
  constant OpCode_Add              : std_logic_vector(3 downto 0) := "0101";
  constant OpCode_And              : std_logic_vector(3 downto 0) := "0110";
  constant OpCode_Or               : std_logic_vector(3 downto 0) := "0111";
  constant OpCode_Load             : std_logic_vector(3 downto 0) := "1000";
  constant OpCode_Not              : std_logic_vector(3 downto 0) := "1001";
  constant OpCode_Flip             : std_logic_vector(3 downto 0) := "1010";
  constant OpCode_Nop              : std_logic_vector(3 downto 0) := "1011";
  constant OpCode_Store            : std_logic_vector(3 downto 0) := "1100";
  constant OpCode_PopSP            : std_logic_vector(3 downto 0) := "1101";
  constant OpCode_NA2              : std_logic_vector(3 downto 0) := "1110";
  constant OpCode_NA               : std_logic_vector(3 downto 0) := "1111";
  constant OpCode_Lessthan         : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(36, 6));
  constant OpCode_Lessthanorequal  : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(37, 6));
  constant OpCode_Ulessthan        : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(38, 6));
  constant OpCode_Ulessthanorequal : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(39, 6));
  constant OpCode_Swap             : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(40, 6));
  constant OpCode_Mult             : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(41, 6));
  constant OpCode_Lshiftright      : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(42, 6));
  constant OpCode_Ashiftleft       : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(43, 6));
  constant OpCode_Ashiftright      : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(44, 6));
  constant OpCode_Call             : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(45, 6));
  constant OpCode_Eq               : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(46, 6));
  constant OpCode_Neq              : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(47, 6));
  constant OpCode_Sub              : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(49, 6));
  constant OpCode_Loadb            : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(51, 6));
  constant OpCode_Storeb           : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(52, 6));
  constant OpCode_Eqbranch         : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(55, 6));
  constant OpCode_Neqbranch        : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(56, 6));
  constant OpCode_Poppcrel         : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(57, 6));
  constant OpCode_Pushspadd        : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(61, 6));
  constant OpCode_Mult16x16        : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(62, 6));
  constant OpCode_Callpcrel        : std_logic_vector(5 downto 0) := std_logic_vector(to_unsigned(63, 6));
  constant OpCode_Size             : integer                      := 8;

  function zpu_mem_read_lookup (mem_read : std_logic_vector;
                                stackA   : unsigned(wordSize-1 downto 0)) return std_logic_vector;

  function zpu_mem_write_lookup (mem_write : std_logic_vector;
                                 stackA   : unsigned(wordSize-1 downto 0);
                                 stackB   : unsigned(wordSize-1 downto 0)) return std_logic_vector;

end zpu_pkg;

package body zpu_pkg is
  function zpu_mem_read_lookup (mem_read : std_logic_vector;
                                stackA   : unsigned(wordSize-1 downto 0))
    return std_logic_vector is
    variable tmp : std_logic_vector(7 downto 0) := (others => '0');
  begin
    for i in 0 to 3 loop
      if (to_integer(stackA(byteBits-1 downto 0)) = i) then
        tmp := mem_read(((wordBytes-1-i)*8+7) downto (wordBytes-1-i)*8);
        exit;
      end if;
    end loop;
    return tmp;
  end;

  function zpu_mem_write_lookup (mem_write : std_logic_vector;
                                 stackA   : unsigned(wordSize-1 downto 0);
                                 stackB   : unsigned(wordSize-1 downto 0))
    return std_logic_vector is
    variable tmp : std_logic_vector(wordSize-1 downto 0) := (others => '0');
  begin
    for i in 0 to 3 loop
      if (to_integer(stackA(byteBits-1 downto 0)) = i) then
        tmp(((wordBytes-1-i)*8+7) downto (wordBytes-1-i)*8) := std_logic_vector(stackB(7 downto 0));
      else
        tmp(((wordBytes-1-i)*8+7) downto (wordBytes-1-i)*8) := mem_write(((wordBytes-1-i)*8+7) downto (wordBytes-1-i)*8);
      end if;
    end loop;
    return tmp;
  end;

  
end zpu_pkg;
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

use work.axi4s_pkg.all;

package zpu_sic_pkg is
  constant C_MCU_ADDR_WIDTH : natural := 32;
  constant C_MCU_DATA_WIDTH : natural := 32;

  constant C_AXI4S_BRIDGE_PORT_NUM : integer := 0;
  constant C_DM_WRAPPER_PORT_NUM   : integer := 1;
  constant C_IO_WRAPPER_PORT_NUM   : integer := 2;
  constant C_LOCAL_LOGIC_PORT_NUM  : integer := 3;
  constant C_PERF_MON_IF_PORT_NUM  : integer := 4;

  constant C_SIC_ID_WIDTH   : natural := 4;
  constant C_PAD_LENGTH     : natural := C_TRANS_ID_WIDTH - C_SIC_ID_WIDTH - C_TRANS_WIDTH;
  constant C_PAD_ZERO       : std_logic_vector(C_PAD_LENGTH-1 downto 0) := (others => '0');
  constant C_DM_TRANS_ID    : std_logic_vector := C_AXI4S_CRYPTO_PORT_NUM & x"1" & C_PAD_ZERO;
  constant C_IO_TRANS_ID    : std_logic_vector := C_AXI4S_CRYPTO_PORT_NUM & x"2" & C_PAD_ZERO;
  constant C_LL_TRANS_ID    : std_logic_vector := C_AXI4S_CRYPTO_PORT_NUM & x"3" & C_PAD_ZERO;

  constant C_ZPU_32_ADDR : std_logic_vector := x"02000000";

  constant C_CTRL_REG_DM_REMOTE_ADDR  : integer := 0;
  constant C_CTRL_REG_IO_REMOTE_ADDR  : integer := 1;
  constant C_CTRL_REG_32B_ADDR        : integer := 2;
  constant C_CTRL_REG_32B_DATA        : integer := 3;
  constant C_CTRL_REG_REMOTE_REQUEST  : integer := 4;
  constant C_CTRL_REG_REMOTE_PAUSE    : integer := 5;
  constant C_CTRL_REG_PM_BIT_SEL      : integer := 0;
  constant C_CTRL_REG_DM_BIT_SEL      : integer := 1;
  constant C_CTRL_REG_IO_BIT_SEL      : integer := 2;
  constant C_CTRL_REG_RESET_BIT_SEL   : integer := 3;
  constant C_CTRL_REG_PM_RMA_BIT_HIGH : integer := 9;
  constant C_CTRL_REG_PM_RMA_BIT_LOW  : integer := 8;
  constant C_CTRL_REG_PM_RMB_BIT_HIGH : integer := 11;
  constant C_CTRL_REG_PM_RMB_BIT_LOW  : integer := 10;
  constant C_CTRL_REG_DM_RMA_BIT_HIGH : integer := 13;
  constant C_CTRL_REG_DM_RMA_BIT_LOW  : integer := 12;
  constant C_CTRL_REG_DM_RMB_BIT_HIGH : integer := 15;
  constant C_CTRL_REG_DM_RMB_BIT_LOW  : integer := 14;    
  constant C_CTRL_REG_LOCAL_REQ_BIT   : integer := 15;
  constant C_CTRL_REG_CRYPTO_SEL_HIGH : integer := 17;
  constant C_CTRL_REG_CRYPTO_SEL_LOW  : integer := 16;    

  function calc_dst_rdy_n (p : natural; inuse : std_logic_vector; dst_rdy_array : std_logic_vector; sw_sel : natural_vector; src_rdy_n, eof_n : std_logic) return std_logic;

end zpu_sic_pkg;

package body zpu_sic_pkg is

  function calc_dst_rdy_n (p : natural; inuse : std_logic_vector; dst_rdy_array : std_logic_vector; sw_sel : natural_vector; src_rdy_n, eof_n : std_logic)
    return std_logic is
    variable temp : std_logic := '1';
  begin
    for i in sw_sel'range loop
      if ((sw_sel(i) = p) and (inuse(i) = '1')) then
        temp := dst_rdy_array(i);
        exit;
      end if;
    end loop;
    return temp;
  end;
  
end zpu_sic_pkg;

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use ieee.std_logic_unsigned.all;	 
use work.sha3_pkg.all;

package sha3_blake_package is			

	constant iv_224  : std_logic_vector (255 downto 0):= (
						x"BEFA4FA4" & x"64F98FA7" & x"68581511" & x"FFC00B31" & 
						x"F70E5939" & x"3070DD17" & x"367CD507" & x"C1059ED8");
	constant iv_256  : std_logic_vector (255 downto 0):= (
						x"5BE0CD19" & x"1F83D9AB" & x"9B05688C" & x"510E527F" & 
						x"A54FF53A" & x"3C6EF372" & x"BB67AE85" & x"6A09E667" );
	constant iv_384  : std_logic_vector (511 downto 0):= (
						x"47B5481DBEFA4FA4" & x"DB0C2E0D64F98FA7" & x"8EB44A8768581511" &x"67332667FFC00B31" &
						x"152FECD8F70E5939" & x"9159015A3070DD17" & x"629A292A367CD507" & x"CBBB9D5DC1059ED8" );
	constant iv_512  : std_logic_vector (511 downto 0):= (
						x"5BE0CD19137E2179" & x"1F83D9ABFB41BD6B" & x"9B05688C2B3E6C1F" &  x"510E527FADE682D1" & 
						x"A54FF53A5F1D36F1" & x"3C6EF372FE94F82B" & x"BB67AE8584CAA73B" & x"6A09E667F3BCC908");
						
	constant const32 : std_logic_vector(511 downto 0) := (
						x"B5470917" & x"3F84D5B5" & x"C97C50DD" & x"C0AC29B7" & 
						x"34E90C6C" & x"BE5466CF" & x"38D01377" & x"452821E6" & 
						x"EC4E6C89" & x"082EFA98" & x"299F31D0" & x"A4093822" & 
						x"03707344" & x"13198A2E" & x"85A308D3" & x"243F6A88" );
						
	constant const64 : std_logic_vector(1023 downto 0) := (
						x"636920D871574E69" & x"0801F2E2858EFC16" & x"24A19947B3916CF7" & x"BA7C9045F12C7F99" &
						x"B8E1AFED6A267E96" & x"2FFD72DBD01ADFB7" & x"D1310BA698DFB5AC" & x"9216D5D98979FB1B" & 
						x"3F84D5B5B5470917" & x"C0AC29B7C97C50DD" & x"BE5466CF34E90C6C" & x"452821E638D01377" &
						x"082EFA98EC4E6C89" & x"A4093822299F31D0" & x"13198A2E03707344" & x"243F6A8885A308D3" );
						 
	 
						
	type g_rot_type is array (0 to 3) of integer;
	constant g_rot_arch32 : g_rot_type := (16, 12, 8, 7);
	constant g_rot_arch64 : g_rot_type := (32, 25, 16, 11);
						 
	type permute_type is array (0 to 9, 0 to 15) of integer;

	constant permute_array    : permute_type :=  ((0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15),
	                                             (14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3),
	                                             (11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4),
	                                             (7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8),
	                                             (9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13),
	                                             (2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9),
	                                             (12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11),
	                                             (13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10),
	                                             (6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5),
	                                             (10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0));		
												 
	function get_b ( h : integer ) return integer;
	function get_iw ( h : integer ) return integer;	 
	function get_iv ( h : integer; iw : integer) return std_logic_vector; 
	function get_cons ( h : integer; b : integer ; iw : integer) return std_logic_vector; 
	function get_roundnr ( h : integer; sha3round : integer ) return integer;   
end sha3_blake_package;							  
	



package body sha3_blake_package is						 
	function get_b ( h : integer ) return integer is
	begin
		if ( h <= 256 ) then
			return ( 512 );
		else 
			return ( 1024 );
		end if;
	end function get_b;
	
	function get_iw ( h : integer ) return integer is
	begin
		if ( h <= 256 ) then
			return ( 32 );
		else 
			return ( 64 );
		end if;
	end function get_iw;	  			 
	
	function get_iv ( h : integer; iw : integer) return std_logic_vector is 
	begin
		if ( h = 224 ) then
			return ( switch_endian_word(iv_224,256,iw) );
		elsif ( h = 256 ) then
			return (switch_endian_word( iv_256,256,iw) );
		elsif ( h = 384 ) then
			return (switch_endian_word( iv_384,384,iw) );
		elsif ( h = 512 ) then
			return (switch_endian_word( iv_512,512,iw) );	 
		else
			return "000";
		end if;
	end function get_iv;	
	
	function get_cons ( h : integer; b : integer ; iw : integer) return std_logic_vector is
	begin
		if ( h <= 256 ) then
			return ( switch_endian_word(const32,b,iw) );
		else 
			return ( switch_endian_word(const64,b,iw) );
		end if;
	end function get_cons;	  			
	 
	function get_roundnr ( h : integer; sha3round : integer ) return integer is
	begin
		if ( h <= 256 ) then					 
			if sha3round = 2 then
				return ( 10 );
			else
				return ( 14 );
			end if;
		else  
			if sha3round = 2 then
				return ( 14 );
			else
				return ( 16 );
			end if;
		end if;
	end function get_roundnr;
		
end package body;

library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;	 
use work.sha3_pkg.all;

package sha3_jh_package is		   

	constant ON_THE_FLY : integer := 0;
	constant MEMORY : integer := 1;
	constant d		: integer := 8;
	constant b		: integer := 2**(d+2);
	constant mw		: integer := 2**(d+1);		
	
	constant crw	: integer := 2**d;			
	constant crkw	: integer := 2**(d-2);		
	
	constant w		: integer := 64;		

	constant fbw		: integer := 64;		
	constant fmw		: integer := log2(4*b/fbw); 
	constant fmwzeros	: std_logic_vector(fmw-1 downto 0) := (others => '0');
	constant fmwones	: std_logic_vector(fmw-1 downto 0) := (others => '1');
	constant roundnr 		: integer := 42 * b / fbw;
	constant log2roundnr	: integer := log2( roundnr );
	
	
	constant bseg			: integer := b/w;  
		
	constant mwseg			: integer := mw/w;	
	constant log2mw 		: integer := log2( mw );
	constant log2mwseg 		: integer := log2( mwseg );
	
 	constant log2mwsegzeros	: std_logic_vector(log2mwseg-1 downto 0) := (others => '0');
	constant bzeros			: std_logic_vector(b-1 downto 0) := (others => '0');
	constant wzeros			: std_logic_vector(w-1 downto 0) := (others => '0');
	constant mwzeros		: std_logic_vector(mw-1 downto 0) := (others => '0');
	constant crkwzeros 		: std_logic_vector(crkw-1 downto 0) := (others => '0');
	
	
	type sbox_type is array (0 to 1, 0 to 15) of std_logic_vector(3 downto 0);
	constant sbox_rom : sbox_type := ((	"1001", "0000", "0100", "1011", "1101", "1100", "0011", "1111",
										"0001", "1010", "0010", "0110", "0111", "0101", "1000", "1110"),
									  (	"0011", "1100", "0110", "1101", "0101", "0111", "0001", "1001",
										"1111", "0010", "0000", "0100", "1011", "1010", "1110", "1000"));
										
	type std_logic_matrix is array (31 downto 0) of std_logic_vector(31 downto 0) ;
	function blk2wordmatrix_inv	(signal x : in std_logic_vector(b-1 downto 0) ) return std_logic_matrix;
	function form_group  (hm : in std_logic_vector; b : integer; cw : integer ) return std_logic_vector;
	function degroup  (rd : in std_logic_vector; b : integer; cw : integer ) return std_logic_vector;
	function get_iv ( h : integer ) return std_logic_vector;
	function permute ( ii : std_logic_vector; bw : integer; cw : integer ) return std_logic_vector;
   	constant cr8_iv	: std_logic_vector(crw-1 downto 0) := x"6A09E667F3BCC908B2FB1366EA957D3E3ADEC17512775099DA2F590B0667322A";
	constant iv512 : std_logic_vector(b-1 downto 0) := x"50AB6058C60942CC4CE7A54CBDB9DC1BAF2E7AFBD1A15E24E5F44EABC4D5C0A14CF243660C562073999381EA9A8B3D18CF65D9FCA940B6C79E831273BEFE3B660F9A2F7E0A32D8E017D491558E0B134005B5E4DEC44E5F3F8CBC5AEE98FD1D3214081C25E46CE6C41B4B95BCE1BD43DB7F229EC243B680140A33B909333C0303";
	constant iv256 : std_logic_vector(b-1 downto 0)   := x"C968B8E2C53A596E427E45EF1D7AE6E56145B7D906711F7A2FC7617806A922017B2991C1B91929E2C42B4CE18CC5A2D66220BECA901B5DDFD3B205638EA7AC5F143E8CBA6D313104B0E70054905272714CCE321E075DE5101BA800ECE20251789F5772795FD104A5F0B8B63425F5B2381670FA3E5F907F17E28FC064E769AC90";
	constant iv256r3 : std_logic_vector(b-1 downto 0) := x"EB98A3412C20D3EB92CDBE7B9CB245C11C93519160D4C7FA260082D67E508A03A4239E267726B945E0FB1A48D41A9477CDB5AB26026B177A56F024420FFF2FA871A396897F2E4D751D144908F77DE262277695F776248F9487D5B6574780296C5C5E272DAC8E0D6C518450C657057A0F7BE4D367702412EA89E3AB13D31CD769";
	constant iv512r3 : std_logic_vector(b-1 downto 0) := x"6FD14B963E00AA17636A2E057A15D5438A225E8D0C97EF0BE9341259F2B3C361891DA0C1536F801E2AA9056BEA2B6D80588ECCDB2075BAA6A90F3A76BAF83BF70169E60541E34A6946B58A8E2E6FE65A1047A7D0C1843C243B6E71B12D5AC199CF57F6EC9DB1F856A706887C5716B156E3C2FCDFE68517FB545A4678CC8CDD4B";
	
	

	type rc_type is array( 0 to 43 ) of std_logic_vector(255 downto 0);	
	constant rc_cons : rc_type := 	
		(x"6a09e667f3bcc908b2fb1366ea957d3e3adec17512775099da2f590b0667322a",
		x"bb896bf05955abcd5281828d66e7d99ac4203494f89bf12817deb43288712231",
		x"1836e76b12d79c55118a1139d2417df52a2021225ff6350063d88e5f1f91631c",
		x"263085a7000fa9c3317c6ca8ab65f7a7713cf4201060ce886af855a90d6a4eed",
		x"1cebafd51a156aeb62a11fb3be2e14f60b7e48de85814270fd62e97614d7b441",
		x"e5564cb574f7e09c75e2e244929e9549279ab224a28e445d57185e7d7a09fdc1",
		x"5820f0f0d764cff3a5552a5e41a82b9eff6ee0aa615773bb07e8603424c3cf8a",
		x"b126fb741733c5bfcef6f43a62e8e5706a26656028aa897ec1ea4616ce8fd510",
		x"dbf0de32bca77254bb4f562581a3bc991cf94f225652c27f14eae958ae6aa616",
		x"e6113be617f45f3de53cff03919a94c32c927b093ac8f23b47f7189aadb9bc67",
		x"80d0d26052ca45d593ab5fb3102506390083afb5ffe107dacfcba7dbe601a12b",
		x"43af1c76126714dfa950c368787c81ae3beecf956c85c962086ae16e40ebb0b4",
		x"9aee8994d2d74a5cdb7b1ef294eed5c1520724dd8ed58c92d3f0e174b0c32045",
		x"0b2aa58ceb3bdb9e1eef66b376e0c565d5d8fe7bacb8da866f859ac521f3d571",
		x"7a1523ef3d970a3a9b0b4d610e02749d37b8d57c1885fe4206a7f338e8356866",
		x"2c2db8f7876685f2cd9a2e0ddb64c9d5bf13905371fc39e0fa86e1477234a297",
		x"9df085eb2544ebf62b50686a71e6e828dfed9dbe0b106c9452ceddff3d138990",
		x"e6e5c42cb2d460c9d6e4791a1681bb2e222e54558eb78d5244e217d1bfcf5058",
		x"8f1f57e44e126210f00763ff57da208a5093b8ff7947534a4c260a17642f72b2",
		x"ae4ef4792ea148608cf116cb2bff66e8fc74811266cd641112cd17801ed38b59",
		x"91a744efbf68b192d0549b608bdb3191fc12a0e83543cec5f882250b244f78e4",
		x"4b5d27d3368f9c17d4b2a2b216c7e74e7714d2cc03e1e44588cd9936de74357c",
		x"0ea17cafb8286131bda9e3757b3610aa3f77a6d0575053fc926eea7e237df289",
		x"848af9f57eb1a616e2c342c8cea528b8a95a5d16d9d87be9bb3784d0c351c32b",
		x"c0435cc3654fb85dd9335ba91ac3dbde1f85d567d7ad16f9de6e009bca3f95b5",
		x"927547fe5e5e45e2fe99f1651ea1cbf097dc3a3d40ddd21cee260543c288ec6b",
		x"c117a3770d3a34469d50dfa7db020300d306a365374fa828c8b780ee1b9d7a34",
		x"8ff2178ae2dbe5e872fac789a34bc228debf54a882743caad14f3a550fdbe68f",
		x"abd06c52ed58ff091205d0f627574c8cbc1fe7cf79210f5a2286f6e23a27efa0",
		x"631f4acb8d3ca4253e301849f157571d3211b6c1045347befb7c77df3c6ca7bd",
		x"ae88f2342c23344590be2014fab4f179fd4bf7c90db14fa4018fcce689d2127b",
		x"93b89385546d71379fe41c39bc602e8b7c8b2f78ee914d1f0af0d437a189a8a4",
		x"1d1e036abeef3f44848cd76ef6baa889fcec56cd7967eb909a464bfc23c72435",
		x"a8e4ede4c5fe5e88d4fb192e0a0821e935ba145bbfc59c2508282755a5df53a5",
		x"8e4e37a3b970f079ae9d22a499a714c875760273f74a9398995d32c05027d810",
		x"61cfa42792f93b9fde36eb163e978709fafa7616ec3c7dad0135806c3d91a21b",
		x"f037c5d91623288b7d0302c1b941b72676a943b372659dcd7d6ef408a11b40c0",
		x"2a306354ca3ea90b0e97eaebcea0a6d7c6522399e885c613de824922c892c490",
		x"3ca6cdd788a5bdc5ef2dceeb16bca31e0a0d2c7e9921b6f71d33e25dd2f3cf53",
		x"f72578721db56bf8f49538b0ae6ea470c2fb1339dd26333f135f7def45376ec0",
		x"e449a03eab359e34095f8b4b55cd7ac7c0ec6510f2c4cc79fa6b1fee6b18c59e",
		x"73bd6978c59f2b219449b36770fb313fbe2da28f6b04275f071a1b193dde2072",  
		x"6a09e667f3bcc908b2fb1366ea957d3e3adec17512775099da2f590b0667322a",
		x"6a09e667f3bcc908b2fb1366ea957d3e3adec17512775099da2f590b0667322a");
		
	type rc_half_type is array(0 to 1, 0 to 21 ) of std_logic_vector(255 downto 0);
		
	constant rc_cons_half : rc_half_type := 	
		((x"6a09e667f3bcc908b2fb1366ea957d3e3adec17512775099da2f590b0667322a",	
		x"1836e76b12d79c55118a1139d2417df52a2021225ff6350063d88e5f1f91631c",	
		x"1cebafd51a156aeb62a11fb3be2e14f60b7e48de85814270fd62e97614d7b441",		
		x"5820f0f0d764cff3a5552a5e41a82b9eff6ee0aa615773bb07e8603424c3cf8a",		
		x"dbf0de32bca77254bb4f562581a3bc991cf94f225652c27f14eae958ae6aa616",	
		x"80d0d26052ca45d593ab5fb3102506390083afb5ffe107dacfcba7dbe601a12b",		
		x"9aee8994d2d74a5cdb7b1ef294eed5c1520724dd8ed58c92d3f0e174b0c32045",		
		x"7a1523ef3d970a3a9b0b4d610e02749d37b8d57c1885fe4206a7f338e8356866",		
		x"9df085eb2544ebf62b50686a71e6e828dfed9dbe0b106c9452ceddff3d138990",		
		x"8f1f57e44e126210f00763ff57da208a5093b8ff7947534a4c260a17642f72b2",		
		x"91a744efbf68b192d0549b608bdb3191fc12a0e83543cec5f882250b244f78e4",		
		x"0ea17cafb8286131bda9e3757b3610aa3f77a6d0575053fc926eea7e237df289",		
		x"c0435cc3654fb85dd9335ba91ac3dbde1f85d567d7ad16f9de6e009bca3f95b5",		
		x"c117a3770d3a34469d50dfa7db020300d306a365374fa828c8b780ee1b9d7a34",		
		x"abd06c52ed58ff091205d0f627574c8cbc1fe7cf79210f5a2286f6e23a27efa0",		
		x"ae88f2342c23344590be2014fab4f179fd4bf7c90db14fa4018fcce689d2127b",		
		x"1d1e036abeef3f44848cd76ef6baa889fcec56cd7967eb909a464bfc23c72435",		
		x"8e4e37a3b970f079ae9d22a499a714c875760273f74a9398995d32c05027d810",		
		x"f037c5d91623288b7d0302c1b941b72676a943b372659dcd7d6ef408a11b40c0",		
		x"3ca6cdd788a5bdc5ef2dceeb16bca31e0a0d2c7e9921b6f71d33e25dd2f3cf53",		
		x"e449a03eab359e34095f8b4b55cd7ac7c0ec6510f2c4cc79fa6b1fee6b18c59e",
		x"0000000000000000000000000000000000000000000000000000000000000000"
		),(		
		x"bb896bf05955abcd5281828d66e7d99ac4203494f89bf12817deb43288712231",
		x"263085a7000fa9c3317c6ca8ab65f7a7713cf4201060ce886af855a90d6a4eed",
		x"e5564cb574f7e09c75e2e244929e9549279ab224a28e445d57185e7d7a09fdc1",
		x"b126fb741733c5bfcef6f43a62e8e5706a26656028aa897ec1ea4616ce8fd510",
		x"e6113be617f45f3de53cff03919a94c32c927b093ac8f23b47f7189aadb9bc67",
		x"43af1c76126714dfa950c368787c81ae3beecf956c85c962086ae16e40ebb0b4",
		x"0b2aa58ceb3bdb9e1eef66b376e0c565d5d8fe7bacb8da866f859ac521f3d571",
		x"2c2db8f7876685f2cd9a2e0ddb64c9d5bf13905371fc39e0fa86e1477234a297",
		x"e6e5c42cb2d460c9d6e4791a1681bb2e222e54558eb78d5244e217d1bfcf5058",
		x"ae4ef4792ea148608cf116cb2bff66e8fc74811266cd641112cd17801ed38b59",
		x"4b5d27d3368f9c17d4b2a2b216c7e74e7714d2cc03e1e44588cd9936de74357c",
		x"848af9f57eb1a616e2c342c8cea528b8a95a5d16d9d87be9bb3784d0c351c32b",
		x"927547fe5e5e45e2fe99f1651ea1cbf097dc3a3d40ddd21cee260543c288ec6b",
		x"8ff2178ae2dbe5e872fac789a34bc228debf54a882743caad14f3a550fdbe68f",
		x"631f4acb8d3ca4253e301849f157571d3211b6c1045347befb7c77df3c6ca7bd",
		x"93b89385546d71379fe41c39bc602e8b7c8b2f78ee914d1f0af0d437a189a8a4",
		x"a8e4ede4c5fe5e88d4fb192e0a0821e935ba145bbfc59c2508282755a5df53a5",
		x"61cfa42792f93b9fde36eb163e978709fafa7616ec3c7dad0135806c3d91a21b",
		x"2a306354ca3ea90b0e97eaebcea0a6d7c6522399e885c613de824922c892c490",
		x"f72578721db56bf8f49538b0ae6ea470c2fb1339dd26333f135f7def45376ec0",
		x"73bd6978c59f2b219449b36770fb313fbe2da28f6b04275f071a1b193dde2072",  
		x"0000000000000000000000000000000000000000000000000000000000000000"));

	constant XILINX : integer := 0;
	constant ALTERA : integer := 1;
	
	constant M512	: integer  := 0;
	constant M4K	: integer  := 1;
	constant M9K	: integer  := 2;
	constant M20K	: integer  := 3;
	constant MLAB	: integer  := 4;
	constant MRAM	: integer  := 5;
	constant M144K	: integer  := 6;	
	
	constant MEM_DISTRIBUTED	: integer := 0; 
	constant MEM_EMBEDDED		: integer := 1;
	constant MEM_LOGIC    		: integer := 2;
	
   constant PAD : integer 		:= 1;
	
	component ramn is
		generic(
			M : INTEGER := 64;
			N : INTEGER := 8
			);
		port(
			input : in STD_LOGIC_VECTOR(M-1 DOWNTO 0);
			addr : in STD_LOGIC_VECTOR(log2(N)-1 DOWNTO 0);
			write : in STD_LOGIC;
			clk : in STD_LOGIC;
			output : out STD_LOGIC_VECTOR(M-1 DOWNTO 0)
		    );
	end component; 
   
   	 component jh_top is		
	  generic (		
		HS : integer := 256;	   		
		UF : integer := 1;
		RCMODE : integer := 0
	          ); 
	   port (		
		rst 	: in std_logic;
		clk 	: in std_logic;
		
		src_ready : in std_logic;
		src_read  : out std_logic;
		dst_ready : in std_logic;
		dst_write : out std_logic;		
		din		: in std_logic_vector(w-1 downto 0);
		dout	: out std_logic_vector(w-1 downto 0)
	        );	   
        end component;

end sha3_jh_package;

package body sha3_jh_package is
	function blk2wordmatrix_inv  (signal x : in std_logic_vector(b-1 downto 0) ) return std_logic_matrix is
		variable retval : std_logic_matrix;
	begin
		for i in 0 to 31 loop
			retval(32-1-i) := x(32*(i+1) - 1 downto 32*i);
		end loop;
		return retval;
	end blk2wordmatrix_inv;	
	
	function form_group  (hm : in std_logic_vector; b : integer; cw : integer ) return std_logic_vector is   
		variable g : std_logic_vector(b-1 downto 0);
	begin
		for i in 0 to cw/2-1 loop
			g(b-i*8-1 downto b-i*8-4)   := hm(b-1 - i) & hm(b-1 - (i+cw)) & hm(b-1 - (i+2*cw)) & hm(b-1 - (i+3*cw));
			g(b-i*8-5 downto b-i*8-8)	:= hm(b-1 - (i + cw/2)) & hm(b-1 - ((i+cw) + (cw/2))) & hm(b-1 - (i+2*cw + cw/2)) & hm(b-1 - (i+3*cw + cw/2));			
		end loop; 
		return g;
	end form_group;	 
	
	function degroup  (rd : in std_logic_vector; b : integer; cw : integer ) return std_logic_vector is   
		variable dg : std_logic_vector(b-1 downto 0);
	begin
		for i in 0 to cw/2-1 loop
			dg(b-1 - i) 	   := rd(b-i*8-1);
			dg(b-1 - (i+cw))   := rd(b-i*8-2);
			dg(b-1 - (i+2*cw)) := rd(b-i*8-3);
			dg(b-1 - (i+3*cw)) := rd(b-i*8-4);
			dg(b-1 - (i + cw/2)) 		:= rd(b-i*8-5);
			dg(b-1 - (i+cw + cw/2))		:= rd(b-i*8-6);
			dg(b-1 - (i+2*cw + cw/2))	:= rd(b-i*8-7);
			dg(b-1 - (i+3*cw + cw/2))	:= rd(b-i*8-8);
		end loop; 
		return dg;
	end degroup;	
	
	function get_iv ( h : integer ) return std_logic_vector is
	begin
		if ( h = 256 ) then
			return iv256r3;
		else
			return iv512r3;
		end if;	
	end get_iv;		   
	
	function permute ( ii : std_logic_vector; bw : integer; cw : integer ) return std_logic_vector is
		type array_type is array (0 to cw-1) of std_logic_vector(3 downto 0);
		variable ww, pi, pp, phi : array_type;		   
		variable oo : std_logic_vector(bw-1 downto 0);
	begin		
		inout_gen : for i in bw/4-1 downto 0 loop
			ww(bw/4-1 - i) := ii(i*4+3 downto i*4);  		
		end loop;
	
		pi_gen : for  i in cw/4-1 downto 0 loop
			pi(i*4 + 0) := ww(i*4 + 0);
			pi(i*4 + 1) := ww(i*4 + 1);
			pi(i*4 + 2) := ww(i*4 + 3);
			pi(i*4 + 3) := ww(i*4 + 2);
		end loop;
		
		pp_gen : for i in cw/2-1 downto 0 loop
			pp(i)  			:= pi(i*2);
			pp(i + cw/2)	:= pi(i*2 + 1);
		end loop;
		
		phi_gen1 : for i in cw/2-1 downto 0 loop
			phi(i) := pp(i);
		end loop;
		phi_gen : for i in cw/4-1 downto 0 loop
			phi(i*2 + cw/2)  	:= pp(i*2 + 1 + cw/2);
			phi(i*2 + 1 + cw/2) := pp(i*2 + cw/2);	
		end loop;	   
		
		out_gen : for i in bw/4-1 downto 0 loop
			oo(i*4+3 downto i*4) := phi(bw/4-1 - i);
		end loop;
	
		return oo;
	end permute;
end package body;
library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

use work.axi4s_pkg.all ;
use work.axi4s_switch_pkg.all ;

entity axi4s_switch_wrapper is
port (

SYS2AXI_0_TDATA   : IN  STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
SYS2AXI_0_TSTRB   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_0_TKEEP   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_0_TVALID  : IN  STD_LOGIC;
SYS2AXI_0_TLAST   : IN  STD_LOGIC;
SYS2AXI_0_TID     : IN  STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
SYS2AXI_0_TDEST   : IN  STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
SYS2AXI_0_TUSER   : IN  STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
SYS2AXI_0_TREADY  : OUT STD_LOGIC;
SYS2AXI_1_TDATA   : IN  STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
SYS2AXI_1_TSTRB   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_1_TKEEP   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_1_TVALID  : IN  STD_LOGIC;
SYS2AXI_1_TLAST   : IN  STD_LOGIC;
SYS2AXI_1_TID     : IN  STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
SYS2AXI_1_TDEST   : IN  STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
SYS2AXI_1_TUSER   : IN  STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
SYS2AXI_1_TREADY  : OUT STD_LOGIC;
SYS2AXI_2_TDATA   : IN  STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
SYS2AXI_2_TSTRB   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_2_TKEEP   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_2_TVALID  : IN  STD_LOGIC;
SYS2AXI_2_TLAST   : IN  STD_LOGIC;
SYS2AXI_2_TID     : IN  STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
SYS2AXI_2_TDEST   : IN  STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
SYS2AXI_2_TUSER   : IN  STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
SYS2AXI_2_TREADY  : OUT STD_LOGIC;
SYS2AXI_3_TDATA   : IN  STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
SYS2AXI_3_TSTRB   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_3_TKEEP   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_3_TVALID  : IN  STD_LOGIC;
SYS2AXI_3_TLAST   : IN  STD_LOGIC;
SYS2AXI_3_TID     : IN  STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
SYS2AXI_3_TDEST   : IN  STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
SYS2AXI_3_TUSER   : IN  STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
SYS2AXI_3_TREADY  : OUT STD_LOGIC;
SYS2AXI_4_TDATA   : IN  STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0) := (others => '0');
SYS2AXI_4_TSTRB   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0) := (others => '0');
SYS2AXI_4_TKEEP   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0) := (others => '0');
SYS2AXI_4_TVALID  : IN  STD_LOGIC := '0';
SYS2AXI_4_TLAST   : IN  STD_LOGIC := '0';
SYS2AXI_4_TID     : IN  STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0) := (others => '0');
SYS2AXI_4_TDEST   : IN  STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0) := (others => '0');
SYS2AXI_4_TUSER   : IN  STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0) := (others => '0');
SYS2AXI_4_TREADY  : OUT STD_LOGIC;
AXI2SYS_0_TDATA   : OUT STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
AXI2SYS_0_TSTRB   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_0_TKEEP   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_0_TVALID  : OUT STD_LOGIC;
AXI2SYS_0_TLAST   : OUT STD_LOGIC;
AXI2SYS_0_TID     : OUT STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
AXI2SYS_0_TDEST   : OUT STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
AXI2SYS_0_TUSER   : OUT STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
AXI2SYS_0_TREADY  : in  STD_LOGIC;
AXI2SYS_1_TDATA   : OUT STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
AXI2SYS_1_TSTRB   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_1_TKEEP   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_1_TVALID  : OUT STD_LOGIC;
AXI2SYS_1_TLAST   : OUT STD_LOGIC;
AXI2SYS_1_TID     : OUT STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
AXI2SYS_1_TDEST   : OUT STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
AXI2SYS_1_TUSER   : OUT STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
AXI2SYS_1_TREADY  : in  STD_LOGIC;
AXI2SYS_2_TDATA   : OUT STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
AXI2SYS_2_TSTRB   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_2_TKEEP   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_2_TVALID  : OUT STD_LOGIC;
AXI2SYS_2_TLAST   : OUT STD_LOGIC;
AXI2SYS_2_TID     : OUT STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
AXI2SYS_2_TDEST   : OUT STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
AXI2SYS_2_TUSER   : OUT STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
AXI2SYS_2_TREADY  : in  STD_LOGIC;
AXI2SYS_3_TDATA   : OUT STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
AXI2SYS_3_TSTRB   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_3_TKEEP   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_3_TVALID  : OUT STD_LOGIC;
AXI2SYS_3_TLAST   : OUT STD_LOGIC;
AXI2SYS_3_TID     : OUT STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
AXI2SYS_3_TDEST   : OUT STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
AXI2SYS_3_TUSER   : OUT STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
AXI2SYS_3_TREADY  : in  STD_LOGIC;
AXI2SYS_4_TDATA   : OUT STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0) := (others => '0');
AXI2SYS_4_TSTRB   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0) := (others => '0');
AXI2SYS_4_TKEEP   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0) := (others => '0');
AXI2SYS_4_TVALID  : OUT STD_LOGIC := '0';
AXI2SYS_4_TLAST   : OUT STD_LOGIC := '0';
AXI2SYS_4_TID     : OUT STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0) := (others => '0');
AXI2SYS_4_TDEST   : OUT STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0) := (others => '0');
AXI2SYS_4_TUSER   : OUT STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0) := (others => '0');
AXI2SYS_4_TREADY  : in  STD_LOGIC := '0';

  clk           : in std_logic ;
  rst           : in std_logic

) ;
end entity axi4s_switch_wrapper ;

architecture imp of axi4s_switch_wrapper is

component axi4s_fifo is
port (

FIFO_IN_TDATA    : IN  STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
FIFO_IN_TSTRB    : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
FIFO_IN_TKEEP    : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
FIFO_IN_TVALID   : IN  STD_LOGIC;
FIFO_IN_TLAST    : IN  STD_LOGIC;
FIFO_IN_TID      : IN  STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
FIFO_IN_TDEST    : IN  STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
FIFO_IN_TUSER    : IN  STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
FIFO_IN_TREADY   : OUT STD_LOGIC;

FIFO_OUT_TDATA   : OUT STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
FIFO_OUT_TSTRB   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
FIFO_OUT_TKEEP   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
FIFO_OUT_TVALID  : OUT STD_LOGIC;
FIFO_OUT_TLAST   : OUT STD_LOGIC;
FIFO_OUT_TID     : OUT STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
FIFO_OUT_TDEST   : OUT STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
FIFO_OUT_TUSER   : OUT STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
FIFO_OUT_TREADY  : in  STD_LOGIC;

rst : in std_logic ;
clk : in std_logic

) ;
end component axi4s_fifo ;

component axi4s_switch is
port (
SYS2AXI_0_TDATA   : IN  STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
SYS2AXI_0_TSTRB   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_0_TKEEP   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_0_TVALID  : IN  STD_LOGIC;
SYS2AXI_0_TLAST   : IN  STD_LOGIC;
SYS2AXI_0_TID     : IN  STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
SYS2AXI_0_TDEST   : IN  STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
SYS2AXI_0_TUSER   : IN  STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
SYS2AXI_0_TREADY  : OUT STD_LOGIC;
SYS2AXI_1_TDATA   : IN  STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
SYS2AXI_1_TSTRB   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_1_TKEEP   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_1_TVALID  : IN  STD_LOGIC;
SYS2AXI_1_TLAST   : IN  STD_LOGIC;
SYS2AXI_1_TID     : IN  STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
SYS2AXI_1_TDEST   : IN  STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
SYS2AXI_1_TUSER   : IN  STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
SYS2AXI_1_TREADY  : OUT STD_LOGIC;
SYS2AXI_2_TDATA   : IN  STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
SYS2AXI_2_TSTRB   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_2_TKEEP   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_2_TVALID  : IN  STD_LOGIC;
SYS2AXI_2_TLAST   : IN  STD_LOGIC;
SYS2AXI_2_TID     : IN  STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
SYS2AXI_2_TDEST   : IN  STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
SYS2AXI_2_TUSER   : IN  STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
SYS2AXI_2_TREADY  : OUT STD_LOGIC;
SYS2AXI_3_TDATA   : IN  STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
SYS2AXI_3_TSTRB   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_3_TKEEP   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_3_TVALID  : IN  STD_LOGIC;
SYS2AXI_3_TLAST   : IN  STD_LOGIC;
SYS2AXI_3_TID     : IN  STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
SYS2AXI_3_TDEST   : IN  STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
SYS2AXI_3_TUSER   : IN  STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
SYS2AXI_3_TREADY  : OUT STD_LOGIC;
SYS2AXI_4_TDATA   : IN  STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
SYS2AXI_4_TSTRB   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_4_TKEEP   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_4_TVALID  : IN  STD_LOGIC;
SYS2AXI_4_TLAST   : IN  STD_LOGIC;
SYS2AXI_4_TID     : IN  STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
SYS2AXI_4_TDEST   : IN  STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
SYS2AXI_4_TUSER   : IN  STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
SYS2AXI_4_TREADY  : OUT STD_LOGIC;
AXI2SYS_0_TDATA   : OUT STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
AXI2SYS_0_TSTRB   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_0_TKEEP   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_0_TVALID  : OUT STD_LOGIC;
AXI2SYS_0_TLAST   : OUT STD_LOGIC;
AXI2SYS_0_TID     : OUT STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
AXI2SYS_0_TDEST   : OUT STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
AXI2SYS_0_TUSER   : OUT STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
AXI2SYS_0_TREADY  : in  STD_LOGIC;
AXI2SYS_1_TDATA   : OUT STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
AXI2SYS_1_TSTRB   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_1_TKEEP   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_1_TVALID  : OUT STD_LOGIC;
AXI2SYS_1_TLAST   : OUT STD_LOGIC;
AXI2SYS_1_TID     : OUT STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
AXI2SYS_1_TDEST   : OUT STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
AXI2SYS_1_TUSER   : OUT STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
AXI2SYS_1_TREADY  : in  STD_LOGIC;
AXI2SYS_2_TDATA   : OUT STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
AXI2SYS_2_TSTRB   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_2_TKEEP   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_2_TVALID  : OUT STD_LOGIC;
AXI2SYS_2_TLAST   : OUT STD_LOGIC;
AXI2SYS_2_TID     : OUT STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
AXI2SYS_2_TDEST   : OUT STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
AXI2SYS_2_TUSER   : OUT STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
AXI2SYS_2_TREADY  : in  STD_LOGIC;
AXI2SYS_3_TDATA   : OUT STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
AXI2SYS_3_TSTRB   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_3_TKEEP   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_3_TVALID  : OUT STD_LOGIC;
AXI2SYS_3_TLAST   : OUT STD_LOGIC;
AXI2SYS_3_TID     : OUT STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
AXI2SYS_3_TDEST   : OUT STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
AXI2SYS_3_TUSER   : OUT STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
AXI2SYS_3_TREADY  : in  STD_LOGIC;
AXI2SYS_4_TDATA   : OUT STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
AXI2SYS_4_TSTRB   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_4_TKEEP   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_4_TVALID  : OUT STD_LOGIC;
AXI2SYS_4_TLAST   : OUT STD_LOGIC;
AXI2SYS_4_TID     : OUT STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
AXI2SYS_4_TDEST   : OUT STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
AXI2SYS_4_TUSER   : OUT STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
AXI2SYS_4_TREADY  : in  STD_LOGIC;

  clk           : in  std_logic ;
  rst           : in  std_logic 
  ) ;
end component axi4s_switch ;


signal FIFO2SWITCH_0_TDATA   : STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0) ;
signal FIFO2SWITCH_0_TSTRB   : STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0) ;
signal FIFO2SWITCH_0_TKEEP   : STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0) ;
signal FIFO2SWITCH_0_TVALID  : STD_LOGIC ;
signal FIFO2SWITCH_0_TLAST   : STD_LOGIC ;
signal FIFO2SWITCH_0_TID     : STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0) ;
signal FIFO2SWITCH_0_TDEST   : STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0)  ;
signal FIFO2SWITCH_0_TUSER   : STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0)  ;
signal FIFO2SWITCH_0_TREADY  : STD_LOGIC  ;
signal FIFO2SWITCH_1_TDATA   : STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0) ;
signal FIFO2SWITCH_1_TSTRB   : STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0) ;
signal FIFO2SWITCH_1_TKEEP   : STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0) ;
signal FIFO2SWITCH_1_TVALID  : STD_LOGIC ;
signal FIFO2SWITCH_1_TLAST   : STD_LOGIC ;
signal FIFO2SWITCH_1_TID     : STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0) ;
signal FIFO2SWITCH_1_TDEST   : STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0)  ;
signal FIFO2SWITCH_1_TUSER   : STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0)  ;
signal FIFO2SWITCH_1_TREADY  : STD_LOGIC  ;
signal FIFO2SWITCH_2_TDATA   : STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0) ;
signal FIFO2SWITCH_2_TSTRB   : STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0) ;
signal FIFO2SWITCH_2_TKEEP   : STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0) ;
signal FIFO2SWITCH_2_TVALID  : STD_LOGIC ;
signal FIFO2SWITCH_2_TLAST   : STD_LOGIC ;
signal FIFO2SWITCH_2_TID     : STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0) ;
signal FIFO2SWITCH_2_TDEST   : STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0)  ;
signal FIFO2SWITCH_2_TUSER   : STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0)  ;
signal FIFO2SWITCH_2_TREADY  : STD_LOGIC  ;
signal FIFO2SWITCH_3_TDATA   : STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0) ;
signal FIFO2SWITCH_3_TSTRB   : STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0) ;
signal FIFO2SWITCH_3_TKEEP   : STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0) ;
signal FIFO2SWITCH_3_TVALID  : STD_LOGIC ;
signal FIFO2SWITCH_3_TLAST   : STD_LOGIC ;
signal FIFO2SWITCH_3_TID     : STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0) ;
signal FIFO2SWITCH_3_TDEST   : STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0)  ;
signal FIFO2SWITCH_3_TUSER   : STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0)  ;
signal FIFO2SWITCH_3_TREADY  : STD_LOGIC  ;
signal FIFO2SWITCH_4_TDATA   : STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0) ;
signal FIFO2SWITCH_4_TSTRB   : STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0) ;
signal FIFO2SWITCH_4_TKEEP   : STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0) ;
signal FIFO2SWITCH_4_TVALID  : STD_LOGIC ;
signal FIFO2SWITCH_4_TLAST   : STD_LOGIC ;
signal FIFO2SWITCH_4_TID     : STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0) ;
signal FIFO2SWITCH_4_TDEST   : STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0)  ;
signal FIFO2SWITCH_4_TUSER   : STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0)  ;
signal FIFO2SWITCH_4_TREADY  : STD_LOGIC  ;
signal SWITCH2FIFO_0_TDATA   : STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0)  ;
signal SWITCH2FIFO_0_TSTRB   : STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0)  ;
signal SWITCH2FIFO_0_TKEEP   : STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0)  ;
signal SWITCH2FIFO_0_TVALID  : STD_LOGIC  ;
signal SWITCH2FIFO_0_TLAST   : STD_LOGIC  ;
signal SWITCH2FIFO_0_TID     : STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0)  ;
signal SWITCH2FIFO_0_TDEST   : STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0)  ;
signal SWITCH2FIFO_0_TUSER   : STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0)  ;
signal SWITCH2FIFO_0_TREADY  : STD_LOGIC  ;
signal SWITCH2FIFO_1_TDATA   : STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0)  ;
signal SWITCH2FIFO_1_TSTRB   : STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0)  ;
signal SWITCH2FIFO_1_TKEEP   : STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0)  ;
signal SWITCH2FIFO_1_TVALID  : STD_LOGIC  ;
signal SWITCH2FIFO_1_TLAST   : STD_LOGIC  ;
signal SWITCH2FIFO_1_TID     : STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0)  ;
signal SWITCH2FIFO_1_TDEST   : STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0)  ;
signal SWITCH2FIFO_1_TUSER   : STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0)  ;
signal SWITCH2FIFO_1_TREADY  : STD_LOGIC  ;
signal SWITCH2FIFO_2_TDATA   : STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0)  ;
signal SWITCH2FIFO_2_TSTRB   : STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0)  ;
signal SWITCH2FIFO_2_TKEEP   : STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0)  ;
signal SWITCH2FIFO_2_TVALID  : STD_LOGIC  ;
signal SWITCH2FIFO_2_TLAST   : STD_LOGIC  ;
signal SWITCH2FIFO_2_TID     : STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0)  ;
signal SWITCH2FIFO_2_TDEST   : STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0)  ;
signal SWITCH2FIFO_2_TUSER   : STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0)  ;
signal SWITCH2FIFO_2_TREADY  : STD_LOGIC  ;
signal SWITCH2FIFO_3_TDATA   : STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0)  ;
signal SWITCH2FIFO_3_TSTRB   : STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0)  ;
signal SWITCH2FIFO_3_TKEEP   : STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0)  ;
signal SWITCH2FIFO_3_TVALID  : STD_LOGIC  ;
signal SWITCH2FIFO_3_TLAST   : STD_LOGIC  ;
signal SWITCH2FIFO_3_TID     : STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0)  ;
signal SWITCH2FIFO_3_TDEST   : STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0)  ;
signal SWITCH2FIFO_3_TUSER   : STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0)  ;
signal SWITCH2FIFO_3_TREADY  : STD_LOGIC  ;
signal SWITCH2FIFO_4_TDATA   : STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0)  ;
signal SWITCH2FIFO_4_TSTRB   : STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0)  ;
signal SWITCH2FIFO_4_TKEEP   : STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0)  ;
signal SWITCH2FIFO_4_TVALID  : STD_LOGIC  ;
signal SWITCH2FIFO_4_TLAST   : STD_LOGIC  ;
signal SWITCH2FIFO_4_TID     : STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0)  ;
signal SWITCH2FIFO_4_TDEST   : STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0)  ;
signal SWITCH2FIFO_4_TUSER   : STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0)  ;
signal SWITCH2FIFO_4_TREADY  : STD_LOGIC  ;

begin


axi4s_switch_i : axi4s_switch port map (


SYS2AXI_0_TDATA   => FIFO2SWITCH_0_TDATA,
SYS2AXI_0_TSTRB   => FIFO2SWITCH_0_TSTRB,
SYS2AXI_0_TKEEP   => FIFO2SWITCH_0_TKEEP,
SYS2AXI_0_TVALID  => FIFO2SWITCH_0_TVALID,
SYS2AXI_0_TLAST   => FIFO2SWITCH_0_TLAST,
SYS2AXI_0_TID     => FIFO2SWITCH_0_TID,
SYS2AXI_0_TDEST   => FIFO2SWITCH_0_TDEST,
SYS2AXI_0_TUSER   => FIFO2SWITCH_0_TUSER,
SYS2AXI_0_TREADY  => FIFO2SWITCH_0_TREADY,
SYS2AXI_1_TDATA   => FIFO2SWITCH_1_TDATA,
SYS2AXI_1_TSTRB   => FIFO2SWITCH_1_TSTRB,
SYS2AXI_1_TKEEP   => FIFO2SWITCH_1_TKEEP,
SYS2AXI_1_TVALID  => FIFO2SWITCH_1_TVALID,
SYS2AXI_1_TLAST   => FIFO2SWITCH_1_TLAST,
SYS2AXI_1_TID     => FIFO2SWITCH_1_TID,
SYS2AXI_1_TDEST   => FIFO2SWITCH_1_TDEST,
SYS2AXI_1_TUSER   => FIFO2SWITCH_1_TUSER,
SYS2AXI_1_TREADY  => FIFO2SWITCH_1_TREADY,
SYS2AXI_2_TDATA   => FIFO2SWITCH_2_TDATA,
SYS2AXI_2_TSTRB   => FIFO2SWITCH_2_TSTRB,
SYS2AXI_2_TKEEP   => FIFO2SWITCH_2_TKEEP,
SYS2AXI_2_TVALID  => FIFO2SWITCH_2_TVALID,
SYS2AXI_2_TLAST   => FIFO2SWITCH_2_TLAST,
SYS2AXI_2_TID     => FIFO2SWITCH_2_TID,
SYS2AXI_2_TDEST   => FIFO2SWITCH_2_TDEST,
SYS2AXI_2_TUSER   => FIFO2SWITCH_2_TUSER,
SYS2AXI_2_TREADY  => FIFO2SWITCH_2_TREADY,
SYS2AXI_3_TDATA   => FIFO2SWITCH_3_TDATA,
SYS2AXI_3_TSTRB   => FIFO2SWITCH_3_TSTRB,
SYS2AXI_3_TKEEP   => FIFO2SWITCH_3_TKEEP,
SYS2AXI_3_TVALID  => FIFO2SWITCH_3_TVALID,
SYS2AXI_3_TLAST   => FIFO2SWITCH_3_TLAST,
SYS2AXI_3_TID     => FIFO2SWITCH_3_TID,
SYS2AXI_3_TDEST   => FIFO2SWITCH_3_TDEST,
SYS2AXI_3_TUSER   => FIFO2SWITCH_3_TUSER,
SYS2AXI_3_TREADY  => FIFO2SWITCH_3_TREADY,
SYS2AXI_4_TDATA   => FIFO2SWITCH_4_TDATA,
SYS2AXI_4_TSTRB   => FIFO2SWITCH_4_TSTRB,
SYS2AXI_4_TKEEP   => FIFO2SWITCH_4_TKEEP,
SYS2AXI_4_TVALID  => FIFO2SWITCH_4_TVALID,
SYS2AXI_4_TLAST   => FIFO2SWITCH_4_TLAST,
SYS2AXI_4_TID     => FIFO2SWITCH_4_TID,
SYS2AXI_4_TDEST   => FIFO2SWITCH_4_TDEST,
SYS2AXI_4_TUSER   => FIFO2SWITCH_4_TUSER,
SYS2AXI_4_TREADY  => FIFO2SWITCH_4_TREADY,
AXI2SYS_0_TDATA   => SWITCH2FIFO_0_TDATA,
AXI2SYS_0_TSTRB   => SWITCH2FIFO_0_TSTRB,
AXI2SYS_0_TKEEP   => SWITCH2FIFO_0_TKEEP,
AXI2SYS_0_TVALID  => SWITCH2FIFO_0_TVALID,
AXI2SYS_0_TLAST   => SWITCH2FIFO_0_TLAST,
AXI2SYS_0_TID     => SWITCH2FIFO_0_TID,
AXI2SYS_0_TDEST   => SWITCH2FIFO_0_TDEST,
AXI2SYS_0_TUSER   => SWITCH2FIFO_0_TUSER,
AXI2SYS_0_TREADY  => SWITCH2FIFO_0_TREADY,
AXI2SYS_1_TDATA   => SWITCH2FIFO_1_TDATA,
AXI2SYS_1_TSTRB   => SWITCH2FIFO_1_TSTRB,
AXI2SYS_1_TKEEP   => SWITCH2FIFO_1_TKEEP,
AXI2SYS_1_TVALID  => SWITCH2FIFO_1_TVALID,
AXI2SYS_1_TLAST   => SWITCH2FIFO_1_TLAST,
AXI2SYS_1_TID     => SWITCH2FIFO_1_TID,
AXI2SYS_1_TDEST   => SWITCH2FIFO_1_TDEST,
AXI2SYS_1_TUSER   => SWITCH2FIFO_1_TUSER,
AXI2SYS_1_TREADY  => SWITCH2FIFO_1_TREADY,
AXI2SYS_2_TDATA   => SWITCH2FIFO_2_TDATA,
AXI2SYS_2_TSTRB   => SWITCH2FIFO_2_TSTRB,
AXI2SYS_2_TKEEP   => SWITCH2FIFO_2_TKEEP,
AXI2SYS_2_TVALID  => SWITCH2FIFO_2_TVALID,
AXI2SYS_2_TLAST   => SWITCH2FIFO_2_TLAST,
AXI2SYS_2_TID     => SWITCH2FIFO_2_TID,
AXI2SYS_2_TDEST   => SWITCH2FIFO_2_TDEST,
AXI2SYS_2_TUSER   => SWITCH2FIFO_2_TUSER,
AXI2SYS_2_TREADY  => SWITCH2FIFO_2_TREADY,
AXI2SYS_3_TDATA   => SWITCH2FIFO_3_TDATA,
AXI2SYS_3_TSTRB   => SWITCH2FIFO_3_TSTRB,
AXI2SYS_3_TKEEP   => SWITCH2FIFO_3_TKEEP,
AXI2SYS_3_TVALID  => SWITCH2FIFO_3_TVALID,
AXI2SYS_3_TLAST   => SWITCH2FIFO_3_TLAST,
AXI2SYS_3_TID     => SWITCH2FIFO_3_TID,
AXI2SYS_3_TDEST   => SWITCH2FIFO_3_TDEST,
AXI2SYS_3_TUSER   => SWITCH2FIFO_3_TUSER,
AXI2SYS_3_TREADY  => SWITCH2FIFO_3_TREADY,
AXI2SYS_4_TDATA   => SWITCH2FIFO_4_TDATA,
AXI2SYS_4_TSTRB   => SWITCH2FIFO_4_TSTRB,
AXI2SYS_4_TKEEP   => SWITCH2FIFO_4_TKEEP,
AXI2SYS_4_TVALID  => SWITCH2FIFO_4_TVALID,
AXI2SYS_4_TLAST   => SWITCH2FIFO_4_TLAST,
AXI2SYS_4_TID     => SWITCH2FIFO_4_TID,
AXI2SYS_4_TDEST   => SWITCH2FIFO_4_TDEST,
AXI2SYS_4_TUSER   => SWITCH2FIFO_4_TUSER,
AXI2SYS_4_TREADY  => SWITCH2FIFO_4_TREADY,

clk              => clk,
rst              => rst
) ;


axi4s_in_fifo_0 : axi4s_fifo port map ( 
FIFO_IN_TDATA   => SYS2AXI_0_TDATA    , 
FIFO_IN_TSTRB   => SYS2AXI_0_TSTRB    , 
FIFO_IN_TKEEP   => SYS2AXI_0_TKEEP    , 
FIFO_IN_TVALID  => SYS2AXI_0_TVALID   , 
FIFO_IN_TLAST   => SYS2AXI_0_TLAST    , 
FIFO_IN_TID     => SYS2AXI_0_TID      , 
FIFO_IN_TDEST   => SYS2AXI_0_TDEST    , 
FIFO_IN_TUSER   => SYS2AXI_0_TUSER    , 
FIFO_IN_TREADY  => SYS2AXI_0_TREADY   , 
FIFO_OUT_TDATA  => FIFO2SWITCH_0_TDATA  , 
FIFO_OUT_TSTRB  => FIFO2SWITCH_0_TSTRB  , 
FIFO_OUT_TKEEP  => FIFO2SWITCH_0_TKEEP  , 
FIFO_OUT_TVALID => FIFO2SWITCH_0_TVALID , 
FIFO_OUT_TLAST  => FIFO2SWITCH_0_TLAST  , 
FIFO_OUT_TID    => FIFO2SWITCH_0_TID    , 
FIFO_OUT_TDEST  => FIFO2SWITCH_0_TDEST  , 
FIFO_OUT_TUSER  => FIFO2SWITCH_0_TUSER  , 
FIFO_OUT_TREADY => FIFO2SWITCH_0_TREADY , 
clk => clk, 
rst => rst) ; 

axi4s_in_fifo_1 : axi4s_fifo port map ( 
FIFO_IN_TDATA   => SYS2AXI_1_TDATA    , 
FIFO_IN_TSTRB   => SYS2AXI_1_TSTRB    , 
FIFO_IN_TKEEP   => SYS2AXI_1_TKEEP    , 
FIFO_IN_TVALID  => SYS2AXI_1_TVALID   , 
FIFO_IN_TLAST   => SYS2AXI_1_TLAST    , 
FIFO_IN_TID     => SYS2AXI_1_TID      , 
FIFO_IN_TDEST   => SYS2AXI_1_TDEST    , 
FIFO_IN_TUSER   => SYS2AXI_1_TUSER    , 
FIFO_IN_TREADY  => SYS2AXI_1_TREADY   , 
FIFO_OUT_TDATA  => FIFO2SWITCH_1_TDATA  , 
FIFO_OUT_TSTRB  => FIFO2SWITCH_1_TSTRB  , 
FIFO_OUT_TKEEP  => FIFO2SWITCH_1_TKEEP  , 
FIFO_OUT_TVALID => FIFO2SWITCH_1_TVALID , 
FIFO_OUT_TLAST  => FIFO2SWITCH_1_TLAST  , 
FIFO_OUT_TID    => FIFO2SWITCH_1_TID    , 
FIFO_OUT_TDEST  => FIFO2SWITCH_1_TDEST  , 
FIFO_OUT_TUSER  => FIFO2SWITCH_1_TUSER  , 
FIFO_OUT_TREADY => FIFO2SWITCH_1_TREADY , 
clk => clk, 
rst => rst) ; 

axi4s_in_fifo_2 : axi4s_fifo port map ( 
FIFO_IN_TDATA   => SYS2AXI_2_TDATA    , 
FIFO_IN_TSTRB   => SYS2AXI_2_TSTRB    , 
FIFO_IN_TKEEP   => SYS2AXI_2_TKEEP    , 
FIFO_IN_TVALID  => SYS2AXI_2_TVALID   , 
FIFO_IN_TLAST   => SYS2AXI_2_TLAST    , 
FIFO_IN_TID     => SYS2AXI_2_TID      , 
FIFO_IN_TDEST   => SYS2AXI_2_TDEST    , 
FIFO_IN_TUSER   => SYS2AXI_2_TUSER    , 
FIFO_IN_TREADY  => SYS2AXI_2_TREADY   , 
FIFO_OUT_TDATA  => FIFO2SWITCH_2_TDATA  , 
FIFO_OUT_TSTRB  => FIFO2SWITCH_2_TSTRB  , 
FIFO_OUT_TKEEP  => FIFO2SWITCH_2_TKEEP  , 
FIFO_OUT_TVALID => FIFO2SWITCH_2_TVALID , 
FIFO_OUT_TLAST  => FIFO2SWITCH_2_TLAST  , 
FIFO_OUT_TID    => FIFO2SWITCH_2_TID    , 
FIFO_OUT_TDEST  => FIFO2SWITCH_2_TDEST  , 
FIFO_OUT_TUSER  => FIFO2SWITCH_2_TUSER  , 
FIFO_OUT_TREADY => FIFO2SWITCH_2_TREADY , 
clk => clk, 
rst => rst) ; 

axi4s_in_fifo_3 : axi4s_fifo port map ( 
FIFO_IN_TDATA   => SYS2AXI_3_TDATA    , 
FIFO_IN_TSTRB   => SYS2AXI_3_TSTRB    , 
FIFO_IN_TKEEP   => SYS2AXI_3_TKEEP    , 
FIFO_IN_TVALID  => SYS2AXI_3_TVALID   , 
FIFO_IN_TLAST   => SYS2AXI_3_TLAST    , 
FIFO_IN_TID     => SYS2AXI_3_TID      , 
FIFO_IN_TDEST   => SYS2AXI_3_TDEST    , 
FIFO_IN_TUSER   => SYS2AXI_3_TUSER    , 
FIFO_IN_TREADY  => SYS2AXI_3_TREADY   , 
FIFO_OUT_TDATA  => FIFO2SWITCH_3_TDATA  , 
FIFO_OUT_TSTRB  => FIFO2SWITCH_3_TSTRB  , 
FIFO_OUT_TKEEP  => FIFO2SWITCH_3_TKEEP  , 
FIFO_OUT_TVALID => FIFO2SWITCH_3_TVALID , 
FIFO_OUT_TLAST  => FIFO2SWITCH_3_TLAST  , 
FIFO_OUT_TID    => FIFO2SWITCH_3_TID    , 
FIFO_OUT_TDEST  => FIFO2SWITCH_3_TDEST  , 
FIFO_OUT_TUSER  => FIFO2SWITCH_3_TUSER  , 
FIFO_OUT_TREADY => FIFO2SWITCH_3_TREADY , 
clk => clk, 
rst => rst) ; 

axi4s_in_fifo_4 : axi4s_fifo port map ( 
FIFO_IN_TDATA   => SYS2AXI_4_TDATA    , 
FIFO_IN_TSTRB   => SYS2AXI_4_TSTRB    , 
FIFO_IN_TKEEP   => SYS2AXI_4_TKEEP    , 
FIFO_IN_TVALID  => SYS2AXI_4_TVALID   , 
FIFO_IN_TLAST   => SYS2AXI_4_TLAST    , 
FIFO_IN_TID     => SYS2AXI_4_TID      , 
FIFO_IN_TDEST   => SYS2AXI_4_TDEST    , 
FIFO_IN_TUSER   => SYS2AXI_4_TUSER    , 
FIFO_IN_TREADY  => SYS2AXI_4_TREADY   , 
FIFO_OUT_TDATA  => FIFO2SWITCH_4_TDATA  , 
FIFO_OUT_TSTRB  => FIFO2SWITCH_4_TSTRB  , 
FIFO_OUT_TKEEP  => FIFO2SWITCH_4_TKEEP  , 
FIFO_OUT_TVALID => FIFO2SWITCH_4_TVALID , 
FIFO_OUT_TLAST  => FIFO2SWITCH_4_TLAST  , 
FIFO_OUT_TID    => FIFO2SWITCH_4_TID    , 
FIFO_OUT_TDEST  => FIFO2SWITCH_4_TDEST  , 
FIFO_OUT_TUSER  => FIFO2SWITCH_4_TUSER  , 
FIFO_OUT_TREADY => FIFO2SWITCH_4_TREADY , 
clk => clk, 
rst => rst) ; 

axi4s_out_fifo_0 : axi4s_fifo port map ( 
FIFO_IN_TDATA   => SWITCH2FIFO_0_TDATA    , 
FIFO_IN_TSTRB   => SWITCH2FIFO_0_TSTRB    , 
FIFO_IN_TKEEP   => SWITCH2FIFO_0_TKEEP    , 
FIFO_IN_TVALID  => SWITCH2FIFO_0_TVALID   , 
FIFO_IN_TLAST   => SWITCH2FIFO_0_TLAST    , 
FIFO_IN_TID     => SWITCH2FIFO_0_TID      , 
FIFO_IN_TDEST   => SWITCH2FIFO_0_TDEST    , 
FIFO_IN_TUSER   => SWITCH2FIFO_0_TUSER    , 
FIFO_IN_TREADY  => SWITCH2FIFO_0_TREADY   , 
FIFO_OUT_TDATA  => AXI2SYS_0_TDATA    , 
FIFO_OUT_TSTRB  => AXI2SYS_0_TSTRB    , 
FIFO_OUT_TKEEP  => AXI2SYS_0_TKEEP    , 
FIFO_OUT_TVALID => AXI2SYS_0_TVALID   , 
FIFO_OUT_TLAST  => AXI2SYS_0_TLAST    , 
FIFO_OUT_TID    => AXI2SYS_0_TID      , 
FIFO_OUT_TDEST  => AXI2SYS_0_TDEST    , 
FIFO_OUT_TUSER  => AXI2SYS_0_TUSER    , 
FIFO_OUT_TREADY => AXI2SYS_0_TREADY   , 
clk => clk, 
rst => rst) ; 

axi4s_out_fifo_1 : axi4s_fifo port map ( 
FIFO_IN_TDATA   => SWITCH2FIFO_1_TDATA    , 
FIFO_IN_TSTRB   => SWITCH2FIFO_1_TSTRB    , 
FIFO_IN_TKEEP   => SWITCH2FIFO_1_TKEEP    , 
FIFO_IN_TVALID  => SWITCH2FIFO_1_TVALID   , 
FIFO_IN_TLAST   => SWITCH2FIFO_1_TLAST    , 
FIFO_IN_TID     => SWITCH2FIFO_1_TID      , 
FIFO_IN_TDEST   => SWITCH2FIFO_1_TDEST    , 
FIFO_IN_TUSER   => SWITCH2FIFO_1_TUSER    , 
FIFO_IN_TREADY  => SWITCH2FIFO_1_TREADY   , 
FIFO_OUT_TDATA  => AXI2SYS_1_TDATA    , 
FIFO_OUT_TSTRB  => AXI2SYS_1_TSTRB    , 
FIFO_OUT_TKEEP  => AXI2SYS_1_TKEEP    , 
FIFO_OUT_TVALID => AXI2SYS_1_TVALID   , 
FIFO_OUT_TLAST  => AXI2SYS_1_TLAST    , 
FIFO_OUT_TID    => AXI2SYS_1_TID      , 
FIFO_OUT_TDEST  => AXI2SYS_1_TDEST    , 
FIFO_OUT_TUSER  => AXI2SYS_1_TUSER    , 
FIFO_OUT_TREADY => AXI2SYS_1_TREADY   , 
clk => clk, 
rst => rst) ; 

axi4s_out_fifo_2 : axi4s_fifo port map ( 
FIFO_IN_TDATA   => SWITCH2FIFO_2_TDATA    , 
FIFO_IN_TSTRB   => SWITCH2FIFO_2_TSTRB    , 
FIFO_IN_TKEEP   => SWITCH2FIFO_2_TKEEP    , 
FIFO_IN_TVALID  => SWITCH2FIFO_2_TVALID   , 
FIFO_IN_TLAST   => SWITCH2FIFO_2_TLAST    , 
FIFO_IN_TID     => SWITCH2FIFO_2_TID      , 
FIFO_IN_TDEST   => SWITCH2FIFO_2_TDEST    , 
FIFO_IN_TUSER   => SWITCH2FIFO_2_TUSER    , 
FIFO_IN_TREADY  => SWITCH2FIFO_2_TREADY   , 
FIFO_OUT_TDATA  => AXI2SYS_2_TDATA    , 
FIFO_OUT_TSTRB  => AXI2SYS_2_TSTRB    , 
FIFO_OUT_TKEEP  => AXI2SYS_2_TKEEP    , 
FIFO_OUT_TVALID => AXI2SYS_2_TVALID   , 
FIFO_OUT_TLAST  => AXI2SYS_2_TLAST    , 
FIFO_OUT_TID    => AXI2SYS_2_TID      , 
FIFO_OUT_TDEST  => AXI2SYS_2_TDEST    , 
FIFO_OUT_TUSER  => AXI2SYS_2_TUSER    , 
FIFO_OUT_TREADY => AXI2SYS_2_TREADY   , 
clk => clk, 
rst => rst) ; 

axi4s_out_fifo_3 : axi4s_fifo port map ( 
FIFO_IN_TDATA   => SWITCH2FIFO_3_TDATA    , 
FIFO_IN_TSTRB   => SWITCH2FIFO_3_TSTRB    , 
FIFO_IN_TKEEP   => SWITCH2FIFO_3_TKEEP    , 
FIFO_IN_TVALID  => SWITCH2FIFO_3_TVALID   , 
FIFO_IN_TLAST   => SWITCH2FIFO_3_TLAST    , 
FIFO_IN_TID     => SWITCH2FIFO_3_TID      , 
FIFO_IN_TDEST   => SWITCH2FIFO_3_TDEST    , 
FIFO_IN_TUSER   => SWITCH2FIFO_3_TUSER    , 
FIFO_IN_TREADY  => SWITCH2FIFO_3_TREADY   , 
FIFO_OUT_TDATA  => AXI2SYS_3_TDATA    , 
FIFO_OUT_TSTRB  => AXI2SYS_3_TSTRB    , 
FIFO_OUT_TKEEP  => AXI2SYS_3_TKEEP    , 
FIFO_OUT_TVALID => AXI2SYS_3_TVALID   , 
FIFO_OUT_TLAST  => AXI2SYS_3_TLAST    , 
FIFO_OUT_TID    => AXI2SYS_3_TID      , 
FIFO_OUT_TDEST  => AXI2SYS_3_TDEST    , 
FIFO_OUT_TUSER  => AXI2SYS_3_TUSER    , 
FIFO_OUT_TREADY => AXI2SYS_3_TREADY   , 
clk => clk, 
rst => rst) ; 

axi4s_out_fifo_4 : axi4s_fifo port map ( 
FIFO_IN_TDATA   => SWITCH2FIFO_4_TDATA    , 
FIFO_IN_TSTRB   => SWITCH2FIFO_4_TSTRB    , 
FIFO_IN_TKEEP   => SWITCH2FIFO_4_TKEEP    , 
FIFO_IN_TVALID  => SWITCH2FIFO_4_TVALID   , 
FIFO_IN_TLAST   => SWITCH2FIFO_4_TLAST    , 
FIFO_IN_TID     => SWITCH2FIFO_4_TID      , 
FIFO_IN_TDEST   => SWITCH2FIFO_4_TDEST    , 
FIFO_IN_TUSER   => SWITCH2FIFO_4_TUSER    , 
FIFO_IN_TREADY  => SWITCH2FIFO_4_TREADY   , 
FIFO_OUT_TDATA  => AXI2SYS_4_TDATA    , 
FIFO_OUT_TSTRB  => AXI2SYS_4_TSTRB    , 
FIFO_OUT_TKEEP  => AXI2SYS_4_TKEEP    , 
FIFO_OUT_TVALID => AXI2SYS_4_TVALID   , 
FIFO_OUT_TLAST  => AXI2SYS_4_TLAST    , 
FIFO_OUT_TID    => AXI2SYS_4_TID      , 
FIFO_OUT_TDEST  => AXI2SYS_4_TDEST    , 
FIFO_OUT_TUSER  => AXI2SYS_4_TUSER    , 
FIFO_OUT_TREADY => AXI2SYS_4_TREADY   , 
clk => clk, 
rst => rst) ; 


end imp;
library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

use work.axi4s_pkg.all ;
use work.axi4s_switch_pkg.all ;

entity axi4s_switch is
port (

SYS2AXI_0_TDATA   : IN  STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
SYS2AXI_0_TSTRB   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_0_TKEEP   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_0_TVALID  : IN  STD_LOGIC;
SYS2AXI_0_TLAST   : IN  STD_LOGIC;
SYS2AXI_0_TID     : IN  STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
SYS2AXI_0_TDEST   : IN  STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
SYS2AXI_0_TUSER   : IN  STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
SYS2AXI_0_TREADY  : OUT STD_LOGIC;
SYS2AXI_1_TDATA   : IN  STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
SYS2AXI_1_TSTRB   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_1_TKEEP   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_1_TVALID  : IN  STD_LOGIC;
SYS2AXI_1_TLAST   : IN  STD_LOGIC;
SYS2AXI_1_TID     : IN  STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
SYS2AXI_1_TDEST   : IN  STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
SYS2AXI_1_TUSER   : IN  STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
SYS2AXI_1_TREADY  : OUT STD_LOGIC;
SYS2AXI_2_TDATA   : IN  STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
SYS2AXI_2_TSTRB   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_2_TKEEP   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_2_TVALID  : IN  STD_LOGIC;
SYS2AXI_2_TLAST   : IN  STD_LOGIC;
SYS2AXI_2_TID     : IN  STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
SYS2AXI_2_TDEST   : IN  STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
SYS2AXI_2_TUSER   : IN  STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
SYS2AXI_2_TREADY  : OUT STD_LOGIC;
SYS2AXI_3_TDATA   : IN  STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
SYS2AXI_3_TSTRB   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_3_TKEEP   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_3_TVALID  : IN  STD_LOGIC;
SYS2AXI_3_TLAST   : IN  STD_LOGIC;
SYS2AXI_3_TID     : IN  STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
SYS2AXI_3_TDEST   : IN  STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
SYS2AXI_3_TUSER   : IN  STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
SYS2AXI_3_TREADY  : OUT STD_LOGIC;
SYS2AXI_4_TDATA   : IN  STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
SYS2AXI_4_TSTRB   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_4_TKEEP   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_4_TVALID  : IN  STD_LOGIC;
SYS2AXI_4_TLAST   : IN  STD_LOGIC;
SYS2AXI_4_TID     : IN  STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
SYS2AXI_4_TDEST   : IN  STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
SYS2AXI_4_TUSER   : IN  STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
SYS2AXI_4_TREADY  : OUT STD_LOGIC;
AXI2SYS_0_TDATA   : OUT STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
AXI2SYS_0_TSTRB   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_0_TKEEP   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_0_TVALID  : OUT STD_LOGIC;
AXI2SYS_0_TLAST   : OUT STD_LOGIC;
AXI2SYS_0_TID     : OUT STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
AXI2SYS_0_TDEST   : OUT STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
AXI2SYS_0_TUSER   : OUT STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
AXI2SYS_0_TREADY  : in  STD_LOGIC;
AXI2SYS_1_TDATA   : OUT STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
AXI2SYS_1_TSTRB   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_1_TKEEP   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_1_TVALID  : OUT STD_LOGIC;
AXI2SYS_1_TLAST   : OUT STD_LOGIC;
AXI2SYS_1_TID     : OUT STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
AXI2SYS_1_TDEST   : OUT STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
AXI2SYS_1_TUSER   : OUT STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
AXI2SYS_1_TREADY  : in  STD_LOGIC;
AXI2SYS_2_TDATA   : OUT STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
AXI2SYS_2_TSTRB   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_2_TKEEP   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_2_TVALID  : OUT STD_LOGIC;
AXI2SYS_2_TLAST   : OUT STD_LOGIC;
AXI2SYS_2_TID     : OUT STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
AXI2SYS_2_TDEST   : OUT STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
AXI2SYS_2_TUSER   : OUT STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
AXI2SYS_2_TREADY  : in  STD_LOGIC;
AXI2SYS_3_TDATA   : OUT STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
AXI2SYS_3_TSTRB   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_3_TKEEP   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_3_TVALID  : OUT STD_LOGIC;
AXI2SYS_3_TLAST   : OUT STD_LOGIC;
AXI2SYS_3_TID     : OUT STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
AXI2SYS_3_TDEST   : OUT STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
AXI2SYS_3_TUSER   : OUT STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
AXI2SYS_3_TREADY  : in  STD_LOGIC;
AXI2SYS_4_TDATA   : OUT STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
AXI2SYS_4_TSTRB   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_4_TKEEP   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_4_TVALID  : OUT STD_LOGIC;
AXI2SYS_4_TLAST   : OUT STD_LOGIC;
AXI2SYS_4_TID     : OUT STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
AXI2SYS_4_TDEST   : OUT STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
AXI2SYS_4_TUSER   : OUT STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
AXI2SYS_4_TREADY  : in  STD_LOGIC;

  clk           : in std_logic ;
  rst           : in std_logic

) ;
end entity axi4s_switch ;

architecture imp of axi4s_switch is

component axi4s_core is
port (
SYS2AXI_0_TDATA   : IN  STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
SYS2AXI_0_TSTRB   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_0_TKEEP   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_0_TVALID  : IN  STD_LOGIC;
SYS2AXI_0_TLAST   : IN  STD_LOGIC;
SYS2AXI_0_TID     : IN  STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
SYS2AXI_0_TDEST   : IN  STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
SYS2AXI_0_TUSER   : IN  STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
SYS2AXI_0_TREADY  : OUT STD_LOGIC;
SYS2AXI_1_TDATA   : IN  STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
SYS2AXI_1_TSTRB   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_1_TKEEP   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_1_TVALID  : IN  STD_LOGIC;
SYS2AXI_1_TLAST   : IN  STD_LOGIC;
SYS2AXI_1_TID     : IN  STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
SYS2AXI_1_TDEST   : IN  STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
SYS2AXI_1_TUSER   : IN  STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
SYS2AXI_1_TREADY  : OUT STD_LOGIC;
SYS2AXI_2_TDATA   : IN  STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
SYS2AXI_2_TSTRB   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_2_TKEEP   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_2_TVALID  : IN  STD_LOGIC;
SYS2AXI_2_TLAST   : IN  STD_LOGIC;
SYS2AXI_2_TID     : IN  STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
SYS2AXI_2_TDEST   : IN  STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
SYS2AXI_2_TUSER   : IN  STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
SYS2AXI_2_TREADY  : OUT STD_LOGIC;
SYS2AXI_3_TDATA   : IN  STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
SYS2AXI_3_TSTRB   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_3_TKEEP   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_3_TVALID  : IN  STD_LOGIC;
SYS2AXI_3_TLAST   : IN  STD_LOGIC;
SYS2AXI_3_TID     : IN  STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
SYS2AXI_3_TDEST   : IN  STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
SYS2AXI_3_TUSER   : IN  STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
SYS2AXI_3_TREADY  : OUT STD_LOGIC;
SYS2AXI_4_TDATA   : IN  STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
SYS2AXI_4_TSTRB   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_4_TKEEP   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_4_TVALID  : IN  STD_LOGIC;
SYS2AXI_4_TLAST   : IN  STD_LOGIC;
SYS2AXI_4_TID     : IN  STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
SYS2AXI_4_TDEST   : IN  STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
SYS2AXI_4_TUSER   : IN  STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
SYS2AXI_4_TREADY  : OUT STD_LOGIC;
AXI2SYS_0_TDATA   : OUT STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
AXI2SYS_0_TSTRB   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_0_TKEEP   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_0_TVALID  : OUT STD_LOGIC;
AXI2SYS_0_TLAST   : OUT STD_LOGIC;
AXI2SYS_0_TID     : OUT STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
AXI2SYS_0_TDEST   : OUT STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
AXI2SYS_0_TUSER   : OUT STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
AXI2SYS_0_TREADY  : in  STD_LOGIC;
AXI2SYS_1_TDATA   : OUT STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
AXI2SYS_1_TSTRB   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_1_TKEEP   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_1_TVALID  : OUT STD_LOGIC;
AXI2SYS_1_TLAST   : OUT STD_LOGIC;
AXI2SYS_1_TID     : OUT STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
AXI2SYS_1_TDEST   : OUT STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
AXI2SYS_1_TUSER   : OUT STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
AXI2SYS_1_TREADY  : in  STD_LOGIC;
AXI2SYS_2_TDATA   : OUT STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
AXI2SYS_2_TSTRB   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_2_TKEEP   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_2_TVALID  : OUT STD_LOGIC;
AXI2SYS_2_TLAST   : OUT STD_LOGIC;
AXI2SYS_2_TID     : OUT STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
AXI2SYS_2_TDEST   : OUT STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
AXI2SYS_2_TUSER   : OUT STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
AXI2SYS_2_TREADY  : in  STD_LOGIC;
AXI2SYS_3_TDATA   : OUT STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
AXI2SYS_3_TSTRB   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_3_TKEEP   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_3_TVALID  : OUT STD_LOGIC;
AXI2SYS_3_TLAST   : OUT STD_LOGIC;
AXI2SYS_3_TID     : OUT STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
AXI2SYS_3_TDEST   : OUT STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
AXI2SYS_3_TUSER   : OUT STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
AXI2SYS_3_TREADY  : in  STD_LOGIC;
AXI2SYS_4_TDATA   : OUT STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
AXI2SYS_4_TSTRB   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_4_TKEEP   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_4_TVALID  : OUT STD_LOGIC;
AXI2SYS_4_TLAST   : OUT STD_LOGIC;
AXI2SYS_4_TID     : OUT STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
AXI2SYS_4_TDEST   : OUT STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
AXI2SYS_4_TUSER   : OUT STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
AXI2SYS_4_TREADY  : in  STD_LOGIC;

  output_select : in    natural_vector(0 to O_RADIX-1) ;
  output_inuse  : in    std_logic_vector(0 to O_RADIX-1) ;
  input_mask    : in    io_array(0 to I_RADIX-1)
  ) ;
end component axi4s_core ;

signal axi_input : axi4s_vector_type(0 to I_RADIX-1) ;

signal output_select       : natural_vector(0 to O_RADIX-1) ;
signal output_select_next  : natural_vector(0 to O_RADIX-1) ;
signal input_mask          : io_array(0 to I_RADIX-1) ;

signal input_inuse_reg     : std_logic_vector(0 to I_RADIX-1) ;
signal input_inuse_next    : std_logic_vector(0 to I_RADIX-1) ;
signal input_release_next  : std_logic_vector(0 to I_RADIX-1) ;
signal output_inuse_reg    : std_logic_vector(0 to O_RADIX-1) ;
signal output_inuse_next   : std_logic_vector(0 to O_RADIX-1) ;
signal output_release_next : std_logic_vector(0 to O_RADIX-1) ;

signal wait_queue_reg  : natural_vector(0 to I_RADIX-1)  ;
signal wait_queue_next : natural_vector(0 to I_RADIX-1)  ;
signal dest_queue_reg  : io_array(0 to I_RADIX-1) ;
signal dest_queue_next : io_array(0 to I_RADIX-1) ;

signal work_queue_reg    : std_logic_vector(0 to I_RADIX-1) ;
signal work_queue_next   : std_logic_vector(0 to I_RADIX-1) ;
signal work_release_next : std_logic_vector(0 to I_RADIX-1) ;

signal current_count_reg : natural ; 
signal current_count_next: natural ;
signal push_count_reg    : natural ; 
signal push_count_next   : natural ;
signal pop_count_reg     : natural ; 
signal pop_count_next    : natural ;

signal new_request       : std_logic_vector(0 to I_RADIX-1) ;
signal dest_request      : io_array(0 to I_RADIX-1) ;

signal push_tag : std_logic_vector(0 to I_RADIX-1) ;
signal pop_tag  : std_logic_vector(0 to I_RADIX-1) ;
signal current_tag  : std_logic_vector(0 to I_RADIX-1) ;




begin

AXI_INPUT(0).TDATA  <= SYS2AXI_0_TDATA  ;
AXI_INPUT(0).TSTRB  <= SYS2AXI_0_TSTRB  ;
AXI_INPUT(0).TKEEP  <= SYS2AXI_0_TKEEP  ;
AXI_INPUT(0).TVALID <= SYS2AXI_0_TVALID ;
AXI_INPUT(0).TLAST  <= SYS2AXI_0_TLAST  ;
AXI_INPUT(0).TID    <= SYS2AXI_0_TID    ;
AXI_INPUT(0).TDEST  <= SYS2AXI_0_TDEST  ;
AXI_INPUT(0).TUSER  <= SYS2AXI_0_TUSER  ;
SYS2AXI_0_TREADY    <= AXI_INPUT(0).TREADY WHEN WORK_QUEUE_REG(0) = '1' ELSE '0' ; 
AXI_INPUT(1).TDATA  <= SYS2AXI_1_TDATA  ;
AXI_INPUT(1).TSTRB  <= SYS2AXI_1_TSTRB  ;
AXI_INPUT(1).TKEEP  <= SYS2AXI_1_TKEEP  ;
AXI_INPUT(1).TVALID <= SYS2AXI_1_TVALID ;
AXI_INPUT(1).TLAST  <= SYS2AXI_1_TLAST  ;
AXI_INPUT(1).TID    <= SYS2AXI_1_TID    ;
AXI_INPUT(1).TDEST  <= SYS2AXI_1_TDEST  ;
AXI_INPUT(1).TUSER  <= SYS2AXI_1_TUSER  ;
SYS2AXI_1_TREADY    <= AXI_INPUT(1).TREADY WHEN WORK_QUEUE_REG(1) = '1' ELSE '0' ; 
AXI_INPUT(2).TDATA  <= SYS2AXI_2_TDATA  ;
AXI_INPUT(2).TSTRB  <= SYS2AXI_2_TSTRB  ;
AXI_INPUT(2).TKEEP  <= SYS2AXI_2_TKEEP  ;
AXI_INPUT(2).TVALID <= SYS2AXI_2_TVALID ;
AXI_INPUT(2).TLAST  <= SYS2AXI_2_TLAST  ;
AXI_INPUT(2).TID    <= SYS2AXI_2_TID    ;
AXI_INPUT(2).TDEST  <= SYS2AXI_2_TDEST  ;
AXI_INPUT(2).TUSER  <= SYS2AXI_2_TUSER  ;
SYS2AXI_2_TREADY    <= AXI_INPUT(2).TREADY WHEN WORK_QUEUE_REG(2) = '1' ELSE '0' ; 
AXI_INPUT(3).TDATA  <= SYS2AXI_3_TDATA  ;
AXI_INPUT(3).TSTRB  <= SYS2AXI_3_TSTRB  ;
AXI_INPUT(3).TKEEP  <= SYS2AXI_3_TKEEP  ;
AXI_INPUT(3).TVALID <= SYS2AXI_3_TVALID ;
AXI_INPUT(3).TLAST  <= SYS2AXI_3_TLAST  ;
AXI_INPUT(3).TID    <= SYS2AXI_3_TID    ;
AXI_INPUT(3).TDEST  <= SYS2AXI_3_TDEST  ;
AXI_INPUT(3).TUSER  <= SYS2AXI_3_TUSER  ;
SYS2AXI_3_TREADY    <= AXI_INPUT(3).TREADY WHEN WORK_QUEUE_REG(3) = '1' ELSE '0' ; 
AXI_INPUT(4).TDATA  <= SYS2AXI_4_TDATA  ;
AXI_INPUT(4).TSTRB  <= SYS2AXI_4_TSTRB  ;
AXI_INPUT(4).TKEEP  <= SYS2AXI_4_TKEEP  ;
AXI_INPUT(4).TVALID <= SYS2AXI_4_TVALID ;
AXI_INPUT(4).TLAST  <= SYS2AXI_4_TLAST  ;
AXI_INPUT(4).TID    <= SYS2AXI_4_TID    ;
AXI_INPUT(4).TDEST  <= SYS2AXI_4_TDEST  ;
AXI_INPUT(4).TUSER  <= SYS2AXI_4_TUSER  ;
SYS2AXI_4_TREADY    <= AXI_INPUT(4).TREADY WHEN WORK_QUEUE_REG(4) = '1' ELSE '0' ; 

  NEW_REQUEST_GEN : for i in 0 to I_RADIX-1 generate
    CATCH_PROC : process (axi_input(i).tvalid,input_inuse_reg(i)) is
    begin
      if axi_input(i).tvalid = '1' and input_inuse_reg(i) = '0' then
        new_request(i)        <= '1' ; 
        dest_request(i)       <= axi_input(i).tdest ;
        input_inuse_next(i)   <= '1' ;
      else
        new_request(i)        <= '0' ;
        dest_request(i)       <= (others => '0') ;
        input_inuse_next(i)   <= input_inuse_reg(i) ;
      end if ;
    end process CATCH_PROC ;
  end generate NEW_REQUEST_GEN ;

  PUSH_QUEUE_PROC : process (new_request,dest_request) is
    variable count_v       : natural ;
    variable push_queue_v  : natural_vector(0 to I_RADIX-1) ;
    variable dest_queue_v  : io_array(0 to I_RADIX-1) ;
    variable push_tag_v    : std_logic_vector(0 to I_RADIX-1) ;
  begin
    count_v                := 0 ;
    push_queue_v           := (others => 0) ;
    dest_queue_v           := (others => (others => '0')) ;
    push_tag_v             := (others => '0') ;

    for i in I_RADIX-1 downto 0 loop           
      if new_request(i) = '1' then             
        push_queue_v(count_v) := i ;           
        dest_queue_v(count_v) := dest_request(i) ;
        push_tag_v(count_v)   := '1' ;
        count_v               := count_v + 1 ; 
      end if ;
    end loop ;
    push_count_next           <= count_v ;
    wait_queue_next           <= push_queue_v ;  
    dest_queue_next           <= dest_queue_v ;
    push_tag                  <= push_tag_v ;
  end process PUSH_QUEUE_PROC ; 

  POP_QUEUE_PROC : process (current_count_reg, dest_queue_reg, work_queue_reg,
                            wait_queue_reg, output_select, output_inuse_reg) is
    variable work_queue_v        : std_logic_vector(0 to I_RADIX-1) ;
    variable count_v             : natural ;
    variable output_temp_v       : std_logic_vector(0 to O_RADIX-1) ;
    variable output_req_v        : std_logic_vector(0 to O_RADIX-1) ;
    variable and_or_v            : std_logic ;
    variable output_select_v     : natural_vector(0 to O_RADIX-1) ;
    variable output_select_gen_v : natural_vector(0 to O_RADIX-1) ;
    variable pop_tag_v           : std_logic_vector(0 to I_RADIX-1) ;
  begin
    count_v             := 0 ;
    output_req_v        := (others => '0') ;
    and_or_v            := '0' ;
    output_select_v     := (others => 0) ;
    output_select_gen_v := (others => 0) ;   
    pop_tag_v           := (others => '0') ;


    work_queue_v        := work_queue_reg ;    
    output_temp_v       := output_inuse_reg ;  
    output_select_v     := output_select ;     
 
    for i in 0 to I_RADIX-1 loop  
      output_req_v          := dest_queue_reg(i) ;
      and_or_v              := vector_and_or(output_req_v,output_temp_v) ;
      if and_or_v = '0' and i < current_count_reg then 
        output_select_gen_v := output_select_gen(output_req_v,wait_queue_reg(i)) ;
        output_select_v     := natural_vector_or(output_select_v, output_select_gen_v) ;
        output_temp_v := output_temp_v or output_req_v ;
        work_queue_v(wait_queue_reg(i)) := '1' ;
        pop_tag_v(count_v) := '1' ;
        count_v  := count_v + 1 ; 
      else     
        exit ; 
      end if ;
    end loop ;
    output_select_next  <= output_select_v ;
    work_queue_next     <= work_queue_v  ;
    pop_count_next      <= count_v ;
    output_inuse_next   <= output_temp_v ;
    pop_tag             <= pop_tag_v ;
  end process POP_QUEUE_PROC ;


  CLK_PROC : process (clk) is
  begin
    if clk'event and clk = '1' then
      if rst = '1' then
        current_count_reg <= 0 ;
        input_inuse_reg   <= (others => '0') ;
        output_inuse_reg  <= (others => '0') ;
        
        work_queue_reg    <= (others => '0') ;
        output_select     <= (others => 0) ;

        wait_queue_reg    <= (others => 0) ;
        dest_queue_reg    <= (others => (others => '0')) ;
        current_tag       <= (others => '0') ;
      else
        current_count_reg <= current_count_reg + push_count_next - 
                              pop_count_next ;

        input_inuse_reg   <= input_inuse_next xor input_release_next ;
        output_inuse_reg  <= output_inuse_next xor output_release_next ;

        work_queue_reg    <= work_queue_next xor work_release_next ;
        output_select     <= cal_output_select(output_select_next,output_release_next) ;

        wait_queue_reg    <= cal_wait_queue(wait_queue_reg,
                                            wait_queue_next,
                                            current_tag,
                                            push_tag,
                                            pop_tag) ;
        dest_queue_reg    <= cal_dest_queue(dest_queue_reg,
                                            dest_queue_next,
                                            current_tag,
                                            push_tag,
                                            pop_tag) ;
        current_tag       <= cal_new_tag(current_tag,push_tag,pop_tag) ;

      end if ;
    end if ;
  end process CLK_PROC ;


  CONTROL_GEN : for i in 0 to I_RADIX-1 generate
  begin
    work_release_next(i)  <= '1' when axi_input(i).tvalid = '1' and 
                                      axi_input(i).tlast = '1'
                             else '0' ;
    input_release_next(i) <= work_release_next(i) ;
    input_mask(i)         <= axi_input(i).tdest when axi_input(i).tvalid = '1'
                             else (others => '0') ;
  end generate CONTROL_GEN ;

  OUTPUT_RELEASE_PROC : process (axi_input) is
    variable temp : std_logic_vector(0 to O_RADIX-1) ;
  begin
    temp := (others => '0') ;
    for i in 0 to I_RADIX-1 loop
      if axi_input(i).tvalid = '1' and axi_input(i).tlast = '1' then
        temp := temp or axi_input(i).tdest ;
      end if ;
    end loop ;
    output_release_next <= temp ;  
  end process OUTPUT_RELEASE_PROC ;


  AXI4S_CORE_I : axi4s_core
  port map (
SYS2AXI_0_TDATA   => AXI_INPUT(0).TDATA,
SYS2AXI_0_TSTRB   => AXI_INPUT(0).TSTRB,
SYS2AXI_0_TKEEP   => AXI_INPUT(0).TKEEP,
SYS2AXI_0_TVALID  => AXI_INPUT(0).TVALID,
SYS2AXI_0_TLAST   => AXI_INPUT(0).TLAST,
SYS2AXI_0_TID     => AXI_INPUT(0).TID,
SYS2AXI_0_TDEST   => AXI_INPUT(0).TDEST,
SYS2AXI_0_TUSER   => AXI_INPUT(0).TUSER,
SYS2AXI_0_TREADY  => AXI_INPUT(0).TREADY,
SYS2AXI_1_TDATA   => AXI_INPUT(1).TDATA,
SYS2AXI_1_TSTRB   => AXI_INPUT(1).TSTRB,
SYS2AXI_1_TKEEP   => AXI_INPUT(1).TKEEP,
SYS2AXI_1_TVALID  => AXI_INPUT(1).TVALID,
SYS2AXI_1_TLAST   => AXI_INPUT(1).TLAST,
SYS2AXI_1_TID     => AXI_INPUT(1).TID,
SYS2AXI_1_TDEST   => AXI_INPUT(1).TDEST,
SYS2AXI_1_TUSER   => AXI_INPUT(1).TUSER,
SYS2AXI_1_TREADY  => AXI_INPUT(1).TREADY,
SYS2AXI_2_TDATA   => AXI_INPUT(2).TDATA,
SYS2AXI_2_TSTRB   => AXI_INPUT(2).TSTRB,
SYS2AXI_2_TKEEP   => AXI_INPUT(2).TKEEP,
SYS2AXI_2_TVALID  => AXI_INPUT(2).TVALID,
SYS2AXI_2_TLAST   => AXI_INPUT(2).TLAST,
SYS2AXI_2_TID     => AXI_INPUT(2).TID,
SYS2AXI_2_TDEST   => AXI_INPUT(2).TDEST,
SYS2AXI_2_TUSER   => AXI_INPUT(2).TUSER,
SYS2AXI_2_TREADY  => AXI_INPUT(2).TREADY,
SYS2AXI_3_TDATA   => AXI_INPUT(3).TDATA,
SYS2AXI_3_TSTRB   => AXI_INPUT(3).TSTRB,
SYS2AXI_3_TKEEP   => AXI_INPUT(3).TKEEP,
SYS2AXI_3_TVALID  => AXI_INPUT(3).TVALID,
SYS2AXI_3_TLAST   => AXI_INPUT(3).TLAST,
SYS2AXI_3_TID     => AXI_INPUT(3).TID,
SYS2AXI_3_TDEST   => AXI_INPUT(3).TDEST,
SYS2AXI_3_TUSER   => AXI_INPUT(3).TUSER,
SYS2AXI_3_TREADY  => AXI_INPUT(3).TREADY,
SYS2AXI_4_TDATA   => AXI_INPUT(4).TDATA,
SYS2AXI_4_TSTRB   => AXI_INPUT(4).TSTRB,
SYS2AXI_4_TKEEP   => AXI_INPUT(4).TKEEP,
SYS2AXI_4_TVALID  => AXI_INPUT(4).TVALID,
SYS2AXI_4_TLAST   => AXI_INPUT(4).TLAST,
SYS2AXI_4_TID     => AXI_INPUT(4).TID,
SYS2AXI_4_TDEST   => AXI_INPUT(4).TDEST,
SYS2AXI_4_TUSER   => AXI_INPUT(4).TUSER,
SYS2AXI_4_TREADY  => AXI_INPUT(4).TREADY,
AXI2SYS_0_TDATA   => AXI2SYS_0_TDATA,
AXI2SYS_0_TSTRB   => AXI2SYS_0_TSTRB,
AXI2SYS_0_TKEEP   => AXI2SYS_0_TKEEP,
AXI2SYS_0_TVALID  => AXI2SYS_0_TVALID,
AXI2SYS_0_TLAST   => AXI2SYS_0_TLAST,
AXI2SYS_0_TID     => AXI2SYS_0_TID,
AXI2SYS_0_TDEST   => AXI2SYS_0_TDEST,
AXI2SYS_0_TUSER   => AXI2SYS_0_TUSER,
AXI2SYS_0_TREADY  => AXI2SYS_0_TREADY,
AXI2SYS_1_TDATA   => AXI2SYS_1_TDATA,
AXI2SYS_1_TSTRB   => AXI2SYS_1_TSTRB,
AXI2SYS_1_TKEEP   => AXI2SYS_1_TKEEP,
AXI2SYS_1_TVALID  => AXI2SYS_1_TVALID,
AXI2SYS_1_TLAST   => AXI2SYS_1_TLAST,
AXI2SYS_1_TID     => AXI2SYS_1_TID,
AXI2SYS_1_TDEST   => AXI2SYS_1_TDEST,
AXI2SYS_1_TUSER   => AXI2SYS_1_TUSER,
AXI2SYS_1_TREADY  => AXI2SYS_1_TREADY,
AXI2SYS_2_TDATA   => AXI2SYS_2_TDATA,
AXI2SYS_2_TSTRB   => AXI2SYS_2_TSTRB,
AXI2SYS_2_TKEEP   => AXI2SYS_2_TKEEP,
AXI2SYS_2_TVALID  => AXI2SYS_2_TVALID,
AXI2SYS_2_TLAST   => AXI2SYS_2_TLAST,
AXI2SYS_2_TID     => AXI2SYS_2_TID,
AXI2SYS_2_TDEST   => AXI2SYS_2_TDEST,
AXI2SYS_2_TUSER   => AXI2SYS_2_TUSER,
AXI2SYS_2_TREADY  => AXI2SYS_2_TREADY,
AXI2SYS_3_TDATA   => AXI2SYS_3_TDATA,
AXI2SYS_3_TSTRB   => AXI2SYS_3_TSTRB,
AXI2SYS_3_TKEEP   => AXI2SYS_3_TKEEP,
AXI2SYS_3_TVALID  => AXI2SYS_3_TVALID,
AXI2SYS_3_TLAST   => AXI2SYS_3_TLAST,
AXI2SYS_3_TID     => AXI2SYS_3_TID,
AXI2SYS_3_TDEST   => AXI2SYS_3_TDEST,
AXI2SYS_3_TUSER   => AXI2SYS_3_TUSER,
AXI2SYS_3_TREADY  => AXI2SYS_3_TREADY,
AXI2SYS_4_TDATA   => AXI2SYS_4_TDATA,
AXI2SYS_4_TSTRB   => AXI2SYS_4_TSTRB,
AXI2SYS_4_TKEEP   => AXI2SYS_4_TKEEP,
AXI2SYS_4_TVALID  => AXI2SYS_4_TVALID,
AXI2SYS_4_TLAST   => AXI2SYS_4_TLAST,
AXI2SYS_4_TID     => AXI2SYS_4_TID,
AXI2SYS_4_TDEST   => AXI2SYS_4_TDEST,
AXI2SYS_4_TUSER   => AXI2SYS_4_TUSER,
AXI2SYS_4_TREADY  => AXI2SYS_4_TREADY,

    output_select => output_select,
    output_inuse  => output_inuse_reg,
    input_mask    => input_mask
  ) ;

end imp;
library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

use work.axi4s_pkg.all ;
use work.axi4s_switch_pkg.all ;

entity axi4s_core is
port (

SYS2AXI_0_TDATA   : IN  STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
SYS2AXI_0_TSTRB   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_0_TKEEP   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_0_TVALID  : IN  STD_LOGIC;
SYS2AXI_0_TLAST   : IN  STD_LOGIC;
SYS2AXI_0_TID     : IN  STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
SYS2AXI_0_TDEST   : IN  STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
SYS2AXI_0_TUSER   : IN  STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
SYS2AXI_0_TREADY  : OUT STD_LOGIC;
SYS2AXI_1_TDATA   : IN  STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
SYS2AXI_1_TSTRB   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_1_TKEEP   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_1_TVALID  : IN  STD_LOGIC;
SYS2AXI_1_TLAST   : IN  STD_LOGIC;
SYS2AXI_1_TID     : IN  STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
SYS2AXI_1_TDEST   : IN  STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
SYS2AXI_1_TUSER   : IN  STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
SYS2AXI_1_TREADY  : OUT STD_LOGIC;
SYS2AXI_2_TDATA   : IN  STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
SYS2AXI_2_TSTRB   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_2_TKEEP   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_2_TVALID  : IN  STD_LOGIC;
SYS2AXI_2_TLAST   : IN  STD_LOGIC;
SYS2AXI_2_TID     : IN  STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
SYS2AXI_2_TDEST   : IN  STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
SYS2AXI_2_TUSER   : IN  STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
SYS2AXI_2_TREADY  : OUT STD_LOGIC;
SYS2AXI_3_TDATA   : IN  STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
SYS2AXI_3_TSTRB   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_3_TKEEP   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_3_TVALID  : IN  STD_LOGIC;
SYS2AXI_3_TLAST   : IN  STD_LOGIC;
SYS2AXI_3_TID     : IN  STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
SYS2AXI_3_TDEST   : IN  STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
SYS2AXI_3_TUSER   : IN  STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
SYS2AXI_3_TREADY  : OUT STD_LOGIC;
SYS2AXI_4_TDATA   : IN  STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
SYS2AXI_4_TSTRB   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_4_TKEEP   : IN  STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
SYS2AXI_4_TVALID  : IN  STD_LOGIC;
SYS2AXI_4_TLAST   : IN  STD_LOGIC;
SYS2AXI_4_TID     : IN  STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
SYS2AXI_4_TDEST   : IN  STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
SYS2AXI_4_TUSER   : IN  STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
SYS2AXI_4_TREADY  : OUT STD_LOGIC;
AXI2SYS_0_TDATA   : OUT STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
AXI2SYS_0_TSTRB   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_0_TKEEP   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_0_TVALID  : OUT STD_LOGIC;
AXI2SYS_0_TLAST   : OUT STD_LOGIC;
AXI2SYS_0_TID     : OUT STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
AXI2SYS_0_TDEST   : OUT STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
AXI2SYS_0_TUSER   : OUT STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
AXI2SYS_0_TREADY  : in  STD_LOGIC;
AXI2SYS_1_TDATA   : OUT STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
AXI2SYS_1_TSTRB   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_1_TKEEP   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_1_TVALID  : OUT STD_LOGIC;
AXI2SYS_1_TLAST   : OUT STD_LOGIC;
AXI2SYS_1_TID     : OUT STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
AXI2SYS_1_TDEST   : OUT STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
AXI2SYS_1_TUSER   : OUT STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
AXI2SYS_1_TREADY  : in  STD_LOGIC;
AXI2SYS_2_TDATA   : OUT STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
AXI2SYS_2_TSTRB   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_2_TKEEP   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_2_TVALID  : OUT STD_LOGIC;
AXI2SYS_2_TLAST   : OUT STD_LOGIC;
AXI2SYS_2_TID     : OUT STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
AXI2SYS_2_TDEST   : OUT STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
AXI2SYS_2_TUSER   : OUT STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
AXI2SYS_2_TREADY  : in  STD_LOGIC;
AXI2SYS_3_TDATA   : OUT STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
AXI2SYS_3_TSTRB   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_3_TKEEP   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_3_TVALID  : OUT STD_LOGIC;
AXI2SYS_3_TLAST   : OUT STD_LOGIC;
AXI2SYS_3_TID     : OUT STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
AXI2SYS_3_TDEST   : OUT STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
AXI2SYS_3_TUSER   : OUT STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
AXI2SYS_3_TREADY  : in  STD_LOGIC;
AXI2SYS_4_TDATA   : OUT STD_LOGIC_VECTOR(C_SWITCH_WIDTH-1 DOWNTO 0);
AXI2SYS_4_TSTRB   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_4_TKEEP   : OUT STD_LOGIC_VECTOR(C_DATA_WIDTH_IN_BYTE-1 DOWNTO 0);
AXI2SYS_4_TVALID  : OUT STD_LOGIC;
AXI2SYS_4_TLAST   : OUT STD_LOGIC;
AXI2SYS_4_TID     : OUT STD_LOGIC_VECTOR(C_TID_WIDTH-1 DOWNTO 0);
AXI2SYS_4_TDEST   : OUT STD_LOGIC_VECTOR(C_TDEST_WIDTH-1 DOWNTO 0);
AXI2SYS_4_TUSER   : OUT STD_LOGIC_VECTOR(C_TUSER_WIDTH-1 DOWNTO 0);
AXI2SYS_4_TREADY  : in  STD_LOGIC;

  output_select : in    natural_vector(0 to O_RADIX-1);
  output_inuse  : in    std_logic_vector(0 to O_RADIX-1) ;
  input_mask    : in    io_array(0 to I_RADIX-1)
) ;

end entity axi4s_core ;

architecture beh of axi4s_core is

  signal axi_input  : axi4s_vector_type(0 to I_RADIX-1) ;
  signal axi_output : axi4s_vector_type(0 to O_RADIX-1) ;

  component dst_rdy_mask
    generic (
      radix : integer);
    port (
      mask       : in  std_logic_vector(0 to radix-1);
      dst_rdy_in : in  std_logic_vector(0 to radix-1);
      dst_rdy    : out std_logic);
  end component;

  signal dst_rdy_agg : std_logic_vector(0 to O_RADIX-1) ;
  
begin


AXI_INPUT(0).TDATA  <= SYS2AXI_0_TDATA  ;
AXI_INPUT(0).TSTRB  <= SYS2AXI_0_TSTRB  ;
AXI_INPUT(0).TKEEP  <= SYS2AXI_0_TKEEP  ;
AXI_INPUT(0).TVALID <= SYS2AXI_0_TVALID ;
AXI_INPUT(0).TLAST  <= SYS2AXI_0_TLAST  ;
AXI_INPUT(0).TID    <= SYS2AXI_0_TID    ;
AXI_INPUT(0).TDEST  <= SYS2AXI_0_TDEST  ;
AXI_INPUT(0).TUSER  <= SYS2AXI_0_TUSER  ;
SYS2AXI_0_TREADY    <= AXI_INPUT(0).TREADY ;
AXI_INPUT(1).TDATA  <= SYS2AXI_1_TDATA  ;
AXI_INPUT(1).TSTRB  <= SYS2AXI_1_TSTRB  ;
AXI_INPUT(1).TKEEP  <= SYS2AXI_1_TKEEP  ;
AXI_INPUT(1).TVALID <= SYS2AXI_1_TVALID ;
AXI_INPUT(1).TLAST  <= SYS2AXI_1_TLAST  ;
AXI_INPUT(1).TID    <= SYS2AXI_1_TID    ;
AXI_INPUT(1).TDEST  <= SYS2AXI_1_TDEST  ;
AXI_INPUT(1).TUSER  <= SYS2AXI_1_TUSER  ;
SYS2AXI_1_TREADY    <= AXI_INPUT(1).TREADY ;
AXI_INPUT(2).TDATA  <= SYS2AXI_2_TDATA  ;
AXI_INPUT(2).TSTRB  <= SYS2AXI_2_TSTRB  ;
AXI_INPUT(2).TKEEP  <= SYS2AXI_2_TKEEP  ;
AXI_INPUT(2).TVALID <= SYS2AXI_2_TVALID ;
AXI_INPUT(2).TLAST  <= SYS2AXI_2_TLAST  ;
AXI_INPUT(2).TID    <= SYS2AXI_2_TID    ;
AXI_INPUT(2).TDEST  <= SYS2AXI_2_TDEST  ;
AXI_INPUT(2).TUSER  <= SYS2AXI_2_TUSER  ;
SYS2AXI_2_TREADY    <= AXI_INPUT(2).TREADY ;
AXI_INPUT(3).TDATA  <= SYS2AXI_3_TDATA  ;
AXI_INPUT(3).TSTRB  <= SYS2AXI_3_TSTRB  ;
AXI_INPUT(3).TKEEP  <= SYS2AXI_3_TKEEP  ;
AXI_INPUT(3).TVALID <= SYS2AXI_3_TVALID ;
AXI_INPUT(3).TLAST  <= SYS2AXI_3_TLAST  ;
AXI_INPUT(3).TID    <= SYS2AXI_3_TID    ;
AXI_INPUT(3).TDEST  <= SYS2AXI_3_TDEST  ;
AXI_INPUT(3).TUSER  <= SYS2AXI_3_TUSER  ;
SYS2AXI_3_TREADY    <= AXI_INPUT(3).TREADY ;
AXI_INPUT(4).TDATA  <= SYS2AXI_4_TDATA  ;
AXI_INPUT(4).TSTRB  <= SYS2AXI_4_TSTRB  ;
AXI_INPUT(4).TKEEP  <= SYS2AXI_4_TKEEP  ;
AXI_INPUT(4).TVALID <= SYS2AXI_4_TVALID ;
AXI_INPUT(4).TLAST  <= SYS2AXI_4_TLAST  ;
AXI_INPUT(4).TID    <= SYS2AXI_4_TID    ;
AXI_INPUT(4).TDEST  <= SYS2AXI_4_TDEST  ;
AXI_INPUT(4).TUSER  <= SYS2AXI_4_TUSER  ;
SYS2AXI_4_TREADY    <= AXI_INPUT(4).TREADY ;
AXI2SYS_0_TDATA  <= AXI_OUTPUT(0).TDATA ;
AXI2SYS_0_TSTRB  <= AXI_OUTPUT(0).TSTRB ;
AXI2SYS_0_TKEEP  <= AXI_OUTPUT(0).TKEEP ;
AXI2SYS_0_TVALID <= AXI_OUTPUT(0).TVALID ;
AXI2SYS_0_TLAST  <= AXI_OUTPUT(0).TLAST ;
AXI2SYS_0_TID    <= AXI_OUTPUT(0).TID ;
AXI2SYS_0_TDEST  <= AXI_OUTPUT(0).TDEST ;
AXI2SYS_0_TUSER  <= AXI_OUTPUT(0).TUSER ;
AXI_OUTPUT(0).TREADY <= AXI2SYS_0_TREADY ;
AXI2SYS_1_TDATA  <= AXI_OUTPUT(1).TDATA ;
AXI2SYS_1_TSTRB  <= AXI_OUTPUT(1).TSTRB ;
AXI2SYS_1_TKEEP  <= AXI_OUTPUT(1).TKEEP ;
AXI2SYS_1_TVALID <= AXI_OUTPUT(1).TVALID ;
AXI2SYS_1_TLAST  <= AXI_OUTPUT(1).TLAST ;
AXI2SYS_1_TID    <= AXI_OUTPUT(1).TID ;
AXI2SYS_1_TDEST  <= AXI_OUTPUT(1).TDEST ;
AXI2SYS_1_TUSER  <= AXI_OUTPUT(1).TUSER ;
AXI_OUTPUT(1).TREADY <= AXI2SYS_1_TREADY ;
AXI2SYS_2_TDATA  <= AXI_OUTPUT(2).TDATA ;
AXI2SYS_2_TSTRB  <= AXI_OUTPUT(2).TSTRB ;
AXI2SYS_2_TKEEP  <= AXI_OUTPUT(2).TKEEP ;
AXI2SYS_2_TVALID <= AXI_OUTPUT(2).TVALID ;
AXI2SYS_2_TLAST  <= AXI_OUTPUT(2).TLAST ;
AXI2SYS_2_TID    <= AXI_OUTPUT(2).TID ;
AXI2SYS_2_TDEST  <= AXI_OUTPUT(2).TDEST ;
AXI2SYS_2_TUSER  <= AXI_OUTPUT(2).TUSER ;
AXI_OUTPUT(2).TREADY <= AXI2SYS_2_TREADY ;
AXI2SYS_3_TDATA  <= AXI_OUTPUT(3).TDATA ;
AXI2SYS_3_TSTRB  <= AXI_OUTPUT(3).TSTRB ;
AXI2SYS_3_TKEEP  <= AXI_OUTPUT(3).TKEEP ;
AXI2SYS_3_TVALID <= AXI_OUTPUT(3).TVALID ;
AXI2SYS_3_TLAST  <= AXI_OUTPUT(3).TLAST ;
AXI2SYS_3_TID    <= AXI_OUTPUT(3).TID ;
AXI2SYS_3_TDEST  <= AXI_OUTPUT(3).TDEST ;
AXI2SYS_3_TUSER  <= AXI_OUTPUT(3).TUSER ;
AXI_OUTPUT(3).TREADY <= AXI2SYS_3_TREADY ;
AXI2SYS_4_TDATA  <= AXI_OUTPUT(4).TDATA ;
AXI2SYS_4_TSTRB  <= AXI_OUTPUT(4).TSTRB ;
AXI2SYS_4_TKEEP  <= AXI_OUTPUT(4).TKEEP ;
AXI2SYS_4_TVALID <= AXI_OUTPUT(4).TVALID ;
AXI2SYS_4_TLAST  <= AXI_OUTPUT(4).TLAST ;
AXI2SYS_4_TID    <= AXI_OUTPUT(4).TID ;
AXI2SYS_4_TDEST  <= AXI_OUTPUT(4).TDEST ;
AXI2SYS_4_TUSER  <= AXI_OUTPUT(4).TUSER ;
AXI_OUTPUT(4).TREADY <= AXI2SYS_4_TREADY ;
  
  output_ports_select : for i in 0 to O_RADIX-1 generate
    output_mux : process (output_select, axi_input,axi_output,output_inuse)
    begin  
      if output_inuse(i) = '1' then
        axi_output(i).tdata    <= axi_input(natural(output_select(i))).tdata  ;
        axi_output(i).tstrb    <= axi_input(natural(output_select(i))).tstrb  ;
        axi_output(i).tkeep    <= axi_input(natural(output_select(i))).tkeep  ;
        axi_output(i).tvalid   <= axi_input(natural(output_select(i))).tvalid 
                                  and
                                  axi_input(natural(output_select(i))).tready ;
        axi_output(i).tlast    <= axi_input(natural(output_select(i))).tlast  ;
        axi_output(i).tid      <= axi_input(natural(output_select(i))).tid    ;
        axi_output(i).tdest    <= axi_input(natural(output_select(i))).tdest  ;
        axi_output(i).tuser    <= axi_input(natural(output_select(i))).tuser  ;
      else
        axi_output(i).tdata    <= (others => '0') ;
        axi_output(i).tstrb    <= (others => '0') ;
        axi_output(i).tkeep    <= (others => '0') ;
        axi_output(i).tvalid   <= '0' ;
        axi_output(i).tlast    <= '0' ;
        axi_output(i).tid      <= (others => '0') ;
        axi_output(i).tdest    <= (others => '0') ;
        axi_output(i).tuser    <= (others => '0') ;
      end if ;
        
    end process output_mux;
    dst_rdy_agg(i) <= axi_output(i).tready;
  end generate output_ports_select;


  TREADY_GENERATE : for i in 0 to I_RADIX-1 generate
    dst_rdy_mask_i : dst_rdy_mask
      generic map (
        radix => O_RADIX)
      port map (
        mask       => input_mask(i),
        dst_rdy_in => dst_rdy_agg,
        dst_rdy    => axi_input(i).tready);

  end generate TREADY_GENERATE ;

end beh;
library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

use work.zpu_sic_pkg.all;
use work.axi4s_pkg.all;

entity dm_wrapper_v2 is
  generic (
    C_ADDR_WIDTH     : integer := 10;
    C_DATA_WIDTH     : integer := 8);
  port (
    clk           : in std_logic;
    reset_b       : in std_logic;       
    ll_tx_data      : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    ll_tx_sof_n     : out std_logic;
    ll_tx_eof_n     : out std_logic;
    ll_tx_src_rdy_n : out std_logic;
    ll_tx_dst_rdy_n : in  std_logic;
    ll_rx_data      : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    ll_rx_sof_n     : in  std_logic;
    ll_rx_eof_n     : in  std_logic;
    ll_rx_src_rdy_n : in  std_logic;
    ll_rx_dst_rdy_n : out std_logic;
    remote_req      : in    std_logic;
    remote_pause    : in    std_logic;
    remote_addr     : in    std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    cpuwait         : out   std_logic;
    addr            : in    std_logic_vector(C_ADDR_WIDTH-1 downto 0);
    din             : in    std_logic_vector(C_DATA_WIDTH-1 downto 0);
    re              : in    std_logic;
    we              : in    std_logic;
    dout            : out   std_logic_vector(C_DATA_WIDTH-1 downto 0);
    rma             : in  std_logic_vector(1 downto 0);
    rmb             : in  std_logic_vector(1 downto 0)
    );
end entity dm_wrapper_v2;


architecture beh of dm_wrapper_v2 is
  signal ll_rx_port    : ll_type;
  signal ll_tx_port    : ll_type;
  
  type   ADDR_FSM_TYPE is (idle, wait_on_addr);
  signal addr_fsm_cs, addr_fsm_ns : ADDR_FSM_TYPE;

  signal addr_old      : std_logic_vector(C_ADDR_WIDTH-1 downto 0);
  signal addr_old_next : std_logic_vector(C_ADDR_WIDTH-1 downto 0);

  component mem_core_v2
    generic (
      C_ADDR_WIDTH     : integer;
      C_DATA_WIDTH     : integer;
      C_RAM_ADDR_WIDTH : integer;
      C_RAM_DATA_WIDTH : integer);
    port (
      clk          : in std_logic;
      reset_b      : in std_logic;       
      ll_tx_data      : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
      ll_tx_sof_n     : out std_logic;
      ll_tx_eof_n     : out std_logic;
      ll_tx_src_rdy_n : out std_logic;
      ll_tx_dst_rdy_n : in  std_logic;
      ll_rx_data      : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
      ll_rx_sof_n     : in  std_logic;
      ll_rx_eof_n     : in  std_logic;
      ll_rx_src_rdy_n : in  std_logic;
      ll_rx_dst_rdy_n : out std_logic;
      trans_id     : in    std_logic_vector(C_TRANS_ID_WIDTH-1 downto 0);
      remote_req   : in    std_logic;
      remote_pause : in    std_logic;
      remote_addr  : in    std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
      cpu_wait     : out   std_logic;
      addr         : in    std_logic_vector(C_ADDR_WIDTH-1 downto 0);
      din          : in    std_logic_vector(C_DATA_WIDTH-1 downto 0);
      dout         : out   std_logic_vector(C_DATA_WIDTH-1 downto 0);
      we           : in    std_logic;
      re           : in    std_logic;
      rma          : in  std_logic_vector(1 downto 0);
      rmb          : in  std_logic_vector(1 downto 0));      
  end component;

begin  
  ll_tx_data           <= ll_tx_port.data;
  ll_tx_sof_n          <= ll_tx_port.sof_n;
  ll_tx_eof_n          <= ll_tx_port.eof_n;
  ll_tx_src_rdy_n      <= ll_tx_port.src_rdy_n;
  ll_tx_port.dst_rdy_n <= ll_tx_dst_rdy_n;
  ll_rx_port.data      <= ll_rx_data;
  ll_rx_port.sof_n     <= ll_rx_sof_n;
  ll_rx_port.eof_n     <= ll_rx_eof_n;
  ll_rx_port.src_rdy_n <= ll_rx_src_rdy_n;
  ll_rx_dst_rdy_n      <= ll_rx_port.dst_rdy_n;
  
  ADDR_FSM_STATE_PROC : process (clk) is
  begin
    if ((clk'event) and (clk = '1')) then
      if (reset_b = C_RESET_LEVEL) then
        addr_fsm_cs <= idle;
        addr_old    <= (others => '0');
      else
        addr_fsm_cs <= addr_fsm_ns;
        addr_old    <= addr_old_next;
      end if;
    end if;
  end process ADDR_FSM_STATE_PROC;

  ADDR_FSM_LOGIC_PROC : process (addr, addr_fsm_cs, addr_old, remote_pause,
                                 remote_req) is
  begin
    addr_fsm_ns   <= addr_fsm_cs;
    addr_old_next <= addr_old;

    case (addr_fsm_cs) is
      when idle =>
        addr_old_next <= addr;
        if ((remote_req = '1') and (remote_pause = '0')) then        
          addr_fsm_ns <= wait_on_addr;
        end if;

      when wait_on_addr =>
        if (addr_old = addr) then
          addr_fsm_ns <= wait_on_addr;
        else
          addr_fsm_ns <= idle;
        end if;
        
      when others =>
        addr_old_next <= (others => '0');
        addr_fsm_ns   <= idle;
    end case;
  end process ADDR_FSM_LOGIC_PROC;

  dm_i : mem_core_v2
    generic map (
      C_ADDR_WIDTH     => C_ADDR_WIDTH,
      C_DATA_WIDTH     => C_DATA_WIDTH,
      C_RAM_ADDR_WIDTH => C_ADDR_WIDTH,
      C_RAM_DATA_WIDTH => C_DATA_WIDTH)
    port map (
      clk          => clk,
      reset_b      => reset_b,
      ll_tx_data      => ll_tx_port.data, 
      ll_tx_sof_n     => ll_tx_port.sof_n,
      ll_tx_eof_n     => ll_tx_port.eof_n,
      ll_tx_src_rdy_n => ll_tx_port.src_rdy_n,
      ll_tx_dst_rdy_n => ll_tx_port.dst_rdy_n,
      ll_rx_data      => ll_rx_port.data,
      ll_rx_sof_n     => ll_rx_port.sof_n,
      ll_rx_eof_n     => ll_rx_port.eof_n,
      ll_rx_src_rdy_n => ll_rx_port.src_rdy_n,
      ll_rx_dst_rdy_n => ll_rx_port.dst_rdy_n,
      trans_id     => C_DM_TRANS_ID,
      remote_req   => remote_req,
      remote_pause => remote_pause,
      remote_addr  => remote_addr,
      cpu_wait     => cpuwait,
      addr         => addr(C_ADDR_WIDTH-1 downto 0),
      din          => din,
      dout         => dout,
      we           => we,
      re           => re,
      rma          => rma,
      rmb          => rmb
      );

end beh;
library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

entity dst_rdy_mask is
  
  generic (
    radix : integer := 4);

  port (
    mask       : in  std_logic_vector(0 to radix-1);
    dst_rdy_in : in  std_logic_vector(0 to radix-1);
    dst_rdy    : out std_logic);

end dst_rdy_mask;

architecture beh of dst_rdy_mask is
  constant all_zeros : std_logic_vector(0 to radix-1) := (others => '0');
  
  function and_reduce (arg : std_logic_vector)
    return std_logic is
    variable Upper, Lower : std_logic;
    variable Half         : integer;
    variable BUS_int      : std_logic_vector (arg'length - 1 downto 0);
    variable Result       : std_logic;
  begin
    if (arg'length < 1) then            
      Result := '1';                    
    else
      BUS_int := to_ux01 (arg);
      if (BUS_int'length = 1) then
        Result := BUS_int (BUS_int'left);
      elsif (BUS_int'length = 2) then
        Result := BUS_int (BUS_int'right) and BUS_int (BUS_int'left);
      else
        Half   := (BUS_int'length + 1) / 2 + BUS_int'right;
        Upper  := and_reduce (BUS_int (BUS_int'left downto Half));
        Lower  := and_reduce (BUS_int (Half - 1 downto BUS_int'right));
        Result := Upper and Lower;
      end if;
    end if;
    return Result;
  end;

begin  

  dst_rdy <= '0' when (mask = all_zeros) else
              and_reduce(dst_rdy_in or not(mask)) ;
  
end beh;
library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;



entity generic_fifo is
generic (
  DATA_WIDTH  : natural := 52 ;
  NUM_ELEMENT : natural :=  8
) ;
port (
  clk        : in  std_logic ;
  rst        : in  std_logic ;

  din        : in  std_logic_vector(DATA_WIDTH-1 downto 0) ;
  dout       : out std_logic_vector(DATA_WIDTH-1 downto 0) ;
  wr_en      : in  std_logic ;
  rd_en      : in  std_logic ;
  valid      : out std_logic ;
  empty      : out std_logic ;
  full       : out std_logic 


) ;
end entity generic_fifo ;


architecture imp of generic_fifo is

  type vector_array is array (natural range<>) of std_logic_vector(DATA_WIDTH-1 downto 0) ;

  signal fifo_array : vector_array(NUM_ELEMENT-1 downto 0) ;
  signal fifo_empty : std_logic ;
  signal fifo_full  : std_logic ;
  signal fifo_count : natural range 0 to NUM_ELEMENT ;

  signal prefetch   : std_logic ;

begin

  CLK_PROC : process (clk) is
    variable count_v : natural range 0 to NUM_ELEMENT ;
  begin

    if clk'event and clk = '1' then
      count_v := fifo_count ;
      if rst = '1' then
        fifo_array      <= (others => (others => '0')) ;
        count_v         :=  0  ;
        dout            <= (others => '0') ;
        valid           <= '0' ;
        prefetch        <= '0' ;
        fifo_count      <=  0  ;
      else
        if fifo_empty = '0' then
          if (prefetch = '0' ) or (rd_en = '1') then 
            dout        <= fifo_array(0) ; 
            valid       <= '1' ;
            prefetch    <= '1' ;
            count_v     := count_v - 1 ;
            for i in 1 to NUM_ELEMENT-1 loop
              fifo_array(i-1) <= fifo_array(i) ;
            end loop ;
          end if ;
        elsif fifo_empty = '1' and rd_en = '1' then 
          dout          <= (others => '0') ;
          valid         <= '0' ;
          prefetch      <= '0' ;
        end if ;

        if wr_en = '1' and fifo_full = '0' then 
            fifo_array(count_v)  <= din ;
            count_v              := count_v + 1 ; 
        end if ;

      end if ;
      fifo_count <= count_v ;
    end if ;
  end process CLK_PROC ;

  fifo_empty <= '1' when (fifo_count = 0) else '0';
  fifo_full  <= '1' when (fifo_count = NUM_ELEMENT) else '0' ;
  
  empty <= fifo_empty ;
  full  <= fifo_full ;

end architecture imp ;
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

entity hdl_rf16x8 is
  port (
    CLK  : in  std_logic;
    QA   : out std_logic_vector(7 downto 0);
    CENA : in  std_logic;
    AA   : in  std_logic_vector(3 downto 0);
    CENB : in  std_logic;
    AB   : in  std_logic_vector(3 downto 0);
    DB   : in  std_logic_vector(7 downto 0)
    );
end hdl_rf16x8;

architecture BEH of hdl_rf16x8 is

  component hdl_rf16x8_v
    port (
      CLK  : in  std_logic;
      QA   : out std_logic_vector(7 downto 0);
      CENA : in  std_logic;
      AA   : in  std_logic_vector(3 downto 0);
      CENB : in  std_logic;
      AB   : in  std_logic_vector(3 downto 0);
      DB   : in  std_logic_vector(7 downto 0));
  end component;
  
begin 

  hdl_rf16x8_v_i : hdl_rf16x8_v
    port map (
      CLK  => CLK,
      QA   => QA,
      CENA => CENA,
      AA   => AA,
      CENB => CENB,
      AB   => AB,
      DB   => DB);
  

end BEH;
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

entity hdl_rf_b16r32w32_negedge is
  port (
    CLK  : in  std_logic;
    QA   : out std_logic_vector(31 downto 0);
    CENA : in  std_logic;
    AA   : in  std_logic_vector(1 downto 0);
    CENB : in  std_logic;
    AB   : in  std_logic_vector(1 downto 0);
    DB   : in  std_logic_vector(31 downto 0)
    );
end hdl_rf_b16r32w32_negedge;

architecture BEH of hdl_rf_b16r32w32_negedge is

  component hdl_rf_b16r32w32_negedge_v
    port (
      CLK  : in  std_logic;
      QA   : out std_logic_vector(31 downto 0);
      CENA : in  std_logic;
      AA   : in  std_logic_vector(1 downto 0);
      CENB : in  std_logic;
      AB   : in  std_logic_vector(1 downto 0);
      DB   : in  std_logic_vector(31 downto 0));
  end component;
  
begin 

  hdl_rf_b16r32w32_negedge_v_i : hdl_rf_b16r32w32_negedge_v
    port map (
      CLK  => CLK,
      QA   => QA,
      CENA => CENA,
      AA   => AA,
      CENB => CENB,
      AB   => AB,
      DB   => DB);
  
end BEH;
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

entity hdl_rf_b16r32w64_negedge is
  port (
    CLK  : in  std_logic;
    QA   : out std_logic_vector(31 downto 0);
    CENA : in  std_logic;
    AA   : in  std_logic_vector(1 downto 0);
    CENB : in  std_logic;
    AB   : in  std_logic_vector(0 downto 0);
    DB   : in  std_logic_vector(63 downto 0)
    );
end hdl_rf_b16r32w64_negedge;

architecture BEH of hdl_rf_b16r32w64_negedge is

  component hdl_rf_b16r32w64_negedge_v
    port (
      CLK  : in  std_logic;
      QA   : out std_logic_vector(31 downto 0);
      CENA : in  std_logic;
      AA   : in  std_logic_vector(1 downto 0);
      CENB : in  std_logic;
      AB   : in  std_logic_vector(0 downto 0);
      DB   : in  std_logic_vector(63 downto 0));
  end component;
  
begin 

  hdl_rf_b16r32w64_negedge_v_i : hdl_rf_b16r32w64_negedge_v
    port map (
      CLK  => CLK,
      QA   => QA,
      CENA => CENA,
      AA   => AA,
      CENB => CENB,
      AB   => AB,
      DB   => DB);
  
end BEH;
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

entity hdl_rf_b16r64w32_negedge is
  port (
    CLK  : in  std_logic;
    QA   : out std_logic_vector(63 downto 0);
    CENA : in  std_logic;
    AA   : in  std_logic_vector(0 downto 0);
    CENB : in  std_logic;
    AB   : in  std_logic_vector(1 downto 0);
    DB   : in  std_logic_vector(31 downto 0)
    );
end hdl_rf_b16r64w32_negedge;

architecture BEH of hdl_rf_b16r64w32_negedge is

  component hdl_rf_b16r64w32_negedge_v
    port (
      CLK  : in  std_logic;
      QA   : out std_logic_vector(63 downto 0);
      CENA : in  std_logic;
      AA   : in  std_logic_vector(0 downto 0);
      CENB : in  std_logic;
      AB   : in  std_logic_vector(1 downto 0);
      DB   : in  std_logic_vector(31 downto 0));
  end component;
  
begin 

  hdl_rf_b16r64w32_negedge_v_i : hdl_rf_b16r64w32_negedge_v
    port map (
      CLK  => CLK,
      QA   => QA,
      CENA => CENA,
      AA   => AA,
      CENB => CENB,
      AB   => AB,
      DB   => DB);
  
end BEH;
library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

use work.axi4s_pkg.all;


entity IntCtr_core is
  generic (WB_DWIDTH   : integer := 32;
             WB_SWIDTH : integer := 4);
  port (

    clk             : in  std_logic;
    reset_b         : in  std_logic;
    base_addr       : in  std_logic_vector(31 downto 0);
    o_irq           : out std_logic;
    o_firq          : out std_logic;
    i_ethmac_int    : in  std_logic;
    i_tm_timer_int  : in  std_logic_vector(2 downto 0);
    i_uart1_int     : in  std_logic;
    i_uart0_int     : in  std_logic;
    i_test_reg_irq  : in  std_logic;
    i_test_reg_firq : in  std_logic;

    ll_rx_port_data      : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    ll_rx_port_data_be   : in  std_logic_vector(C_SWITCH_WIDTH/8-1 downto 0);
    ll_rx_port_src_rdy_n : in  std_logic;
    ll_rx_port_dst_rdy_n : out std_logic;
    ll_rx_port_sof_n     : in  std_logic;
    ll_rx_port_eof_n     : in  std_logic;
    rx_dst               : in  std_logic_vector(C_TDEST_WIDTH-1 downto 0);
    rx_src               : in  std_logic_vector(C_TDEST_WIDTH-1 downto 0);
    rx_len               : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    ll_tx_port_data      : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    ll_tx_port_data_be   : out std_logic_vector(C_SWITCH_WIDTH/8-1 downto 0);
    ll_tx_port_src_rdy_n : out std_logic;
    ll_tx_port_dst_rdy_n : in  std_logic;
    ll_tx_port_sof_n     : out std_logic;
    ll_tx_port_eof_n     : out std_logic;
    tx_dst               : out std_logic_vector(C_TDEST_WIDTH-1 downto 0);
    tx_src               : out std_logic_vector(C_TDEST_WIDTH-1 downto 0);
    tx_len               : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0)
    );
end IntCtr_core;

architecture str of IntCtr_core is
  signal SLV_DAT_O : std_logic_vector(31 downto 0);
  signal SLV_DAT_I : std_logic_vector(31 downto 0);
  signal SEL_O     : std_logic_vector(3 downto 0);
  signal CYC_O     : std_logic;
  signal STB_O     : std_logic;
  signal WE_O      : std_logic;
  signal ACK_I     : std_logic;
  signal ADR_O     : std_logic_vector(0 to 31);

  component interrupt_controller is
    port (
      i_clk           : in  std_logic;
      reset_b         : in  std_logic;
      i_wb_adr        : in  std_logic_vector(31 downto 0);
      i_wb_sel        : in  std_logic_vector(WB_SWIDTH-1 downto 0);
      i_wb_we         : in  std_logic;
      o_wb_dat        : out std_logic_vector (WB_DWIDTH-1 downto 0);
      i_wb_dat        : in  std_logic_vector (WB_DWIDTH-1 downto 0);
      i_wb_cyc        : in  std_logic;
      i_wb_stb        : in  std_logic;
      o_wb_ack        : out std_logic;
      o_wb_err        : out std_logic;
      o_irq           : out std_logic;
      o_firq          : out std_logic;
      i_uart0_int     : in  std_logic;
      i_uart1_int     : in  std_logic;
      i_ethmac_int    : in  std_logic;
      i_test_reg_irq  : in  std_logic;
      i_test_reg_firq : in  std_logic;
      i_tm_timer_int  : in  std_logic_vector(2 downto 0)
      );
  end component;

  component ll_to_wb_bridge
    port (
      clk                  : in  std_logic;
      reset_b              : in  std_logic;
      SLV_DAT_O            : out std_logic_vector(31 downto 0);
      SLV_DAT_I            : in  std_logic_vector(31 downto 0);
      SEL_O                : out std_logic_vector(3 downto 0);
      CYC_O                : out std_logic;
      STB_O                : out std_logic;
      WE_O                 : out std_logic;
      ACK_I                : in  std_logic;
      RTY_I                : in  std_logic;
      ADR_O                : out std_logic_vector(0 to 31);
      base_addr            : in  std_logic_vector(31 downto 0);
      ll_rx_port_data      : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
      ll_rx_port_data_be   : in  std_logic_vector(C_SWITCH_WIDTH/8-1 downto 0);
      ll_rx_port_src_rdy_n : in  std_logic;
      ll_rx_port_dst_rdy_n : out std_logic;
      ll_rx_port_sof_n     : in  std_logic;
      ll_rx_port_eof_n     : in  std_logic;
      rx_dst               : in  std_logic_vector(C_TDEST_WIDTH-1 downto 0);
      rx_src               : in  std_logic_vector(C_TDEST_WIDTH-1 downto 0);
      rx_len               : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
      ll_tx_port_data      : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
      ll_tx_port_data_be   : out std_logic_vector(C_SWITCH_WIDTH/8-1 downto 0);
      ll_tx_port_src_rdy_n : out std_logic;
      ll_tx_port_dst_rdy_n : in  std_logic;
      ll_tx_port_sof_n     : out std_logic;
      ll_tx_port_eof_n     : out std_logic;
      tx_dst               : out std_logic_vector(C_TDEST_WIDTH-1 downto 0);
      tx_src               : out std_logic_vector(C_TDEST_WIDTH-1 downto 0);
      tx_len               : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0));
  end component;
  
begin
  U_interrupt_controller : interrupt_controller port map (
    i_clk           => clk,
    reset_b         => reset_b,
    i_wb_adr        => ADR_O,
    i_wb_sel        => SEL_O,
    i_wb_we         => WE_O,
    i_wb_dat        => SLV_DAT_O,
    i_wb_cyc        => CYC_O,
    i_wb_stb        => STB_O,
    o_wb_dat        => SLV_DAT_I,
    o_wb_ack        => ACK_I,
    o_wb_err        => open,
    o_irq           => o_irq,
    o_firq          => o_firq,
    i_uart0_int     => i_uart0_int,
    i_uart1_int     => i_uart1_int,
    i_ethmac_int    => i_ethmac_int,
    i_test_reg_irq  => i_test_reg_irq ,
    i_test_reg_firq => i_test_reg_firq,
    i_tm_timer_int  => i_tm_timer_int
    );

  U_ll_to_wb_bridge : ll_to_wb_bridge port map(

    clk                  => clk,
    reset_b              => reset_b,
    SLV_DAT_O            => SLV_DAT_O ,
    SEL_O                => SEL_O ,
    CYC_O                => CYC_O ,
    STB_O                => STB_O ,
    WE_O                 => WE_O ,
    ADR_O                => ADR_O ,
    SLV_DAT_I            => SLV_DAT_I ,
    ACK_I                => ACK_I,
    RTY_I                => '0',
    base_addr            => base_addr,
    ll_rx_port_data      => ll_rx_port_data,
    ll_rx_port_data_be   => ll_rx_port_data_be ,
    ll_rx_port_src_rdy_n => ll_rx_port_src_rdy_n ,
    ll_rx_port_dst_rdy_n => ll_rx_port_dst_rdy_n,
    ll_rx_port_sof_n     => ll_rx_port_sof_n,
    ll_rx_port_eof_n     => ll_rx_port_eof_n,
    rx_dst               => rx_dst,
    rx_src               => rx_src,
    rx_len               => rx_len,
    ll_tx_port_data      => ll_tx_port_data ,
    ll_tx_port_data_be   => ll_tx_port_data_be ,
    ll_tx_port_src_rdy_n => ll_tx_port_src_rdy_n ,
    ll_tx_port_dst_rdy_n => ll_tx_port_dst_rdy_n ,
    ll_tx_port_sof_n     => ll_tx_port_sof_n ,
    ll_tx_port_eof_n     => ll_tx_port_eof_n ,
    tx_dst               => tx_dst,
    tx_src               => tx_src,
    tx_len               => tx_len
    );


end str;
























library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

use work.zpu_sic_pkg.all;
use work.axi4s_pkg.all;

entity io_wrapper_v2 is
  generic (
    C_NUM_REGS : integer := 8);
  port (
    clk             : in  std_logic;
    reset_b         : in  std_logic;    
    ll_tx_data      : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    ll_tx_sof_n     : out std_logic;
    ll_tx_eof_n     : out std_logic;
    ll_tx_src_rdy_n : out std_logic;
    ll_tx_dst_rdy_n : in  std_logic;
    ll_rx_data      : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    ll_rx_sof_n     : in  std_logic;
    ll_rx_eof_n     : in  std_logic;
    ll_rx_src_rdy_n : in  std_logic;
    ll_rx_dst_rdy_n : out std_logic;
    ctrl_regs       : out register_vector(C_NUM_REGS-1 downto 0);
    cpuwait         : out std_logic;
    addr            : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    din             : in  std_logic_vector(C_MCU_DATA_WIDTH-1 downto 0);
    dout            : out std_logic_vector(C_MCU_DATA_WIDTH-1 downto 0);
    we              : in  std_logic;
    re              : in  std_logic
    );
end entity io_wrapper_v2;

architecture beh of io_wrapper_v2 is
  signal ll_rx_port : ll_type;
  signal ll_tx_port : ll_type;

  constant C_CTRL_REG_ADDR_HIGH : integer := 5;
  constant C_CTRL_REG_ADDR_LOW  : integer := 2;

  constant C_RAM_ADDR_WIDTH : integer := C_MCU_ADDR_WIDTH;
  constant C_RAM_DATA_WIDTH : integer := C_SWITCH_WIDTH;
  signal   ram_addr         : std_logic_vector(C_MCU_ADDR_WIDTH-1 downto 0);
  signal   ram_din          : std_logic_vector(C_RAM_DATA_WIDTH-1 downto 0);
  signal   ram_dout         : std_logic_vector(C_RAM_DATA_WIDTH-1 downto 0);
  signal   mcu_dout         : std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
  signal   ram_we           : std_logic;
  signal   ram_ce           : std_logic;
  signal   ctrl_regs_o      : register_vector(C_NUM_REGS-1 downto 0);
  signal   mcu_dout_valid   : std_logic;
  signal   remote_req       : std_logic;
  signal   remote_pause     : std_logic;
  signal   remote_addr      : std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
  signal   din_i            : std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
  signal   addr_i           : std_logic_vector(C_MCU_ADDR_WIDTH-1 downto 0);
  signal   cpuwait_i        : std_logic;

  type REMOTE_IO_FSM_TYPE is (idle, wait_for_valid);
  signal remote_io_fsm_cs, remote_io_fsm_ns : REMOTE_IO_FSM_TYPE;

  signal remote_io : std_logic;
  
  component mem_ctlr_v2
    generic (
      C_ADDR_WIDTH     : integer;
      C_DATA_WIDTH     : integer;
      C_RAM_ADDR_WIDTH : integer;
      C_RAM_DATA_WIDTH : integer);
    port (
      clk             : in  std_logic;
      reset_b         : in  std_logic;  
      ll_tx_data      : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
      ll_tx_sof_n     : out std_logic;
      ll_tx_eof_n     : out std_logic;
      ll_tx_src_rdy_n : out std_logic;
      ll_tx_dst_rdy_n : in  std_logic;
      ll_rx_data      : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
      ll_rx_sof_n     : in  std_logic;
      ll_rx_eof_n     : in  std_logic;
      ll_rx_src_rdy_n : in  std_logic;
      ll_rx_dst_rdy_n : out std_logic;
      addr            : in  std_logic_vector(C_ADDR_WIDTH-1 downto 0);
      din             : in  std_logic_vector(C_DATA_WIDTH-1 downto 0);
      dout            : out std_logic_vector(C_DATA_WIDTH-1 downto 0);
      we              : in  std_logic;
      re              : in  std_logic;
      dout_valid      : out std_logic;
      cpu_wait        : out std_logic;
      ram_ce          : out std_logic;
      ram_addr        : out std_logic_vector(C_RAM_ADDR_WIDTH-1 downto 0);
      ram_din         : out std_logic_vector(C_RAM_DATA_WIDTH-1 downto 0);
      ram_dout        : in  std_logic_vector(C_RAM_DATA_WIDTH-1 downto 0);
      ram_we          : out std_logic;
      trans_id        : in  std_logic_vector(C_TRANS_ID_WIDTH-1 downto 0);
      remote_req      : in  std_logic;
      remote_pause    : in  std_logic;
      remote_addr     : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0));
  end component;

  subtype integer_small is integer range 0 to 2**(C_CTRL_REG_ADDR_HIGH-C_CTRL_REG_ADDR_LOW+1)-1;
  
begin
  ll_tx_data           <= ll_tx_port.data;
  ll_tx_sof_n          <= ll_tx_port.sof_n;
  ll_tx_eof_n          <= ll_tx_port.eof_n;
  ll_tx_src_rdy_n      <= ll_tx_port.src_rdy_n;
  ll_tx_port.dst_rdy_n <= ll_tx_dst_rdy_n;
  ll_rx_port.data      <= ll_rx_data;
  ll_rx_port.sof_n     <= ll_rx_sof_n;
  ll_rx_port.eof_n     <= ll_rx_eof_n;
  ll_rx_port.src_rdy_n <= ll_rx_src_rdy_n;
  ll_rx_dst_rdy_n      <= ll_rx_port.dst_rdy_n;

  ctrl_regs <= ctrl_regs_o;

  remote_req  <= (re or we) when (addr = C_ZPU_32_ADDR) else '0';
  remote_addr <= ctrl_regs_o(C_CTRL_REG_32B_ADDR) when (addr = C_ZPU_32_ADDR) else
                 C_SUBSYSTEM_CRYPTO_LL_BASEADDR;
  remote_pause <= ctrl_regs_o(C_CTRL_REG_REMOTE_PAUSE)(C_CTRL_REG_IO_BIT_SEL);

  cpuwait <= cpuwait_i or remote_io;

  addr_i <= (others => '0') when (addr = C_ZPU_32_ADDR) else addr;

  din_i <= ctrl_regs_o(C_CTRL_REG_32B_DATA) when (addr = C_ZPU_32_ADDR) else din;
  
  CTLR_REG_WRITE_GEN : for i in 0 to C_NUM_REGS-1 generate
    CTRL_REG_WRITE_PROC : process (clk) is
      variable loc_a, rem_a : integer_small;
    begin
      if ((clk'event) and (clk = '1')) then
        loc_a := conv_integer(addr(C_CTRL_REG_ADDR_HIGH-1 downto C_CTRL_REG_ADDR_LOW));
        rem_a := conv_integer(ram_addr(C_CTRL_REG_ADDR_HIGH-1 downto C_CTRL_REG_ADDR_LOW));
        if (reset_b = C_RESET_LEVEL) then
          ctrl_regs_o(i) <= (others => '0');
        elsif ((addr = C_ZPU_32_ADDR) and (we = '1')) then
          ctrl_regs_o(i) <= ctrl_regs_o(i);
        elsif ((remote_req = '0') and (we = '1') and (loc_a = i) ) then
          ctrl_regs_o(i) <= din;
        elsif ((ram_we = '1') and (ram_ce = '1') and (addr = C_ZPU_32_ADDR) and
               (i = C_CTRL_REG_32B_DATA)) then
          ctrl_regs_o(i) <= ram_din;          
        elsif ((ram_we = '1') and (ram_ce = '1') and (rem_a = i)) then
          ctrl_regs_o(i) <= ram_din;
        elsif ((addr = C_ZPU_32_ADDR) and (mcu_dout_valid = '1') and (remote_io_fsm_cs = wait_for_valid) and
               (i = C_CTRL_REG_32B_DATA)) then
          ctrl_regs_o(i) <= mcu_dout;
        end if;
      end if;
    end process CTRL_REG_WRITE_PROC;
  end generate CTLR_REG_WRITE_GEN;

  CTRL_REG_READ_PROC : process (addr, ctrl_regs_o, ram_addr, re) is
    variable loc_a, rem_a : integer_small;
  begin
    loc_a := conv_integer(addr(C_CTRL_REG_ADDR_HIGH-1 downto C_CTRL_REG_ADDR_LOW));
    rem_a := conv_integer(ram_addr(C_CTRL_REG_ADDR_HIGH-1 downto C_CTRL_REG_ADDR_LOW));
    if (loc_a < C_NUM_REGS) then
      dout <= ctrl_regs_o(loc_a);     
    else
      dout <= (others => '0');
    end if;
    if (rem_a < C_NUM_REGS) then
      ram_dout <= ctrl_regs_o(rem_a);
    else
      ram_dout <= (others => '0');
    end if;
  end process CTRL_REG_READ_PROC;

  REMOTE_IO_FSM_STATE_PROC : process (clk) is
  begin
    if ((clk'event) and (clk = '1')) then
      if (reset_b = C_RESET_LEVEL) then
        remote_io_fsm_cs <= idle;
      else
        remote_io_fsm_cs <= remote_io_fsm_ns;
      end if;
    end if;
  end process REMOTE_IO_FSM_STATE_PROC;

  REMOTE_IO_FSM_LOGIC_PROC : process (addr, mcu_dout_valid, re,
                                      remote_io_fsm_cs) is
  begin
    remote_io_fsm_ns <= remote_io_fsm_cs;

    case (remote_io_fsm_cs) is
      when idle =>
        if ((addr = C_ZPU_32_ADDR) and (re = '1')) then
          remote_io <= '1';
          remote_io_fsm_ns <= wait_for_valid;
        else
          remote_io <= '0';
          remote_io_fsm_ns <= idle;
        end if;

      when wait_for_valid =>
        if (mcu_dout_valid = '1') then
          remote_io <= '0';
          remote_io_fsm_ns <= idle;
        else
          remote_io <= '1';
          remote_io_fsm_ns <= wait_for_valid;
        end if;
        
      when others =>
        remote_io <= '0';
        remote_io_fsm_ns <= idle;        
    end case;
  end process REMOTE_IO_FSM_LOGIC_PROC;
  
  DUT : mem_ctlr_v2
    generic map (
      C_ADDR_WIDTH     => C_MCU_ADDR_WIDTH,
      C_DATA_WIDTH     => C_SWITCH_WIDTH,
      C_RAM_ADDR_WIDTH => C_MCU_ADDR_WIDTH,
      C_RAM_DATA_WIDTH => C_SWITCH_WIDTH)
    port map (
      clk             => clk,
      reset_b         => reset_b,
      ll_tx_data      => ll_tx_port.data,
      ll_tx_sof_n     => ll_tx_port.sof_n,
      ll_tx_eof_n     => ll_tx_port.eof_n,
      ll_tx_src_rdy_n => ll_tx_port.src_rdy_n,
      ll_tx_dst_rdy_n => ll_tx_port.dst_rdy_n,
      ll_rx_data      => ll_rx_port.data,
      ll_rx_sof_n     => ll_rx_port.sof_n,
      ll_rx_eof_n     => ll_rx_port.eof_n,
      ll_rx_src_rdy_n => ll_rx_port.src_rdy_n,
      ll_rx_dst_rdy_n => ll_rx_port.dst_rdy_n,
      addr            => addr_i,
      din             => din_i,
      dout            => mcu_dout,
      dout_valid      => mcu_dout_valid,
      we              => we,
      re              => re,
      ram_ce          => ram_ce,
      ram_addr        => ram_addr,
      ram_din         => ram_din,
      ram_dout        => ram_dout,
      ram_we          => ram_we,
      cpu_wait        => cpuwait_i,
      trans_id        => C_IO_TRANS_ID,
      remote_req      => remote_req,
      remote_pause    => remote_pause,
      remote_addr     => remote_addr
      );  
end beh;

library IEEE;
use ieee.std_logic_1164.all;			
use ieee.std_logic_unsigned.all; 
use ieee.std_logic_arith.all;
use work.sha3_jh_package.all;
use work.sha3_pkg.all;

entity jh_fsm1 is	   
	port (
	clk : in std_logic;
	rst : in std_logic;		
	
	zc0, final_segment	: in std_logic;
	lc, ec : out std_logic;
	li, ein : out std_logic;
	addr	: out std_logic_vector(fmw-3 downto 0);
	w1, w2, w3, w4	: out std_logic;
	
	load_next_block	: in std_logic;		 
	msg_ready : out std_logic;
	msg_end : out std_logic;
	
	src_ready : in std_logic;
	src_read   : out std_logic	
	);
end jh_fsm1;

architecture beh of jh_fsm1 is	
	signal ebc : std_logic;		 
	signal msg_count : std_logic_vector(fmw-1 downto 0);
	
	type state_type is ( reset, wait_for_header1, wait_for_header2, wait_for_block, load_block, write_block, ready );
	signal cstate, nstate : state_type; 			 
	
	signal f, ef, cf : std_logic;
	signal done_load, done_write : std_logic;
begin
	sr_final_segment :  sr_reg 
	port map ( rst => rst, clk => clk, set => ef, clr => cf, output => f);
	
	block_counter_gen : countern generic map ( n => fmw ) port map (clk => clk, rst => rst, load => load_next_block, en => ebc , input => fmwzeros, output => msg_count);
	addr <= msg_count(fmw-3 downto 0);	
	
	cstate_proc : process ( clk )
	begin
		if rising_edge( clk ) then 
			if rst = '1' then
				cstate <= reset;
			else
				cstate <= nstate;
			end if;
		end if;
	end process;

	
	nstate_proc : process ( cstate, src_ready, load_next_block, done_write, done_load, zc0, final_segment, f )
	begin
		case cstate is
			when reset =>
				nstate <= wait_for_header1;
			when wait_for_header1 =>
				if ( src_ready = '1' ) then
					nstate <= wait_for_header1;
				elsif ( final_segment = '1' ) then
					nstate <= wait_for_header2;
				else 
					nstate <= wait_for_block;
				end if;
			when wait_for_header2 =>
				if (src_ready = '1') then
					nstate <= wait_for_header2;
				else
					nstate <= wait_for_block;
				end if;	 
			when wait_for_block =>
				if (src_ready = '1') then
					nstate <= wait_for_block;
				else
					nstate <= load_block;
				end if;	 				
			when load_block =>		
				nstate <= write_block;										 					
			when write_block =>
				if (done_write = '1') then
					if (done_load = '1') then
						nstate <= ready;
					elsif (src_ready='0') then
						nstate <= load_block;
					else
						nstate <= wait_for_block;
					end if;
				else
					nstate <= write_block;
				end if;
			when ready =>
				if (load_next_block = '0') then
					nstate <= ready;
				elsif (zc0= '1') then
					if (src_ready = '1') then
						nstate <= wait_for_header1;
					elsif ( final_segment = '1' ) then
						nstate <= wait_for_header2;
					else 
						nstate <= wait_for_block;
					end if;
				elsif (src_ready = '1') then
					nstate <= wait_for_block;
				else 
					nstate <= load_block;
				end if;
		end case;
	end process;
	
	w1 <= '1' when (msg_count(fmw-1 downto fmw-2) = "00" and cstate = write_block) else '0';
	w2 <= '1' when (msg_count(fmw-1 downto fmw-2) = "01" and cstate = write_block) else '0';
	w3 <= '1' when (msg_count(fmw-1 downto fmw-2) = "10" and cstate = write_block) else '0';
	w4 <= '1' when (msg_count(fmw-1 downto fmw-2) = "11" and cstate = write_block) else '0';
	
	src_read <= '1' when (((cstate = wait_for_header1 or cstate = wait_for_header2 or 
							(cstate = ready and load_next_block = '1' and zc0 = '1')) and 
							src_ready = '0') or cstate = load_block) else '0';
	
	done_write <= '1' when (msg_count(log2(w*8/fbw)-1 downto 0) = fmwones(log2(w*8/fbw)-1 downto 0)) else '0';
	done_load <= '1' when (msg_count(fmw-1 downto fmw-3) = "111") else '0';
	ebc <= '1' when (cstate = write_block) else '0';
	ein <= '1' when (cstate = write_block or cstate = load_block) else '0';
	li <= '1' when (cstate = load_block) else '0';
						 
    msg_ready <= '1' when (cstate = ready) else '0';
	msg_end <= '1' when (cstate = ready and zc0 = '1' and f = '1') else '0';
		
	ef <= '1' when ((cstate = wait_for_header1 or (cstate = ready and zc0 = '1' and load_next_block = '1')) and 
					src_ready = '0' and final_segment = '1')  else '0';	   
	cf <= '1' when (cstate = ready and load_next_block = '1' and zc0 = '1') else '0';
	
	lc <= '1' when (src_ready = '0' and (cstate = wait_for_header1 or 
					(cstate = ready and load_next_block = '1' and zc0 = '1'))) else '0';
		 			
	ec <= '1' when 	(cstate = write_block and done_write = '1' and done_load = '1') else '0';		
		
end beh;

library ieee;
use ieee.std_logic_1164.all;	   
use ieee.std_logic_arith.all;
use work.sha3_pkg.all;
use work.sha3_jh_package.all;

entity jh_fsm2 is 
	port (
		clk : in std_logic;
		rst : in std_logic;
		
		srdp : out std_logic;
		sf : out std_logic;
		wr1, wr2, whp : out std_logic;
		srin, srout1, srout2 : out std_logic;
		round : out std_logic_vector(log2roundnr-1 downto 0);
		r_addr1_1, r_addr1_2, r_addr2_1, r_addr2_2 : out std_logic_vector(log2(b/fbw)-1 downto 0);

		hash_complete : in std_logic;
		msg_end : in std_logic;
		hash_processed : out std_logic;
		msg_ready : in std_logic;		
		load_next_block	: out std_logic
	);							   
end jh_fsm2;

architecture beh of jh_fsm2 is

	constant log2roundnrzeros : std_logic_vector(log2roundnr-1 downto 0) := (others => '0') ;
	constant log2roundnrones : std_logic_vector(log2roundnr-1 downto 0) := (others => '1') ;
	
	type state_type is ( reset, wait_first_msg, load_first_msg, process_hash, wait_msg, load_msg, wait_complete );
	signal cstate, nstate : state_type;
   
	signal pc : std_logic_vector(log2roundnr-1 downto 0);
	signal processed, msg_loaded, lc, ec : std_logic;
						 
	signal ef, cf, last_msg : std_logic;
	
begin	
	sr_final_segment :  sr_reg 
	port map ( rst => rst, clk => clk, set => ef, clr => cf, output => last_msg);
	
	proc_counter_gen : countern generic map ( N => log2roundnr ) port map ( clk => clk, rst => rst, load => lc, en => ec, input => log2roundnrzeros, output => pc);
	
	cstate_proc : process ( clk )
	begin
		if rising_edge( clk ) then 
			if rst = '1' then
				cstate <= reset;
			else
				cstate <= nstate;
			end if;
		end if;
	end process;
	
	nstate_proc : process ( cstate, msg_loaded, msg_ready, processed, last_msg, hash_complete )
	begin
		case cstate is	 
			when reset =>
				nstate <= wait_first_msg;
			when wait_first_msg => 
				if (msg_ready = '1') then
					nstate <= load_first_msg;
				else
					nstate <= wait_first_msg;
				end if;
			when load_first_msg =>
				if (msg_loaded = '1') then
					nstate <= process_hash;
				else
					nstate <= load_first_msg;
				end if;			
			when process_hash =>
				if (processed = '0') then
					nstate <= process_hash;
				elsif (last_msg = '1') then
					nstate <= wait_complete;
				elsif (msg_ready = '1') then
					nstate <= load_msg;
				else
					nstate <= wait_msg;
				end if;
			when wait_msg =>
				if (msg_ready = '1') then
					nstate <= load_msg;
				else
					nstate <= wait_msg;
				end if;
			when load_msg =>
				if (msg_loaded = '1') then
					nstate <= process_hash;
				else
					nstate <= load_msg;
				end if;	
			when wait_complete =>
				if (hash_complete = '0') then
					nstate <= wait_complete;
				elsif (msg_ready = '1') then
					nstate <= load_first_msg;
				else
					nstate <= wait_first_msg;
				end if;
		end case;
	end process;
	hash_processed <= '1' when (cstate = wait_complete) else '0';
		
	processed <= '1' when pc = conv_std_logic_vector(roundnr-1,log2roundnr) else '0';			 
	msg_loaded <= '1' when pc(log2(b/fbw)-1 downto 0) = log2roundnrones(log2(b/fbw)-1 downto 0) else '0';
	lc <= '1' when (((cstate = load_first_msg or cstate = load_msg) 
				and msg_loaded = '1') or (cstate = process_hash and processed = '1')) else '0';
	ec <= '1' when (cstate = load_first_msg or cstate = load_msg or cstate = process_hash) else '0';	
	
	ef <= '1' when ((((cstate = wait_msg or cstate = process_hash) and nstate = load_msg) or
					(cstate = wait_first_msg and nstate = load_first_msg)) and msg_end = '1') else '0';
	cf <= '1' when (cstate = wait_complete and hash_complete = '1') else '0';
		
	round <= pc;
	r_addr1_1 <= pc(log2(b/fbw)-1 downto 0) when pc(log2(b/fbw)) = '0' else 
				pc(0) & pc(log2(b/fbw)-1 downto 1);
	r_addr1_2 <= pc(log2(b/fbw)-1 downto 0) when pc(log2(b/fbw)) = '1' else	
				pc(0) & pc(log2(b/fbw)-1 downto 1);
	r_addr2_1 <= pc(log2(b/fbw)-1 downto 0) when pc(log2(b/fbw)) = '0' else 
				(not pc(0)) & pc(log2(b/fbw)-1 downto 1);
	r_addr2_2 <= pc(log2(b/fbw)-1 downto 0) when pc(log2(b/fbw)) = '1' else 
				(not pc(0)) & pc(log2(b/fbw)-1 downto 1);
	wr1 <= '1' when (cstate = load_first_msg or cstate = load_msg) else pc(log2(b/fbw));
	wr2 <= not pc(log2(b/fbw));
	whp <= '1' when (cstate = load_first_msg or cstate = load_msg) else '0';
		
	sf <= '1' when cstate = load_first_msg else '0';
	srdp <= '1' when (cstate = load_first_msg or cstate = load_msg) else '0';
		
	srout1 <= not pc(log2(b/fbw));
	srout2 <= not pc(log2(b/fbw)-1);
	srin <=  (not pc(log2(b/fbw)-1)) when (cstate = load_first_msg or cstate = load_msg) else (not pc(0));
	
	load_next_block <= '1' when ((cstate = load_first_msg or cstate = load_msg) and msg_loaded = '1') else '0';
	
end beh;

 
library ieee;
use ieee.std_logic_1164.all;	   
use ieee.std_logic_arith.all;
use work.sha3_pkg.all;
use work.sha3_jh_package.all;		  

entity jh_fsm3 is 
	generic ( 
		h : integer := 256
	);
	port (
		clk : in std_logic;
		rst : in std_logic;
		
		eout, srout1, srout2 : out std_logic;
		sdout : out std_logic_vector(h/256-1 downto 0);
		r_addr : out std_logic_vector(log2(b/fbw)-1 downto 0);

		msg_end : in std_logic;
		hash_complete : out std_logic;
		
		dst_ready 				: in std_logic;
		dst_write				: out std_logic
		);							   
end jh_fsm3;

architecture beh of jh_fsm3 is	   

	type state_type is ( reset, idle, load_sipo, wait_for_dst, send_sipo );
	signal cstate, nstate : state_type;
	
	constant log2czeros : std_logic_vector(log2(fbw/2)-2+(h/256) downto 0) := (others => '0');
	constant log2cones : std_logic_vector(log2(8*w/fbw)-1 downto 0) := (others => '1');
	signal pc : std_logic_vector(log2(fbw/2)-2+(h/256) downto 0);
	signal lc, ec : std_logic;
	signal SIPO_loaded, hash_done : std_logic;
	
begin
	proc_counter_gen : countern generic map ( N => log2(fbw/2)-1+(h/256) ) port map ( clk => clk, rst => rst, load => lc, en => ec, input => log2czeros, output => pc);
	
	cstate_proc : process ( clk )
	begin
		if rising_edge( clk ) then 
			if rst = '1' then
				cstate <= reset;
			else
				cstate <= nstate;
			end if;
		end if;
	end process;
	
	nstate_proc : process ( cstate, SIPO_loaded, msg_end, dst_ready, hash_done )
	begin
		case cstate is	 
			when reset =>
				nstate <= idle;
			when idle =>
				if msg_end = '1' then
					nstate <= load_sipo;
				else
					nstate <= idle;
				end if;
			when load_sipo => 
				if SIPO_loaded = '1' then
					if dst_ready = '0' then
						nstate <= send_sipo;
					else
						nstate <= wait_for_dst;
					end if;
				else
					nstate <= load_sipo;
				end if;
			when wait_for_dst =>
				if dst_ready = '0' then
					nstate <= send_sipo;
				else
					nstate <= wait_for_dst;
				end if;
			when send_sipo =>
				if hash_done = '1' then
					nstate <= idle;
				else
					nstate <= load_sipo;
				end if;
		end case;
	end process;
	
	SIPO_loaded <= '1' when (pc(log2(8*w/fbw)-1 downto 0) = log2cones) else '0'; 
	lc <= '1' when cstate = idle else '0';
	ec <= '1' when cstate = load_sipo else '0';
	
		
	hash_complete <= '1' when (cstate = send_sipo and hash_done = '1') else '0';
	
	srout1 <= '1';
	srout2 <= not pc(log2(fbw/2)-2);
	
	sdout <= pc(log2(fbw/2)-2+h/256 downto log2(fbw/2)-1);
	hash_done <= '1' when (pc = log2czeros and cstate = send_sipo) else '0';

	
	r_addr <= pc(log2(b/fbw)-1 downto 0);
	
	eout <= '1' when (cstate = load_sipo) else '0';
	
	dst_write <= '1' when (cstate = send_sipo) else '0';
	
end beh;

library ieee;
use ieee.std_logic_1164.all;  
use work.sha3_pkg.all;

entity jh_lt is
	port
	(
		a: in std_logic_vector(3 downto 0);
		b: in std_logic_vector(3 downto 0);
		c: out std_logic_vector(3 downto 0);
		d: out std_logic_vector(3 downto 0)
	);
end jh_lt;

architecture struct2 of jh_lt is
begin  

	
	d <= (a(2) xor b(3)) & (b(2) xor b(1)) & (a(3) xor a(0) xor b(1)) & (a(3) xor b(0));


	c <= (((a(3) xor a(2)) xor b(3)) xor (b(2) xor b(1))) &
		 ((a(3) xor a(2)) xor (a(0) xor b(2))) & 
		 ((a(1) xor a(0)) xor (b(1) xor b(0))) &
		 (((a(3) xor a(2)) xor a(0)) xor (b(3) xor b(0)));
end struct2;

architecture struct of jh_lt is
	signal temp: std_logic_vector(3 downto 0);
begin

	temp <= (rolx(a,1) xor b) xor ("00" & a(3) & '0');
	c <= (rolx(temp,1) xor a) xor ("00" & temp(3) & '0');
	d <= temp;
	
end struct;

library ieee;
use ieee.std_logic_1164.all;	   
use ieee.std_logic_arith.all;
use work.sha3_pkg.all;
use work.sha3_jh_package.all;

entity jh_rd is
	generic ( bw : integer := 1024;							
			  cw : integer := 256);						
	port (
		input	: in std_logic_vector(bw-1 downto 0);		
		cr		: in std_logic_vector(cw-1 downto 0);		
		output 	: out std_logic_vector(bw-1 downto 0)
	);
end jh_rd;

architecture no_perm of jh_rd is
	type array_type is array (0 to cw-1) of std_logic_vector(3 downto 0);
	signal aa, vv, ww : array_type;		   
	signal ww_blk : std_logic_vector(bw-1 downto 0);
	
begin
	
	array4_gen : for i in bw/4-1 downto 0 generate
		aa(bw/4-1 - i) <= input(i*4+3 downto i*4); 
		ww_blk(i*4+3 downto i*4) <= ww(bw/4-1 - i);
	end generate;
	
	sbox_gen : for i in 0 to cw-1 generate
		vv(i) <= sbox_rom(conv_integer(cr(cw-1-i)),conv_integer(unsigned(aa(i))));
	end generate;
	
	lt_gen : for i in 0 to cw/2-1 generate
		lt_box : entity work.jh_lt(struct) port map ( a => vv(2*i), b => vv(2*i+1), c => ww(2*i), d => ww(2*i+1) );
	end generate;
	
	output <= ww_blk;			
end no_perm;

architecture struct of jh_rd is
	type array_type is array (0 to cw-1) of std_logic_vector(3 downto 0);
	signal aa, vv, ww : array_type;		   
	
	signal pi, pp, phi : array_type;
	signal phi_blk : std_logic_vector(bw-1 downto 0);
begin
	
	array4_gen : for i in bw/4-1 downto 0 generate
		aa(bw/4-1 - i) <= input(i*4+3 downto i*4);  	
		phi_blk(i*4+3 downto i*4) <= phi(bw/4-1 - i);
	end generate;
	
	sbox_gen : for i in 0 to cw-1 generate
		vv(i) <= sbox_rom(conv_integer(cr(cw-1-i)),conv_integer(unsigned(aa(i))));
	end generate;
	
	lt_gen : for i in 0 to cw/2-1 generate
		lt_box : entity work.jh_lt(struct) port map ( a => vv(2*i), b => vv(2*i+1), c => ww(2*i), d => ww(2*i+1) );
	end generate;	

		pi_gen : for  i in cw/4-1 downto 0 generate
			pi(i*4 + 0) <= ww(i*4 + 0);
			pi(i*4 + 1) <= ww(i*4 + 1);
			pi(i*4 + 2) <= ww(i*4 + 3);
			pi(i*4 + 3) <= ww(i*4 + 2);
		end generate;
		
		pp_gen : for i in cw/2-1 downto 0 generate
			pp(i)  			<= pi(i*2);
			pp(i + cw/2)	<= pi(i*2 + 1);
		end generate;
		
		phi_gen1 : for i in cw/2-1 downto 0 generate
			phi(i) <= pp(i);
		end generate;
		phi_gen : for i in cw/4-1 downto 0 generate
			phi(i*2 + cw/2)  	<= pp(i*2 + 1 + cw/2);
			phi(i*2 + 1 + cw/2) <= pp(i*2 + cw/2);	
		end generate;
	
	output <= phi_blk;
end struct;											   

library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.all; 
use work.sha3_pkg.all;
use work.sha3_jh_package.all;

entity jh_control_mem is		
	generic ( 
		h : integer := 256
	);
	port (					
		rst						: in std_logic;
		clk						: in std_logic;
		
		ec, lc					: out std_logic;
		ein, li					: out std_logic;
		wmin1, wmin2, wmin3, wmin4 : out std_logic;
		din_addr				: out std_logic_vector(log2(b/fbw)-1 downto 0);
		zc0, final_segment		: in std_logic;
		
		sf, srdp, srin 			: out std_logic;
		srout1, srout2			: out std_logic;				
		round 					: out std_logic_vector(log2(64*b/fbw)-1 downto 0);
		r_addr1_1, r_addr2_1	: out std_logic_vector(log2(b/fbw)-1 downto 0); 
		r_addr1_2, r_addr2_2	: out std_logic_vector(log2(b/fbw)-1 downto 0);
		whp, wr1, wr2			: out std_logic;
		sdout				 	: out std_logic_vector(h/256-1 downto 0);
		eout					: out std_logic;			
		
		src_ready				: in std_logic;
		src_read				: out std_logic;
		dst_ready 				: in std_logic;
		dst_write				: out std_logic
	);				 
end jh_control_mem;

architecture struct of jh_control_mem is				   	 
	signal fsm1_addr : std_logic_vector(log2(b/fbw)-1 downto 0);
	signal fsm2_addr1_1, fsm2_addr2_1 : std_logic_vector(log2(b/fbw)-1 downto 0); 
	signal fsm2_srout1, fsm2_srout2 : std_logic;

	signal fsm3_addr : std_logic_vector(log2(b/fbw)-1 downto 0);
	signal fsm3_srout1, fsm3_srout2 : std_logic;

	signal msg_ready, msg_end, hash_processed, hash_complete, load_next_block : std_logic;
begin
	
	fsm1_gen : entity work.jh_fsm1(beh) 
		port map (
		clk => clk, rst => rst, 
		ein => ein, li => li, ec => ec, lc => lc, zc0 => zc0, final_segment => final_segment,
		load_next_block => load_next_block, msg_ready => msg_ready, msg_end => msg_end,
		src_ready => src_ready, src_read => src_read,
		addr => fsm1_addr, w1 => wmin1, w2 => wmin2, w3 => wmin3, w4 => wmin4
	);	 
	
	fsm2_gen : entity work.jh_fsm2(beh) 
	port map (
		clk => clk, rst => rst, 
		sf => sf, srdp => srdp,
		round => round, wr1 => wr1, wr2 => wr2, whp => whp, 
		srin => srin, srout1 => fsm2_srout1, srout2 => fsm2_srout2,
		r_addr1_1 => fsm2_addr1_1, r_addr1_2 => r_addr1_2, r_addr2_1 => fsm2_addr2_1, r_addr2_2 => r_addr2_2,
		msg_ready => msg_ready,	msg_end => msg_end, hash_processed => hash_processed, 
		load_next_block	=> load_next_block, hash_complete => hash_complete
	); 
	
	fsm3_gen : entity work.jh_fsm3(beh) 
		generic map ( h => h )
		port map (
		clk => clk, rst => rst, 
		sdout => sdout, srout1 => fsm3_srout1, srout2 => fsm3_srout2,
		eout => eout, r_addr => fsm3_addr, msg_end => hash_processed, hash_complete => hash_complete,
		dst_ready => dst_ready,	dst_write => dst_write
	);	 	

	din_addr <= fsm2_addr1_1 when msg_ready = '1' else fsm1_addr;
	r_addr1_1 <= fsm3_addr when hash_processed = '1' else fsm2_addr1_1;
	r_addr2_1 <= fsm3_addr when hash_processed = '1' else fsm2_addr2_1;
	srout1 <= fsm3_srout1 when hash_processed = '1' else fsm2_srout1;
	srout2 <= fsm3_srout2 when hash_processed = '1' else fsm2_srout2;
	

end struct;

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use ieee.std_logic_unsigned.all;

use work.sha3_jh_package.all;
use work.sha3_pkg.all;

entity jh_datapath_mem is	
	generic ( h : integer := 256);
	port (
		clk : in std_logic;
		din  : in std_logic_vector(w-1 downto 0);	
		dout : out std_logic_vector(w-1 downto 0);	

		wmin1, wmin2, wmin3, wmin4 : in std_logic;
		din_addr : in std_logic_vector(log2(b/fbw)-1 downto 0);
		ec, lc, li, ein : in std_logic;	
		zc0 : out std_logic;
		round : in std_logic_vector(log2(64*b/fbw)-1 downto 0);
		r_addr1_1, r_addr1_2, r_addr2_1, r_addr2_2 : in std_logic_vector(log2(b/fbw)-1 downto 0);
		whp, wr1, wr2 : in std_logic;
		sf, srdp, srin, srout1, srout2 : in std_logic;			
		
		sdout : in std_logic_vector(h/256-1 downto 0);
		eout : in std_logic
	);				  
end jh_datapath_mem;


architecture struct of jh_datapath_mem is 
	signal min : std_logic_vector(fbw/2-1 downto 0);
	type inRAM_out is array (0 to 3) of std_logic_vector(fbw/8-1 downto 0);
	signal in_RAM_out : inRAM_out;
	signal wmin : std_logic_vector(3 downto 0);
	signal piso_in : std_logic_vector(fbw/8-1 downto 0);
	signal min_mem : std_logic_vector(fbw/2-1 downto 0);	

	signal crd_out : std_logic_vector(fbw/4-1 downto 0);
	
	signal rd_out :  std_logic_vector(fbw-1 downto 0);
	
	signal g, dg : std_logic_vector(fbw-1 downto 0);
	signal rin, rout : std_logic_vector(fbw-1 downto 0);
	signal rin1, rin2, rout1, rout2 : std_logic_vector(fbw/2-1 downto 0);
	type rRAM_out is array (0 to 3) of std_logic_vector(fbw/2-1 downto 0);
	signal r_out : rRAM_out;  
	type rRAM_addr is array (0 to 3) of std_logic_vector(log2(b/fbw)-1 downto 0);
	signal r_addr : rRAM_addr;
	signal wr : std_logic_vector(1 downto 0);
	signal hp_out : std_logic_vector(fbw/8-1 downto 0);
	signal hp, hm : std_logic_vector(fbw-1 downto 0);
	signal hp_or_iv : std_logic_vector(fbw-1 downto 0);
	signal c : std_logic_vector(15 downto 0);
	
	type iv_rom is array (0 to 1024/fbw-1) of std_logic_vector(fbw-1 downto 0);
	function split_iv ( input : std_logic_vector; split_size : integer ) return iv_rom;
	constant iv : iv_rom := split_iv (get_iv( h ), fbw); 
	
	type cr_rom is array (0 to 64*b/fbw-1) of std_logic_vector(fbw/4-1 downto 0);
	function split_cr ( input : rc_type; split_size : integer ) return cr_rom;
	constant rc_cons_fv : cr_rom := split_cr(rc_cons, fbw);
	
	
	function split_iv ( input : std_logic_vector; split_size : integer ) return iv_rom is
		variable retval : iv_rom;
		variable bits : integer := split_size / 8;
	begin
		for i in 0 to (1024 / split_size) - 1 loop
			retval(i) := input(1024 - bits * i - 1 downto 1024 - bits * (i + 1)) & input(896 - bits * i - 1 downto 896 - bits * (i + 1)) & 
				input(768 - bits * i - 1 downto 768 - bits * (i + 1)) & input(640 - bits * i - 1 downto 640 - bits * (i + 1)) &
				input(512 - bits * i - 1 downto 512 - bits * (i + 1)) & input(384 - bits * i - 1 downto 384 - bits * (i + 1)) &
				input(256 - bits * i - 1 downto 256 - bits * (i + 1)) & input(128 - bits * i - 1 downto 128 - bits * (i + 1));
		end loop;
		return retval;
	end split_iv;
	function split_cr ( input : rc_type; split_size : integer ) return cr_rom is
		variable retval : cr_rom;
	begin
		for i in 0 to 43 loop
			for j in 0 to (1024 / split_size) -1 loop
				retval(i * (1024 / split_size) + j) := input(i)(256 - (split_size/4) * j - 1 downto 256 - (split_size/4) * (j + 1));
			end loop;
		end loop;
		return retval;
	end split_cr;

    component ramn_M8_N16
      generic (
        M : INTEGER := 8;
        N : INTEGER := 16);
      port (
        input  : in  STD_LOGIC_VECTOR(M-1 DOWNTO 0);
        addr   : in  STD_LOGIC_VECTOR(log2(N)-1 DOWNTO 0);
        write  : in  STD_LOGIC;
        clk    : in  STD_LOGIC;
        output : out STD_LOGIC_VECTOR(M-1 DOWNTO 0));
    end component;

    component ramn_M32_N16
      generic (
        M : INTEGER := 32;
        N : INTEGER := 16);
      port (
        input  : in  STD_LOGIC_VECTOR(M-1 DOWNTO 0);
        addr   : in  STD_LOGIC_VECTOR(log2(N)-1 DOWNTO 0);
        write  : in  STD_LOGIC;
        clk    : in  STD_LOGIC;
        output : out STD_LOGIC_VECTOR(M-1 DOWNTO 0));
    end component;
    
begin						
	decounter_gen : decountern generic map ( N => 16, sub => 1 ) port map ( clk => clk, rst => '0', load => lc, en => ec, input => din(log2mw+15 downto log2mw), output => c);	
	zc0 <= '1' when c = 0 else '0';																																										

	shfin_gen : piso generic map ( N => w, M=> fbw/8 ) 
						port map ( clk => clk, sel => li, en => ein, 
									input => din, output => piso_in );

	wmin(0) <= wmin1;
	wmin(1) <= wmin2;
	wmin(2) <= wmin3;
	wmin(3) <= wmin4;
	in_RAM_gen : for i in 0 to 3 generate
		din_ram : ramn_M8_N16 generic map ( M => fbw/8, N => b/fbw) 
						port map ( input => piso_in, 
						addr => din_addr, 
						write => wmin(i), 
						clk => clk, 
						output => in_RAM_out(i));
	end generate;
	min <= in_RAM_out(0) & in_RAM_out(1) & in_RAM_out(2) & in_RAM_out(3);
	min_RAM_gen : ramn_M32_N16 generic map ( M => fbw/2, N => b/fbw) 
					port map ( input => min, 
								addr => r_addr1_1, 
								write => whp, 
								clk => clk, 
								output => min_mem);
	
	hm <= ( min xor hp_or_iv(fbw-1 downto fbw/2) ) & hp_or_iv(fbw/2-1 downto 0);	
	hp_or_iv <= iv(to_integer(unsigned(din_addr))) when sf = '1' else hp;	
	
	g <= form_group( hm, fbw, fbw/4 );
	rin <= g when srdp = '1' else rd_out;

	rin1 <= rin(fbw-1 downto fbw/2) when srin = '1' else rin(fbw/2-1 downto 0);
	rin2 <= rin(fbw-1 downto fbw/2) when srin = '0' else rin(fbw/2-1 downto 0);
	r_addr(0) <= r_addr1_1;
	r_addr(1) <= r_addr2_1;
	r_addr(2) <= r_addr1_2;
	r_addr(3) <= r_addr2_2;
	wr(0) <= wr1;
	wr(1) <= wr2;
	r_RAM_gen : for i in 0 to 1 generate
		r_ram1 : ramn_M32_N16 generic map ( M => fbw/2, N => b/fbw) 
						port map ( input => rin1, 
						addr => r_addr(2*i), 
						write => wr(i), 
						clk => clk, 
						output => r_out(2*i));
		r_ram2 : ramn_M32_N16 generic map ( M => fbw/2, N => b/fbw) 
						port map ( input => rin2, 
						addr => r_addr(2*i+1), 
						write => wr(i), 
						clk => clk, 
						output => r_out(2*i+1));
	end generate;
	rout1 <= r_out(0) when srout1 = '1' else r_out(2);
	rout2 <= r_out(1) when srout1 = '1' else r_out(3);
	rout <= (rout1 & rout2) when srout2 = '1' else (rout2 & rout1);
		
	dg <= degroup( rout, fbw, fbw/4 );
 	hp <= dg(fbw-1 downto fbw/2) & ( min_mem xor dg(fbw/2-1 downto 0) );

	h256 : if h=256 generate
		hp_out <= hp(fbw/4-1 downto fbw/8) when sdout = "0" else hp(fbw/8-1 downto 0);
	end generate;
	
	h512 : if h=512 generate
		hp_out <= hp(fbw/2-1 downto 3*fbw/8) when sdout = "00" else
					hp(3*fbw/8-1 downto fbw/4) when sdout = "01" else
					hp(fbw/4-1 downto fbw/8) when sdout = "10" else 
					hp(fbw/8-1 downto 0);
	end generate;	
		
	shfout_gen : sipo generic map ( M => fbw/8, N => w) 
						port map ( clk => clk, en => eout, 
									input => hp_out, output => dout );

	crd_out <= rc_cons_fv(to_integer(unsigned(round)));
	rd_gen 	: entity work.jh_rd(struct) generic map ( bw => fbw, cw => fbw/4  ) 
										port map ( input => rout, cr => crd_out, output => rd_out );
  	 
	
end struct;		   


library ieee;
use ieee.std_logic_1164.all; 
use work.sha3_pkg.all;
use work.sha3_jh_package.all;

entity jh_top is		
	generic (		
		hs : integer := HASH_SIZE_256;
		UF : integer := 1;
		RCMODE : integer := ON_THE_FLY
		); 
	port (		
		rst 	: in std_logic;
		clk 	: in std_logic;
		
		src_ready : in std_logic;
		src_read  : out std_logic;
		dst_ready : in std_logic;
		dst_write : out std_logic;		
		din		: in std_logic_vector(w-1 downto 0);
		dout	: out std_logic_vector(w-1 downto 0)
	);	   
end jh_top;


architecture structure of jh_top is 
	signal lc, ec, li, ein : std_logic;
	signal wmin1, wmin2, wmin3, wmin4 : std_logic;
	signal din_addr : std_logic_vector(log2(b/fbw)-1 downto 0);
	signal zc0 : std_logic;
	signal round : std_logic_vector(log2(64*b/fbw)-1 downto 0);
	signal r_addr1_1, r_addr1_2, r_addr2_1, r_addr2_2 : std_logic_vector(log2(b/fbw)-1 downto 0);
	signal whp, wr1, wr2 : std_logic;
	signal sf, srdp, srin, srout1, srout2 : std_logic;
	signal sdout : std_logic_vector(hs/256-1 downto 0); 
	signal eout : std_logic;

begin					
	control : entity work.jh_control_mem(struct)
			generic map ( h => hs )
			port map (
			rst => rst, clk => clk,
			src_ready => src_ready, src_read => src_read, dst_ready => dst_ready, dst_write => dst_write,
			wmin1 => wmin1, wmin2 => wmin2, wmin3 => wmin3, wmin4 => wmin4,
			final_segment => din(w-1), din_addr => din_addr, 
			zc0 => zc0, ec => ec, lc => lc, li => li, ein => ein,
			r_addr1_1 => r_addr1_1, r_addr2_1 => r_addr2_1, r_addr1_2 => r_addr1_2, r_addr2_2 => r_addr2_2,
			sf => sf, srdp => srdp, srin => srin, srout1 => srout1, srout2 => srout2,
			whp => whp, wr1 => wr1, wr2 => wr2, round => round,	 
			sdout => sdout, eout => eout
		);			
		
	datapath : entity work.jh_datapath_mem(struct) 
			generic map ( h => hs )
			port map (
			clk => clk, din => din, dout => dout,
			wmin1 => wmin1, wmin2 => wmin2, wmin3 => wmin3, wmin4 => wmin4,
			din_addr => din_addr, zc0 => zc0, ec => ec, lc => lc, li => li, ein => ein,
			r_addr1_1 => r_addr1_1, r_addr2_1 => r_addr2_1, r_addr1_2 => r_addr1_2, r_addr2_2 => r_addr2_2,
			sf => sf, srdp => srdp, srin => srin, srout1 => srout1, srout2 => srout2,
			whp => whp, wr1 => wr1, wr2 => wr2, round => round,	 
			sdout => sdout, eout => eout
		);		  

	
end structure;
	
	
library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

use work.axi4s_pkg.all;

entity ll_fifo_if is
  port (
    clk                  : in  std_logic;
    reset_b              : in  std_logic;
    ll_rx_port_data      : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    ll_rx_port_src_rdy_n : in  std_logic;
    ll_rx_port_dst_rdy_n : out std_logic;
    ll_rx_port_sof_n     : in  std_logic;
    ll_rx_port_eof_n     : in  std_logic;
    ll_tx_port_data      : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    ll_tx_port_src_rdy_n : out std_logic;
    ll_tx_port_dst_rdy_n : in  std_logic;
    ll_tx_port_sof_n     : out std_logic;
    ll_tx_port_eof_n     : out std_logic;
    tx_fifo_data         : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    tx_fifo_we           : out std_logic;
    tx_fifo_full         : in  std_logic;
    rx_fifo_data         : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    rx_fifo_re           : out std_logic;
    rx_fifo_empty        : in  std_logic
    );
end entity ll_fifo_if;

architecture BEH of ll_fifo_if is
  type CTLR_FSM_TYPE is (recv_adr, recv_num, recv_tid, recv_dat, recv_err,
                         chk_fifo, send_adr, send_num, send_tid, read_dat, send_dat);
  signal ctlr_fsm_cs, ctlr_fsm_ns    : CTLR_FSM_TYPE;
  signal ll_adr, ll_adr_next         : std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
  signal ll_num, ll_num_next         : std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
  signal ll_tid, ll_tid_next         : std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
  subtype SHORT_INT is integer range 0 to 255;
  signal data_count, data_count_next : SHORT_INT;
  signal addr_offset                 : std_logic_vector(1 downto 0);
  signal addr_offset_next            : std_logic_vector(1 downto 0);
  signal fifo_status                 : std_logic_vector(C_SWITCH_WIDTH-1 downto 0);

begin
  tx_fifo_data <= ll_rx_port_data(C_SWITCH_WIDTH-1 downto 0);

  fifo_status(C_SWITCH_WIDTH-1 downto 2) <= (others => '0');
  fifo_status(1)                         <= tx_fifo_full;
  fifo_status(0)                         <= rx_fifo_empty;

  CTLR_FSM_STATE_PROC : process(clk) is
  begin
    if ((clk'event) and (clk = '1')) then
      if (reset_b = '0') then
        ctlr_fsm_cs <= recv_adr;
        ll_adr      <= (others => '0');
        ll_num      <= (others => '0');
        ll_tid      <= (others => '0');
        addr_offset <= (others => '0');
        data_count  <= 0;
      else
        ctlr_fsm_cs <= ctlr_fsm_ns;
        ll_adr      <= ll_adr_next;
        ll_num      <= ll_num_next;
        ll_tid      <= ll_tid_next;
        addr_offset <= addr_offset_next;
        data_count  <= data_count_next;
      end if;
    end if;
  end process CTLR_FSM_STATE_PROC;

  CTLR_FSM_LOGIC_PROC : process (addr_offset, ctlr_fsm_cs, data_count,
                                 fifo_status, ll_adr, ll_num, ll_rx_port_data,
                                 ll_rx_port_eof_n, ll_rx_port_sof_n,
                                 ll_rx_port_src_rdy_n, ll_tid,
                                 ll_tx_port_dst_rdy_n, rx_fifo_data,
                                 rx_fifo_empty, tx_fifo_full) is
  begin
    ctlr_fsm_ns      <= ctlr_fsm_cs;
    ll_adr_next      <= ll_adr;
    ll_num_next      <= ll_num;
    ll_tid_next      <= ll_tid;
    addr_offset_next <= addr_offset;
    data_count_next  <= data_count;

    case (ctlr_fsm_cs) is
      when recv_adr =>
        ll_rx_port_dst_rdy_n <= '0';
        ll_tx_port_data      <= (others => '0');
        ll_tx_port_sof_n     <= '1';
        ll_tx_port_eof_n     <= '1';
        ll_tx_port_src_rdy_n <= '1';
        tx_fifo_we           <= '0';
        rx_fifo_re           <= '0';
        ll_adr_next          <= ll_rx_port_data;
        addr_offset_next     <= ll_rx_port_data(3 downto 2);
        if ((ll_rx_port_sof_n = '0') and (ll_rx_port_src_rdy_n = '0')) then
          ctlr_fsm_ns <= recv_num;
        end if;

      when recv_num =>
        ll_rx_port_dst_rdy_n <= '0';
        ll_tx_port_data      <= (others => '0');
        ll_tx_port_sof_n     <= '1';
        ll_tx_port_eof_n     <= '1';
        ll_tx_port_src_rdy_n <= '1';
        tx_fifo_we           <= '0';
        rx_fifo_re           <= '0';
        ll_num_next          <= ll_rx_port_data;
        if (ll_rx_port_src_rdy_n = '0') then
          ctlr_fsm_ns <= recv_tid;
        end if;

      when recv_tid =>
        ll_rx_port_dst_rdy_n <= '0';
        ll_tx_port_data      <= (others => '0');
        ll_tx_port_sof_n     <= '1';
        ll_tx_port_eof_n     <= '1';
        ll_tx_port_src_rdy_n <= '1';
        tx_fifo_we           <= '0';
        rx_fifo_re           <= '0';
        if (ll_rx_port_src_rdy_n = '0') then
          ll_adr_next <= ll_rx_port_data(C_TRANS_ID_WIDTH-1 downto 0) & ll_adr(C_TRANS_HIGH-1 downto C_TRANS_LOW);
        end if;        
        if ((ll_rx_port_src_rdy_n = '0') and
            (ll_rx_port_data(C_TRANS_HIGH-1 downto C_TRANS_LOW) = C_TRANS_TYPE_RD_REQ)) then
          ll_tid_next <= C_TRANS_TYPE_RD_ACK & ll_rx_port_data(C_TRANS_ID_WIDTH-1 downto 0);
          if (addr_offset = "00") then
            ctlr_fsm_ns <= chk_fifo;
          else
            ctlr_fsm_ns <= send_adr;
          end if;
        elsif ((ll_rx_port_src_rdy_n = '0') and
               (ll_rx_port_data(C_TRANS_HIGH-1 downto C_TRANS_LOW) = C_TRANS_TYPE_WR_REQ)) then
          ll_tid_next <= C_TRANS_TYPE_WR_ACK & ll_rx_port_data(C_TRANS_ID_WIDTH-1 downto 0);
          ctlr_fsm_ns <= recv_dat;
        end if;

      when chk_fifo =>
        ll_rx_port_dst_rdy_n <= '1';
        ll_tx_port_data      <= (others => '0');
        ll_tx_port_sof_n     <= '1';
        ll_tx_port_eof_n     <= '1';
        ll_tx_port_src_rdy_n <= '1';
        tx_fifo_we           <= '0';
        rx_fifo_re           <= '0';
        if (rx_fifo_empty = '0') then
          ctlr_fsm_ns <= send_adr;
        end if;

      when recv_dat =>
        ll_rx_port_dst_rdy_n <= tx_fifo_full;
        ll_tx_port_data      <= (others => '0');
        ll_tx_port_sof_n     <= '1';
        ll_tx_port_eof_n     <= '1';
        ll_tx_port_src_rdy_n <= '1';
        tx_fifo_we           <= not(ll_rx_port_src_rdy_n or tx_fifo_full);
        rx_fifo_re           <= '0';
        if ((ll_rx_port_src_rdy_n = '0') and (ll_rx_port_eof_n = '0') and
            (tx_fifo_full = '0')) then
          ll_num_next <= C_TRANS_ACK_LEN;
          ctlr_fsm_ns <= send_adr;
        end if;

      when send_adr =>
        ll_rx_port_dst_rdy_n <= '1';
        ll_tx_port_data      <= ll_adr;
        ll_tx_port_sof_n     <= '0';
        ll_tx_port_eof_n     <= '1';
        ll_tx_port_src_rdy_n <= '0';
        tx_fifo_we           <= '0';
        rx_fifo_re           <= '0';
        if (ll_tx_port_dst_rdy_n = '0') then
          ctlr_fsm_ns <= send_num;
        end if;

      when send_num =>
        ll_rx_port_dst_rdy_n <= '1';
        ll_tx_port_data      <= ll_num;
        ll_tx_port_sof_n     <= '1';
        ll_tx_port_eof_n     <= '1';
        ll_tx_port_src_rdy_n <= '0';
        tx_fifo_we           <= '0';
        rx_fifo_re           <= '0';
        if (ll_tx_port_dst_rdy_n = '0') then
          ctlr_fsm_ns <= send_tid;
        end if;

      when send_tid =>
        ll_rx_port_dst_rdy_n <= '1';
        ll_tx_port_data      <= ll_tid;
        ll_tx_port_sof_n     <= '1';
        if (ll_tid(C_TRANS_HIGH-1 downto C_TRANS_LOW) = C_TRANS_TYPE_WR_ACK) then
          ll_tx_port_eof_n <= '0';
        else
          ll_tx_port_eof_n <= '1';
        end if;
        ll_tx_port_src_rdy_n <= '0';
        tx_fifo_we           <= '0';
        rx_fifo_re           <= '0';
        data_count_next      <= 0;
        if ((ll_tx_port_dst_rdy_n = '0') and
            (ll_tid(C_TRANS_HIGH-1 downto C_TRANS_LOW) = C_TRANS_TYPE_RD_ACK)) then
          if (addr_offset = "00") then
            ctlr_fsm_ns <= read_dat;
          else
            data_count_next <= data_count + 1;
            ctlr_fsm_ns     <= send_dat;
          end if;
        elsif (ll_tx_port_dst_rdy_n = '0') then
          ctlr_fsm_ns <= recv_adr;
        end if;

      when read_dat =>
        ll_rx_port_dst_rdy_n <= '1';
        ll_tx_port_data      <= (others => '0');
        ll_tx_port_sof_n     <= '1';
        ll_tx_port_eof_n     <= '1';
        ll_tx_port_src_rdy_n <= '1';
        tx_fifo_we           <= '0';
        rx_fifo_re           <= not(rx_fifo_empty);
        if (rx_fifo_empty = '0') then
          data_count_next <= data_count + 1;
          ctlr_fsm_ns     <= send_dat;
        end if;

      when send_dat =>
        ll_rx_port_dst_rdy_n <= '1';
        if (addr_offset = "00") then
          ll_tx_port_data <= rx_fifo_data;
        else
          ll_tx_port_data <= fifo_status;
        end if;
        ll_tx_port_sof_n <= '1';
        if ((ll_tx_port_dst_rdy_n = '0') and (data_count >= ll_num)) then
          ll_tx_port_eof_n <= '0';
        else
          ll_tx_port_eof_n <= '1';
        end if;
        ll_tx_port_src_rdy_n <= '0';
        tx_fifo_we           <= '0';
        if ((ll_tx_port_dst_rdy_n = '0') and (data_count >= ll_num)) then
          rx_fifo_re  <= '0';
          ctlr_fsm_ns <= recv_adr;            
        elsif ((ll_tx_port_dst_rdy_n = '0') and (rx_fifo_empty = '0')) then
          rx_fifo_re      <= '1';
          data_count_next <= data_count + 1;  
          ctlr_fsm_ns     <= send_dat;
        elsif ((ll_tx_port_dst_rdy_n = '0') and (rx_fifo_empty = '1')) then
          rx_fifo_re  <= '0';
          ctlr_fsm_ns <= read_dat;            
        else
          rx_fifo_re  <= '0';
          ctlr_fsm_ns <= send_dat;
        end if;

      when recv_err =>
        report "LL_FIFO_IF: In RECV_ERRO State" severity warning;
        ll_rx_port_dst_rdy_n <= '0';
        tx_fifo_we           <= '0';
        rx_fifo_re           <= '0';
        ll_tx_port_data      <= (others => '0');
        ll_tx_port_sof_n     <= '1';
        ll_tx_port_eof_n     <= '1';
        ll_tx_port_src_rdy_n <= '1';
        if ((ll_rx_port_src_rdy_n = '0') and (ll_rx_port_eof_n = '0')) then
          ctlr_fsm_ns <= recv_adr;
        end if;

      when others =>
        ll_rx_port_dst_rdy_n <= '1';
        tx_fifo_we           <= '0';
        rx_fifo_re           <= '0';
        ll_tx_port_data      <= (others => '0');
        ll_tx_port_sof_n     <= '1';
        ll_tx_port_eof_n     <= '1';
        ll_tx_port_src_rdy_n <= '1';
        ctlr_fsm_ns          <= recv_adr;
    end case;
  end process CTLR_FSM_LOGIC_PROC;

end BEH;
library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

use work.axi4s_pkg.all;


entity ll_to_wb_bridge is
  port (
    clk                  : in  std_logic;
    reset_b              : in  std_logic;
    SLV_DAT_O            : out std_logic_vector(31 downto 0);
    SLV_DAT_I            : in  std_logic_vector(31 downto 0);
    SEL_O                : out std_logic_vector(3 downto 0);
    CYC_O                : out std_logic;
    STB_O                : out std_logic;
    WE_O                 : out std_logic;
    ACK_I                : in  std_logic;
    RTY_I                : in  std_logic;
    ADR_O                : out std_logic_vector(0 to 31);
    base_addr            : in  std_logic_vector(31 downto 0);
    ll_rx_port_data      : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    ll_rx_port_data_be   : in  std_logic_vector(C_SWITCH_WIDTH/8-1 downto 0);
    ll_rx_port_src_rdy_n : in  std_logic;
    ll_rx_port_dst_rdy_n : out std_logic;
    ll_rx_port_sof_n     : in  std_logic;
    ll_rx_port_eof_n     : in  std_logic;
    rx_dst               : in  std_logic_vector(C_TDEST_WIDTH-1 downto 0);
    rx_src               : in  std_logic_vector(C_TDEST_WIDTH-1 downto 0);
    rx_len               : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    ll_tx_port_data      : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    ll_tx_port_data_be   : out std_logic_vector(C_SWITCH_WIDTH/8-1 downto 0);
    ll_tx_port_src_rdy_n : out std_logic;
    ll_tx_port_dst_rdy_n : in  std_logic;
    ll_tx_port_sof_n     : out std_logic;
    ll_tx_port_eof_n     : out std_logic;
    tx_dst               : out std_logic_vector(C_TDEST_WIDTH-1 downto 0);
    tx_src               : out std_logic_vector(C_TDEST_WIDTH-1 downto 0);
    tx_len               : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0)
    );
end entity ll_to_wb_bridge;


architecture beh of ll_to_wb_bridge is

  type CTLR_FSM_TYPE is (recv_adr, recv_num, recv_tid, recv_dat, assert_wb,
                         send_adr, send_num, send_tid,
                         send_dat, forward_ll_adr, forward_ll);
  signal ctlr_fsm_cs, ctlr_fsm_ns : CTLR_FSM_TYPE;
  signal ll_adr, ll_adr_next      : std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
  signal ll_num, ll_num_next      : std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
  signal ll_tid, ll_tid_next      : std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
  signal ll_dat, ll_dat_next      : std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
  signal ll_be, ll_be_next        : std_logic_vector(C_SWITCH_WIDTH/8-1 downto 0);    

  signal wb_adr, wb_adr_next : std_logic_vector(C_SWITCH_WIDTH-1 downto 0);

  signal local_transmit : std_logic;
  
begin
  local_transmit <= '1' when ((ctlr_fsm_cs = send_adr) or
                              (ctlr_fsm_cs = send_num) or
                              (ctlr_fsm_cs = send_tid) or
                              (ctlr_fsm_cs = send_dat)) else '0';
  
  tx_dst <= rx_dst when (local_transmit = '0') else rx_src;
  tx_src <= rx_src when (local_transmit = '0') else rx_dst;
  tx_len <= rx_len when (local_transmit = '0') else ll_num + C_LL_PACKET_OVERHEAD;
  
  CTLR_FSM_STATE_PROC : process(clk) is
  begin
    if ((clk'event) and (clk = '1')) then
      if (reset_b = '0') then
        ctlr_fsm_cs <= recv_adr;
        ll_adr      <= (others => '0');
        ll_num      <= (others => '0');
        ll_tid      <= (others => '0');
        ll_dat      <= (others => '0');
        wb_adr      <= (others => '0');
        ll_be       <= (others => '0');
      else
        ctlr_fsm_cs <= ctlr_fsm_ns;
        ll_adr      <= ll_adr_next;
        ll_num      <= ll_num_next;
        ll_tid      <= ll_tid_next;
        ll_dat      <= ll_dat_next;
        wb_adr      <= wb_adr_next;
        ll_be       <= ll_be_next;
      end if;
    end if;
  end process CTLR_FSM_STATE_PROC;

  CTLR_FSM_LOGIC_PROC : process (ACK_I, SLV_DAT_I, base_addr, ctlr_fsm_cs,
                                 ll_adr, ll_dat, ll_num, ll_rx_port_data_be,
                                 ll_rx_port_data, ll_rx_port_eof_n,
                                 ll_rx_port_sof_n, ll_rx_port_src_rdy_n,
                                 ll_tid, ll_tx_port_dst_rdy_n, wb_adr, ll_be) is
  begin
    ctlr_fsm_ns <= ctlr_fsm_cs;
    ll_adr_next <= ll_adr;
    ll_num_next <= ll_num;
    ll_tid_next <= ll_tid;
    ll_dat_next <= ll_dat;
    wb_adr_next <= wb_adr;
    ll_be_next  <= ll_be;

    case (ctlr_fsm_cs) is
      when recv_adr =>
        ll_rx_port_dst_rdy_n <= '0';
        ll_tx_port_data      <= (others => '0');
        ll_tx_port_data_be   <= (others => '0');
        ll_tx_port_sof_n     <= '1';
        ll_tx_port_eof_n     <= '1';
        ll_tx_port_src_rdy_n <= '1';
        ADR_O                <= (others => '0');
        SLV_DAT_O            <= (others => '0');
        SEL_O                <= (others => '0');
        CYC_O                <= '0';
        STB_O                <= '0';
        WE_O                 <= '0';
        ll_adr_next          <= ll_rx_port_data;
        wb_adr_next          <= ll_rx_port_data;
        ll_be_next           <= (others => '0');  
        if ((ll_rx_port_sof_n = '0') and (ll_rx_port_src_rdy_n = '0')) then
          if (base_addr(31 downto 24) = ll_rx_port_data(31 downto 24)) then
            ctlr_fsm_ns <= recv_num;
          else
            ctlr_fsm_ns <= forward_ll_adr;
          end if;
        end if;

      when recv_num =>
        ll_rx_port_dst_rdy_n <= '0';
        ll_tx_port_data      <= (others => '0');
        ll_tx_port_data_be   <= (others => '0');
        ll_tx_port_sof_n     <= '1';
        ll_tx_port_eof_n     <= '1';
        ll_tx_port_src_rdy_n <= '1';
        ADR_O                <= (others => '0');
        SLV_DAT_O            <= (others => '0');
        SEL_O                <= (others => '0');
        CYC_O                <= '0';
        STB_O                <= '0';
        WE_O                 <= '0';
        ll_num_next          <= ll_rx_port_data;
        if (ll_rx_port_src_rdy_n = '0') then
          ctlr_fsm_ns <= recv_tid;
        end if;

      when recv_tid =>
        ll_rx_port_dst_rdy_n <= '0';
        ll_tx_port_data      <= (others => '0');
        ll_tx_port_data_be   <= (others => '0');        
        ll_tx_port_sof_n     <= '1';
        ll_tx_port_eof_n     <= '1';
        ll_tx_port_src_rdy_n <= '1';
        ADR_O                <= (others => '0');
        SLV_DAT_O            <= (others => '0');
        SEL_O                <= (others => '0');
        CYC_O                <= '0';
        STB_O                <= '0';
        WE_O                 <= '0';
        if (ll_rx_port_src_rdy_n = '0') then
          ll_adr_next <= ll_rx_port_data(C_TRANS_ID_WIDTH-1 downto 0) & ll_adr(C_TRANS_HIGH-1 downto C_TRANS_LOW);
        end if;
        if (ll_rx_port_src_rdy_n = '0')then
          if (ll_rx_port_data(C_TRANS_HIGH-1 downto C_TRANS_LOW) = C_TRANS_TYPE_RD_REQ) then
            ll_tid_next <= C_TRANS_TYPE_RD_ACK & ll_rx_port_data(C_TRANS_ID_WIDTH-1 downto 0);
            ll_be_next  <= ll_rx_port_data_be;  
            ctlr_fsm_ns <= assert_wb;
          else
            ll_tid_next <= C_TRANS_TYPE_WR_ACK & ll_rx_port_data(C_TRANS_ID_WIDTH-1 downto 0);
            ctlr_fsm_ns <= recv_dat;
          end if;
        end if;

      when recv_dat =>
        ll_rx_port_dst_rdy_n <= '0';
        ll_tx_port_data      <= (others => '0');
        ll_tx_port_data_be   <= (others => '0');        
        ll_tx_port_sof_n     <= '1';
        ll_tx_port_eof_n     <= '1';
        ll_tx_port_src_rdy_n <= '1';
        ADR_O                <= (others => '0');
        SLV_DAT_O            <= (others => '0');
        SEL_O                <= (others => '0');
        CYC_O                <= '0';
        STB_O                <= '0';
        WE_O                 <= '0';
        ll_dat_next          <= ll_rx_port_data;
        ll_be_next           <= ll_rx_port_data_be;
        if (ll_rx_port_src_rdy_n = '0') then
          ctlr_fsm_ns <= assert_wb;
          ll_num_next <= C_TRANS_ACK_LEN;
        end if;

      when assert_wb =>
        ll_rx_port_dst_rdy_n <= '1';
        ll_tx_port_data      <= (others => '0');
        ll_tx_port_data_be   <= (others => '0');        
        ll_tx_port_sof_n     <= '1';
        ll_tx_port_eof_n     <= '1';
        ll_tx_port_src_rdy_n <= '1';
        ADR_O                <= wb_adr;
        SEL_O                <= ll_be;
        CYC_O                <= '1';
        STB_O                <= '1';
        if (ll_tid(C_TRANS_HIGH-1 downto C_TRANS_LOW) = C_TRANS_TYPE_WR_ACK) then
          WE_O      <= '1';
          SLV_DAT_O <= ll_dat;
        else
          WE_O        <= '0';
          SLV_DAT_O   <= (others => '0');
          ll_dat_next <= SLV_DAT_I;
        end if;
        if (ACK_I = '1') then
          ctlr_fsm_ns <= send_adr;
        end if;

      when send_adr =>
        ll_rx_port_dst_rdy_n <= '1';
        ll_tx_port_data      <= ll_adr;
        ll_tx_port_data_be   <= (others => '1');
        ll_tx_port_sof_n     <= '0';
        ll_tx_port_eof_n     <= '1';
        ll_tx_port_src_rdy_n <= '0';
        ADR_O                <= (others => '0');
        SLV_DAT_O            <= (others => '0');
        SEL_O                <= (others => '0');
        CYC_O                <= '0';
        STB_O                <= '0';
        WE_O                 <= '0';
        if (ll_tx_port_dst_rdy_n = '0') then
          ctlr_fsm_ns <= send_num;
        end if;

      when send_num =>
        ll_rx_port_dst_rdy_n <= '1';
        ll_tx_port_data      <= ll_num;
        ll_tx_port_data_be   <= (others => '1');
        ll_tx_port_sof_n     <= '1';
        ll_tx_port_eof_n     <= '1';
        ll_tx_port_src_rdy_n <= '0';
        ADR_O                <= (others => '0');
        SLV_DAT_O            <= (others => '0');
        SEL_O                <= (others => '0');
        CYC_O                <= '0';
        STB_O                <= '0';
        WE_O                 <= '0';
        if (ll_tx_port_dst_rdy_n = '0') then
          ctlr_fsm_ns <= send_tid;
        end if;

      when send_tid =>
        ll_rx_port_dst_rdy_n <= '1';
        ll_tx_port_data      <= ll_tid;
        ll_tx_port_data_be   <= (others => '1');
        ll_tx_port_sof_n     <= '1';
        if (ll_tid(C_TRANS_HIGH-1 downto C_TRANS_LOW) = C_TRANS_TYPE_WR_ACK) then
          ll_tx_port_eof_n <= '0';
        else
          ll_tx_port_eof_n <= '1';
        end if;
        ll_tx_port_src_rdy_n <= '0';
        ADR_O                <= (others => '0');
        SLV_DAT_O            <= (others => '0');
        SEL_O                <= (others => '0');
        CYC_O                <= '0';
        STB_O                <= '0';
        WE_O                 <= '0';
        if (ll_tx_port_dst_rdy_n = '0') then
          if ((ll_tid(C_TRANS_HIGH-1 downto C_TRANS_LOW) = C_TRANS_TYPE_RD_ACK)) then
            ctlr_fsm_ns <= send_dat;
          else
            ctlr_fsm_ns <= recv_adr;
          end if;
        end if;

      when send_dat =>
        ll_rx_port_dst_rdy_n <= '1';
        ll_tx_port_data      <= ll_dat;
        ll_tx_port_data_be   <= (others => '1');
        ll_tx_port_sof_n     <= '1';
        ll_tx_port_eof_n     <= '0';
        ll_tx_port_src_rdy_n <= '0';
        ADR_O                <= (others => '0');
        SLV_DAT_O            <= (others => '0');
        SEL_O                <= (others => '0');
        CYC_O                <= '0';
        STB_O                <= '0';
        WE_O                 <= '0';
        if (ll_tx_port_dst_rdy_n = '0') then
          ctlr_fsm_ns <= recv_adr;
        end if;

      when forward_ll_adr =>
        ll_rx_port_dst_rdy_n <= '1';
        ll_tx_port_data      <= ll_adr;
        ll_tx_port_data_be   <= (others => '1');
        ll_tx_port_sof_n     <= '0';
        ll_tx_port_eof_n     <= '1';
        ll_tx_port_src_rdy_n <= '0';
        ADR_O                <= (others => '0');
        SLV_DAT_O            <= (others => '0');
        SEL_O                <= (others => '0');
        CYC_O                <= '0';
        STB_O                <= '0';
        WE_O                 <= '0';
        if (ll_tx_port_dst_rdy_n = '0') then
          ctlr_fsm_ns <= forward_ll;
        end if;

      when forward_ll =>
        ll_rx_port_dst_rdy_n <= ll_tx_port_dst_rdy_n;
        ll_tx_port_data      <= ll_rx_port_data;
        ll_tx_port_data_be   <= (others => '1');
        ll_tx_port_sof_n     <= '1';
        ll_tx_port_eof_n     <= ll_rx_port_eof_n;
        ll_tx_port_src_rdy_n <= ll_rx_port_src_rdy_n;
        ADR_O                <= (others => '0');
        SLV_DAT_O            <= (others => '0');
        SEL_O                <= (others => '0');
        CYC_O                <= '0';
        STB_O                <= '0';
        WE_O                 <= '0';
        if ((ll_tx_port_dst_rdy_n = '0') and (ll_rx_port_src_rdy_n = '0') and
            (ll_rx_port_eof_n = '0')) then
          ctlr_fsm_ns <= recv_adr;
        end if;

      when others =>
        ll_rx_port_dst_rdy_n <= '1';
        ll_tx_port_data      <= (others => '0');
        ll_tx_port_data_be   <= (others => '0');
        ll_tx_port_sof_n     <= '1';
        ll_tx_port_eof_n     <= '1';
        ll_tx_port_src_rdy_n <= '1';
        ADR_O                <= (others => '0');
        SLV_DAT_O            <= (others => '0');
        SEL_O                <= (others => '0');
        CYC_O                <= '0';
        STB_O                <= '0';
        WE_O                 <= '0';
        ctlr_fsm_ns          <= recv_adr;
    end case;
  end process CTLR_FSM_LOGIC_PROC;
  
  
end beh;
library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

use work.axi4s_pkg.all;

entity ll_uart_if_v2 is
  generic (
    C_DATA_WIDTH : integer := 8
    );
  port (
    clk                  : in  std_logic;
    reset_b              : in  std_logic;
    ll_rx_port_data      : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    ll_rx_port_data_be   : in  std_logic_vector(C_SWITCH_WIDTH/8-1 downto 0);    
    ll_rx_port_src_rdy_n : in  std_logic;
    ll_rx_port_dst_rdy_n : out std_logic;
    ll_rx_port_sof_n     : in  std_logic;
    ll_rx_port_eof_n     : in  std_logic;
    rx_dst               : in  std_logic_vector(C_TDEST_WIDTH-1 downto 0);
    rx_src               : in  std_logic_vector(C_TDEST_WIDTH-1 downto 0);
    rx_len               : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);    
    ll_tx_port_data      : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    ll_tx_port_data_be   : out std_logic_vector(C_SWITCH_WIDTH/8-1 downto 0);    
    ll_tx_port_src_rdy_n : out std_logic;
    ll_tx_port_dst_rdy_n : in  std_logic;
    ll_tx_port_sof_n     : out std_logic;
    ll_tx_port_eof_n     : out std_logic;
    tx_dst               : out std_logic_vector(C_TDEST_WIDTH-1 downto 0);
    tx_src               : out std_logic_vector(C_TDEST_WIDTH-1 downto 0);
    tx_len               : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);    
    base_addr            : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    tx_fifo_data         : out std_logic_vector(C_DATA_WIDTH-1 downto 0);
    tx_fifo_we           : out std_logic;
    tx_fifo_full         : in  std_logic;
    rx_fifo_data         : in  std_logic_vector(C_DATA_WIDTH-1 downto 0);
    rx_fifo_re           : out std_logic;
    rx_fifo_empty        : in  std_logic;
    baud_freq            : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    baud_limit           : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    fifos_status         : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0)
    );
end entity ll_uart_if_v2;

architecture BEH of ll_uart_if_v2 is
  constant C_NORMAL : std_logic_vector := x"000";  
  constant C_BAUD_F : std_logic_vector := x"004";  
  constant C_BAUD_L : std_logic_vector := x"008";  
  constant C_STATUS : std_logic_vector := x"00C";  
  constant C_M_CHK  : std_logic_vector := x"010";  
  constant C_M_SET  : std_logic_vector := x"110";  
  constant C_M_CLR  : std_logic_vector := x"210";  

  constant C_DATA_PAD        : std_logic_vector(C_SWITCH_WIDTH-C_DATA_WIDTH-1 downto 0)  := (others => '0');
  constant C_MUTEX_UNUSED    : std_logic_vector(C_SWITCH_WIDTH-1 downto 0)               := (others => '0');
  constant C_MUTEX_PAD       : std_logic_vector(C_SWITCH_WIDTH-C_TDEST_WIDTH-1 downto 0) := (others => '0');
  constant C_BAUD_FREQ_INIT  : std_logic_vector(31 downto 0)                             := x"00000120";
  constant C_BAUD_LIMIT_INIT : std_logic_vector(31 downto 0)                             := x"00003BE9";

  type CTLR_FSM_TYPE is (recv_adr, recv_num, recv_tid, recv_dat, recv_err,
                         chk_fifo, send_adr, send_num, send_tid, read_dat,
                         send_dat, send_others, forward_ll_adr, forward_ll);
  signal  ctlr_fsm_cs, ctlr_fsm_ns          : CTLR_FSM_TYPE;
  signal  ll_adr, ll_adr_next               : std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
  signal  ll_num, ll_num_next               : std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
  signal  ll_tid, ll_tid_next               : std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
  subtype SHORT_INT is integer range 0 to 255;
  signal  data_count, data_count_next       : SHORT_INT;
  signal  baud_freq_o, baud_freq_next       : std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
  signal  baud_limit_o, baud_limit_next     : std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
  signal  mutex, mutex_next                 : std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
  signal  uart_cmd, uart_cmd_next           : std_logic_vector(11 downto 0);
  signal  uart_cmd_data, uart_cmd_data_next : std_logic_vector(C_SWITCH_WIDTH-1 downto 0);

  signal local_transmit : std_logic;

begin
  local_transmit <= '1' when ((ctlr_fsm_cs = send_adr) or
                              (ctlr_fsm_cs = send_num) or
                              (ctlr_fsm_cs = send_tid) or
                              (ctlr_fsm_cs = send_dat)) else '0';
  
  tx_fifo_data <= ll_rx_port_data(C_DATA_WIDTH-1 downto 0);

  tx_dst <= rx_dst when (local_transmit = '0') else rx_src;
  tx_src <= rx_src when (local_transmit = '0') else rx_dst;
  tx_len <= rx_len when (local_transmit = '0') else ll_num + C_LL_PACKET_OVERHEAD;

  baud_freq  <= baud_freq_o;
  baud_limit <= baud_limit_o;

  UART_CMD_DATA_PROC : process (baud_freq_o, baud_limit_o, fifos_status, mutex,
                                rx_fifo_data, rx_src, uart_cmd, uart_cmd_data) is
  begin
    uart_cmd_data_next <= uart_cmd_data;
    mutex_next         <= mutex;
    case (uart_cmd) is
      when C_BAUD_F => uart_cmd_data_next <= baud_freq_o;
      when C_BAUD_L => uart_cmd_data_next <= baud_limit_o;
      when C_STATUS => uart_cmd_data_next <= fifos_status;
      when C_M_CHK  => uart_cmd_data_next <= mutex;
      when C_M_SET  =>
        if (mutex = C_MUTEX_UNUSED) then
          mutex_next         <= C_MUTEX_PAD & rx_src;
          uart_cmd_data_next <= C_MUTEX_PAD & rx_src;
        else
          uart_cmd_data_next <= mutex;
        end if;
      when C_M_CLR =>
        if (mutex(C_TDEST_WIDTH-1 downto 0) = rx_src) then
          mutex_next         <= (others => '0');
          uart_cmd_data_next <= (others => '0');
        else
          uart_cmd_data_next <= mutex;
        end if;
      when others => uart_cmd_data_next <= (others => '0');
    end case;
  end process UART_CMD_DATA_PROC;

  CTLR_FSM_STATE_PROC : process(clk) is
  begin
    if ((clk'event) and (clk = '1')) then
      if (reset_b = '0') then
        ctlr_fsm_cs   <= recv_adr;
        ll_adr        <= (others => '0');
        ll_num        <= (others => '0');
        ll_tid        <= (others => '0');
        data_count    <= 0;
        uart_cmd      <= (others => '0');
        uart_cmd_data <= (others => '0');
        mutex         <= (others => '0');
        baud_freq_o   <= C_BAUD_FREQ_INIT;
        baud_limit_o  <= C_BAUD_LIMIT_INIT;
      else
        ctlr_fsm_cs   <= ctlr_fsm_ns;
        ll_adr        <= ll_adr_next;
        ll_num        <= ll_num_next;
        ll_tid        <= ll_tid_next;
        data_count    <= data_count_next;
        uart_cmd      <= uart_cmd_next;
        uart_cmd_data <= uart_cmd_data_next;
        mutex         <= mutex_next;
        baud_freq_o   <= baud_freq_next;
        baud_limit_o  <= baud_limit_next;
      end if;
    end if;
  end process CTLR_FSM_STATE_PROC;

  CTLR_FSM_LOGIC_PROC : process (base_addr, baud_freq_o, baud_limit_o,
                                 ctlr_fsm_cs, data_count, ll_adr, ll_num,
                                 ll_rx_port_data, ll_rx_port_data_be,
                                 ll_rx_port_eof_n, ll_rx_port_sof_n,
                                 ll_rx_port_src_rdy_n, ll_tid,
                                 ll_tx_port_dst_rdy_n, rx_fifo_data,
                                 rx_fifo_empty, tx_fifo_full, uart_cmd,
                                 uart_cmd_data) is
  begin
    ctlr_fsm_ns     <= ctlr_fsm_cs;
    ll_adr_next     <= ll_adr;
    ll_num_next     <= ll_num;
    ll_tid_next     <= ll_tid;
    data_count_next <= data_count;
    uart_cmd_next   <= uart_cmd;
    baud_freq_next  <= baud_freq_o;
    baud_limit_next <= baud_limit_o;

    case (ctlr_fsm_cs) is
      when recv_adr =>
        ll_rx_port_dst_rdy_n <= '0';
        ll_tx_port_data      <= (others => '0');
        ll_tx_port_data_be   <= (others => '0');
        ll_tx_port_sof_n     <= '1';
        ll_tx_port_eof_n     <= '1';
        ll_tx_port_src_rdy_n <= '1';
        tx_fifo_we           <= '0';
        rx_fifo_re           <= '0';
        ll_adr_next          <= ll_rx_port_data;
        uart_cmd_next        <= ll_rx_port_data(11 downto 0);
        if ((ll_rx_port_sof_n = '0') and (ll_rx_port_src_rdy_n = '0')) then
          if (base_addr(31 downto 24) = ll_rx_port_data(31 downto 24)) then
            ctlr_fsm_ns <= recv_num;
          else
            ctlr_fsm_ns <= forward_ll_adr;
          end if;
        end if;

      when recv_num =>
        ll_rx_port_dst_rdy_n <= '0';
        ll_tx_port_data      <= (others => '0');
        ll_tx_port_data_be   <= (others => '0');        
        ll_tx_port_sof_n     <= '1';
        ll_tx_port_eof_n     <= '1';
        ll_tx_port_src_rdy_n <= '1';
        tx_fifo_we           <= '0';
        rx_fifo_re           <= '0';
        ll_num_next          <= ll_rx_port_data;
        if (ll_rx_port_src_rdy_n = '0') then
          ctlr_fsm_ns <= recv_tid;
        end if;

      when recv_tid =>
        ll_rx_port_dst_rdy_n <= '0';
        ll_tx_port_data      <= (others => '0');
        ll_tx_port_data_be   <= (others => '0');        
        ll_tx_port_sof_n     <= '1';
        ll_tx_port_eof_n     <= '1';
        ll_tx_port_src_rdy_n <= '1';
        tx_fifo_we           <= '0';
        rx_fifo_re           <= '0';
        if (ll_rx_port_src_rdy_n = '0') then
          ll_adr_next <= ll_rx_port_data(C_TRANS_ID_WIDTH-1 downto 0) & ll_adr(C_TRANS_HIGH-1 downto C_TRANS_LOW);
        end if;
        if (ll_rx_port_src_rdy_n = '0')then
          if ((ll_rx_port_data(C_TRANS_HIGH-1 downto C_TRANS_LOW) = C_TRANS_TYPE_RD_REQ) and (uart_cmd = C_NORMAL)) then
            ll_tid_next <= C_TRANS_TYPE_RD_ACK & ll_rx_port_data(C_TRANS_ID_WIDTH-1 downto 0);
            ctlr_fsm_ns <= chk_fifo;
          elsif (ll_rx_port_data(C_TRANS_HIGH-1 downto C_TRANS_LOW) = C_TRANS_TYPE_RD_REQ) then
            ll_tid_next <= C_TRANS_TYPE_RD_ACK & ll_rx_port_data(C_TRANS_ID_WIDTH-1 downto 0);
            ctlr_fsm_ns <= send_adr;
          elsif (ll_rx_port_data(C_TRANS_HIGH-1 downto C_TRANS_LOW) = C_TRANS_TYPE_WR_REQ) then
            ll_tid_next <= C_TRANS_TYPE_WR_ACK & ll_rx_port_data(C_TRANS_ID_WIDTH-1 downto 0);
            ctlr_fsm_ns <= recv_dat;
          end if;
        end if;

      when chk_fifo =>
        ll_rx_port_dst_rdy_n <= '1';
        ll_tx_port_data      <= (others => '0');
        ll_tx_port_data_be   <= (others => '0');        
        ll_tx_port_sof_n     <= '1';
        ll_tx_port_eof_n     <= '1';
        ll_tx_port_src_rdy_n <= '1';
        tx_fifo_we           <= '0';
        rx_fifo_re           <= '0';
        if (rx_fifo_empty = '0') then
          ctlr_fsm_ns <= send_adr;
        end if;

      when recv_dat =>
        ll_rx_port_dst_rdy_n <= tx_fifo_full;
        ll_tx_port_data      <= (others => '0');
        ll_tx_port_data_be   <= (others => '0');        
        ll_tx_port_sof_n     <= '1';
        ll_tx_port_eof_n     <= '1';
        ll_tx_port_src_rdy_n <= '1';
        rx_fifo_re           <= '0';
        if (uart_cmd = C_NORMAL) then
          tx_fifo_we <= not(ll_rx_port_src_rdy_n or tx_fifo_full);
        elsif (uart_cmd = C_BAUD_F) then
          tx_fifo_we     <= '0';
          baud_freq_next <= ll_rx_port_data;
        elsif (uart_cmd = C_BAUD_L) then
          tx_fifo_we      <= '0';
          baud_limit_next <= ll_rx_port_data;
        else
          tx_fifo_we <= '0';
        end if;
        if ((ll_rx_port_src_rdy_n = '0') and (ll_rx_port_eof_n = '0') and
            (tx_fifo_full = '0')) then
          ll_num_next <= C_TRANS_ACK_LEN;
          ctlr_fsm_ns <= send_adr;
        end if;

      when send_adr =>
        ll_rx_port_dst_rdy_n <= '1';
        ll_tx_port_data      <= ll_adr;
        ll_tx_port_data_be   <= (others => '1');
        ll_tx_port_sof_n     <= '0';
        ll_tx_port_eof_n     <= '1';
        ll_tx_port_src_rdy_n <= '0';
        tx_fifo_we           <= '0';
        rx_fifo_re           <= '0';
        if (ll_tx_port_dst_rdy_n = '0') then
          ctlr_fsm_ns <= send_num;
        end if;

      when send_num =>
        ll_rx_port_dst_rdy_n <= '1';
        ll_tx_port_data      <= ll_num;
        ll_tx_port_data_be   <= (others => '1');
        ll_tx_port_sof_n     <= '1';
        ll_tx_port_eof_n     <= '1';
        ll_tx_port_src_rdy_n <= '0';
        tx_fifo_we           <= '0';
        rx_fifo_re           <= '0';
        if (ll_tx_port_dst_rdy_n = '0') then
          ctlr_fsm_ns <= send_tid;
        end if;

      when send_tid =>
        ll_rx_port_dst_rdy_n <= '1';
        ll_tx_port_data      <= ll_tid;
        ll_tx_port_data_be   <= (others => '1');
        ll_tx_port_sof_n     <= '1';
        if (ll_tid(C_TRANS_HIGH-1 downto C_TRANS_LOW) = C_TRANS_TYPE_WR_ACK) then
          ll_tx_port_eof_n <= '0';
        else
          ll_tx_port_eof_n <= '1';
        end if;
        ll_tx_port_src_rdy_n <= '0';
        tx_fifo_we           <= '0';
        if ((ll_tid(C_TRANS_HIGH-1 downto C_TRANS_LOW) = C_TRANS_TYPE_RD_ACK) and (uart_cmd = C_NORMAL)) then
          rx_fifo_re <= not(ll_tx_port_dst_rdy_n);
        else
          rx_fifo_re <= '0';
        end if;
        data_count_next <= 1;
        if (ll_tx_port_dst_rdy_n = '0') then
          if ((ll_tid(C_TRANS_HIGH-1 downto C_TRANS_LOW) = C_TRANS_TYPE_RD_ACK) and (uart_cmd = C_NORMAL)) then
            ctlr_fsm_ns <= send_dat;
          elsif (ll_tid(C_TRANS_HIGH-1 downto C_TRANS_LOW) = C_TRANS_TYPE_RD_ACK) then
            ctlr_fsm_ns <= send_others;
          else
            ctlr_fsm_ns <= recv_adr;
          end if;
        end if;

      when read_dat =>
        ll_rx_port_dst_rdy_n <= '1';
        ll_tx_port_data      <= (others => '0');
        ll_tx_port_data_be   <= (others => '0');
        ll_tx_port_sof_n     <= '1';
        ll_tx_port_eof_n     <= '1';
        ll_tx_port_src_rdy_n <= '1';
        tx_fifo_we           <= '0';
        rx_fifo_re           <= not(rx_fifo_empty);
        if (rx_fifo_empty = '0') then
          data_count_next <= data_count + 1;
          ctlr_fsm_ns     <= send_dat;
        end if;

      when send_dat =>
        ll_rx_port_dst_rdy_n <= '1';
        ll_tx_port_data      <= C_DATA_PAD & rx_fifo_data;  
        ll_tx_port_data_be   <= (others => '1');
        ll_tx_port_sof_n     <= '1';
        if ((ll_tx_port_dst_rdy_n = '0') and (data_count = ll_num)) then
          ll_tx_port_eof_n <= '0';
        else
          ll_tx_port_eof_n <= '1';
        end if;
        ll_tx_port_src_rdy_n <= '0';
        tx_fifo_we           <= '0';
        if ((ll_tx_port_dst_rdy_n = '0') and (data_count = ll_num)) then
          rx_fifo_re  <= '0';
          ctlr_fsm_ns <= recv_adr;      
        elsif ((ll_tx_port_dst_rdy_n = '0') and (rx_fifo_empty = '0')) then
          rx_fifo_re      <= not(rx_fifo_empty);
          data_count_next <= data_count + 1;  
          ctlr_fsm_ns     <= send_dat;
        elsif (rx_fifo_empty = '1') then
          rx_fifo_re  <= not(rx_fifo_empty);
          ctlr_fsm_ns <= read_dat;      
        else
          rx_fifo_re  <= not(rx_fifo_empty);
          ctlr_fsm_ns <= send_dat;
        end if;

      when send_others =>
        ll_rx_port_dst_rdy_n <= '1';
        ll_tx_port_sof_n     <= '1';
        ll_tx_port_eof_n     <= '0';
        ll_tx_port_src_rdy_n <= '0';
        ll_tx_port_data      <= uart_cmd_data;
        ll_tx_port_data_be   <= (others => '1');
        tx_fifo_we           <= '0';
        rx_fifo_re           <= '0';
        if (ll_tx_port_dst_rdy_n = '0') then
          ctlr_fsm_ns <= recv_adr;      
        end if;

      when recv_err =>
        ll_rx_port_dst_rdy_n <= '0';
        tx_fifo_we           <= '0';
        rx_fifo_re           <= '0';
        ll_tx_port_data      <= (others => '0');
        ll_tx_port_data_be   <= (others => '0');
        ll_tx_port_sof_n     <= '1';
        ll_tx_port_eof_n     <= '1';
        ll_tx_port_src_rdy_n <= '1';
        if ((ll_rx_port_src_rdy_n = '0') and (ll_rx_port_eof_n = '0')) then
          ctlr_fsm_ns <= recv_adr;
        end if;

      when forward_ll_adr =>
        ll_rx_port_dst_rdy_n <= '1';
        ll_tx_port_data      <= ll_adr;
        ll_tx_port_data_be   <= (others => '1');
        ll_tx_port_sof_n     <= '0';
        ll_tx_port_eof_n     <= '1';
        ll_tx_port_src_rdy_n <= '0';
        tx_fifo_we           <= '0';
        rx_fifo_re           <= '0';
        if (ll_tx_port_dst_rdy_n = '0') then
          ctlr_fsm_ns <= forward_ll;
        end if;

      when forward_ll =>
        ll_rx_port_dst_rdy_n <= ll_tx_port_dst_rdy_n;
        ll_tx_port_data      <= ll_rx_port_data;
        ll_tx_port_data_be   <= ll_rx_port_data_be;
        ll_tx_port_sof_n     <= '1';
        ll_tx_port_eof_n     <= ll_rx_port_eof_n;
        ll_tx_port_src_rdy_n <= ll_rx_port_src_rdy_n;
        tx_fifo_we           <= '0';
        rx_fifo_re           <= '0';
        if ((ll_tx_port_dst_rdy_n = '0') and (ll_rx_port_src_rdy_n = '0') and
            (ll_rx_port_eof_n = '0')) then
          ctlr_fsm_ns <= recv_adr;
        end if;
        
      when others =>
        ll_rx_port_dst_rdy_n <= '1';
        tx_fifo_we           <= '0';
        rx_fifo_re           <= '0';
        ll_tx_port_data      <= (others => '0');
        ll_tx_port_sof_n     <= '1';
        ll_tx_port_eof_n     <= '1';
        ll_tx_port_src_rdy_n <= '1';
        ctlr_fsm_ns          <= recv_adr;
    end case;
  end process CTLR_FSM_LOGIC_PROC;

end BEH;
library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

use work.zpu_sic_pkg.all;
use work.axi4s_pkg.all;

entity mem_core_v2 is
  generic (
    C_ADDR_WIDTH     : integer := 13;   
    C_DATA_WIDTH     : integer := 16;   
    C_RAM_ADDR_WIDTH : integer := 13;
    C_RAM_DATA_WIDTH : integer := 16);
  port (
    clk             : in  std_logic;
    reset_b         : in  std_logic;    
    ll_tx_data      : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    ll_tx_sof_n     : out std_logic;
    ll_tx_eof_n     : out std_logic;
    ll_tx_src_rdy_n : out std_logic;
    ll_tx_dst_rdy_n : in  std_logic;
    ll_rx_data      : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    ll_rx_sof_n     : in  std_logic;
    ll_rx_eof_n     : in  std_logic;
    ll_rx_src_rdy_n : in  std_logic;
    ll_rx_dst_rdy_n : out std_logic;
    trans_id        : in  std_logic_vector(C_TRANS_ID_WIDTH-1 downto 0);
    remote_req      : in  std_logic;
    remote_pause    : in  std_logic;
    remote_addr     : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    cpu_wait        : out std_logic;
    addr            : in  std_logic_vector(C_ADDR_WIDTH-1 downto 0);
    din             : in  std_logic_vector(C_DATA_WIDTH-1 downto 0);
    dout            : out std_logic_vector(C_DATA_WIDTH-1 downto 0);
    we              : in  std_logic;
    re              : in  std_logic;
    rma             : in  std_logic_vector(1 downto 0);
    rmb             : in  std_logic_vector(1 downto 0)
    );
end entity mem_core_v2;

architecture beh of mem_core_v2 is
  constant C_MCU_MEMORY_ADDR_WIDTH : integer := C_ADDR_WIDTH-2;
  
  signal ll_rx_port : ll_type;
  signal ll_tx_port : ll_type;

  signal remote_valid : std_logic;
  signal remote_dout  : std_logic_vector(C_DATA_WIDTH-1 downto 0);

  signal douta : std_logic_vector(C_RAM_DATA_WIDTH-1 downto 0);
  signal wea   : std_logic;
  signal cea   : std_logic;
  signal addrb : std_logic_vector(C_RAM_ADDR_WIDTH-1 downto 0);
  signal dinb  : std_logic_vector(C_RAM_DATA_WIDTH-1 downto 0);
  signal doutb : std_logic_vector(C_RAM_DATA_WIDTH-1 downto 0);
  signal web   : std_logic;
  signal ceb   : std_logic;

  component mem_ctlr_v2
    generic (
      C_ADDR_WIDTH     : integer := C_ADDR_WIDTH;
      C_DATA_WIDTH     : integer := C_DATA_WIDTH;
      C_RAM_ADDR_WIDTH : integer := C_RAM_ADDR_WIDTH;
      C_RAM_DATA_WIDTH : integer := C_RAM_DATA_WIDTH);
    port (
      clk             : in  std_logic;
      reset_b         : in  std_logic;  
      ll_tx_data      : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
      ll_tx_sof_n     : out std_logic;
      ll_tx_eof_n     : out std_logic;
      ll_tx_src_rdy_n : out std_logic;
      ll_tx_dst_rdy_n : in  std_logic;
      ll_rx_data      : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
      ll_rx_sof_n     : in  std_logic;
      ll_rx_eof_n     : in  std_logic;
      ll_rx_src_rdy_n : in  std_logic;
      ll_rx_dst_rdy_n : out std_logic;
      addr            : in  std_logic_vector(C_ADDR_WIDTH-1 downto 0);
      din             : in  std_logic_vector(C_DATA_WIDTH-1 downto 0);
      dout            : out std_logic_vector(C_DATA_WIDTH-1 downto 0);
      we              : in  std_logic;
      re              : in  std_logic;
      dout_valid      : out std_logic;
      cpu_wait        : out std_logic;
      ram_ce          : out std_logic;
      ram_addr        : out std_logic_vector(C_RAM_ADDR_WIDTH-1 downto 0);
      ram_din         : out std_logic_vector(C_RAM_DATA_WIDTH-1 downto 0);
      ram_dout        : in  std_logic_vector(C_RAM_DATA_WIDTH-1 downto 0);
      ram_we          : out std_logic;
      trans_id        : in  std_logic_vector(C_TRANS_ID_WIDTH-1 downto 0);
      remote_req      : in  std_logic;
      remote_pause    : in  std_logic;
      remote_addr     : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0));
  end component;

  component mcu_memory_v2
    generic (
      C_ADDR_WIDTH : integer := 13;
      C_DATA_WIDTH : integer := 16);
    port(
      clka  : in  std_logic;
      cea   : in  std_logic;
      addra : in  std_logic_vector(C_ADDR_WIDTH-1 downto 0);
      dina  : in  std_logic_vector(C_DATA_WIDTH-1 downto 0);
      douta : out std_logic_vector(C_DATA_WIDTH-1 downto 0);
      wea   : in  std_logic;
      rma   : in  std_logic_vector(1 downto 0);
      clkb  : in  std_logic;
      ceb   : in  std_logic;
      addrb : in  std_logic_vector(C_ADDR_WIDTH-1 downto 0);
      dinb  : in  std_logic_vector(C_DATA_WIDTH-1 downto 0);
      doutb : out std_logic_vector(C_DATA_WIDTH-1 downto 0);
      web   : in  std_logic;
      rmb   : in  std_logic_vector(1 downto 0)
      );
  end component mcu_memory_v2;

begin
  ll_tx_data           <= ll_tx_port.data;
  ll_tx_sof_n          <= ll_tx_port.sof_n;
  ll_tx_eof_n          <= ll_tx_port.eof_n;
  ll_tx_src_rdy_n      <= ll_tx_port.src_rdy_n;
  ll_tx_port.dst_rdy_n <= ll_tx_dst_rdy_n;
  ll_rx_port.data      <= ll_rx_data;
  ll_rx_port.sof_n     <= ll_rx_sof_n;
  ll_rx_port.eof_n     <= ll_rx_eof_n;
  ll_rx_port.src_rdy_n <= ll_rx_src_rdy_n;
  ll_rx_dst_rdy_n      <= ll_rx_port.dst_rdy_n;

  cea <= not(remote_req) and (re or we);
  wea <= not(remote_req) and we;

  dout <= remote_dout when (remote_req = '1') else douta;

  DUT : mem_ctlr_v2
    generic map (
      C_ADDR_WIDTH     => C_ADDR_WIDTH,
      C_DATA_WIDTH     => C_DATA_WIDTH,
      C_RAM_ADDR_WIDTH => C_RAM_ADDR_WIDTH,
      C_RAM_DATA_WIDTH => C_RAM_DATA_WIDTH
      )
    port map (
      clk             => clk,
      reset_b         => reset_b,
      ll_tx_data      => ll_tx_port.data,
      ll_tx_sof_n     => ll_tx_port.sof_n,
      ll_tx_eof_n     => ll_tx_port.eof_n,
      ll_tx_src_rdy_n => ll_tx_port.src_rdy_n,
      ll_tx_dst_rdy_n => ll_tx_port.dst_rdy_n,
      ll_rx_data      => ll_rx_port.data,
      ll_rx_sof_n     => ll_rx_port.sof_n,
      ll_rx_eof_n     => ll_rx_port.eof_n,
      ll_rx_src_rdy_n => ll_rx_port.src_rdy_n,
      ll_rx_dst_rdy_n => ll_rx_port.dst_rdy_n,
      addr            => addr,
      din             => din,
      dout            => remote_dout,
      dout_valid      => remote_valid,
      we              => we,
      re              => re,
      ram_ce          => ceb,
      ram_addr        => addrb,
      ram_din         => dinb,
      ram_dout        => doutb,
      ram_we          => web,
      cpu_wait        => cpu_wait,
      trans_id        => trans_id,
      remote_req      => remote_req,
      remote_pause    => remote_pause,
      remote_addr     => remote_addr
      );

  ram_i : mcu_memory_v2
    generic map (
      C_ADDR_WIDTH => C_MCU_MEMORY_ADDR_WIDTH,
      C_DATA_WIDTH => C_DATA_WIDTH)
    port map (
      clka  => clk,
      cea   => cea,
      addra => addr(C_ADDR_WIDTH-1 downto 2),
      dina  => din,
      douta => douta,
      wea   => wea,
      rma   => rma,
      clkb  => clk,
      ceb   => ceb,
      addrb => addrb(C_ADDR_WIDTH-1 downto 2),
      dinb  => dinb,
      doutb => doutb,
      web   => web,
      rmb   => rmb
      );

end beh;
library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

use work.zpu_sic_pkg.all;
use work.axi4s_pkg.all;

entity sic_ic_v2 is
  generic (
    C_RADIX      : natural := 5    
    );
  port (
    clk           : in std_logic;
    reset_b       : in std_logic;       
    ll_tx0_data      : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    ll_tx0_sof_n     : out std_logic;
    ll_tx0_eof_n     : out std_logic;
    ll_tx0_src_rdy_n : out std_logic;
    ll_tx0_dst_rdy_n : in  std_logic;
    ll_rx0_data      : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    ll_rx0_sof_n     : in  std_logic;
    ll_rx0_eof_n     : in  std_logic;
    ll_rx0_src_rdy_n : in  std_logic;
    ll_rx0_dst_rdy_n : out std_logic;
    ll_tx1_data      : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    ll_tx1_sof_n     : out std_logic;
    ll_tx1_eof_n     : out std_logic;
    ll_tx1_src_rdy_n : out std_logic;
    ll_tx1_dst_rdy_n : in  std_logic;
    ll_rx1_data      : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    ll_rx1_sof_n     : in  std_logic;
    ll_rx1_eof_n     : in  std_logic;
    ll_rx1_src_rdy_n : in  std_logic;
    ll_rx1_dst_rdy_n : out std_logic;
    ll_tx2_data      : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    ll_tx2_sof_n     : out std_logic;
    ll_tx2_eof_n     : out std_logic;
    ll_tx2_src_rdy_n : out std_logic;
    ll_tx2_dst_rdy_n : in  std_logic;
    ll_rx2_data      : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    ll_rx2_sof_n     : in  std_logic;
    ll_rx2_eof_n     : in  std_logic;
    ll_rx2_src_rdy_n : in  std_logic;
    ll_rx2_dst_rdy_n : out std_logic;
    ll_tx3_data      : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    ll_tx3_sof_n     : out std_logic;
    ll_tx3_eof_n     : out std_logic;
    ll_tx3_src_rdy_n : out std_logic;
    ll_tx3_dst_rdy_n : in  std_logic;
    ll_rx3_data      : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    ll_rx3_sof_n     : in  std_logic;
    ll_rx3_eof_n     : in  std_logic;
    ll_rx3_src_rdy_n : in  std_logic;
    ll_rx3_dst_rdy_n : out std_logic;
    ll_tx4_data      : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    ll_tx4_sof_n     : out std_logic;
    ll_tx4_eof_n     : out std_logic;
    ll_tx4_src_rdy_n : out std_logic;
    ll_tx4_dst_rdy_n : in  std_logic;
    ll_rx4_data      : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    ll_rx4_sof_n     : in  std_logic;
    ll_rx4_eof_n     : in  std_logic;
    ll_rx4_src_rdy_n : in  std_logic;
    ll_rx4_dst_rdy_n : out std_logic
    );
end entity sic_ic_v2;

architecture BEH of sic_ic_v2 is
  signal ll_rx_ports : ll_vector_type(C_RADIX-1 downto 0);
  signal ll_tx_ports : ll_vector_type(C_RADIX-1 downto 0);

  type FSM_TYPE is (idle, xfer);
  type FSM_ARRAY_TYPE is array (C_RADIX-1 downto 0) of FSM_TYPE;
  type REQ_DST_TYPE is array (C_RADIX-1 downto 0) of std_logic_vector(C_AXI4S_ADDR_WIDTH-1 downto 0);
  type LOC_DST_TYPE is array (C_RADIX-1 downto 0) of std_logic_vector(C_AXI4S_ADDR_WIDTH-1 downto 0);  

  signal rm_fsm_cs, rm_fsm_ns       : FSM_ARRAY_TYPE;
  signal inuse_fsm_cs, inuse_fsm_ns : FSM_ARRAY_TYPE;
  signal request_flag               : std_logic_vector(C_RADIX-1 downto 0);
  signal request_flag_next          : std_logic_vector(C_RADIX-1 downto 0);
  signal request_port               : natural_vector(C_RADIX-1 downto 0);
  signal request_port_next          : natural_vector(C_RADIX-1 downto 0);
  signal inuse_flag                 : std_logic_vector(C_RADIX-1 downto 0);
  signal inuse_flag_next            : std_logic_vector(C_RADIX-1 downto 0);
  signal input_port                 : natural_vector(C_RADIX-1 downto 0);
  signal input_port_next            : natural_vector(C_RADIX-1 downto 0);
  signal dst_rdy                    : std_logic_vector(C_RADIX-1 downto 0);
  signal req_dst                    : REQ_DST_TYPE;
  signal loc_dst                    : LOC_DST_TYPE;

begin
  ll_tx0_data              <= ll_tx_ports(0).data;
  ll_tx0_sof_n             <= ll_tx_ports(0).sof_n;
  ll_tx0_eof_n             <= ll_tx_ports(0).eof_n;
  ll_tx0_src_rdy_n         <= ll_tx_ports(0).src_rdy_n;
  ll_tx_ports(0).dst_rdy_n <= ll_tx0_dst_rdy_n;
  ll_rx_ports(0).data      <= ll_rx0_data;
  ll_rx_ports(0).sof_n     <= ll_rx0_sof_n;
  ll_rx_ports(0).eof_n     <= ll_rx0_eof_n;
  ll_rx_ports(0).src_rdy_n <= ll_rx0_src_rdy_n;
  ll_rx0_dst_rdy_n         <= ll_rx_ports(0).dst_rdy_n;
  ll_tx1_data              <= ll_tx_ports(1).data;
  ll_tx1_sof_n             <= ll_tx_ports(1).sof_n;
  ll_tx1_eof_n             <= ll_tx_ports(1).eof_n;
  ll_tx1_src_rdy_n         <= ll_tx_ports(1).src_rdy_n;
  ll_tx_ports(1).dst_rdy_n <= ll_tx1_dst_rdy_n;
  ll_rx_ports(1).data      <= ll_rx1_data;
  ll_rx_ports(1).sof_n     <= ll_rx1_sof_n;
  ll_rx_ports(1).eof_n     <= ll_rx1_eof_n;
  ll_rx_ports(1).src_rdy_n <= ll_rx1_src_rdy_n;
  ll_rx1_dst_rdy_n         <= ll_rx_ports(1).dst_rdy_n;
  ll_tx2_data              <= ll_tx_ports(2).data;
  ll_tx2_sof_n             <= ll_tx_ports(2).sof_n;
  ll_tx2_eof_n             <= ll_tx_ports(2).eof_n;
  ll_tx2_src_rdy_n         <= ll_tx_ports(2).src_rdy_n;
  ll_tx_ports(2).dst_rdy_n <= ll_tx2_dst_rdy_n;
  ll_rx_ports(2).data      <= ll_rx2_data;
  ll_rx_ports(2).sof_n     <= ll_rx2_sof_n;
  ll_rx_ports(2).eof_n     <= ll_rx2_eof_n;
  ll_rx_ports(2).src_rdy_n <= ll_rx2_src_rdy_n;
  ll_rx2_dst_rdy_n         <= ll_rx_ports(2).dst_rdy_n;
  ll_tx3_data              <= ll_tx_ports(3).data;
  ll_tx3_sof_n             <= ll_tx_ports(3).sof_n;
  ll_tx3_eof_n             <= ll_tx_ports(3).eof_n;
  ll_tx3_src_rdy_n         <= ll_tx_ports(3).src_rdy_n;
  ll_tx_ports(3).dst_rdy_n <= ll_tx3_dst_rdy_n;
  ll_rx_ports(3).data      <= ll_rx3_data;
  ll_rx_ports(3).sof_n     <= ll_rx3_sof_n;
  ll_rx_ports(3).eof_n     <= ll_rx3_eof_n;
  ll_rx_ports(3).src_rdy_n <= ll_rx3_src_rdy_n;
  ll_rx3_dst_rdy_n         <= ll_rx_ports(3).dst_rdy_n;
  ll_tx4_data              <= ll_tx_ports(4).data;
  ll_tx4_sof_n             <= ll_tx_ports(4).sof_n;
  ll_tx4_eof_n             <= ll_tx_ports(4).eof_n;
  ll_tx4_src_rdy_n         <= ll_tx_ports(4).src_rdy_n;
  ll_tx_ports(4).dst_rdy_n <= ll_tx4_dst_rdy_n;
  ll_rx_ports(4).data      <= ll_rx4_data;
  ll_rx_ports(4).sof_n     <= ll_rx4_sof_n;
  ll_rx_ports(4).eof_n     <= ll_rx4_eof_n;
  ll_rx_ports(4).src_rdy_n <= ll_rx4_src_rdy_n;
  ll_rx4_dst_rdy_n         <= ll_rx_ports(4).dst_rdy_n;

  FSM_STATE_GENERATE : for i in C_RADIX-1 downto 0 generate
    FSM_STATE_PROC_i : process (clk) is
    begin
      if ((clk'event) and (clk = '1')) then
        if (reset_b = C_RESET_LEVEL) then
          request_flag(i) <= '0';
          request_port(i) <= 0;
          inuse_flag(i)   <= '0';
          input_port(i)   <= 0;
          rm_fsm_cs(i)    <= idle;
          inuse_fsm_cs(i) <= idle;
        else
          request_flag(i) <= request_flag_next(i);
          request_port(i) <= request_port_next(i);
          inuse_flag(i)   <= inuse_flag_next(i);
          input_port(i)   <= input_port_next(i);
          rm_fsm_cs(i)    <= rm_fsm_ns(i);
          inuse_fsm_cs(i) <= inuse_fsm_ns(i);
        end if;
      end if;
    end process FSM_STATE_PROC_i;
  end generate FSM_STATE_GENERATE;

  RM_GENERATE : for i in C_RADIX-1 downto 0 generate
    req_dst(i) <= ll_rx_ports(i).data(C_AXI4S_ADDR_HIGH-1 downto C_AXI4S_ADDR_LOW);
    loc_dst(i) <= ll_rx_ports(i).data(C_AXI4S_ADDR_HIGH-C_SIC_ID_WIDTH-1 downto C_AXI4S_ADDR_LOW-C_SIC_ID_WIDTH);
    RM_FSM_LOGIC_PROC_i : process (ll_rx_ports, loc_dst, req_dst, request_flag,
                                   ll_rx_ports(i),
                                   request_port, rm_fsm_cs) is
                                   
    begin
      request_flag_next(i) <= request_flag(i);
      request_port_next(i) <= request_port(i);
      rm_fsm_ns(i)         <= rm_fsm_cs(i);
      case (rm_fsm_cs(i)) is
        when idle =>
          if (req_dst(i) = C_AXI4S_CRYPTO_PORT_NUM) then
            request_port_next(i) <= conv_integer(loc_dst(i));            
          else
            request_port_next(i) <= C_AXI4S_BRIDGE_PORT_NUM;
          end if;
          if (ll_rx_ports(i).sof_n = '0') then
            request_flag_next(i) <= '1';
            rm_fsm_ns(i)         <= xfer;
          else
            request_flag_next(i) <= '0';
            rm_fsm_ns(i)         <= idle;
          end if;

        when xfer =>
          if ((ll_rx_ports(i).eof_n = '0') and (ll_rx_ports(i).src_rdy_n = '0') and
              (ll_rx_ports(i).dst_rdy_n = '0')) then
            request_port_next(i) <= 0;
            request_flag_next(i) <= '0';
            rm_fsm_ns(i)         <= idle;
          end if;
      end case;
    end process RM_FSM_LOGIC_PROC_i;
  end generate RM_GENERATE;

  INUSE_GENERATE : for i in C_RADIX-1 downto 0 generate
  begin
    INUSE_FSM_LOGIC_PROC_i : process (input_port, inuse_flag, inuse_fsm_cs,
                                      request_flag, request_port) is
    begin
      inuse_flag_next(i) <= inuse_flag(i);
      input_port_next(i) <= input_port(i);
      inuse_fsm_ns(i)    <= inuse_fsm_cs(i);
      case (inuse_fsm_cs(i)) is
        when idle =>
          for p in C_RADIX-1 downto 0 loop
            if ((request_flag(p) = '1') and
                (request_port(p) = i) and
                (inuse_flag(i) = '0')) then
              inuse_flag_next(i) <= '1';
              input_port_next(i) <= p;
              inuse_fsm_ns(i)    <= xfer;
              exit;
            else
              inuse_flag_next(i) <= '0';
              input_port_next(i) <= 0;
              inuse_fsm_ns(i)    <= idle;
            end if;
          end loop;

        when xfer =>
          if (request_flag(input_port(i)) = '0') then
            inuse_flag_next(i) <= '0';
            input_port_next(i) <= 0;
            inuse_fsm_ns(i)    <= idle;
          else
            inuse_flag_next(i) <= '1';
            input_port_next(i) <= input_port(i);
            inuse_fsm_ns(i)    <= xfer;
          end if;
      end case;
    end process INUSE_FSM_LOGIC_PROC_i;
  end generate INUSE_GENERATE;

  SWITCH_ARRAY_GENERATE : for i in C_RADIX-1 downto 0 generate
  begin
    REG_PROC : process (input_port, inuse_flag, ll_rx_ports, ll_tx_ports,
                        ll_tx_ports(i).dst_rdy_n, reset_b, rm_fsm_cs) is
    begin
      if ((inuse_flag(i) = '1') and (rm_fsm_cs(input_port(i)) = xfer)) then
        ll_tx_ports(i).data      <= ll_rx_ports(input_port(i)).data;
        ll_tx_ports(i).sof_n     <= ll_rx_ports(input_port(i)).sof_n;
        ll_tx_ports(i).eof_n     <= ll_rx_ports(input_port(i)).eof_n;
        ll_tx_ports(i).src_rdy_n <= ll_rx_ports(input_port(i)).src_rdy_n;
        dst_rdy(i)               <= ll_tx_ports(i).dst_rdy_n;
      else
        ll_tx_ports(i).data      <= (others => '0');
        ll_tx_ports(i).sof_n     <= '1';
        ll_tx_ports(i).eof_n     <= '1';
        ll_tx_ports(i).src_rdy_n <= '1';
        dst_rdy(i)               <= '1';
      end if;
    end process REG_PROC;
    
  end generate switch_array_generate;

  DST_RDY_GENERATE : for i in C_RADIX-1 downto 0 generate
  begin
    REG_DST_PROC : process (dst_rdy, input_port, inuse_flag, ll_rx_ports) is
    begin
        ll_rx_ports(i).dst_rdy_n <= calc_dst_rdy_n (i, inuse_flag, dst_rdy, input_port,
                                                    ll_rx_ports(i).src_rdy_n, ll_rx_ports(i).eof_n);
    end process REG_DST_PROC;
  end generate DST_RDY_GENERATE;
  
end architecture BEH;
library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

use work.zpu_sic_pkg.all;
use work.axi4s_pkg.all;

entity sic_v2 is
  port (
    clk             : in  std_logic;
    reset_b         : in  std_logic;    
    axi4s_tx_tdata  : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    axi4s_tx_tstrb  : out std_logic_vector(C_DATA_WIDTH_IN_BYTE-1 downto 0);
    axi4s_tx_tkeep  : out std_logic_vector(C_DATA_WIDTH_IN_BYTE-1 downto 0);
    axi4s_tx_tvalid : out std_logic;
    axi4s_tx_tlast  : out std_logic;
    axi4s_tx_tid    : out std_logic_vector(C_TID_WIDTH-1 downto 0);
    axi4s_tx_tdest  : out std_logic_vector(C_TDEST_WIDTH-1 downto 0);
    axi4s_tx_tuser  : out std_logic_vector(C_TUSER_WIDTH-1 downto 0);
    axi4s_tx_tready : in  std_logic;
    axi4s_rx_tdata  : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    axi4s_rx_tstrb  : in  std_logic_vector(C_DATA_WIDTH_IN_BYTE-1 downto 0);
    axi4s_rx_tkeep  : in  std_logic_vector(C_DATA_WIDTH_IN_BYTE-1 downto 0);
    axi4s_rx_tvalid : in  std_logic;
    axi4s_rx_tlast  : in  std_logic;
    axi4s_rx_tid    : in  std_logic_vector(C_TID_WIDTH-1 downto 0);
    axi4s_rx_tdest  : in  std_logic_vector(C_TDEST_WIDTH-1 downto 0);
    axi4s_rx_tuser  : in  std_logic_vector(C_TUSER_WIDTH-1 downto 0);
    axi4s_rx_tready : out std_logic;
    cpuwait         : out std_logic;
    cpu_reset       : out std_logic;
    addr            : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    re              : in  std_logic;
    we              : in  std_logic;
    din             : in  std_logic_vector(C_MCU_DATA_WIDTH-1 downto 0);
    dout            : out std_logic_vector(C_MCU_DATA_WIDTH-1 downto 0);
    crypto_sel      : out std_logic_vector(C_CRYPTO_SEL_WIDTH-1 downto 0);
    ll_rx_data      : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    ll_rx_sof_n     : out std_logic;
    ll_rx_eof_n     : out std_logic;
    ll_rx_src_rdy_n : out std_logic;
    ll_rx_dst_rdy_n : in  std_logic;
    ll_tx_data      : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    ll_tx_sof_n     : in  std_logic;
    ll_tx_eof_n     : in  std_logic;
    ll_tx_src_rdy_n : in  std_logic;
    ll_tx_dst_rdy_n : out std_logic;
    ll_perf_rx_data      : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    ll_perf_rx_sof_n     : out std_logic;
    ll_perf_rx_eof_n     : out std_logic;
    ll_perf_rx_src_rdy_n : out std_logic;
    ll_perf_rx_dst_rdy_n : in  std_logic;
    ll_perf_tx_data      : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    ll_perf_tx_sof_n     : in  std_logic;
    ll_perf_tx_eof_n     : in  std_logic;
    ll_perf_tx_src_rdy_n : in  std_logic;
    ll_perf_tx_dst_rdy_n : out std_logic    
    );
end entity sic_v2;

architecture beh of sic_v2 is
  signal   ll_rx_port      : ll_type;
  signal   ll_tx_port      : ll_type;
  signal   ll_perf_rx_port : ll_type;
  signal   ll_perf_tx_port : ll_type;  
  constant C_DM_ADDR_WIDTH : integer          := 16;
  constant C_NUM_REGS      : integer          := 8;
  constant C_RADIX         : integer          := 5;
  constant C_DM_HIGHADDR   : std_logic_vector := conv_std_logic_vector((2**C_DM_ADDR_WIDTH), C_SWITCH_WIDTH);

  signal cpuwait_i       : std_logic;
  signal dm_remote_req   : std_logic;
  signal dm_remote_pause : std_logic;
  signal dm_remote_addr  : std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
  signal dm_cpuwait      : std_logic;
  signal dm_addr         : std_logic_vector(C_DM_ADDR_WIDTH-1 downto 0);
  signal dm_re           : std_logic;
  signal dm_we           : std_logic;
  signal dm_dout         : std_logic_vector(C_MCU_DATA_WIDTH-1 downto 0);
  signal dm_din          : std_logic_vector(C_MCU_DATA_WIDTH-1 downto 0);
  signal dm_din_next     : std_logic_vector(C_MCU_DATA_WIDTH-1 downto 0);
  signal dm_rma          : std_logic_vector(1 downto 0);
  signal dm_rmb          : std_logic_vector(1 downto 0);
  signal io_cpuwait      : std_logic;
  signal io_addr         : std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
  signal io_req          : std_logic;
  signal io_re           : std_logic;
  signal io_re_next      : std_logic;
  signal io_we           : std_logic;
  signal io_dout         : std_logic_vector(C_MCU_DATA_WIDTH-1 downto 0);
  signal ctrl_regs       : register_vector(C_NUM_REGS-1 downto 0);
  signal to_ic_ports     : ll_vector_type(C_RADIX-1 downto 0);
  signal from_ic_ports   : ll_vector_type(C_RADIX-1 downto 0);

  component dm_wrapper_v2
    generic (
      C_ADDR_WIDTH : integer;
      C_DATA_WIDTH : integer);
    port (
      clk             : in  std_logic;
      reset_b         : in  std_logic;  
      ll_tx_data      : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
      ll_tx_sof_n     : out std_logic;
      ll_tx_eof_n     : out std_logic;
      ll_tx_src_rdy_n : out std_logic;
      ll_tx_dst_rdy_n : in  std_logic;
      ll_rx_data      : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
      ll_rx_sof_n     : in  std_logic;
      ll_rx_eof_n     : in  std_logic;
      ll_rx_src_rdy_n : in  std_logic;
      ll_rx_dst_rdy_n : out std_logic;
      remote_req      : in  std_logic;
      remote_pause    : in  std_logic;
      remote_addr     : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
      cpuwait         : out std_logic;
      addr            : in  std_logic_vector(C_DM_ADDR_WIDTH-1 downto 0);
      din             : in  std_logic_vector(C_MCU_DATA_WIDTH-1 downto 0);
      re              : in  std_logic;
      we              : in  std_logic;
      dout            : out std_logic_vector(C_MCU_DATA_WIDTH-1 downto 0);
      rma             : in  std_logic_vector(1 downto 0);
      rmb             : in  std_logic_vector(1 downto 0));      
  end component;

  component io_wrapper_v2
    generic (
      C_NUM_REGS : integer);
    port (
      clk             : in  std_logic;
      reset_b         : in  std_logic;  
      ll_tx_data      : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
      ll_tx_sof_n     : out std_logic;
      ll_tx_eof_n     : out std_logic;
      ll_tx_src_rdy_n : out std_logic;
      ll_tx_dst_rdy_n : in  std_logic;
      ll_rx_data      : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
      ll_rx_sof_n     : in  std_logic;
      ll_rx_eof_n     : in  std_logic;
      ll_rx_src_rdy_n : in  std_logic;
      ll_rx_dst_rdy_n : out std_logic;
      ctrl_regs       : out register_vector(C_NUM_REGS-1 downto 0);
      cpuwait         : out std_logic;
      addr            : in  std_logic_vector(C_MCU_ADDR_WIDTH-1 downto 0);
      din             : in  std_logic_vector(C_MCU_DATA_WIDTH-1 downto 0);
      dout            : out std_logic_vector(C_MCU_DATA_WIDTH-1 downto 0);
      we              : in  std_logic;
      re              : in  std_logic);
  end component;

  component sic_ic_v2
    generic (
      C_RADIX : natural);
    port (
      clk              : in  std_logic;
      reset_b          : in  std_logic;  
      ll_tx0_data      : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
      ll_tx0_sof_n     : out std_logic;
      ll_tx0_eof_n     : out std_logic;
      ll_tx0_src_rdy_n : out std_logic;
      ll_tx0_dst_rdy_n : in  std_logic;
      ll_rx0_data      : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
      ll_rx0_sof_n     : in  std_logic;
      ll_rx0_eof_n     : in  std_logic;
      ll_rx0_src_rdy_n : in  std_logic;
      ll_rx0_dst_rdy_n : out std_logic;
      ll_tx1_data      : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
      ll_tx1_sof_n     : out std_logic;
      ll_tx1_eof_n     : out std_logic;
      ll_tx1_src_rdy_n : out std_logic;
      ll_tx1_dst_rdy_n : in  std_logic;
      ll_rx1_data      : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
      ll_rx1_sof_n     : in  std_logic;
      ll_rx1_eof_n     : in  std_logic;
      ll_rx1_src_rdy_n : in  std_logic;
      ll_rx1_dst_rdy_n : out std_logic;
      ll_tx2_data      : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
      ll_tx2_sof_n     : out std_logic;
      ll_tx2_eof_n     : out std_logic;
      ll_tx2_src_rdy_n : out std_logic;
      ll_tx2_dst_rdy_n : in  std_logic;
      ll_rx2_data      : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
      ll_rx2_sof_n     : in  std_logic;
      ll_rx2_eof_n     : in  std_logic;
      ll_rx2_src_rdy_n : in  std_logic;
      ll_rx2_dst_rdy_n : out std_logic;
      ll_tx3_data      : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
      ll_tx3_sof_n     : out std_logic;
      ll_tx3_eof_n     : out std_logic;
      ll_tx3_src_rdy_n : out std_logic;
      ll_tx3_dst_rdy_n : in  std_logic;
      ll_rx3_data      : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
      ll_rx3_sof_n     : in  std_logic;
      ll_rx3_eof_n     : in  std_logic;
      ll_rx3_src_rdy_n : in  std_logic;
      ll_rx3_dst_rdy_n : out std_logic;
      ll_tx4_data      : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
      ll_tx4_sof_n     : out std_logic;
      ll_tx4_eof_n     : out std_logic;
      ll_tx4_src_rdy_n : out std_logic;
      ll_tx4_dst_rdy_n : in  std_logic;
      ll_rx4_data      : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
      ll_rx4_sof_n     : in  std_logic;
      ll_rx4_eof_n     : in  std_logic;
      ll_rx4_src_rdy_n : in  std_logic;
      ll_rx4_dst_rdy_n : out std_logic
      );
  end component;

  component axi4s_ll_bridge_wrapper_v2
    port (
      clk             : in  std_logic;
      reset_b         : in  std_logic;  
      axi4s_tx_tdata  : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
      axi4s_tx_tstrb  : out std_logic_vector(C_DATA_WIDTH_IN_BYTE-1 downto 0);
      axi4s_tx_tkeep  : out std_logic_vector(C_DATA_WIDTH_IN_BYTE-1 downto 0);
      axi4s_tx_tvalid : out std_logic;
      axi4s_tx_tlast  : out std_logic;
      axi4s_tx_tid    : out std_logic_vector(C_TID_WIDTH-1 downto 0);
      axi4s_tx_tdest  : out std_logic_vector(C_TDEST_WIDTH-1 downto 0);
      axi4s_tx_tuser  : out std_logic_vector(C_TUSER_WIDTH-1 downto 0);
      axi4s_tx_tready : in  std_logic;
      axi4s_rx_tdata  : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
      axi4s_rx_tstrb  : in  std_logic_vector(C_DATA_WIDTH_IN_BYTE-1 downto 0);
      axi4s_rx_tkeep  : in  std_logic_vector(C_DATA_WIDTH_IN_BYTE-1 downto 0);
      axi4s_rx_tvalid : in  std_logic;
      axi4s_rx_tlast  : in  std_logic;
      axi4s_rx_tid    : in  std_logic_vector(C_TID_WIDTH-1 downto 0);
      axi4s_rx_tdest  : in  std_logic_vector(C_TDEST_WIDTH-1 downto 0);
      axi4s_rx_tuser  : in  std_logic_vector(C_TUSER_WIDTH-1 downto 0);
      axi4s_rx_tready : out std_logic;
      ll_rx_data      : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
      ll_rx_sof_n     : out std_logic;
      ll_rx_eof_n     : out std_logic;
      ll_rx_src_rdy_n : out std_logic;
      ll_rx_dst_rdy_n : in  std_logic;
      ll_tx_data      : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
      ll_tx_sof_n     : in  std_logic;
      ll_tx_eof_n     : in  std_logic;
      ll_tx_src_rdy_n : in  std_logic;
      ll_tx_dst_rdy_n : out std_logic
      );
  end component;

begin
  ll_tx_port.data      <= ll_tx_data;
  ll_tx_port.sof_n     <= ll_tx_sof_n;
  ll_tx_port.eof_n     <= ll_tx_eof_n;
  ll_tx_port.src_rdy_n <= ll_tx_src_rdy_n;
  ll_tx_dst_rdy_n      <= ll_tx_port.dst_rdy_n;
  ll_rx_data           <= ll_rx_port.data;
  ll_rx_sof_n          <= ll_rx_port.sof_n;
  ll_rx_eof_n          <= ll_rx_port.eof_n;
  ll_rx_src_rdy_n      <= ll_rx_port.src_rdy_n;
  ll_rx_port.dst_rdy_n <= ll_rx_dst_rdy_n;

  ll_perf_tx_port.data      <= ll_perf_tx_data;
  ll_perf_tx_port.sof_n     <= ll_perf_tx_sof_n;
  ll_perf_tx_port.eof_n     <= ll_perf_tx_eof_n;
  ll_perf_tx_port.src_rdy_n <= ll_perf_tx_src_rdy_n;
  ll_perf_tx_dst_rdy_n      <= ll_perf_tx_port.dst_rdy_n;
  ll_perf_rx_data           <= ll_perf_rx_port.data;
  ll_perf_rx_sof_n          <= ll_perf_rx_port.sof_n;
  ll_perf_rx_eof_n          <= ll_perf_rx_port.eof_n;
  ll_perf_rx_src_rdy_n      <= ll_perf_rx_port.src_rdy_n;
  ll_perf_rx_port.dst_rdy_n <= ll_perf_rx_dst_rdy_n;
  
  dm_din_next <= din;

  dm_addr <= addr(C_DM_ADDR_WIDTH-1 downto 0);
  dm_we   <= we and not(io_req);
  dm_re   <= re and not(io_req);

  io_req <= '1' when (addr > C_DM_HIGHADDR) else '0';

  io_addr    <= addr;
  io_we      <= we and io_req;
  io_re_next <= re and io_req;

  dout <= io_dout when (io_re = '1') else dm_dout;

  cpuwait_i <= dm_cpuwait or io_cpuwait;
  cpuwait   <= cpuwait_i;

  cpu_reset      <= ctrl_regs(C_CTRL_REG_REMOTE_PAUSE)(C_CTRL_REG_RESET_BIT_SEL);
  dm_remote_addr <= ctrl_regs(C_CTRL_REG_DM_REMOTE_ADDR);

  dm_remote_req <= ctrl_regs(C_CTRL_REG_REMOTE_REQUEST)(C_CTRL_REG_DM_BIT_SEL);

  dm_remote_pause <= not(ctrl_regs(C_CTRL_REG_REMOTE_PAUSE)(C_CTRL_REG_DM_BIT_SEL));

  dm_rma <= ctrl_regs(C_CTRL_REG_REMOTE_REQUEST)(C_CTRL_REG_DM_RMA_BIT_HIGH downto C_CTRL_REG_DM_RMA_BIT_LOW);
  dm_rmb <= ctrl_regs(C_CTRL_REG_REMOTE_REQUEST)(C_CTRL_REG_DM_RMB_BIT_HIGH downto C_CTRL_REG_DM_RMB_BIT_LOW);

  crypto_sel <= ctrl_regs(C_CTRL_REG_REMOTE_REQUEST)(C_CTRL_REG_CRYPTO_SEL_HIGH downto C_CTRL_REG_CRYPTO_SEL_LOW);

  DM_DIN_REG_PROC : process (clk) is
  begin
    if ((clk'event) and (clk = '1')) then
      if (reset_b = C_RESET_LEVEL) then
        dm_din <= (others => '0');
      elsif (cpuwait_i = '0') then
        dm_din <= dm_din_next;
      end if;
    end if;
  end process DM_DIN_REG_PROC;

  IO_RE_REG_PROC : process (clk) is
  begin
    if ((clk'event) and (clk = '1')) then
      if (reset_b = C_RESET_LEVEL) then
        io_re <= '0';
      else
        io_re <= io_re_next;
      end if;
    end if;
  end process IO_RE_REG_PROC;

  axi4s_ll_bridge_wrapper_i : axi4s_ll_bridge_wrapper_v2
    port map (
      clk             => clk,
      reset_b         => reset_b,
      axi4s_tx_tdata  => axi4s_tx_tdata ,
      axi4s_tx_tstrb  => axi4s_tx_tstrb ,
      axi4s_tx_tkeep  => axi4s_tx_tkeep ,
      axi4s_tx_tvalid => axi4s_tx_tvalid,
      axi4s_tx_tlast  => axi4s_tx_tlast ,
      axi4s_tx_tid    => axi4s_tx_tid ,
      axi4s_tx_tdest  => axi4s_tx_tdest ,
      axi4s_tx_tuser  => axi4s_tx_tuser ,
      axi4s_tx_tready => axi4s_tx_tready,
      axi4s_rx_tdata  => axi4s_rx_tdata ,
      axi4s_rx_tstrb  => axi4s_rx_tstrb ,
      axi4s_rx_tkeep  => axi4s_rx_tkeep ,
      axi4s_rx_tvalid => axi4s_rx_tvalid,
      axi4s_rx_tlast  => axi4s_rx_tlast ,
      axi4s_rx_tid    => axi4s_rx_tid ,
      axi4s_rx_tdest  => axi4s_rx_tdest ,
      axi4s_rx_tuser  => axi4s_rx_tuser ,
      axi4s_rx_tready => axi4s_rx_tready,
      ll_tx_data      => from_ic_ports(C_AXI4S_BRIDGE_PORT_NUM).data,
      ll_tx_sof_n     => from_ic_ports(C_AXI4S_BRIDGE_PORT_NUM).sof_n,
      ll_tx_eof_n     => from_ic_ports(C_AXI4S_BRIDGE_PORT_NUM).eof_n,
      ll_tx_src_rdy_n => from_ic_ports(C_AXI4S_BRIDGE_PORT_NUM).src_rdy_n,
      ll_tx_dst_rdy_n => from_ic_ports(C_AXI4S_BRIDGE_PORT_NUM).dst_rdy_n,
      ll_rx_data      => to_ic_ports(C_AXI4S_BRIDGE_PORT_NUM).data,
      ll_rx_sof_n     => to_ic_ports(C_AXI4S_BRIDGE_PORT_NUM).sof_n,
      ll_rx_eof_n     => to_ic_ports(C_AXI4S_BRIDGE_PORT_NUM).eof_n,
      ll_rx_src_rdy_n => to_ic_ports(C_AXI4S_BRIDGE_PORT_NUM).src_rdy_n,
      ll_rx_dst_rdy_n => to_ic_ports(C_AXI4S_BRIDGE_PORT_NUM).dst_rdy_n);

  dm_wrapper_1 : dm_wrapper_v2
    generic map (
      C_ADDR_WIDTH => C_DM_ADDR_WIDTH,
      C_DATA_WIDTH => C_MCU_DATA_WIDTH)
    port map (
      clk             => clk,
      reset_b         => reset_b,
      ll_tx_data      => to_ic_ports(C_DM_WRAPPER_PORT_NUM).data,
      ll_tx_sof_n     => to_ic_ports(C_DM_WRAPPER_PORT_NUM).sof_n,
      ll_tx_eof_n     => to_ic_ports(C_DM_WRAPPER_PORT_NUM).eof_n,
      ll_tx_src_rdy_n => to_ic_ports(C_DM_WRAPPER_PORT_NUM).src_rdy_n,
      ll_tx_dst_rdy_n => to_ic_ports(C_DM_WRAPPER_PORT_NUM).dst_rdy_n,
      ll_rx_data      => from_ic_ports(C_DM_WRAPPER_PORT_NUM).data,
      ll_rx_sof_n     => from_ic_ports(C_DM_WRAPPER_PORT_NUM).sof_n,
      ll_rx_eof_n     => from_ic_ports(C_DM_WRAPPER_PORT_NUM).eof_n,
      ll_rx_src_rdy_n => from_ic_ports(C_DM_WRAPPER_PORT_NUM).src_rdy_n,
      ll_rx_dst_rdy_n => from_ic_ports(C_DM_WRAPPER_PORT_NUM).dst_rdy_n,
      remote_req      => dm_remote_req,
      remote_pause    => dm_remote_pause,
      remote_addr     => dm_remote_addr,
      cpuwait         => dm_cpuwait,
      addr            => dm_addr,
      din             => din,
      re              => dm_re,
      we              => dm_we,
      dout            => dm_dout,
      rma             => dm_rma,
      rmb             => dm_rmb);

  io_wrapper_1 : io_wrapper_v2
    generic map (
      C_NUM_REGS => C_NUM_REGS)
    port map (
      clk             => clk,
      reset_b         => reset_b,
      ll_tx_data      => to_ic_ports(C_IO_WRAPPER_PORT_NUM).data,
      ll_tx_sof_n     => to_ic_ports(C_IO_WRAPPER_PORT_NUM).sof_n,
      ll_tx_eof_n     => to_ic_ports(C_IO_WRAPPER_PORT_NUM).eof_n,
      ll_tx_src_rdy_n => to_ic_ports(C_IO_WRAPPER_PORT_NUM).src_rdy_n,
      ll_tx_dst_rdy_n => to_ic_ports(C_IO_WRAPPER_PORT_NUM).dst_rdy_n,
      ll_rx_data      => from_ic_ports(C_IO_WRAPPER_PORT_NUM).data,
      ll_rx_sof_n     => from_ic_ports(C_IO_WRAPPER_PORT_NUM).sof_n,
      ll_rx_eof_n     => from_ic_ports(C_IO_WRAPPER_PORT_NUM).eof_n,
      ll_rx_src_rdy_n => from_ic_ports(C_IO_WRAPPER_PORT_NUM).src_rdy_n,
      ll_rx_dst_rdy_n => from_ic_ports(C_IO_WRAPPER_PORT_NUM).dst_rdy_n,
      ctrl_regs       => ctrl_regs,
      cpuwait         => io_cpuwait,
      addr            => io_addr,
      din             => din,
      dout            => io_dout,
      we              => io_we,
      re              => io_re);

  to_ic_ports(C_LOCAL_LOGIC_PORT_NUM).data        <= ll_tx_port.data;
  to_ic_ports(C_LOCAL_LOGIC_PORT_NUM).sof_n       <= ll_tx_port.sof_n;
  to_ic_ports(C_LOCAL_LOGIC_PORT_NUM).eof_n       <= ll_tx_port.eof_n;
  to_ic_ports(C_LOCAL_LOGIC_PORT_NUM).src_rdy_n   <= ll_tx_port.src_rdy_n;
  ll_tx_port.dst_rdy_n                            <= to_ic_ports(C_LOCAL_LOGIC_PORT_NUM).dst_rdy_n;
  ll_rx_port.data                                 <= from_ic_ports(C_LOCAL_LOGIC_PORT_NUM).data;
  ll_rx_port.sof_n                                <= from_ic_ports(C_LOCAL_LOGIC_PORT_NUM).sof_n;
  ll_rx_port.eof_n                                <= from_ic_ports(C_LOCAL_LOGIC_PORT_NUM).eof_n;
  ll_rx_port.src_rdy_n                            <= from_ic_ports(C_LOCAL_LOGIC_PORT_NUM).src_rdy_n;
  from_ic_ports(C_LOCAL_LOGIC_PORT_NUM).dst_rdy_n <= ll_rx_port.dst_rdy_n;

  to_ic_ports(C_PERF_MON_IF_PORT_NUM).data        <= ll_perf_tx_port.data;
  to_ic_ports(C_PERF_MON_IF_PORT_NUM).sof_n       <= ll_perf_tx_port.sof_n;
  to_ic_ports(C_PERF_MON_IF_PORT_NUM).eof_n       <= ll_perf_tx_port.eof_n;
  to_ic_ports(C_PERF_MON_IF_PORT_NUM).src_rdy_n   <= ll_perf_tx_port.src_rdy_n;
  ll_perf_tx_port.dst_rdy_n                       <= to_ic_ports(C_PERF_MON_IF_PORT_NUM).dst_rdy_n;
  ll_perf_rx_port.data                            <= from_ic_ports(C_PERF_MON_IF_PORT_NUM).data;
  ll_perf_rx_port.sof_n                           <= from_ic_ports(C_PERF_MON_IF_PORT_NUM).sof_n;
  ll_perf_rx_port.eof_n                           <= from_ic_ports(C_PERF_MON_IF_PORT_NUM).eof_n;
  ll_perf_rx_port.src_rdy_n                       <= from_ic_ports(C_PERF_MON_IF_PORT_NUM).src_rdy_n;
  from_ic_ports(C_PERF_MON_IF_PORT_NUM).dst_rdy_n <= ll_perf_rx_port.dst_rdy_n;
  
  sic_ic_1 : sic_ic_v2
    generic map (
      C_RADIX => C_RADIX)
    port map (
      clk              => clk,
      reset_b          => reset_b,
      ll_tx0_data      => from_ic_ports(0).data,
      ll_tx0_sof_n     => from_ic_ports(0).sof_n,
      ll_tx0_eof_n     => from_ic_ports(0).eof_n,
      ll_tx0_src_rdy_n => from_ic_ports(0).src_rdy_n,
      ll_tx0_dst_rdy_n => from_ic_ports(0).dst_rdy_n,
      ll_rx0_data      => to_ic_ports(0).data,
      ll_rx0_sof_n     => to_ic_ports(0).sof_n,
      ll_rx0_eof_n     => to_ic_ports(0).eof_n,
      ll_rx0_src_rdy_n => to_ic_ports(0).src_rdy_n,
      ll_rx0_dst_rdy_n => to_ic_ports(0).dst_rdy_n,
      ll_tx1_data      => from_ic_ports(1).data,
      ll_tx1_sof_n     => from_ic_ports(1).sof_n,
      ll_tx1_eof_n     => from_ic_ports(1).eof_n,
      ll_tx1_src_rdy_n => from_ic_ports(1).src_rdy_n,
      ll_tx1_dst_rdy_n => from_ic_ports(1).dst_rdy_n,
      ll_rx1_data      => to_ic_ports(1).data,
      ll_rx1_sof_n     => to_ic_ports(1).sof_n,
      ll_rx1_eof_n     => to_ic_ports(1).eof_n,
      ll_rx1_src_rdy_n => to_ic_ports(1).src_rdy_n,
      ll_rx1_dst_rdy_n => to_ic_ports(1).dst_rdy_n,
      ll_tx2_data      => from_ic_ports(2).data,
      ll_tx2_sof_n     => from_ic_ports(2).sof_n,
      ll_tx2_eof_n     => from_ic_ports(2).eof_n,
      ll_tx2_src_rdy_n => from_ic_ports(2).src_rdy_n,
      ll_tx2_dst_rdy_n => from_ic_ports(2).dst_rdy_n,
      ll_rx2_data      => to_ic_ports(2).data,
      ll_rx2_sof_n     => to_ic_ports(2).sof_n,
      ll_rx2_eof_n     => to_ic_ports(2).eof_n,
      ll_rx2_src_rdy_n => to_ic_ports(2).src_rdy_n,
      ll_rx2_dst_rdy_n => to_ic_ports(2).dst_rdy_n,
      ll_tx3_data      => from_ic_ports(3).data,
      ll_tx3_sof_n     => from_ic_ports(3).sof_n,
      ll_tx3_eof_n     => from_ic_ports(3).eof_n,
      ll_tx3_src_rdy_n => from_ic_ports(3).src_rdy_n,
      ll_tx3_dst_rdy_n => from_ic_ports(3).dst_rdy_n,
      ll_rx3_data      => to_ic_ports(3).data,
      ll_rx3_sof_n     => to_ic_ports(3).sof_n,
      ll_rx3_eof_n     => to_ic_ports(3).eof_n,
      ll_rx3_src_rdy_n => to_ic_ports(3).src_rdy_n,
      ll_rx3_dst_rdy_n => to_ic_ports(3).dst_rdy_n,
      ll_tx4_data      => from_ic_ports(4).data,
      ll_tx4_sof_n     => from_ic_ports(4).sof_n,
      ll_tx4_eof_n     => from_ic_ports(4).eof_n,
      ll_tx4_src_rdy_n => from_ic_ports(4).src_rdy_n,
      ll_tx4_dst_rdy_n => from_ic_ports(4).dst_rdy_n,
      ll_rx4_data      => to_ic_ports(4).data,
      ll_rx4_sof_n     => to_ic_ports(4).sof_n,
      ll_rx4_eof_n     => to_ic_ports(4).eof_n,
      ll_rx4_src_rdy_n => to_ic_ports(4).src_rdy_n,
      ll_rx4_dst_rdy_n => to_ic_ports(4).dst_rdy_n);      

end beh;
library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;
use ieee.math_real.all;

use work.zpu_sic_pkg.all;
use work.axi4s_pkg.all;

entity mem_ctlr_v2 is
  generic (
    C_ADDR_WIDTH     : integer := 8;
    C_DATA_WIDTH     : integer := 8;
    C_RAM_ADDR_WIDTH : integer := 8;
    C_RAM_DATA_WIDTH : integer := 8);
  port (
    clk             : in  std_logic;
    reset_b         : in  std_logic;    
    ll_tx_data      : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    ll_tx_sof_n     : out std_logic;
    ll_tx_eof_n     : out std_logic;
    ll_tx_src_rdy_n : out std_logic;
    ll_tx_dst_rdy_n : in  std_logic;
    ll_rx_data      : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    ll_rx_sof_n     : in  std_logic;
    ll_rx_eof_n     : in  std_logic;
    ll_rx_src_rdy_n : in  std_logic;
    ll_rx_dst_rdy_n : out std_logic;
    addr            : in  std_logic_vector(C_ADDR_WIDTH-1 downto 0);
    din             : in  std_logic_vector(C_DATA_WIDTH-1 downto 0);
    dout            : out std_logic_vector(C_DATA_WIDTH-1 downto 0);
    we              : in  std_logic;
    re              : in  std_logic;
    dout_valid      : out std_logic;
    cpu_wait        : out std_logic;
    ram_ce          : out std_logic;
    ram_addr        : out std_logic_vector(C_RAM_ADDR_WIDTH-1 downto 0);
    ram_din         : out std_logic_vector(C_RAM_DATA_WIDTH-1 downto 0);
    ram_dout        : in  std_logic_vector(C_RAM_DATA_WIDTH-1 downto 0);
    ram_we          : out std_logic;
    trans_id        : in  std_logic_vector(C_TRANS_ID_WIDTH-1 downto 0);
    remote_req      : in  std_logic;
    remote_pause    : in  std_logic;
    remote_addr     : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0)
    );
end entity mem_ctlr_v2;

architecture beh of mem_ctlr_v2 is
  signal ll_rx_port : ll_type;
  signal ll_tx_port : ll_type;

  constant C_LOCAL_XFER_NUM : integer := 1;
  constant C_ADDR_SHIFT     : integer := 2;

  type CTLR_FSM_TYPE is (idle, send_adr, send_num, send_tid, send_din, send_dat,
                         recv_adr, recv_num, recv_tid, recv_dat, ack_cpu, wait_ack_cpu);
  signal  ctlr_fsm_cs, ctlr_fsm_ns        : CTLR_FSM_TYPE;
  signal  ll_adr, ll_adr_next             : std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
  signal  ll_num, ll_num_next             : std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
  signal  ll_tid, ll_tid_next             : std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
  signal  ram_adr_i, ram_adr_i_next       : std_logic_vector(C_RAM_ADDR_WIDTH-1 downto 0);
  subtype SHORT_INT is integer range 0 to 255;
  signal  data_count, data_count_next     : SHORT_INT;
  signal  wait_for_ack, wait_for_ack_next : std_logic;
  signal  ack_data, ack_data_next         : std_logic_vector(C_DATA_WIDTH-1 downto 0);
  signal  dout_valid_i, dout_valid_i_next : std_logic;
  signal  din_i                           : std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
  signal  ram_dout_i                      : std_logic_vector(C_SWITCH_WIDTH-1 downto 0);

begin
  ll_tx_data           <= ll_tx_port.data;
  ll_tx_sof_n          <= ll_tx_port.sof_n;
  ll_tx_eof_n          <= ll_tx_port.eof_n;
  ll_tx_src_rdy_n      <= ll_tx_port.src_rdy_n;
  ll_tx_port.dst_rdy_n <= ll_tx_dst_rdy_n;
  ll_rx_port.data      <= ll_rx_data;
  ll_rx_port.sof_n     <= ll_rx_sof_n;
  ll_rx_port.eof_n     <= ll_rx_eof_n;
  ll_rx_port.src_rdy_n <= ll_rx_src_rdy_n;
  ll_rx_dst_rdy_n      <= ll_rx_port.dst_rdy_n;

  dout       <= ack_data when ((wait_for_ack = '0') or (remote_req = '1')) else ram_dout_i(C_DATA_WIDTH-1 downto 0);
  dout_valid <= dout_valid_i;

  PAD_DATA_GEN : if (C_DATA_WIDTH < C_SWITCH_WIDTH) generate
    din_i(C_SWITCH_WIDTH-1 downto C_DATA_WIDTH)      <= (others => '0');
    din_i(C_DATA_WIDTH-1 downto 0)                   <= din;
    ram_dout_i(C_SWITCH_WIDTH-1 downto C_DATA_WIDTH) <= (others => '0');
    ram_dout_i(C_DATA_WIDTH-1 downto 0)              <= ram_dout;
  end generate PAD_DATA_GEN;

  NO_PAD_DATA_GEN : if (C_DATA_WIDTH = C_SWITCH_WIDTH) generate
    din_i      <= din;
    ram_dout_i <= ram_dout;
  end generate NO_PAD_DATA_GEN;

  cpu_wait <= (remote_req or remote_pause) and (we or re) and not(dout_valid_i);

  CTLR_FSM_STATE_PROC : process(clk) is
  begin
    if ((clk'event) and (clk = '1')) then
      if (reset_b = C_RESET_LEVEL) then
        ctlr_fsm_cs  <= idle;
        ll_adr       <= (others => '0');
        ll_num       <= (others => '0');
        ll_tid       <= (others => '0');
        ram_adr_i    <= (others => '0');
        ack_data     <= (others => '0');
        wait_for_ack <= '0';
        data_count   <= 0;
      else
        ctlr_fsm_cs  <= ctlr_fsm_ns;
        ll_adr       <= ll_adr_next;
        ll_num       <= ll_num_next;
        ll_tid       <= ll_tid_next;
        ram_adr_i    <= ram_adr_i_next;
        ack_data     <= ack_data_next;
        wait_for_ack <= wait_for_ack_next;
        data_count   <= data_count_next;
      end if;
    end if;
  end process CTLR_FSM_STATE_PROC;

  DOUT_VALID_REG_PROC : process (clk) is
  begin
    if ((clk'event) and (clk = '1')) then
      if (reset_b = C_RESET_LEVEL) then
        dout_valid_i <= '0';
      else
        dout_valid_i <= dout_valid_i_next;
      end if;
    end if;
  end process DOUT_VALID_REG_PROC;

  CTLR_FSM_LOGIC_PROC : process(ack_data, addr, ctlr_fsm_cs, data_count, din_i,
                                dout_valid_i, ll_adr, ll_num, ll_rx_port,
                                ll_tid, ll_tx_port, ram_adr_i, ram_dout_i, re,
                                remote_addr, remote_pause, remote_req,
                                trans_id, wait_for_ack, we) is
  begin
    ctlr_fsm_ns       <= ctlr_fsm_cs;
    ll_adr_next       <= ll_adr;
    ll_num_next       <= ll_num;
    ll_tid_next       <= ll_tid;
    ram_adr_i_next    <= ram_adr_i;
    ack_data_next     <= ack_data;
    wait_for_ack_next <= wait_for_ack;
    dout_valid_i_next <= dout_valid_i;
    data_count_next   <= data_count;

    case (ctlr_fsm_cs) is
      when idle =>
        ll_rx_port.dst_rdy_n <= '1';
        ll_tx_port.data      <= (others => '0');
        ll_tx_port.sof_n     <= '1';
        ll_tx_port.eof_n     <= '1';
        ll_tx_port.src_rdy_n <= '1';
        ram_adr_i_next       <= (others => '0');
        data_count_next      <= 0;
        dout_valid_i_next    <= '0';
        ll_adr_next          <= remote_addr + addr;
        ll_num_next          <= conv_std_logic_vector(C_LOCAL_XFER_NUM, C_SWITCH_WIDTH);
        if (we = '1') then
          ll_tid_next <= C_TRANS_TYPE_WR_REQ & trans_id;
        else
          ll_tid_next <= C_TRANS_TYPE_RD_REQ & trans_id;
        end if;
        if ((ll_rx_port.sof_n = '0') and (ll_rx_port.src_rdy_n = '0')) then
          ctlr_fsm_ns <= recv_adr;
        elsif ((dout_valid_i = '1') or (remote_pause = '1')) then
          ctlr_fsm_ns <= idle;
        elsif ((remote_req = '1') and ((we = '1') or (re = '1')) and (wait_for_ack = '0')) then
          wait_for_ack_next <= '1';
          ctlr_fsm_ns       <= send_adr;
        end if;

      when send_adr =>
        ll_rx_port.dst_rdy_n <= '1';
        ll_tx_port.data      <= ll_adr;
        ll_tx_port.sof_n     <= '0';
        ll_tx_port.eof_n     <= '1';
        ll_tx_port.src_rdy_n <= '0';
        if (ll_tx_port.dst_rdy_n = '0') then
          ctlr_fsm_ns <= send_num;
        end if;

      when send_num =>
        ll_rx_port.dst_rdy_n <= '1';
        ll_tx_port.data      <= ll_num;
        ll_tx_port.sof_n     <= '1';
        ll_tx_port.eof_n     <= '1';
        ll_tx_port.src_rdy_n <= '0';
        if (ll_tx_port.dst_rdy_n = '0') then
          ctlr_fsm_ns <= send_tid;
        end if;

      when send_tid =>
        ll_rx_port.dst_rdy_n <= '1';
        ll_tx_port.data      <= ll_tid;
        ll_tx_port.sof_n     <= '1';
        if ((ll_tid(C_TRANS_HIGH-1 downto C_TRANS_LOW) = C_TRANS_TYPE_RD_REQ) or
            (ll_tid(C_TRANS_HIGH-1 downto C_TRANS_LOW) = C_TRANS_TYPE_WR_ACK)) then
          ll_tx_port.eof_n <= '0';
        else
          ll_tx_port.eof_n <= '1';
        end if;
        ll_tx_port.src_rdy_n <= '0';
        data_count_next      <= 1;      
        if ((ll_tx_port.dst_rdy_n = '0') and
            (ll_tid(C_TRANS_HIGH-1 downto C_TRANS_LOW) = C_TRANS_TYPE_RD_ACK)) then
          ctlr_fsm_ns <= send_dat;      
        elsif ((ll_tx_port.dst_rdy_n = '0') and
               (ll_tid(C_TRANS_HIGH-1 downto C_TRANS_LOW) = C_TRANS_TYPE_WR_REQ)) then
          ctlr_fsm_ns <= send_din;      
        elsif (ll_tx_port.dst_rdy_n = '0') then
          ctlr_fsm_ns <= idle;          
        end if;

      when send_dat =>
        ll_rx_port.dst_rdy_n <= '1';
        ll_tx_port.data      <= ram_dout_i;
        ll_tx_port.sof_n     <= '1';
        if (data_count = ll_num) then
          ll_tx_port.eof_n <= ll_tx_port.dst_rdy_n;
        else
          ll_tx_port.eof_n <= '1';
        end if;
        ll_tx_port.src_rdy_n <= '0';
        if (ll_tx_port.dst_rdy_n = '0') then
          ram_adr_i_next  <= ram_adr_i + 1;
          data_count_next <= data_count + 1;
        end if;
        if ((ll_tx_port.dst_rdy_n = '0') and (data_count = ll_num)) then
          ctlr_fsm_ns <= idle;
        end if;

      when send_din =>
        ll_rx_port.dst_rdy_n <= '1';
        ll_tx_port.data      <= din_i;
        ll_tx_port.sof_n     <= '1';
        ll_tx_port.eof_n     <= '0';
        ll_tx_port.src_rdy_n <= '0';
        if (ll_tx_port.dst_rdy_n = '0') then
          ctlr_fsm_ns <= idle;
        end if;

      when recv_adr =>
        ll_rx_port.dst_rdy_n <= '0';
        ll_tx_port.data      <= (others => '0');
        ll_tx_port.sof_n     <= '1';
        ll_tx_port.eof_n     <= '1';
        ll_tx_port.src_rdy_n <= '1';
        ll_adr_next          <= ll_rx_port.data;
        if ((ll_rx_port.sof_n = '0') and (ll_rx_port.src_rdy_n = '0')) then
          ctlr_fsm_ns <= recv_num;
        end if;

      when recv_num =>
        ll_rx_port.dst_rdy_n <= '0';
        ll_tx_port.data      <= (others => '0');
        ll_tx_port.sof_n     <= '1';
        ll_tx_port.eof_n     <= '1';
        ll_tx_port.src_rdy_n <= '1';
        ll_num_next          <= ll_rx_port.data;
        if (ll_rx_port.src_rdy_n = '0') then
          ctlr_fsm_ns <= recv_tid;
        end if;

      when recv_tid =>
        ll_rx_port.dst_rdy_n <= '0';
        ll_tx_port.data      <= (others => '0');
        ll_tx_port.sof_n     <= '1';
        ll_tx_port.eof_n     <= '1';
        ll_tx_port.src_rdy_n <= '1';
        ram_adr_i_next       <= ll_adr(C_RAM_ADDR_WIDTH-1 downto 0);
        ll_tid_next          <= ll_rx_port.data;
        if ((ll_rx_port.src_rdy_n = '0') and
            (ll_rx_port.data(C_TRANS_HIGH-1 downto C_TRANS_LOW) = C_TRANS_TYPE_RD_REQ)) then
          ll_adr_next <= ll_rx_port.data(C_TRANS_ID_WIDTH-1 downto 0) & ll_adr(C_TRANS_HIGH-1 downto C_TRANS_LOW);
          ll_tid_next <= C_TRANS_TYPE_RD_ACK & ll_rx_port.data(C_TRANS_ID_WIDTH-1 downto 0);
          ctlr_fsm_ns <= send_adr;      
        elsif ((ll_rx_port.src_rdy_n = '0') and
               (ll_rx_port.data(C_TRANS_HIGH-1 downto C_TRANS_LOW) = C_TRANS_TYPE_WR_REQ)) then
          ll_adr_next <= ll_rx_port.data(C_TRANS_ID_WIDTH-1 downto 0) & ll_adr(C_TRANS_HIGH-1 downto C_TRANS_LOW);
          ll_tid_next <= C_TRANS_TYPE_WR_ACK & ll_rx_port.data(C_TRANS_ID_WIDTH-1 downto 0);
          ctlr_fsm_ns <= recv_dat;      
        elsif ((ll_rx_port.src_rdy_n = '0') and
               (ll_rx_port.data(C_TRANS_HIGH-1 downto C_TRANS_LOW) = C_TRANS_TYPE_RD_ACK)) then
          ctlr_fsm_ns <= ack_cpu;       
        elsif ((ll_rx_port.src_rdy_n = '0') and
               (ll_rx_port.data(C_TRANS_HIGH-1 downto C_TRANS_LOW) = C_TRANS_TYPE_WR_ACK)) then
          ctlr_fsm_ns <= ack_cpu;       
        end if;

      when recv_dat =>
        ll_rx_port.dst_rdy_n <= '0';
        ll_tx_port.data      <= (others => '0');
        ll_tx_port.sof_n     <= '1';
        ll_tx_port.eof_n     <= '1';
        ll_tx_port.src_rdy_n <= '1';
        if (ll_rx_port.src_rdy_n = '0') then
          ram_adr_i_next <= ram_adr_i + 1;
        end if;
        if ((ll_rx_port.src_rdy_n = '0') and (ll_rx_port.eof_n = '0')) then
          ll_num_next <= C_TRANS_ACK_LEN;
          ctlr_fsm_ns <= send_adr;
        end if;

      when ack_cpu =>
        ll_rx_port.dst_rdy_n <= '0';
        ll_tx_port.data      <= (others => '0');
        ll_tx_port.sof_n     <= '1';
        ll_tx_port.eof_n     <= '1';
        ll_tx_port.src_rdy_n <= '1';
        wait_for_ack_next    <= '0';
        if ((ll_rx_port.src_rdy_n = '0') and (ll_rx_port.eof_n = '0')) then
          ack_data_next <= ll_rx_port.data(C_DATA_WIDTH-1 downto 0);
          ctlr_fsm_ns   <= wait_ack_cpu;
        elsif (ll_tid(C_TRANS_HIGH-1 downto C_TRANS_LOW) = C_TRANS_TYPE_WR_ACK) then
          dout_valid_i_next <= '1';
          ctlr_fsm_ns       <= idle;
        end if;

      when wait_ack_cpu =>
        ll_rx_port.dst_rdy_n <= '1';
        ll_tx_port.data      <= (others => '0');
        ll_tx_port.sof_n     <= '1';
        ll_tx_port.eof_n     <= '1';
        ll_tx_port.src_rdy_n <= '1';
        dout_valid_i_next    <= '1';
        ctlr_fsm_ns          <= idle;

      when others =>
        ll_rx_port.dst_rdy_n <= '1';
        ll_tx_port.data      <= (others => '0');
        ll_tx_port.sof_n     <= '1';
        ll_tx_port.eof_n     <= '1';
        ll_tx_port.src_rdy_n <= '1';
        wait_for_ack_next    <= '0';
        ctlr_fsm_ns          <= idle;
    end case;
  end process CTLR_FSM_LOGIC_PROC;

  ram_ce   <= '1';                      
  ram_addr <= ram_adr_i;
  ram_din  <= ll_rx_port.data(C_RAM_DATA_WIDTH-1 downto 0);
  ram_we   <= not(ll_rx_port.src_rdy_n) when (ctlr_fsm_cs = recv_dat) else '0';

end beh;
library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

use work.axi4s_pkg.all;

entity perf_ll_fifo_if is
  port (
    clk                  : in  std_logic;
    reset_b              : in  std_logic;
    ll_rx_port_data      : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    ll_rx_port_src_rdy_n : in  std_logic;
    ll_rx_port_dst_rdy_n : out std_logic;
    ll_rx_port_sof_n     : in  std_logic;
    ll_rx_port_eof_n     : in  std_logic;
    ll_tx_port_data      : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    ll_tx_port_src_rdy_n : out std_logic;
    ll_tx_port_dst_rdy_n : in  std_logic;
    ll_tx_port_sof_n     : out std_logic;
    ll_tx_port_eof_n     : out std_logic;
    tx_fifo_data         : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    tx_fifo_we           : out std_logic;
    tx_fifo_full         : in  std_logic;
    rx_fifo_data         : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    rx_fifo_re           : out std_logic;
    rx_fifo_empty        : in  std_logic
    );
end entity perf_ll_fifo_if;

architecture BEH of perf_ll_fifo_if is
  type CTLR_FSM_TYPE is (recv_adr, recv_num, recv_tid, recv_dat, recv_err,
                         chk_fifo, send_adr, send_num, send_tid, read_dat, send_dat);
  signal ctlr_fsm_cs, ctlr_fsm_ns : CTLR_FSM_TYPE;
  signal ll_adr, ll_adr_next : std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
  signal ll_num, ll_num_next : std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
  signal ll_tid, ll_tid_next : std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
  subtype SHORT_INT is integer range 0 to 255;
  signal data_count, data_count_next : SHORT_INT;  
  
begin
  tx_fifo_data <= ll_rx_port_data(C_SWITCH_WIDTH-1 downto 0);

  CTLR_FSM_STATE_PROC : process(clk) is
  begin
    if ((clk'event) and (clk='1')) then
      if (reset_b=C_RESET_LEVEL) then
        ctlr_fsm_cs  <= recv_adr;
        ll_adr       <= (others => '0');
        ll_num       <= (others => '0');
        ll_tid       <= (others => '0');
        data_count   <= 0;
      else
        ctlr_fsm_cs  <= ctlr_fsm_ns;
        ll_adr       <= ll_adr_next;
        ll_num       <= ll_num_next;
        ll_tid       <= ll_tid_next;
        data_count   <= data_count_next;
      end if;
    end if;
  end process CTLR_FSM_STATE_PROC;

  CTLR_FSM_LOGIC_PROC : process (ctlr_fsm_cs, data_count, ll_adr, ll_num,
                                 ll_rx_port_data, ll_tid, ll_tx_port_dst_rdy_n, 
                                 rx_fifo_data, ll_rx_port_src_rdy_n, ll_rx_port_sof_n,
                                 ll_rx_port_eof_n, rx_fifo_empty, tx_fifo_full) is
  begin
    ctlr_fsm_ns       <= ctlr_fsm_cs;
    ll_adr_next       <= ll_adr;
    ll_num_next       <= ll_num;
    ll_tid_next       <= ll_tid;
    data_count_next   <= data_count;

    case (ctlr_fsm_cs) is
      when recv_adr =>
        ll_rx_port_dst_rdy_n <= '0';
        ll_tx_port_data      <= (others => '0');
        ll_tx_port_sof_n     <= '1';
        ll_tx_port_eof_n     <= '1';
        ll_tx_port_src_rdy_n <= '1';
        tx_fifo_we           <= '0';
        rx_fifo_re           <= '0';
        ll_adr_next          <= ll_rx_port_data;        
        if ((ll_rx_port_sof_n = '0') and (ll_rx_port_src_rdy_n = '0')) then
          ctlr_fsm_ns        <= recv_num;
        end if;

      when recv_num =>
        ll_rx_port_dst_rdy_n <= '0';
        ll_tx_port_data      <= (others => '0');
        ll_tx_port_sof_n     <= '1';
        ll_tx_port_eof_n     <= '1';
        ll_tx_port_src_rdy_n <= '1';
        tx_fifo_we           <= '0';
        rx_fifo_re           <= '0';
        ll_num_next          <= ll_rx_port_data;
        if (ll_rx_port_src_rdy_n = '0') then
          ctlr_fsm_ns        <= recv_tid;
        end if;        

      when recv_tid =>
        ll_rx_port_dst_rdy_n <= '0';
        ll_tx_port_data      <= (others => '0');
        ll_tx_port_sof_n     <= '1';
        ll_tx_port_eof_n     <= '1';
        ll_tx_port_src_rdy_n <= '1';
        tx_fifo_we           <= '0';
        rx_fifo_re           <= '0';
        if (ll_rx_port_src_rdy_n = '0') then
          ll_adr_next <= ll_rx_port_data(C_TRANS_ID_WIDTH-1 downto 0) & ll_adr(C_TRANS_HIGH-1 downto C_TRANS_LOW);
        end if;        
        if ((ll_rx_port_src_rdy_n = '0') and
            (ll_rx_port_data(C_TRANS_HIGH-1 downto C_TRANS_LOW) = C_TRANS_TYPE_RD_REQ)) then
          ll_tid_next        <= C_TRANS_TYPE_RD_ACK & ll_rx_port_data(C_TRANS_ID_WIDTH-1 downto 0);
          ctlr_fsm_ns        <= chk_fifo;
        elsif ((ll_rx_port_src_rdy_n = '0') and
            (ll_rx_port_data(C_TRANS_HIGH-1 downto C_TRANS_LOW) = C_TRANS_TYPE_WR_REQ)) then
          ll_tid_next        <= C_TRANS_TYPE_WR_ACK & ll_rx_port_data(C_TRANS_ID_WIDTH-1 downto 0);
          ctlr_fsm_ns        <= recv_dat;
        end if;

      when chk_fifo => 
        ll_rx_port_dst_rdy_n <= '1';
        ll_tx_port_data      <= (others => '0');
        ll_tx_port_sof_n     <= '1';
        ll_tx_port_eof_n     <= '1';
        ll_tx_port_src_rdy_n <= '1';
        tx_fifo_we           <= '0';
        rx_fifo_re           <= '0';
        if (rx_fifo_empty = '0') then
          ctlr_fsm_ns        <= send_adr;
        end if;
        
      when recv_dat =>
        ll_rx_port_dst_rdy_n <= tx_fifo_full;
        ll_tx_port_data      <= (others => '0');
        ll_tx_port_sof_n     <= '1';
        ll_tx_port_eof_n     <= '1';
        ll_tx_port_src_rdy_n <= '1';
        tx_fifo_we           <= not(ll_rx_port_src_rdy_n or tx_fifo_full);
        rx_fifo_re           <= '0';        
        if ((ll_rx_port_src_rdy_n = '0') and (ll_rx_port_eof_n = '0') and
            (tx_fifo_full = '0')) then
          ll_num_next        <= C_TRANS_ACK_LEN;
          ctlr_fsm_ns        <= send_adr;
        end if;

      when send_adr =>
        ll_rx_port_dst_rdy_n <= '1';
        ll_tx_port_data      <= ll_adr;
        ll_tx_port_sof_n     <= '0';
        ll_tx_port_eof_n     <= '1';
        ll_tx_port_src_rdy_n <= '0';
        tx_fifo_we           <= '0';
        rx_fifo_re           <= '0';        
        if (ll_tx_port_dst_rdy_n = '0') then
          ctlr_fsm_ns        <= send_num;
        end if;

      when send_num => 
        ll_rx_port_dst_rdy_n <= '1';
        ll_tx_port_data      <= ll_num;
        ll_tx_port_sof_n     <= '1';
        ll_tx_port_eof_n     <= '1';
        ll_tx_port_src_rdy_n <= '0';
        tx_fifo_we           <= '0';
        rx_fifo_re           <= '0';        
        if (ll_tx_port_dst_rdy_n = '0') then
          ctlr_fsm_ns        <= send_tid;
        end if;

      when send_tid =>
        ll_rx_port_dst_rdy_n <= '1';
        ll_tx_port_data      <= ll_tid;
        ll_tx_port_sof_n     <= '1';
        if (ll_tid(C_TRANS_HIGH-1 downto C_TRANS_LOW) = C_TRANS_TYPE_WR_ACK) then
          ll_tx_port_eof_n   <= '0';
        else
          ll_tx_port_eof_n   <= '1';
        end if;
        ll_tx_port_src_rdy_n <= '0';
        tx_fifo_we           <= '0';        
        data_count_next      <= 1;
        if ((ll_tx_port_dst_rdy_n = '0') and
            (ll_tid(C_TRANS_HIGH-1 downto C_TRANS_LOW) = C_TRANS_TYPE_RD_ACK)) then
          rx_fifo_re         <= '0';
          ctlr_fsm_ns        <= send_dat;
        elsif (ll_tx_port_dst_rdy_n = '0') then
          rx_fifo_re         <= '0';          
          ctlr_fsm_ns        <= recv_adr;
        else
          rx_fifo_re         <= '0';
          ctlr_fsm_ns        <= send_tid;
        end if;

      when read_dat =>
        ll_rx_port_dst_rdy_n <= '1';
        ll_tx_port_data      <= (others => '0');
        ll_tx_port_sof_n     <= '1';
        ll_tx_port_eof_n     <= '1';
        ll_tx_port_src_rdy_n <= '1';
        tx_fifo_we           <= '0';
        rx_fifo_re           <= not(rx_fifo_empty);
        if (rx_fifo_empty = '0') then
          data_count_next    <= data_count + 1;
          ctlr_fsm_ns        <= send_dat;
        end if;

      when send_dat =>
        ll_rx_port_dst_rdy_n <= '1';
        ll_tx_port_data      <= rx_fifo_data;
        ll_tx_port_sof_n     <= '1';
        if ((ll_tx_port_dst_rdy_n = '0') and (data_count = ll_num)) then
          ll_tx_port_eof_n   <= '0';
        else
          ll_tx_port_eof_n   <= '1';
        end if;
        ll_tx_port_src_rdy_n <= '0';
        tx_fifo_we           <= '0';
        rx_fifo_re           <= not(rx_fifo_empty) and not(ll_tx_port_dst_rdy_n);
        if ((ll_tx_port_dst_rdy_n = '0') and (data_count = ll_num)) then
          ctlr_fsm_ns        <= recv_adr;  
        elsif ((ll_tx_port_dst_rdy_n = '0') and (rx_fifo_empty = '0')) then          
          data_count_next    <= data_count + 1; 
          ctlr_fsm_ns        <= send_dat;
        elsif (rx_fifo_empty = '1') then
          ctlr_fsm_ns        <= read_dat;  
        end if;

      when recv_err =>
        ll_rx_port_dst_rdy_n <= '0';
        tx_fifo_we           <= '0';
        rx_fifo_re           <= '0';
        ll_tx_port_data      <= (others => '0');
        ll_tx_port_sof_n     <= '1';
        ll_tx_port_eof_n     <= '1';
        ll_tx_port_src_rdy_n <= '1';
        if ((ll_rx_port_src_rdy_n = '0') and (ll_rx_port_eof_n = '0')) then
          ctlr_fsm_ns        <= recv_adr;
        end if;

      when others =>
        ll_rx_port_dst_rdy_n <= '1';
        tx_fifo_we           <= '0';
        rx_fifo_re           <= '0';
        ll_tx_port_data      <= (others => '0');
        ll_tx_port_sof_n     <= '1';
        ll_tx_port_eof_n     <= '1';
        ll_tx_port_src_rdy_n <= '1';
        ctlr_fsm_ns          <= recv_adr;
    end case;
  end process CTLR_FSM_LOGIC_PROC;  

end BEH;

library ieee;
use ieee.std_logic_1164.all; 


entity regn is
	generic ( 
		N : integer := 32;
		init : std_logic_vector
	);
	port ( 	  
	    clk 	: in std_logic;
		rst 	: in std_logic;
	    en 		: in std_logic; 
		input  	: in std_logic_vector(N-1 downto 0);
        output 	: out std_logic_vector(N-1 downto 0)
	);
end regn;

architecture struct of regn is
begin	
	gen : process( clk )
	begin
		if rising_edge( clk ) then
			if ( rst = '1' ) then
				output <= init;
			elsif ( en = '1' ) then
				output<= input;
			end if;
		end if;
	end process;
end struct;

library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.all;
use ieee.numeric_std.all;		
use work.sha3_pkg.all;
use work.sha3_blake_package.all;


entity gfunc_half_modified is
	generic ( 	iw : integer := 32; 	 
				h : integer := 256 );
	port(
		ain : in std_logic_vector(iw-1 downto 0);
		bin : in  std_logic_vector(iw-1 downto 0);
      	cin : in  std_logic_vector(iw-1 downto 0);
      	din : in  std_logic_vector(iw-1 downto 0);      
		const : in  std_logic_vector(iw-1 downto 0);	
		sel : in std_logic;
      	aout : out std_logic_vector(iw-1 downto 0);
      	bout : out std_logic_vector(iw-1 downto 0);
      	cout : out std_logic_vector(iw-1 downto 0);
      	dout : out std_logic_vector(iw-1 downto 0)
		);		 
end gfunc_half_modified;


architecture struct of gfunc_half_modified is
	signal csa_a1_1, csa_a1_2, csa_a2_1, csa_a2_2 : std_logic_vector(iw-1 downto 0);

	signal  aadd, dxor, dxor_rot, bxor, bxor_rot, cadd    :   std_logic_vector (iw-1 downto 0);
begin 
	aadd <= const + ain + bin;
	dxor <= din xor aadd;					 
	
	cadd <= dxor_rot + cin;
	bxor <= cadd xor bin;	
	
	aout   <= aadd;
	bout   <= bxor_rot;
	cout   <= cadd;
	dout   <= dxor_rot;
	
	arch_32 : if h <= 256 generate		
		dxor_rot <= rolx(dxor, 32-g_rot_arch32(0)) when sel = '0' else rolx(dxor, 32-g_rot_arch32(2));
		bxor_rot <= rolx(bxor, 32-g_rot_arch32(1)) when sel = '0' else rolx(bxor, 32-g_rot_arch32(3));
	end generate;
	
	arch_64 : if h > 256 generate
		dxor_rot <= rolx(dxor, 64-g_rot_arch64(0)) when sel = '0' else rolx(dxor, 64-g_rot_arch64(2));
		bxor_rot <= rolx(bxor, 64-g_rot_arch64(1)) when sel = '0' else rolx(bxor, 64-g_rot_arch64(3));		
	end generate;	
end struct;

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;


entity piso is
	generic ( 
		N	: integer := 128;	
		M	: integer := 32		
	);
	port (
		clk 	 : in std_logic;
		en   : in std_logic;
		sel	 : in std_logic;
		input  : in std_logic_vector(N-1 downto 0);		
		output : out std_logic_vector(M-1 downto 0)
	);
end piso;

architecture Behavioral of piso is
	constant regamount : integer := N/M;
	type reg_array is array ( 0 to regamount-1 ) of std_logic_vector(M-1 downto 0);
	signal reg, mux : reg_array;	
begin

	mux(regamount-1) <= input(M-1 downto 0);
	mux_gen : for i in 0 to regamount-2 generate
		mux(i) <= input(N-M*i-1 downto N-M*i-M) when sel = '1' else reg(i+1);
	end generate;
	
	regX_gen : for i in 0 to regamount-1 generate
		regX : process ( clk )
		begin
			if rising_edge(clk) then   
				if ( en = '1' ) then
					reg(i) <= mux(i);
				end if;
			end if;
		end process;
	end generate;
	
	output <= reg(0);
end Behavioral;


library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;


entity sipo is
	generic ( 
		N	: integer := 512;
		M	: integer := 32		
	);
	port (
		clk 	 : in std_logic;				 
		en     : in std_logic;
		input  : in std_logic_vector(M-1 downto 0);
		output : out std_logic_vector(N-1 downto 0)
	);
end sipo;

architecture Behavioral of sipo is
	constant regamount : integer := N/M;
	type reg_array is array ( 0 to regamount-1 ) of std_logic_vector(M-1 downto 0);
	signal reg : reg_array;	
begin
	output_gen : for i in regamount-1 downto 0 generate
		output((M*i + (M-1)) downto M*i ) <= reg(regamount-i-1);
	end generate;
	
	regX_gen : for i in regamount-2 downto 0 generate
		regX : process ( clk )
		begin
			if rising_edge(clk) then	 
				if ( en = '1' ) then
					reg(i) <= reg(i+1);	
				end if;
			end if;
		end process;
	end generate;
	
	regLast : process ( clk )
	begin
		if rising_edge(clk) then   
			if ( en = '1' ) then
				reg(regamount-1) <= input;
			end if;
		end if;
	end process;
		
end Behavioral;


library ieee;
use ieee.std_logic_1164.all;

entity sr_reg is
	generic (
	  	init : std_logic := '0'
	);
	port (					
		rst			: in std_logic;
		clk 		: in std_logic;
		set     	: in std_logic;
		clr         : in std_logic;
		output		: out std_logic
	);				 
end sr_reg;

	
	
	
	
	

architecture struct of sr_reg is   
	signal output_s : std_logic;
begin	   					  	   	
	reg_gen : process( clk )
	begin		
		if rising_edge(clk) then  
			if ( rst = '1' ) then
			    output_s <= init;
			else
				output_s <= set or ((not clr) and output_s);
			end if;
		end if;	
	end process;				
	
	output <= output_s;
	
	
end struct;


library ieee;
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;
use work.sha3_pkg.all;


entity decountern is
	generic ( 		
		n : integer := 64;
		sub : integer := 1
	);
	port ( 	  
		clk 	: in std_logic;
		rst		: in std_logic;
	    load 	: in std_logic;
	    en 		: in std_logic; 
		input  	: in std_logic_vector(n-1 downto 0);
        output  : out std_logic_vector(n-1 downto 0)
	);
end decountern;

architecture struct of decountern is
	signal reg_in, reg_out : std_logic_vector(n-1 downto 0);
	signal ctrl : std_logic; 
begin
	
	reg_in <= input when load = '1' else reg_out - sub;
	ctrl <= load or en;
	
	gen : process( clk )
	begin
		if rising_edge( clk ) then
			if ( rst = '1' ) then
				reg_out <= (others => '0');			
			elsif ( ctrl = '1' ) then
				reg_out <= reg_in;
			end if;
		end if;
	end process;  
	output <= reg_out;
end struct;					 

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use ieee.std_logic_unsigned.all;
use work.sha3_pkg.all;


entity countern is
	generic ( 
		N 	: integer := 2;
		step	:integer  :=1;
		style	:integer :=COUNTER_STYLE_1		
	);
	port ( 	  
		clk : in std_logic;
		rst : in std_logic;
	    load : in std_logic;
	    en : in std_logic; 
		input  : in std_logic_vector(N-1 downto 0);
        output : out std_logic_vector(N-1 downto 0)
	);
end countern;

architecture countern of countern is
   signal temp 		: std_logic_vector(N-1 downto 0);
   signal value 	: std_logic_vector(N-1 downto 0);
   signal init_value 	: std_logic_vector(N-1 downto 0);

begin
	
	s1: if style = COUNTER_STYLE_1 generate
		value <= std_logic_vector(to_unsigned(step, N));
		init_value <= input;
	end generate;

	s2: if style = COUNTER_STYLE_2 generate
		value <= input;
		init_value <= (others => '0');
	end generate;

	s3: if style = COUNTER_STYLE_3 generate
		value <= input;
		init_value <= input;
	end generate;

	
	gen : process( clk )
	begin
		if rising_edge( clk ) then
			if ( rst = '1' ) then
				temp <= init_value;
			elsif (load = '1' ) then
				temp <= input;
			elsif ( en = '1' ) then
				temp <= temp + value;
			end if;
		end if;
	end process;  
	output <= temp;
end countern;


library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.all; 
use work.sha3_pkg.all;
use work.sha3_blake_package.all;

entity blake_control is		
	generic ( 	 	 
		VERSION : integer := SHA3_ROUND3;
		HS : integer := 256
	);
	port (					
		rst			: in std_logic;
		clk			: in std_logic;
		src_ready	: in std_logic;
		src_read	: out std_logic;
		dst_ready 	: in std_logic;
		dst_write	: out std_logic;
		
		load_c, ec	: out std_logic;		
		dt, eth, etl: out std_logic;
		
		stbot : out std_logic;
		zc0, zcRemainder, extra_block			: in std_logic;		
		final_segment 			: in std_logic;
		
		msg_wr, state_wr, h_wr, sf, smux : out std_logic;
		round 		: out std_logic_vector(7 downto 0)
	);				 
end blake_control;

architecture struct of blake_control is				   	 
	constant roundnr 			: integer := get_roundnr( HS, VERSION )*16;
	constant log2roundnrzeros	: std_logic_vector(log2( roundnr )-1 downto 0) := (others => '0');
	
	type fsm_type is (reset, wait_for_header1, wait_for_header2, load, initialization, hash, finalization, output_data_stall, output_data );
	signal nstate, cs : fsm_type;
	
	signal pc : std_logic_vector(log2(roundnr)-1 downto 0);
	signal lpc, epc : std_logic;
	signal set_fs, clr_fs, fs_true : std_logic;	
	signal init_done, set_init, clr_init : std_logic; 
	
	signal zpc7, zpc3, zpc15, zpcRound : std_logic;
	signal set_stbot, clr_stbot, stbot_s : std_logic;
	signal extra, set_extra, clr_extra : std_logic;
	
	signal h_wr_sig, state_wr_sig, load_c_sig, ec_sig, dt_sig, eth_sig, etl_sig : std_logic;
	signal msg_wr_sig, sf_sig, smux_sig, dst_write_sig, src_read_sig : std_logic;
begin
	sr_final_segment : sr_reg 
		port map ( rst => rst, clk => clk, set => set_fs, clr => clr_fs, output => fs_true);
		
	sr_stbot : sr_reg 
		port map ( rst => rst, clk => clk, set => set_stbot, clr => clr_stbot, output => stbot_s);
	
	
	sr_init : sr_reg 
		port map ( rst => rst, clk => clk, set => set_init, clr => clr_init, output => init_done);
	
	sr_extra : sr_reg 
		port map ( rst => rst, clk => clk, set => set_extra, clr => clr_extra, output => extra);
	
	round_counter_gen : countern generic map ( N => 8 ) 
		port map ( clk => clk, rst => rst, load => lpc, en => epc, input => log2roundnrzeros, output => pc);
	
	
	cstate_proc : process ( clk )
	begin
		if rising_edge( clk ) then 
			if rst = '1' then
				cs <= reset;
			else
				cs <= nstate;
			end if;	   
		end if;
	end process;
	
	zpc3 <= '1' when pc(3 downto 0) = 3 else '0';
	zpc7 <= '1' when pc(3 downto 0) = 7 else '0';
	zpc15 <= '1' when pc(3 downto 0) = 15 else '0';
	zpcRound <= '1' when pc = roundnr-1 else '0';
	
	nstate_proc : process ( cs, src_ready, dst_ready, zc0, zcRemainder, final_segment, fs_true, zpc3, zpc7, zpc15, zpcRound, init_done, extra )
	begin					  
		if ( cs = reset ) then
			nstate <= wait_for_header1;
		elsif ( cs = wait_for_header1 ) then
			if ( src_ready = '0' and final_segment = '1' ) then
				nstate <= wait_for_header2;
			elsif ( src_ready = '0' and final_segment = '0' ) then
				nstate <= load;
			else
				nstate <= wait_for_header1;
			end if;
		elsif ( cs = wait_for_header2 ) then
			if ( src_ready = '0' ) then
				nstate <= load;
			else
				nstate <= wait_for_header2;
			end if;			
		elsif ( cs = load ) then			
			if ( src_ready = '0' and zpc15 = '1' and init_done = '1') then
				nstate <= finalization;
			elsif ( src_ready = '0' and zpc15 = '1' and init_done = '0') then
				nstate <= initialization;
			else
				nstate <= load;
			end if;
		elsif ( cs = initialization ) then
			if ( zpc3 = '1' ) then
				nstate <= hash;
			else
				nstate <= initialization;
			end if;
		elsif ( cs = finalization ) then
			if ( zpc3 = '1' ) then
				nstate <= hash;				
			else
				nstate <= finalization;
			end if;
		elsif ( cs = hash ) then
			if ( zpcRound = '1' ) then 
				if ( fs_true = '1' and zc0 = '1' and zcRemainder = '0' and extra = '0') then
					nstate <= output_data_stall;
				elsif ( fs_true = '0' and zc0 = '1' ) then
					nstate <= wait_for_header1;
				else
					nstate <= load;
				end if;
			else
				nstate <= hash;
			end if;		  
		elsif ( cs = output_data_stall) then
			if dst_ready = '0' then
				nstate <= output_data;
			else
				nstate <= output_data_stall;
			end if;
		elsif ( cs = output_data ) then
			if ( zpc7 = '1' and dst_ready = '0') then
				nstate <= wait_for_header1;
			else
				nstate <= output_data_stall;
			end if;
        else
          nstate <= cs;
		end if;
	end process;
	
	src_read_sig <= '1' when (src_ready = '0' and ((cs = wait_for_header1) or (cs = wait_for_header2) or (cs = load))) else '0';		
	
	dst_write_sig <= '1' when (cs = output_data and dst_ready = '0') else '0';		
	load_c_sig <= '1' when (cs = wait_for_header1 or cs = wait_for_header2) else '0';
	etl_sig <= '1' when (cs = wait_for_header2) else '0';
	
		
	
	
	set_fs <= '1' when (src_ready = '0' and cs = wait_for_header1 and final_segment = '1') else '0';
	clr_fs <= '1' when (cs = output_data or cs = reset) else '0';					  
		
	ec_sig <= '1' when (cs = load and zc0 = '0' and src_ready = '0' and zpc15 = '1')  else '0';
	eth_sig <= '1' when (cs = load and zc0 = '0'  and src_ready = '0' and zpc15 = '1') else '0';
	dt_sig <= '1' when (cs = output_data or cs = reset or (cs = hash and zpc15 = '1' and stbot_s = '1' and fs_true = '1')) else '0';	   	 
	
	
	msg_wr_sig <= '1' when (cs = load and src_ready = '0') else '0';
	state_wr_sig <= '1' when (cs = initialization or cs = hash or cs = finalization ) else '0';
	h_wr_sig <= '1' when (cs = initialization or cs = finalization ) else '0';
	smux_sig <= '1' when (cs = initialization or cs = finalization or cs = output_data ) else '0';
	sf_sig <= '1' when (cs = initialization) else '0';
	
	set_extra <= '1' when (cs = hash and zpc15 = '1' and stbot_s = '1' and fs_true = '1' and extra_block = '1') else '0';
	clr_extra <= '1' when (cs = load ) else '0';
	
	set_stbot <= '1' when ((cs = load) and zc0 = '1' and zcRemainder = '1' and zpc15 = '1') else '0';	
	clr_stbot <= '1' when (cs = output_data ) else '0';
	
	epc <= '1' when (
		( cs = load and src_ready = '0') or
		( cs =  initialization ) or
		( cs = hash ) or
		( cs = finalization ) or
		( cs = output_data and dst_ready = '0'))
		else '0';
	lpc <= '1' when (
		( cs = load and src_ready = '0' and zpc15 = '1') or
		( cs =  initialization  and zpc3 = '1') or
		( cs = hash  and zpcRound = '1') or
		( cs = finalization  and zpc3 = '1') or
		( cs = output_data and dst_ready = '0' and zpc7 = '1'))
		else '0';
				
	set_init <= '1' when (cs = initialization) else '0';
	clr_init <= '1' when (cs = output_data or cs = reset) else '0';
		
		
	output_reg : process( clk ) 
	begin
		if rising_edge( clk ) then
			stbot <= stbot_s;
			dst_write <= dst_write_sig;						
			eth <= eth_sig;			
			state_wr <= state_wr_sig;
			h_wr <= h_wr_sig;
			
			sf <= sf_sig;			
			dt <= dt_sig;	 			
			ec <= ec_sig;						
		end if;
	end process;	  
	
	smux <= smux_sig;
	msg_wr <= msg_wr_sig;	
	load_c <= load_c_sig;
	etl <= etl_sig; 
	round <= pc;
	src_read <= src_read_sig;

end struct;

library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

use work.sha3_blake_package.ALL;
use work.sha3_pkg.all;

entity blake_datapath is	 	
	generic (	  	   
		w : integer := 32;
		HS : integer := 256);
	port (
		clk : in std_logic;		
		din  : in std_logic_vector(w-1 downto 0);	
		dout : out std_logic_vector(w-1 downto 0);			
		
		round : in std_logic_vector(7 downto 0);				
		msg_wr, state_wr, h_wr : in std_logic;
		sf : in std_logic;
		
		load_c, ec, eth, etl, dt, smux : in std_logic;
		stbot : in std_logic;
		zc0, zcRemainder, extra_block : out std_logic		
	);				  
end blake_datapath;

architecture struct of blake_datapath is   
	constant b : integer := get_b( HS );
	constant log2b			: integer := log2( b );	  
	constant log2bzeros : std_logic_vector(log2b-1 downto 0) := ( others => '0' );
	
	
	type mem_type is array ( 0 to 15 ) of std_logic_vector(w-1 downto 0);
	type permute_type is array (0 to 255) of integer;
	type iv_type is array (0 to 1, 0 to 3 ) of std_logic_vector(w-1 downto 0);
	type state_reg_type is array(0 to 3, 0 to 3) of std_logic_vector(w-1 downto 0);
	type state_addr_type is array ( 0 to 7 ) of integer;										 
	type hram_type is array (0 to 1, 0 to 3) of std_logic_vector(w-1 downto 0);
	
	function get_cons_folded ( h : integer; b : integer ; iw : integer) return mem_type is
		variable const : std_logic_vector(b-1 downto 0);
		variable ret : mem_type;
	begin
		if ( h <= 256 ) then
			const := switch_endian_word(const32,b,iw);
		else 
			const := switch_endian_word(const64,b,iw);
		end if;
		for i in 0 to 15 loop
			ret(15-i) := const(iw*(i+1) - 1 downto iw*i);
		end loop;
		return ret;
	end function get_cons_folded;	  

	function get_const_addr_lookup ( msg_addr_lookup : permute_type ) return permute_type is 
		variable ret : permute_type;
	begin
		for i in 0 to 127 loop
			ret(2*i)   := msg_addr_lookup(2*i+1);
			ret(2*i+1) := msg_addr_lookup(2*i);			
		end loop;
		return ret;
	end function get_const_addr_lookup;
	
	function get_iv_folded ( h : integer; iv : std_logic_vector ) return iv_type is
		variable iw : integer := get_iw( h );
		variable b : integer := get_b( h ) ;
		variable ret : iv_type;
	begin
		for i in 0 to 3 loop
			ret(1,3-i) := iv(iw*(i+1) - 1 downto iw*i);
			ret(0,3-i) := iv(iw*(i+1)+b/4 - 1 downto iw*i+b/4);
		end loop;
		return ret;
	end function get_iv_folded;
	
	function get_constant2 ( h : integer ) return iv_type is	
		variable ret : iv_type;
	begin
		if ( h = 256 ) then
			ret := ((x"243F6A88" , x"85A308D3" , x"13198A2E" , x"03707344" ), 
					(x"A4093822" , x"299F31D0" , x"082EFA98" , x"EC4E6C89" )); 		  
		else
			ret := ((x"243F6A8885A308D3" , x"13198A2E03707344" , x"A4093822299F31D0" , x"082EFA98EC4E6C89") ,
					(x"452821E638D01377" , x"BE5466CF34E90C6C" , x"C0AC29B7C97C50DD" , x"3F84D5B5B5470917"));
		end if;
		return ret;
	end function get_constant2;
		
		
	constant cons_init : iv_type := get_constant2( HS );
	constant cons_rom : mem_type := get_cons_folded(HS,b,w);	
	constant msg_addr_lookup    : permute_type :=  ( 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
													 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,
													 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,
													 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,
													 9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,
													 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,
													 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,
													 13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,
													 6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,
													 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0,
													 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
													 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,
													 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,
													 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,
													 9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,
													 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9);	
	constant const_addr_lookup    : permute_type :=  get_const_addr_lookup( msg_addr_lookup );													 
    constant iv_temp : std_logic_vector(b/2-1 downto 0) := get_iv( HS, w );
	constant iv : iv_type := get_iv_folded( HS, iv_temp );
	
	constant state_addr1_lookup : state_addr_type := (0, 1, 2, 3, 1, 2, 3, 0); 
	constant state_addr2_lookup : state_addr_type := (0, 1, 2, 3, 2, 3, 0, 1);
	constant state_addr3_lookup : state_addr_type := (0, 1, 2, 3, 3, 0, 1, 2);
	
		signal c_s : std_logic_vector(15 downto 0);
		signal t : std_logic_vector(2*w-1 downto 0);
		signal t_in, t_top : std_logic_vector(2*w-log2b-1 downto 0);
		signal t_bot, t_bot_enabled : std_logic_vector(log2b-1 downto 0);
		
		signal msg_raddr, const_raddr : std_logic_vector(3 downto 0);
		signal msg : std_logic_vector(w-1 downto 0);
	    signal cm, const : std_logic_vector(w-1 downto 0);
		signal hin_p4, hin_p0, hout_p4, hout_p0 : std_logic_vector(w-1 downto 0);
		signal iv_addr : std_logic_vector(1 downto 0);
		signal chain_p0, chain_p4 : std_logic_vector(w-1 downto 0);
		signal init_o_p0, init_o_p4, init_o_p8, init_o_p12, t_sel : std_logic_vector(w-1 downto 0);
		
		signal state_in_p0, state_in_p4, state_in_p8, state_in_p12 : std_logic_vector(w-1 downto 0);
		signal gin0, gin1, gin2, gin3, gout0, gout1, gout2, gout3 : std_logic_vector(w-1 downto 0);
		
		type sram_addr_type is array ( 0 to 3 ) of std_logic_vector(1 downto 0);
		signal sram_addr, sram_addr_delayed : sram_addr_type;
		signal sram_addr_lookup : std_logic_vector(2 downto 0);
		signal msg_ram : mem_type;	  
		signal hram : hram_type;	  
		signal state_ram : state_reg_type;	
		
		signal round_delayed : std_logic_vector(2 downto 0);
begin		
	t_in <= conv_std_logic_vector(0,2*w-log2b);		
	decounter_gen : decountern generic map ( N => 16, sub => 1 ) port map ( clk => clk, rst => '0', load => load_c, en => ec, input => din(log2b+15 downto log2b), output => c_s );
	th_gen : countern generic map ( N => 2*w-log2b, step => 1 ) port map ( clk => clk, rst => dt, load => '0', en => eth, input => t_in, output => t_top );
	tl_gen : regn generic map ( N => log2b, init => log2bzeros ) port map ( clk => clk, rst => dt, en => etl, input => din(log2b-1 downto 0), output => t_bot );
	t_bot_enabled <= t_bot when (stbot = '1') else (others => '0');
	t <= t_top & t_bot_enabled;
	zc0 <= '1' when (c_s = 0)  else '0'; 	
	zcRemainder <= '1' when (t_bot /= 0) else '0';
	extra_block <= '1' when (t_bot > b-66) else '0';
	
	
	msg_raddr <= conv_std_logic_vector(msg_addr_lookup( conv_integer(round) ), 4 );
	const_raddr <= conv_std_logic_vector(const_addr_lookup( conv_integer(round) ), 4 );
	
	mram_crom_cm: process( clk )	
	begin
		if rising_edge( clk ) then
			if msg_wr = '1' then
				msg_ram(conv_integer(msg_raddr)) <= din;
			end if;
		end if;	
	end process;	   
	msg <= msg_ram(conv_integer(msg_raddr));
	const <= cons_rom(conv_integer(const_raddr));
	
	
	
	reg: process( clk ) 
	begin
		if rising_edge( clk ) then
			round_delayed <= round(2 downto 0);
			cm <= const xor msg;
		end if;
	end process;
	
	iv_addr <=  round_delayed(1 downto 0);
	hin_p0 <= iv(0,conv_integer(iv_addr)) when sf = '1' else chain_p0;
	hin_p4 <= iv(1,conv_integer(iv_addr)) when sf = '1' else chain_p4;
		
	t_sel <= t(w-1 downto 0) when round_delayed(1) = '0' else t(2*w-1 downto w);	
			 
	init_o_p0 <= hin_p0;
	init_o_p4 <= hin_p4;
	init_o_p8 <= cons_init(0,conv_integer(iv_addr));
	init_o_p12 <= cons_init(1,conv_integer(iv_addr)) xor t_sel;
	
	hreg_gen : process ( clk )
	begin
		if rising_edge( clk ) then
			if h_wr = '1' then
				hram(0,conv_integer(iv_addr)) <= hin_p0;
				hram(1,conv_integer(iv_addr)) <= hin_p4;
			end if;
		end if;		
	end process;	
	hout_p0 <= hram(0,conv_integer(iv_addr));
	hout_p4 <= hram(1,conv_integer(iv_addr));
	
	
		
		
		sram_addr_lookup <= round(3 downto 1) when smux = '0' else '0' & round(1 downto 0);
		sram_addr(0) <= round(2 downto 1) when smux = '0' else round(1 downto 0);
		sram_addr(1) <= conv_std_logic_vector(state_addr1_lookup(conv_integer( sram_addr_lookup ) ), 2);
		sram_addr(2) <= conv_std_logic_vector(state_addr2_lookup(conv_integer( sram_addr_lookup ) ), 2);
		sram_addr(3) <= conv_std_logic_vector(state_addr3_lookup(conv_integer( sram_addr_lookup ) ), 2);
				
		state_reg_gen : process ( clk )		
		begin
			if rising_edge( clk ) then
				if state_wr = '1' then
					state_ram(0,conv_integer(sram_addr_delayed(0))) <= state_in_p0;
					state_ram(1,conv_integer(sram_addr_delayed(1))) <= state_in_p4;
					state_ram(2,conv_integer(sram_addr_delayed(2))) <= state_in_p8;
					state_ram(3,conv_integer(sram_addr_delayed(3))) <= state_in_p12;
				end if;													
				sram_addr_delayed <= sram_addr;									 				
			end if;				
		end process;
		gin0 <= state_ram(0,conv_integer(sram_addr_delayed(0)));
		gin1 <= state_ram(1,conv_integer(sram_addr_delayed(1)));
		gin2 <= state_ram(2,conv_integer(sram_addr_delayed(2)));
		gin3 <= state_ram(3,conv_integer(sram_addr_delayed(3)));		
		
		gfunc_gen : entity work.gfunc_half_modified(struct) 	generic map ( iw => w, h => HS  )
							port map ( ain => gin0, bin => gin1,cin => gin2,din => gin3,
								  const => cm, sel => round_delayed(0),
								  aout => gout0, bout => gout1, cout=> gout2,dout => gout3);
	
		state_in_p0 <= init_o_p0 when h_wr = '1' else gout0;
		state_in_p4 <= init_o_p4 when h_wr = '1' else gout1;
		state_in_p8 <= init_o_p8 when h_wr = '1' else gout2;
		state_in_p12 <= init_o_p12 when h_wr = '1' else gout3;
		
	chain_p0 <= (gin0 xor gin2) xor hout_p0;
	chain_p4 <= (gin1 xor gin3) xor hout_p4;
	
	dout <= chain_p4 when round_delayed(2) = '1' else chain_p0;
	
end struct;




library ieee;
use ieee.std_logic_1164.all; 
use work.sha3_pkg.all;
use work.sha3_blake_package.all;

entity blake_top is		
	generic (		
		VERSION : integer := SHA3_ROUND3;		
		HS : integer := HASH_SIZE_256;
		w : integer := 32
	); 
	port (		
		rst 	: in std_logic;
		clk 	: in std_logic;	
		src_ready : in std_logic;
		src_read  : out std_logic;
		dst_ready : in std_logic;
		dst_write : out std_logic;		
		din		: in std_logic_vector(w-1 downto 0);
		dout	: out std_logic_vector(w-1 downto 0)
	);	   
end blake_top;


architecture structure of blake_top is  
	constant b : integer := get_b( HS );

	signal msg_wr, state_wr, h_wr : std_logic;
	signal sf, load_c, ec, eth, etl, dt : std_logic;
	signal stbot, zc0, zcRemainder, extra_block, smux : std_logic;
	signal round : std_logic_vector(7 downto 0);
begin			   
	control_gen : entity work.blake_control(struct) 
		generic map ( VERSION => VERSION, HS => HS )
		port map (
		rst => rst, clk => clk, 
		src_ready => src_ready, src_read => src_read, dst_ready => dst_ready, dst_write => dst_write,	  
		final_segment => din(w-1),
		round => round, msg_wr => msg_wr, state_wr => state_wr, h_wr => h_wr,
		sf => sf, load_c => load_c, ec => ec, eth => eth, etl => etl, dt => dt, smux => smux,
		stbot => stbot, zc0 => zc0, zcRemainder => zcRemainder, extra_block => extra_block
	);			
	
	datapath_gen : entity work.blake_datapath(struct) 	
		generic map ( W => W, HS => HS )
		port map (
		clk => clk, din => din, dout => dout, 
		round => round, msg_wr => msg_wr, state_wr => state_wr, h_wr => h_wr,
		sf => sf, load_c => load_c, ec => ec, eth => eth, etl => etl, dt => dt, smux => smux,
		stbot => stbot, zc0 => zc0, zcRemainder => zcRemainder, extra_block => extra_block
	);

end structure;
	
	library ieee;

use ieee.std_logic_1164.all;
use work.axi4s_pkg.all;
use work.sha3_pkg.all;
use work.sha3_jh_package.all;
use work.sha3_blake_package.all;

entity crypto_core is
  port(
    clk                  : in  std_logic;
    reset_b              : in  std_logic;
    sel                  : in  std_logic_vector(C_CRYPTO_SEL_WIDTH-1 downto 0);
    ll_rx_port_data      : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    ll_rx_port_src_rdy_n : in  std_logic;
    ll_rx_port_dst_rdy_n : out std_logic;
    ll_rx_port_sof_n     : in  std_logic;
    ll_rx_port_eof_n     : in  std_logic;
    ll_tx_port_data      : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    ll_tx_port_src_rdy_n : out std_logic;
    ll_tx_port_dst_rdy_n : in  std_logic;
    ll_tx_port_sof_n     : out std_logic;
    ll_tx_port_eof_n     : out std_logic);
end crypto_core;

architecture beh of crypto_core is

  component ll_fifo_if is
    port (
      clk     : in std_logic;
      reset_b : in std_logic;

      ll_rx_port_data      : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
      ll_rx_port_src_rdy_n : in  std_logic;
      ll_rx_port_dst_rdy_n : out std_logic;
      ll_rx_port_sof_n     : in  std_logic;
      ll_rx_port_eof_n     : in  std_logic;
      ll_tx_port_data      : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
      ll_tx_port_src_rdy_n : out std_logic;
      ll_tx_port_dst_rdy_n : in  std_logic;
      ll_tx_port_sof_n     : out std_logic;
      ll_tx_port_eof_n     : out std_logic;

      tx_fifo_data  : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
      tx_fifo_we    : out std_logic;
      tx_fifo_full  : in  std_logic;
      rx_fifo_data  : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
      rx_fifo_re    : out std_logic;
      rx_fifo_empty : in  std_logic
      );
  end component;

  component fifo_b16r32w32_negedge is port (
    reset_b    : in  std_logic;
    clk        : in  std_logic;
    write_data : in  std_logic_vector(31 downto 0);
    write      : in  std_logic;
    full       : out std_logic;
    read_data  : out std_logic_vector(31 downto 0);
    read       : in  std_logic;
    empty      : out std_logic
    );
  end component;

  component fifo_b16r32w64_negedge is port (
    reset_b    : in  std_logic;
    clk        : in  std_logic;
    write_data : in  std_logic_vector(63 downto 0);
    write      : in  std_logic;
    full       : out std_logic;
    read_data  : out std_logic_vector(31 downto 0);
    read       : in  std_logic;
    empty      : out std_logic
    );
  end component;

  component fifo_b16r64w32_negedge is port (
    reset_b    : in  std_logic;
    clk        : in  std_logic;
    write_data : in  std_logic_vector(31 downto 0);
    write      : in  std_logic;
    full       : out std_logic;
    read_data  : out std_logic_vector(63 downto 0);
    read       : in  std_logic;
    empty      : out std_logic
    );
  end component;

  component blake_top is
    generic (
      HS : integer := 256;
      w  : integer := 32
      );
    port (
      rst       : in  std_logic;
      clk       : in  std_logic;
      src_ready : in  std_logic;
      src_read  : out std_logic;
      dst_ready : in  std_logic;
      dst_write : out std_logic;
      din       : in  std_logic_vector(31 downto 0);
      dout      : out std_logic_vector(31 downto 0)
      );     
  end component;

  component jh_top is
    port (
      rst       : in  std_logic;
      clk       : in  std_logic;
      src_ready : in  std_logic;
      src_read  : out std_logic;
      dst_ready : in  std_logic;
      dst_write : out std_logic;
      din       : in  std_logic_vector(63 downto 0);
      dout      : out std_logic_vector(63 downto 0)
      );     
  end component;

  signal rst : std_logic;

  signal blake_fifo_in_write_data : std_logic_vector(31 downto 0);
  signal blake_fifo_in_write      : std_logic;
  signal blake_fifo_in_full       : std_logic;
  signal blake_fifo_in_read_data  : std_logic_vector(31 downto 0);
  signal blake_fifo_in_read       : std_logic;
  signal blake_fifo_in_read_i     : std_logic;
  signal blake_fifo_in_empty      : std_logic;

  signal jh_fifo_in_write_data : std_logic_vector(31 downto 0);
  signal jh_fifo_in_write      : std_logic;
  signal jh_fifo_in_full       : std_logic;
  signal jh_fifo_in_read_data  : std_logic_vector(63 downto 0);
  signal jh_fifo_in_read       : std_logic;
  signal jh_fifo_in_read_i     : std_logic;
  signal jh_fifo_in_empty      : std_logic;

  signal blake_fifo_out_write_data     : std_logic_vector(31 downto 0);
  signal blake_fifo_out_write_data_i   : std_logic_vector(31 downto 0);
  signal blake_fifo_out_write_data_reg : std_logic_vector(31 downto 0);
  signal blake_fifo_out_write          : std_logic;
  signal blake_fifo_out_write_i        : std_logic;
  signal blake_fifo_out_write_reg      : std_logic;
  signal blake_fifo_out_full           : std_logic;
  signal blake_fifo_out_read_data      : std_logic_vector(31 downto 0);
  signal blake_fifo_out_read           : std_logic;
  signal blake_fifo_out_empty          : std_logic;

  signal jh_fifo_out_write_data     : std_logic_vector(63 downto 0);
  signal jh_fifo_out_write_data_i   : std_logic_vector(63 downto 0);
  signal jh_fifo_out_write_data_reg : std_logic_vector(63 downto 0);
  signal jh_fifo_out_write          : std_logic;
  signal jh_fifo_out_write_i        : std_logic;
  signal jh_fifo_out_write_reg      : std_logic;
  signal jh_fifo_out_full           : std_logic;
  signal jh_fifo_out_read_data      : std_logic_vector(31 downto 0);
  signal jh_fifo_out_read           : std_logic;
  signal jh_fifo_out_empty          : std_logic;

  signal tx_fifo_data  : std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
  signal tx_fifo_we    : std_logic;
  signal tx_fifo_full  : std_logic;
  signal rx_fifo_data  : std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
  signal rx_fifo_re    : std_logic;
  signal rx_fifo_empty : std_logic;


begin
  rst <= not reset_b;  

  blake_fifo_in_write_data <= tx_fifo_data;
  blake_fifo_in_write      <= tx_fifo_we when ((sel = C_CRYPTO_SEL_BLAKE) or
                                               (sel = "10")) else '0';
  blake_fifo_out_read      <= rx_fifo_re when ((sel = C_CRYPTO_SEL_BLAKE) or
                                               (sel = "10")) else '0';

  jh_fifo_in_write_data <= tx_fifo_data;
  jh_fifo_in_write      <= tx_fifo_we when ((sel = C_CRYPTO_SEL_JH) or
                                            (sel = "11")) else '0';
  jh_fifo_out_read      <= rx_fifo_re when ((sel = C_CRYPTO_SEL_JH) or
                                            (sel = "11")) else '0';

  TX_FIFO_PROC : process (blake_fifo_in_full, blake_fifo_out_empty,
                          blake_fifo_out_read_data, jh_fifo_in_full,
                          jh_fifo_out_empty, jh_fifo_out_read_data, sel)
  begin
    case sel is
      when C_CRYPTO_SEL_BLAKE =>
        tx_fifo_full  <= blake_fifo_in_full;
        rx_fifo_data  <= blake_fifo_out_read_data;
        rx_fifo_empty <= blake_fifo_out_empty;
      when "10" => 
        tx_fifo_full  <= blake_fifo_in_full;
        rx_fifo_data  <= blake_fifo_out_read_data;
        rx_fifo_empty <= blake_fifo_out_empty;        
        
      when C_CRYPTO_SEL_JH =>
        tx_fifo_full  <= jh_fifo_in_full;
        rx_fifo_data  <= jh_fifo_out_read_data;
        rx_fifo_empty <= jh_fifo_out_empty;
      when "11" =>
        tx_fifo_full  <= jh_fifo_in_full;
        rx_fifo_data  <= jh_fifo_out_read_data;
        rx_fifo_empty <= jh_fifo_out_empty;        

      when others =>
        tx_fifo_full  <= '0';
        rx_fifo_data  <= (others => '0');
        rx_fifo_empty <= '0';
    end case;
  end process TX_FIFO_PROC;

  U_bridge : ll_fifo_if port map (
    clk     => clk,
    reset_b => reset_b,

    ll_rx_port_data      => ll_rx_port_data,
    ll_rx_port_src_rdy_n => ll_rx_port_src_rdy_n ,
    ll_rx_port_dst_rdy_n => ll_rx_port_dst_rdy_n ,
    ll_rx_port_sof_n     => ll_rx_port_sof_n ,
    ll_rx_port_eof_n     => ll_rx_port_eof_n ,
    ll_tx_port_data      => ll_tx_port_data,
    ll_tx_port_src_rdy_n => ll_tx_port_src_rdy_n ,
    ll_tx_port_dst_rdy_n => ll_tx_port_dst_rdy_n ,
    ll_tx_port_sof_n     => ll_tx_port_sof_n ,
    ll_tx_port_eof_n     => ll_tx_port_eof_n ,
    tx_fifo_data         => tx_fifo_data,
    tx_fifo_we           => tx_fifo_we,
    tx_fifo_full         => tx_fifo_full,
    rx_fifo_data         => rx_fifo_data,
    rx_fifo_re           => rx_fifo_re,
    rx_fifo_empty        => rx_fifo_empty);       

  U_fifo_blake_in : fifo_b16r32w32_negedge port map(
    reset_b    => reset_b,
    clk        => clk ,
    write_data => blake_fifo_in_write_data,
    write      => blake_fifo_in_write,
    full       => blake_fifo_in_full,
    read_data  => blake_fifo_in_read_data,
    read       => blake_fifo_in_read,
    empty      => blake_fifo_in_empty); 

  U_fifo_blake_out : fifo_b16r32w32_negedge port map(
    reset_b    => reset_b,
    clk        => clk ,
    write_data => blake_fifo_out_write_data,
    write      => blake_fifo_out_write,
    full       => blake_fifo_out_full,
    read_data  => blake_fifo_out_read_data,
    read       => blake_fifo_out_read,
    empty      => blake_fifo_out_empty);      

  U_fifo_jh_in : fifo_b16r64w32_negedge port map(
    reset_b    => reset_b,
    clk        => clk ,
    write_data => jh_fifo_in_write_data,
    write      => jh_fifo_in_write,
    full       => jh_fifo_in_full,
    read_data  => jh_fifo_in_read_data,
    read       => jh_fifo_in_read,
    empty      => jh_fifo_in_empty);    

  U_fifo_jh_out : fifo_b16r32w64_negedge port map(
    reset_b    => reset_b,
    clk        => clk ,
    write_data => jh_fifo_out_write_data,
    write      => jh_fifo_out_write,
    full       => jh_fifo_out_full,
    read_data  => jh_fifo_out_read_data,
    read       => jh_fifo_out_read,
    empty      => jh_fifo_out_empty);     

  blake_fifo_in_read        <= not(blake_fifo_in_empty or blake_fifo_out_full) when (sel = "10") else blake_fifo_in_read_i;
  blake_fifo_out_write_data <= blake_fifo_out_write_data_reg                   when (sel = "10") else blake_fifo_out_write_data_i;
  blake_fifo_out_write      <= blake_fifo_out_write_reg                        when (sel = "10") else blake_fifo_out_write_i;

  BLAKE_FIFO_PASSTHROUGH_PROC : process (clk) is
  begin
    if ((clk'event) and (clk = '1')) then
      if (reset_b = C_RESET_LEVEL) then
        blake_fifo_out_write_data_reg <= (others => '0');
        blake_fifo_out_write_reg      <= '0';
      else
        blake_fifo_out_write_data_reg <= blake_fifo_in_read_data;
        blake_fifo_out_write_reg      <= blake_fifo_in_read;
      end if;
    end if;
  end process BLAKE_FIFO_PASSTHROUGH_PROC;

  U_blake : blake_top
    generic map (
      HS => 256,
      w  => 32
      )    
    port map(
      rst       => rst,
      clk       => clk,
      src_ready => blake_fifo_in_empty ,
      src_read  => blake_fifo_in_read_i ,
      dst_ready => blake_fifo_out_full,
      dst_write => blake_fifo_out_write_i,
      din       => blake_fifo_in_read_data,
      dout      => blake_fifo_out_write_data_i);

  jh_fifo_in_read        <= not(jh_fifo_in_empty or jh_fifo_out_full) when (sel = "11") else jh_fifo_in_read_i;
  jh_fifo_out_write_data <= jh_fifo_out_write_data_reg                when (sel = "11") else jh_fifo_out_write_data_i;
  jh_fifo_out_write      <= jh_fifo_out_write_reg                     when (sel = "11") else jh_fifo_out_write_i;

  JH_FIFO_PASSTHROUGH_PROC : process (clk) is
  begin
    if ((clk'event) and (clk = '1')) then
      if (reset_b = C_RESET_LEVEL) then
        jh_fifo_out_write_data_reg <= (others => '0');
        jh_fifo_out_write_reg      <= '0';
      else
        jh_fifo_out_write_data_reg <= jh_fifo_in_read_data;
        jh_fifo_out_write_reg      <= jh_fifo_in_read;
      end if;
    end if;
  end process JH_FIFO_PASSTHROUGH_PROC;

  U_jh : jh_top
    port map(
      rst       => rst,
      clk       => clk,
      src_ready => jh_fifo_in_empty ,
      src_read  => jh_fifo_in_read_i ,
      dst_ready => jh_fifo_out_full,
      dst_write => jh_fifo_out_write_i,
      din       => jh_fifo_in_read_data,
      dout      => jh_fifo_out_write_data_i);

end beh;
library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

use work.zpu_sic_pkg.all;
use work.axi4s_pkg.all;



entity axi4s_ll_bridge_wrapper_v2 is
  port (
    clk           : in std_logic;
    reset_b       : in std_logic;       
    axi4s_tx_tdata  : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    axi4s_tx_tstrb  : out std_logic_vector(C_DATA_WIDTH_IN_BYTE-1 downto 0);
    axi4s_tx_tkeep  : out std_logic_vector(C_DATA_WIDTH_IN_BYTE-1 downto 0);
    axi4s_tx_tvalid : out std_logic;
    axi4s_tx_tlast  : out std_logic;
    axi4s_tx_tid    : out std_logic_vector(C_TID_WIDTH-1 downto 0);
    axi4s_tx_tdest  : out std_logic_vector(C_TDEST_WIDTH-1 downto 0);
    axi4s_tx_tuser  : out std_logic_vector(C_TUSER_WIDTH-1 downto 0);
    axi4s_tx_tready : in  std_logic;
    axi4s_rx_tdata  : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    axi4s_rx_tstrb  : in  std_logic_vector(C_DATA_WIDTH_IN_BYTE-1 downto 0);
    axi4s_rx_tkeep  : in  std_logic_vector(C_DATA_WIDTH_IN_BYTE-1 downto 0);
    axi4s_rx_tvalid : in  std_logic;
    axi4s_rx_tlast  : in  std_logic;
    axi4s_rx_tid    : in  std_logic_vector(C_TID_WIDTH-1 downto 0);
    axi4s_rx_tdest  : in  std_logic_vector(C_TDEST_WIDTH-1 downto 0);
    axi4s_rx_tuser  : in  std_logic_vector(C_TUSER_WIDTH-1 downto 0);
    axi4s_rx_tready : out std_logic;
    ll_rx_data      : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    ll_rx_sof_n     : out std_logic;
    ll_rx_eof_n     : out std_logic;
    ll_rx_src_rdy_n : out std_logic;
    ll_rx_dst_rdy_n : in  std_logic;
    ll_tx_data      : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    ll_tx_sof_n     : in  std_logic;
    ll_tx_eof_n     : in  std_logic;
    ll_tx_src_rdy_n : in  std_logic;
    ll_tx_dst_rdy_n : out std_logic    
    );
end entity axi4s_ll_bridge_wrapper_v2;


architecture beh of axi4s_ll_bridge_wrapper_v2 is
  signal ll_rx_port    : ll_type;
  signal ll_tx_port    : ll_type;
  
  type LL_TX_FSM_TYPE is (recv_adr, recv_num, recv_tid,
                          send_adr, send_num, send_dat);
  signal ll_tx_fsm_cs, ll_tx_fsm_ns : LL_TX_FSM_TYPE;

  signal ll_tx_port_o   : ll_type;
  signal adr, adr_next  : std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
  signal num, num_next  : std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
  signal tx_len_o, tx_len_next : std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
  signal tx_dst_o, tx_dst_next : std_logic_vector(C_TDEST_WIDTH-1 downto 0);    
  signal tx_dst         : std_logic_vector(C_TDEST_WIDTH-1 downto 0);
  signal tx_src         : std_logic_vector(C_TDEST_WIDTH-1 downto 0);
  signal tx_len         : std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
  signal rx_dst         : std_logic_vector(C_TDEST_WIDTH-1 downto 0);
  signal rx_src         : std_logic_vector(C_TDEST_WIDTH-1 downto 0);
  signal rx_len         : std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
  
  component axi4s_to_ll_bridge
    port (
      clk           : in    std_logic;
      reset_b       : in    std_logic;
      axi4s_tx_tdata  : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
      axi4s_tx_tstrb  : out std_logic_vector(C_DATA_WIDTH_IN_BYTE-1 downto 0);
      axi4s_tx_tkeep  : out std_logic_vector(C_DATA_WIDTH_IN_BYTE-1 downto 0);
      axi4s_tx_tvalid : out std_logic;
      axi4s_tx_tlast  : out std_logic;
      axi4s_tx_tid    : out std_logic_vector(C_TID_WIDTH-1 downto 0);
      axi4s_tx_tdest  : out std_logic_vector(C_TDEST_WIDTH-1 downto 0);
      axi4s_tx_tuser  : out std_logic_vector(C_TUSER_WIDTH-1 downto 0);
      axi4s_tx_tready : in  std_logic;
      axi4s_rx_tdata  : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
      axi4s_rx_tstrb  : in  std_logic_vector(C_DATA_WIDTH_IN_BYTE-1 downto 0);
      axi4s_rx_tkeep  : in  std_logic_vector(C_DATA_WIDTH_IN_BYTE-1 downto 0);
      axi4s_rx_tvalid : in  std_logic;
      axi4s_rx_tlast  : in  std_logic;
      axi4s_rx_tid    : in  std_logic_vector(C_TID_WIDTH-1 downto 0);
      axi4s_rx_tdest  : in  std_logic_vector(C_TDEST_WIDTH-1 downto 0);
      axi4s_rx_tuser  : in  std_logic_vector(C_TUSER_WIDTH-1 downto 0);
      axi4s_rx_tready : out std_logic;
      ll_rx_data      : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
      ll_rx_data_be   : out std_logic_vector(C_SWITCH_WIDTH/8-1 downto 0);
      ll_rx_sof_n     : out std_logic;
      ll_rx_eof_n     : out std_logic;
      ll_rx_src_rdy_n : out std_logic;
      ll_rx_dst_rdy_n : in  std_logic;
      ll_tx_data      : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
      ll_tx_data_be   : in  std_logic_vector(C_SWITCH_WIDTH/8-1 downto 0);
      ll_tx_sof_n     : in  std_logic;
      ll_tx_eof_n     : in  std_logic;
      ll_tx_src_rdy_n : in  std_logic;
      ll_tx_dst_rdy_n : out std_logic;
      rx_dst        : out   std_logic_vector(C_TDEST_WIDTH-1 downto 0);
      rx_src        : out   std_logic_vector(C_TDEST_WIDTH-1 downto 0);
      rx_len        : out   std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
      tx_dst        : in    std_logic_vector(C_TDEST_WIDTH-1 downto 0);
      tx_src        : in    std_logic_vector(C_TDEST_WIDTH-1 downto 0);
      tx_len        : in    std_logic_vector(C_SWITCH_WIDTH-1 downto 0));
  end component;
  
begin
  ll_rx_data      <= ll_rx_port.data;
  ll_rx_sof_n     <= ll_rx_port.sof_n;
  ll_rx_eof_n     <= ll_rx_port.eof_n;
  ll_rx_src_rdy_n <= ll_rx_port.src_rdy_n;
  ll_rx_port.dst_rdy_n <= ll_rx_dst_rdy_n;
  ll_tx_port.data      <= ll_tx_data;
  ll_tx_port.sof_n     <= ll_tx_sof_n;
  ll_tx_port.eof_n     <= ll_tx_eof_n;
  ll_tx_port.src_rdy_n <= ll_tx_src_rdy_n;
  ll_tx_dst_rdy_n <= ll_tx_port.dst_rdy_n;
  
  tx_dst <= tx_dst_o;
  tx_src <= C_AXI4S_CRYPTO_PORT(C_TDEST_WIDTH-1 downto 0);
  tx_len <= tx_len_o;
  
  LL_TX_FSM_PROC : process (clk) is
  begin
    if ((clk'event) and (clk = '1')) then
      if (reset_b = C_RESET_LEVEL) then    
        ll_tx_fsm_cs <= recv_adr;        
        adr          <= (others => '0');        
        num          <= (others => '0');
        tx_len_o     <= (others => '0');
        tx_dst_o     <= (others => '0');
      else
        ll_tx_fsm_cs <= ll_tx_fsm_ns;
        adr          <= adr_next;
        num          <= num_next;
        tx_len_o     <= tx_len_next;
        tx_dst_o     <= tx_dst_next;
      end if;
    end if;
  end process LL_TX_FSM_PROC;

  LL_TX_FSM_LOGIC_PROC : process (adr, ll_tx_fsm_cs, ll_tx_port, ll_tx_port_o,
                                  num, tx_dst_o, tx_len_o) is
  begin
    ll_tx_fsm_ns <= ll_tx_fsm_cs;
    adr_next     <= adr;
    num_next     <= num;
    tx_len_next  <= tx_len_o;
    tx_dst_next  <= tx_dst_o;
    
    case (ll_tx_fsm_cs) is
      when recv_adr =>        
        ll_tx_port_o.sof_n     <= '1';
        ll_tx_port_o.eof_n     <= '1';
        ll_tx_port_o.src_rdy_n <= '1';
        ll_tx_port_o.data      <= (others => '0');
        ll_tx_port.dst_rdy_n   <= '0';
        adr_next               <= ll_tx_port.data;
        tx_len_next            <= (others => '0');
        tx_dst_next            <= (others => '0');
        if ((ll_tx_port.src_rdy_n = '0') and (ll_tx_port.sof_n = '0')) then
          ll_tx_fsm_ns         <= recv_num;
        end if;

      when recv_num =>
        ll_tx_port_o.sof_n     <= '1';
        ll_tx_port_o.eof_n     <= '1';
        ll_tx_port_o.src_rdy_n <= '1';
        ll_tx_port_o.data      <= (others => '0');
        ll_tx_port.dst_rdy_n   <= '0';
        num_next               <= ll_tx_port.data;
        if (ll_tx_port.src_rdy_n = '0') then
          ll_tx_fsm_ns         <= recv_tid;
        end if;

      when recv_tid =>
        ll_tx_port_o.sof_n     <= '1';
        ll_tx_port_o.eof_n     <= '1';
        ll_tx_port_o.src_rdy_n <= '1';
        ll_tx_port_o.data      <= (others => '0');
        ll_tx_port.dst_rdy_n   <= '1';
        tx_dst_next <= tx_dst_lookup(conv_integer(adr(C_AXI4S_ADDR_HIGH-1 downto C_AXI4S_ADDR_LOW)));
        if ((ll_tx_port.src_rdy_n = '0') and (ll_tx_port.eof_n = '0')) then
          tx_len_next          <= conv_std_logic_vector(C_LL_PACKET_OVERHEAD, C_SWITCH_WIDTH);
        else
          tx_len_next          <= num + C_LL_PACKET_OVERHEAD;
        end if;
        if (ll_tx_port.src_rdy_n = '0') then
          ll_tx_fsm_ns         <= send_adr;
        end if;
        
      when send_adr =>
        ll_tx_port_o.sof_n     <= '0';
        ll_tx_port_o.eof_n     <= '1';
        ll_tx_port_o.src_rdy_n <= '0';
        ll_tx_port_o.data      <= adr;
        ll_tx_port.dst_rdy_n   <= '1';
        if (ll_tx_port_o.dst_rdy_n = '0') then
          ll_tx_fsm_ns         <= send_num;
        end if;

      when send_num =>
        ll_tx_port_o.sof_n     <= '1';
        ll_tx_port_o.eof_n     <= '1';
        ll_tx_port_o.src_rdy_n <= '0';
        ll_tx_port_o.data      <= num;
        ll_tx_port.dst_rdy_n   <= '1';
        if (ll_tx_port_o.dst_rdy_n = '0') then
          ll_tx_fsm_ns         <= send_dat;
        end if;

      when send_dat =>
        ll_tx_port_o.sof_n     <= '1';
        ll_tx_port_o.eof_n     <= ll_tx_port.eof_n;
        ll_tx_port_o.src_rdy_n <= ll_tx_port.src_rdy_n;
        ll_tx_port_o.data      <= ll_tx_port.data;
        ll_tx_port.dst_rdy_n   <= ll_tx_port_o.dst_rdy_n;
        if ((ll_tx_port.src_rdy_n = '0') and (ll_tx_port.eof_n = '0') and
            (ll_tx_port_o.dst_rdy_n = '0')) then
          ll_tx_fsm_ns         <= recv_adr;
        end if;

      when others => 
        ll_tx_port_o.sof_n     <= '1';
        ll_tx_port_o.eof_n     <= '1';
        ll_tx_port_o.src_rdy_n <= '1';
        ll_tx_port_o.data      <= (others => '0');
        ll_tx_port.dst_rdy_n   <= '1';
        ll_tx_fsm_ns           <= recv_adr;
    end case;
  end process LL_TX_FSM_LOGIC_PROC;
        
  axi4s_to_ll_bridge_1: axi4s_to_ll_bridge
    port map (
      clk           => clk,
      reset_b       => reset_b,
      axi4s_tx_tdata  => axi4s_tx_tdata , 
      axi4s_tx_tstrb  => axi4s_tx_tstrb , 
      axi4s_tx_tkeep  => axi4s_tx_tkeep , 
      axi4s_tx_tvalid => axi4s_tx_tvalid, 
      axi4s_tx_tlast  => axi4s_tx_tlast , 
      axi4s_tx_tid    => axi4s_tx_tid   , 
      axi4s_tx_tdest  => axi4s_tx_tdest , 
      axi4s_tx_tuser  => axi4s_tx_tuser , 
      axi4s_tx_tready => axi4s_tx_tready, 
      axi4s_rx_tdata  => axi4s_rx_tdata , 
      axi4s_rx_tstrb  => axi4s_rx_tstrb , 
      axi4s_rx_tkeep  => axi4s_rx_tkeep , 
      axi4s_rx_tvalid => axi4s_rx_tvalid, 
      axi4s_rx_tlast  => axi4s_rx_tlast , 
      axi4s_rx_tid    => axi4s_rx_tid   , 
      axi4s_rx_tdest  => axi4s_rx_tdest , 
      axi4s_rx_tuser  => axi4s_rx_tuser , 
      axi4s_rx_tready => axi4s_rx_tready,
      ll_rx_data      => ll_rx_port.data,
      ll_rx_data_be   => open,
      ll_rx_sof_n     => ll_rx_port.sof_n,
      ll_rx_eof_n     => ll_rx_port.eof_n,
      ll_rx_src_rdy_n => ll_rx_port.src_rdy_n,
      ll_rx_dst_rdy_n => ll_rx_port.dst_rdy_n,
      ll_tx_data      => ll_tx_port_o.data,
      ll_tx_data_be   => (others => '1'),
      ll_tx_sof_n     => ll_tx_port_o.sof_n,
      ll_tx_eof_n     => ll_tx_port_o.eof_n,
      ll_tx_src_rdy_n => ll_tx_port_o.src_rdy_n,
      ll_tx_dst_rdy_n => ll_tx_port_o.dst_rdy_n,
      rx_dst        => rx_dst,
      rx_src        => rx_src,
      rx_len        => rx_len,
      tx_dst        => tx_dst,
      tx_src        => tx_src,
      tx_len        => tx_len
   );
end beh;
library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

use work.axi4s_pkg.all;
use work.axi4s_switch_pkg.all;

entity axi4s_fifo is
  port (

    FIFO_IN_TDATA   : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    FIFO_IN_TSTRB   : in  std_logic_vector(C_DATA_WIDTH_IN_BYTE-1 downto 0);
    FIFO_IN_TKEEP   : in  std_logic_vector(C_DATA_WIDTH_IN_BYTE-1 downto 0);
    FIFO_IN_TVALID  : in  std_logic;
    FIFO_IN_TLAST   : in  std_logic;
    FIFO_IN_TID     : in  std_logic_vector(C_TID_WIDTH-1 downto 0);
    FIFO_IN_TDEST   : in  std_logic_vector(C_TDEST_WIDTH-1 downto 0);
    FIFO_IN_TUSER   : in  std_logic_vector(C_TUSER_WIDTH-1 downto 0);
    FIFO_IN_TREADY  : out std_logic;
    FIFO_OUT_TDATA  : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    FIFO_OUT_TSTRB  : out std_logic_vector(C_DATA_WIDTH_IN_BYTE-1 downto 0);
    FIFO_OUT_TKEEP  : out std_logic_vector(C_DATA_WIDTH_IN_BYTE-1 downto 0);
    FIFO_OUT_TVALID : out std_logic;
    FIFO_OUT_TLAST  : out std_logic;
    FIFO_OUT_TID    : out std_logic_vector(C_TID_WIDTH-1 downto 0);
    FIFO_OUT_TDEST  : out std_logic_vector(C_TDEST_WIDTH-1 downto 0);
    FIFO_OUT_TUSER  : out std_logic_vector(C_TUSER_WIDTH-1 downto 0);
    FIFO_OUT_TREADY : in  std_logic;

    rst : in std_logic;
    clk : in std_logic

    ) ;

end entity axi4s_fifo;

architecture beh of axi4s_fifo is
  
  constant FIFO_WIDTH : natural := C_SWITCH_WIDTH +
                                   C_DATA_WIDTH_IN_BYTE +
                                   C_DATA_WIDTH_IN_BYTE +
                                   1 +
                                   C_TID_WIDTH +
                                   C_TDEST_WIDTH +
                                   C_TUSER_WIDTH;

  signal fifo_din   : std_logic_vector(FIFO_WIDTH-1 downto 0);
  signal fifo_dout  : std_logic_vector(FIFO_WIDTH-1 downto 0);
  signal fifo_wr_en : std_logic;
  signal fifo_rd_en : std_logic;
  signal fifo_valid : std_logic;
  signal fifo_empty : std_logic;
  signal fifo_full  : std_logic;

  component generic_fifo_53 is
    generic (
      DATA_WIDTH  : natural := 53;
      NUM_ELEMENT : natural :=  8
      ) ;
    port (
      clk : in std_logic;
      rst : in std_logic;

      din   : in  std_logic_vector(DATA_WIDTH-1 downto 0);
      dout  : out std_logic_vector(DATA_WIDTH-1 downto 0);
      wr_en : in  std_logic;
      rd_en : in  std_logic;
      valid : out std_logic;
      empty : out std_logic;
      full  : out std_logic);
  end component generic_fifo_53;
  
begin

  fifo_din <= FIFO_IN_TDATA &
              FIFO_IN_TSTRB &
              FIFO_IN_TKEEP &
              FIFO_IN_TLAST &
              FIFO_IN_TID &
              FIFO_IN_TDEST &
              FIFO_IN_TUSER;

  FIFO_OUT_TDATA <= fifo_dout(FIFO_WIDTH-1 downto
                              FIFO_WIDTH-C_SWITCH_WIDTH) ;
  FIFO_OUT_TSTRB <= fifo_dout(FIFO_WIDTH-C_SWITCH_WIDTH-1 downto
                              FIFO_WIDTH-C_SWITCH_WIDTH-
                              C_DATA_WIDTH_IN_BYTE) ;
  FIFO_OUT_TKEEP <= fifo_dout(FIFO_WIDTH-C_SWITCH_WIDTH-
                              C_DATA_WIDTH_IN_BYTE-1 downto
                              FIFO_WIDTH-C_SWITCH_WIDTH-
                              C_DATA_WIDTH_IN_BYTE*2) ;
  FIFO_OUT_TLAST <= fifo_dout(C_TUSER_WIDTH+C_TDEST_WIDTH+C_TID_WIDTH);
  FIFO_OUT_TID <= fifo_dout(C_TUSER_WIDTH+C_TDEST_WIDTH+C_TID_WIDTH-1 downto
                              C_TUSER_WIDTH+C_TDEST_WIDTH) ;
  FIFO_OUT_TDEST <= fifo_dout(C_TUSER_WIDTH+C_TDEST_WIDTH-1 downto
                              C_TUSER_WIDTH) ;
  FIFO_OUT_TUSER <= fifo_dout(C_TUSER_WIDTH-1 downto 0);


  fifo_wr_en      <= FIFO_IN_TVALID;
  fifo_rd_en      <= FIFO_OUT_TREADY;
  FIFO_IN_TREADY  <= not (fifo_full);
  FIFO_OUT_TVALID <= fifo_valid;


  fifo_i : generic_fifo_53
    generic map (
      DATA_WIDTH => FIFO_WIDTH,      
      NUM_ELEMENT => 4
    )
    port map (
      clk => clk,
      rst => rst,
      din   => fifo_din,
      wr_en => fifo_wr_en,
      rd_en => fifo_rd_en,
      dout  => fifo_dout,
      empty => fifo_empty,
      full  => fifo_full,      
      valid => fifo_valid);

end architecture beh;




library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

use work.axi4s_pkg.all;
use work.perf_mon_pkg.all;

entity perf_mon_if is
  port (
    clk                       : in  std_logic;
    reset_b                   : in  std_logic;
    ll_sic_rx_port_data       : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    ll_sic_rx_port_src_rdy_n  : in  std_logic;
    ll_sic_rx_port_dst_rdy_n  : out std_logic;
    ll_sic_rx_port_sof_n      : in  std_logic;
    ll_sic_rx_port_eof_n      : in  std_logic;
    ll_sic_tx_port_data       : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    ll_sic_tx_port_src_rdy_n  : out std_logic;
    ll_sic_tx_port_dst_rdy_n  : in  std_logic;
    ll_sic_tx_port_sof_n      : out std_logic;
    ll_sic_tx_port_eof_n      : out std_logic;
    ll_perf_rx_port_data      : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    ll_perf_rx_port_src_rdy_n : in  std_logic;
    ll_perf_rx_port_dst_rdy_n : out std_logic;
    ll_perf_rx_port_sof_n     : in  std_logic;
    ll_perf_rx_port_eof_n     : in  std_logic;
    ll_perf_tx_port_data      : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    ll_perf_tx_port_src_rdy_n : out std_logic;
    ll_perf_tx_port_dst_rdy_n : in  std_logic;
    ll_perf_tx_port_sof_n     : out std_logic;
    ll_perf_tx_port_eof_n     : out std_logic
    );
end entity perf_mon_if;

architecture BEH of perf_mon_if is
  constant C_TX_FIFO_NUM_ELEMENTS : integer := 16;  
  constant C_RX_FIFO_NUM_ELEMENTS : integer := 16;  

  signal rst           : std_logic;
  signal tx_fifo_data  : std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
  signal tx_fifo_we    : std_logic;
  signal tx_fifo_full  : std_logic;
  signal tx_fifo_dout  : std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
  signal tx_fifo_re    : std_logic;
  signal tx_fifo_valid : std_logic;
  signal tx_fifo_empty : std_logic;
  signal rx_fifo_data  : std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
  signal rx_fifo_we    : std_logic;
  signal rx_fifo_full  : std_logic;
  signal rx_fifo_din   : std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
  signal rx_fifo_re    : std_logic;
  signal rx_fifo_valid : std_logic;
  signal rx_fifo_empty : std_logic;

  component perf_ll_fifo_if
    port (
      clk                  : in  std_logic;
      reset_b              : in  std_logic;
      ll_rx_port_data      : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
      ll_rx_port_src_rdy_n : in  std_logic;
      ll_rx_port_dst_rdy_n : out std_logic;
      ll_rx_port_sof_n     : in  std_logic;
      ll_rx_port_eof_n     : in  std_logic;
      ll_tx_port_data      : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
      ll_tx_port_src_rdy_n : out std_logic;
      ll_tx_port_dst_rdy_n : in  std_logic;
      ll_tx_port_sof_n     : out std_logic;
      ll_tx_port_eof_n     : out std_logic;
      tx_fifo_data         : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
      tx_fifo_we           : out std_logic;
      tx_fifo_full         : in  std_logic;
      rx_fifo_data         : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
      rx_fifo_re           : out std_logic;
      rx_fifo_empty        : in  std_logic);
  end component;

  component generic_fifo
    generic (
      DATA_WIDTH  : natural;
      NUM_ELEMENT : natural);
    port (
      clk   : in  std_logic;
      rst   : in  std_logic;
      din   : in  std_logic_vector(DATA_WIDTH-1 downto 0);
      dout  : out std_logic_vector(DATA_WIDTH-1 downto 0);
      wr_en : in  std_logic;
      rd_en : in  std_logic;
      valid : out std_logic;
      empty : out std_logic;
      full  : out std_logic);
  end component;

begin
  rst <= not(reset_b);

  ll_perf_tx_port_data      <= tx_fifo_dout;
  ll_perf_tx_port_sof_n     <= not(tx_fifo_valid);
  ll_perf_tx_port_eof_n     <= not(tx_fifo_valid);
  ll_perf_tx_port_src_rdy_n <= not(tx_fifo_valid);
  tx_fifo_re                <= not(ll_perf_tx_port_dst_rdy_n);
  rx_fifo_din               <= ll_perf_rx_port_data;
  rx_fifo_we                <= not(rx_fifo_full or ll_perf_rx_port_src_rdy_n);
  ll_perf_rx_port_dst_rdy_n <= rx_fifo_full;

  rx_fifo_empty <= not(rx_fifo_valid);
  
  perf_ll_fifo_if_i : perf_ll_fifo_if
    port map (
      clk                  => clk,
      reset_b              => reset_b,
      ll_rx_port_data      => ll_sic_rx_port_data,
      ll_rx_port_src_rdy_n => ll_sic_rx_port_src_rdy_n,
      ll_rx_port_dst_rdy_n => ll_sic_rx_port_dst_rdy_n,
      ll_rx_port_sof_n     => ll_sic_rx_port_sof_n,
      ll_rx_port_eof_n     => ll_sic_rx_port_eof_n,
      ll_tx_port_data      => ll_sic_tx_port_data,
      ll_tx_port_src_rdy_n => ll_sic_tx_port_src_rdy_n,
      ll_tx_port_dst_rdy_n => ll_sic_tx_port_dst_rdy_n,
      ll_tx_port_sof_n     => ll_sic_tx_port_sof_n,
      ll_tx_port_eof_n     => ll_sic_tx_port_eof_n,
      tx_fifo_data         => tx_fifo_data,
      tx_fifo_we           => tx_fifo_we,
      tx_fifo_full         => tx_fifo_full,
      rx_fifo_data         => rx_fifo_data,
      rx_fifo_re           => rx_fifo_re,
      rx_fifo_empty        => rx_fifo_empty);

  tx_fifo_i : generic_fifo
    generic map (
      DATA_WIDTH  => C_SWITCH_WIDTH,
      NUM_ELEMENT => C_TX_FIFO_NUM_ELEMENTS)      
    port map (
      clk   => clk,
      rst   => rst,
      dout  => tx_fifo_dout,
      rd_en => tx_fifo_re,
      valid => tx_fifo_valid,
      empty => tx_fifo_empty,
      din   => tx_fifo_data,
      wr_en => tx_fifo_we,
      full  => tx_fifo_full); 
  
  rx_fifo_i : generic_fifo
    generic map (
      DATA_WIDTH  => C_SWITCH_WIDTH,
      NUM_ELEMENT => C_RX_FIFO_NUM_ELEMENTS)
    port map (
      clk   => clk,
      rst   => rst,
      dout  => rx_fifo_data,
      rd_en => rx_fifo_re,
      din   => rx_fifo_din,
      wr_en => rx_fifo_we,
      valid => rx_fifo_valid,
      full  => rx_fifo_full);
  
end BEH;
library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

use work.axi4s_pkg.all;
use work.perf_mon_pkg.all;






entity arm_perf_mon is
  generic (
    C_LL_DWIDTH : in integer := 32
    );
  port (
    clk             : in  std_logic;
    reset_b         : in  std_logic;
    cpuwait         : in  std_logic;
    ll_rx_sof_n     : in  std_logic;
    ll_rx_eof_n     : in  std_logic;
    ll_rx_src_rdy_n : in  std_logic;
    ll_rx_dst_rdy_n : out std_logic;
    ll_rx_data      : in  std_logic_vector(C_LL_DWIDTH-1 downto 0);
    ll_tx_sof_n     : out std_logic;
    ll_tx_eof_n     : out std_logic;
    ll_tx_src_rdy_n : out std_logic;
    ll_tx_dst_rdy_n : in  std_logic;
    ll_tx_data      : out std_logic_vector(C_LL_DWIDTH-1 downto 0)
    );
end arm_perf_mon;

architecture IMP of arm_perf_mon is
  constant C_RUN_TIMER_NUM_WORDS  : integer := 2;
  constant C_WAIT_TIMER_NUM_WORDS : integer := 2;
  constant C_NUM_MON_WORDS        : integer := C_RUN_TIMER_NUM_WORDS +
                                               C_WAIT_TIMER_NUM_WORDS;
  type   FSM_TYPE is (wait_for_cmd, send_size, send_perf, reset_perf, done);
  signal fsm_cs, fsm_ns  : FSM_TYPE;
  signal perf_cmd        : std_logic_vector(C_CMD_WIDTH-1 downto 0);
  signal perf_cmd_next   : std_logic_vector(C_CMD_WIDTH-1 downto 0);
  signal word_count      : integer;
  signal word_count_next : integer;
  signal perf_dout       : std_logic_vector(C_LL_DWIDTH-1 downto 0);
  signal run_timer       : std_logic_vector(C_TIMER_DWIDTH-1 downto 0);
  signal wait_timer      : std_logic_vector(C_TIMER_DWIDTH-1 downto 0);

begin
  UTILIZATION_TIMER_PROC : process (clk) is
  begin
    if ((clk = '1') and (clk'event)) then
      if ((reset_b = C_RESET_LEVEL) or (perf_cmd = C_CMD_RST_PERF)) then
        run_timer  <= (others => '0');
        wait_timer <= (others => '0');
      elsif ((cpuwait = '1') and (perf_cmd = C_CMD_ENA_PERF)) then
        run_timer <= run_timer + 1;
      elsif ((cpuwait = '0') and (perf_cmd = C_CMD_ENA_PERF)) then
        wait_timer <= wait_timer + 1;
      end if;
    end if;
  end process UTILIZATION_TIMER_PROC;

  PERF_DATA_OUT_PROC : process (run_timer, wait_timer, word_count) is
  begin
    perf_dout     <= (others => '0');    
    case (word_count) is
      when 0      => perf_dout(C_TIMER_DWIDTH-C_LL_DWIDTH-1 downto 0) <= run_timer(C_TIMER_DWIDTH-1 downto C_LL_DWIDTH);
      when 1      => perf_dout <= run_timer(C_LL_DWIDTH-1 downto 0);
      when 2      => perf_dout(C_TIMER_DWIDTH-C_LL_DWIDTH-1 downto 0) <= wait_timer(C_TIMER_DWIDTH-1 downto C_LL_DWIDTH);
      when 3      => perf_dout <= wait_timer(C_LL_DWIDTH-1 downto 0);
      when others => perf_dout <= (others => '0');
    end case;
  end process PERF_DATA_OUT_PROC;

  FSM_STATE_PROC : process (clk) is
  begin
    if ((clk'event) and (clk = '1')) then
      if (reset_b = C_RESET_LEVEL) then
        fsm_cs     <= wait_for_cmd;
        perf_cmd   <= (others => '0');
        word_count <= 0;
      else
        fsm_cs     <= fsm_ns;
        perf_cmd   <= perf_cmd_next;
        word_count <= word_count_next;
      end if;
    end if;
  end process FSM_STATE_PROC;

  FSM_LOGIC_PROC : process (fsm_cs, ll_rx_data, ll_rx_sof_n, ll_rx_src_rdy_n,
                            ll_tx_dst_rdy_n, perf_cmd, perf_dout, word_count) is
  begin
    fsm_ns          <= fsm_cs;
    perf_cmd_next   <= perf_cmd;
    word_count_next <= word_count;

    case (fsm_cs) is
      when wait_for_cmd =>
        ll_rx_dst_rdy_n <= '0';
        ll_tx_sof_n     <= '1';
        ll_tx_eof_n     <= '1';
        ll_tx_src_rdy_n <= '1';
        ll_tx_data      <= (others => '0');
        word_count_next <= 0;
        if ((ll_rx_src_rdy_n = '0') and (ll_rx_sof_n = '0')) then
          case (conv_integer(ll_rx_data(3 downto 0))) is
            when C_CMD_GET_PERF => fsm_ns        <= send_size;
            when C_CMD_RST_PERF => perf_cmd_next <= conv_std_logic_vector(C_CMD_RST_PERF, C_CMD_WIDTH);
                                   fsm_ns <= reset_perf;
            when C_CMD_ENA_PERF => perf_cmd_next <= conv_std_logic_vector(C_CMD_ENA_PERF, C_CMD_WIDTH);
                                   fsm_ns <= done;
            when C_CMD_DIS_PERF => perf_cmd_next <= conv_std_logic_vector(C_CMD_DIS_PERF, C_CMD_WIDTH);
                                   fsm_ns <= done;
            when others => fsm_ns <= wait_for_cmd;
          end case;
        end if;

      when send_size =>
        ll_rx_dst_rdy_n <= '1';
        ll_tx_sof_n     <= ll_tx_dst_rdy_n;
        ll_tx_eof_n     <= '1';
        ll_tx_src_rdy_n <= ll_tx_dst_rdy_n;
        ll_tx_data      <= conv_std_logic_vector(C_NUM_MON_WORDS, 32);
        if (ll_tx_dst_rdy_n = '0') then
          fsm_ns <= send_perf;
        end if;

      when send_perf =>
        ll_rx_dst_rdy_n <= '1';
        ll_tx_sof_n     <= '1';
        ll_tx_src_rdy_n <= '0';
        ll_tx_data      <= perf_dout;
        if ((ll_tx_dst_rdy_n = '0') and (word_count = C_NUM_MON_WORDS-1)) then
          ll_tx_eof_n <= '0';
          fsm_ns      <= done;
        elsif (ll_tx_dst_rdy_n = '0') then
          word_count_next <= word_count + 1;
          ll_tx_eof_n     <= '1';
          fsm_ns          <= send_perf;
        else
          ll_tx_eof_n <= '1';
          fsm_ns      <= send_perf;
        end if;

      when reset_perf =>
        ll_rx_dst_rdy_n <= '1';
        ll_tx_sof_n     <= '1';
        ll_tx_eof_n     <= '1';
        ll_tx_src_rdy_n <= '1';
        ll_tx_data      <= (others => '0');
        perf_cmd_next   <= (others => '0');
        word_count_next <= 0;
        fsm_ns          <= done;

      when done =>
        ll_rx_dst_rdy_n <= '1';
        ll_tx_sof_n     <= '1';
        ll_tx_eof_n     <= '1';
        ll_tx_src_rdy_n <= '1';
        ll_tx_data      <= (others => '0');
        fsm_ns          <= wait_for_cmd;

      when others =>
        ll_rx_dst_rdy_n <= '1';
        ll_tx_sof_n     <= '1';
        ll_tx_eof_n     <= '1';
        ll_tx_src_rdy_n <= '1';
        ll_tx_data      <= (others => '0');
        fsm_ns          <= wait_for_cmd;
    end case;
  end process FSM_LOGIC_PROC;

end IMP;
library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

use work.axi4s_pkg.all;
use work.perf_mon_pkg.all;

entity performance_monitors_core is
  port (
    clk                      : in  std_logic;
    reset_b                  : in  std_logic;
    zpu_cpuwait              : in  std_logic;
    zpu_pc                   : in  std_logic_vector(31 downto 0);
    zpu_inst                 : in  std_logic_vector(31 downto 0);
    arm_cpuwait            : in  std_logic;
    ll_sic_rx_port_data      : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    ll_sic_rx_port_src_rdy_n : in  std_logic;
    ll_sic_rx_port_dst_rdy_n : out std_logic;
    ll_sic_rx_port_sof_n     : in  std_logic;
    ll_sic_rx_port_eof_n     : in  std_logic;
    ll_sic_tx_port_data      : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
    ll_sic_tx_port_src_rdy_n : out std_logic;
    ll_sic_tx_port_dst_rdy_n : in  std_logic;
    ll_sic_tx_port_sof_n     : out std_logic;
    ll_sic_tx_port_eof_n     : out std_logic
    );
end entity performance_monitors_core;


architecture beh of performance_monitors_core is
  constant NUM_PORTS                 : integer := 2;
  signal   ll_zpu_rx_sof_n           : std_logic;
  signal   ll_zpu_rx_eof_n           : std_logic;
  signal   ll_zpu_rx_src_rdy_n       : std_logic;
  signal   ll_zpu_rx_dst_rdy_n       : std_logic;
  signal   ll_zpu_rx_data            : std_logic_vector(31 downto 0);
  signal   ll_zpu_tx_sof_n           : std_logic;
  signal   ll_zpu_tx_eof_n           : std_logic;
  signal   ll_zpu_tx_src_rdy_n       : std_logic;
  signal   ll_zpu_tx_dst_rdy_n       : std_logic;
  signal   ll_zpu_tx_data            : std_logic_vector(31 downto 0);
  signal   ll_arm_rx_sof_n           : std_logic;
  signal   ll_arm_rx_eof_n           : std_logic;
  signal   ll_arm_rx_src_rdy_n       : std_logic;
  signal   ll_arm_rx_dst_rdy_n       : std_logic;
  signal   ll_arm_rx_data            : std_logic_vector(31 downto 0);
  signal   ll_arm_tx_sof_n           : std_logic;
  signal   ll_arm_tx_eof_n           : std_logic;
  signal   ll_arm_tx_src_rdy_n       : std_logic;
  signal   ll_arm_tx_dst_rdy_n       : std_logic;
  signal   ll_arm_tx_data            : std_logic_vector(31 downto 0);
  signal   ll_perf_rx_port_data      : std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
  signal   ll_perf_rx_port_src_rdy_n : std_logic;
  signal   ll_perf_rx_port_dst_rdy_n : std_logic;
  signal   ll_perf_rx_port_sof_n     : std_logic;
  signal   ll_perf_rx_port_eof_n     : std_logic;
  signal   ll_perf_tx_port_data      : std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
  signal   ll_perf_tx_port_src_rdy_n : std_logic;
  signal   ll_perf_tx_port_dst_rdy_n : std_logic;
  signal   ll_perf_tx_port_sof_n     : std_logic;
  signal   ll_perf_tx_port_eof_n     : std_logic;


  component perf_mon_if
    port (
      clk                       : in  std_logic;
      reset_b                   : in  std_logic;
      ll_sic_rx_port_data       : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
      ll_sic_rx_port_src_rdy_n  : in  std_logic;
      ll_sic_rx_port_dst_rdy_n  : out std_logic;
      ll_sic_rx_port_sof_n      : in  std_logic;
      ll_sic_rx_port_eof_n      : in  std_logic;
      ll_sic_tx_port_data       : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
      ll_sic_tx_port_src_rdy_n  : out std_logic;
      ll_sic_tx_port_dst_rdy_n  : in  std_logic;
      ll_sic_tx_port_sof_n      : out std_logic;
      ll_sic_tx_port_eof_n      : out std_logic;
      ll_perf_rx_port_data      : in  std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
      ll_perf_rx_port_src_rdy_n : in  std_logic;
      ll_perf_rx_port_dst_rdy_n : out std_logic;
      ll_perf_rx_port_sof_n     : in  std_logic;
      ll_perf_rx_port_eof_n     : in  std_logic;
      ll_perf_tx_port_data      : out std_logic_vector(C_SWITCH_WIDTH-1 downto 0);
      ll_perf_tx_port_src_rdy_n : out std_logic;
      ll_perf_tx_port_dst_rdy_n : in  std_logic;
      ll_perf_tx_port_sof_n     : out std_logic;
      ll_perf_tx_port_eof_n     : out std_logic);
  end component;

  component performance_monitors_hub
    generic (
      NUM_PORTS : integer := NUM_PORTS);
    port (
      clk             : in  std_logic;
      reset_b         : in  std_logic;
      ll_rx_sof_n     : in  std_logic                     := '1';
      ll_rx_eof_n     : in  std_logic                     := '1';
      ll_rx_src_rdy_n : in  std_logic                     := '1';
      ll_rx_dst_rdy_n : out std_logic                     := '1';
      ll_rx_data      : in  std_logic_vector(31 downto 0) := (others => '0');
      ll_tx_sof_n     : out std_logic                     := '1';
      ll_tx_eof_n     : out std_logic                     := '1';
      ll_tx_src_rdy_n : out std_logic                     := '1';
      ll_tx_dst_rdy_n : in  std_logic                     := '1';
      ll_tx_data      : out std_logic_vector(31 downto 0) := (others => '0');
      p0_rx_sof_n     : in  std_logic                     := '1';
      p0_rx_eof_n     : in  std_logic                     := '1';
      p0_rx_src_rdy_n : in  std_logic                     := '1';
      p0_rx_dst_rdy_n : out std_logic                     := '1';
      p0_rx_data      : in  std_logic_vector(31 downto 0) := (others => '0');
      p0_tx_sof_n     : out std_logic                     := '1';
      p0_tx_eof_n     : out std_logic                     := '1';
      p0_tx_src_rdy_n : out std_logic                     := '1';
      p0_tx_dst_rdy_n : in  std_logic                     := '1';
      p0_tx_data      : out std_logic_vector(31 downto 0) := (others => '0');
      p1_rx_sof_n     : in  std_logic                     := '1';
      p1_rx_eof_n     : in  std_logic                     := '1';
      p1_rx_src_rdy_n : in  std_logic                     := '1';
      p1_rx_dst_rdy_n : out std_logic                     := '1';
      p1_rx_data      : in  std_logic_vector(31 downto 0) := (others => '0');
      p1_tx_sof_n     : out std_logic                     := '1';
      p1_tx_eof_n     : out std_logic                     := '1';
      p1_tx_src_rdy_n : out std_logic                     := '1';
      p1_tx_dst_rdy_n : in  std_logic                     := '1';
      p1_tx_data      : out std_logic_vector(31 downto 0) := (others => '0');
      p2_rx_sof_n     : in  std_logic                     := '1';
      p2_rx_eof_n     : in  std_logic                     := '1';
      p2_rx_src_rdy_n : in  std_logic                     := '1';
      p2_rx_dst_rdy_n : out std_logic                     := '1';
      p2_rx_data      : in  std_logic_vector(31 downto 0) := (others => '0');
      p2_tx_sof_n     : out std_logic                     := '1';
      p2_tx_eof_n     : out std_logic                     := '1';
      p2_tx_src_rdy_n : out std_logic                     := '1';
      p2_tx_dst_rdy_n : in  std_logic                     := '1';
      p2_tx_data      : out std_logic_vector(31 downto 0) := (others => '0'));
  end component;

  component zpu_perf_mon
    port (
      clk             : in  std_logic;
      reset_b         : in  std_logic;
      cpuwait         : in  std_logic;
      pc              : in  std_logic_vector(31 downto 0);
      inst            : in  std_logic_vector(31 downto 0);
      ll_rx_sof_n     : in  std_logic;
      ll_rx_eof_n     : in  std_logic;
      ll_rx_src_rdy_n : in  std_logic;
      ll_rx_dst_rdy_n : out std_logic;
      ll_rx_data      : in  std_logic_vector(31 downto 0);
      ll_tx_sof_n     : out std_logic;
      ll_tx_eof_n     : out std_logic;
      ll_tx_src_rdy_n : out std_logic;
      ll_tx_dst_rdy_n : in  std_logic;
      ll_tx_data      : out std_logic_vector(31 downto 0));
  end component;

  component arm_perf_mon
    port (
      clk             : in  std_logic;
      reset_b         : in  std_logic;
      cpuwait         : in  std_logic;
      ll_rx_sof_n     : in  std_logic;
      ll_rx_eof_n     : in  std_logic;
      ll_rx_src_rdy_n : in  std_logic;
      ll_rx_dst_rdy_n : out std_logic;
      ll_rx_data      : in  std_logic_vector(31 downto 0);
      ll_tx_sof_n     : out std_logic;
      ll_tx_eof_n     : out std_logic;
      ll_tx_src_rdy_n : out std_logic;
      ll_tx_dst_rdy_n : in  std_logic;
      ll_tx_data      : out std_logic_vector(31 downto 0));
  end component;

begin
  zpu_perf_mon_i : zpu_perf_mon
    port map (
      clk             => clk,
      reset_b         => reset_b,
      cpuwait         => zpu_cpuwait,
      pc              => zpu_pc,
      inst            => zpu_inst,
      ll_rx_sof_n     => ll_zpu_rx_sof_n,
      ll_rx_eof_n     => ll_zpu_rx_eof_n,
      ll_rx_src_rdy_n => ll_zpu_rx_src_rdy_n,
      ll_rx_dst_rdy_n => ll_zpu_rx_dst_rdy_n,
      ll_rx_data      => ll_zpu_rx_data,
      ll_tx_sof_n     => ll_zpu_tx_sof_n,
      ll_tx_eof_n     => ll_zpu_tx_eof_n,
      ll_tx_src_rdy_n => ll_zpu_tx_src_rdy_n,
      ll_tx_dst_rdy_n => ll_zpu_tx_dst_rdy_n,
      ll_tx_data      => ll_zpu_tx_data);

  arm_perf_mon_i : arm_perf_mon
    port map (
      clk             => clk,
      reset_b         => reset_b,
      cpuwait         => arm_cpuwait,
      ll_rx_sof_n     => ll_arm_rx_sof_n,
      ll_rx_eof_n     => ll_arm_rx_eof_n,
      ll_rx_src_rdy_n => ll_arm_rx_src_rdy_n,
      ll_rx_dst_rdy_n => ll_arm_rx_dst_rdy_n,
      ll_rx_data      => ll_arm_rx_data,
      ll_tx_sof_n     => ll_arm_tx_sof_n,
      ll_tx_eof_n     => ll_arm_tx_eof_n,
      ll_tx_src_rdy_n => ll_arm_tx_src_rdy_n,
      ll_tx_dst_rdy_n => ll_arm_tx_dst_rdy_n,
      ll_tx_data      => ll_arm_tx_data);

  perf_mon_if_1 : perf_mon_if
    port map (
      clk                       => clk,
      reset_b                   => reset_b,
      ll_sic_rx_port_data       => ll_sic_rx_port_data,
      ll_sic_rx_port_src_rdy_n  => ll_sic_rx_port_src_rdy_n,
      ll_sic_rx_port_dst_rdy_n  => ll_sic_rx_port_dst_rdy_n,
      ll_sic_rx_port_sof_n      => ll_sic_rx_port_sof_n,
      ll_sic_rx_port_eof_n      => ll_sic_rx_port_eof_n,
      ll_sic_tx_port_data       => ll_sic_tx_port_data,
      ll_sic_tx_port_src_rdy_n  => ll_sic_tx_port_src_rdy_n,
      ll_sic_tx_port_dst_rdy_n  => ll_sic_tx_port_dst_rdy_n,
      ll_sic_tx_port_sof_n      => ll_sic_tx_port_sof_n,
      ll_sic_tx_port_eof_n      => ll_sic_tx_port_eof_n,
      ll_perf_rx_port_data      => ll_perf_rx_port_data,
      ll_perf_rx_port_src_rdy_n => ll_perf_rx_port_src_rdy_n,
      ll_perf_rx_port_dst_rdy_n => ll_perf_rx_port_dst_rdy_n,
      ll_perf_rx_port_sof_n     => ll_perf_rx_port_sof_n,
      ll_perf_rx_port_eof_n     => ll_perf_rx_port_eof_n,
      ll_perf_tx_port_data      => ll_perf_tx_port_data,
      ll_perf_tx_port_src_rdy_n => ll_perf_tx_port_src_rdy_n,
      ll_perf_tx_port_dst_rdy_n => ll_perf_tx_port_dst_rdy_n,
      ll_perf_tx_port_sof_n     => ll_perf_tx_port_sof_n,
      ll_perf_tx_port_eof_n     => ll_perf_tx_port_eof_n);

  hub_i : performance_monitors_hub
    generic map (
      NUM_PORTS => NUM_PORTS)
    port map (
      clk             => clk,
      reset_b         => reset_b,
      ll_rx_sof_n     => ll_perf_tx_port_sof_n,
      ll_rx_eof_n     => ll_perf_tx_port_eof_n,
      ll_rx_src_rdy_n => ll_perf_tx_port_src_rdy_n,
      ll_rx_dst_rdy_n => ll_perf_tx_port_dst_rdy_n,
      ll_rx_data      => ll_perf_tx_port_data,
      ll_tx_sof_n     => ll_perf_rx_port_sof_n,
      ll_tx_eof_n     => ll_perf_rx_port_eof_n,
      ll_tx_src_rdy_n => ll_perf_rx_port_src_rdy_n,
      ll_tx_dst_rdy_n => ll_perf_rx_port_dst_rdy_n,
      ll_tx_data      => ll_perf_rx_port_data,
      p0_rx_sof_n     => ll_zpu_tx_sof_n,
      p0_rx_eof_n     => ll_zpu_tx_eof_n,
      p0_rx_src_rdy_n => ll_zpu_tx_src_rdy_n,
      p0_rx_dst_rdy_n => ll_zpu_tx_dst_rdy_n,
      p0_rx_data      => ll_zpu_tx_data,
      p0_tx_sof_n     => ll_zpu_rx_sof_n,
      p0_tx_eof_n     => ll_zpu_rx_eof_n,
      p0_tx_src_rdy_n => ll_zpu_rx_src_rdy_n,
      p0_tx_dst_rdy_n => ll_zpu_rx_dst_rdy_n,
      p0_tx_data      => ll_zpu_rx_data,
      p1_rx_sof_n     => ll_arm_tx_sof_n,
      p1_rx_eof_n     => ll_arm_tx_eof_n,
      p1_rx_src_rdy_n => ll_arm_tx_src_rdy_n,
      p1_rx_dst_rdy_n => ll_arm_tx_dst_rdy_n,
      p1_rx_data      => ll_arm_tx_data,
      p1_tx_sof_n     => ll_arm_rx_sof_n,
      p1_tx_eof_n     => ll_arm_rx_eof_n,
      p1_tx_src_rdy_n => ll_arm_rx_src_rdy_n,
      p1_tx_dst_rdy_n => ll_arm_rx_dst_rdy_n,
      p1_tx_data      => ll_arm_rx_data);

end beh;
library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

use work.axi4s_pkg.all;
use work.perf_mon_pkg.all;

entity performance_monitors_hub is
  generic
    (
      NUM_PORTS : integer := 3
      );
  port
    (
      clk              : in  std_logic;
      reset_b          : in  std_logic;
      ll_rx_sof_n      : in  std_logic;
      ll_rx_eof_n      : in  std_logic;
      ll_rx_src_rdy_n  : in  std_logic;
      ll_rx_dst_rdy_n  : out std_logic;
      ll_rx_data       : in  std_logic_vector(31 downto 0);
      ll_tx_sof_n      : out std_logic;
      ll_tx_eof_n      : out std_logic;
      ll_tx_src_rdy_n  : out std_logic;
      ll_tx_dst_rdy_n  : in  std_logic;
      ll_tx_data       : out std_logic_vector(31 downto 0);
      p0_rx_sof_n      : in  std_logic;
      p0_rx_eof_n      : in  std_logic;
      p0_rx_src_rdy_n  : in  std_logic;
      p0_rx_dst_rdy_n  : out std_logic;
      p0_rx_data       : in  std_logic_vector(31 downto 0);
      p0_tx_sof_n      : out std_logic;
      p0_tx_eof_n      : out std_logic;
      p0_tx_src_rdy_n  : out std_logic;
      p0_tx_dst_rdy_n  : in  std_logic;
      p0_tx_data       : out std_logic_vector(31 downto 0);
      p1_rx_sof_n      : in  std_logic;
      p1_rx_eof_n      : in  std_logic;
      p1_rx_src_rdy_n  : in  std_logic;
      p1_rx_dst_rdy_n  : out std_logic;
      p1_rx_data       : in  std_logic_vector(31 downto 0);
      p1_tx_sof_n      : out std_logic;
      p1_tx_eof_n      : out std_logic;
      p1_tx_src_rdy_n  : out std_logic;
      p1_tx_dst_rdy_n  : in  std_logic;
      p1_tx_data       : out std_logic_vector(31 downto 0);
      p2_rx_sof_n      : in  std_logic;
      p2_rx_eof_n      : in  std_logic;
      p2_rx_src_rdy_n  : in  std_logic;
      p2_rx_dst_rdy_n  : out std_logic;
      p2_rx_data       : in  std_logic_vector(31 downto 0);
      p2_tx_sof_n      : out std_logic;
      p2_tx_eof_n      : out std_logic;
      p2_tx_src_rdy_n  : out std_logic;
      p2_tx_dst_rdy_n  : in  std_logic;
      p2_tx_data       : out std_logic_vector(31 downto 0)
      );
end entity performance_monitors_hub;

architecture BEH of performance_monitors_hub is
  type FSM_TYPE is (
    wait_for_cmd,
    send_get_perf_cmd,
    send_ctrl_perf_cmd,
    get_perf,
    done,
    error_state);    
  signal fsm_cs : FSM_TYPE;
  signal fsm_ns : FSM_TYPE;

  signal  cmd_reg       : std_logic_vector(C_CMD_WIDTH-1 downto 0);
  signal  cmd_reg_next  : std_logic_vector(C_CMD_WIDTH-1 downto 0);
  signal  mon_reg       : std_logic_vector(C_MON_WIDTH-1 downto 0);
  signal  mon_reg_next  : std_logic_vector(C_MON_WIDTH-1 downto 0);
  subtype MON_RANGE is integer range 0 to (NUM_PORTS-1);
  signal  cur_mon       : MON_RANGE;
  signal  cur_mon_next  : MON_RANGE;
  signal  mon_tx_enable : std_logic_vector(NUM_PORTS-1 downto 0);

  signal perf_cmd      : std_logic_vector(0 to 3);
  signal perf_cmd_next : std_logic_vector(0 to 3);
  signal perf_all      : std_logic;     
  signal perf_all_next : std_logic;

  signal mon_rx_sof_n     : std_logic;
  signal mon_rx_eof_n     : std_logic;
  signal mon_rx_src_rdy_n : std_logic;
  signal mon_rx_dst_rdy_n : std_logic;
  signal mon_rx_data      : std_logic_vector(31 downto 0);
  signal mon_tx_sof_n     : std_logic;
  signal mon_tx_eof_n     : std_logic;
  signal mon_tx_src_rdy_n : std_logic;
  signal mon_tx_dst_rdy_n : std_logic;
  signal mon_tx_data      : std_logic_vector(31 downto 0);

begin
  mon_tx_dst_rdy_n <= '1';

  GEN_P0 : if (NUM_PORTS >= 1) generate
    p0_rx_dst_rdy_n <= mon_rx_dst_rdy_n when ((mon_tx_enable(0) = '1') and (cur_mon = 0)) else '1';
    p0_tx_sof_n     <= mon_tx_sof_n     when (mon_tx_enable(0) = '1')                     else '1';
    p0_tx_eof_n     <= mon_tx_eof_n     when (mon_tx_enable(0) = '1')                     else '1';
    p0_tx_src_rdy_n <= mon_tx_src_rdy_n when (mon_tx_enable(0) = '1')                     else '1';
    p0_tx_data      <= mon_tx_data      when (mon_tx_enable(0) = '1')                     else (others => '0');
  end generate GEN_P0;

  GEN_P1 : if (NUM_PORTS >= 2) generate
    p1_rx_dst_rdy_n <= mon_rx_dst_rdy_n when ((mon_tx_enable(1) = '1') and (cur_mon = 1)) else '1';
    p1_tx_sof_n     <= mon_tx_sof_n     when (mon_tx_enable(1) = '1')                     else '1';
    p1_tx_eof_n     <= mon_tx_eof_n     when (mon_tx_enable(1) = '1')                     else '1';
    p1_tx_src_rdy_n <= mon_tx_src_rdy_n when (mon_tx_enable(1) = '1')                     else '1';
    p1_tx_data      <= mon_tx_data      when (mon_tx_enable(1) = '1')                     else (others => '0');
  end generate GEN_P1;

  GEN_P2 : if (NUM_PORTS >= 3) generate
    p2_rx_dst_rdy_n <= mon_rx_dst_rdy_n when ((mon_tx_enable(2) = '1') and (cur_mon = 2)) else '1';
    p2_tx_sof_n     <= mon_tx_sof_n     when (mon_tx_enable(2) = '1')                     else '1';
    p2_tx_eof_n     <= mon_tx_eof_n     when (mon_tx_enable(2) = '1')                     else '1';
    p2_tx_src_rdy_n <= mon_tx_src_rdy_n when (mon_tx_enable(2) = '1')                     else '1';
    p2_tx_data      <= mon_tx_data      when (mon_tx_enable(2) = '1')                     else (others => '0');
  end generate GEN_P2;

  MON_LL_OUTPUT_PROC : process (cur_mon,
                                p0_rx_sof_n, p0_rx_eof_n, p0_rx_src_rdy_n, p0_rx_data,
                                p1_rx_sof_n, p1_rx_eof_n, p1_rx_src_rdy_n, p1_rx_data,
                                p2_rx_sof_n, p2_rx_eof_n, p2_rx_src_rdy_n, p2_rx_data
                                ) is
  begin
    case conv_integer(cur_mon) is
      when 0 => mon_rx_sof_n <= p0_rx_sof_n;
                mon_rx_eof_n     <= p0_rx_eof_n;
                mon_rx_src_rdy_n <= p0_rx_src_rdy_n;
                mon_rx_data      <= p0_rx_data;
      when 1 => mon_rx_sof_n <= p1_rx_sof_n;
                mon_rx_eof_n     <= p1_rx_eof_n;
                mon_rx_src_rdy_n <= p1_rx_src_rdy_n;
                mon_rx_data      <= p1_rx_data;
      when 2 => mon_rx_sof_n <= p2_rx_sof_n;
                mon_rx_eof_n     <= p2_rx_eof_n;
                mon_rx_src_rdy_n <= p2_rx_src_rdy_n;
                mon_rx_data      <= p2_rx_data;
      when others => mon_rx_sof_n <= '1';
                     mon_rx_eof_n     <= '1';
                     mon_rx_src_rdy_n <= '1';
                     mon_rx_data      <= (others => '0');
    end case;
  end process MON_LL_OUTPUT_PROC;

  FSM_STATE_PROC : process (clk) is
  begin
    if ((clk'event) and (clk = '1')) then
      if (reset_b = C_RESET_LEVEL) then
        cur_mon  <= 0;
        cmd_reg  <= (others => '0');
        mon_reg  <= (others => '0');
        perf_cmd <= (others => '0');
        perf_all <= '0';
        fsm_cs   <= wait_for_cmd;
      else
        cur_mon  <= cur_mon_next;
        cmd_reg  <= cmd_reg_next;
        mon_reg  <= mon_reg_next;
        perf_cmd <= perf_cmd_next;
        perf_all <= perf_all_next;
        fsm_cs   <= fsm_ns;
      end if;
    end if;
  end process FSM_STATE_PROC;

  FSM_LOGIC_PROC : process (fsm_cs, cur_mon, cmd_reg, mon_reg, perf_all,
                            ll_tx_dst_rdy_n, ll_rx_sof_n, ll_rx_src_rdy_n,
                            ll_rx_data, ll_rx_eof_n, mon_rx_sof_n, perf_cmd,
                            mon_rx_src_rdy_n, mon_rx_data, mon_rx_eof_n) is
  begin
    mon_rx_dst_rdy_n <= '1';
    mon_tx_sof_n     <= '1';
    mon_tx_eof_n     <= '1';
    mon_tx_src_rdy_n <= '1';
    mon_tx_data      <= (others => '0');
    mon_tx_enable    <= (others => '0');
    cur_mon_next     <= cur_mon;
    cmd_reg_next     <= cmd_reg;
    mon_reg_next     <= mon_reg;
    perf_cmd_next    <= perf_cmd;
    perf_all_next    <= perf_all;
    fsm_ns           <= fsm_cs;

    case (fsm_cs) is
      when wait_for_cmd =>
        cur_mon_next    <= 0;
        ll_rx_dst_rdy_n <= '0';
        ll_tx_sof_n     <= '1';
        ll_tx_eof_n     <= '1';
        ll_tx_src_rdy_n <= '1';
        ll_tx_data      <= (others => '0');
        if ((ll_rx_sof_n = '0') and (ll_rx_src_rdy_n = '0')) then
          cmd_reg_next <= ll_rx_data(C_CMD_WIDTH-1 downto 0);
          mon_reg_next <= ll_rx_data(C_MON_WIDTH+C_CMD_WIDTH-1 downto C_CMD_WIDTH);
          case conv_integer(ll_rx_data(C_CMD_WIDTH-1 downto 0)) is
            when C_CMD_GET_ALL_PERF => perf_cmd_next <= conv_std_logic_vector(C_CMD_GET_PERF, 4);
                                       perf_all_next <= '1';
                                       fsm_ns        <= send_get_perf_cmd;
            when C_CMD_GET_MON_PERF => perf_cmd_next <= conv_std_logic_vector(C_CMD_GET_PERF, 4);
                                       perf_all_next <= '0';
                                       fsm_ns        <= send_get_perf_cmd;
            when C_CMD_RST_ALL_PERF => perf_cmd_next <= conv_std_logic_vector(C_CMD_RST_PERF, 4);
                                       perf_all_next <= '1';
                                       fsm_ns        <= send_ctrl_perf_cmd;
            when C_CMD_RST_MON_PERF => perf_cmd_next <= conv_std_logic_vector(C_CMD_RST_PERF, 4);
                                       perf_all_next <= '0';
                                       fsm_ns        <= send_ctrl_perf_cmd;
            when C_CMD_ENA_ALL_PERF => perf_cmd_next <= conv_std_logic_vector(C_CMD_ENA_PERF, 4);
                                       perf_all_next <= '1';
                                       fsm_ns        <= send_ctrl_perf_cmd;
            when C_CMD_ENA_MON_PERF => perf_cmd_next <= conv_std_logic_vector(C_CMD_ENA_PERF, 4);
                                       perf_all_next <= '0';
                                       fsm_ns        <= send_ctrl_perf_cmd;
            when C_CMD_DIS_ALL_PERF => perf_cmd_next <= conv_std_logic_vector(C_CMD_DIS_PERF, 4);
                                       perf_all_next <= '1';
                                       fsm_ns        <= send_ctrl_perf_cmd;
            when C_CMD_DIS_MON_PERF => perf_cmd_next <= conv_std_logic_vector(C_CMD_DIS_PERF, 4);
                                       perf_all_next <= '0';
                                       fsm_ns        <= send_ctrl_perf_cmd;
            when others => fsm_ns <= error_state;
          end case;
        end if;

      when send_get_perf_cmd =>
        ll_rx_dst_rdy_n <= '1';         
        ll_tx_sof_n     <= ll_tx_dst_rdy_n;
        ll_tx_eof_n     <= '1';
        ll_tx_src_rdy_n <= ll_tx_dst_rdy_n;
        if (cmd_reg = C_CMD_GET_ALL_PERF) then
          ll_tx_data <= conv_std_logic_vector(NUM_PORTS, 32);
        else
          ll_tx_data <= conv_std_logic_vector(1, 32);
        end if;
        mon_rx_dst_rdy_n <= '1';
        mon_tx_sof_n     <= '0';
        mon_tx_eof_n     <= '0';
        mon_tx_src_rdy_n <= '0';
        mon_tx_data      <= conv_std_logic_vector(C_CMD_GET_PERF, 32);
        if ((cmd_reg = C_CMD_GET_ALL_PERF) and (ll_tx_dst_rdy_n = '0')) then
          cur_mon_next  <= 0;
          mon_tx_enable <= (others => '1');
          fsm_ns        <= get_perf;
        elsif ((cmd_reg = C_CMD_GET_MON_PERF) and (ll_tx_dst_rdy_n = '0')) then
          cur_mon_next                         <= conv_integer(mon_reg);
          mon_tx_enable(conv_integer(mon_reg)) <= '1';
          fsm_ns                               <= get_perf;
        elsif (ll_tx_dst_rdy_n = '0') then
          mon_tx_enable <= (others => '0');
          fsm_ns        <= error_state;
        else
          mon_tx_enable <= (others => '0');
          fsm_ns        <= send_get_perf_cmd;
        end if;

      when send_ctrl_perf_cmd =>
        ll_rx_dst_rdy_n          <= '1';
        ll_tx_sof_n              <= '1';
        ll_tx_eof_n              <= '1';
        ll_tx_src_rdy_n          <= '1';
        ll_tx_data               <= (others => '0');
        mon_rx_dst_rdy_n         <= '1';
        mon_tx_sof_n             <= '0';
        mon_tx_eof_n             <= '0';
        mon_tx_src_rdy_n         <= '0';
        mon_tx_data(31 downto 4) <= (others => '0');
        mon_tx_data(3 downto 0)  <= perf_cmd;
        if ((perf_all = '1') and (ll_tx_dst_rdy_n = '0')) then
          cur_mon_next  <= 0;
          mon_tx_enable <= (others => '1');
          fsm_ns        <= done;
        elsif ((perf_all = '0') and (ll_tx_dst_rdy_n = '0')) then
          cur_mon_next                         <= conv_integer(mon_reg);
          mon_tx_enable(conv_integer(mon_reg)) <= '1';
          fsm_ns                               <= done;
        elsif (ll_tx_dst_rdy_n = '0') then
          mon_tx_enable <= (others => '0');
          fsm_ns        <= error_state;
        else
          mon_tx_enable <= (others => '0');
          fsm_ns        <= send_ctrl_perf_cmd;
        end if;

      when get_perf =>
        ll_rx_dst_rdy_n <= '1';         
        if (((cmd_reg = C_CMD_GET_ALL_PERF) and (cur_mon = 0)) or
            (cmd_reg = C_CMD_GET_MON_PERF)) then
          ll_tx_sof_n <= '1';
        else
          ll_tx_sof_n <= '1';
        end if;
        ll_tx_src_rdy_n        <= mon_rx_src_rdy_n or ll_tx_dst_rdy_n;
        ll_tx_data             <= mon_rx_data;
        mon_rx_dst_rdy_n       <= ll_tx_dst_rdy_n;
        mon_tx_enable(cur_mon) <= '1';
        if (((mon_rx_src_rdy_n = '0') and (mon_rx_eof_n = '0')) and
            ((cur_mon = NUM_PORTS-1) or (cmd_reg = C_CMD_GET_MON_PERF))) then
          ll_tx_eof_n <= '0';
          fsm_ns      <= done;
        elsif ((mon_rx_src_rdy_n = '0') and (mon_rx_eof_n = '0')) then
          ll_tx_eof_n  <= '1';
          cur_mon_next <= cur_mon + 1;
          fsm_ns       <= get_perf;
        else
          ll_tx_eof_n <= '1';
          fsm_ns      <= get_perf;
        end if;

      when done =>
        ll_rx_dst_rdy_n <= '1';
        ll_tx_sof_n     <= '1';
        ll_tx_eof_n     <= '1';
        ll_tx_src_rdy_n <= '1';
        ll_tx_data      <= (others => '0');
        fsm_ns          <= wait_for_cmd;

      when error_state =>
        ll_rx_dst_rdy_n <= '1';
        ll_tx_sof_n     <= '1';
        ll_tx_eof_n     <= '1';
        ll_tx_src_rdy_n <= '1';
        ll_tx_data      <= (others => '0');
        fsm_ns          <= error_state;

      when others =>
        ll_rx_dst_rdy_n <= '1';
        ll_tx_sof_n     <= '1';
        ll_tx_eof_n     <= '1';
        ll_tx_src_rdy_n <= '1';
        ll_tx_data      <= (others => '0');
        fsm_ns          <= error_state;
    end case;
  end process FSM_LOGIC_PROC;
  
end architecture BEH;

library IEEE;

use IEEE.std_logic_1164.all;

package CONV_PACK_mem_C is

-- define attributes
attribute ENUM_ENCODING : STRING;

end CONV_PACK_mem_C;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_mem_C.all;

entity mem_C_DW01_inc_2 is

   port( A : in std_logic_vector (7 downto 0);  SUM : out std_logic_vector (7 
         downto 0));

end mem_C_DW01_inc_2;

architecture SYN_rpl of mem_C_DW01_inc_2 is

   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   signal SUM_7_port, SUM_6_port, SUM_5_port, SUM_4_port, SUM_3_port, 
      SUM_2_port, SUM_1_port, n1, n2, n3, n4, n5, SUM_0_port, n7, n8, n9, n10, 
      n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25
      , n26, n27, n28, n29, n30, n31, n32, n33 : std_logic;

begin
   SUM <= ( SUM_7_port, SUM_6_port, SUM_5_port, SUM_4_port, SUM_3_port, 
      SUM_2_port, SUM_1_port, SUM_0_port );
   
   U1 : GTECH_NOT port map( A => n25, Z => n1);
   U2 : GTECH_NOT port map( A => n22, Z => n2);
   U3 : GTECH_NOT port map( A => n18, Z => n3);
   U4 : GTECH_NOT port map( A => n17, Z => n4);
   U5 : GTECH_NOT port map( A => n14, Z => n5);
   U6 : GTECH_NOT port map( A => A(0), Z => SUM_0_port);
   U7 : GTECH_NOT port map( A => n31, Z => n7);
   U8 : GTECH_NOT port map( A => A(1), Z => n8);
   U9 : GTECH_NOT port map( A => A(3), Z => n9);
   U10 : GTECH_NOT port map( A => A(5), Z => n10);
   U11 : GTECH_NOT port map( A => A(6), Z => n11);
   U12 : GTECH_NAND2 port map( A => n5, B => n12, Z => SUM_7_port);
   U13 : GTECH_NAND2 port map( A => A(7), B => n13, Z => n12);
   U14 : GTECH_NOR2 port map( A => n13, B => A(7), Z => n14);
   U15 : GTECH_NAND2 port map( A => A(6), B => n15, Z => n13);
   U16 : GTECH_NAND2 port map( A => n16, B => n4, Z => SUM_6_port);
   U17 : GTECH_NOR2 port map( A => n11, B => n15, Z => n17);
   U18 : GTECH_NAND2 port map( A => n15, B => n11, Z => n16);
   U19 : GTECH_NOR2 port map( A => n10, B => n18, Z => n15);
   U20 : GTECH_NAND2 port map( A => n19, B => n20, Z => SUM_5_port);
   U21 : GTECH_NAND2 port map( A => A(5), B => n18, Z => n20);
   U22 : GTECH_NAND2 port map( A => n3, B => n10, Z => n19);
   U23 : GTECH_NAND2 port map( A => n21, B => A(4), Z => n18);
   U24 : GTECH_NOR2 port map( A => n22, B => n9, Z => n21);
   U25 : GTECH_NAND2 port map( A => n1, B => n23, Z => SUM_4_port);
   U26 : GTECH_NAND2 port map( A => A(4), B => n24, Z => n23);
   U27 : GTECH_NOR2 port map( A => n24, B => A(4), Z => n25);
   U28 : GTECH_NAND2 port map( A => A(3), B => n2, Z => n24);
   U29 : GTECH_NAND2 port map( A => n26, B => n27, Z => SUM_3_port);
   U30 : GTECH_NAND2 port map( A => A(3), B => n22, Z => n27);
   U31 : GTECH_NAND2 port map( A => n2, B => n9, Z => n26);
   U32 : GTECH_NAND2 port map( A => n28, B => A(2), Z => n22);
   U33 : GTECH_NOR2 port map( A => SUM_0_port, B => n8, Z => n28);
   U34 : GTECH_NAND2 port map( A => n7, B => n29, Z => SUM_2_port);
   U35 : GTECH_NAND2 port map( A => A(2), B => n30, Z => n29);
   U36 : GTECH_NOR2 port map( A => n30, B => A(2), Z => n31);
   U37 : GTECH_NAND2 port map( A => A(1), B => A(0), Z => n30);
   U38 : GTECH_NAND2 port map( A => n32, B => n33, Z => SUM_1_port);
   U39 : GTECH_NAND2 port map( A => A(1), B => SUM_0_port, Z => n33);
   U40 : GTECH_NAND2 port map( A => A(0), B => n8, Z => n32);

end SYN_rpl;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_mem_C.all;

entity mem_C_DW01_dec_3 is

   port( A : in std_logic_vector (31 downto 0);  SUM : out std_logic_vector (31
         downto 0));

end mem_C_DW01_dec_3;

architecture SYN_rpl of mem_C_DW01_dec_3 is

   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   signal SUM_31_port, SUM_30_port, SUM_29_port, SUM_28_port, SUM_27_port, 
      SUM_26_port, SUM_25_port, SUM_24_port, SUM_23_port, SUM_22_port, 
      SUM_21_port, SUM_20_port, SUM_19_port, SUM_18_port, SUM_17_port, 
      SUM_16_port, SUM_15_port, SUM_14_port, SUM_13_port, SUM_12_port, 
      SUM_11_port, SUM_10_port, SUM_9_port, SUM_8_port, SUM_7_port, SUM_6_port,
      SUM_5_port, SUM_4_port, SUM_3_port, SUM_2_port, SUM_1_port, n1, n2, n3, 
      n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, SUM_0_port, 
      n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32
      , n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, 
      n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61
      , n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n73, n74, n75, 
      n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86, n87, n88, n89, n90
      , n91, n92, n93, n94 : std_logic;

begin
   SUM <= ( SUM_31_port, SUM_30_port, SUM_29_port, SUM_28_port, SUM_27_port, 
      SUM_26_port, SUM_25_port, SUM_24_port, SUM_23_port, SUM_22_port, 
      SUM_21_port, SUM_20_port, SUM_19_port, SUM_18_port, SUM_17_port, 
      SUM_16_port, SUM_15_port, SUM_14_port, SUM_13_port, SUM_12_port, 
      SUM_11_port, SUM_10_port, SUM_9_port, SUM_8_port, SUM_7_port, SUM_6_port,
      SUM_5_port, SUM_4_port, SUM_3_port, SUM_2_port, SUM_1_port, SUM_0_port );
   
   U1 : GTECH_NOT port map( A => n54, Z => n1);
   U2 : GTECH_NOT port map( A => n45, Z => n2);
   U3 : GTECH_NOT port map( A => n41, Z => n3);
   U4 : GTECH_NOT port map( A => n37, Z => n4);
   U5 : GTECH_NOT port map( A => n93, Z => n5);
   U6 : GTECH_NOT port map( A => n89, Z => n6);
   U7 : GTECH_NOT port map( A => n85, Z => n7);
   U8 : GTECH_NOT port map( A => n81, Z => n8);
   U9 : GTECH_NOT port map( A => n77, Z => n9);
   U10 : GTECH_NOT port map( A => n72, Z => n10);
   U11 : GTECH_NOT port map( A => n68, Z => n11);
   U12 : GTECH_NOT port map( A => n64, Z => n12);
   U13 : GTECH_NOT port map( A => n60, Z => n13);
   U14 : GTECH_NOT port map( A => n51, Z => n14);
   U15 : GTECH_NOT port map( A => n49, Z => n15);
   U16 : GTECH_NOT port map( A => n58, Z => n16);
   U17 : GTECH_NOT port map( A => A(0), Z => SUM_0_port);
   U18 : GTECH_NOT port map( A => A(15), Z => n18);
   U19 : GTECH_NOT port map( A => A(1), Z => n19);
   U20 : GTECH_NOT port map( A => A(3), Z => n20);
   U21 : GTECH_NOT port map( A => A(5), Z => n21);
   U22 : GTECH_NOT port map( A => A(7), Z => n22);
   U23 : GTECH_NOT port map( A => A(9), Z => n23);
   U24 : GTECH_NOT port map( A => A(11), Z => n24);
   U25 : GTECH_NOT port map( A => A(13), Z => n25);
   U26 : GTECH_NOT port map( A => A(17), Z => n26);
   U27 : GTECH_NOT port map( A => A(19), Z => n27);
   U28 : GTECH_NOT port map( A => A(21), Z => n28);
   U29 : GTECH_NOT port map( A => A(23), Z => n29);
   U30 : GTECH_NOT port map( A => A(25), Z => n30);
   U31 : GTECH_NOT port map( A => A(27), Z => n31);
   U32 : GTECH_NOT port map( A => A(30), Z => n32);
   U33 : GTECH_NAND2 port map( A => n33, B => n34, Z => SUM_9_port);
   U34 : GTECH_NAND2 port map( A => A(9), B => n4, Z => n34);
   U35 : GTECH_NAND2 port map( A => n4, B => n35, Z => SUM_8_port);
   U36 : GTECH_NAND2 port map( A => A(8), B => n36, Z => n35);
   U37 : GTECH_NAND2 port map( A => n36, B => n38, Z => SUM_7_port);
   U38 : GTECH_NAND2 port map( A => A(7), B => n3, Z => n38);
   U39 : GTECH_NAND2 port map( A => n3, B => n39, Z => SUM_6_port);
   U40 : GTECH_NAND2 port map( A => A(6), B => n40, Z => n39);
   U41 : GTECH_NAND2 port map( A => n40, B => n42, Z => SUM_5_port);
   U42 : GTECH_NAND2 port map( A => A(5), B => n2, Z => n42);
   U43 : GTECH_NAND2 port map( A => n2, B => n43, Z => SUM_4_port);
   U44 : GTECH_NAND2 port map( A => A(4), B => n44, Z => n43);
   U45 : GTECH_NAND2 port map( A => n44, B => n46, Z => SUM_3_port);
   U46 : GTECH_NAND2 port map( A => A(3), B => n1, Z => n46);
   U47 : GTECH_NAND2 port map( A => n15, B => n47, Z => SUM_31_port);
   U48 : GTECH_NAND2 port map( A => A(31), B => n48, Z => n47);
   U49 : GTECH_NOR2 port map( A => n48, B => A(31), Z => n49);
   U50 : GTECH_NAND2 port map( A => n48, B => n50, Z => SUM_30_port);
   U51 : GTECH_NAND2 port map( A => A(30), B => n14, Z => n50);
   U52 : GTECH_NAND2 port map( A => n51, B => n32, Z => n48);
   U53 : GTECH_NAND2 port map( A => n1, B => n52, Z => SUM_2_port);
   U54 : GTECH_NAND2 port map( A => A(2), B => n53, Z => n52);
   U55 : GTECH_NAND2 port map( A => n14, B => n55, Z => SUM_29_port);
   U56 : GTECH_NAND2 port map( A => A(29), B => n16, Z => n55);
   U57 : GTECH_NOR2 port map( A => n16, B => A(29), Z => n51);
   U58 : GTECH_NAND2 port map( A => n16, B => n56, Z => SUM_28_port);
   U59 : GTECH_NAND2 port map( A => A(28), B => n57, Z => n56);
   U60 : GTECH_NOR2 port map( A => n57, B => A(28), Z => n58);
   U61 : GTECH_NAND2 port map( A => n57, B => n59, Z => SUM_27_port);
   U62 : GTECH_NAND2 port map( A => A(27), B => n13, Z => n59);
   U63 : GTECH_NAND2 port map( A => n60, B => n31, Z => n57);
   U64 : GTECH_NAND2 port map( A => n13, B => n61, Z => SUM_26_port);
   U65 : GTECH_NAND2 port map( A => A(26), B => n62, Z => n61);
   U66 : GTECH_NOR2 port map( A => n62, B => A(26), Z => n60);
   U67 : GTECH_NAND2 port map( A => n62, B => n63, Z => SUM_25_port);
   U68 : GTECH_NAND2 port map( A => A(25), B => n12, Z => n63);
   U69 : GTECH_NAND2 port map( A => n64, B => n30, Z => n62);
   U70 : GTECH_NAND2 port map( A => n12, B => n65, Z => SUM_24_port);
   U71 : GTECH_NAND2 port map( A => A(24), B => n66, Z => n65);
   U72 : GTECH_NOR2 port map( A => n66, B => A(24), Z => n64);
   U73 : GTECH_NAND2 port map( A => n66, B => n67, Z => SUM_23_port);
   U74 : GTECH_NAND2 port map( A => A(23), B => n11, Z => n67);
   U75 : GTECH_NAND2 port map( A => n68, B => n29, Z => n66);
   U76 : GTECH_NAND2 port map( A => n11, B => n69, Z => SUM_22_port);
   U77 : GTECH_NAND2 port map( A => A(22), B => n70, Z => n69);
   U78 : GTECH_NOR2 port map( A => n70, B => A(22), Z => n68);
   U79 : GTECH_NAND2 port map( A => n70, B => n71, Z => SUM_21_port);
   U80 : GTECH_NAND2 port map( A => A(21), B => n10, Z => n71);
   U81 : GTECH_NAND2 port map( A => n72, B => n28, Z => n70);
   U82 : GTECH_NAND2 port map( A => n10, B => n73, Z => SUM_20_port);
   U83 : GTECH_NAND2 port map( A => A(20), B => n74, Z => n73);
   U84 : GTECH_NOR2 port map( A => n74, B => A(20), Z => n72);
   U85 : GTECH_NAND2 port map( A => n53, B => n75, Z => SUM_1_port);
   U86 : GTECH_NAND2 port map( A => A(1), B => A(0), Z => n75);
   U87 : GTECH_NAND2 port map( A => n74, B => n76, Z => SUM_19_port);
   U88 : GTECH_NAND2 port map( A => A(19), B => n9, Z => n76);
   U89 : GTECH_NAND2 port map( A => n77, B => n27, Z => n74);
   U90 : GTECH_NAND2 port map( A => n9, B => n78, Z => SUM_18_port);
   U91 : GTECH_NAND2 port map( A => A(18), B => n79, Z => n78);
   U92 : GTECH_NOR2 port map( A => n79, B => A(18), Z => n77);
   U93 : GTECH_NAND2 port map( A => n79, B => n80, Z => SUM_17_port);
   U94 : GTECH_NAND2 port map( A => A(17), B => n8, Z => n80);
   U95 : GTECH_NAND2 port map( A => n81, B => n26, Z => n79);
   U96 : GTECH_NAND2 port map( A => n8, B => n82, Z => SUM_16_port);
   U97 : GTECH_NAND2 port map( A => A(16), B => n83, Z => n82);
   U98 : GTECH_NOR2 port map( A => n83, B => A(16), Z => n81);
   U99 : GTECH_NAND2 port map( A => n83, B => n84, Z => SUM_15_port);
   U100 : GTECH_NAND2 port map( A => A(15), B => n7, Z => n84);
   U101 : GTECH_NAND2 port map( A => n85, B => n18, Z => n83);
   U102 : GTECH_NAND2 port map( A => n7, B => n86, Z => SUM_14_port);
   U103 : GTECH_NAND2 port map( A => A(14), B => n87, Z => n86);
   U104 : GTECH_NOR2 port map( A => n87, B => A(14), Z => n85);
   U105 : GTECH_NAND2 port map( A => n87, B => n88, Z => SUM_13_port);
   U106 : GTECH_NAND2 port map( A => A(13), B => n6, Z => n88);
   U107 : GTECH_NAND2 port map( A => n89, B => n25, Z => n87);
   U108 : GTECH_NAND2 port map( A => n6, B => n90, Z => SUM_12_port);
   U109 : GTECH_NAND2 port map( A => A(12), B => n91, Z => n90);
   U110 : GTECH_NOR2 port map( A => n91, B => A(12), Z => n89);
   U111 : GTECH_NAND2 port map( A => n91, B => n92, Z => SUM_11_port);
   U112 : GTECH_NAND2 port map( A => A(11), B => n5, Z => n92);
   U113 : GTECH_NAND2 port map( A => n93, B => n24, Z => n91);
   U114 : GTECH_NAND2 port map( A => n5, B => n94, Z => SUM_10_port);
   U115 : GTECH_NAND2 port map( A => A(10), B => n33, Z => n94);
   U116 : GTECH_NOR2 port map( A => n33, B => A(10), Z => n93);
   U117 : GTECH_NAND2 port map( A => n37, B => n23, Z => n33);
   U118 : GTECH_NOR2 port map( A => n36, B => A(8), Z => n37);
   U119 : GTECH_NAND2 port map( A => n41, B => n22, Z => n36);
   U120 : GTECH_NOR2 port map( A => n40, B => A(6), Z => n41);
   U121 : GTECH_NAND2 port map( A => n45, B => n21, Z => n40);
   U122 : GTECH_NOR2 port map( A => n44, B => A(4), Z => n45);
   U123 : GTECH_NAND2 port map( A => n54, B => n20, Z => n44);
   U124 : GTECH_NOR2 port map( A => n53, B => A(2), Z => n54);
   U125 : GTECH_NAND2 port map( A => n19, B => SUM_0_port, Z => n53);

end SYN_rpl;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_mem_C.all;

entity mem_C_DW01_cmp2_6 is

   port( A, B : in std_logic_vector (32 downto 0);  LEQ, TC : in std_logic;  
         LT_LE, GE_GT : out std_logic);

end mem_C_DW01_cmp2_6;

architecture SYN_rpl of mem_C_DW01_cmp2_6 is

   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   signal n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16
      , n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, 
      n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45
      , n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, 
      n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71 : std_logic;

begin
   
   U1 : GTECH_NOT port map( A => n35, Z => n1);
   U2 : GTECH_NOT port map( A => A(3), Z => n2);
   U3 : GTECH_NOT port map( A => A(2), Z => n3);
   U4 : GTECH_NOT port map( A => A(5), Z => n4);
   U5 : GTECH_NOT port map( A => A(4), Z => n5);
   U6 : GTECH_NOT port map( A => A(6), Z => n6);
   U7 : GTECH_NOT port map( A => A(11), Z => n7);
   U8 : GTECH_NOT port map( A => A(14), Z => n8);
   U9 : GTECH_NOT port map( A => n67, Z => n9);
   U10 : GTECH_NOT port map( A => n70, Z => n10);
   U11 : GTECH_NOT port map( A => n71, Z => n11);
   U12 : GTECH_NOT port map( A => A(27), Z => n12);
   U13 : GTECH_NOT port map( A => B(1), Z => n13);
   U14 : GTECH_NOT port map( A => B(2), Z => n14);
   U15 : GTECH_NOT port map( A => B(3), Z => n15);
   U16 : GTECH_NOT port map( A => B(4), Z => n16);
   U17 : GTECH_NOT port map( A => B(5), Z => n17);
   U18 : GTECH_NOT port map( A => B(6), Z => n18);
   U19 : GTECH_NOT port map( A => B(7), Z => n19);
   U20 : GTECH_NOR2 port map( A => n20, B => n21, Z => LT_LE);
   U21 : GTECH_NAND2 port map( A => n22, B => n23, Z => n21);
   U22 : GTECH_NOR2 port map( A => n24, B => n25, Z => n23);
   U23 : GTECH_NAND2 port map( A => n26, B => n8, Z => n25);
   U24 : GTECH_NOR2 port map( A => A(16), B => A(15), Z => n26);
   U25 : GTECH_NAND2 port map( A => n27, B => n28, Z => n24);
   U26 : GTECH_NOR2 port map( A => A(20), B => A(19), Z => n28);
   U27 : GTECH_NOR2 port map( A => A(18), B => A(17), Z => n27);
   U28 : GTECH_NOR2 port map( A => n29, B => n30, Z => n22);
   U29 : GTECH_NAND2 port map( A => n31, B => n32, Z => n30);
   U30 : GTECH_NAND2 port map( A => A(7), B => n19, Z => n32);
   U31 : GTECH_NOR2 port map( A => A(10), B => n33, Z => n31);
   U32 : GTECH_NOR2 port map( A => n1, B => n34, Z => n33);
   U33 : GTECH_NOR2 port map( A => n19, B => A(7), Z => n34);
   U34 : GTECH_NOR2 port map( A => n36, B => n37, Z => n35);
   U35 : GTECH_NOR2 port map( A => n38, B => n39, Z => n37);
   U36 : GTECH_NAND2 port map( A => n40, B => n41, Z => n39);
   U37 : GTECH_NAND2 port map( A => n42, B => n43, Z => n41);
   U38 : GTECH_NAND2 port map( A => B(5), B => n4, Z => n43);
   U39 : GTECH_NOR2 port map( A => n44, B => n45, Z => n42);
   U40 : GTECH_NOR2 port map( A => n46, B => n47, Z => n45);
   U41 : GTECH_NAND2 port map( A => n48, B => n49, Z => n47);
   U42 : GTECH_NAND2 port map( A => n50, B => n51, Z => n49);
   U43 : GTECH_NAND2 port map( A => B(3), B => n2, Z => n51);
   U44 : GTECH_NOR2 port map( A => n52, B => n53, Z => n50);
   U45 : GTECH_NOR2 port map( A => n54, B => n55, Z => n53);
   U46 : GTECH_NAND2 port map( A => n56, B => n57, Z => n55);
   U47 : GTECH_NAND2 port map( A => n58, B => A(0), Z => n57);
   U48 : GTECH_NOR2 port map( A => B(0), B => n59, Z => n58);
   U49 : GTECH_NOR2 port map( A => A(1), B => n13, Z => n59);
   U50 : GTECH_NAND2 port map( A => A(1), B => n13, Z => n56);
   U51 : GTECH_NOR2 port map( A => B(2), B => n3, Z => n54);
   U52 : GTECH_NOR2 port map( A => A(2), B => n14, Z => n52);
   U53 : GTECH_NAND2 port map( A => A(3), B => n15, Z => n48);
   U54 : GTECH_NOR2 port map( A => B(4), B => n5, Z => n46);
   U55 : GTECH_NOR2 port map( A => A(4), B => n16, Z => n44);
   U56 : GTECH_NAND2 port map( A => A(5), B => n17, Z => n40);
   U57 : GTECH_NOR2 port map( A => B(6), B => n6, Z => n38);
   U58 : GTECH_NOR2 port map( A => A(6), B => n18, Z => n36);
   U59 : GTECH_NAND2 port map( A => n60, B => n7, Z => n29);
   U60 : GTECH_NOR2 port map( A => A(13), B => A(12), Z => n60);
   U61 : GTECH_NAND2 port map( A => n9, B => n61, Z => n20);
   U62 : GTECH_NOR2 port map( A => n62, B => n63, Z => n61);
   U63 : GTECH_NAND2 port map( A => n64, B => n12, Z => n63);
   U64 : GTECH_NOR2 port map( A => A(29), B => A(28), Z => n64);
   U65 : GTECH_NAND2 port map( A => n65, B => n66, Z => n62);
   U66 : GTECH_NOR2 port map( A => A(9), B => A(8), Z => n66);
   U67 : GTECH_NOR2 port map( A => A(31), B => A(30), Z => n65);
   U68 : GTECH_NAND2 port map( A => n68, B => n69, Z => n67);
   U69 : GTECH_NOR2 port map( A => n10, B => A(21), Z => n69);
   U70 : GTECH_NOR2 port map( A => A(23), B => A(22), Z => n70);
   U71 : GTECH_NOR2 port map( A => n11, B => A(24), Z => n68);
   U72 : GTECH_NOR2 port map( A => A(26), B => A(25), Z => n71);

end SYN_rpl;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_mem_C.all;

entity mem_C_DW01_dec_2 is

   port( A : in std_logic_vector (31 downto 0);  SUM : out std_logic_vector (31
         downto 0));

end mem_C_DW01_dec_2;

architecture SYN_rpl of mem_C_DW01_dec_2 is

   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   signal SUM_31_port, SUM_30_port, SUM_29_port, SUM_28_port, SUM_27_port, 
      SUM_26_port, SUM_25_port, SUM_24_port, SUM_23_port, SUM_22_port, 
      SUM_21_port, SUM_20_port, SUM_19_port, SUM_18_port, SUM_17_port, 
      SUM_16_port, SUM_15_port, SUM_14_port, SUM_13_port, SUM_12_port, 
      SUM_11_port, SUM_10_port, SUM_9_port, SUM_8_port, SUM_7_port, SUM_6_port,
      SUM_5_port, SUM_4_port, SUM_3_port, SUM_2_port, SUM_1_port, n1, n2, n3, 
      n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19,
      n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, SUM_0_port, 
      n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47
      , n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61, 
      n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n73, n74, n75, n76
      , n77, n78, n79, n80, n81, n82, n83, n84, n85, n86, n87, n88, n89, n90, 
      n91, n92, n93, n94 : std_logic;

begin
   SUM <= ( SUM_31_port, SUM_30_port, SUM_29_port, SUM_28_port, SUM_27_port, 
      SUM_26_port, SUM_25_port, SUM_24_port, SUM_23_port, SUM_22_port, 
      SUM_21_port, SUM_20_port, SUM_19_port, SUM_18_port, SUM_17_port, 
      SUM_16_port, SUM_15_port, SUM_14_port, SUM_13_port, SUM_12_port, 
      SUM_11_port, SUM_10_port, SUM_9_port, SUM_8_port, SUM_7_port, SUM_6_port,
      SUM_5_port, SUM_4_port, SUM_3_port, SUM_2_port, SUM_1_port, SUM_0_port );
   
   U1 : GTECH_NOT port map( A => n49, Z => n1);
   U2 : GTECH_NOT port map( A => A(30), Z => n2);
   U3 : GTECH_NOT port map( A => n51, Z => n3);
   U4 : GTECH_NOT port map( A => n58, Z => n4);
   U5 : GTECH_NOT port map( A => A(27), Z => n5);
   U6 : GTECH_NOT port map( A => n60, Z => n6);
   U7 : GTECH_NOT port map( A => A(25), Z => n7);
   U8 : GTECH_NOT port map( A => n64, Z => n8);
   U9 : GTECH_NOT port map( A => A(23), Z => n9);
   U10 : GTECH_NOT port map( A => n68, Z => n10);
   U11 : GTECH_NOT port map( A => A(21), Z => n11);
   U12 : GTECH_NOT port map( A => n72, Z => n12);
   U13 : GTECH_NOT port map( A => A(19), Z => n13);
   U14 : GTECH_NOT port map( A => n77, Z => n14);
   U15 : GTECH_NOT port map( A => A(17), Z => n15);
   U16 : GTECH_NOT port map( A => n81, Z => n16);
   U17 : GTECH_NOT port map( A => A(15), Z => n17);
   U18 : GTECH_NOT port map( A => n85, Z => n18);
   U19 : GTECH_NOT port map( A => A(13), Z => n19);
   U20 : GTECH_NOT port map( A => n89, Z => n20);
   U21 : GTECH_NOT port map( A => A(11), Z => n21);
   U22 : GTECH_NOT port map( A => n93, Z => n22);
   U23 : GTECH_NOT port map( A => A(9), Z => n23);
   U24 : GTECH_NOT port map( A => n37, Z => n24);
   U25 : GTECH_NOT port map( A => A(7), Z => n25);
   U26 : GTECH_NOT port map( A => n41, Z => n26);
   U27 : GTECH_NOT port map( A => A(5), Z => n27);
   U28 : GTECH_NOT port map( A => n45, Z => n28);
   U29 : GTECH_NOT port map( A => A(3), Z => n29);
   U30 : GTECH_NOT port map( A => n54, Z => n30);
   U31 : GTECH_NOT port map( A => A(1), Z => n31);
   U32 : GTECH_NOT port map( A => A(0), Z => SUM_0_port);
   U33 : GTECH_NAND2 port map( A => n33, B => n34, Z => SUM_9_port);
   U34 : GTECH_NAND2 port map( A => A(9), B => n24, Z => n34);
   U35 : GTECH_NAND2 port map( A => n24, B => n35, Z => SUM_8_port);
   U36 : GTECH_NAND2 port map( A => A(8), B => n36, Z => n35);
   U37 : GTECH_NAND2 port map( A => n36, B => n38, Z => SUM_7_port);
   U38 : GTECH_NAND2 port map( A => A(7), B => n26, Z => n38);
   U39 : GTECH_NAND2 port map( A => n26, B => n39, Z => SUM_6_port);
   U40 : GTECH_NAND2 port map( A => A(6), B => n40, Z => n39);
   U41 : GTECH_NAND2 port map( A => n40, B => n42, Z => SUM_5_port);
   U42 : GTECH_NAND2 port map( A => A(5), B => n28, Z => n42);
   U43 : GTECH_NAND2 port map( A => n28, B => n43, Z => SUM_4_port);
   U44 : GTECH_NAND2 port map( A => A(4), B => n44, Z => n43);
   U45 : GTECH_NAND2 port map( A => n44, B => n46, Z => SUM_3_port);
   U46 : GTECH_NAND2 port map( A => A(3), B => n30, Z => n46);
   U47 : GTECH_NAND2 port map( A => n1, B => n47, Z => SUM_31_port);
   U48 : GTECH_NAND2 port map( A => A(31), B => n48, Z => n47);
   U49 : GTECH_NOR2 port map( A => n48, B => A(31), Z => n49);
   U50 : GTECH_NAND2 port map( A => n48, B => n50, Z => SUM_30_port);
   U51 : GTECH_NAND2 port map( A => A(30), B => n3, Z => n50);
   U52 : GTECH_NAND2 port map( A => n51, B => n2, Z => n48);
   U53 : GTECH_NAND2 port map( A => n30, B => n52, Z => SUM_2_port);
   U54 : GTECH_NAND2 port map( A => A(2), B => n53, Z => n52);
   U55 : GTECH_NAND2 port map( A => n3, B => n55, Z => SUM_29_port);
   U56 : GTECH_NAND2 port map( A => A(29), B => n4, Z => n55);
   U57 : GTECH_NOR2 port map( A => n4, B => A(29), Z => n51);
   U58 : GTECH_NAND2 port map( A => n4, B => n56, Z => SUM_28_port);
   U59 : GTECH_NAND2 port map( A => A(28), B => n57, Z => n56);
   U60 : GTECH_NOR2 port map( A => n57, B => A(28), Z => n58);
   U61 : GTECH_NAND2 port map( A => n57, B => n59, Z => SUM_27_port);
   U62 : GTECH_NAND2 port map( A => A(27), B => n6, Z => n59);
   U63 : GTECH_NAND2 port map( A => n60, B => n5, Z => n57);
   U64 : GTECH_NAND2 port map( A => n6, B => n61, Z => SUM_26_port);
   U65 : GTECH_NAND2 port map( A => A(26), B => n62, Z => n61);
   U66 : GTECH_NOR2 port map( A => n62, B => A(26), Z => n60);
   U67 : GTECH_NAND2 port map( A => n62, B => n63, Z => SUM_25_port);
   U68 : GTECH_NAND2 port map( A => A(25), B => n8, Z => n63);
   U69 : GTECH_NAND2 port map( A => n64, B => n7, Z => n62);
   U70 : GTECH_NAND2 port map( A => n8, B => n65, Z => SUM_24_port);
   U71 : GTECH_NAND2 port map( A => A(24), B => n66, Z => n65);
   U72 : GTECH_NOR2 port map( A => n66, B => A(24), Z => n64);
   U73 : GTECH_NAND2 port map( A => n66, B => n67, Z => SUM_23_port);
   U74 : GTECH_NAND2 port map( A => A(23), B => n10, Z => n67);
   U75 : GTECH_NAND2 port map( A => n68, B => n9, Z => n66);
   U76 : GTECH_NAND2 port map( A => n10, B => n69, Z => SUM_22_port);
   U77 : GTECH_NAND2 port map( A => A(22), B => n70, Z => n69);
   U78 : GTECH_NOR2 port map( A => n70, B => A(22), Z => n68);
   U79 : GTECH_NAND2 port map( A => n70, B => n71, Z => SUM_21_port);
   U80 : GTECH_NAND2 port map( A => A(21), B => n12, Z => n71);
   U81 : GTECH_NAND2 port map( A => n72, B => n11, Z => n70);
   U82 : GTECH_NAND2 port map( A => n12, B => n73, Z => SUM_20_port);
   U83 : GTECH_NAND2 port map( A => A(20), B => n74, Z => n73);
   U84 : GTECH_NOR2 port map( A => n74, B => A(20), Z => n72);
   U85 : GTECH_NAND2 port map( A => n53, B => n75, Z => SUM_1_port);
   U86 : GTECH_NAND2 port map( A => A(1), B => A(0), Z => n75);
   U87 : GTECH_NAND2 port map( A => n74, B => n76, Z => SUM_19_port);
   U88 : GTECH_NAND2 port map( A => A(19), B => n14, Z => n76);
   U89 : GTECH_NAND2 port map( A => n77, B => n13, Z => n74);
   U90 : GTECH_NAND2 port map( A => n14, B => n78, Z => SUM_18_port);
   U91 : GTECH_NAND2 port map( A => A(18), B => n79, Z => n78);
   U92 : GTECH_NOR2 port map( A => n79, B => A(18), Z => n77);
   U93 : GTECH_NAND2 port map( A => n79, B => n80, Z => SUM_17_port);
   U94 : GTECH_NAND2 port map( A => A(17), B => n16, Z => n80);
   U95 : GTECH_NAND2 port map( A => n81, B => n15, Z => n79);
   U96 : GTECH_NAND2 port map( A => n16, B => n82, Z => SUM_16_port);
   U97 : GTECH_NAND2 port map( A => A(16), B => n83, Z => n82);
   U98 : GTECH_NOR2 port map( A => n83, B => A(16), Z => n81);
   U99 : GTECH_NAND2 port map( A => n83, B => n84, Z => SUM_15_port);
   U100 : GTECH_NAND2 port map( A => A(15), B => n18, Z => n84);
   U101 : GTECH_NAND2 port map( A => n85, B => n17, Z => n83);
   U102 : GTECH_NAND2 port map( A => n18, B => n86, Z => SUM_14_port);
   U103 : GTECH_NAND2 port map( A => A(14), B => n87, Z => n86);
   U104 : GTECH_NOR2 port map( A => n87, B => A(14), Z => n85);
   U105 : GTECH_NAND2 port map( A => n87, B => n88, Z => SUM_13_port);
   U106 : GTECH_NAND2 port map( A => A(13), B => n20, Z => n88);
   U107 : GTECH_NAND2 port map( A => n89, B => n19, Z => n87);
   U108 : GTECH_NAND2 port map( A => n20, B => n90, Z => SUM_12_port);
   U109 : GTECH_NAND2 port map( A => A(12), B => n91, Z => n90);
   U110 : GTECH_NOR2 port map( A => n91, B => A(12), Z => n89);
   U111 : GTECH_NAND2 port map( A => n91, B => n92, Z => SUM_11_port);
   U112 : GTECH_NAND2 port map( A => A(11), B => n22, Z => n92);
   U113 : GTECH_NAND2 port map( A => n93, B => n21, Z => n91);
   U114 : GTECH_NAND2 port map( A => n22, B => n94, Z => SUM_10_port);
   U115 : GTECH_NAND2 port map( A => A(10), B => n33, Z => n94);
   U116 : GTECH_NOR2 port map( A => n33, B => A(10), Z => n93);
   U117 : GTECH_NAND2 port map( A => n37, B => n23, Z => n33);
   U118 : GTECH_NOR2 port map( A => n36, B => A(8), Z => n37);
   U119 : GTECH_NAND2 port map( A => n41, B => n25, Z => n36);
   U120 : GTECH_NOR2 port map( A => n40, B => A(6), Z => n41);
   U121 : GTECH_NAND2 port map( A => n45, B => n27, Z => n40);
   U122 : GTECH_NOR2 port map( A => n44, B => A(4), Z => n45);
   U123 : GTECH_NAND2 port map( A => n54, B => n29, Z => n44);
   U124 : GTECH_NOR2 port map( A => n53, B => A(2), Z => n54);
   U125 : GTECH_NAND2 port map( A => n31, B => SUM_0_port, Z => n53);

end SYN_rpl;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_mem_C.all;

entity mem_C_DW01_cmp2_5 is

   port( A, B : in std_logic_vector (32 downto 0);  LEQ, TC : in std_logic;  
         LT_LE, GE_GT : out std_logic);

end mem_C_DW01_cmp2_5;

architecture SYN_rpl of mem_C_DW01_cmp2_5 is

   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   signal n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16
      , n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, 
      n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45
      , n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, 
      n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71 : std_logic;

begin
   
   U1 : GTECH_NOT port map( A => n35, Z => n1);
   U2 : GTECH_NOT port map( A => B(1), Z => n2);
   U3 : GTECH_NOT port map( A => B(2), Z => n3);
   U4 : GTECH_NOT port map( A => B(3), Z => n4);
   U5 : GTECH_NOT port map( A => B(4), Z => n5);
   U6 : GTECH_NOT port map( A => B(5), Z => n6);
   U7 : GTECH_NOT port map( A => B(6), Z => n7);
   U8 : GTECH_NOT port map( A => B(7), Z => n8);
   U9 : GTECH_NOT port map( A => A(27), Z => n9);
   U10 : GTECH_NOT port map( A => n67, Z => n10);
   U11 : GTECH_NOT port map( A => n71, Z => n11);
   U12 : GTECH_NOT port map( A => n70, Z => n12);
   U13 : GTECH_NOT port map( A => A(14), Z => n13);
   U14 : GTECH_NOT port map( A => A(11), Z => n14);
   U15 : GTECH_NOT port map( A => A(6), Z => n15);
   U16 : GTECH_NOT port map( A => A(5), Z => n16);
   U17 : GTECH_NOT port map( A => A(4), Z => n17);
   U18 : GTECH_NOT port map( A => A(3), Z => n18);
   U19 : GTECH_NOT port map( A => A(2), Z => n19);
   U20 : GTECH_NOR2 port map( A => n20, B => n21, Z => LT_LE);
   U21 : GTECH_NAND2 port map( A => n22, B => n23, Z => n21);
   U22 : GTECH_NOR2 port map( A => n24, B => n25, Z => n23);
   U23 : GTECH_NAND2 port map( A => n26, B => n13, Z => n25);
   U24 : GTECH_NOR2 port map( A => A(16), B => A(15), Z => n26);
   U25 : GTECH_NAND2 port map( A => n27, B => n28, Z => n24);
   U26 : GTECH_NOR2 port map( A => A(20), B => A(19), Z => n28);
   U27 : GTECH_NOR2 port map( A => A(18), B => A(17), Z => n27);
   U28 : GTECH_NOR2 port map( A => n29, B => n30, Z => n22);
   U29 : GTECH_NAND2 port map( A => n31, B => n32, Z => n30);
   U30 : GTECH_NAND2 port map( A => A(7), B => n8, Z => n32);
   U31 : GTECH_NOR2 port map( A => A(10), B => n33, Z => n31);
   U32 : GTECH_NOR2 port map( A => n1, B => n34, Z => n33);
   U33 : GTECH_NOR2 port map( A => n8, B => A(7), Z => n34);
   U34 : GTECH_NOR2 port map( A => n36, B => n37, Z => n35);
   U35 : GTECH_NOR2 port map( A => n38, B => n39, Z => n37);
   U36 : GTECH_NAND2 port map( A => n40, B => n41, Z => n39);
   U37 : GTECH_NAND2 port map( A => n42, B => n43, Z => n41);
   U38 : GTECH_NAND2 port map( A => B(5), B => n16, Z => n43);
   U39 : GTECH_NOR2 port map( A => n44, B => n45, Z => n42);
   U40 : GTECH_NOR2 port map( A => n46, B => n47, Z => n45);
   U41 : GTECH_NAND2 port map( A => n48, B => n49, Z => n47);
   U42 : GTECH_NAND2 port map( A => n50, B => n51, Z => n49);
   U43 : GTECH_NAND2 port map( A => B(3), B => n18, Z => n51);
   U44 : GTECH_NOR2 port map( A => n52, B => n53, Z => n50);
   U45 : GTECH_NOR2 port map( A => n54, B => n55, Z => n53);
   U46 : GTECH_NAND2 port map( A => n56, B => n57, Z => n55);
   U47 : GTECH_NAND2 port map( A => n58, B => A(0), Z => n57);
   U48 : GTECH_NOR2 port map( A => B(0), B => n59, Z => n58);
   U49 : GTECH_NOR2 port map( A => A(1), B => n2, Z => n59);
   U50 : GTECH_NAND2 port map( A => A(1), B => n2, Z => n56);
   U51 : GTECH_NOR2 port map( A => B(2), B => n19, Z => n54);
   U52 : GTECH_NOR2 port map( A => A(2), B => n3, Z => n52);
   U53 : GTECH_NAND2 port map( A => A(3), B => n4, Z => n48);
   U54 : GTECH_NOR2 port map( A => B(4), B => n17, Z => n46);
   U55 : GTECH_NOR2 port map( A => A(4), B => n5, Z => n44);
   U56 : GTECH_NAND2 port map( A => A(5), B => n6, Z => n40);
   U57 : GTECH_NOR2 port map( A => B(6), B => n15, Z => n38);
   U58 : GTECH_NOR2 port map( A => A(6), B => n7, Z => n36);
   U59 : GTECH_NAND2 port map( A => n60, B => n14, Z => n29);
   U60 : GTECH_NOR2 port map( A => A(13), B => A(12), Z => n60);
   U61 : GTECH_NAND2 port map( A => n10, B => n61, Z => n20);
   U62 : GTECH_NOR2 port map( A => n62, B => n63, Z => n61);
   U63 : GTECH_NAND2 port map( A => n64, B => n9, Z => n63);
   U64 : GTECH_NOR2 port map( A => A(29), B => A(28), Z => n64);
   U65 : GTECH_NAND2 port map( A => n65, B => n66, Z => n62);
   U66 : GTECH_NOR2 port map( A => A(9), B => A(8), Z => n66);
   U67 : GTECH_NOR2 port map( A => A(31), B => A(30), Z => n65);
   U68 : GTECH_NAND2 port map( A => n68, B => n69, Z => n67);
   U69 : GTECH_NOR2 port map( A => n12, B => A(21), Z => n69);
   U70 : GTECH_NOR2 port map( A => A(23), B => A(22), Z => n70);
   U71 : GTECH_NOR2 port map( A => n11, B => A(24), Z => n68);
   U72 : GTECH_NOR2 port map( A => A(26), B => A(25), Z => n71);

end SYN_rpl;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_mem_C.all;

entity mem_C_DW01_add_4 is

   port( A, B : in std_logic_vector (27 downto 0);  CI : in std_logic;  SUM : 
         out std_logic_vector (27 downto 0);  CO : out std_logic);

end mem_C_DW01_add_4;

architecture SYN_rpl of mem_C_DW01_add_4 is

   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   signal SUM_27_port, SUM_26_port, SUM_25_port, SUM_24_port, SUM_23_port, 
      SUM_22_port, SUM_21_port, SUM_20_port, SUM_19_port, SUM_18_port, 
      SUM_17_port, SUM_16_port, SUM_15_port, SUM_14_port, SUM_13_port, 
      SUM_12_port, SUM_11_port, SUM_10_port, SUM_9_port, SUM_8_port, SUM_7_port
      , SUM_6_port, SUM_5_port, SUM_4_port, SUM_3_port, SUM_2_port, n1, n2, n3,
      n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19,
      n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34
      , n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47, n48, 
      n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61, n62, n63
      , n64, n65, n66, n67, n68, n69, n70, n71, n72, n73, n74, n75, n76, n77, 
      n78, n79, n80, n81, n82, n83, n84, n85, n86, n87, n88, n89, n90, n91, n92
      , n93, n94, n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105, 
      n106, n107, n108, n109, n110, n111, n112, n113, n114, n115, n116, n117, 
      n118, n119, n120, n121, n122, n123, n124, n125, n126, n127, n128 : 
      std_logic;

begin
   SUM <= ( SUM_27_port, SUM_26_port, SUM_25_port, SUM_24_port, SUM_23_port, 
      SUM_22_port, SUM_21_port, SUM_20_port, SUM_19_port, SUM_18_port, 
      SUM_17_port, SUM_16_port, SUM_15_port, SUM_14_port, SUM_13_port, 
      SUM_12_port, SUM_11_port, SUM_10_port, SUM_9_port, SUM_8_port, SUM_7_port
      , SUM_6_port, SUM_5_port, SUM_4_port, SUM_3_port, SUM_2_port, A(1), A(0) 
      );
   
   U1 : GTECH_NOT port map( A => n65, Z => n1);
   U2 : GTECH_NOT port map( A => n48, Z => n2);
   U3 : GTECH_NOT port map( A => n51, Z => n3);
   U4 : GTECH_NOT port map( A => n42, Z => n4);
   U5 : GTECH_NOT port map( A => n45, Z => n5);
   U6 : GTECH_NOT port map( A => n122, Z => n6);
   U7 : GTECH_NOT port map( A => n119, Z => n7);
   U8 : GTECH_NOT port map( A => n115, Z => n8);
   U9 : GTECH_NOT port map( A => n112, Z => n9);
   U10 : GTECH_NOT port map( A => n108, Z => n10);
   U11 : GTECH_NOT port map( A => n105, Z => n11);
   U12 : GTECH_NOT port map( A => n101, Z => n12);
   U13 : GTECH_NOT port map( A => n98, Z => n13);
   U14 : GTECH_NOT port map( A => n94, Z => n14);
   U15 : GTECH_NOT port map( A => n91, Z => n15);
   U16 : GTECH_NOT port map( A => n87, Z => n16);
   U17 : GTECH_NOT port map( A => n84, Z => n17);
   U18 : GTECH_NOT port map( A => n80, Z => n18);
   U19 : GTECH_NOT port map( A => n77, Z => n19);
   U20 : GTECH_NOT port map( A => n73, Z => n20);
   U21 : GTECH_NOT port map( A => n70, Z => n21);
   U22 : GTECH_NOT port map( A => n66, Z => n22);
   U23 : GTECH_NOT port map( A => n68, Z => n23);
   U24 : GTECH_NOT port map( A => n55, Z => n24);
   U25 : GTECH_NOT port map( A => n54, Z => n25);
   U26 : GTECH_NOT port map( A => B(2), Z => n26);
   U27 : GTECH_NOT port map( A => n60, Z => n27);
   U28 : GTECH_NOT port map( A => A(24), Z => n28);
   U29 : GTECH_NOT port map( A => A(2), Z => n29);
   U30 : GTECH_NOT port map( A => A(4), Z => n30);
   U31 : GTECH_NOT port map( A => A(6), Z => n31);
   U32 : GTECH_NOT port map( A => A(8), Z => n32);
   U33 : GTECH_NOT port map( A => A(10), Z => n33);
   U34 : GTECH_NOT port map( A => A(12), Z => n34);
   U35 : GTECH_NOT port map( A => A(14), Z => n35);
   U36 : GTECH_NOT port map( A => A(16), Z => n36);
   U37 : GTECH_NOT port map( A => A(18), Z => n37);
   U38 : GTECH_NOT port map( A => A(20), Z => n38);
   U39 : GTECH_NOT port map( A => A(22), Z => n39);
   U40 : GTECH_NAND2 port map( A => n4, B => n40, Z => SUM_9_port);
   U41 : GTECH_NAND2 port map( A => A(9), B => n41, Z => n40);
   U42 : GTECH_NOR2 port map( A => n41, B => A(9), Z => n42);
   U43 : GTECH_NAND2 port map( A => A(8), B => n5, Z => n41);
   U44 : GTECH_NAND2 port map( A => n43, B => n44, Z => SUM_8_port);
   U45 : GTECH_NAND2 port map( A => A(8), B => n45, Z => n44);
   U46 : GTECH_NAND2 port map( A => n5, B => n32, Z => n43);
   U47 : GTECH_NAND2 port map( A => n2, B => n46, Z => SUM_7_port);
   U48 : GTECH_NAND2 port map( A => A(7), B => n47, Z => n46);
   U49 : GTECH_NOR2 port map( A => n47, B => A(7), Z => n48);
   U50 : GTECH_NAND2 port map( A => A(6), B => n3, Z => n47);
   U51 : GTECH_NAND2 port map( A => n49, B => n50, Z => SUM_6_port);
   U52 : GTECH_NAND2 port map( A => A(6), B => n51, Z => n50);
   U53 : GTECH_NAND2 port map( A => n3, B => n31, Z => n49);
   U54 : GTECH_NAND2 port map( A => n25, B => n52, Z => SUM_5_port);
   U55 : GTECH_NAND2 port map( A => A(5), B => n53, Z => n52);
   U56 : GTECH_NOR2 port map( A => n53, B => A(5), Z => n54);
   U57 : GTECH_NAND2 port map( A => A(4), B => n55, Z => n53);
   U58 : GTECH_NAND2 port map( A => n56, B => n57, Z => SUM_4_port);
   U59 : GTECH_NAND2 port map( A => A(4), B => n24, Z => n57);
   U60 : GTECH_NAND2 port map( A => n55, B => n30, Z => n56);
   U61 : GTECH_NAND2 port map( A => n27, B => n58, Z => SUM_3_port);
   U62 : GTECH_NAND2 port map( A => A(3), B => n59, Z => n58);
   U63 : GTECH_NOR2 port map( A => n59, B => A(3), Z => n60);
   U64 : GTECH_NAND2 port map( A => B(2), B => A(2), Z => n59);
   U65 : GTECH_NAND2 port map( A => n61, B => n62, Z => SUM_2_port);
   U66 : GTECH_NAND2 port map( A => B(2), B => n29, Z => n62);
   U67 : GTECH_NAND2 port map( A => A(2), B => n26, Z => n61);
   U68 : GTECH_NAND2 port map( A => n1, B => n63, Z => SUM_27_port);
   U69 : GTECH_NAND2 port map( A => A(27), B => n64, Z => n63);
   U70 : GTECH_NOR2 port map( A => n64, B => A(27), Z => n65);
   U71 : GTECH_NAND2 port map( A => A(26), B => n22, Z => n64);
   U72 : GTECH_NAND2 port map( A => n23, B => n67, Z => SUM_26_port);
   U73 : GTECH_NAND2 port map( A => A(26), B => n66, Z => n67);
   U74 : GTECH_NOR2 port map( A => n66, B => A(26), Z => n68);
   U75 : GTECH_NAND2 port map( A => n69, B => A(25), Z => n66);
   U76 : GTECH_NOR2 port map( A => n70, B => n28, Z => n69);
   U77 : GTECH_NAND2 port map( A => n20, B => n71, Z => SUM_25_port);
   U78 : GTECH_NAND2 port map( A => A(25), B => n72, Z => n71);
   U79 : GTECH_NOR2 port map( A => n72, B => A(25), Z => n73);
   U80 : GTECH_NAND2 port map( A => A(24), B => n21, Z => n72);
   U81 : GTECH_NAND2 port map( A => n74, B => n75, Z => SUM_24_port);
   U82 : GTECH_NAND2 port map( A => A(24), B => n70, Z => n75);
   U83 : GTECH_NAND2 port map( A => n21, B => n28, Z => n74);
   U84 : GTECH_NAND2 port map( A => n76, B => A(23), Z => n70);
   U85 : GTECH_NOR2 port map( A => n77, B => n39, Z => n76);
   U86 : GTECH_NAND2 port map( A => n18, B => n78, Z => SUM_23_port);
   U87 : GTECH_NAND2 port map( A => A(23), B => n79, Z => n78);
   U88 : GTECH_NOR2 port map( A => n79, B => A(23), Z => n80);
   U89 : GTECH_NAND2 port map( A => A(22), B => n19, Z => n79);
   U90 : GTECH_NAND2 port map( A => n81, B => n82, Z => SUM_22_port);
   U91 : GTECH_NAND2 port map( A => A(22), B => n77, Z => n82);
   U92 : GTECH_NAND2 port map( A => n19, B => n39, Z => n81);
   U93 : GTECH_NAND2 port map( A => n83, B => A(21), Z => n77);
   U94 : GTECH_NOR2 port map( A => n84, B => n38, Z => n83);
   U95 : GTECH_NAND2 port map( A => n16, B => n85, Z => SUM_21_port);
   U96 : GTECH_NAND2 port map( A => A(21), B => n86, Z => n85);
   U97 : GTECH_NOR2 port map( A => n86, B => A(21), Z => n87);
   U98 : GTECH_NAND2 port map( A => A(20), B => n17, Z => n86);
   U99 : GTECH_NAND2 port map( A => n88, B => n89, Z => SUM_20_port);
   U100 : GTECH_NAND2 port map( A => A(20), B => n84, Z => n89);
   U101 : GTECH_NAND2 port map( A => n17, B => n38, Z => n88);
   U102 : GTECH_NAND2 port map( A => n90, B => A(19), Z => n84);
   U103 : GTECH_NOR2 port map( A => n91, B => n37, Z => n90);
   U104 : GTECH_NAND2 port map( A => n14, B => n92, Z => SUM_19_port);
   U105 : GTECH_NAND2 port map( A => A(19), B => n93, Z => n92);
   U106 : GTECH_NOR2 port map( A => n93, B => A(19), Z => n94);
   U107 : GTECH_NAND2 port map( A => A(18), B => n15, Z => n93);
   U108 : GTECH_NAND2 port map( A => n95, B => n96, Z => SUM_18_port);
   U109 : GTECH_NAND2 port map( A => A(18), B => n91, Z => n96);
   U110 : GTECH_NAND2 port map( A => n15, B => n37, Z => n95);
   U111 : GTECH_NAND2 port map( A => n97, B => A(17), Z => n91);
   U112 : GTECH_NOR2 port map( A => n98, B => n36, Z => n97);
   U113 : GTECH_NAND2 port map( A => n12, B => n99, Z => SUM_17_port);
   U114 : GTECH_NAND2 port map( A => A(17), B => n100, Z => n99);
   U115 : GTECH_NOR2 port map( A => n100, B => A(17), Z => n101);
   U116 : GTECH_NAND2 port map( A => A(16), B => n13, Z => n100);
   U117 : GTECH_NAND2 port map( A => n102, B => n103, Z => SUM_16_port);
   U118 : GTECH_NAND2 port map( A => A(16), B => n98, Z => n103);
   U119 : GTECH_NAND2 port map( A => n13, B => n36, Z => n102);
   U120 : GTECH_NAND2 port map( A => n104, B => A(15), Z => n98);
   U121 : GTECH_NOR2 port map( A => n105, B => n35, Z => n104);
   U122 : GTECH_NAND2 port map( A => n10, B => n106, Z => SUM_15_port);
   U123 : GTECH_NAND2 port map( A => A(15), B => n107, Z => n106);
   U124 : GTECH_NOR2 port map( A => n107, B => A(15), Z => n108);
   U125 : GTECH_NAND2 port map( A => A(14), B => n11, Z => n107);
   U126 : GTECH_NAND2 port map( A => n109, B => n110, Z => SUM_14_port);
   U127 : GTECH_NAND2 port map( A => A(14), B => n105, Z => n110);
   U128 : GTECH_NAND2 port map( A => n11, B => n35, Z => n109);
   U129 : GTECH_NAND2 port map( A => n111, B => A(13), Z => n105);
   U130 : GTECH_NOR2 port map( A => n112, B => n34, Z => n111);
   U131 : GTECH_NAND2 port map( A => n8, B => n113, Z => SUM_13_port);
   U132 : GTECH_NAND2 port map( A => A(13), B => n114, Z => n113);
   U133 : GTECH_NOR2 port map( A => n114, B => A(13), Z => n115);
   U134 : GTECH_NAND2 port map( A => A(12), B => n9, Z => n114);
   U135 : GTECH_NAND2 port map( A => n116, B => n117, Z => SUM_12_port);
   U136 : GTECH_NAND2 port map( A => A(12), B => n112, Z => n117);
   U137 : GTECH_NAND2 port map( A => n9, B => n34, Z => n116);
   U138 : GTECH_NAND2 port map( A => n118, B => A(11), Z => n112);
   U139 : GTECH_NOR2 port map( A => n119, B => n33, Z => n118);
   U140 : GTECH_NAND2 port map( A => n6, B => n120, Z => SUM_11_port);
   U141 : GTECH_NAND2 port map( A => A(11), B => n121, Z => n120);
   U142 : GTECH_NOR2 port map( A => n121, B => A(11), Z => n122);
   U143 : GTECH_NAND2 port map( A => A(10), B => n7, Z => n121);
   U144 : GTECH_NAND2 port map( A => n123, B => n124, Z => SUM_10_port);
   U145 : GTECH_NAND2 port map( A => A(10), B => n119, Z => n124);
   U146 : GTECH_NAND2 port map( A => n7, B => n33, Z => n123);
   U147 : GTECH_NAND2 port map( A => n125, B => A(9), Z => n119);
   U148 : GTECH_NOR2 port map( A => n45, B => n32, Z => n125);
   U149 : GTECH_NAND2 port map( A => n126, B => A(7), Z => n45);
   U150 : GTECH_NOR2 port map( A => n51, B => n31, Z => n126);
   U151 : GTECH_NAND2 port map( A => n127, B => A(5), Z => n51);
   U152 : GTECH_NOR2 port map( A => n24, B => n30, Z => n127);
   U153 : GTECH_NOR2 port map( A => n128, B => n26, Z => n55);
   U154 : GTECH_NAND2 port map( A => A(2), B => A(3), Z => n128);

end SYN_rpl;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_mem_C.all;

entity mem_C_DW01_add_3 is

   port( A, B : in std_logic_vector (31 downto 0);  CI : in std_logic;  SUM : 
         out std_logic_vector (31 downto 0);  CO : out std_logic);

end mem_C_DW01_add_3;

architecture SYN_rpl of mem_C_DW01_add_3 is

   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   signal n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, 
      n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31
      , n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, 
      n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60
      , n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n73, n74, 
      n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86, n87, n88, n89
      , n90, n91, n92, n93, n94, n95, n96, n97, n98, n99, n100, n101, n102, 
      n103, n104, n105, n106, n107, n108, n109, n110, n111, n112, n113, n114, 
      n115, n116, n117, n118, n119, n120, n121, n122, n123, n124, n125, n126, 
      n127, n128, n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, 
      n139, n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150 : 
      std_logic;

begin
   
   U1 : GTECH_NOT port map( A => A(0), Z => SUM(0));
   U2 : GTECH_NOT port map( A => n113, Z => n2);
   U3 : GTECH_NOT port map( A => n59, Z => n3);
   U4 : GTECH_NOT port map( A => n62, Z => n4);
   U5 : GTECH_NOT port map( A => n53, Z => n5);
   U6 : GTECH_NOT port map( A => n56, Z => n6);
   U7 : GTECH_NOT port map( A => n147, Z => n7);
   U8 : GTECH_NOT port map( A => n50, Z => n8);
   U9 : GTECH_NOT port map( A => n141, Z => n9);
   U10 : GTECH_NOT port map( A => n138, Z => n10);
   U11 : GTECH_NOT port map( A => n134, Z => n11);
   U12 : GTECH_NOT port map( A => n131, Z => n12);
   U13 : GTECH_NOT port map( A => n127, Z => n13);
   U14 : GTECH_NOT port map( A => n124, Z => n14);
   U15 : GTECH_NOT port map( A => n120, Z => n15);
   U16 : GTECH_NOT port map( A => n117, Z => n16);
   U17 : GTECH_NOT port map( A => n111, Z => n17);
   U18 : GTECH_NOT port map( A => n108, Z => n18);
   U19 : GTECH_NOT port map( A => n104, Z => n19);
   U20 : GTECH_NOT port map( A => n101, Z => n20);
   U21 : GTECH_NOT port map( A => n97, Z => n21);
   U22 : GTECH_NOT port map( A => n94, Z => n22);
   U23 : GTECH_NOT port map( A => n90, Z => n23);
   U24 : GTECH_NOT port map( A => n87, Z => n24);
   U25 : GTECH_NOT port map( A => n83, Z => n25);
   U26 : GTECH_NOT port map( A => n80, Z => n26);
   U27 : GTECH_NOT port map( A => n78, Z => n27);
   U28 : GTECH_NOT port map( A => n72, Z => n28);
   U29 : GTECH_NOT port map( A => n71, Z => n29);
   U30 : GTECH_NOT port map( A => n66, Z => n30);
   U31 : GTECH_NOT port map( A => n65, Z => n31);
   U32 : GTECH_NOT port map( A => A(15), Z => n32);
   U33 : GTECH_NOT port map( A => A(2), Z => n33);
   U34 : GTECH_NOT port map( A => A(3), Z => n34);
   U35 : GTECH_NOT port map( A => A(5), Z => n35);
   U36 : GTECH_NOT port map( A => A(7), Z => n36);
   U37 : GTECH_NOT port map( A => A(9), Z => n37);
   U38 : GTECH_NOT port map( A => A(11), Z => n38);
   U39 : GTECH_NOT port map( A => A(13), Z => n39);
   U40 : GTECH_NOT port map( A => A(17), Z => n40);
   U41 : GTECH_NOT port map( A => A(19), Z => n41);
   U42 : GTECH_NOT port map( A => A(21), Z => n42);
   U43 : GTECH_NOT port map( A => A(23), Z => n43);
   U44 : GTECH_NOT port map( A => A(25), Z => n44);
   U45 : GTECH_NOT port map( A => A(27), Z => n45);
   U46 : GTECH_NOT port map( A => A(29), Z => n46);
   U47 : GTECH_NOT port map( A => A(30), Z => n47);
   U48 : GTECH_NAND2 port map( A => n48, B => n49, Z => SUM(9));
   U49 : GTECH_NAND2 port map( A => A(9), B => n50, Z => n49);
   U50 : GTECH_NAND2 port map( A => n8, B => n37, Z => n48);
   U51 : GTECH_NAND2 port map( A => n5, B => n51, Z => SUM(8));
   U52 : GTECH_NAND2 port map( A => A(8), B => n52, Z => n51);
   U53 : GTECH_NOR2 port map( A => n52, B => A(8), Z => n53);
   U54 : GTECH_NAND2 port map( A => A(7), B => n6, Z => n52);
   U55 : GTECH_NAND2 port map( A => n54, B => n55, Z => SUM(7));
   U56 : GTECH_NAND2 port map( A => A(7), B => n56, Z => n55);
   U57 : GTECH_NAND2 port map( A => n6, B => n36, Z => n54);
   U58 : GTECH_NAND2 port map( A => n3, B => n57, Z => SUM(6));
   U59 : GTECH_NAND2 port map( A => A(6), B => n58, Z => n57);
   U60 : GTECH_NOR2 port map( A => n58, B => A(6), Z => n59);
   U61 : GTECH_NAND2 port map( A => A(5), B => n4, Z => n58);
   U62 : GTECH_NAND2 port map( A => n60, B => n61, Z => SUM(5));
   U63 : GTECH_NAND2 port map( A => A(5), B => n62, Z => n61);
   U64 : GTECH_NAND2 port map( A => n4, B => n35, Z => n60);
   U65 : GTECH_NAND2 port map( A => n31, B => n63, Z => SUM(4));
   U66 : GTECH_NAND2 port map( A => A(4), B => n64, Z => n63);
   U67 : GTECH_NOR2 port map( A => n64, B => A(4), Z => n65);
   U68 : GTECH_NAND2 port map( A => A(3), B => n66, Z => n64);
   U69 : GTECH_NAND2 port map( A => n67, B => n68, Z => SUM(3));
   U70 : GTECH_NAND2 port map( A => A(3), B => n30, Z => n68);
   U71 : GTECH_NAND2 port map( A => n66, B => n34, Z => n67);
   U72 : GTECH_NAND2 port map( A => n29, B => n69, Z => SUM(31));
   U73 : GTECH_NAND2 port map( A => A(31), B => n70, Z => n69);
   U74 : GTECH_NOR2 port map( A => n70, B => A(31), Z => n71);
   U75 : GTECH_NAND2 port map( A => A(30), B => n72, Z => n70);
   U76 : GTECH_NAND2 port map( A => n73, B => n74, Z => SUM(30));
   U77 : GTECH_NAND2 port map( A => A(30), B => n28, Z => n74);
   U78 : GTECH_NAND2 port map( A => n72, B => n47, Z => n73);
   U79 : GTECH_NOR2 port map( A => n46, B => n75, Z => n72);
   U80 : GTECH_NOR2 port map( A => n66, B => n76, Z => SUM(2));
   U81 : GTECH_NOR2 port map( A => A(2), B => n2, Z => n76);
   U82 : GTECH_NAND2 port map( A => n27, B => n77, Z => SUM(29));
   U83 : GTECH_NAND2 port map( A => A(29), B => n75, Z => n77);
   U84 : GTECH_NOR2 port map( A => n75, B => A(29), Z => n78);
   U85 : GTECH_NAND2 port map( A => n79, B => A(28), Z => n75);
   U86 : GTECH_NOR2 port map( A => n80, B => n45, Z => n79);
   U87 : GTECH_NAND2 port map( A => n25, B => n81, Z => SUM(28));
   U88 : GTECH_NAND2 port map( A => A(28), B => n82, Z => n81);
   U89 : GTECH_NOR2 port map( A => n82, B => A(28), Z => n83);
   U90 : GTECH_NAND2 port map( A => A(27), B => n26, Z => n82);
   U91 : GTECH_NAND2 port map( A => n84, B => n85, Z => SUM(27));
   U92 : GTECH_NAND2 port map( A => A(27), B => n80, Z => n85);
   U93 : GTECH_NAND2 port map( A => n26, B => n45, Z => n84);
   U94 : GTECH_NAND2 port map( A => n86, B => A(26), Z => n80);
   U95 : GTECH_NOR2 port map( A => n87, B => n44, Z => n86);
   U96 : GTECH_NAND2 port map( A => n23, B => n88, Z => SUM(26));
   U97 : GTECH_NAND2 port map( A => A(26), B => n89, Z => n88);
   U98 : GTECH_NOR2 port map( A => n89, B => A(26), Z => n90);
   U99 : GTECH_NAND2 port map( A => A(25), B => n24, Z => n89);
   U100 : GTECH_NAND2 port map( A => n91, B => n92, Z => SUM(25));
   U101 : GTECH_NAND2 port map( A => A(25), B => n87, Z => n92);
   U102 : GTECH_NAND2 port map( A => n24, B => n44, Z => n91);
   U103 : GTECH_NAND2 port map( A => n93, B => A(24), Z => n87);
   U104 : GTECH_NOR2 port map( A => n94, B => n43, Z => n93);
   U105 : GTECH_NAND2 port map( A => n21, B => n95, Z => SUM(24));
   U106 : GTECH_NAND2 port map( A => A(24), B => n96, Z => n95);
   U107 : GTECH_NOR2 port map( A => n96, B => A(24), Z => n97);
   U108 : GTECH_NAND2 port map( A => A(23), B => n22, Z => n96);
   U109 : GTECH_NAND2 port map( A => n98, B => n99, Z => SUM(23));
   U110 : GTECH_NAND2 port map( A => A(23), B => n94, Z => n99);
   U111 : GTECH_NAND2 port map( A => n22, B => n43, Z => n98);
   U112 : GTECH_NAND2 port map( A => n100, B => A(22), Z => n94);
   U113 : GTECH_NOR2 port map( A => n101, B => n42, Z => n100);
   U114 : GTECH_NAND2 port map( A => n19, B => n102, Z => SUM(22));
   U115 : GTECH_NAND2 port map( A => A(22), B => n103, Z => n102);
   U116 : GTECH_NOR2 port map( A => n103, B => A(22), Z => n104);
   U117 : GTECH_NAND2 port map( A => A(21), B => n20, Z => n103);
   U118 : GTECH_NAND2 port map( A => n105, B => n106, Z => SUM(21));
   U119 : GTECH_NAND2 port map( A => A(21), B => n101, Z => n106);
   U120 : GTECH_NAND2 port map( A => n20, B => n42, Z => n105);
   U121 : GTECH_NAND2 port map( A => n107, B => A(20), Z => n101);
   U122 : GTECH_NOR2 port map( A => n108, B => n41, Z => n107);
   U123 : GTECH_NAND2 port map( A => n17, B => n109, Z => SUM(20));
   U124 : GTECH_NAND2 port map( A => A(20), B => n110, Z => n109);
   U125 : GTECH_NOR2 port map( A => n110, B => A(20), Z => n111);
   U126 : GTECH_NAND2 port map( A => A(19), B => n18, Z => n110);
   U127 : GTECH_NAND2 port map( A => n2, B => n112, Z => SUM(1));
   U128 : GTECH_NAND2 port map( A => A(1), B => A(0), Z => n112);
   U129 : GTECH_NAND2 port map( A => n114, B => n115, Z => SUM(19));
   U130 : GTECH_NAND2 port map( A => A(19), B => n108, Z => n115);
   U131 : GTECH_NAND2 port map( A => n18, B => n41, Z => n114);
   U132 : GTECH_NAND2 port map( A => n116, B => A(18), Z => n108);
   U133 : GTECH_NOR2 port map( A => n117, B => n40, Z => n116);
   U134 : GTECH_NAND2 port map( A => n15, B => n118, Z => SUM(18));
   U135 : GTECH_NAND2 port map( A => A(18), B => n119, Z => n118);
   U136 : GTECH_NOR2 port map( A => n119, B => A(18), Z => n120);
   U137 : GTECH_NAND2 port map( A => A(17), B => n16, Z => n119);
   U138 : GTECH_NAND2 port map( A => n121, B => n122, Z => SUM(17));
   U139 : GTECH_NAND2 port map( A => A(17), B => n117, Z => n122);
   U140 : GTECH_NAND2 port map( A => n16, B => n40, Z => n121);
   U141 : GTECH_NAND2 port map( A => n123, B => A(16), Z => n117);
   U142 : GTECH_NOR2 port map( A => n124, B => n32, Z => n123);
   U143 : GTECH_NAND2 port map( A => n13, B => n125, Z => SUM(16));
   U144 : GTECH_NAND2 port map( A => A(16), B => n126, Z => n125);
   U145 : GTECH_NOR2 port map( A => n126, B => A(16), Z => n127);
   U146 : GTECH_NAND2 port map( A => A(15), B => n14, Z => n126);
   U147 : GTECH_NAND2 port map( A => n128, B => n129, Z => SUM(15));
   U148 : GTECH_NAND2 port map( A => A(15), B => n124, Z => n129);
   U149 : GTECH_NAND2 port map( A => n14, B => n32, Z => n128);
   U150 : GTECH_NAND2 port map( A => n130, B => A(14), Z => n124);
   U151 : GTECH_NOR2 port map( A => n131, B => n39, Z => n130);
   U152 : GTECH_NAND2 port map( A => n11, B => n132, Z => SUM(14));
   U153 : GTECH_NAND2 port map( A => A(14), B => n133, Z => n132);
   U154 : GTECH_NOR2 port map( A => n133, B => A(14), Z => n134);
   U155 : GTECH_NAND2 port map( A => A(13), B => n12, Z => n133);
   U156 : GTECH_NAND2 port map( A => n135, B => n136, Z => SUM(13));
   U157 : GTECH_NAND2 port map( A => A(13), B => n131, Z => n136);
   U158 : GTECH_NAND2 port map( A => n12, B => n39, Z => n135);
   U159 : GTECH_NAND2 port map( A => n137, B => A(12), Z => n131);
   U160 : GTECH_NOR2 port map( A => n138, B => n38, Z => n137);
   U161 : GTECH_NAND2 port map( A => n9, B => n139, Z => SUM(12));
   U162 : GTECH_NAND2 port map( A => A(12), B => n140, Z => n139);
   U163 : GTECH_NOR2 port map( A => n140, B => A(12), Z => n141);
   U164 : GTECH_NAND2 port map( A => A(11), B => n10, Z => n140);
   U165 : GTECH_NAND2 port map( A => n142, B => n143, Z => SUM(11));
   U166 : GTECH_NAND2 port map( A => A(11), B => n138, Z => n143);
   U167 : GTECH_NAND2 port map( A => n10, B => n38, Z => n142);
   U168 : GTECH_NAND2 port map( A => n144, B => A(10), Z => n138);
   U169 : GTECH_NOR2 port map( A => n37, B => n50, Z => n144);
   U170 : GTECH_NAND2 port map( A => n7, B => n145, Z => SUM(10));
   U171 : GTECH_NAND2 port map( A => A(10), B => n146, Z => n145);
   U172 : GTECH_NOR2 port map( A => n146, B => A(10), Z => n147);
   U173 : GTECH_NAND2 port map( A => n8, B => A(9), Z => n146);
   U174 : GTECH_NAND2 port map( A => n148, B => A(8), Z => n50);
   U175 : GTECH_NOR2 port map( A => n56, B => n36, Z => n148);
   U176 : GTECH_NAND2 port map( A => n149, B => A(6), Z => n56);
   U177 : GTECH_NOR2 port map( A => n62, B => n35, Z => n149);
   U178 : GTECH_NAND2 port map( A => n150, B => A(4), Z => n62);
   U179 : GTECH_NOR2 port map( A => n30, B => n34, Z => n150);
   U180 : GTECH_NOR2 port map( A => n113, B => n33, Z => n66);
   U181 : GTECH_NOR2 port map( A => A(1), B => A(0), Z => n113);

end SYN_rpl;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_mem_C.all;

entity mem_C_DW02_mult_0 is

   port( A : in std_logic_vector (31 downto 0);  B, TC : in std_logic;  PRODUCT
         : out std_logic_vector (32 downto 0));

end mem_C_DW02_mult_0;

architecture SYN_csa of mem_C_DW02_mult_0 is

   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   signal PROD_not_31_port, PROD_not_30_port, PROD_not_29_port, 
      PROD_not_28_port, PROD_not_27_port, PROD_not_26_port, PROD_not_25_port, 
      PROD_not_24_port, PROD_not_23_port, PROD_not_22_port, PROD_not_21_port, 
      PROD_not_20_port, PROD_not_19_port, PROD_not_18_port, PROD_not_17_port, 
      PROD_not_16_port, PROD_not_15_port, PROD_not_14_port, PROD_not_13_port, 
      PROD_not_12_port, PROD_not_11_port, PROD_not_10_port, PROD_not_9_port, 
      PROD_not_8_port, PROD_not_7_port, PROD_not_6_port, PROD_not_5_port, 
      PROD_not_4_port, PROD_not_3_port, PROD_not_2_port, PROD_not_1_port, 
      PROD_not_0_port : std_logic;

begin
   
   U2 : GTECH_NOT port map( A => PROD_not_9_port, Z => PRODUCT(9));
   U3 : GTECH_NOT port map( A => PROD_not_8_port, Z => PRODUCT(8));
   U4 : GTECH_NOT port map( A => PROD_not_7_port, Z => PRODUCT(7));
   U5 : GTECH_NOT port map( A => PROD_not_6_port, Z => PRODUCT(6));
   U6 : GTECH_NOT port map( A => PROD_not_5_port, Z => PRODUCT(5));
   U7 : GTECH_NOT port map( A => PROD_not_4_port, Z => PRODUCT(4));
   U8 : GTECH_NOT port map( A => PROD_not_3_port, Z => PRODUCT(3));
   U9 : GTECH_NOT port map( A => PROD_not_31_port, Z => PRODUCT(31));
   U10 : GTECH_NOT port map( A => PROD_not_30_port, Z => PRODUCT(30));
   U11 : GTECH_NOT port map( A => PROD_not_2_port, Z => PRODUCT(2));
   U12 : GTECH_NOT port map( A => PROD_not_29_port, Z => PRODUCT(29));
   U13 : GTECH_NOT port map( A => PROD_not_28_port, Z => PRODUCT(28));
   U14 : GTECH_NOT port map( A => PROD_not_27_port, Z => PRODUCT(27));
   U15 : GTECH_NOT port map( A => PROD_not_26_port, Z => PRODUCT(26));
   U16 : GTECH_NOT port map( A => PROD_not_25_port, Z => PRODUCT(25));
   U17 : GTECH_NOT port map( A => PROD_not_24_port, Z => PRODUCT(24));
   U18 : GTECH_NOT port map( A => PROD_not_23_port, Z => PRODUCT(23));
   U19 : GTECH_NOT port map( A => PROD_not_22_port, Z => PRODUCT(22));
   U20 : GTECH_NOT port map( A => PROD_not_21_port, Z => PRODUCT(21));
   U21 : GTECH_NOT port map( A => PROD_not_20_port, Z => PRODUCT(20));
   U22 : GTECH_NOT port map( A => PROD_not_1_port, Z => PRODUCT(1));
   U23 : GTECH_NOT port map( A => PROD_not_19_port, Z => PRODUCT(19));
   U24 : GTECH_NOT port map( A => PROD_not_18_port, Z => PRODUCT(18));
   U25 : GTECH_NOT port map( A => PROD_not_17_port, Z => PRODUCT(17));
   U26 : GTECH_NOT port map( A => PROD_not_16_port, Z => PRODUCT(16));
   U27 : GTECH_NOT port map( A => PROD_not_15_port, Z => PRODUCT(15));
   U28 : GTECH_NOT port map( A => PROD_not_14_port, Z => PRODUCT(14));
   U29 : GTECH_NOT port map( A => PROD_not_13_port, Z => PRODUCT(13));
   U30 : GTECH_NOT port map( A => PROD_not_12_port, Z => PRODUCT(12));
   U31 : GTECH_NOT port map( A => PROD_not_11_port, Z => PRODUCT(11));
   U32 : GTECH_NOT port map( A => PROD_not_10_port, Z => PRODUCT(10));
   U33 : GTECH_NOT port map( A => PROD_not_0_port, Z => PRODUCT(0));
   U34 : GTECH_NAND2 port map( A => B, B => A(9), Z => PROD_not_9_port);
   U35 : GTECH_NAND2 port map( A => A(8), B => B, Z => PROD_not_8_port);
   U36 : GTECH_NAND2 port map( A => A(7), B => B, Z => PROD_not_7_port);
   U37 : GTECH_NAND2 port map( A => A(6), B => B, Z => PROD_not_6_port);
   U38 : GTECH_NAND2 port map( A => A(5), B => B, Z => PROD_not_5_port);
   U39 : GTECH_NAND2 port map( A => A(4), B => B, Z => PROD_not_4_port);
   U40 : GTECH_NAND2 port map( A => A(3), B => B, Z => PROD_not_3_port);
   U41 : GTECH_NAND2 port map( A => A(31), B => B, Z => PROD_not_31_port);
   U42 : GTECH_NAND2 port map( A => A(30), B => B, Z => PROD_not_30_port);
   U43 : GTECH_NAND2 port map( A => A(2), B => B, Z => PROD_not_2_port);
   U44 : GTECH_NAND2 port map( A => A(29), B => B, Z => PROD_not_29_port);
   U45 : GTECH_NAND2 port map( A => A(28), B => B, Z => PROD_not_28_port);
   U46 : GTECH_NAND2 port map( A => A(27), B => B, Z => PROD_not_27_port);
   U47 : GTECH_NAND2 port map( A => A(26), B => B, Z => PROD_not_26_port);
   U48 : GTECH_NAND2 port map( A => A(25), B => B, Z => PROD_not_25_port);
   U49 : GTECH_NAND2 port map( A => A(24), B => B, Z => PROD_not_24_port);
   U50 : GTECH_NAND2 port map( A => A(23), B => B, Z => PROD_not_23_port);
   U51 : GTECH_NAND2 port map( A => A(22), B => B, Z => PROD_not_22_port);
   U52 : GTECH_NAND2 port map( A => A(21), B => B, Z => PROD_not_21_port);
   U53 : GTECH_NAND2 port map( A => A(20), B => B, Z => PROD_not_20_port);
   U54 : GTECH_NAND2 port map( A => A(1), B => B, Z => PROD_not_1_port);
   U55 : GTECH_NAND2 port map( A => A(19), B => B, Z => PROD_not_19_port);
   U56 : GTECH_NAND2 port map( A => A(18), B => B, Z => PROD_not_18_port);
   U57 : GTECH_NAND2 port map( A => A(17), B => B, Z => PROD_not_17_port);
   U58 : GTECH_NAND2 port map( A => A(16), B => B, Z => PROD_not_16_port);
   U59 : GTECH_NAND2 port map( A => A(15), B => B, Z => PROD_not_15_port);
   U60 : GTECH_NAND2 port map( A => A(14), B => B, Z => PROD_not_14_port);
   U61 : GTECH_NAND2 port map( A => A(13), B => B, Z => PROD_not_13_port);
   U62 : GTECH_NAND2 port map( A => A(12), B => B, Z => PROD_not_12_port);
   U63 : GTECH_NAND2 port map( A => A(11), B => B, Z => PROD_not_11_port);
   U64 : GTECH_NAND2 port map( A => A(10), B => B, Z => PROD_not_10_port);
   U65 : GTECH_NAND2 port map( A => A(0), B => B, Z => PROD_not_0_port);

end SYN_csa;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_mem_C.all;

entity mem_C_DW01_add_2 is

   port( A, B : in std_logic_vector (31 downto 0);  CI : in std_logic;  SUM : 
         out std_logic_vector (31 downto 0);  CO : out std_logic);

end mem_C_DW01_add_2;

architecture SYN_rpl of mem_C_DW01_add_2 is

   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   signal n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16
      , n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, 
      n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45
      , n46, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, 
      n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n73, n74, n75
      , n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86, n87, n88, n89, 
      n90, n91, n92, n93, n94, n95, n96, n97, n98, n99, n100, n101, n102, n103,
      n104, n105, n106, n107, n108, n109, n110, n111, n112, n113, n114, n115, 
      n116, n117, n118, n119, n120, n121, n122, n123, n124, n125, n126, n127, 
      n128, n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, n139, 
      n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150 : 
      std_logic;

begin
   
   U1 : GTECH_NOT port map( A => n141, Z => n1);
   U2 : GTECH_NOT port map( A => n138, Z => n2);
   U3 : GTECH_NOT port map( A => n134, Z => n3);
   U4 : GTECH_NOT port map( A => n131, Z => n4);
   U5 : GTECH_NOT port map( A => n127, Z => n5);
   U6 : GTECH_NOT port map( A => n124, Z => n6);
   U7 : GTECH_NOT port map( A => n120, Z => n7);
   U8 : GTECH_NOT port map( A => n117, Z => n8);
   U9 : GTECH_NOT port map( A => n111, Z => n9);
   U10 : GTECH_NOT port map( A => n108, Z => n10);
   U11 : GTECH_NOT port map( A => n104, Z => n11);
   U12 : GTECH_NOT port map( A => n101, Z => n12);
   U13 : GTECH_NOT port map( A => n97, Z => n13);
   U14 : GTECH_NOT port map( A => n94, Z => n14);
   U15 : GTECH_NOT port map( A => n90, Z => n15);
   U16 : GTECH_NOT port map( A => n87, Z => n16);
   U17 : GTECH_NOT port map( A => n83, Z => n17);
   U18 : GTECH_NOT port map( A => n80, Z => n18);
   U19 : GTECH_NOT port map( A => n78, Z => n19);
   U20 : GTECH_NOT port map( A => n72, Z => n20);
   U21 : GTECH_NOT port map( A => n71, Z => n21);
   U22 : GTECH_NOT port map( A => A(9), Z => n22);
   U23 : GTECH_NOT port map( A => n147, Z => n23);
   U24 : GTECH_NOT port map( A => n53, Z => n24);
   U25 : GTECH_NOT port map( A => n50, Z => n25);
   U26 : GTECH_NOT port map( A => A(7), Z => n26);
   U27 : GTECH_NOT port map( A => n59, Z => n27);
   U28 : GTECH_NOT port map( A => n56, Z => n28);
   U29 : GTECH_NOT port map( A => A(5), Z => n29);
   U30 : GTECH_NOT port map( A => n65, Z => n30);
   U31 : GTECH_NOT port map( A => n62, Z => n31);
   U32 : GTECH_NOT port map( A => A(3), Z => n32);
   U33 : GTECH_NOT port map( A => A(30), Z => n33);
   U34 : GTECH_NOT port map( A => n66, Z => n34);
   U35 : GTECH_NOT port map( A => A(2), Z => n35);
   U36 : GTECH_NOT port map( A => A(29), Z => n36);
   U37 : GTECH_NOT port map( A => A(27), Z => n37);
   U38 : GTECH_NOT port map( A => A(25), Z => n38);
   U39 : GTECH_NOT port map( A => A(23), Z => n39);
   U40 : GTECH_NOT port map( A => A(21), Z => n40);
   U41 : GTECH_NOT port map( A => n113, Z => n41);
   U42 : GTECH_NOT port map( A => A(19), Z => n42);
   U43 : GTECH_NOT port map( A => A(17), Z => n43);
   U44 : GTECH_NOT port map( A => A(15), Z => n44);
   U45 : GTECH_NOT port map( A => A(13), Z => n45);
   U46 : GTECH_NOT port map( A => A(11), Z => n46);
   U47 : GTECH_NOT port map( A => A(0), Z => SUM(0));
   U48 : GTECH_NAND2 port map( A => n48, B => n49, Z => SUM(9));
   U49 : GTECH_NAND2 port map( A => A(9), B => n50, Z => n49);
   U50 : GTECH_NAND2 port map( A => n25, B => n22, Z => n48);
   U51 : GTECH_NAND2 port map( A => n24, B => n51, Z => SUM(8));
   U52 : GTECH_NAND2 port map( A => A(8), B => n52, Z => n51);
   U53 : GTECH_NOR2 port map( A => n52, B => A(8), Z => n53);
   U54 : GTECH_NAND2 port map( A => A(7), B => n28, Z => n52);
   U55 : GTECH_NAND2 port map( A => n54, B => n55, Z => SUM(7));
   U56 : GTECH_NAND2 port map( A => A(7), B => n56, Z => n55);
   U57 : GTECH_NAND2 port map( A => n28, B => n26, Z => n54);
   U58 : GTECH_NAND2 port map( A => n27, B => n57, Z => SUM(6));
   U59 : GTECH_NAND2 port map( A => A(6), B => n58, Z => n57);
   U60 : GTECH_NOR2 port map( A => n58, B => A(6), Z => n59);
   U61 : GTECH_NAND2 port map( A => A(5), B => n31, Z => n58);
   U62 : GTECH_NAND2 port map( A => n60, B => n61, Z => SUM(5));
   U63 : GTECH_NAND2 port map( A => A(5), B => n62, Z => n61);
   U64 : GTECH_NAND2 port map( A => n31, B => n29, Z => n60);
   U65 : GTECH_NAND2 port map( A => n30, B => n63, Z => SUM(4));
   U66 : GTECH_NAND2 port map( A => A(4), B => n64, Z => n63);
   U67 : GTECH_NOR2 port map( A => n64, B => A(4), Z => n65);
   U68 : GTECH_NAND2 port map( A => A(3), B => n66, Z => n64);
   U69 : GTECH_NAND2 port map( A => n67, B => n68, Z => SUM(3));
   U70 : GTECH_NAND2 port map( A => A(3), B => n34, Z => n68);
   U71 : GTECH_NAND2 port map( A => n66, B => n32, Z => n67);
   U72 : GTECH_NAND2 port map( A => n21, B => n69, Z => SUM(31));
   U73 : GTECH_NAND2 port map( A => A(31), B => n70, Z => n69);
   U74 : GTECH_NOR2 port map( A => n70, B => A(31), Z => n71);
   U75 : GTECH_NAND2 port map( A => A(30), B => n72, Z => n70);
   U76 : GTECH_NAND2 port map( A => n73, B => n74, Z => SUM(30));
   U77 : GTECH_NAND2 port map( A => A(30), B => n20, Z => n74);
   U78 : GTECH_NAND2 port map( A => n72, B => n33, Z => n73);
   U79 : GTECH_NOR2 port map( A => n36, B => n75, Z => n72);
   U80 : GTECH_NOR2 port map( A => n66, B => n76, Z => SUM(2));
   U81 : GTECH_NOR2 port map( A => A(2), B => n41, Z => n76);
   U82 : GTECH_NAND2 port map( A => n19, B => n77, Z => SUM(29));
   U83 : GTECH_NAND2 port map( A => A(29), B => n75, Z => n77);
   U84 : GTECH_NOR2 port map( A => n75, B => A(29), Z => n78);
   U85 : GTECH_NAND2 port map( A => n79, B => A(28), Z => n75);
   U86 : GTECH_NOR2 port map( A => n80, B => n37, Z => n79);
   U87 : GTECH_NAND2 port map( A => n17, B => n81, Z => SUM(28));
   U88 : GTECH_NAND2 port map( A => A(28), B => n82, Z => n81);
   U89 : GTECH_NOR2 port map( A => n82, B => A(28), Z => n83);
   U90 : GTECH_NAND2 port map( A => A(27), B => n18, Z => n82);
   U91 : GTECH_NAND2 port map( A => n84, B => n85, Z => SUM(27));
   U92 : GTECH_NAND2 port map( A => A(27), B => n80, Z => n85);
   U93 : GTECH_NAND2 port map( A => n18, B => n37, Z => n84);
   U94 : GTECH_NAND2 port map( A => n86, B => A(26), Z => n80);
   U95 : GTECH_NOR2 port map( A => n87, B => n38, Z => n86);
   U96 : GTECH_NAND2 port map( A => n15, B => n88, Z => SUM(26));
   U97 : GTECH_NAND2 port map( A => A(26), B => n89, Z => n88);
   U98 : GTECH_NOR2 port map( A => n89, B => A(26), Z => n90);
   U99 : GTECH_NAND2 port map( A => A(25), B => n16, Z => n89);
   U100 : GTECH_NAND2 port map( A => n91, B => n92, Z => SUM(25));
   U101 : GTECH_NAND2 port map( A => A(25), B => n87, Z => n92);
   U102 : GTECH_NAND2 port map( A => n16, B => n38, Z => n91);
   U103 : GTECH_NAND2 port map( A => n93, B => A(24), Z => n87);
   U104 : GTECH_NOR2 port map( A => n94, B => n39, Z => n93);
   U105 : GTECH_NAND2 port map( A => n13, B => n95, Z => SUM(24));
   U106 : GTECH_NAND2 port map( A => A(24), B => n96, Z => n95);
   U107 : GTECH_NOR2 port map( A => n96, B => A(24), Z => n97);
   U108 : GTECH_NAND2 port map( A => A(23), B => n14, Z => n96);
   U109 : GTECH_NAND2 port map( A => n98, B => n99, Z => SUM(23));
   U110 : GTECH_NAND2 port map( A => A(23), B => n94, Z => n99);
   U111 : GTECH_NAND2 port map( A => n14, B => n39, Z => n98);
   U112 : GTECH_NAND2 port map( A => n100, B => A(22), Z => n94);
   U113 : GTECH_NOR2 port map( A => n101, B => n40, Z => n100);
   U114 : GTECH_NAND2 port map( A => n11, B => n102, Z => SUM(22));
   U115 : GTECH_NAND2 port map( A => A(22), B => n103, Z => n102);
   U116 : GTECH_NOR2 port map( A => n103, B => A(22), Z => n104);
   U117 : GTECH_NAND2 port map( A => A(21), B => n12, Z => n103);
   U118 : GTECH_NAND2 port map( A => n105, B => n106, Z => SUM(21));
   U119 : GTECH_NAND2 port map( A => A(21), B => n101, Z => n106);
   U120 : GTECH_NAND2 port map( A => n12, B => n40, Z => n105);
   U121 : GTECH_NAND2 port map( A => n107, B => A(20), Z => n101);
   U122 : GTECH_NOR2 port map( A => n108, B => n42, Z => n107);
   U123 : GTECH_NAND2 port map( A => n9, B => n109, Z => SUM(20));
   U124 : GTECH_NAND2 port map( A => A(20), B => n110, Z => n109);
   U125 : GTECH_NOR2 port map( A => n110, B => A(20), Z => n111);
   U126 : GTECH_NAND2 port map( A => A(19), B => n10, Z => n110);
   U127 : GTECH_NAND2 port map( A => n41, B => n112, Z => SUM(1));
   U128 : GTECH_NAND2 port map( A => A(1), B => A(0), Z => n112);
   U129 : GTECH_NAND2 port map( A => n114, B => n115, Z => SUM(19));
   U130 : GTECH_NAND2 port map( A => A(19), B => n108, Z => n115);
   U131 : GTECH_NAND2 port map( A => n10, B => n42, Z => n114);
   U132 : GTECH_NAND2 port map( A => n116, B => A(18), Z => n108);
   U133 : GTECH_NOR2 port map( A => n117, B => n43, Z => n116);
   U134 : GTECH_NAND2 port map( A => n7, B => n118, Z => SUM(18));
   U135 : GTECH_NAND2 port map( A => A(18), B => n119, Z => n118);
   U136 : GTECH_NOR2 port map( A => n119, B => A(18), Z => n120);
   U137 : GTECH_NAND2 port map( A => A(17), B => n8, Z => n119);
   U138 : GTECH_NAND2 port map( A => n121, B => n122, Z => SUM(17));
   U139 : GTECH_NAND2 port map( A => A(17), B => n117, Z => n122);
   U140 : GTECH_NAND2 port map( A => n8, B => n43, Z => n121);
   U141 : GTECH_NAND2 port map( A => n123, B => A(16), Z => n117);
   U142 : GTECH_NOR2 port map( A => n124, B => n44, Z => n123);
   U143 : GTECH_NAND2 port map( A => n5, B => n125, Z => SUM(16));
   U144 : GTECH_NAND2 port map( A => A(16), B => n126, Z => n125);
   U145 : GTECH_NOR2 port map( A => n126, B => A(16), Z => n127);
   U146 : GTECH_NAND2 port map( A => A(15), B => n6, Z => n126);
   U147 : GTECH_NAND2 port map( A => n128, B => n129, Z => SUM(15));
   U148 : GTECH_NAND2 port map( A => A(15), B => n124, Z => n129);
   U149 : GTECH_NAND2 port map( A => n6, B => n44, Z => n128);
   U150 : GTECH_NAND2 port map( A => n130, B => A(14), Z => n124);
   U151 : GTECH_NOR2 port map( A => n131, B => n45, Z => n130);
   U152 : GTECH_NAND2 port map( A => n3, B => n132, Z => SUM(14));
   U153 : GTECH_NAND2 port map( A => A(14), B => n133, Z => n132);
   U154 : GTECH_NOR2 port map( A => n133, B => A(14), Z => n134);
   U155 : GTECH_NAND2 port map( A => A(13), B => n4, Z => n133);
   U156 : GTECH_NAND2 port map( A => n135, B => n136, Z => SUM(13));
   U157 : GTECH_NAND2 port map( A => A(13), B => n131, Z => n136);
   U158 : GTECH_NAND2 port map( A => n4, B => n45, Z => n135);
   U159 : GTECH_NAND2 port map( A => n137, B => A(12), Z => n131);
   U160 : GTECH_NOR2 port map( A => n138, B => n46, Z => n137);
   U161 : GTECH_NAND2 port map( A => n1, B => n139, Z => SUM(12));
   U162 : GTECH_NAND2 port map( A => A(12), B => n140, Z => n139);
   U163 : GTECH_NOR2 port map( A => n140, B => A(12), Z => n141);
   U164 : GTECH_NAND2 port map( A => A(11), B => n2, Z => n140);
   U165 : GTECH_NAND2 port map( A => n142, B => n143, Z => SUM(11));
   U166 : GTECH_NAND2 port map( A => A(11), B => n138, Z => n143);
   U167 : GTECH_NAND2 port map( A => n2, B => n46, Z => n142);
   U168 : GTECH_NAND2 port map( A => n144, B => A(10), Z => n138);
   U169 : GTECH_NOR2 port map( A => n22, B => n50, Z => n144);
   U170 : GTECH_NAND2 port map( A => n23, B => n145, Z => SUM(10));
   U171 : GTECH_NAND2 port map( A => A(10), B => n146, Z => n145);
   U172 : GTECH_NOR2 port map( A => n146, B => A(10), Z => n147);
   U173 : GTECH_NAND2 port map( A => n25, B => A(9), Z => n146);
   U174 : GTECH_NAND2 port map( A => n148, B => A(8), Z => n50);
   U175 : GTECH_NOR2 port map( A => n56, B => n26, Z => n148);
   U176 : GTECH_NAND2 port map( A => n149, B => A(6), Z => n56);
   U177 : GTECH_NOR2 port map( A => n62, B => n29, Z => n149);
   U178 : GTECH_NAND2 port map( A => n150, B => A(4), Z => n62);
   U179 : GTECH_NOR2 port map( A => n34, B => n32, Z => n150);
   U180 : GTECH_NOR2 port map( A => n113, B => n35, Z => n66);
   U181 : GTECH_NOR2 port map( A => A(1), B => A(0), Z => n113);

end SYN_rpl;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_mem_C.all;

entity mem_C_DW01_add_1 is

   port( A, B : in std_logic_vector (27 downto 0);  CI : in std_logic;  SUM : 
         out std_logic_vector (27 downto 0);  CO : out std_logic);

end mem_C_DW01_add_1;

architecture SYN_rpl of mem_C_DW01_add_1 is

   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   signal SUM_27_port, SUM_26_port, SUM_25_port, SUM_24_port, SUM_23_port, 
      SUM_22_port, SUM_21_port, SUM_20_port, SUM_19_port, SUM_18_port, 
      SUM_17_port, SUM_16_port, SUM_15_port, SUM_14_port, SUM_13_port, 
      SUM_12_port, SUM_11_port, SUM_10_port, SUM_9_port, SUM_8_port, SUM_7_port
      , SUM_6_port, SUM_5_port, SUM_4_port, SUM_3_port, SUM_2_port, n1, n2, n3,
      n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19,
      n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34
      , n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47, n48, 
      n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61, n62, n63
      , n64, n65, n66, n67, n68, n69, n70, n71, n72, n73, n74, n75, n76, n77, 
      n78, n79, n80, n81, n82, n83, n84, n85, n86, n87, n88, n89, n90, n91, n92
      , n93, n94, n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105, 
      n106, n107, n108, n109, n110, n111, n112, n113, n114, n115, n116, n117, 
      n118, n119, n120, n121, n122, n123, n124, n125, n126, n127, n128 : 
      std_logic;

begin
   SUM <= ( SUM_27_port, SUM_26_port, SUM_25_port, SUM_24_port, SUM_23_port, 
      SUM_22_port, SUM_21_port, SUM_20_port, SUM_19_port, SUM_18_port, 
      SUM_17_port, SUM_16_port, SUM_15_port, SUM_14_port, SUM_13_port, 
      SUM_12_port, SUM_11_port, SUM_10_port, SUM_9_port, SUM_8_port, SUM_7_port
      , SUM_6_port, SUM_5_port, SUM_4_port, SUM_3_port, SUM_2_port, A(1), A(0) 
      );
   
   U1 : GTECH_NOT port map( A => n65, Z => n1);
   U2 : GTECH_NOT port map( A => n48, Z => n2);
   U3 : GTECH_NOT port map( A => n51, Z => n3);
   U4 : GTECH_NOT port map( A => n42, Z => n4);
   U5 : GTECH_NOT port map( A => n45, Z => n5);
   U6 : GTECH_NOT port map( A => n122, Z => n6);
   U7 : GTECH_NOT port map( A => n119, Z => n7);
   U8 : GTECH_NOT port map( A => n115, Z => n8);
   U9 : GTECH_NOT port map( A => n112, Z => n9);
   U10 : GTECH_NOT port map( A => n108, Z => n10);
   U11 : GTECH_NOT port map( A => n105, Z => n11);
   U12 : GTECH_NOT port map( A => n101, Z => n12);
   U13 : GTECH_NOT port map( A => n98, Z => n13);
   U14 : GTECH_NOT port map( A => n94, Z => n14);
   U15 : GTECH_NOT port map( A => n91, Z => n15);
   U16 : GTECH_NOT port map( A => n87, Z => n16);
   U17 : GTECH_NOT port map( A => n84, Z => n17);
   U18 : GTECH_NOT port map( A => n80, Z => n18);
   U19 : GTECH_NOT port map( A => n77, Z => n19);
   U20 : GTECH_NOT port map( A => n73, Z => n20);
   U21 : GTECH_NOT port map( A => n70, Z => n21);
   U22 : GTECH_NOT port map( A => n66, Z => n22);
   U23 : GTECH_NOT port map( A => n68, Z => n23);
   U24 : GTECH_NOT port map( A => n55, Z => n24);
   U25 : GTECH_NOT port map( A => n54, Z => n25);
   U26 : GTECH_NOT port map( A => B(2), Z => n26);
   U27 : GTECH_NOT port map( A => n60, Z => n27);
   U28 : GTECH_NOT port map( A => A(24), Z => n28);
   U29 : GTECH_NOT port map( A => A(2), Z => n29);
   U30 : GTECH_NOT port map( A => A(4), Z => n30);
   U31 : GTECH_NOT port map( A => A(6), Z => n31);
   U32 : GTECH_NOT port map( A => A(8), Z => n32);
   U33 : GTECH_NOT port map( A => A(10), Z => n33);
   U34 : GTECH_NOT port map( A => A(12), Z => n34);
   U35 : GTECH_NOT port map( A => A(14), Z => n35);
   U36 : GTECH_NOT port map( A => A(16), Z => n36);
   U37 : GTECH_NOT port map( A => A(18), Z => n37);
   U38 : GTECH_NOT port map( A => A(20), Z => n38);
   U39 : GTECH_NOT port map( A => A(22), Z => n39);
   U40 : GTECH_NAND2 port map( A => n4, B => n40, Z => SUM_9_port);
   U41 : GTECH_NAND2 port map( A => A(9), B => n41, Z => n40);
   U42 : GTECH_NOR2 port map( A => n41, B => A(9), Z => n42);
   U43 : GTECH_NAND2 port map( A => A(8), B => n5, Z => n41);
   U44 : GTECH_NAND2 port map( A => n43, B => n44, Z => SUM_8_port);
   U45 : GTECH_NAND2 port map( A => A(8), B => n45, Z => n44);
   U46 : GTECH_NAND2 port map( A => n5, B => n32, Z => n43);
   U47 : GTECH_NAND2 port map( A => n2, B => n46, Z => SUM_7_port);
   U48 : GTECH_NAND2 port map( A => A(7), B => n47, Z => n46);
   U49 : GTECH_NOR2 port map( A => n47, B => A(7), Z => n48);
   U50 : GTECH_NAND2 port map( A => A(6), B => n3, Z => n47);
   U51 : GTECH_NAND2 port map( A => n49, B => n50, Z => SUM_6_port);
   U52 : GTECH_NAND2 port map( A => A(6), B => n51, Z => n50);
   U53 : GTECH_NAND2 port map( A => n3, B => n31, Z => n49);
   U54 : GTECH_NAND2 port map( A => n25, B => n52, Z => SUM_5_port);
   U55 : GTECH_NAND2 port map( A => A(5), B => n53, Z => n52);
   U56 : GTECH_NOR2 port map( A => n53, B => A(5), Z => n54);
   U57 : GTECH_NAND2 port map( A => A(4), B => n55, Z => n53);
   U58 : GTECH_NAND2 port map( A => n56, B => n57, Z => SUM_4_port);
   U59 : GTECH_NAND2 port map( A => A(4), B => n24, Z => n57);
   U60 : GTECH_NAND2 port map( A => n55, B => n30, Z => n56);
   U61 : GTECH_NAND2 port map( A => n27, B => n58, Z => SUM_3_port);
   U62 : GTECH_NAND2 port map( A => A(3), B => n59, Z => n58);
   U63 : GTECH_NOR2 port map( A => n59, B => A(3), Z => n60);
   U64 : GTECH_NAND2 port map( A => B(2), B => A(2), Z => n59);
   U65 : GTECH_NAND2 port map( A => n61, B => n62, Z => SUM_2_port);
   U66 : GTECH_NAND2 port map( A => B(2), B => n29, Z => n62);
   U67 : GTECH_NAND2 port map( A => A(2), B => n26, Z => n61);
   U68 : GTECH_NAND2 port map( A => n1, B => n63, Z => SUM_27_port);
   U69 : GTECH_NAND2 port map( A => A(27), B => n64, Z => n63);
   U70 : GTECH_NOR2 port map( A => n64, B => A(27), Z => n65);
   U71 : GTECH_NAND2 port map( A => A(26), B => n22, Z => n64);
   U72 : GTECH_NAND2 port map( A => n23, B => n67, Z => SUM_26_port);
   U73 : GTECH_NAND2 port map( A => A(26), B => n66, Z => n67);
   U74 : GTECH_NOR2 port map( A => n66, B => A(26), Z => n68);
   U75 : GTECH_NAND2 port map( A => n69, B => A(25), Z => n66);
   U76 : GTECH_NOR2 port map( A => n70, B => n28, Z => n69);
   U77 : GTECH_NAND2 port map( A => n20, B => n71, Z => SUM_25_port);
   U78 : GTECH_NAND2 port map( A => A(25), B => n72, Z => n71);
   U79 : GTECH_NOR2 port map( A => n72, B => A(25), Z => n73);
   U80 : GTECH_NAND2 port map( A => A(24), B => n21, Z => n72);
   U81 : GTECH_NAND2 port map( A => n74, B => n75, Z => SUM_24_port);
   U82 : GTECH_NAND2 port map( A => A(24), B => n70, Z => n75);
   U83 : GTECH_NAND2 port map( A => n21, B => n28, Z => n74);
   U84 : GTECH_NAND2 port map( A => n76, B => A(23), Z => n70);
   U85 : GTECH_NOR2 port map( A => n77, B => n39, Z => n76);
   U86 : GTECH_NAND2 port map( A => n18, B => n78, Z => SUM_23_port);
   U87 : GTECH_NAND2 port map( A => A(23), B => n79, Z => n78);
   U88 : GTECH_NOR2 port map( A => n79, B => A(23), Z => n80);
   U89 : GTECH_NAND2 port map( A => A(22), B => n19, Z => n79);
   U90 : GTECH_NAND2 port map( A => n81, B => n82, Z => SUM_22_port);
   U91 : GTECH_NAND2 port map( A => A(22), B => n77, Z => n82);
   U92 : GTECH_NAND2 port map( A => n19, B => n39, Z => n81);
   U93 : GTECH_NAND2 port map( A => n83, B => A(21), Z => n77);
   U94 : GTECH_NOR2 port map( A => n84, B => n38, Z => n83);
   U95 : GTECH_NAND2 port map( A => n16, B => n85, Z => SUM_21_port);
   U96 : GTECH_NAND2 port map( A => A(21), B => n86, Z => n85);
   U97 : GTECH_NOR2 port map( A => n86, B => A(21), Z => n87);
   U98 : GTECH_NAND2 port map( A => A(20), B => n17, Z => n86);
   U99 : GTECH_NAND2 port map( A => n88, B => n89, Z => SUM_20_port);
   U100 : GTECH_NAND2 port map( A => A(20), B => n84, Z => n89);
   U101 : GTECH_NAND2 port map( A => n17, B => n38, Z => n88);
   U102 : GTECH_NAND2 port map( A => n90, B => A(19), Z => n84);
   U103 : GTECH_NOR2 port map( A => n91, B => n37, Z => n90);
   U104 : GTECH_NAND2 port map( A => n14, B => n92, Z => SUM_19_port);
   U105 : GTECH_NAND2 port map( A => A(19), B => n93, Z => n92);
   U106 : GTECH_NOR2 port map( A => n93, B => A(19), Z => n94);
   U107 : GTECH_NAND2 port map( A => A(18), B => n15, Z => n93);
   U108 : GTECH_NAND2 port map( A => n95, B => n96, Z => SUM_18_port);
   U109 : GTECH_NAND2 port map( A => A(18), B => n91, Z => n96);
   U110 : GTECH_NAND2 port map( A => n15, B => n37, Z => n95);
   U111 : GTECH_NAND2 port map( A => n97, B => A(17), Z => n91);
   U112 : GTECH_NOR2 port map( A => n98, B => n36, Z => n97);
   U113 : GTECH_NAND2 port map( A => n12, B => n99, Z => SUM_17_port);
   U114 : GTECH_NAND2 port map( A => A(17), B => n100, Z => n99);
   U115 : GTECH_NOR2 port map( A => n100, B => A(17), Z => n101);
   U116 : GTECH_NAND2 port map( A => A(16), B => n13, Z => n100);
   U117 : GTECH_NAND2 port map( A => n102, B => n103, Z => SUM_16_port);
   U118 : GTECH_NAND2 port map( A => A(16), B => n98, Z => n103);
   U119 : GTECH_NAND2 port map( A => n13, B => n36, Z => n102);
   U120 : GTECH_NAND2 port map( A => n104, B => A(15), Z => n98);
   U121 : GTECH_NOR2 port map( A => n105, B => n35, Z => n104);
   U122 : GTECH_NAND2 port map( A => n10, B => n106, Z => SUM_15_port);
   U123 : GTECH_NAND2 port map( A => A(15), B => n107, Z => n106);
   U124 : GTECH_NOR2 port map( A => n107, B => A(15), Z => n108);
   U125 : GTECH_NAND2 port map( A => A(14), B => n11, Z => n107);
   U126 : GTECH_NAND2 port map( A => n109, B => n110, Z => SUM_14_port);
   U127 : GTECH_NAND2 port map( A => A(14), B => n105, Z => n110);
   U128 : GTECH_NAND2 port map( A => n11, B => n35, Z => n109);
   U129 : GTECH_NAND2 port map( A => n111, B => A(13), Z => n105);
   U130 : GTECH_NOR2 port map( A => n112, B => n34, Z => n111);
   U131 : GTECH_NAND2 port map( A => n8, B => n113, Z => SUM_13_port);
   U132 : GTECH_NAND2 port map( A => A(13), B => n114, Z => n113);
   U133 : GTECH_NOR2 port map( A => n114, B => A(13), Z => n115);
   U134 : GTECH_NAND2 port map( A => A(12), B => n9, Z => n114);
   U135 : GTECH_NAND2 port map( A => n116, B => n117, Z => SUM_12_port);
   U136 : GTECH_NAND2 port map( A => A(12), B => n112, Z => n117);
   U137 : GTECH_NAND2 port map( A => n9, B => n34, Z => n116);
   U138 : GTECH_NAND2 port map( A => n118, B => A(11), Z => n112);
   U139 : GTECH_NOR2 port map( A => n119, B => n33, Z => n118);
   U140 : GTECH_NAND2 port map( A => n6, B => n120, Z => SUM_11_port);
   U141 : GTECH_NAND2 port map( A => A(11), B => n121, Z => n120);
   U142 : GTECH_NOR2 port map( A => n121, B => A(11), Z => n122);
   U143 : GTECH_NAND2 port map( A => A(10), B => n7, Z => n121);
   U144 : GTECH_NAND2 port map( A => n123, B => n124, Z => SUM_10_port);
   U145 : GTECH_NAND2 port map( A => A(10), B => n119, Z => n124);
   U146 : GTECH_NAND2 port map( A => n7, B => n33, Z => n123);
   U147 : GTECH_NAND2 port map( A => n125, B => A(9), Z => n119);
   U148 : GTECH_NOR2 port map( A => n45, B => n32, Z => n125);
   U149 : GTECH_NAND2 port map( A => n126, B => A(7), Z => n45);
   U150 : GTECH_NOR2 port map( A => n51, B => n31, Z => n126);
   U151 : GTECH_NAND2 port map( A => n127, B => A(5), Z => n51);
   U152 : GTECH_NOR2 port map( A => n24, B => n30, Z => n127);
   U153 : GTECH_NOR2 port map( A => n128, B => n26, Z => n55);
   U154 : GTECH_NAND2 port map( A => A(2), B => A(3), Z => n128);

end SYN_rpl;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_mem_C.all;

entity mem_C_DW01_sub_1 is

   port( A, B : in std_logic_vector (31 downto 0);  CI : in std_logic;  DIFF : 
         out std_logic_vector (31 downto 0);  CO : out std_logic);

end mem_C_DW01_sub_1;

architecture SYN_rpl of mem_C_DW01_sub_1 is

   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   signal DIFF_31_port, DIFF_30_port, DIFF_29_port, DIFF_28_port, DIFF_27_port,
      DIFF_26_port, DIFF_25_port, DIFF_24_port, DIFF_23_port, DIFF_22_port, 
      DIFF_21_port, DIFF_20_port, DIFF_19_port, DIFF_18_port, DIFF_17_port, 
      DIFF_16_port, DIFF_15_port, DIFF_14_port, DIFF_13_port, DIFF_12_port, 
      DIFF_11_port, DIFF_10_port, DIFF_9_port, DIFF_8_port, DIFF_7_port, 
      DIFF_6_port, DIFF_5_port, DIFF_4_port, DIFF_3_port, DIFF_2_port, n1, n2, 
      n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18, 
      n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, DIFF_1_port, 
      n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46
      , n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, 
      n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n73, n74, n75
      , n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86, n87, n88, n89, 
      n90, n91 : std_logic;

begin
   DIFF <= ( DIFF_31_port, DIFF_30_port, DIFF_29_port, DIFF_28_port, 
      DIFF_27_port, DIFF_26_port, DIFF_25_port, DIFF_24_port, DIFF_23_port, 
      DIFF_22_port, DIFF_21_port, DIFF_20_port, DIFF_19_port, DIFF_18_port, 
      DIFF_17_port, DIFF_16_port, DIFF_15_port, DIFF_14_port, DIFF_13_port, 
      DIFF_12_port, DIFF_11_port, DIFF_10_port, DIFF_9_port, DIFF_8_port, 
      DIFF_7_port, DIFF_6_port, DIFF_5_port, DIFF_4_port, DIFF_3_port, 
      DIFF_2_port, DIFF_1_port, A(0) );
   
   U1 : GTECH_NOT port map( A => n48, Z => n1);
   U2 : GTECH_NOT port map( A => A(30), Z => n2);
   U3 : GTECH_NOT port map( A => n50, Z => n3);
   U4 : GTECH_NOT port map( A => A(28), Z => n4);
   U5 : GTECH_NOT port map( A => n55, Z => n5);
   U6 : GTECH_NOT port map( A => A(26), Z => n6);
   U7 : GTECH_NOT port map( A => n59, Z => n7);
   U8 : GTECH_NOT port map( A => A(24), Z => n8);
   U9 : GTECH_NOT port map( A => n63, Z => n9);
   U10 : GTECH_NOT port map( A => A(22), Z => n10);
   U11 : GTECH_NOT port map( A => n67, Z => n11);
   U12 : GTECH_NOT port map( A => A(20), Z => n12);
   U13 : GTECH_NOT port map( A => n71, Z => n13);
   U14 : GTECH_NOT port map( A => A(18), Z => n14);
   U15 : GTECH_NOT port map( A => n75, Z => n15);
   U16 : GTECH_NOT port map( A => A(16), Z => n16);
   U17 : GTECH_NOT port map( A => n79, Z => n17);
   U18 : GTECH_NOT port map( A => A(14), Z => n18);
   U19 : GTECH_NOT port map( A => n83, Z => n19);
   U20 : GTECH_NOT port map( A => A(12), Z => n20);
   U21 : GTECH_NOT port map( A => n87, Z => n21);
   U22 : GTECH_NOT port map( A => A(10), Z => n22);
   U23 : GTECH_NOT port map( A => n91, Z => n23);
   U24 : GTECH_NOT port map( A => A(8), Z => n24);
   U25 : GTECH_NOT port map( A => n37, Z => n25);
   U26 : GTECH_NOT port map( A => A(6), Z => n26);
   U27 : GTECH_NOT port map( A => n41, Z => n27);
   U28 : GTECH_NOT port map( A => A(4), Z => n28);
   U29 : GTECH_NOT port map( A => n45, Z => n29);
   U30 : GTECH_NOT port map( A => A(2), Z => n30);
   U31 : GTECH_NOT port map( A => A(1), Z => DIFF_1_port);
   U32 : GTECH_NAND2 port map( A => n23, B => n32, Z => DIFF_9_port);
   U33 : GTECH_NAND2 port map( A => A(9), B => n33, Z => n32);
   U34 : GTECH_NAND2 port map( A => n33, B => n34, Z => DIFF_8_port);
   U35 : GTECH_NAND2 port map( A => A(8), B => n25, Z => n34);
   U36 : GTECH_NAND2 port map( A => n25, B => n35, Z => DIFF_7_port);
   U37 : GTECH_NAND2 port map( A => A(7), B => n36, Z => n35);
   U38 : GTECH_NAND2 port map( A => n36, B => n38, Z => DIFF_6_port);
   U39 : GTECH_NAND2 port map( A => A(6), B => n27, Z => n38);
   U40 : GTECH_NAND2 port map( A => n27, B => n39, Z => DIFF_5_port);
   U41 : GTECH_NAND2 port map( A => A(5), B => n40, Z => n39);
   U42 : GTECH_NAND2 port map( A => n40, B => n42, Z => DIFF_4_port);
   U43 : GTECH_NAND2 port map( A => A(4), B => n29, Z => n42);
   U44 : GTECH_NAND2 port map( A => n29, B => n43, Z => DIFF_3_port);
   U45 : GTECH_NAND2 port map( A => A(3), B => n44, Z => n43);
   U46 : GTECH_NAND2 port map( A => n1, B => n46, Z => DIFF_31_port);
   U47 : GTECH_NAND2 port map( A => A(31), B => n47, Z => n46);
   U48 : GTECH_NOR2 port map( A => n47, B => A(31), Z => n48);
   U49 : GTECH_NAND2 port map( A => n47, B => n49, Z => DIFF_30_port);
   U50 : GTECH_NAND2 port map( A => A(30), B => n3, Z => n49);
   U51 : GTECH_NAND2 port map( A => n50, B => n2, Z => n47);
   U52 : GTECH_NAND2 port map( A => n44, B => n51, Z => DIFF_2_port);
   U53 : GTECH_NAND2 port map( A => A(2), B => A(1), Z => n51);
   U54 : GTECH_NAND2 port map( A => n3, B => n52, Z => DIFF_29_port);
   U55 : GTECH_NAND2 port map( A => A(29), B => n53, Z => n52);
   U56 : GTECH_NOR2 port map( A => n53, B => A(29), Z => n50);
   U57 : GTECH_NAND2 port map( A => n53, B => n54, Z => DIFF_28_port);
   U58 : GTECH_NAND2 port map( A => A(28), B => n5, Z => n54);
   U59 : GTECH_NAND2 port map( A => n55, B => n4, Z => n53);
   U60 : GTECH_NAND2 port map( A => n5, B => n56, Z => DIFF_27_port);
   U61 : GTECH_NAND2 port map( A => A(27), B => n57, Z => n56);
   U62 : GTECH_NOR2 port map( A => n57, B => A(27), Z => n55);
   U63 : GTECH_NAND2 port map( A => n57, B => n58, Z => DIFF_26_port);
   U64 : GTECH_NAND2 port map( A => A(26), B => n7, Z => n58);
   U65 : GTECH_NAND2 port map( A => n59, B => n6, Z => n57);
   U66 : GTECH_NAND2 port map( A => n7, B => n60, Z => DIFF_25_port);
   U67 : GTECH_NAND2 port map( A => A(25), B => n61, Z => n60);
   U68 : GTECH_NOR2 port map( A => n61, B => A(25), Z => n59);
   U69 : GTECH_NAND2 port map( A => n61, B => n62, Z => DIFF_24_port);
   U70 : GTECH_NAND2 port map( A => A(24), B => n9, Z => n62);
   U71 : GTECH_NAND2 port map( A => n63, B => n8, Z => n61);
   U72 : GTECH_NAND2 port map( A => n9, B => n64, Z => DIFF_23_port);
   U73 : GTECH_NAND2 port map( A => A(23), B => n65, Z => n64);
   U74 : GTECH_NOR2 port map( A => n65, B => A(23), Z => n63);
   U75 : GTECH_NAND2 port map( A => n65, B => n66, Z => DIFF_22_port);
   U76 : GTECH_NAND2 port map( A => A(22), B => n11, Z => n66);
   U77 : GTECH_NAND2 port map( A => n67, B => n10, Z => n65);
   U78 : GTECH_NAND2 port map( A => n11, B => n68, Z => DIFF_21_port);
   U79 : GTECH_NAND2 port map( A => A(21), B => n69, Z => n68);
   U80 : GTECH_NOR2 port map( A => n69, B => A(21), Z => n67);
   U81 : GTECH_NAND2 port map( A => n69, B => n70, Z => DIFF_20_port);
   U82 : GTECH_NAND2 port map( A => A(20), B => n13, Z => n70);
   U83 : GTECH_NAND2 port map( A => n71, B => n12, Z => n69);
   U84 : GTECH_NAND2 port map( A => n13, B => n72, Z => DIFF_19_port);
   U85 : GTECH_NAND2 port map( A => A(19), B => n73, Z => n72);
   U86 : GTECH_NOR2 port map( A => n73, B => A(19), Z => n71);
   U87 : GTECH_NAND2 port map( A => n73, B => n74, Z => DIFF_18_port);
   U88 : GTECH_NAND2 port map( A => A(18), B => n15, Z => n74);
   U89 : GTECH_NAND2 port map( A => n75, B => n14, Z => n73);
   U90 : GTECH_NAND2 port map( A => n15, B => n76, Z => DIFF_17_port);
   U91 : GTECH_NAND2 port map( A => A(17), B => n77, Z => n76);
   U92 : GTECH_NOR2 port map( A => n77, B => A(17), Z => n75);
   U93 : GTECH_NAND2 port map( A => n77, B => n78, Z => DIFF_16_port);
   U94 : GTECH_NAND2 port map( A => A(16), B => n17, Z => n78);
   U95 : GTECH_NAND2 port map( A => n79, B => n16, Z => n77);
   U96 : GTECH_NAND2 port map( A => n17, B => n80, Z => DIFF_15_port);
   U97 : GTECH_NAND2 port map( A => A(15), B => n81, Z => n80);
   U98 : GTECH_NOR2 port map( A => n81, B => A(15), Z => n79);
   U99 : GTECH_NAND2 port map( A => n81, B => n82, Z => DIFF_14_port);
   U100 : GTECH_NAND2 port map( A => A(14), B => n19, Z => n82);
   U101 : GTECH_NAND2 port map( A => n83, B => n18, Z => n81);
   U102 : GTECH_NAND2 port map( A => n19, B => n84, Z => DIFF_13_port);
   U103 : GTECH_NAND2 port map( A => A(13), B => n85, Z => n84);
   U104 : GTECH_NOR2 port map( A => n85, B => A(13), Z => n83);
   U105 : GTECH_NAND2 port map( A => n85, B => n86, Z => DIFF_12_port);
   U106 : GTECH_NAND2 port map( A => A(12), B => n21, Z => n86);
   U107 : GTECH_NAND2 port map( A => n87, B => n20, Z => n85);
   U108 : GTECH_NAND2 port map( A => n21, B => n88, Z => DIFF_11_port);
   U109 : GTECH_NAND2 port map( A => A(11), B => n89, Z => n88);
   U110 : GTECH_NOR2 port map( A => n89, B => A(11), Z => n87);
   U111 : GTECH_NAND2 port map( A => n89, B => n90, Z => DIFF_10_port);
   U112 : GTECH_NAND2 port map( A => A(10), B => n23, Z => n90);
   U113 : GTECH_NAND2 port map( A => n91, B => n22, Z => n89);
   U114 : GTECH_NOR2 port map( A => n33, B => A(9), Z => n91);
   U115 : GTECH_NAND2 port map( A => n37, B => n24, Z => n33);
   U116 : GTECH_NOR2 port map( A => n36, B => A(7), Z => n37);
   U117 : GTECH_NAND2 port map( A => n41, B => n26, Z => n36);
   U118 : GTECH_NOR2 port map( A => n40, B => A(5), Z => n41);
   U119 : GTECH_NAND2 port map( A => n45, B => n28, Z => n40);
   U120 : GTECH_NOR2 port map( A => n44, B => A(3), Z => n45);
   U121 : GTECH_NAND2 port map( A => n30, B => DIFF_1_port, Z => n44);

end SYN_rpl;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_mem_C.all;

entity mem_C_DW01_cmp6_0 is

   port( A, B : in std_logic_vector (32 downto 0);  TC : in std_logic;  LT, GT,
         EQ, LE, GE, NE : out std_logic);

end mem_C_DW01_cmp6_0;

architecture SYN_rpl of mem_C_DW01_cmp6_0 is

   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   signal n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16
      , n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, 
      n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45
      , n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, 
      n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71 : std_logic;

begin
   
   U1 : GTECH_NOT port map( A => n48, Z => n1);
   U2 : GTECH_NOT port map( A => A(7), Z => n2);
   U3 : GTECH_NOT port map( A => B(7), Z => n3);
   U4 : GTECH_NOT port map( A => B(6), Z => n4);
   U5 : GTECH_NOT port map( A => B(5), Z => n5);
   U6 : GTECH_NOT port map( A => B(4), Z => n6);
   U7 : GTECH_NOT port map( A => B(3), Z => n7);
   U8 : GTECH_NOT port map( A => B(2), Z => n8);
   U9 : GTECH_NOT port map( A => B(0), Z => n9);
   U10 : GTECH_NOT port map( A => A(6), Z => n10);
   U11 : GTECH_NOT port map( A => A(1), Z => n11);
   U12 : GTECH_NOT port map( A => A(2), Z => n12);
   U13 : GTECH_NOT port map( A => A(3), Z => n13);
   U14 : GTECH_NOT port map( A => A(4), Z => n14);
   U15 : GTECH_NOT port map( A => A(5), Z => n15);
   U16 : GTECH_NOR2 port map( A => n16, B => n17, Z => EQ);
   U17 : GTECH_NAND2 port map( A => n18, B => n19, Z => n17);
   U18 : GTECH_NOR2 port map( A => n20, B => n21, Z => n19);
   U19 : GTECH_NAND2 port map( A => n22, B => n23, Z => n21);
   U20 : GTECH_NOR2 port map( A => B(13), B => B(12), Z => n23);
   U21 : GTECH_NOR2 port map( A => B(11), B => B(10), Z => n22);
   U22 : GTECH_NAND2 port map( A => n24, B => n25, Z => n20);
   U23 : GTECH_NOR2 port map( A => B(17), B => B(16), Z => n25);
   U24 : GTECH_NOR2 port map( A => B(15), B => B(14), Z => n24);
   U25 : GTECH_NOR2 port map( A => n26, B => n27, Z => n18);
   U26 : GTECH_NAND2 port map( A => n28, B => n29, Z => n27);
   U27 : GTECH_NOR2 port map( A => n30, B => n31, Z => n29);
   U28 : GTECH_NAND2 port map( A => n32, B => n33, Z => n31);
   U29 : GTECH_NAND2 port map( A => B(5), B => n15, Z => n33);
   U30 : GTECH_NAND2 port map( A => A(5), B => n5, Z => n32);
   U31 : GTECH_NAND2 port map( A => n34, B => n35, Z => n30);
   U32 : GTECH_NAND2 port map( A => B(4), B => n14, Z => n35);
   U33 : GTECH_NAND2 port map( A => A(4), B => n6, Z => n34);
   U34 : GTECH_NOR2 port map( A => n36, B => n37, Z => n28);
   U35 : GTECH_NAND2 port map( A => n38, B => n39, Z => n37);
   U36 : GTECH_NAND2 port map( A => B(7), B => n2, Z => n39);
   U37 : GTECH_NAND2 port map( A => A(7), B => n3, Z => n38);
   U38 : GTECH_NAND2 port map( A => n40, B => n41, Z => n36);
   U39 : GTECH_NAND2 port map( A => B(6), B => n10, Z => n41);
   U40 : GTECH_NAND2 port map( A => A(6), B => n4, Z => n40);
   U41 : GTECH_NAND2 port map( A => n42, B => n43, Z => n26);
   U42 : GTECH_NOR2 port map( A => n1, B => n44, Z => n43);
   U43 : GTECH_NOR2 port map( A => n45, B => n46, Z => n44);
   U44 : GTECH_NOR2 port map( A => n47, B => n11, Z => n46);
   U45 : GTECH_NOR2 port map( A => B(1), B => n47, Z => n45);
   U46 : GTECH_NOR2 port map( A => n9, B => A(0), Z => n47);
   U47 : GTECH_NAND2 port map( A => n49, B => n50, Z => n48);
   U48 : GTECH_NAND2 port map( A => n11, B => n51, Z => n50);
   U49 : GTECH_NAND2 port map( A => n51, B => B(1), Z => n49);
   U50 : GTECH_NAND2 port map( A => A(0), B => n9, Z => n51);
   U51 : GTECH_NOR2 port map( A => n52, B => n53, Z => n42);
   U52 : GTECH_NAND2 port map( A => n54, B => n55, Z => n53);
   U53 : GTECH_NAND2 port map( A => B(3), B => n13, Z => n55);
   U54 : GTECH_NAND2 port map( A => A(3), B => n7, Z => n54);
   U55 : GTECH_NAND2 port map( A => n56, B => n57, Z => n52);
   U56 : GTECH_NAND2 port map( A => B(2), B => n12, Z => n57);
   U57 : GTECH_NAND2 port map( A => A(2), B => n8, Z => n56);
   U58 : GTECH_NAND2 port map( A => n58, B => n59, Z => n16);
   U59 : GTECH_NOR2 port map( A => n60, B => n61, Z => n59);
   U60 : GTECH_NAND2 port map( A => n62, B => n63, Z => n61);
   U61 : GTECH_NOR2 port map( A => B(29), B => B(28), Z => n63);
   U62 : GTECH_NOR2 port map( A => B(27), B => B(26), Z => n62);
   U63 : GTECH_NAND2 port map( A => n64, B => n65, Z => n60);
   U64 : GTECH_NOR2 port map( A => B(9), B => B(8), Z => n65);
   U65 : GTECH_NOR2 port map( A => B(31), B => B(30), Z => n64);
   U66 : GTECH_NOR2 port map( A => n66, B => n67, Z => n58);
   U67 : GTECH_NAND2 port map( A => n68, B => n69, Z => n67);
   U68 : GTECH_NOR2 port map( A => B(21), B => B(20), Z => n69);
   U69 : GTECH_NOR2 port map( A => B(19), B => B(18), Z => n68);
   U70 : GTECH_NAND2 port map( A => n70, B => n71, Z => n66);
   U71 : GTECH_NOR2 port map( A => B(25), B => B(24), Z => n71);
   U72 : GTECH_NOR2 port map( A => B(23), B => B(22), Z => n70);

end SYN_rpl;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_mem_C.all;

entity mem_C_DW01_add_0 is

   port( A, B : in std_logic_vector (27 downto 0);  CI : in std_logic;  SUM : 
         out std_logic_vector (27 downto 0);  CO : out std_logic);

end mem_C_DW01_add_0;

architecture SYN_rpl of mem_C_DW01_add_0 is

   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   signal SUM_27_port, SUM_26_port, SUM_25_port, SUM_24_port, SUM_23_port, 
      SUM_22_port, SUM_21_port, SUM_20_port, SUM_19_port, SUM_18_port, 
      SUM_17_port, SUM_16_port, SUM_15_port, SUM_14_port, SUM_13_port, 
      SUM_12_port, SUM_11_port, SUM_10_port, SUM_9_port, SUM_8_port, SUM_7_port
      , SUM_6_port, SUM_5_port, SUM_4_port, SUM_3_port, SUM_2_port, n1, n2, n3,
      n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19,
      n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34
      , n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47, n48, 
      n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61, n62, n63
      , n64, n65, n66, n67, n68, n69, n70, n71, n72, n73, n74, n75, n76, n77, 
      n78, n79, n80, n81, n82, n83, n84, n85, n86, n87, n88, n89, n90, n91, n92
      , n93, n94, n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105, 
      n106, n107, n108, n109, n110, n111, n112, n113, n114, n115, n116, n117, 
      n118, n119, n120, n121, n122, n123, n124, n125, n126, n127, n128 : 
      std_logic;

begin
   SUM <= ( SUM_27_port, SUM_26_port, SUM_25_port, SUM_24_port, SUM_23_port, 
      SUM_22_port, SUM_21_port, SUM_20_port, SUM_19_port, SUM_18_port, 
      SUM_17_port, SUM_16_port, SUM_15_port, SUM_14_port, SUM_13_port, 
      SUM_12_port, SUM_11_port, SUM_10_port, SUM_9_port, SUM_8_port, SUM_7_port
      , SUM_6_port, SUM_5_port, SUM_4_port, SUM_3_port, SUM_2_port, A(1), A(0) 
      );
   
   U1 : GTECH_NOT port map( A => n48, Z => n1);
   U2 : GTECH_NOT port map( A => n51, Z => n2);
   U3 : GTECH_NOT port map( A => n42, Z => n3);
   U4 : GTECH_NOT port map( A => n45, Z => n4);
   U5 : GTECH_NOT port map( A => n122, Z => n5);
   U6 : GTECH_NOT port map( A => n119, Z => n6);
   U7 : GTECH_NOT port map( A => n115, Z => n7);
   U8 : GTECH_NOT port map( A => n112, Z => n8);
   U9 : GTECH_NOT port map( A => n108, Z => n9);
   U10 : GTECH_NOT port map( A => n105, Z => n10);
   U11 : GTECH_NOT port map( A => n101, Z => n11);
   U12 : GTECH_NOT port map( A => n98, Z => n12);
   U13 : GTECH_NOT port map( A => n94, Z => n13);
   U14 : GTECH_NOT port map( A => n91, Z => n14);
   U15 : GTECH_NOT port map( A => n87, Z => n15);
   U16 : GTECH_NOT port map( A => n84, Z => n16);
   U17 : GTECH_NOT port map( A => n80, Z => n17);
   U18 : GTECH_NOT port map( A => n77, Z => n18);
   U19 : GTECH_NOT port map( A => n73, Z => n19);
   U20 : GTECH_NOT port map( A => n70, Z => n20);
   U21 : GTECH_NOT port map( A => n65, Z => n21);
   U22 : GTECH_NOT port map( A => n66, Z => n22);
   U23 : GTECH_NOT port map( A => n68, Z => n23);
   U24 : GTECH_NOT port map( A => n55, Z => n24);
   U25 : GTECH_NOT port map( A => n54, Z => n25);
   U26 : GTECH_NOT port map( A => B(2), Z => n26);
   U27 : GTECH_NOT port map( A => n60, Z => n27);
   U28 : GTECH_NOT port map( A => A(24), Z => n28);
   U29 : GTECH_NOT port map( A => A(2), Z => n29);
   U30 : GTECH_NOT port map( A => A(4), Z => n30);
   U31 : GTECH_NOT port map( A => A(6), Z => n31);
   U32 : GTECH_NOT port map( A => A(8), Z => n32);
   U33 : GTECH_NOT port map( A => A(10), Z => n33);
   U34 : GTECH_NOT port map( A => A(12), Z => n34);
   U35 : GTECH_NOT port map( A => A(14), Z => n35);
   U36 : GTECH_NOT port map( A => A(16), Z => n36);
   U37 : GTECH_NOT port map( A => A(18), Z => n37);
   U38 : GTECH_NOT port map( A => A(20), Z => n38);
   U39 : GTECH_NOT port map( A => A(22), Z => n39);
   U40 : GTECH_NAND2 port map( A => n3, B => n40, Z => SUM_9_port);
   U41 : GTECH_NAND2 port map( A => A(9), B => n41, Z => n40);
   U42 : GTECH_NOR2 port map( A => n41, B => A(9), Z => n42);
   U43 : GTECH_NAND2 port map( A => A(8), B => n4, Z => n41);
   U44 : GTECH_NAND2 port map( A => n43, B => n44, Z => SUM_8_port);
   U45 : GTECH_NAND2 port map( A => A(8), B => n45, Z => n44);
   U46 : GTECH_NAND2 port map( A => n4, B => n32, Z => n43);
   U47 : GTECH_NAND2 port map( A => n1, B => n46, Z => SUM_7_port);
   U48 : GTECH_NAND2 port map( A => A(7), B => n47, Z => n46);
   U49 : GTECH_NOR2 port map( A => n47, B => A(7), Z => n48);
   U50 : GTECH_NAND2 port map( A => A(6), B => n2, Z => n47);
   U51 : GTECH_NAND2 port map( A => n49, B => n50, Z => SUM_6_port);
   U52 : GTECH_NAND2 port map( A => A(6), B => n51, Z => n50);
   U53 : GTECH_NAND2 port map( A => n2, B => n31, Z => n49);
   U54 : GTECH_NAND2 port map( A => n25, B => n52, Z => SUM_5_port);
   U55 : GTECH_NAND2 port map( A => A(5), B => n53, Z => n52);
   U56 : GTECH_NOR2 port map( A => n53, B => A(5), Z => n54);
   U57 : GTECH_NAND2 port map( A => A(4), B => n55, Z => n53);
   U58 : GTECH_NAND2 port map( A => n56, B => n57, Z => SUM_4_port);
   U59 : GTECH_NAND2 port map( A => A(4), B => n24, Z => n57);
   U60 : GTECH_NAND2 port map( A => n55, B => n30, Z => n56);
   U61 : GTECH_NAND2 port map( A => n27, B => n58, Z => SUM_3_port);
   U62 : GTECH_NAND2 port map( A => A(3), B => n59, Z => n58);
   U63 : GTECH_NOR2 port map( A => n59, B => A(3), Z => n60);
   U64 : GTECH_NAND2 port map( A => B(2), B => A(2), Z => n59);
   U65 : GTECH_NAND2 port map( A => n61, B => n62, Z => SUM_2_port);
   U66 : GTECH_NAND2 port map( A => B(2), B => n29, Z => n62);
   U67 : GTECH_NAND2 port map( A => A(2), B => n26, Z => n61);
   U68 : GTECH_NAND2 port map( A => n21, B => n63, Z => SUM_27_port);
   U69 : GTECH_NAND2 port map( A => A(27), B => n64, Z => n63);
   U70 : GTECH_NOR2 port map( A => n64, B => A(27), Z => n65);
   U71 : GTECH_NAND2 port map( A => A(26), B => n22, Z => n64);
   U72 : GTECH_NAND2 port map( A => n23, B => n67, Z => SUM_26_port);
   U73 : GTECH_NAND2 port map( A => A(26), B => n66, Z => n67);
   U74 : GTECH_NOR2 port map( A => n66, B => A(26), Z => n68);
   U75 : GTECH_NAND2 port map( A => n69, B => A(25), Z => n66);
   U76 : GTECH_NOR2 port map( A => n70, B => n28, Z => n69);
   U77 : GTECH_NAND2 port map( A => n19, B => n71, Z => SUM_25_port);
   U78 : GTECH_NAND2 port map( A => A(25), B => n72, Z => n71);
   U79 : GTECH_NOR2 port map( A => n72, B => A(25), Z => n73);
   U80 : GTECH_NAND2 port map( A => A(24), B => n20, Z => n72);
   U81 : GTECH_NAND2 port map( A => n74, B => n75, Z => SUM_24_port);
   U82 : GTECH_NAND2 port map( A => A(24), B => n70, Z => n75);
   U83 : GTECH_NAND2 port map( A => n20, B => n28, Z => n74);
   U84 : GTECH_NAND2 port map( A => n76, B => A(23), Z => n70);
   U85 : GTECH_NOR2 port map( A => n77, B => n39, Z => n76);
   U86 : GTECH_NAND2 port map( A => n17, B => n78, Z => SUM_23_port);
   U87 : GTECH_NAND2 port map( A => A(23), B => n79, Z => n78);
   U88 : GTECH_NOR2 port map( A => n79, B => A(23), Z => n80);
   U89 : GTECH_NAND2 port map( A => A(22), B => n18, Z => n79);
   U90 : GTECH_NAND2 port map( A => n81, B => n82, Z => SUM_22_port);
   U91 : GTECH_NAND2 port map( A => A(22), B => n77, Z => n82);
   U92 : GTECH_NAND2 port map( A => n18, B => n39, Z => n81);
   U93 : GTECH_NAND2 port map( A => n83, B => A(21), Z => n77);
   U94 : GTECH_NOR2 port map( A => n84, B => n38, Z => n83);
   U95 : GTECH_NAND2 port map( A => n15, B => n85, Z => SUM_21_port);
   U96 : GTECH_NAND2 port map( A => A(21), B => n86, Z => n85);
   U97 : GTECH_NOR2 port map( A => n86, B => A(21), Z => n87);
   U98 : GTECH_NAND2 port map( A => A(20), B => n16, Z => n86);
   U99 : GTECH_NAND2 port map( A => n88, B => n89, Z => SUM_20_port);
   U100 : GTECH_NAND2 port map( A => A(20), B => n84, Z => n89);
   U101 : GTECH_NAND2 port map( A => n16, B => n38, Z => n88);
   U102 : GTECH_NAND2 port map( A => n90, B => A(19), Z => n84);
   U103 : GTECH_NOR2 port map( A => n91, B => n37, Z => n90);
   U104 : GTECH_NAND2 port map( A => n13, B => n92, Z => SUM_19_port);
   U105 : GTECH_NAND2 port map( A => A(19), B => n93, Z => n92);
   U106 : GTECH_NOR2 port map( A => n93, B => A(19), Z => n94);
   U107 : GTECH_NAND2 port map( A => A(18), B => n14, Z => n93);
   U108 : GTECH_NAND2 port map( A => n95, B => n96, Z => SUM_18_port);
   U109 : GTECH_NAND2 port map( A => A(18), B => n91, Z => n96);
   U110 : GTECH_NAND2 port map( A => n14, B => n37, Z => n95);
   U111 : GTECH_NAND2 port map( A => n97, B => A(17), Z => n91);
   U112 : GTECH_NOR2 port map( A => n98, B => n36, Z => n97);
   U113 : GTECH_NAND2 port map( A => n11, B => n99, Z => SUM_17_port);
   U114 : GTECH_NAND2 port map( A => A(17), B => n100, Z => n99);
   U115 : GTECH_NOR2 port map( A => n100, B => A(17), Z => n101);
   U116 : GTECH_NAND2 port map( A => A(16), B => n12, Z => n100);
   U117 : GTECH_NAND2 port map( A => n102, B => n103, Z => SUM_16_port);
   U118 : GTECH_NAND2 port map( A => A(16), B => n98, Z => n103);
   U119 : GTECH_NAND2 port map( A => n12, B => n36, Z => n102);
   U120 : GTECH_NAND2 port map( A => n104, B => A(15), Z => n98);
   U121 : GTECH_NOR2 port map( A => n105, B => n35, Z => n104);
   U122 : GTECH_NAND2 port map( A => n9, B => n106, Z => SUM_15_port);
   U123 : GTECH_NAND2 port map( A => A(15), B => n107, Z => n106);
   U124 : GTECH_NOR2 port map( A => n107, B => A(15), Z => n108);
   U125 : GTECH_NAND2 port map( A => A(14), B => n10, Z => n107);
   U126 : GTECH_NAND2 port map( A => n109, B => n110, Z => SUM_14_port);
   U127 : GTECH_NAND2 port map( A => A(14), B => n105, Z => n110);
   U128 : GTECH_NAND2 port map( A => n10, B => n35, Z => n109);
   U129 : GTECH_NAND2 port map( A => n111, B => A(13), Z => n105);
   U130 : GTECH_NOR2 port map( A => n112, B => n34, Z => n111);
   U131 : GTECH_NAND2 port map( A => n7, B => n113, Z => SUM_13_port);
   U132 : GTECH_NAND2 port map( A => A(13), B => n114, Z => n113);
   U133 : GTECH_NOR2 port map( A => n114, B => A(13), Z => n115);
   U134 : GTECH_NAND2 port map( A => A(12), B => n8, Z => n114);
   U135 : GTECH_NAND2 port map( A => n116, B => n117, Z => SUM_12_port);
   U136 : GTECH_NAND2 port map( A => A(12), B => n112, Z => n117);
   U137 : GTECH_NAND2 port map( A => n8, B => n34, Z => n116);
   U138 : GTECH_NAND2 port map( A => n118, B => A(11), Z => n112);
   U139 : GTECH_NOR2 port map( A => n119, B => n33, Z => n118);
   U140 : GTECH_NAND2 port map( A => n5, B => n120, Z => SUM_11_port);
   U141 : GTECH_NAND2 port map( A => A(11), B => n121, Z => n120);
   U142 : GTECH_NOR2 port map( A => n121, B => A(11), Z => n122);
   U143 : GTECH_NAND2 port map( A => A(10), B => n6, Z => n121);
   U144 : GTECH_NAND2 port map( A => n123, B => n124, Z => SUM_10_port);
   U145 : GTECH_NAND2 port map( A => A(10), B => n119, Z => n124);
   U146 : GTECH_NAND2 port map( A => n6, B => n33, Z => n123);
   U147 : GTECH_NAND2 port map( A => n125, B => A(9), Z => n119);
   U148 : GTECH_NOR2 port map( A => n45, B => n32, Z => n125);
   U149 : GTECH_NAND2 port map( A => n126, B => A(7), Z => n45);
   U150 : GTECH_NOR2 port map( A => n51, B => n31, Z => n126);
   U151 : GTECH_NAND2 port map( A => n127, B => A(5), Z => n51);
   U152 : GTECH_NOR2 port map( A => n24, B => n30, Z => n127);
   U153 : GTECH_NOR2 port map( A => n128, B => n26, Z => n55);
   U154 : GTECH_NAND2 port map( A => A(2), B => A(3), Z => n128);

end SYN_rpl;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_mem_C.all;

entity mem_C_DW01_dec_1 is

   port( A : in std_logic_vector (31 downto 0);  SUM : out std_logic_vector (31
         downto 0));

end mem_C_DW01_dec_1;

architecture SYN_rpl of mem_C_DW01_dec_1 is

   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   signal SUM_31_port, SUM_30_port, SUM_29_port, SUM_28_port, SUM_27_port, 
      SUM_26_port, SUM_25_port, SUM_24_port, SUM_23_port, SUM_22_port, 
      SUM_21_port, SUM_20_port, SUM_19_port, SUM_18_port, SUM_17_port, 
      SUM_16_port, SUM_15_port, SUM_14_port, SUM_13_port, SUM_12_port, 
      SUM_11_port, SUM_10_port, SUM_9_port, SUM_8_port, SUM_7_port, SUM_6_port,
      SUM_5_port, SUM_4_port, SUM_3_port, SUM_2_port, SUM_1_port, n1, n2, n3, 
      n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, SUM_0_port, 
      n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32
      , n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, 
      n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61
      , n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n73, n74, n75, 
      n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86, n87, n88, n89, n90
      , n91, n92, n93, n94 : std_logic;

begin
   SUM <= ( SUM_31_port, SUM_30_port, SUM_29_port, SUM_28_port, SUM_27_port, 
      SUM_26_port, SUM_25_port, SUM_24_port, SUM_23_port, SUM_22_port, 
      SUM_21_port, SUM_20_port, SUM_19_port, SUM_18_port, SUM_17_port, 
      SUM_16_port, SUM_15_port, SUM_14_port, SUM_13_port, SUM_12_port, 
      SUM_11_port, SUM_10_port, SUM_9_port, SUM_8_port, SUM_7_port, SUM_6_port,
      SUM_5_port, SUM_4_port, SUM_3_port, SUM_2_port, SUM_1_port, SUM_0_port );
   
   U1 : GTECH_NOT port map( A => n54, Z => n1);
   U2 : GTECH_NOT port map( A => n45, Z => n2);
   U3 : GTECH_NOT port map( A => n41, Z => n3);
   U4 : GTECH_NOT port map( A => n37, Z => n4);
   U5 : GTECH_NOT port map( A => n93, Z => n5);
   U6 : GTECH_NOT port map( A => n89, Z => n6);
   U7 : GTECH_NOT port map( A => n85, Z => n7);
   U8 : GTECH_NOT port map( A => n81, Z => n8);
   U9 : GTECH_NOT port map( A => n77, Z => n9);
   U10 : GTECH_NOT port map( A => n72, Z => n10);
   U11 : GTECH_NOT port map( A => n68, Z => n11);
   U12 : GTECH_NOT port map( A => n64, Z => n12);
   U13 : GTECH_NOT port map( A => n60, Z => n13);
   U14 : GTECH_NOT port map( A => n51, Z => n14);
   U15 : GTECH_NOT port map( A => n49, Z => n15);
   U16 : GTECH_NOT port map( A => n58, Z => n16);
   U17 : GTECH_NOT port map( A => A(0), Z => SUM_0_port);
   U18 : GTECH_NOT port map( A => A(15), Z => n18);
   U19 : GTECH_NOT port map( A => A(1), Z => n19);
   U20 : GTECH_NOT port map( A => A(3), Z => n20);
   U21 : GTECH_NOT port map( A => A(5), Z => n21);
   U22 : GTECH_NOT port map( A => A(7), Z => n22);
   U23 : GTECH_NOT port map( A => A(9), Z => n23);
   U24 : GTECH_NOT port map( A => A(11), Z => n24);
   U25 : GTECH_NOT port map( A => A(13), Z => n25);
   U26 : GTECH_NOT port map( A => A(17), Z => n26);
   U27 : GTECH_NOT port map( A => A(19), Z => n27);
   U28 : GTECH_NOT port map( A => A(21), Z => n28);
   U29 : GTECH_NOT port map( A => A(23), Z => n29);
   U30 : GTECH_NOT port map( A => A(25), Z => n30);
   U31 : GTECH_NOT port map( A => A(27), Z => n31);
   U32 : GTECH_NOT port map( A => A(30), Z => n32);
   U33 : GTECH_NAND2 port map( A => n33, B => n34, Z => SUM_9_port);
   U34 : GTECH_NAND2 port map( A => A(9), B => n4, Z => n34);
   U35 : GTECH_NAND2 port map( A => n4, B => n35, Z => SUM_8_port);
   U36 : GTECH_NAND2 port map( A => A(8), B => n36, Z => n35);
   U37 : GTECH_NAND2 port map( A => n36, B => n38, Z => SUM_7_port);
   U38 : GTECH_NAND2 port map( A => A(7), B => n3, Z => n38);
   U39 : GTECH_NAND2 port map( A => n3, B => n39, Z => SUM_6_port);
   U40 : GTECH_NAND2 port map( A => A(6), B => n40, Z => n39);
   U41 : GTECH_NAND2 port map( A => n40, B => n42, Z => SUM_5_port);
   U42 : GTECH_NAND2 port map( A => A(5), B => n2, Z => n42);
   U43 : GTECH_NAND2 port map( A => n2, B => n43, Z => SUM_4_port);
   U44 : GTECH_NAND2 port map( A => A(4), B => n44, Z => n43);
   U45 : GTECH_NAND2 port map( A => n44, B => n46, Z => SUM_3_port);
   U46 : GTECH_NAND2 port map( A => A(3), B => n1, Z => n46);
   U47 : GTECH_NAND2 port map( A => n15, B => n47, Z => SUM_31_port);
   U48 : GTECH_NAND2 port map( A => A(31), B => n48, Z => n47);
   U49 : GTECH_NOR2 port map( A => n48, B => A(31), Z => n49);
   U50 : GTECH_NAND2 port map( A => n48, B => n50, Z => SUM_30_port);
   U51 : GTECH_NAND2 port map( A => A(30), B => n14, Z => n50);
   U52 : GTECH_NAND2 port map( A => n51, B => n32, Z => n48);
   U53 : GTECH_NAND2 port map( A => n1, B => n52, Z => SUM_2_port);
   U54 : GTECH_NAND2 port map( A => A(2), B => n53, Z => n52);
   U55 : GTECH_NAND2 port map( A => n14, B => n55, Z => SUM_29_port);
   U56 : GTECH_NAND2 port map( A => A(29), B => n16, Z => n55);
   U57 : GTECH_NOR2 port map( A => n16, B => A(29), Z => n51);
   U58 : GTECH_NAND2 port map( A => n16, B => n56, Z => SUM_28_port);
   U59 : GTECH_NAND2 port map( A => A(28), B => n57, Z => n56);
   U60 : GTECH_NOR2 port map( A => n57, B => A(28), Z => n58);
   U61 : GTECH_NAND2 port map( A => n57, B => n59, Z => SUM_27_port);
   U62 : GTECH_NAND2 port map( A => A(27), B => n13, Z => n59);
   U63 : GTECH_NAND2 port map( A => n60, B => n31, Z => n57);
   U64 : GTECH_NAND2 port map( A => n13, B => n61, Z => SUM_26_port);
   U65 : GTECH_NAND2 port map( A => A(26), B => n62, Z => n61);
   U66 : GTECH_NOR2 port map( A => n62, B => A(26), Z => n60);
   U67 : GTECH_NAND2 port map( A => n62, B => n63, Z => SUM_25_port);
   U68 : GTECH_NAND2 port map( A => A(25), B => n12, Z => n63);
   U69 : GTECH_NAND2 port map( A => n64, B => n30, Z => n62);
   U70 : GTECH_NAND2 port map( A => n12, B => n65, Z => SUM_24_port);
   U71 : GTECH_NAND2 port map( A => A(24), B => n66, Z => n65);
   U72 : GTECH_NOR2 port map( A => n66, B => A(24), Z => n64);
   U73 : GTECH_NAND2 port map( A => n66, B => n67, Z => SUM_23_port);
   U74 : GTECH_NAND2 port map( A => A(23), B => n11, Z => n67);
   U75 : GTECH_NAND2 port map( A => n68, B => n29, Z => n66);
   U76 : GTECH_NAND2 port map( A => n11, B => n69, Z => SUM_22_port);
   U77 : GTECH_NAND2 port map( A => A(22), B => n70, Z => n69);
   U78 : GTECH_NOR2 port map( A => n70, B => A(22), Z => n68);
   U79 : GTECH_NAND2 port map( A => n70, B => n71, Z => SUM_21_port);
   U80 : GTECH_NAND2 port map( A => A(21), B => n10, Z => n71);
   U81 : GTECH_NAND2 port map( A => n72, B => n28, Z => n70);
   U82 : GTECH_NAND2 port map( A => n10, B => n73, Z => SUM_20_port);
   U83 : GTECH_NAND2 port map( A => A(20), B => n74, Z => n73);
   U84 : GTECH_NOR2 port map( A => n74, B => A(20), Z => n72);
   U85 : GTECH_NAND2 port map( A => n53, B => n75, Z => SUM_1_port);
   U86 : GTECH_NAND2 port map( A => A(1), B => A(0), Z => n75);
   U87 : GTECH_NAND2 port map( A => n74, B => n76, Z => SUM_19_port);
   U88 : GTECH_NAND2 port map( A => A(19), B => n9, Z => n76);
   U89 : GTECH_NAND2 port map( A => n77, B => n27, Z => n74);
   U90 : GTECH_NAND2 port map( A => n9, B => n78, Z => SUM_18_port);
   U91 : GTECH_NAND2 port map( A => A(18), B => n79, Z => n78);
   U92 : GTECH_NOR2 port map( A => n79, B => A(18), Z => n77);
   U93 : GTECH_NAND2 port map( A => n79, B => n80, Z => SUM_17_port);
   U94 : GTECH_NAND2 port map( A => A(17), B => n8, Z => n80);
   U95 : GTECH_NAND2 port map( A => n81, B => n26, Z => n79);
   U96 : GTECH_NAND2 port map( A => n8, B => n82, Z => SUM_16_port);
   U97 : GTECH_NAND2 port map( A => A(16), B => n83, Z => n82);
   U98 : GTECH_NOR2 port map( A => n83, B => A(16), Z => n81);
   U99 : GTECH_NAND2 port map( A => n83, B => n84, Z => SUM_15_port);
   U100 : GTECH_NAND2 port map( A => A(15), B => n7, Z => n84);
   U101 : GTECH_NAND2 port map( A => n85, B => n18, Z => n83);
   U102 : GTECH_NAND2 port map( A => n7, B => n86, Z => SUM_14_port);
   U103 : GTECH_NAND2 port map( A => A(14), B => n87, Z => n86);
   U104 : GTECH_NOR2 port map( A => n87, B => A(14), Z => n85);
   U105 : GTECH_NAND2 port map( A => n87, B => n88, Z => SUM_13_port);
   U106 : GTECH_NAND2 port map( A => A(13), B => n6, Z => n88);
   U107 : GTECH_NAND2 port map( A => n89, B => n25, Z => n87);
   U108 : GTECH_NAND2 port map( A => n6, B => n90, Z => SUM_12_port);
   U109 : GTECH_NAND2 port map( A => A(12), B => n91, Z => n90);
   U110 : GTECH_NOR2 port map( A => n91, B => A(12), Z => n89);
   U111 : GTECH_NAND2 port map( A => n91, B => n92, Z => SUM_11_port);
   U112 : GTECH_NAND2 port map( A => A(11), B => n5, Z => n92);
   U113 : GTECH_NAND2 port map( A => n93, B => n24, Z => n91);
   U114 : GTECH_NAND2 port map( A => n5, B => n94, Z => SUM_10_port);
   U115 : GTECH_NAND2 port map( A => A(10), B => n33, Z => n94);
   U116 : GTECH_NOR2 port map( A => n33, B => A(10), Z => n93);
   U117 : GTECH_NAND2 port map( A => n37, B => n23, Z => n33);
   U118 : GTECH_NOR2 port map( A => n36, B => A(8), Z => n37);
   U119 : GTECH_NAND2 port map( A => n41, B => n22, Z => n36);
   U120 : GTECH_NOR2 port map( A => n40, B => A(6), Z => n41);
   U121 : GTECH_NAND2 port map( A => n45, B => n21, Z => n40);
   U122 : GTECH_NOR2 port map( A => n44, B => A(4), Z => n45);
   U123 : GTECH_NAND2 port map( A => n54, B => n20, Z => n44);
   U124 : GTECH_NOR2 port map( A => n53, B => A(2), Z => n54);
   U125 : GTECH_NAND2 port map( A => n19, B => SUM_0_port, Z => n53);

end SYN_rpl;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_mem_C.all;

entity mem_C_DW01_cmp2_3 is

   port( A, B : in std_logic_vector (32 downto 0);  LEQ, TC : in std_logic;  
         LT_LE, GE_GT : out std_logic);

end mem_C_DW01_cmp2_3;

architecture SYN_rpl of mem_C_DW01_cmp2_3 is

   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   signal n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16
      , n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, 
      n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45
      , n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, 
      n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71 : std_logic;

begin
   
   U1 : GTECH_NOT port map( A => n35, Z => n1);
   U2 : GTECH_NOT port map( A => A(3), Z => n2);
   U3 : GTECH_NOT port map( A => A(2), Z => n3);
   U4 : GTECH_NOT port map( A => A(5), Z => n4);
   U5 : GTECH_NOT port map( A => A(4), Z => n5);
   U6 : GTECH_NOT port map( A => A(6), Z => n6);
   U7 : GTECH_NOT port map( A => A(11), Z => n7);
   U8 : GTECH_NOT port map( A => A(14), Z => n8);
   U9 : GTECH_NOT port map( A => n67, Z => n9);
   U10 : GTECH_NOT port map( A => n70, Z => n10);
   U11 : GTECH_NOT port map( A => n71, Z => n11);
   U12 : GTECH_NOT port map( A => A(27), Z => n12);
   U13 : GTECH_NOT port map( A => B(7), Z => n13);
   U14 : GTECH_NOT port map( A => B(6), Z => n14);
   U15 : GTECH_NOT port map( A => B(1), Z => n15);
   U16 : GTECH_NOT port map( A => B(2), Z => n16);
   U17 : GTECH_NOT port map( A => B(3), Z => n17);
   U18 : GTECH_NOT port map( A => B(4), Z => n18);
   U19 : GTECH_NOT port map( A => B(5), Z => n19);
   U20 : GTECH_NOR2 port map( A => n20, B => n21, Z => LT_LE);
   U21 : GTECH_NAND2 port map( A => n22, B => n23, Z => n21);
   U22 : GTECH_NOR2 port map( A => n24, B => n25, Z => n23);
   U23 : GTECH_NAND2 port map( A => n26, B => n8, Z => n25);
   U24 : GTECH_NOR2 port map( A => A(16), B => A(15), Z => n26);
   U25 : GTECH_NAND2 port map( A => n27, B => n28, Z => n24);
   U26 : GTECH_NOR2 port map( A => A(20), B => A(19), Z => n28);
   U27 : GTECH_NOR2 port map( A => A(18), B => A(17), Z => n27);
   U28 : GTECH_NOR2 port map( A => n29, B => n30, Z => n22);
   U29 : GTECH_NAND2 port map( A => n31, B => n32, Z => n30);
   U30 : GTECH_NAND2 port map( A => A(7), B => n13, Z => n32);
   U31 : GTECH_NOR2 port map( A => A(10), B => n33, Z => n31);
   U32 : GTECH_NOR2 port map( A => n1, B => n34, Z => n33);
   U33 : GTECH_NOR2 port map( A => n13, B => A(7), Z => n34);
   U34 : GTECH_NOR2 port map( A => n36, B => n37, Z => n35);
   U35 : GTECH_NOR2 port map( A => n38, B => n39, Z => n37);
   U36 : GTECH_NAND2 port map( A => n40, B => n41, Z => n39);
   U37 : GTECH_NAND2 port map( A => n42, B => n43, Z => n41);
   U38 : GTECH_NAND2 port map( A => B(5), B => n4, Z => n43);
   U39 : GTECH_NOR2 port map( A => n44, B => n45, Z => n42);
   U40 : GTECH_NOR2 port map( A => n46, B => n47, Z => n45);
   U41 : GTECH_NAND2 port map( A => n48, B => n49, Z => n47);
   U42 : GTECH_NAND2 port map( A => n50, B => n51, Z => n49);
   U43 : GTECH_NAND2 port map( A => B(3), B => n2, Z => n51);
   U44 : GTECH_NOR2 port map( A => n52, B => n53, Z => n50);
   U45 : GTECH_NOR2 port map( A => n54, B => n55, Z => n53);
   U46 : GTECH_NAND2 port map( A => n56, B => n57, Z => n55);
   U47 : GTECH_NAND2 port map( A => n58, B => A(0), Z => n57);
   U48 : GTECH_NOR2 port map( A => B(0), B => n59, Z => n58);
   U49 : GTECH_NOR2 port map( A => A(1), B => n15, Z => n59);
   U50 : GTECH_NAND2 port map( A => A(1), B => n15, Z => n56);
   U51 : GTECH_NOR2 port map( A => B(2), B => n3, Z => n54);
   U52 : GTECH_NOR2 port map( A => A(2), B => n16, Z => n52);
   U53 : GTECH_NAND2 port map( A => A(3), B => n17, Z => n48);
   U54 : GTECH_NOR2 port map( A => B(4), B => n5, Z => n46);
   U55 : GTECH_NOR2 port map( A => A(4), B => n18, Z => n44);
   U56 : GTECH_NAND2 port map( A => A(5), B => n19, Z => n40);
   U57 : GTECH_NOR2 port map( A => B(6), B => n6, Z => n38);
   U58 : GTECH_NOR2 port map( A => A(6), B => n14, Z => n36);
   U59 : GTECH_NAND2 port map( A => n60, B => n7, Z => n29);
   U60 : GTECH_NOR2 port map( A => A(13), B => A(12), Z => n60);
   U61 : GTECH_NAND2 port map( A => n9, B => n61, Z => n20);
   U62 : GTECH_NOR2 port map( A => n62, B => n63, Z => n61);
   U63 : GTECH_NAND2 port map( A => n64, B => n12, Z => n63);
   U64 : GTECH_NOR2 port map( A => A(29), B => A(28), Z => n64);
   U65 : GTECH_NAND2 port map( A => n65, B => n66, Z => n62);
   U66 : GTECH_NOR2 port map( A => A(9), B => A(8), Z => n66);
   U67 : GTECH_NOR2 port map( A => A(31), B => A(30), Z => n65);
   U68 : GTECH_NAND2 port map( A => n68, B => n69, Z => n67);
   U69 : GTECH_NOR2 port map( A => n10, B => A(21), Z => n69);
   U70 : GTECH_NOR2 port map( A => A(23), B => A(22), Z => n70);
   U71 : GTECH_NOR2 port map( A => n11, B => A(24), Z => n68);
   U72 : GTECH_NOR2 port map( A => A(26), B => A(25), Z => n71);

end SYN_rpl;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_mem_C.all;

entity mem_C_DW01_inc_1 is

   port( A : in std_logic_vector (7 downto 0);  SUM : out std_logic_vector (7 
         downto 0));

end mem_C_DW01_inc_1;

architecture SYN_rpl of mem_C_DW01_inc_1 is

   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   signal SUM_7_port, SUM_6_port, SUM_5_port, SUM_4_port, SUM_3_port, 
      SUM_2_port, SUM_1_port, n1, n2, n3, n4, n5, SUM_0_port, n7, n8, n9, n10, 
      n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25
      , n26, n27, n28, n29, n30, n31, n32, n33 : std_logic;

begin
   SUM <= ( SUM_7_port, SUM_6_port, SUM_5_port, SUM_4_port, SUM_3_port, 
      SUM_2_port, SUM_1_port, SUM_0_port );
   
   U1 : GTECH_NOT port map( A => n25, Z => n1);
   U2 : GTECH_NOT port map( A => n22, Z => n2);
   U3 : GTECH_NOT port map( A => n18, Z => n3);
   U4 : GTECH_NOT port map( A => n17, Z => n4);
   U5 : GTECH_NOT port map( A => n14, Z => n5);
   U6 : GTECH_NOT port map( A => A(0), Z => SUM_0_port);
   U7 : GTECH_NOT port map( A => n31, Z => n7);
   U8 : GTECH_NOT port map( A => A(6), Z => n8);
   U9 : GTECH_NOT port map( A => A(1), Z => n9);
   U10 : GTECH_NOT port map( A => A(3), Z => n10);
   U11 : GTECH_NOT port map( A => A(5), Z => n11);
   U12 : GTECH_NAND2 port map( A => n5, B => n12, Z => SUM_7_port);
   U13 : GTECH_NAND2 port map( A => A(7), B => n13, Z => n12);
   U14 : GTECH_NOR2 port map( A => n13, B => A(7), Z => n14);
   U15 : GTECH_NAND2 port map( A => A(6), B => n15, Z => n13);
   U16 : GTECH_NAND2 port map( A => n16, B => n4, Z => SUM_6_port);
   U17 : GTECH_NOR2 port map( A => n8, B => n15, Z => n17);
   U18 : GTECH_NAND2 port map( A => n15, B => n8, Z => n16);
   U19 : GTECH_NOR2 port map( A => n11, B => n18, Z => n15);
   U20 : GTECH_NAND2 port map( A => n19, B => n20, Z => SUM_5_port);
   U21 : GTECH_NAND2 port map( A => A(5), B => n18, Z => n20);
   U22 : GTECH_NAND2 port map( A => n3, B => n11, Z => n19);
   U23 : GTECH_NAND2 port map( A => n21, B => A(4), Z => n18);
   U24 : GTECH_NOR2 port map( A => n22, B => n10, Z => n21);
   U25 : GTECH_NAND2 port map( A => n1, B => n23, Z => SUM_4_port);
   U26 : GTECH_NAND2 port map( A => A(4), B => n24, Z => n23);
   U27 : GTECH_NOR2 port map( A => n24, B => A(4), Z => n25);
   U28 : GTECH_NAND2 port map( A => A(3), B => n2, Z => n24);
   U29 : GTECH_NAND2 port map( A => n26, B => n27, Z => SUM_3_port);
   U30 : GTECH_NAND2 port map( A => A(3), B => n22, Z => n27);
   U31 : GTECH_NAND2 port map( A => n2, B => n10, Z => n26);
   U32 : GTECH_NAND2 port map( A => n28, B => A(2), Z => n22);
   U33 : GTECH_NOR2 port map( A => SUM_0_port, B => n9, Z => n28);
   U34 : GTECH_NAND2 port map( A => n7, B => n29, Z => SUM_2_port);
   U35 : GTECH_NAND2 port map( A => A(2), B => n30, Z => n29);
   U36 : GTECH_NOR2 port map( A => n30, B => A(2), Z => n31);
   U37 : GTECH_NAND2 port map( A => A(1), B => A(0), Z => n30);
   U38 : GTECH_NAND2 port map( A => n32, B => n33, Z => SUM_1_port);
   U39 : GTECH_NAND2 port map( A => A(1), B => SUM_0_port, Z => n33);
   U40 : GTECH_NAND2 port map( A => A(0), B => n9, Z => n32);

end SYN_rpl;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_mem_C.all;

entity mem_C_DW01_dec_0 is

   port( A : in std_logic_vector (31 downto 0);  SUM : out std_logic_vector (31
         downto 0));

end mem_C_DW01_dec_0;

architecture SYN_rpl of mem_C_DW01_dec_0 is

   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   signal SUM_31_port, SUM_30_port, SUM_29_port, SUM_28_port, SUM_27_port, 
      SUM_26_port, SUM_25_port, SUM_24_port, SUM_23_port, SUM_22_port, 
      SUM_21_port, SUM_20_port, SUM_19_port, SUM_18_port, SUM_17_port, 
      SUM_16_port, SUM_15_port, SUM_14_port, SUM_13_port, SUM_12_port, 
      SUM_11_port, SUM_10_port, SUM_9_port, SUM_8_port, SUM_7_port, SUM_6_port,
      SUM_5_port, SUM_4_port, SUM_3_port, SUM_2_port, SUM_1_port, n1, n2, n3, 
      n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19,
      n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, SUM_0_port, 
      n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47
      , n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61, 
      n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n73, n74, n75, n76
      , n77, n78, n79, n80, n81, n82, n83, n84, n85, n86, n87, n88, n89, n90, 
      n91, n92, n93, n94 : std_logic;

begin
   SUM <= ( SUM_31_port, SUM_30_port, SUM_29_port, SUM_28_port, SUM_27_port, 
      SUM_26_port, SUM_25_port, SUM_24_port, SUM_23_port, SUM_22_port, 
      SUM_21_port, SUM_20_port, SUM_19_port, SUM_18_port, SUM_17_port, 
      SUM_16_port, SUM_15_port, SUM_14_port, SUM_13_port, SUM_12_port, 
      SUM_11_port, SUM_10_port, SUM_9_port, SUM_8_port, SUM_7_port, SUM_6_port,
      SUM_5_port, SUM_4_port, SUM_3_port, SUM_2_port, SUM_1_port, SUM_0_port );
   
   U1 : GTECH_NOT port map( A => n49, Z => n1);
   U2 : GTECH_NOT port map( A => A(30), Z => n2);
   U3 : GTECH_NOT port map( A => n51, Z => n3);
   U4 : GTECH_NOT port map( A => n58, Z => n4);
   U5 : GTECH_NOT port map( A => A(27), Z => n5);
   U6 : GTECH_NOT port map( A => n60, Z => n6);
   U7 : GTECH_NOT port map( A => A(25), Z => n7);
   U8 : GTECH_NOT port map( A => n64, Z => n8);
   U9 : GTECH_NOT port map( A => A(23), Z => n9);
   U10 : GTECH_NOT port map( A => n68, Z => n10);
   U11 : GTECH_NOT port map( A => A(21), Z => n11);
   U12 : GTECH_NOT port map( A => n72, Z => n12);
   U13 : GTECH_NOT port map( A => A(19), Z => n13);
   U14 : GTECH_NOT port map( A => n77, Z => n14);
   U15 : GTECH_NOT port map( A => A(17), Z => n15);
   U16 : GTECH_NOT port map( A => n81, Z => n16);
   U17 : GTECH_NOT port map( A => A(15), Z => n17);
   U18 : GTECH_NOT port map( A => n85, Z => n18);
   U19 : GTECH_NOT port map( A => A(13), Z => n19);
   U20 : GTECH_NOT port map( A => n89, Z => n20);
   U21 : GTECH_NOT port map( A => A(11), Z => n21);
   U22 : GTECH_NOT port map( A => n93, Z => n22);
   U23 : GTECH_NOT port map( A => A(9), Z => n23);
   U24 : GTECH_NOT port map( A => n37, Z => n24);
   U25 : GTECH_NOT port map( A => A(7), Z => n25);
   U26 : GTECH_NOT port map( A => n41, Z => n26);
   U27 : GTECH_NOT port map( A => A(5), Z => n27);
   U28 : GTECH_NOT port map( A => n45, Z => n28);
   U29 : GTECH_NOT port map( A => A(3), Z => n29);
   U30 : GTECH_NOT port map( A => n54, Z => n30);
   U31 : GTECH_NOT port map( A => A(1), Z => n31);
   U32 : GTECH_NOT port map( A => A(0), Z => SUM_0_port);
   U33 : GTECH_NAND2 port map( A => n33, B => n34, Z => SUM_9_port);
   U34 : GTECH_NAND2 port map( A => A(9), B => n24, Z => n34);
   U35 : GTECH_NAND2 port map( A => n24, B => n35, Z => SUM_8_port);
   U36 : GTECH_NAND2 port map( A => A(8), B => n36, Z => n35);
   U37 : GTECH_NAND2 port map( A => n36, B => n38, Z => SUM_7_port);
   U38 : GTECH_NAND2 port map( A => A(7), B => n26, Z => n38);
   U39 : GTECH_NAND2 port map( A => n26, B => n39, Z => SUM_6_port);
   U40 : GTECH_NAND2 port map( A => A(6), B => n40, Z => n39);
   U41 : GTECH_NAND2 port map( A => n40, B => n42, Z => SUM_5_port);
   U42 : GTECH_NAND2 port map( A => A(5), B => n28, Z => n42);
   U43 : GTECH_NAND2 port map( A => n28, B => n43, Z => SUM_4_port);
   U44 : GTECH_NAND2 port map( A => A(4), B => n44, Z => n43);
   U45 : GTECH_NAND2 port map( A => n44, B => n46, Z => SUM_3_port);
   U46 : GTECH_NAND2 port map( A => A(3), B => n30, Z => n46);
   U47 : GTECH_NAND2 port map( A => n1, B => n47, Z => SUM_31_port);
   U48 : GTECH_NAND2 port map( A => A(31), B => n48, Z => n47);
   U49 : GTECH_NOR2 port map( A => n48, B => A(31), Z => n49);
   U50 : GTECH_NAND2 port map( A => n48, B => n50, Z => SUM_30_port);
   U51 : GTECH_NAND2 port map( A => A(30), B => n3, Z => n50);
   U52 : GTECH_NAND2 port map( A => n51, B => n2, Z => n48);
   U53 : GTECH_NAND2 port map( A => n30, B => n52, Z => SUM_2_port);
   U54 : GTECH_NAND2 port map( A => A(2), B => n53, Z => n52);
   U55 : GTECH_NAND2 port map( A => n3, B => n55, Z => SUM_29_port);
   U56 : GTECH_NAND2 port map( A => A(29), B => n4, Z => n55);
   U57 : GTECH_NOR2 port map( A => n4, B => A(29), Z => n51);
   U58 : GTECH_NAND2 port map( A => n4, B => n56, Z => SUM_28_port);
   U59 : GTECH_NAND2 port map( A => A(28), B => n57, Z => n56);
   U60 : GTECH_NOR2 port map( A => n57, B => A(28), Z => n58);
   U61 : GTECH_NAND2 port map( A => n57, B => n59, Z => SUM_27_port);
   U62 : GTECH_NAND2 port map( A => A(27), B => n6, Z => n59);
   U63 : GTECH_NAND2 port map( A => n60, B => n5, Z => n57);
   U64 : GTECH_NAND2 port map( A => n6, B => n61, Z => SUM_26_port);
   U65 : GTECH_NAND2 port map( A => A(26), B => n62, Z => n61);
   U66 : GTECH_NOR2 port map( A => n62, B => A(26), Z => n60);
   U67 : GTECH_NAND2 port map( A => n62, B => n63, Z => SUM_25_port);
   U68 : GTECH_NAND2 port map( A => A(25), B => n8, Z => n63);
   U69 : GTECH_NAND2 port map( A => n64, B => n7, Z => n62);
   U70 : GTECH_NAND2 port map( A => n8, B => n65, Z => SUM_24_port);
   U71 : GTECH_NAND2 port map( A => A(24), B => n66, Z => n65);
   U72 : GTECH_NOR2 port map( A => n66, B => A(24), Z => n64);
   U73 : GTECH_NAND2 port map( A => n66, B => n67, Z => SUM_23_port);
   U74 : GTECH_NAND2 port map( A => A(23), B => n10, Z => n67);
   U75 : GTECH_NAND2 port map( A => n68, B => n9, Z => n66);
   U76 : GTECH_NAND2 port map( A => n10, B => n69, Z => SUM_22_port);
   U77 : GTECH_NAND2 port map( A => A(22), B => n70, Z => n69);
   U78 : GTECH_NOR2 port map( A => n70, B => A(22), Z => n68);
   U79 : GTECH_NAND2 port map( A => n70, B => n71, Z => SUM_21_port);
   U80 : GTECH_NAND2 port map( A => A(21), B => n12, Z => n71);
   U81 : GTECH_NAND2 port map( A => n72, B => n11, Z => n70);
   U82 : GTECH_NAND2 port map( A => n12, B => n73, Z => SUM_20_port);
   U83 : GTECH_NAND2 port map( A => A(20), B => n74, Z => n73);
   U84 : GTECH_NOR2 port map( A => n74, B => A(20), Z => n72);
   U85 : GTECH_NAND2 port map( A => n53, B => n75, Z => SUM_1_port);
   U86 : GTECH_NAND2 port map( A => A(1), B => A(0), Z => n75);
   U87 : GTECH_NAND2 port map( A => n74, B => n76, Z => SUM_19_port);
   U88 : GTECH_NAND2 port map( A => A(19), B => n14, Z => n76);
   U89 : GTECH_NAND2 port map( A => n77, B => n13, Z => n74);
   U90 : GTECH_NAND2 port map( A => n14, B => n78, Z => SUM_18_port);
   U91 : GTECH_NAND2 port map( A => A(18), B => n79, Z => n78);
   U92 : GTECH_NOR2 port map( A => n79, B => A(18), Z => n77);
   U93 : GTECH_NAND2 port map( A => n79, B => n80, Z => SUM_17_port);
   U94 : GTECH_NAND2 port map( A => A(17), B => n16, Z => n80);
   U95 : GTECH_NAND2 port map( A => n81, B => n15, Z => n79);
   U96 : GTECH_NAND2 port map( A => n16, B => n82, Z => SUM_16_port);
   U97 : GTECH_NAND2 port map( A => A(16), B => n83, Z => n82);
   U98 : GTECH_NOR2 port map( A => n83, B => A(16), Z => n81);
   U99 : GTECH_NAND2 port map( A => n83, B => n84, Z => SUM_15_port);
   U100 : GTECH_NAND2 port map( A => A(15), B => n18, Z => n84);
   U101 : GTECH_NAND2 port map( A => n85, B => n17, Z => n83);
   U102 : GTECH_NAND2 port map( A => n18, B => n86, Z => SUM_14_port);
   U103 : GTECH_NAND2 port map( A => A(14), B => n87, Z => n86);
   U104 : GTECH_NOR2 port map( A => n87, B => A(14), Z => n85);
   U105 : GTECH_NAND2 port map( A => n87, B => n88, Z => SUM_13_port);
   U106 : GTECH_NAND2 port map( A => A(13), B => n20, Z => n88);
   U107 : GTECH_NAND2 port map( A => n89, B => n19, Z => n87);
   U108 : GTECH_NAND2 port map( A => n20, B => n90, Z => SUM_12_port);
   U109 : GTECH_NAND2 port map( A => A(12), B => n91, Z => n90);
   U110 : GTECH_NOR2 port map( A => n91, B => A(12), Z => n89);
   U111 : GTECH_NAND2 port map( A => n91, B => n92, Z => SUM_11_port);
   U112 : GTECH_NAND2 port map( A => A(11), B => n22, Z => n92);
   U113 : GTECH_NAND2 port map( A => n93, B => n21, Z => n91);
   U114 : GTECH_NAND2 port map( A => n22, B => n94, Z => SUM_10_port);
   U115 : GTECH_NAND2 port map( A => A(10), B => n33, Z => n94);
   U116 : GTECH_NOR2 port map( A => n33, B => A(10), Z => n93);
   U117 : GTECH_NAND2 port map( A => n37, B => n23, Z => n33);
   U118 : GTECH_NOR2 port map( A => n36, B => A(8), Z => n37);
   U119 : GTECH_NAND2 port map( A => n41, B => n25, Z => n36);
   U120 : GTECH_NOR2 port map( A => n40, B => A(6), Z => n41);
   U121 : GTECH_NAND2 port map( A => n45, B => n27, Z => n40);
   U122 : GTECH_NOR2 port map( A => n44, B => A(4), Z => n45);
   U123 : GTECH_NAND2 port map( A => n54, B => n29, Z => n44);
   U124 : GTECH_NOR2 port map( A => n53, B => A(2), Z => n54);
   U125 : GTECH_NAND2 port map( A => n31, B => SUM_0_port, Z => n53);

end SYN_rpl;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_mem_C.all;

entity mem_C_DW01_cmp2_2 is

   port( A, B : in std_logic_vector (32 downto 0);  LEQ, TC : in std_logic;  
         LT_LE, GE_GT : out std_logic);

end mem_C_DW01_cmp2_2;

architecture SYN_rpl of mem_C_DW01_cmp2_2 is

   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   signal n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16
      , n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, 
      n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45
      , n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, 
      n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71 : std_logic;

begin
   
   U1 : GTECH_NOT port map( A => n35, Z => n1);
   U2 : GTECH_NOT port map( A => B(7), Z => n2);
   U3 : GTECH_NOT port map( A => A(27), Z => n3);
   U4 : GTECH_NOT port map( A => n67, Z => n4);
   U5 : GTECH_NOT port map( A => n71, Z => n5);
   U6 : GTECH_NOT port map( A => n70, Z => n6);
   U7 : GTECH_NOT port map( A => A(14), Z => n7);
   U8 : GTECH_NOT port map( A => A(11), Z => n8);
   U9 : GTECH_NOT port map( A => A(6), Z => n9);
   U10 : GTECH_NOT port map( A => A(5), Z => n10);
   U11 : GTECH_NOT port map( A => A(4), Z => n11);
   U12 : GTECH_NOT port map( A => A(3), Z => n12);
   U13 : GTECH_NOT port map( A => A(2), Z => n13);
   U14 : GTECH_NOT port map( A => B(6), Z => n14);
   U15 : GTECH_NOT port map( A => B(1), Z => n15);
   U16 : GTECH_NOT port map( A => B(2), Z => n16);
   U17 : GTECH_NOT port map( A => B(3), Z => n17);
   U18 : GTECH_NOT port map( A => B(4), Z => n18);
   U19 : GTECH_NOT port map( A => B(5), Z => n19);
   U20 : GTECH_NOR2 port map( A => n20, B => n21, Z => LT_LE);
   U21 : GTECH_NAND2 port map( A => n22, B => n23, Z => n21);
   U22 : GTECH_NOR2 port map( A => n24, B => n25, Z => n23);
   U23 : GTECH_NAND2 port map( A => n26, B => n7, Z => n25);
   U24 : GTECH_NOR2 port map( A => A(16), B => A(15), Z => n26);
   U25 : GTECH_NAND2 port map( A => n27, B => n28, Z => n24);
   U26 : GTECH_NOR2 port map( A => A(20), B => A(19), Z => n28);
   U27 : GTECH_NOR2 port map( A => A(18), B => A(17), Z => n27);
   U28 : GTECH_NOR2 port map( A => n29, B => n30, Z => n22);
   U29 : GTECH_NAND2 port map( A => n31, B => n32, Z => n30);
   U30 : GTECH_NAND2 port map( A => A(7), B => n2, Z => n32);
   U31 : GTECH_NOR2 port map( A => A(10), B => n33, Z => n31);
   U32 : GTECH_NOR2 port map( A => n1, B => n34, Z => n33);
   U33 : GTECH_NOR2 port map( A => n2, B => A(7), Z => n34);
   U34 : GTECH_NOR2 port map( A => n36, B => n37, Z => n35);
   U35 : GTECH_NOR2 port map( A => n38, B => n39, Z => n37);
   U36 : GTECH_NAND2 port map( A => n40, B => n41, Z => n39);
   U37 : GTECH_NAND2 port map( A => n42, B => n43, Z => n41);
   U38 : GTECH_NAND2 port map( A => B(5), B => n10, Z => n43);
   U39 : GTECH_NOR2 port map( A => n44, B => n45, Z => n42);
   U40 : GTECH_NOR2 port map( A => n46, B => n47, Z => n45);
   U41 : GTECH_NAND2 port map( A => n48, B => n49, Z => n47);
   U42 : GTECH_NAND2 port map( A => n50, B => n51, Z => n49);
   U43 : GTECH_NAND2 port map( A => B(3), B => n12, Z => n51);
   U44 : GTECH_NOR2 port map( A => n52, B => n53, Z => n50);
   U45 : GTECH_NOR2 port map( A => n54, B => n55, Z => n53);
   U46 : GTECH_NAND2 port map( A => n56, B => n57, Z => n55);
   U47 : GTECH_NAND2 port map( A => n58, B => A(0), Z => n57);
   U48 : GTECH_NOR2 port map( A => B(0), B => n59, Z => n58);
   U49 : GTECH_NOR2 port map( A => A(1), B => n15, Z => n59);
   U50 : GTECH_NAND2 port map( A => A(1), B => n15, Z => n56);
   U51 : GTECH_NOR2 port map( A => B(2), B => n13, Z => n54);
   U52 : GTECH_NOR2 port map( A => A(2), B => n16, Z => n52);
   U53 : GTECH_NAND2 port map( A => A(3), B => n17, Z => n48);
   U54 : GTECH_NOR2 port map( A => B(4), B => n11, Z => n46);
   U55 : GTECH_NOR2 port map( A => A(4), B => n18, Z => n44);
   U56 : GTECH_NAND2 port map( A => A(5), B => n19, Z => n40);
   U57 : GTECH_NOR2 port map( A => B(6), B => n9, Z => n38);
   U58 : GTECH_NOR2 port map( A => A(6), B => n14, Z => n36);
   U59 : GTECH_NAND2 port map( A => n60, B => n8, Z => n29);
   U60 : GTECH_NOR2 port map( A => A(13), B => A(12), Z => n60);
   U61 : GTECH_NAND2 port map( A => n4, B => n61, Z => n20);
   U62 : GTECH_NOR2 port map( A => n62, B => n63, Z => n61);
   U63 : GTECH_NAND2 port map( A => n64, B => n3, Z => n63);
   U64 : GTECH_NOR2 port map( A => A(29), B => A(28), Z => n64);
   U65 : GTECH_NAND2 port map( A => n65, B => n66, Z => n62);
   U66 : GTECH_NOR2 port map( A => A(9), B => A(8), Z => n66);
   U67 : GTECH_NOR2 port map( A => A(31), B => A(30), Z => n65);
   U68 : GTECH_NAND2 port map( A => n68, B => n69, Z => n67);
   U69 : GTECH_NOR2 port map( A => n6, B => A(21), Z => n69);
   U70 : GTECH_NOR2 port map( A => A(23), B => A(22), Z => n70);
   U71 : GTECH_NOR2 port map( A => n5, B => A(24), Z => n68);
   U72 : GTECH_NOR2 port map( A => A(26), B => A(25), Z => n71);

end SYN_rpl;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_mem_C.all;

entity mem_C_DW01_sub_0 is

   port( A, B : in std_logic_vector (27 downto 0);  CI : in std_logic;  DIFF : 
         out std_logic_vector (27 downto 0);  CO : out std_logic);

end mem_C_DW01_sub_0;

architecture SYN_rpl of mem_C_DW01_sub_0 is

   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   signal DIFF_27_port, DIFF_26_port, DIFF_25_port, DIFF_24_port, DIFF_23_port,
      DIFF_22_port, DIFF_21_port, DIFF_20_port, DIFF_19_port, DIFF_18_port, 
      DIFF_17_port, DIFF_16_port, DIFF_15_port, DIFF_14_port, DIFF_13_port, 
      DIFF_12_port, DIFF_11_port, DIFF_10_port, DIFF_9_port, DIFF_8_port, 
      DIFF_7_port, DIFF_6_port, DIFF_5_port, DIFF_4_port, DIFF_3_port, n1, n2, 
      n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, DIFF_2_port, n16, 
      n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31
      , n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, 
      n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60
      , n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n73, n74, 
      n75, n76 : std_logic;

begin
   DIFF <= ( DIFF_27_port, DIFF_26_port, DIFF_25_port, DIFF_24_port, 
      DIFF_23_port, DIFF_22_port, DIFF_21_port, DIFF_20_port, DIFF_19_port, 
      DIFF_18_port, DIFF_17_port, DIFF_16_port, DIFF_15_port, DIFF_14_port, 
      DIFF_13_port, DIFF_12_port, DIFF_11_port, DIFF_10_port, DIFF_9_port, 
      DIFF_8_port, DIFF_7_port, DIFF_6_port, DIFF_5_port, DIFF_4_port, 
      DIFF_3_port, DIFF_2_port, A(1), A(0) );
   
   U1 : GTECH_NOT port map( A => n43, Z => n1);
   U2 : GTECH_NOT port map( A => A(26), Z => n2);
   U3 : GTECH_NOT port map( A => n45, Z => n3);
   U4 : GTECH_NOT port map( A => n49, Z => n4);
   U5 : GTECH_NOT port map( A => n39, Z => n5);
   U6 : GTECH_NOT port map( A => n35, Z => n6);
   U7 : GTECH_NOT port map( A => n31, Z => n7);
   U8 : GTECH_NOT port map( A => n75, Z => n8);
   U9 : GTECH_NOT port map( A => n71, Z => n9);
   U10 : GTECH_NOT port map( A => n67, Z => n10);
   U11 : GTECH_NOT port map( A => n63, Z => n11);
   U12 : GTECH_NOT port map( A => n59, Z => n12);
   U13 : GTECH_NOT port map( A => n55, Z => n13);
   U14 : GTECH_NOT port map( A => n51, Z => n14);
   U15 : GTECH_NOT port map( A => A(2), Z => DIFF_2_port);
   U16 : GTECH_NOT port map( A => A(3), Z => n16);
   U17 : GTECH_NOT port map( A => A(5), Z => n17);
   U18 : GTECH_NOT port map( A => A(7), Z => n18);
   U19 : GTECH_NOT port map( A => A(9), Z => n19);
   U20 : GTECH_NOT port map( A => A(11), Z => n20);
   U21 : GTECH_NOT port map( A => A(13), Z => n21);
   U22 : GTECH_NOT port map( A => A(15), Z => n22);
   U23 : GTECH_NOT port map( A => A(17), Z => n23);
   U24 : GTECH_NOT port map( A => A(19), Z => n24);
   U25 : GTECH_NOT port map( A => A(21), Z => n25);
   U26 : GTECH_NOT port map( A => A(23), Z => n26);
   U27 : GTECH_NAND2 port map( A => n27, B => n28, Z => DIFF_9_port);
   U28 : GTECH_NAND2 port map( A => A(9), B => n7, Z => n28);
   U29 : GTECH_NAND2 port map( A => n7, B => n29, Z => DIFF_8_port);
   U30 : GTECH_NAND2 port map( A => A(8), B => n30, Z => n29);
   U31 : GTECH_NAND2 port map( A => n30, B => n32, Z => DIFF_7_port);
   U32 : GTECH_NAND2 port map( A => A(7), B => n6, Z => n32);
   U33 : GTECH_NAND2 port map( A => n6, B => n33, Z => DIFF_6_port);
   U34 : GTECH_NAND2 port map( A => A(6), B => n34, Z => n33);
   U35 : GTECH_NAND2 port map( A => n34, B => n36, Z => DIFF_5_port);
   U36 : GTECH_NAND2 port map( A => A(5), B => n5, Z => n36);
   U37 : GTECH_NAND2 port map( A => n5, B => n37, Z => DIFF_4_port);
   U38 : GTECH_NAND2 port map( A => A(4), B => n38, Z => n37);
   U39 : GTECH_NAND2 port map( A => n38, B => n40, Z => DIFF_3_port);
   U40 : GTECH_NAND2 port map( A => A(3), B => A(2), Z => n40);
   U41 : GTECH_NAND2 port map( A => n1, B => n41, Z => DIFF_27_port);
   U42 : GTECH_NAND2 port map( A => A(27), B => n42, Z => n41);
   U43 : GTECH_NOR2 port map( A => n42, B => A(27), Z => n43);
   U44 : GTECH_NAND2 port map( A => n42, B => n44, Z => DIFF_26_port);
   U45 : GTECH_NAND2 port map( A => A(26), B => n3, Z => n44);
   U46 : GTECH_NAND2 port map( A => n45, B => n2, Z => n42);
   U47 : GTECH_NAND2 port map( A => n3, B => n46, Z => DIFF_25_port);
   U48 : GTECH_NAND2 port map( A => A(25), B => n4, Z => n46);
   U49 : GTECH_NOR2 port map( A => n4, B => A(25), Z => n45);
   U50 : GTECH_NAND2 port map( A => n4, B => n47, Z => DIFF_24_port);
   U51 : GTECH_NAND2 port map( A => A(24), B => n48, Z => n47);
   U52 : GTECH_NOR2 port map( A => n48, B => A(24), Z => n49);
   U53 : GTECH_NAND2 port map( A => n48, B => n50, Z => DIFF_23_port);
   U54 : GTECH_NAND2 port map( A => A(23), B => n14, Z => n50);
   U55 : GTECH_NAND2 port map( A => n51, B => n26, Z => n48);
   U56 : GTECH_NAND2 port map( A => n14, B => n52, Z => DIFF_22_port);
   U57 : GTECH_NAND2 port map( A => A(22), B => n53, Z => n52);
   U58 : GTECH_NOR2 port map( A => n53, B => A(22), Z => n51);
   U59 : GTECH_NAND2 port map( A => n53, B => n54, Z => DIFF_21_port);
   U60 : GTECH_NAND2 port map( A => A(21), B => n13, Z => n54);
   U61 : GTECH_NAND2 port map( A => n55, B => n25, Z => n53);
   U62 : GTECH_NAND2 port map( A => n13, B => n56, Z => DIFF_20_port);
   U63 : GTECH_NAND2 port map( A => A(20), B => n57, Z => n56);
   U64 : GTECH_NOR2 port map( A => n57, B => A(20), Z => n55);
   U65 : GTECH_NAND2 port map( A => n57, B => n58, Z => DIFF_19_port);
   U66 : GTECH_NAND2 port map( A => A(19), B => n12, Z => n58);
   U67 : GTECH_NAND2 port map( A => n59, B => n24, Z => n57);
   U68 : GTECH_NAND2 port map( A => n12, B => n60, Z => DIFF_18_port);
   U69 : GTECH_NAND2 port map( A => A(18), B => n61, Z => n60);
   U70 : GTECH_NOR2 port map( A => n61, B => A(18), Z => n59);
   U71 : GTECH_NAND2 port map( A => n61, B => n62, Z => DIFF_17_port);
   U72 : GTECH_NAND2 port map( A => A(17), B => n11, Z => n62);
   U73 : GTECH_NAND2 port map( A => n63, B => n23, Z => n61);
   U74 : GTECH_NAND2 port map( A => n11, B => n64, Z => DIFF_16_port);
   U75 : GTECH_NAND2 port map( A => A(16), B => n65, Z => n64);
   U76 : GTECH_NOR2 port map( A => n65, B => A(16), Z => n63);
   U77 : GTECH_NAND2 port map( A => n65, B => n66, Z => DIFF_15_port);
   U78 : GTECH_NAND2 port map( A => A(15), B => n10, Z => n66);
   U79 : GTECH_NAND2 port map( A => n67, B => n22, Z => n65);
   U80 : GTECH_NAND2 port map( A => n10, B => n68, Z => DIFF_14_port);
   U81 : GTECH_NAND2 port map( A => A(14), B => n69, Z => n68);
   U82 : GTECH_NOR2 port map( A => n69, B => A(14), Z => n67);
   U83 : GTECH_NAND2 port map( A => n69, B => n70, Z => DIFF_13_port);
   U84 : GTECH_NAND2 port map( A => A(13), B => n9, Z => n70);
   U85 : GTECH_NAND2 port map( A => n71, B => n21, Z => n69);
   U86 : GTECH_NAND2 port map( A => n9, B => n72, Z => DIFF_12_port);
   U87 : GTECH_NAND2 port map( A => A(12), B => n73, Z => n72);
   U88 : GTECH_NOR2 port map( A => n73, B => A(12), Z => n71);
   U89 : GTECH_NAND2 port map( A => n73, B => n74, Z => DIFF_11_port);
   U90 : GTECH_NAND2 port map( A => A(11), B => n8, Z => n74);
   U91 : GTECH_NAND2 port map( A => n75, B => n20, Z => n73);
   U92 : GTECH_NAND2 port map( A => n8, B => n76, Z => DIFF_10_port);
   U93 : GTECH_NAND2 port map( A => A(10), B => n27, Z => n76);
   U94 : GTECH_NOR2 port map( A => n27, B => A(10), Z => n75);
   U95 : GTECH_NAND2 port map( A => n31, B => n19, Z => n27);
   U96 : GTECH_NOR2 port map( A => n30, B => A(8), Z => n31);
   U97 : GTECH_NAND2 port map( A => n35, B => n18, Z => n30);
   U98 : GTECH_NOR2 port map( A => n34, B => A(6), Z => n35);
   U99 : GTECH_NAND2 port map( A => n39, B => n17, Z => n34);
   U100 : GTECH_NOR2 port map( A => n38, B => A(4), Z => n39);
   U101 : GTECH_NAND2 port map( A => n16, B => DIFF_2_port, Z => n38);

end SYN_rpl;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_mem_C.all;

entity mem_C_DW01_inc_0 is

   port( A : in std_logic_vector (7 downto 0);  SUM : out std_logic_vector (7 
         downto 0));

end mem_C_DW01_inc_0;

architecture SYN_rpl of mem_C_DW01_inc_0 is

   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   signal SUM_7_port, SUM_6_port, SUM_5_port, SUM_4_port, SUM_3_port, 
      SUM_2_port, SUM_1_port, n1, n2, n3, n4, n5, SUM_0_port, n7, n8, n9, n10, 
      n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25
      , n26, n27, n28, n29, n30, n31, n32, n33 : std_logic;

begin
   SUM <= ( SUM_7_port, SUM_6_port, SUM_5_port, SUM_4_port, SUM_3_port, 
      SUM_2_port, SUM_1_port, SUM_0_port );
   
   U1 : GTECH_NOT port map( A => n25, Z => n1);
   U2 : GTECH_NOT port map( A => n22, Z => n2);
   U3 : GTECH_NOT port map( A => n18, Z => n3);
   U4 : GTECH_NOT port map( A => n17, Z => n4);
   U5 : GTECH_NOT port map( A => n14, Z => n5);
   U6 : GTECH_NOT port map( A => A(0), Z => SUM_0_port);
   U7 : GTECH_NOT port map( A => n31, Z => n7);
   U8 : GTECH_NOT port map( A => A(6), Z => n8);
   U9 : GTECH_NOT port map( A => A(1), Z => n9);
   U10 : GTECH_NOT port map( A => A(3), Z => n10);
   U11 : GTECH_NOT port map( A => A(5), Z => n11);
   U12 : GTECH_NAND2 port map( A => n5, B => n12, Z => SUM_7_port);
   U13 : GTECH_NAND2 port map( A => A(7), B => n13, Z => n12);
   U14 : GTECH_NOR2 port map( A => n13, B => A(7), Z => n14);
   U15 : GTECH_NAND2 port map( A => A(6), B => n15, Z => n13);
   U16 : GTECH_NAND2 port map( A => n16, B => n4, Z => SUM_6_port);
   U17 : GTECH_NOR2 port map( A => n8, B => n15, Z => n17);
   U18 : GTECH_NAND2 port map( A => n15, B => n8, Z => n16);
   U19 : GTECH_NOR2 port map( A => n11, B => n18, Z => n15);
   U20 : GTECH_NAND2 port map( A => n19, B => n20, Z => SUM_5_port);
   U21 : GTECH_NAND2 port map( A => A(5), B => n18, Z => n20);
   U22 : GTECH_NAND2 port map( A => n3, B => n11, Z => n19);
   U23 : GTECH_NAND2 port map( A => n21, B => A(4), Z => n18);
   U24 : GTECH_NOR2 port map( A => n22, B => n10, Z => n21);
   U25 : GTECH_NAND2 port map( A => n1, B => n23, Z => SUM_4_port);
   U26 : GTECH_NAND2 port map( A => A(4), B => n24, Z => n23);
   U27 : GTECH_NOR2 port map( A => n24, B => A(4), Z => n25);
   U28 : GTECH_NAND2 port map( A => A(3), B => n2, Z => n24);
   U29 : GTECH_NAND2 port map( A => n26, B => n27, Z => SUM_3_port);
   U30 : GTECH_NAND2 port map( A => A(3), B => n22, Z => n27);
   U31 : GTECH_NAND2 port map( A => n2, B => n10, Z => n26);
   U32 : GTECH_NAND2 port map( A => n28, B => A(2), Z => n22);
   U33 : GTECH_NOR2 port map( A => SUM_0_port, B => n9, Z => n28);
   U34 : GTECH_NAND2 port map( A => n7, B => n29, Z => SUM_2_port);
   U35 : GTECH_NAND2 port map( A => A(2), B => n30, Z => n29);
   U36 : GTECH_NOR2 port map( A => n30, B => A(2), Z => n31);
   U37 : GTECH_NAND2 port map( A => A(1), B => A(0), Z => n30);
   U38 : GTECH_NAND2 port map( A => n32, B => n33, Z => SUM_1_port);
   U39 : GTECH_NAND2 port map( A => A(1), B => SUM_0_port, Z => n33);
   U40 : GTECH_NAND2 port map( A => A(0), B => n9, Z => n32);

end SYN_rpl;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_mem_C.all;

entity mem_C is

   port( clk, reset_b : in std_logic;  mem_addr : out std_logic_vector (27 
         downto 0);  mem_rd_en, mem_wr_en : out std_logic;  mem_data_in : in 
         std_logic_vector (31 downto 0);  mem_data_out : out std_logic_vector 
         (31 downto 0);  mem_data_be : out std_logic_vector (3 downto 0);  ack 
         : in std_logic;  ll_rx_data : in std_logic_vector (31 downto 0);  
         ll_rx_data_be : in std_logic_vector (3 downto 0);  ll_rx_sof_n, 
         ll_rx_eof_n, ll_rx_src_rdy_n : in std_logic;  ll_rx_dst_rdy_n : out 
         std_logic;  rx_dst, rx_src : in std_logic_vector (4 downto 0);  rx_len
         : in std_logic_vector (31 downto 0);  ll_tx_data : out 
         std_logic_vector (31 downto 0);  ll_tx_data_be : out std_logic_vector 
         (3 downto 0);  ll_tx_sof_n, ll_tx_eof_n, ll_tx_src_rdy_n : out 
         std_logic;  ll_tx_dst_rdy_n : in std_logic;  tx_dst, tx_src : out 
         std_logic_vector (4 downto 0);  tx_len : out std_logic_vector (31 
         downto 0));

end mem_C;

architecture SYN_beh of mem_C is

   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component mem_C_DW01_inc_2
      port( A : in std_logic_vector (7 downto 0);  SUM : out std_logic_vector 
            (7 downto 0));
   end component;
   
   component mem_C_DW01_dec_3
      port( A : in std_logic_vector (31 downto 0);  SUM : out std_logic_vector 
            (31 downto 0));
   end component;
   
   component mem_C_DW01_cmp2_6
      port( A, B : in std_logic_vector (32 downto 0);  LEQ, TC : in std_logic; 
            LT_LE, GE_GT : out std_logic);
   end component;
   
   component mem_C_DW01_dec_2
      port( A : in std_logic_vector (31 downto 0);  SUM : out std_logic_vector 
            (31 downto 0));
   end component;
   
   component mem_C_DW01_cmp2_5
      port( A, B : in std_logic_vector (32 downto 0);  LEQ, TC : in std_logic; 
            LT_LE, GE_GT : out std_logic);
   end component;
   
   component mem_C_DW01_add_4
      port( A, B : in std_logic_vector (27 downto 0);  CI : in std_logic;  SUM 
            : out std_logic_vector (27 downto 0);  CO : out std_logic);
   end component;
   
   component mem_C_DW01_add_3
      port( A, B : in std_logic_vector (31 downto 0);  CI : in std_logic;  SUM 
            : out std_logic_vector (31 downto 0);  CO : out std_logic);
   end component;
   
   component mem_C_DW02_mult_0
      port( A : in std_logic_vector (31 downto 0);  B, TC : in std_logic;  
            PRODUCT : out std_logic_vector (32 downto 0));
   end component;
   
   component mem_C_DW01_add_2
      port( A, B : in std_logic_vector (31 downto 0);  CI : in std_logic;  SUM 
            : out std_logic_vector (31 downto 0);  CO : out std_logic);
   end component;
   
   component mem_C_DW01_add_1
      port( A, B : in std_logic_vector (27 downto 0);  CI : in std_logic;  SUM 
            : out std_logic_vector (27 downto 0);  CO : out std_logic);
   end component;
   
   component mem_C_DW01_sub_1
      port( A, B : in std_logic_vector (31 downto 0);  CI : in std_logic;  DIFF
            : out std_logic_vector (31 downto 0);  CO : out std_logic);
   end component;
   
   component mem_C_DW01_cmp6_0
      port( A, B : in std_logic_vector (32 downto 0);  TC : in std_logic;  LT, 
            GT, EQ, LE, GE, NE : out std_logic);
   end component;
   
   component mem_C_DW01_add_0
      port( A, B : in std_logic_vector (27 downto 0);  CI : in std_logic;  SUM 
            : out std_logic_vector (27 downto 0);  CO : out std_logic);
   end component;
   
   component mem_C_DW01_dec_1
      port( A : in std_logic_vector (31 downto 0);  SUM : out std_logic_vector 
            (31 downto 0));
   end component;
   
   component mem_C_DW01_cmp2_3
      port( A, B : in std_logic_vector (32 downto 0);  LEQ, TC : in std_logic; 
            LT_LE, GE_GT : out std_logic);
   end component;
   
   component mem_C_DW01_inc_1
      port( A : in std_logic_vector (7 downto 0);  SUM : out std_logic_vector 
            (7 downto 0));
   end component;
   
   component mem_C_DW01_dec_0
      port( A : in std_logic_vector (31 downto 0);  SUM : out std_logic_vector 
            (31 downto 0));
   end component;
   
   component mem_C_DW01_cmp2_2
      port( A, B : in std_logic_vector (32 downto 0);  LEQ, TC : in std_logic; 
            LT_LE, GE_GT : out std_logic);
   end component;
   
   component mem_C_DW01_sub_0
      port( A, B : in std_logic_vector (27 downto 0);  CI : in std_logic;  DIFF
            : out std_logic_vector (27 downto 0);  CO : out std_logic);
   end component;
   
   component mem_C_DW01_inc_0
      port( A : in std_logic_vector (7 downto 0);  SUM : out std_logic_vector 
            (7 downto 0));
   end component;
   
   component GTECH_FD1
      port( D, CP : in std_logic;  Q, QN : out std_logic);
   end component;
   
   signal X_Logic1_port, X_Logic0_port, mem_wr_en_port, mem_data_out_31_port, 
      mem_data_out_30_port, mem_data_out_29_port, mem_data_out_28_port, 
      mem_data_out_27_port, mem_data_out_26_port, mem_data_out_25_port, 
      mem_data_out_24_port, mem_data_out_23_port, mem_data_out_22_port, 
      mem_data_out_21_port, mem_data_out_20_port, mem_data_out_19_port, 
      mem_data_out_18_port, mem_data_out_17_port, mem_data_out_16_port, 
      mem_data_out_15_port, mem_data_out_14_port, mem_data_out_13_port, 
      mem_data_out_12_port, mem_data_out_11_port, mem_data_out_10_port, 
      mem_data_out_9_port, mem_data_out_8_port, mem_data_out_7_port, 
      mem_data_out_6_port, mem_data_out_5_port, mem_data_out_4_port, 
      mem_data_out_3_port, mem_data_out_2_port, mem_data_out_1_port, 
      mem_data_out_0_port, ll_tx_sof_n_port, tx_src_4_port, tx_src_3_port, 
      tx_src_2_port, tx_src_1_port, tx_src_0_port, sic_rx_fsm_cs_2_port, 
      sic_rx_fsm_cs_1_port, sic_rx_fsm_cs_0_port, trans_type_curr_3_port, 
      trans_type_curr_2_port, trans_type_curr_1_port, trans_type_curr_0_port, 
      trans_id_curr_27_port, trans_id_curr_26_port, trans_id_curr_25_port, 
      trans_id_curr_24_port, trans_id_curr_23_port, trans_id_curr_22_port, 
      trans_id_curr_21_port, trans_id_curr_20_port, trans_id_curr_19_port, 
      trans_id_curr_18_port, trans_id_curr_17_port, trans_id_curr_16_port, 
      trans_id_curr_15_port, trans_id_curr_14_port, trans_id_curr_13_port, 
      trans_id_curr_12_port, trans_id_curr_11_port, trans_id_curr_10_port, 
      trans_id_curr_9_port, trans_id_curr_8_port, trans_id_curr_7_port, 
      trans_id_curr_6_port, trans_id_curr_5_port, trans_id_curr_4_port, 
      trans_id_curr_3_port, trans_id_curr_2_port, trans_id_curr_1_port, 
      trans_id_curr_0_port, mem_len_curr_31_port, mem_len_curr_30_port, 
      mem_len_curr_29_port, mem_len_curr_28_port, mem_len_curr_27_port, 
      mem_len_curr_26_port, mem_len_curr_25_port, mem_len_curr_24_port, 
      mem_len_curr_23_port, mem_len_curr_22_port, mem_len_curr_21_port, 
      mem_len_curr_20_port, mem_len_curr_19_port, mem_len_curr_18_port, 
      mem_len_curr_17_port, mem_len_curr_16_port, mem_len_curr_15_port, 
      mem_len_curr_14_port, mem_len_curr_13_port, mem_len_curr_12_port, 
      mem_len_curr_11_port, mem_len_curr_10_port, mem_len_curr_9_port, 
      mem_len_curr_8_port, mem_len_curr_7_port, mem_len_curr_6_port, 
      mem_len_curr_5_port, mem_len_curr_4_port, mem_len_curr_3_port, 
      mem_len_curr_2_port, mem_len_curr_1_port, mem_len_curr_0_port, 
      tmp_data_curr_31_port, tmp_data_curr_30_port, tmp_data_curr_29_port, 
      tmp_data_curr_28_port, tmp_data_curr_27_port, tmp_data_curr_26_port, 
      tmp_data_curr_25_port, tmp_data_curr_24_port, tmp_data_curr_23_port, 
      tmp_data_curr_22_port, tmp_data_curr_21_port, tmp_data_curr_20_port, 
      tmp_data_curr_19_port, tmp_data_curr_18_port, tmp_data_curr_17_port, 
      tmp_data_curr_16_port, tmp_data_curr_15_port, tmp_data_curr_14_port, 
      tmp_data_curr_13_port, tmp_data_curr_12_port, tmp_data_curr_11_port, 
      tmp_data_curr_10_port, tmp_data_curr_9_port, tmp_data_curr_8_port, 
      tmp_data_curr_7_port, tmp_data_curr_6_port, tmp_data_curr_5_port, 
      tmp_data_curr_4_port, tmp_data_curr_3_port, tmp_data_curr_2_port, 
      tmp_data_curr_1_port, tmp_data_curr_0_port, waiting_to_recv_data_curr, 
      mem_rd_len_counter_curr_7_port, mem_rd_len_counter_curr_6_port, 
      mem_rd_len_counter_curr_5_port, mem_rd_len_counter_curr_4_port, 
      mem_rd_len_counter_curr_3_port, mem_rd_len_counter_curr_2_port, 
      mem_rd_len_counter_curr_1_port, mem_rd_len_counter_curr_0_port, 
      wr_counter_curr_7_port, wr_counter_curr_6_port, wr_counter_curr_5_port, 
      wr_counter_curr_4_port, wr_counter_curr_3_port, wr_counter_curr_2_port, 
      wr_counter_curr_1_port, wr_counter_curr_0_port, wr_ack_curr, 
      tmp_addr_curr_27_port, tmp_addr_curr_26_port, tmp_addr_curr_25_port, 
      tmp_addr_curr_24_port, tmp_addr_curr_23_port, tmp_addr_curr_22_port, 
      tmp_addr_curr_21_port, tmp_addr_curr_20_port, tmp_addr_curr_19_port, 
      tmp_addr_curr_18_port, tmp_addr_curr_17_port, tmp_addr_curr_16_port, 
      tmp_addr_curr_15_port, tmp_addr_curr_14_port, tmp_addr_curr_13_port, 
      tmp_addr_curr_12_port, tmp_addr_curr_11_port, tmp_addr_curr_10_port, 
      tmp_addr_curr_9_port, tmp_addr_curr_8_port, tmp_addr_curr_7_port, 
      tmp_addr_curr_6_port, tmp_addr_curr_5_port, tmp_addr_curr_4_port, 
      tmp_addr_curr_3_port, tmp_addr_curr_2_port, tmp_addr_curr_1_port, 
      tmp_addr_curr_0_port, pass_thru_mode_curr, pass_addr_curr_31_port, 
      pass_addr_curr_30_port, pass_addr_curr_29_port, pass_addr_curr_28_port, 
      pass_addr_curr_27_port, pass_addr_curr_26_port, pass_addr_curr_25_port, 
      pass_addr_curr_24_port, pass_addr_curr_23_port, pass_addr_curr_22_port, 
      pass_addr_curr_21_port, pass_addr_curr_20_port, pass_addr_curr_19_port, 
      pass_addr_curr_18_port, pass_addr_curr_17_port, pass_addr_curr_16_port, 
      pass_addr_curr_15_port, pass_addr_curr_14_port, pass_addr_curr_13_port, 
      pass_addr_curr_12_port, pass_addr_curr_11_port, pass_addr_curr_10_port, 
      pass_addr_curr_9_port, pass_addr_curr_8_port, pass_addr_curr_7_port, 
      pass_addr_curr_6_port, pass_addr_curr_5_port, pass_addr_curr_4_port, 
      pass_addr_curr_3_port, pass_addr_curr_2_port, pass_addr_curr_1_port, 
      pass_addr_curr_0_port, pass_num_curr_31_port, pass_num_curr_30_port, 
      pass_num_curr_29_port, pass_num_curr_28_port, pass_num_curr_27_port, 
      pass_num_curr_26_port, pass_num_curr_25_port, pass_num_curr_24_port, 
      pass_num_curr_23_port, pass_num_curr_22_port, pass_num_curr_21_port, 
      pass_num_curr_20_port, pass_num_curr_19_port, pass_num_curr_18_port, 
      pass_num_curr_17_port, pass_num_curr_16_port, pass_num_curr_15_port, 
      pass_num_curr_14_port, pass_num_curr_13_port, pass_num_curr_12_port, 
      pass_num_curr_11_port, pass_num_curr_10_port, pass_num_curr_9_port, 
      pass_num_curr_8_port, pass_num_curr_7_port, pass_num_curr_6_port, 
      pass_num_curr_5_port, pass_num_curr_4_port, pass_num_curr_3_port, 
      pass_num_curr_2_port, pass_num_curr_1_port, pass_num_curr_0_port, 
      pass_tid_curr_31_port, pass_tid_curr_30_port, pass_tid_curr_29_port, 
      pass_tid_curr_28_port, pass_tid_curr_27_port, pass_tid_curr_26_port, 
      pass_tid_curr_25_port, pass_tid_curr_24_port, pass_tid_curr_23_port, 
      pass_tid_curr_22_port, pass_tid_curr_21_port, pass_tid_curr_20_port, 
      pass_tid_curr_19_port, pass_tid_curr_18_port, pass_tid_curr_17_port, 
      pass_tid_curr_16_port, pass_tid_curr_15_port, pass_tid_curr_14_port, 
      pass_tid_curr_13_port, pass_tid_curr_12_port, pass_tid_curr_11_port, 
      pass_tid_curr_10_port, pass_tid_curr_9_port, pass_tid_curr_8_port, 
      pass_tid_curr_7_port, pass_tid_curr_6_port, pass_tid_curr_5_port, 
      pass_tid_curr_4_port, pass_tid_curr_3_port, pass_tid_curr_2_port, 
      pass_tid_curr_1_port, pass_tid_curr_0_port, N957, N958, N959, N960, N961,
      N962, N963, N964, N1018, N1019, N1020, N1021, N1022, N1023, N1024, N1025,
      N1026, N1027, N1028, N1029, N1030, N1031, N1032, N1033, N1034, N1035, 
      N1036, N1037, N1038, N1039, N1040, N1041, N1042, N1043, N1044, N1045, 
      N1046, N1047, N1048, N1049, N1050, N1058, N1059, N1060, N1061, N1062, 
      N1063, N1064, N1065, N1066, N1067, N1068, N1069, N1070, N1071, N1072, 
      N1073, N1074, N1075, N1076, N1077, N1078, N1079, N1080, N1081, N1082, 
      N1083, N1084, N1085, N1086, N1087, N1088, N1089, N1090, N1103, N1104, 
      N1105, N1106, N1107, N1108, N1109, N1110, N1111, N1112, N1113, N1114, 
      N1115, N1116, N1117, N1118, N1119, N1120, N1121, N1122, N1123, N1124, 
      N1125, N1126, N1127, N1128, N1129, N1130, N1139, N1140, N1141, N1142, 
      N1143, N1144, N1145, N1146, N1147, N1148, N1149, N1150, N1151, N1152, 
      N1153, N1154, N1155, N1156, N1157, N1158, N1159, N1160, N1161, N1162, 
      N1163, N1164, N1165, N1166, N1167, N1168, N1169, N1170, N1184, N1185, 
      N1186, N1187, N1188, N1189, N1190, N1191, N1192, N1193, N1194, N1195, 
      N1196, N1197, N1198, N1199, N1200, N1201, N1202, N1203, N1204, N1205, 
      N1206, N1207, N1208, N1209, N1210, N1211, N1212, N1213, N1214, N1215, 
      N1410, N1411, N1412, N1413, N1414, N1415, N1416, N1417, N1418, N1419, 
      N1420, N1421, N1422, N1423, N1424, N1425, N1426, N1427, N1428, N1429, 
      N1430, N1431, N1432, N1433, N1434, N1435, N1436, N1437, N1515, N1516, 
      N1517, N1518, N1519, N1520, N1521, N1522, N1523, N1524, N1525, N1526, 
      N1527, N1528, N1529, N1530, N1531, N1532, N1533, N1534, N1535, N1536, 
      N1537, N1538, N1539, N1540, N1541, N1542, N1543, N1544, N1545, N1546, 
      N1547, N1550, N1551, N1552, N1553, N1554, N1555, N1556, N1557, N1558, 
      N1559, N1560, N1561, N1562, N1563, N1564, N1565, N1566, N1567, N1568, 
      N1569, N1570, N1571, N1572, N1573, N1574, N1575, N1576, N1577, N1579, 
      N1580, N1581, N1582, N1583, N1584, N1585, N1586, N1587, N1588, N1589, 
      N1590, N1591, N1592, N1593, N1594, N1595, N1596, N1597, N1598, N1599, 
      N1600, N1601, N1602, N1603, N1604, N1605, N1606, N1607, N1608, N1609, 
      N1610, N1611, N1614, N1615, N1616, N1617, N1618, N1619, N1620, N1621, 
      N1631, N1632, N1633, N1634, N1635, N1636, N1637, N1638, N1639, N1640, 
      N1641, N1642, N1643, N1644, N1645, N1646, N1647, N1648, N1649, N1650, 
      N1651, N1652, N1653, N1654, N1655, N1656, N1657, N1658, N1659, N1660, 
      N1661, N1662, N1663, N1665, N1666, N1667, N1668, N1669, N1670, N1671, 
      N1672, N1673, N1674, N1675, N1676, N1677, N1678, N1679, N1680, N1681, 
      N1682, N1683, N1684, N1685, N1686, N1687, N1688, N1689, N1690, N1691, 
      N1692, N1693, N1694, N1695, N1696, N1697, N1698, N1699, N1700, N1808, 
      N1809, N1810, N1811, N1812, N1813, N1814, N1815, N1816, N1817, N1818, 
      N1819, N1820, N1821, N1822, N1823, N1824, N1825, N1826, N1827, N1828, 
      N1829, N1830, N1831, N1832, N1833, N1834, N1835, N1836, N1838, N1839, 
      N1840, N2261, N2262, N2263, N2264, N2265, N2266, N2267, N2268, N2269, 
      N2270, N2271, N2272, N2273, N2274, N2275, N2276, N2277, N2278, N2279, 
      N2280, N2281, N2282, N2283, N2284, N2285, N2286, N2287, N2288, N2289, 
      N2290, N2291, N2292, N2293, N2296, N2301, n4, n5, n6, n7, n8, n9, n12, 
      n13, n14, n15, n16, n17, n18, n2245, n2246, n2247, n2248, n2249, n2250, 
      n2251, n2252, n2253, n2254, n2255, n2256, n2257, n2258, n2259, n2260, 
      n2261_port, n2262_port, n2263_port, n2264_port, n2265_port, n2266_port, 
      n2267_port, n2268_port, n2269_port, n2270_port, n2271_port, n2272_port, 
      n2273_port, n2274_port, n2275_port, n2276_port, n2277_port, n2278_port, 
      n2279_port, n2280_port, n2281_port, n2282_port, n2283_port, n2284_port, 
      n2285_port, n2286_port, n2287_port, n2288_port, n2289_port, n2290_port, 
      n2291_port, n2292_port, n2293_port, n2294, n2295, n2296_port, n2297, 
      n2298, n2299, n2300, n2301_port, n2302, n2303, n2304, n2305, n2306, n2307
      , n2308, n2309, n2310, n2311, n2312, n2313, n2314, n2315, n2316, n2317, 
      n2318, n2319, n2320, n2321, n2322, n2323, n2324, n2325, n2354, n2369, 
      n2374, n2375, n2376, n2378, n2379, n2380, n2381, n2382, n2383, n2384, 
      n2385, n2386, n2387, n2388, n2389, n2390, n2391, n2392, n2393, n2394, 
      n2395, n2396, n2397, n2398, n2399, n2400, n2401, n2402, n2403, n2404, 
      n2405, n2406, n2407, n2408, n2441, n2442, n2443, n2444, n2445, n2446, 
      n2447, n2448, n2449, n2450, n2451, n2452, n2453, n2454, n2455, n2456, 
      n2457, n2458, n2459, n2460, n2461, n2462, n2463, n2464, n2465, n2466, 
      n2467, n2468, n2469, n2470, n2471, n2472, n2481, n2482, n2483, n2484, 
      n2485, n2486, n2487, n2488, n2489, n2490, n2491, n2492, n2493, n2494, 
      n2495, n2496, n2497, n2498, n2499, n2500, n2501, n2502, n2503, n2504, 
      n2505, n2506, n2507, n2508, n2509, n2510, n2511, n2512, n2513, n2514, 
      n2515, n2516, n2517, n2518, n2519, n2520, n2521, n2522, n2523, n2524, 
      n2525, n2526, n2527, n2528, n2529, n2530, n2531, n2532, n2533, n2534, 
      n2535, n2536, n2537, n2538, n2539, n2540, n2541, n2542, n2543, n2544, 
      n2545, n2546, n2547, n2548, n2549, n2550, n2611, n2612, n2614, n2615, 
      n2616, n2617, n2618, n2619, n2620, n2621, n2623, n2624, n2625, n2626, 
      n2627, n2628, n2629, n2630, n2631, n2632, n2633, n2634, n2635, n2636, 
      n2637, n2638, n2639, n2640, n2641, n2642, n2643, n2644, n2645, n2646, 
      n2647, n2648, n2649, n2650, n2651, n2652, n2653, n2654, n2655, n2656, 
      n2657, n2658, n2659, n2660, n2661, n2662, n2663, n2664, n2665, n2666, 
      n2667, n2668, n2669, n2670, n2671, n2672, n2673, n2674, n2675, n2676, 
      n2677, n2678, n2679, n2680, n2681, n2682, n2683, n2684, n2685, n2686, 
      n2687, n2688, n2689, n2690, n2691, n2692, n2693, n2694, n2695, n2696, 
      n2697, n2698, n2699, n2700, n2701, n2702, n2703, n2704, n2705, n2706, 
      n2707, n2708, n2709, n2710, n2711, n2712, n2713, n2714, n2715, n2716, 
      n2717, n2718, n2719, n2720, n2721, n2722, n2723, n2724, n2725, n2726, 
      n2727, n2728, n2729, n2730, n2731, n2732, n2733, n2734, n2735, n2736, 
      n2737, n2738, n2739, n2740, n2741, n2742, n2743, n2744, n2745, n2746, 
      n2747, n2748, n2749, n2750, n2751, n2752, n2753, n2754, n2755, n2756, 
      n2757, n2758, n2759, n2760, n2761, n2762, n2763, n2764, n2765, n2766, 
      n2767, n2768, n2769, n2770, n2771, n2772, n2773, n2774, n2775, n2776, 
      n2777, n2778, n2779, n2780, n2781, n2782, n2783, n2784, n2785, n2786, 
      n2787, n2788, n2789, n2790, n2791, n2792, n2793, n2794, n2795, n2796, 
      n2797, n2798, n2799, n2800, n2801, n2802, n2803, n2804, n2805, n2806, 
      n2807, n2808, n2809, n2810, n2811, n2812, n2813, n2814, n2815, n2816, 
      n2817, n2818, n2819, n2820, n2821, n2822, n2823, n2824, n2825, n2826, 
      n2827, n2828, n2829, n2830, n2831, n2832, n2833, n2834, n2835, n2836, 
      n2837, n2838, n2839, n2840, n2841, n2842, n2843, n2844, n2845, n2846, 
      n2847, n2848, n2849, n2850, n2851, n2852, n2853, n2854, n2855, n2856, 
      n2857, n2858, n2859, n2860, n2861, n2862, n2863, n2864, n2865, n2866, 
      n2867, n2868, n2869, n2870, n2871, n2872, n2873, n2874, n2875, n2876, 
      n2877, n2878, n2879, n2880, n2881, n2882, n2883, n2884, n2885, n2886, 
      n2887, n2888, n2889, n2890, n2891, n2892, n2893, n2894, n2895, n2896, 
      n2897, n2898, n2899, n2900, n2901, n2902, n2903, n2904, n2905, n2906, 
      n2907, n2908, n2909, n2910, n2911, n2912, n2913, n2914, n2915, n2916, 
      n2917, n2918, n2919, n2920, n2921, n2922, n2923, n2924, n2925, n2926, 
      n2927, n2928, n2929, n2930, n2931, n2932, n2933, n2934, n2935, n2936, 
      n2937, n2938, n2939, n2940, n2941, n2942, n2943, n2944, n2945, n2946, 
      n2947, n2948, n2949, n2950, n2951, n2952, n2953, n2954, n2955, n2956, 
      n2957, n2958, n2959, n2960, n2961, n2962, n2963, n2964, n2965, n2966, 
      n2967, n2968, n2969, n2970, n2971, n2972, n2973, n2974, n2975, n2976, 
      n2977, n2978, n2979, n2980, n2981, n2982, n2983, n2984, n2985, n2986, 
      n2987, n2988, n2989, n2990, n2991, n2992, n2993, n2994, n2995, n2996, 
      n2997, n2998, n2999, n3000, n3001, n3002, n3003, n3004, n3005, n3006, 
      n3007, n3008, n3009, n3010, n3011, n3012, n3013, n3014, n3015, n3016, 
      n3017, n3018, n3019, n3020, n3021, n3022, n3023, n3024, n3025, n3026, 
      n3027, n3028, n3029, n3030, n3031, n3032, n3033, n3034, n3035, n3036, 
      n3037, n3038, n3039, n3040, n3041, n3042, n3043, n3044, n3045, n3046, 
      n3047, n3048, n3049, n3050, n3051, n3052, n3053, n3054, n3055, n3056, 
      n3057, n3058, n3059, n3060, n3061, n3062, n3063, n3064, n3065, n3066, 
      n3067, n3068, n3069, n3070, n3071, n3072, n3073, n3074, n3075, n3076, 
      n3077, n3078, n3079, n3080, n3081, n3082, n3083, n3084, n3085, n3086, 
      n3087, n3088, n3089, n3090, n3091, n3092, n3093, n3094, n3095, n3096, 
      n3097, n3098, n3099, n3100, n3101, n3102, n3103, n3104, n3105, n3106, 
      n3107, n3108, n3109, n3110, n3111, n3112, n3113, n3114, n3115, n3116, 
      n3117, n3118, n3119, n3120, n3121, n3122, n3123, n3124, n3125, n3126, 
      n3127, n3128, n3129, n3130, n3131, n3132, n3133, n3134, n3135, n3136, 
      n3137, n3138, n3139, n3140, n3141, n3142, n3143, n3144, n3145, n3146, 
      n3147, n3148, n3149, n3150, n3151, n3152, n3153, n3154, n3155, n3156, 
      n3157, n3158, n3159, n3160, n3161, n3162, n3163, n3164, n3165, n3166, 
      n3167, n3168, n3169, n3170, n3171, n3172, n3173, n3174, n3175, n3176, 
      n3177, n3178, n3179, n3180, n3181, n3182, n3183, n3184, n3185, n3186, 
      n3187, n3188, n3189, n3190, n3191, n3192, n3193, n3194, n3195, n3196, 
      n3197, n3198, n3199, n3200, n3201, n3202, n3203, n3204, n3205, n3206, 
      n3207, n3208, n3209, n3210, n3211, n3212, n3213, n3214, n3215, n3216, 
      n3217, n3218, n3219, n3220, n3221, n3222, n3223, n3224, n3225, n3226, 
      n3227, n3228, n3229, n3230, n3231, n3232, n3233, n3234, n3235, n3236, 
      n3237, n3238, n3239, n3240, n3241, n3242, n3243, n3244, n3245, n3246, 
      n3247, n3248, n3249, n3250, n3251, n3252, n3253, n3254, n3255, n3256, 
      n3257, n3258, n3259, n3260, n3261, n3262, n3263, n3264, n3265, n3266, 
      n3267, n3268, n3269, n3270, n3271, n3272, n3273, n3274, n3275, n3276, 
      n3277, n3278, n3279, n3280, n3281, n3282, n3283, n3284, n3285, n3286, 
      n3287, n3288, n3289, n3290, n3291, n3292, n3293, n3294, n3295, n3296, 
      n3297, n3298, n3299, n3300, n3301, n3302, n3303, n3304, n3305, n3306, 
      n3307, n3308, n3309, n3310, n3311, n3312, n3313, n3314, n3315, n3316, 
      n3317, n3318, n3319, n3320, n3321, n3322, n3323, n3324, n3325, n3326, 
      n3327, n3328, n3329, n3330, n3331, n3332, n3333, n3334, n3335, n3336, 
      n3337, n3338, n3339, n3340, n3341, n3342, n3343, n3344, n3345, n3346, 
      n3347, n3348, n3349, n3350, n3351, n3352, n3353, n3354, n3355, n3356, 
      n3357, n3358, n3359, n3360, n3361, n3362, n3363, n3364, n3365, n3366, 
      n3367, n3368, n3369, n3370, n3371, n3372, n3373, n3374, n3375, n3376, 
      n3377, n3378, n3379, n3380, n3381, n3382, n3383, n3384, n3385, n3386, 
      n3387, n3388, n3389, n3390, n3391, n3392, n3393, n3394, n3395, n3396, 
      n3397, n3398, n3399, n3400, n3401, n3402, n3403, n3404, n3405, n3406, 
      n3407, n3408, n3409, n3410, n3411, n3412, n3413, n3414, n3415, n3416, 
      n3417, n3418, n3419, n3420, n3421, n3422, n3423, n3424, n3425, n3426, 
      n3427, n3428, n3429, n3430, n3431, n3432, n3433, n3434, n3435, n3436, 
      n3437, n3438, n3439, n3440, n3441, n3442, n3443, n3444, n3445, n3446, 
      n3447, n3448, n3449, n3450, n3451, n3452, n3453, n3454, n3455, n3456, 
      n3457, n3458, n3459, n3460, n3461, n3462, n3463, n3464, n3465, n3466, 
      n3467, n3468, n3469, n3470, n3471, n3472, n3473, n3474, n3475, n3476, 
      n3477, n3478, n3479, n3480, n3481, n3482, n3483, n3484, n3485, n3486, 
      n3487, n3488, n3489, n3490, n3491, n3492, n3493, n3494, n3495, n3496, 
      n3497, n3498, n3499, n3500, n3501, n3502, n3503, n3504, n3505, n3506, 
      n3507, n3508, n3509, n3510, n3511, n3512, n3513, n3514, n3515, n3516, 
      n3517, n3518, n3519, n3520, n3521, n3522, n3523, n3524, n3525, n3526, 
      n3527, n3528, n3529, n3530, n3531, n3532, n3533, n3534, n3535, n3536, 
      n3537, n3538, n3539, n3540, n3541, n3542, n3543, n3544, n3545, n3546, 
      n3547, n3548, n3549, n3550, n3551, n3552, n3553, n3554, n3555, n3556, 
      n3557, n3558, n3559, n3560, n3561, n3562, n3563, n3564, n3565, n3566, 
      n3567, n3568, n3569, n3570, n3571, n3572, n3573, n3574, n3575, n3576, 
      n3577, n3578, n3579, n3580, n3581, n3582, n3583, n3584, n3585, n3586, 
      n3587, n3588, n3589, n3590, n3591, n3592, n3593, n3594, n3595, n3596, 
      n3597, n3598, n3599, n3600, n3601, n3602, n3603, n3604, n3605, n3606, 
      n3607, n3608, n3609, n3610, n3611, n3612, n3613, n3614, n3615, n3616, 
      n3617, n3618, n3619, n3620, n3621, n3622, n3623, n3624, n3625, n3626, 
      n3627, n3628, n3629, n3630, n3631, n3632, n3633, n3634, n3635, n3636, 
      n3637, n3638, n3639, n3640, n3641, n3642, n3643, n3644, n3645, n3646, 
      n3647, n3648, n3649, n3650, n3651, n3652, n3653, n3654, n3655, n3656, 
      n3657, n3658, n3659, n3660, n3661, n3662, n3663, n3664, n3665, n3666, 
      n3667, n3668, n3669, n3670, n3671, n3672, n3673, n3674, n3675, n3676, 
      n3677, n3678, n3679, n3680, n3681, n3682, n3683, n3684, n3685, n3686, 
      n3687, n3688, n3689, n3690, n3691, n3692, n3693, n3694, n3695, n3696, 
      n3697, n3698, n3699, n3700, n3701, n3702, n3703, n3704, n3705, n3706, 
      n3707, n3708, n3709, n3710, n3711, n3712, n3713, n3714, n3715, n3716, 
      n3717, n3718, n3719, n3720, n3721, n3722, n3723, n3724, n3725, n3726, 
      n3727, n3728, n3729, n3730, n3731, n3732, n3733, n3734, n3735, n3736, 
      n3737, n3738, n3739, n3740, n3741, n3742, n3743, n3744, n3745, n3746, 
      n3747, n3748, n3749, n3750, n3751, n3752, n3753, n3754, n3755, n3756, 
      n3757, n3758, n3759, n3760, n3761, n3762, n3763, n3764, n3765, n3766, 
      n3767, n3768, n3769, n3770, n3771, n3772, n3773, n3774, n3775, n3776, 
      n3777, n3778, n3779, n3780, n3781, n3782, n3783, n3784, n3785, n3786, 
      n3787, n3788, n3789, n3790, n3791, n3792, n3793, n3794, n3795, n3796, 
      n3797, n3798, n3799, n3800, n3801, n3802, n3803, n3804, n3805, n3806, 
      n3807, n3808, n3809, n3810, n3811, n3812, n3813, n3814, n3815, n3816, 
      n3817, n3818, n3819, n3820, n3821, n3822, n3823, n3824, n3825, n3826, 
      n3827, n3828, n3829, n3830, n3831, n3832, n3833, n3834, n3835, n3836, 
      n3837, n3838, n3839, n3840, n3841, n3842, n3843, n3844, n3845, n3846, 
      n3847, n3848, n3849, n3850, n3851, n3852, n3853, n3854, n3855, n3856, 
      n3857, n3858, n3859, n3860, n3861, n3862, n3863, n3864, n3865, n3866, 
      n3867, n3868, n3869, n3870, n3871, n3872, n3873, n3874, n3875, n3876, 
      n3877, n3878, n3879, n3880, n3881, n3882, n3883, n3884, n3885, n3886, 
      n3887, n3888, n3889, n3890, n3891, n3892, n3893, n3894, n3895, n3896, 
      n3897, n3898, n3899, n3900, n3901, n3902, n3903, n3904, n3905, n3906, 
      n3907, n3908, n3909, n3910, n3911, n3912, n3913, n3914, n3915, n3916, 
      n3917, n3918, n3919, n3920, n3921, n3922, n3923, n3924, n3925, n3926, 
      n3927, n3928, n3929, n3930, n3931, n3932, n3933, n3934, n3935, n3936, 
      n3937, n3938, n3939, n3940, n3941, n3942, n3943, n3944, n3945, n3946, 
      n3947, n3948, n3949, n3950, n3951, n3952, n3953, n3954, n3955, n3956, 
      n3957, n3958, n3959, n3960, n3961, n3962, n3963, n3964, n3965, n3966, 
      n3967, n3968, n3969, n3970, n3971, n3972, n3973, n3974, n3975, n3976, 
      n3977, n3978, n3979, n3980, n3981, n3982, n3983, n3984, n3985, n3986, 
      n3987, n3988, n3989, n3990, n3991, n3992, n3993, n3994, n3995, n3996, 
      n3997, n3998, n3999, n4000, n4001, n4002, n4003, n4004, n4005, n4006, 
      n4007, n4008, n4009, n4010, n4011, n4012, n4013, n4014, n4015, n4016, 
      n4017, n4018, n4019, n4020, n4021, n4022, n4023, n4024, n4025, n4026, 
      n4027, n4028, n4029, n4030, n4031, n4032, n4033, n4034, n4035, n4036, 
      n4037, n4038, n4039, n4040, n4041, n4042, n4043, n4044, n4045, n4046, 
      n4047, n4048, n4049, n4050, n4051, n4052, n4053, n4054, n4055, n4056, 
      n4057, n4058, n4059, n4060, n4061, n4062, n4063, n4064, n4065, n4066, 
      n4067, n4068, n4069, n4070, n4071, n4072, n4073, n4074, n4075, n4076, 
      n4077, n4078, n4079, n4080, n4081, n4082, n4083, n4084, n4085, n4086, 
      n4087, n4088, n4089, n4090, n4091, n4092, n4093, n4094, n4095, n4096, 
      n4097, n4098, n4099, n4100, n4101, n4102, n4103, n4104, n4105, n4106, 
      n4107, n4108, n4109, n4110, n4111, n4112, n4113, n4114, n4115, n4116, 
      n4117, n4118, n4119, n4120, n4121, n4122, n4123, n4124, n4125, n4126, 
      n4127, n4128, n4129, n4130, n4131, n4132, n4133, n4134, n4135, n4136, 
      n4137, n4138, n4139, n4140, n4141, n4142, n4143, n4144, n4145, n4146, 
      n4147, n4148, n4149, n4150, n4151, n4152, n4153, n4154, n4155, n4156, 
      n4157, n4158, n4159, n4160, n4161, n4162, n4163, n4164, n4165, n4166, 
      n4167, n4168, n4169, n4170, n4171, n4172, n4173, n4174, n4175, n4176, 
      n4177, n4178, n4179, n4180, n4181, n4182, n4183, n4184, n4185, n4186, 
      n4187, n4188, n4189, n4190, n4191, n4192, n4193, n4194, n4195, n4196, 
      n4197, n4198, n4199, n4200, n4201, n4202, n4203, n4204, n4205, n4206, 
      n4207, n4208, n4209, n4210, n4211, n4212, n4213, n4214, n4215, n4216, 
      n4217, n4218, n4219, n4220, n4221, n4222, n4223, n4224, n4225, n4226, 
      n4227, n4228, n4229, n4230, n4231, n4232, n4233, n4234, n4235, n4236, 
      n4237, n4238, n4239, n4240, n4241, n4242, n4243, n4244, n4245, n4246, 
      n4247, n4248, n4249, n4250, n4251, n4252, n4253, n4254, n4255, n4256, 
      n4257, n4258, n4259, n4260, n4261, n4262, n4263, n4264, n4265, n4266, 
      n4267, n4268, n4269, n4270, n4271, n4272, n4273, n4274, n4275, n4276, 
      n4277, n4278, n4279, n4280, n4281, n4282, n4283, n4284, n4285, n4286, 
      n4287, n4288, n4289, n4290, n4291, n4292, n4293, n4294, n4295, n4296, 
      n4297, n4298, n4299, n4300, n4301, n4302, n4303, n4304, n4305, n4306, 
      n4307, n4308, n4309, n4310, n4311, n4312, n4313, n4314, n4315, n4316, 
      n4317, n4318, n4319, n4320, n4321, n4322, n4323, n4324, n4325, n4326, 
      n4327, n4328, n4329, n4330, n4331, n4332, n4333, n4334, n4335, n4336, 
      n4337, n4338, n4339, n4340, n4341, n4342, n4343, n4344, n4345, n4346, 
      n4347, n4348, n4349, n4350, n4351, n4352, n4353, n4354, n4355, n4356, 
      n4357, n4358, n4359, n4360, n4361, n4362, n4363, n4364, n4365, n4366, 
      n4367, n4368, n4369, n4370, n4371, n4372, n4373, n4374, n4375, n4376, 
      n4377, n4378, n4379, n4380, n4381, n4382, n4383, n4384, n4385, n4386, 
      n4387, n4388, n4389, n4390, n4391, n4392, n4393, n4394, n4395, n4396, 
      n4397, n4398, n4399, n4400, n4401, n4402, n4403, n4404, n4405, n4406, 
      n4407, n4408, n4409, n4410, n4411, n4412, n4413, n4414, n4415, n4416, 
      n4417, n4418, n4419, n4420, n4421, n4422, n4423, n4424, n4425, n4426, 
      n4427, n4428, n4429, n4430, n4431, n4432, n4433, n4434, n4435, n4436, 
      n4437, n4438, n4439, n4440, n4441, n4442, n4443, n4444, n4445, n4446, 
      n4447, n4448, n4449, n4450, n4451, n4452, n4453, n4454, n4455, n4456, 
      n4457, n4458, n4459, n4460, n4461, n4462, n4463, n4464, n4465, n4466, 
      n4467, n4468, n4469, n4470, n4471, n4472, n4473, n4474, n4475, n4476, 
      n4477, n4478, n4479, n4480, n4481, n4482, n4483, n4484, n4485, n4486, 
      n4487, n4488, n4489, n4490, n4491, n4492, n4493, n4494, n4495, n4496, 
      n4497, n4498, n4499, n4500, n4501, n4502, n4503, n4504, n4505, n4506, 
      n4507, n4508, n4509, n4510, n4511, n4512, n4513, n4514, n4515, n4516, 
      n4517, n4518, n4519, n4520, n4521, n4522, n4523, n4524, n4525, n4526, 
      n4527, n4528, n4529, n4530, n4531, n4532, n4533, n4534, n4535, n4536, 
      n4537, n4538, n4539, n4540, n4541, n4542, n4543, n4544, n4545, n4546, 
      n4547, n4548, n4549, n4550, n4551, n4552, n4553, n4554, n4555, n4556, 
      n4557, n4558, n4559, n4560, n4561, n4562, n4563, n4564, n4565, n4566, 
      n4567, n4568, n4569, n4570, n4571, n4572, n4573, n4574, n4575, n4576, 
      n4577, n4578, n4579, n4580, n4581, n4582, n4583, n4584, n4585, n4586, 
      n4587, n4588, n4589, n4590, n4591, n4592, n4593, n4594, n4595, n4596, 
      n4597, n4598, n4599, n4600, n4601, n4602, n4603, n4604, n4605, n4606, 
      n4607, n4608, n4609, n4610, n4611, n4612, n4613, n4614, n4615, n4616, 
      n4617, n4618, n4619, n4620, n4621, n4622, n4623, n4624, n4625, n4626, 
      n4627, n4628, n4629, n4630, n4631, n4632, n4633, n4634, n4635, n4636, 
      n4637, n4638, n4639, n4640, n4641, n4642, n4643, n4644, n4645, n4646, 
      n4647, n4648, n4649, n4650, n4651, n4652, n4653, n4654, n4655, n4656, 
      n4657, n4658, n4659, n4660, n4661, n4662, n4663, n4664, n4665, n4666, 
      n4667, n4668, n4669, n4670, n4671, n4672, n4673, n4674, n4675, n4676, 
      n4677, n4678, n4679, n4680, n4681, n4682, n4683, n4684, n4685, n4686, 
      n4687, n4688, n4689, n4690, n4691, n4692, n4693, n4694, n4695, n4696, 
      n4697, n4698, n4699, n4700, n4701, n4702, n4703, n4704, n4705, n4706, 
      n4707, n4708, n4709, n4710, n4711, n4712, n4713, n4714, n4715, n4716, 
      n4717, n4718, n4719, n4720, n4721, n4722, n4723, n4724, n4725, n4726, 
      n4727, n4728, n4729, n4730, n4731, n4732, n4733, n4734, n4735, n4736, 
      n4737, n4738, n4739, n4740, n4741, n4742, n4743, n4744, n4745, n4746, 
      n4747, n4748, n4749, n4750, n4751, n4752, n4753, n4754, n4755, n4756, 
      n4757, n4758, n4759, n4760, n4761, n4762, n4763, n4764, n4765, n4766, 
      n4767, n4768, n4769, n4770, n4771, n4772, n4773, n4774, n4775, n4776, 
      n4777, n4778, n4779, n4780, n4781, n4782, n4783, n4784, n4785, n4786, 
      n4787, n4788, n4789, n4790, n4791, n4792, n4793, n4794, n4795, n4796, 
      n4797, n4798, n4799, n4800, n4801, n4802, n4803, n4804, n4805, n4806, 
      n4807, n4808, n4809, n4810, n4811, n4812, n4813, n4814, n4815, n4816, 
      n4817, n4818, n4819, n4820, n4821, n4822, n4823, n4824, n4825, n4826, 
      n4827, n4828, n4829, n4830, n4831, n4832, n4833, n4834, n4835, n4836, 
      n4837, n4838, n4839, n4840, n4841, n4842, n4843, n4844, n4845, n4846, 
      n4847, n4848, n4849, n4850, n4851, n4852, n4853, n4854, n4855, n4856, 
      n4857, n4858, n4859, n4860, n4861, n4862, n4863, n4864, n4865, n4866, 
      n4867, n4868, n4869, n4870, n4871, n4872, n4873, n4874, n4875, n4876, 
      n4877, n4878, n4879, n4880, n4881, n4882, n4883, n4884, n4885, n4886, 
      n4887, n4888, n4889, n4890, n4891, n4892, n4893, n4894, n4895, n4896, 
      n4897, n4898, n4899, n4900, n4901, n4902, n4903, n4904, n4905, n4906, 
      n4907, n4908, n4909, n4910, n4911, n4912, n4913, n4914, n4915, n4916, 
      n4917, n4918, n4919, n4920, n4921, n4922, n4923, n4924, n4925, n4926, 
      n4927, n4928, n4929, n4930, n4931, n4932, n4933, n4934, n4935, n4936, 
      n4937, n4938, n4939, n4940, n4941, n_1369, n_1370, n_1371, n_1372, n_1373
      , n_1374, n_1375, n_1376, n_1377, n_1378, n_1379, n_1380, n_1381, n_1382,
      n_1383, n_1384, n_1385, n_1386, n_1387, n_1388, n_1389, n_1390, n_1391, 
      n_1392, n_1393, n_1394, n_1395, n_1396, n_1397, n_1398, n_1399, n_1400, 
      n_1401, n_1402, n_1403, n_1404, n_1405, n_1406, n_1407, n_1408, n_1409, 
      n_1410, n_1411, n_1412, n_1413, n_1414, n_1415, n_1416, n_1417, n_1418, 
      n_1419, n_1420, n_1421, n_1422, n_1423, n_1424, n_1425, n_1426, n_1427, 
      n_1428, n_1429, n_1430, n_1431, n_1432, n_1433, n_1434, n_1435, n_1436, 
      n_1437, n_1438, n_1439, n_1440, n_1441, n_1442, n_1443, n_1444, n_1445, 
      n_1446, n_1447, n_1448, n_1449, n_1450, n_1451, n_1452, n_1453, n_1454, 
      n_1455, n_1456, n_1457, n_1458, n_1459, n_1460, n_1461, n_1462, n_1463, 
      n_1464, n_1465, n_1466, n_1467, n_1468, n_1469, n_1470, n_1471, n_1472, 
      n_1473, n_1474, n_1475, n_1476, n_1477, n_1478, n_1479, n_1480, n_1481, 
      n_1482, n_1483, n_1484, n_1485, n_1486, n_1487, n_1488, n_1489, n_1490, 
      n_1491, n_1492, n_1493, n_1494, n_1495, n_1496, n_1497, n_1498, n_1499, 
      n_1500, n_1501, n_1502, n_1503, n_1504, n_1505, n_1506, n_1507, n_1508, 
      n_1509, n_1510, n_1511, n_1512, n_1513, n_1514, n_1515, n_1516, n_1517, 
      n_1518, n_1519, n_1520, n_1521, n_1522, n_1523, n_1524, n_1525, n_1526, 
      n_1527, n_1528, n_1529, n_1530, n_1531, n_1532, n_1533, n_1534, n_1535, 
      n_1536, n_1537, n_1538, n_1539, n_1540, n_1541, n_1542, n_1543, n_1544, 
      n_1545, n_1546, n_1547, n_1548, n_1549, n_1550, n_1551, n_1552, n_1553, 
      n_1554, n_1555, n_1556, n_1557, n_1558, n_1559, n_1560, n_1561, n_1562, 
      n_1563, n_1564, n_1565, n_1566, n_1567, n_1568, n_1569, n_1570, n_1571, 
      n_1572, n_1573, n_1574, n_1575, n_1576, n_1577, n_1578, n_1579, n_1580, 
      n_1581, n_1582, n_1583, n_1584, n_1585, n_1586, n_1587, n_1588, n_1589, 
      n_1590, n_1591, n_1592, n_1593, n_1594, n_1595, n_1596, n_1597, n_1598, 
      n_1599, n_1600, n_1601, n_1602, n_1603, n_1604, n_1605, n_1606, n_1607, 
      n_1608, n_1609, n_1610, n_1611, n_1612, n_1613, n_1614, n_1615, n_1616, 
      n_1617, n_1618, n_1619, n_1620, n_1621, n_1622, n_1623, n_1624, n_1625, 
      n_1626, n_1627, n_1628, n_1629, n_1630, n_1631, n_1632, n_1633, n_1634, 
      n_1635, n_1636, n_1637, n_1638, n_1639, n_1640, n_1641, n_1642, n_1643, 
      n_1644, n_1645, n_1646, n_1647, n_1648, n_1649, n_1650, n_1651, n_1652, 
      n_1653, n_1654, n_1655, n_1656, n_1657, n_1658, n_1659, n_1660, n_1661, 
      n_1662, n_1663, n_1664, n_1665, n_1666, n_1667, n_1668, n_1669, n_1670, 
      n_1671, n_1672, n_1673, n_1674, n_1675, n_1676, n_1677, n_1678, n_1679, 
      n_1680, n_1681, n_1682, n_1683, n_1684, n_1685, n_1686, n_1687, n_1688, 
      n_1689, n_1690 : std_logic;

begin
   mem_wr_en <= mem_wr_en_port;
   mem_data_out <= ( mem_data_out_31_port, mem_data_out_30_port, 
      mem_data_out_29_port, mem_data_out_28_port, mem_data_out_27_port, 
      mem_data_out_26_port, mem_data_out_25_port, mem_data_out_24_port, 
      mem_data_out_23_port, mem_data_out_22_port, mem_data_out_21_port, 
      mem_data_out_20_port, mem_data_out_19_port, mem_data_out_18_port, 
      mem_data_out_17_port, mem_data_out_16_port, mem_data_out_15_port, 
      mem_data_out_14_port, mem_data_out_13_port, mem_data_out_12_port, 
      mem_data_out_11_port, mem_data_out_10_port, mem_data_out_9_port, 
      mem_data_out_8_port, mem_data_out_7_port, mem_data_out_6_port, 
      mem_data_out_5_port, mem_data_out_4_port, mem_data_out_3_port, 
      mem_data_out_2_port, mem_data_out_1_port, mem_data_out_0_port );
   ll_tx_sof_n <= ll_tx_sof_n_port;
   tx_src <= ( tx_src_4_port, tx_src_3_port, tx_src_2_port, tx_src_1_port, 
      tx_src_0_port );
   
   X_Logic1_port <= '1';
   X_Logic0_port <= '0';
   n4 <= '0';
   n5 <= '1';
   n6 <= '1';
   n7 <= '0';
   n8 <= '1';
   n9 <= '0';
   n12 <= '0';
   n13 <= '0';
   n14 <= '0';
   n15 <= '0';
   n16 <= '0';
   n17 <= '1';
   n18 <= '1';
   ack_reg_reg : GTECH_FD1 port map( D => N1840, CP => clk, Q => n4839, QN => 
                           n_1369);
   mem_data_in_reg_reg_31_inst : GTECH_FD1 port map( D => N1839, CP => clk, Q 
                           => n_1370, QN => n2374);
   mem_data_in_reg_reg_30_inst : GTECH_FD1 port map( D => N1838, CP => clk, Q 
                           => n_1371, QN => n2375);
   mem_data_in_reg_reg_29_inst : GTECH_FD1 port map( D => n2378, CP => clk, Q 
                           => n_1372, QN => n2248);
   mem_data_in_reg_reg_28_inst : GTECH_FD1 port map( D => N1836, CP => clk, Q 
                           => n_1373, QN => n2376);
   mem_data_in_reg_reg_27_inst : GTECH_FD1 port map( D => N1835, CP => clk, Q 
                           => n4838, QN => n_1374);
   mem_data_in_reg_reg_26_inst : GTECH_FD1 port map( D => N1834, CP => clk, Q 
                           => n4837, QN => n_1375);
   mem_data_in_reg_reg_25_inst : GTECH_FD1 port map( D => N1833, CP => clk, Q 
                           => n4836, QN => n_1376);
   mem_data_in_reg_reg_24_inst : GTECH_FD1 port map( D => N1832, CP => clk, Q 
                           => n4835, QN => n_1377);
   mem_data_in_reg_reg_23_inst : GTECH_FD1 port map( D => N1831, CP => clk, Q 
                           => n4834, QN => n_1378);
   mem_data_in_reg_reg_22_inst : GTECH_FD1 port map( D => N1830, CP => clk, Q 
                           => n4833, QN => n_1379);
   mem_data_in_reg_reg_21_inst : GTECH_FD1 port map( D => N1829, CP => clk, Q 
                           => n4832, QN => n_1380);
   mem_data_in_reg_reg_20_inst : GTECH_FD1 port map( D => N1828, CP => clk, Q 
                           => n4831, QN => n_1381);
   mem_data_in_reg_reg_19_inst : GTECH_FD1 port map( D => N1827, CP => clk, Q 
                           => n4830, QN => n_1382);
   mem_data_in_reg_reg_18_inst : GTECH_FD1 port map( D => N1826, CP => clk, Q 
                           => n4829, QN => n_1383);
   mem_data_in_reg_reg_17_inst : GTECH_FD1 port map( D => N1825, CP => clk, Q 
                           => n4828, QN => n_1384);
   mem_data_in_reg_reg_16_inst : GTECH_FD1 port map( D => N1824, CP => clk, Q 
                           => n4827, QN => n_1385);
   mem_data_in_reg_reg_15_inst : GTECH_FD1 port map( D => N1823, CP => clk, Q 
                           => n4826, QN => n_1386);
   mem_data_in_reg_reg_14_inst : GTECH_FD1 port map( D => N1822, CP => clk, Q 
                           => n4825, QN => n_1387);
   mem_data_in_reg_reg_13_inst : GTECH_FD1 port map( D => N1821, CP => clk, Q 
                           => n4824, QN => n_1388);
   mem_data_in_reg_reg_12_inst : GTECH_FD1 port map( D => N1820, CP => clk, Q 
                           => n4823, QN => n_1389);
   mem_data_in_reg_reg_11_inst : GTECH_FD1 port map( D => N1819, CP => clk, Q 
                           => n4822, QN => n_1390);
   mem_data_in_reg_reg_10_inst : GTECH_FD1 port map( D => N1818, CP => clk, Q 
                           => n4821, QN => n_1391);
   mem_data_in_reg_reg_9_inst : GTECH_FD1 port map( D => N1817, CP => clk, Q =>
                           n4820, QN => n_1392);
   mem_data_in_reg_reg_8_inst : GTECH_FD1 port map( D => N1816, CP => clk, Q =>
                           n4819, QN => n_1393);
   mem_data_in_reg_reg_7_inst : GTECH_FD1 port map( D => N1815, CP => clk, Q =>
                           n4818, QN => n_1394);
   mem_data_in_reg_reg_6_inst : GTECH_FD1 port map( D => N1814, CP => clk, Q =>
                           n4817, QN => n_1395);
   mem_data_in_reg_reg_5_inst : GTECH_FD1 port map( D => N1813, CP => clk, Q =>
                           n4816, QN => n_1396);
   mem_data_in_reg_reg_4_inst : GTECH_FD1 port map( D => N1812, CP => clk, Q =>
                           n4815, QN => n_1397);
   mem_data_in_reg_reg_3_inst : GTECH_FD1 port map( D => N1811, CP => clk, Q =>
                           n4814, QN => n_1398);
   mem_data_in_reg_reg_2_inst : GTECH_FD1 port map( D => N1810, CP => clk, Q =>
                           n4813, QN => n_1399);
   mem_data_in_reg_reg_1_inst : GTECH_FD1 port map( D => N1809, CP => clk, Q =>
                           n4812, QN => n_1400);
   mem_data_in_reg_reg_0_inst : GTECH_FD1 port map( D => N1808, CP => clk, Q =>
                           n4811, QN => n_1401);
   pass_num_curr_reg_0_inst : GTECH_FD1 port map( D => n2663, CP => clk, Q => 
                           pass_num_curr_0_port, QN => n_1402);
   mem_rd_len_counter_curr_reg_0_inst : GTECH_FD1 port map( D => n4842, CP => 
                           clk, Q => mem_rd_len_counter_curr_0_port, QN => 
                           n2286_port);
   mem_rd_len_counter_curr_reg_7_inst : GTECH_FD1 port map( D => n4849, CP => 
                           clk, Q => mem_rd_len_counter_curr_7_port, QN => 
                           n2293_port);
   tmp_addr_curr_reg_27_inst : GTECH_FD1 port map( D => n2381, CP => clk, Q => 
                           tmp_addr_curr_27_port, QN => n_1403);
   mem_tx_fsm_cs_reg_3_inst : GTECH_FD1 port map( D => n2729, CP => clk, Q => 
                           n4810, QN => n_1404);
   wr_counter_curr_reg_0_inst : GTECH_FD1 port map( D => n2630, CP => clk, Q =>
                           wr_counter_curr_0_port, QN => n_1405);
   mem_tx_fsm_cs_reg_1_inst : GTECH_FD1 port map( D => n2727, CP => clk, Q => 
                           n4809, QN => n_1406);
   mem_tx_fsm_cs_reg_2_inst : GTECH_FD1 port map( D => n2728, CP => clk, Q => 
                           n4808, QN => n_1407);
   pass_thru_mode_curr_reg : GTECH_FD1 port map( D => n2481, CP => clk, Q => 
                           pass_thru_mode_curr, QN => n_1408);
   mem_tx_fsm_cs_reg_0_inst : GTECH_FD1 port map( D => n2726, CP => clk, Q => 
                           n4807, QN => n_1409);
   wr_counter_curr_reg_1_inst : GTECH_FD1 port map( D => n2629, CP => clk, Q =>
                           wr_counter_curr_1_port, QN => n_1410);
   wr_counter_curr_reg_2_inst : GTECH_FD1 port map( D => n2628, CP => clk, Q =>
                           wr_counter_curr_2_port, QN => n_1411);
   wr_counter_curr_reg_3_inst : GTECH_FD1 port map( D => n2627, CP => clk, Q =>
                           wr_counter_curr_3_port, QN => n_1412);
   wr_counter_curr_reg_4_inst : GTECH_FD1 port map( D => n2626, CP => clk, Q =>
                           wr_counter_curr_4_port, QN => n_1413);
   wr_counter_curr_reg_5_inst : GTECH_FD1 port map( D => n2625, CP => clk, Q =>
                           wr_counter_curr_5_port, QN => n_1414);
   wr_counter_curr_reg_6_inst : GTECH_FD1 port map( D => n2624, CP => clk, Q =>
                           wr_counter_curr_6_port, QN => n_1415);
   wr_counter_curr_reg_7_inst : GTECH_FD1 port map( D => n2623, CP => clk, Q =>
                           wr_counter_curr_7_port, QN => n_1416);
   sic_rx_fsm_cs_reg_0_inst : GTECH_FD1 port map( D => n2611, CP => clk, Q => 
                           sic_rx_fsm_cs_0_port, QN => n_1417);
   sic_rx_fsm_cs_reg_1_inst : GTECH_FD1 port map( D => n2612, CP => clk, Q => 
                           sic_rx_fsm_cs_1_port, QN => n_1418);
   sic_rx_fsm_cs_reg_2_inst : GTECH_FD1 port map( D => n2354, CP => clk, Q => 
                           sic_rx_fsm_cs_2_port, QN => n_1419);
   mem_data_be_curr_reg_3_inst : GTECH_FD1 port map( D => n2486, CP => clk, Q 
                           => mem_data_be(3), QN => n2285_port);
   mem_data_be_curr_reg_2_inst : GTECH_FD1 port map( D => n2487, CP => clk, Q 
                           => mem_data_be(2), QN => n2284_port);
   mem_data_be_curr_reg_1_inst : GTECH_FD1 port map( D => n2488, CP => clk, Q 
                           => mem_data_be(1), QN => n2283_port);
   mem_data_be_curr_reg_0_inst : GTECH_FD1 port map( D => n2489, CP => clk, Q 
                           => mem_data_be(0), QN => n2282_port);
   tmp_data_curr_reg_31_inst : GTECH_FD1 port map( D => n2490, CP => clk, Q => 
                           tmp_data_curr_31_port, QN => n_1420);
   tmp_data_curr_reg_30_inst : GTECH_FD1 port map( D => n2491, CP => clk, Q => 
                           tmp_data_curr_30_port, QN => n_1421);
   tmp_data_curr_reg_29_inst : GTECH_FD1 port map( D => n2492, CP => clk, Q => 
                           tmp_data_curr_29_port, QN => n_1422);
   tmp_data_curr_reg_28_inst : GTECH_FD1 port map( D => n2493, CP => clk, Q => 
                           tmp_data_curr_28_port, QN => n_1423);
   tmp_data_curr_reg_27_inst : GTECH_FD1 port map( D => n2494, CP => clk, Q => 
                           tmp_data_curr_27_port, QN => n_1424);
   tmp_data_curr_reg_26_inst : GTECH_FD1 port map( D => n2495, CP => clk, Q => 
                           tmp_data_curr_26_port, QN => n_1425);
   tmp_data_curr_reg_25_inst : GTECH_FD1 port map( D => n2496, CP => clk, Q => 
                           tmp_data_curr_25_port, QN => n_1426);
   tmp_data_curr_reg_24_inst : GTECH_FD1 port map( D => n2497, CP => clk, Q => 
                           tmp_data_curr_24_port, QN => n_1427);
   tmp_data_curr_reg_23_inst : GTECH_FD1 port map( D => n2498, CP => clk, Q => 
                           tmp_data_curr_23_port, QN => n_1428);
   tmp_data_curr_reg_22_inst : GTECH_FD1 port map( D => n2499, CP => clk, Q => 
                           tmp_data_curr_22_port, QN => n_1429);
   tmp_data_curr_reg_21_inst : GTECH_FD1 port map( D => n2500, CP => clk, Q => 
                           tmp_data_curr_21_port, QN => n_1430);
   tmp_data_curr_reg_20_inst : GTECH_FD1 port map( D => n2501, CP => clk, Q => 
                           tmp_data_curr_20_port, QN => n_1431);
   tmp_data_curr_reg_19_inst : GTECH_FD1 port map( D => n2502, CP => clk, Q => 
                           tmp_data_curr_19_port, QN => n_1432);
   tmp_data_curr_reg_18_inst : GTECH_FD1 port map( D => n2503, CP => clk, Q => 
                           tmp_data_curr_18_port, QN => n_1433);
   tmp_data_curr_reg_17_inst : GTECH_FD1 port map( D => n2504, CP => clk, Q => 
                           tmp_data_curr_17_port, QN => n_1434);
   tmp_data_curr_reg_16_inst : GTECH_FD1 port map( D => n2505, CP => clk, Q => 
                           tmp_data_curr_16_port, QN => n_1435);
   tmp_data_curr_reg_15_inst : GTECH_FD1 port map( D => n2506, CP => clk, Q => 
                           tmp_data_curr_15_port, QN => n_1436);
   tmp_data_curr_reg_14_inst : GTECH_FD1 port map( D => n2507, CP => clk, Q => 
                           tmp_data_curr_14_port, QN => n_1437);
   tmp_data_curr_reg_13_inst : GTECH_FD1 port map( D => n2508, CP => clk, Q => 
                           tmp_data_curr_13_port, QN => n_1438);
   tmp_data_curr_reg_12_inst : GTECH_FD1 port map( D => n2509, CP => clk, Q => 
                           tmp_data_curr_12_port, QN => n_1439);
   tmp_data_curr_reg_11_inst : GTECH_FD1 port map( D => n2510, CP => clk, Q => 
                           tmp_data_curr_11_port, QN => n_1440);
   tmp_data_curr_reg_10_inst : GTECH_FD1 port map( D => n2511, CP => clk, Q => 
                           tmp_data_curr_10_port, QN => n_1441);
   tmp_data_curr_reg_9_inst : GTECH_FD1 port map( D => n2512, CP => clk, Q => 
                           tmp_data_curr_9_port, QN => n_1442);
   tmp_data_curr_reg_8_inst : GTECH_FD1 port map( D => n2513, CP => clk, Q => 
                           tmp_data_curr_8_port, QN => n_1443);
   tmp_data_curr_reg_7_inst : GTECH_FD1 port map( D => n2514, CP => clk, Q => 
                           tmp_data_curr_7_port, QN => n_1444);
   tmp_data_curr_reg_6_inst : GTECH_FD1 port map( D => n2515, CP => clk, Q => 
                           tmp_data_curr_6_port, QN => n_1445);
   tmp_data_curr_reg_5_inst : GTECH_FD1 port map( D => n2516, CP => clk, Q => 
                           tmp_data_curr_5_port, QN => n_1446);
   tmp_data_curr_reg_4_inst : GTECH_FD1 port map( D => n2517, CP => clk, Q => 
                           tmp_data_curr_4_port, QN => n_1447);
   tmp_data_curr_reg_3_inst : GTECH_FD1 port map( D => n2518, CP => clk, Q => 
                           tmp_data_curr_3_port, QN => n_1448);
   tmp_data_curr_reg_2_inst : GTECH_FD1 port map( D => n2519, CP => clk, Q => 
                           tmp_data_curr_2_port, QN => n_1449);
   tmp_data_curr_reg_1_inst : GTECH_FD1 port map( D => n2520, CP => clk, Q => 
                           tmp_data_curr_1_port, QN => n_1450);
   tmp_data_curr_reg_0_inst : GTECH_FD1 port map( D => n2521, CP => clk, Q => 
                           tmp_data_curr_0_port, QN => n_1451);
   mem_len_curr_reg_31_inst : GTECH_FD1 port map( D => n4882, CP => clk, Q => 
                           mem_len_curr_31_port, QN => n2250);
   mem_len_curr_reg_30_inst : GTECH_FD1 port map( D => n4883, CP => clk, Q => 
                           mem_len_curr_30_port, QN => n2251);
   mem_len_curr_reg_29_inst : GTECH_FD1 port map( D => n4884, CP => clk, Q => 
                           mem_len_curr_29_port, QN => n2252);
   mem_len_curr_reg_28_inst : GTECH_FD1 port map( D => n4885, CP => clk, Q => 
                           mem_len_curr_28_port, QN => n2253);
   mem_len_curr_reg_27_inst : GTECH_FD1 port map( D => n4886, CP => clk, Q => 
                           mem_len_curr_27_port, QN => n2254);
   mem_len_curr_reg_26_inst : GTECH_FD1 port map( D => n4887, CP => clk, Q => 
                           mem_len_curr_26_port, QN => n2255);
   mem_len_curr_reg_25_inst : GTECH_FD1 port map( D => n4888, CP => clk, Q => 
                           mem_len_curr_25_port, QN => n2256);
   mem_len_curr_reg_24_inst : GTECH_FD1 port map( D => n4889, CP => clk, Q => 
                           mem_len_curr_24_port, QN => n2257);
   mem_len_curr_reg_23_inst : GTECH_FD1 port map( D => n4890, CP => clk, Q => 
                           mem_len_curr_23_port, QN => n2258);
   mem_len_curr_reg_22_inst : GTECH_FD1 port map( D => n4891, CP => clk, Q => 
                           mem_len_curr_22_port, QN => n2259);
   mem_len_curr_reg_21_inst : GTECH_FD1 port map( D => n4892, CP => clk, Q => 
                           mem_len_curr_21_port, QN => n2260);
   mem_len_curr_reg_20_inst : GTECH_FD1 port map( D => n4893, CP => clk, Q => 
                           mem_len_curr_20_port, QN => n2261_port);
   mem_len_curr_reg_19_inst : GTECH_FD1 port map( D => n4894, CP => clk, Q => 
                           mem_len_curr_19_port, QN => n2262_port);
   mem_len_curr_reg_18_inst : GTECH_FD1 port map( D => n4895, CP => clk, Q => 
                           mem_len_curr_18_port, QN => n2263_port);
   mem_len_curr_reg_17_inst : GTECH_FD1 port map( D => n4896, CP => clk, Q => 
                           mem_len_curr_17_port, QN => n2264_port);
   mem_len_curr_reg_16_inst : GTECH_FD1 port map( D => n4897, CP => clk, Q => 
                           mem_len_curr_16_port, QN => n2265_port);
   mem_len_curr_reg_15_inst : GTECH_FD1 port map( D => n4898, CP => clk, Q => 
                           mem_len_curr_15_port, QN => n2266_port);
   mem_len_curr_reg_14_inst : GTECH_FD1 port map( D => n4899, CP => clk, Q => 
                           mem_len_curr_14_port, QN => n2267_port);
   mem_len_curr_reg_13_inst : GTECH_FD1 port map( D => n4900, CP => clk, Q => 
                           mem_len_curr_13_port, QN => n2268_port);
   mem_len_curr_reg_12_inst : GTECH_FD1 port map( D => n4901, CP => clk, Q => 
                           mem_len_curr_12_port, QN => n2269_port);
   mem_len_curr_reg_11_inst : GTECH_FD1 port map( D => n4902, CP => clk, Q => 
                           mem_len_curr_11_port, QN => n2270_port);
   mem_len_curr_reg_10_inst : GTECH_FD1 port map( D => n4903, CP => clk, Q => 
                           mem_len_curr_10_port, QN => n2271_port);
   mem_len_curr_reg_9_inst : GTECH_FD1 port map( D => n4904, CP => clk, Q => 
                           mem_len_curr_9_port, QN => n2272_port);
   mem_len_curr_reg_8_inst : GTECH_FD1 port map( D => n4905, CP => clk, Q => 
                           mem_len_curr_8_port, QN => n2273_port);
   mem_len_curr_reg_7_inst : GTECH_FD1 port map( D => n4906, CP => clk, Q => 
                           mem_len_curr_7_port, QN => n2274_port);
   mem_len_curr_reg_6_inst : GTECH_FD1 port map( D => n4907, CP => clk, Q => 
                           mem_len_curr_6_port, QN => n2275_port);
   mem_len_curr_reg_5_inst : GTECH_FD1 port map( D => n4908, CP => clk, Q => 
                           mem_len_curr_5_port, QN => n2276_port);
   mem_len_curr_reg_4_inst : GTECH_FD1 port map( D => n4909, CP => clk, Q => 
                           mem_len_curr_4_port, QN => n2277_port);
   mem_len_curr_reg_3_inst : GTECH_FD1 port map( D => n4910, CP => clk, Q => 
                           mem_len_curr_3_port, QN => n2278_port);
   mem_len_curr_reg_2_inst : GTECH_FD1 port map( D => n4911, CP => clk, Q => 
                           mem_len_curr_2_port, QN => n2279_port);
   mem_len_curr_reg_1_inst : GTECH_FD1 port map( D => n4912, CP => clk, Q => 
                           mem_len_curr_1_port, QN => n2280_port);
   mem_len_curr_reg_0_inst : GTECH_FD1 port map( D => n4913, CP => clk, Q => 
                           mem_len_curr_0_port, QN => n2281_port);
   waiting_to_recv_data_curr_reg : GTECH_FD1 port map( D => n2522, CP => clk, Q
                           => waiting_to_recv_data_curr, QN => n_1452);
   trans_type_curr_reg_3_inst : GTECH_FD1 port map( D => n2482, CP => clk, Q =>
                           trans_type_curr_3_port, QN => n_1453);
   trans_type_curr_reg_2_inst : GTECH_FD1 port map( D => n2483, CP => clk, Q =>
                           trans_type_curr_2_port, QN => n_1454);
   trans_type_curr_reg_1_inst : GTECH_FD1 port map( D => n2484, CP => clk, Q =>
                           trans_type_curr_1_port, QN => n_1455);
   trans_type_curr_reg_0_inst : GTECH_FD1 port map( D => n2485, CP => clk, Q =>
                           trans_type_curr_0_port, QN => n_1456);
   wr_ack_curr_reg : GTECH_FD1 port map( D => n2379, CP => clk, Q => 
                           wr_ack_curr, QN => n_1457);
   mem_data_out_curr_reg_31_inst : GTECH_FD1 port map( D => n2441, CP => clk, Q
                           => mem_data_out_31_port, QN => n_1458);
   mem_data_out_curr_reg_30_inst : GTECH_FD1 port map( D => n2442, CP => clk, Q
                           => mem_data_out_30_port, QN => n_1459);
   mem_data_out_curr_reg_29_inst : GTECH_FD1 port map( D => n2443, CP => clk, Q
                           => mem_data_out_29_port, QN => n_1460);
   mem_data_out_curr_reg_28_inst : GTECH_FD1 port map( D => n2444, CP => clk, Q
                           => mem_data_out_28_port, QN => n_1461);
   mem_data_out_curr_reg_27_inst : GTECH_FD1 port map( D => n2445, CP => clk, Q
                           => mem_data_out_27_port, QN => n_1462);
   mem_data_out_curr_reg_26_inst : GTECH_FD1 port map( D => n2446, CP => clk, Q
                           => mem_data_out_26_port, QN => n_1463);
   mem_data_out_curr_reg_25_inst : GTECH_FD1 port map( D => n2447, CP => clk, Q
                           => mem_data_out_25_port, QN => n_1464);
   mem_data_out_curr_reg_24_inst : GTECH_FD1 port map( D => n2448, CP => clk, Q
                           => mem_data_out_24_port, QN => n_1465);
   mem_data_out_curr_reg_23_inst : GTECH_FD1 port map( D => n2449, CP => clk, Q
                           => mem_data_out_23_port, QN => n_1466);
   mem_data_out_curr_reg_22_inst : GTECH_FD1 port map( D => n2450, CP => clk, Q
                           => mem_data_out_22_port, QN => n_1467);
   mem_data_out_curr_reg_21_inst : GTECH_FD1 port map( D => n2451, CP => clk, Q
                           => mem_data_out_21_port, QN => n_1468);
   mem_data_out_curr_reg_20_inst : GTECH_FD1 port map( D => n2452, CP => clk, Q
                           => mem_data_out_20_port, QN => n_1469);
   mem_data_out_curr_reg_19_inst : GTECH_FD1 port map( D => n2453, CP => clk, Q
                           => mem_data_out_19_port, QN => n_1470);
   mem_data_out_curr_reg_18_inst : GTECH_FD1 port map( D => n2454, CP => clk, Q
                           => mem_data_out_18_port, QN => n_1471);
   mem_data_out_curr_reg_17_inst : GTECH_FD1 port map( D => n2455, CP => clk, Q
                           => mem_data_out_17_port, QN => n_1472);
   mem_data_out_curr_reg_16_inst : GTECH_FD1 port map( D => n2456, CP => clk, Q
                           => mem_data_out_16_port, QN => n_1473);
   mem_data_out_curr_reg_15_inst : GTECH_FD1 port map( D => n2457, CP => clk, Q
                           => mem_data_out_15_port, QN => n_1474);
   mem_data_out_curr_reg_14_inst : GTECH_FD1 port map( D => n2458, CP => clk, Q
                           => mem_data_out_14_port, QN => n_1475);
   mem_data_out_curr_reg_13_inst : GTECH_FD1 port map( D => n2459, CP => clk, Q
                           => mem_data_out_13_port, QN => n_1476);
   mem_data_out_curr_reg_12_inst : GTECH_FD1 port map( D => n2460, CP => clk, Q
                           => mem_data_out_12_port, QN => n_1477);
   mem_data_out_curr_reg_11_inst : GTECH_FD1 port map( D => n2461, CP => clk, Q
                           => mem_data_out_11_port, QN => n_1478);
   mem_data_out_curr_reg_10_inst : GTECH_FD1 port map( D => n2462, CP => clk, Q
                           => mem_data_out_10_port, QN => n_1479);
   mem_data_out_curr_reg_9_inst : GTECH_FD1 port map( D => n2463, CP => clk, Q 
                           => mem_data_out_9_port, QN => n_1480);
   mem_data_out_curr_reg_8_inst : GTECH_FD1 port map( D => n2464, CP => clk, Q 
                           => mem_data_out_8_port, QN => n_1481);
   mem_data_out_curr_reg_7_inst : GTECH_FD1 port map( D => n2465, CP => clk, Q 
                           => mem_data_out_7_port, QN => n_1482);
   mem_data_out_curr_reg_6_inst : GTECH_FD1 port map( D => n2466, CP => clk, Q 
                           => mem_data_out_6_port, QN => n_1483);
   mem_data_out_curr_reg_5_inst : GTECH_FD1 port map( D => n2467, CP => clk, Q 
                           => mem_data_out_5_port, QN => n_1484);
   mem_data_out_curr_reg_4_inst : GTECH_FD1 port map( D => n2468, CP => clk, Q 
                           => mem_data_out_4_port, QN => n_1485);
   mem_data_out_curr_reg_3_inst : GTECH_FD1 port map( D => n2469, CP => clk, Q 
                           => mem_data_out_3_port, QN => n_1486);
   mem_data_out_curr_reg_2_inst : GTECH_FD1 port map( D => n2470, CP => clk, Q 
                           => mem_data_out_2_port, QN => n_1487);
   mem_data_out_curr_reg_1_inst : GTECH_FD1 port map( D => n2471, CP => clk, Q 
                           => mem_data_out_1_port, QN => n_1488);
   mem_data_out_curr_reg_0_inst : GTECH_FD1 port map( D => n2472, CP => clk, Q 
                           => mem_data_out_0_port, QN => n_1489);
   trans_id_curr_reg_27_inst : GTECH_FD1 port map( D => n2550, CP => clk, Q => 
                           trans_id_curr_27_port, QN => n_1490);
   trans_id_curr_reg_26_inst : GTECH_FD1 port map( D => n2549, CP => clk, Q => 
                           trans_id_curr_26_port, QN => n_1491);
   trans_id_curr_reg_25_inst : GTECH_FD1 port map( D => n2548, CP => clk, Q => 
                           trans_id_curr_25_port, QN => n_1492);
   trans_id_curr_reg_24_inst : GTECH_FD1 port map( D => n2547, CP => clk, Q => 
                           trans_id_curr_24_port, QN => n_1493);
   trans_id_curr_reg_23_inst : GTECH_FD1 port map( D => n2546, CP => clk, Q => 
                           trans_id_curr_23_port, QN => n_1494);
   trans_id_curr_reg_22_inst : GTECH_FD1 port map( D => n2545, CP => clk, Q => 
                           trans_id_curr_22_port, QN => n_1495);
   trans_id_curr_reg_21_inst : GTECH_FD1 port map( D => n2544, CP => clk, Q => 
                           trans_id_curr_21_port, QN => n_1496);
   trans_id_curr_reg_20_inst : GTECH_FD1 port map( D => n2543, CP => clk, Q => 
                           trans_id_curr_20_port, QN => n_1497);
   trans_id_curr_reg_19_inst : GTECH_FD1 port map( D => n2542, CP => clk, Q => 
                           trans_id_curr_19_port, QN => n_1498);
   trans_id_curr_reg_18_inst : GTECH_FD1 port map( D => n2541, CP => clk, Q => 
                           trans_id_curr_18_port, QN => n_1499);
   trans_id_curr_reg_17_inst : GTECH_FD1 port map( D => n2540, CP => clk, Q => 
                           trans_id_curr_17_port, QN => n_1500);
   trans_id_curr_reg_16_inst : GTECH_FD1 port map( D => n2539, CP => clk, Q => 
                           trans_id_curr_16_port, QN => n_1501);
   trans_id_curr_reg_15_inst : GTECH_FD1 port map( D => n2538, CP => clk, Q => 
                           trans_id_curr_15_port, QN => n_1502);
   trans_id_curr_reg_14_inst : GTECH_FD1 port map( D => n2537, CP => clk, Q => 
                           trans_id_curr_14_port, QN => n_1503);
   trans_id_curr_reg_13_inst : GTECH_FD1 port map( D => n2536, CP => clk, Q => 
                           trans_id_curr_13_port, QN => n_1504);
   trans_id_curr_reg_12_inst : GTECH_FD1 port map( D => n2535, CP => clk, Q => 
                           trans_id_curr_12_port, QN => n_1505);
   trans_id_curr_reg_11_inst : GTECH_FD1 port map( D => n2534, CP => clk, Q => 
                           trans_id_curr_11_port, QN => n_1506);
   trans_id_curr_reg_10_inst : GTECH_FD1 port map( D => n2533, CP => clk, Q => 
                           trans_id_curr_10_port, QN => n_1507);
   trans_id_curr_reg_9_inst : GTECH_FD1 port map( D => n2532, CP => clk, Q => 
                           trans_id_curr_9_port, QN => n_1508);
   trans_id_curr_reg_8_inst : GTECH_FD1 port map( D => n2531, CP => clk, Q => 
                           trans_id_curr_8_port, QN => n_1509);
   trans_id_curr_reg_7_inst : GTECH_FD1 port map( D => n2530, CP => clk, Q => 
                           trans_id_curr_7_port, QN => n_1510);
   trans_id_curr_reg_6_inst : GTECH_FD1 port map( D => n2529, CP => clk, Q => 
                           trans_id_curr_6_port, QN => n_1511);
   trans_id_curr_reg_5_inst : GTECH_FD1 port map( D => n2528, CP => clk, Q => 
                           trans_id_curr_5_port, QN => n_1512);
   trans_id_curr_reg_4_inst : GTECH_FD1 port map( D => n2527, CP => clk, Q => 
                           trans_id_curr_4_port, QN => n_1513);
   trans_id_curr_reg_3_inst : GTECH_FD1 port map( D => n2526, CP => clk, Q => 
                           trans_id_curr_3_port, QN => n_1514);
   trans_id_curr_reg_2_inst : GTECH_FD1 port map( D => n2525, CP => clk, Q => 
                           trans_id_curr_2_port, QN => n_1515);
   trans_id_curr_reg_1_inst : GTECH_FD1 port map( D => n2524, CP => clk, Q => 
                           trans_id_curr_1_port, QN => n_1516);
   trans_id_curr_reg_0_inst : GTECH_FD1 port map( D => n2523, CP => clk, Q => 
                           trans_id_curr_0_port, QN => n_1517);
   mem_addr_curr_reg_27_inst : GTECH_FD1 port map( D => n4941, CP => clk, Q => 
                           n4806, QN => n_1518);
   mem_addr_curr_reg_26_inst : GTECH_FD1 port map( D => n4940, CP => clk, Q => 
                           n4805, QN => n_1519);
   mem_addr_curr_reg_25_inst : GTECH_FD1 port map( D => n4939, CP => clk, Q => 
                           n4804, QN => n_1520);
   mem_addr_curr_reg_24_inst : GTECH_FD1 port map( D => n4938, CP => clk, Q => 
                           n4803, QN => n_1521);
   mem_addr_curr_reg_23_inst : GTECH_FD1 port map( D => n4937, CP => clk, Q => 
                           n4802, QN => n_1522);
   mem_addr_curr_reg_22_inst : GTECH_FD1 port map( D => n4936, CP => clk, Q => 
                           n4801, QN => n_1523);
   mem_addr_curr_reg_21_inst : GTECH_FD1 port map( D => n4935, CP => clk, Q => 
                           n4800, QN => n_1524);
   mem_addr_curr_reg_20_inst : GTECH_FD1 port map( D => n4934, CP => clk, Q => 
                           n4799, QN => n_1525);
   mem_addr_curr_reg_19_inst : GTECH_FD1 port map( D => n4933, CP => clk, Q => 
                           n4798, QN => n_1526);
   mem_addr_curr_reg_18_inst : GTECH_FD1 port map( D => n4932, CP => clk, Q => 
                           n4797, QN => n_1527);
   mem_addr_curr_reg_17_inst : GTECH_FD1 port map( D => n4931, CP => clk, Q => 
                           n4796, QN => n_1528);
   mem_addr_curr_reg_16_inst : GTECH_FD1 port map( D => n4930, CP => clk, Q => 
                           n4795, QN => n_1529);
   mem_addr_curr_reg_15_inst : GTECH_FD1 port map( D => n4929, CP => clk, Q => 
                           n4794, QN => n_1530);
   mem_addr_curr_reg_14_inst : GTECH_FD1 port map( D => n4928, CP => clk, Q => 
                           n4793, QN => n_1531);
   mem_addr_curr_reg_13_inst : GTECH_FD1 port map( D => n4927, CP => clk, Q => 
                           n4792, QN => n_1532);
   mem_addr_curr_reg_12_inst : GTECH_FD1 port map( D => n4926, CP => clk, Q => 
                           n4791, QN => n_1533);
   mem_addr_curr_reg_11_inst : GTECH_FD1 port map( D => n4925, CP => clk, Q => 
                           n4790, QN => n_1534);
   mem_addr_curr_reg_10_inst : GTECH_FD1 port map( D => n4924, CP => clk, Q => 
                           n4789, QN => n_1535);
   mem_addr_curr_reg_9_inst : GTECH_FD1 port map( D => n4923, CP => clk, Q => 
                           n4788, QN => n_1536);
   mem_addr_curr_reg_8_inst : GTECH_FD1 port map( D => n4922, CP => clk, Q => 
                           n4787, QN => n_1537);
   mem_addr_curr_reg_7_inst : GTECH_FD1 port map( D => n4921, CP => clk, Q => 
                           n4786, QN => n_1538);
   mem_addr_curr_reg_6_inst : GTECH_FD1 port map( D => n4920, CP => clk, Q => 
                           n4785, QN => n_1539);
   mem_addr_curr_reg_5_inst : GTECH_FD1 port map( D => n4919, CP => clk, Q => 
                           n4784, QN => n_1540);
   mem_addr_curr_reg_4_inst : GTECH_FD1 port map( D => n4918, CP => clk, Q => 
                           n4783, QN => n_1541);
   mem_addr_curr_reg_3_inst : GTECH_FD1 port map( D => n4917, CP => clk, Q => 
                           n4782, QN => n_1542);
   mem_addr_curr_reg_2_inst : GTECH_FD1 port map( D => n4916, CP => clk, Q => 
                           n4781, QN => n_1543);
   mem_addr_curr_reg_1_inst : GTECH_FD1 port map( D => n4915, CP => clk, Q => 
                           n4780, QN => n_1544);
   mem_addr_curr_reg_0_inst : GTECH_FD1 port map( D => n4914, CP => clk, Q => 
                           n4779, QN => n_1545);
   pass_num_curr_reg_15_inst : GTECH_FD1 port map( D => n2678, CP => clk, Q => 
                           pass_num_curr_15_port, QN => n_1546);
   pass_num_curr_reg_1_inst : GTECH_FD1 port map( D => n2664, CP => clk, Q => 
                           pass_num_curr_1_port, QN => n_1547);
   pass_num_curr_reg_2_inst : GTECH_FD1 port map( D => n2665, CP => clk, Q => 
                           pass_num_curr_2_port, QN => n_1548);
   pass_num_curr_reg_3_inst : GTECH_FD1 port map( D => n2666, CP => clk, Q => 
                           pass_num_curr_3_port, QN => n_1549);
   pass_num_curr_reg_4_inst : GTECH_FD1 port map( D => n2667, CP => clk, Q => 
                           pass_num_curr_4_port, QN => n_1550);
   pass_num_curr_reg_5_inst : GTECH_FD1 port map( D => n2668, CP => clk, Q => 
                           pass_num_curr_5_port, QN => n_1551);
   pass_num_curr_reg_6_inst : GTECH_FD1 port map( D => n2669, CP => clk, Q => 
                           pass_num_curr_6_port, QN => n_1552);
   pass_num_curr_reg_7_inst : GTECH_FD1 port map( D => n2670, CP => clk, Q => 
                           pass_num_curr_7_port, QN => n_1553);
   pass_num_curr_reg_8_inst : GTECH_FD1 port map( D => n2671, CP => clk, Q => 
                           pass_num_curr_8_port, QN => n_1554);
   pass_num_curr_reg_9_inst : GTECH_FD1 port map( D => n2672, CP => clk, Q => 
                           pass_num_curr_9_port, QN => n_1555);
   pass_num_curr_reg_10_inst : GTECH_FD1 port map( D => n2673, CP => clk, Q => 
                           pass_num_curr_10_port, QN => n_1556);
   pass_num_curr_reg_11_inst : GTECH_FD1 port map( D => n2674, CP => clk, Q => 
                           pass_num_curr_11_port, QN => n_1557);
   pass_num_curr_reg_12_inst : GTECH_FD1 port map( D => n2675, CP => clk, Q => 
                           pass_num_curr_12_port, QN => n_1558);
   pass_num_curr_reg_13_inst : GTECH_FD1 port map( D => n2676, CP => clk, Q => 
                           pass_num_curr_13_port, QN => n_1559);
   pass_num_curr_reg_14_inst : GTECH_FD1 port map( D => n2677, CP => clk, Q => 
                           pass_num_curr_14_port, QN => n_1560);
   pass_num_curr_reg_16_inst : GTECH_FD1 port map( D => n2679, CP => clk, Q => 
                           pass_num_curr_16_port, QN => n_1561);
   pass_num_curr_reg_17_inst : GTECH_FD1 port map( D => n2680, CP => clk, Q => 
                           pass_num_curr_17_port, QN => n_1562);
   pass_num_curr_reg_18_inst : GTECH_FD1 port map( D => n2681, CP => clk, Q => 
                           pass_num_curr_18_port, QN => n_1563);
   pass_num_curr_reg_19_inst : GTECH_FD1 port map( D => n2682, CP => clk, Q => 
                           pass_num_curr_19_port, QN => n_1564);
   pass_num_curr_reg_20_inst : GTECH_FD1 port map( D => n2683, CP => clk, Q => 
                           pass_num_curr_20_port, QN => n_1565);
   pass_num_curr_reg_21_inst : GTECH_FD1 port map( D => n2684, CP => clk, Q => 
                           pass_num_curr_21_port, QN => n_1566);
   pass_num_curr_reg_22_inst : GTECH_FD1 port map( D => n2685, CP => clk, Q => 
                           pass_num_curr_22_port, QN => n_1567);
   pass_num_curr_reg_23_inst : GTECH_FD1 port map( D => n2686, CP => clk, Q => 
                           pass_num_curr_23_port, QN => n_1568);
   pass_num_curr_reg_24_inst : GTECH_FD1 port map( D => n2687, CP => clk, Q => 
                           pass_num_curr_24_port, QN => n_1569);
   pass_num_curr_reg_25_inst : GTECH_FD1 port map( D => n2688, CP => clk, Q => 
                           pass_num_curr_25_port, QN => n_1570);
   pass_num_curr_reg_26_inst : GTECH_FD1 port map( D => n2689, CP => clk, Q => 
                           pass_num_curr_26_port, QN => n_1571);
   pass_num_curr_reg_27_inst : GTECH_FD1 port map( D => n2690, CP => clk, Q => 
                           pass_num_curr_27_port, QN => n_1572);
   pass_num_curr_reg_28_inst : GTECH_FD1 port map( D => n2691, CP => clk, Q => 
                           pass_num_curr_28_port, QN => n_1573);
   pass_num_curr_reg_29_inst : GTECH_FD1 port map( D => n2692, CP => clk, Q => 
                           pass_num_curr_29_port, QN => n_1574);
   pass_num_curr_reg_30_inst : GTECH_FD1 port map( D => n2693, CP => clk, Q => 
                           pass_num_curr_30_port, QN => n_1575);
   pass_num_curr_reg_31_inst : GTECH_FD1 port map( D => n2694, CP => clk, Q => 
                           pass_num_curr_31_port, QN => n_1576);
   pass_tid_curr_reg_0_inst : GTECH_FD1 port map( D => n2695, CP => clk, Q => 
                           pass_tid_curr_0_port, QN => n_1577);
   pass_tid_curr_reg_1_inst : GTECH_FD1 port map( D => n2696, CP => clk, Q => 
                           pass_tid_curr_1_port, QN => n_1578);
   pass_tid_curr_reg_2_inst : GTECH_FD1 port map( D => n2697, CP => clk, Q => 
                           pass_tid_curr_2_port, QN => n_1579);
   pass_tid_curr_reg_3_inst : GTECH_FD1 port map( D => n2698, CP => clk, Q => 
                           pass_tid_curr_3_port, QN => n_1580);
   pass_tid_curr_reg_4_inst : GTECH_FD1 port map( D => n2699, CP => clk, Q => 
                           pass_tid_curr_4_port, QN => n_1581);
   pass_tid_curr_reg_5_inst : GTECH_FD1 port map( D => n2700, CP => clk, Q => 
                           pass_tid_curr_5_port, QN => n_1582);
   pass_tid_curr_reg_6_inst : GTECH_FD1 port map( D => n2701, CP => clk, Q => 
                           pass_tid_curr_6_port, QN => n_1583);
   pass_tid_curr_reg_7_inst : GTECH_FD1 port map( D => n2702, CP => clk, Q => 
                           pass_tid_curr_7_port, QN => n_1584);
   pass_tid_curr_reg_8_inst : GTECH_FD1 port map( D => n2703, CP => clk, Q => 
                           pass_tid_curr_8_port, QN => n_1585);
   pass_tid_curr_reg_9_inst : GTECH_FD1 port map( D => n2704, CP => clk, Q => 
                           pass_tid_curr_9_port, QN => n_1586);
   pass_tid_curr_reg_10_inst : GTECH_FD1 port map( D => n2705, CP => clk, Q => 
                           pass_tid_curr_10_port, QN => n_1587);
   pass_tid_curr_reg_11_inst : GTECH_FD1 port map( D => n2706, CP => clk, Q => 
                           pass_tid_curr_11_port, QN => n_1588);
   pass_tid_curr_reg_12_inst : GTECH_FD1 port map( D => n2707, CP => clk, Q => 
                           pass_tid_curr_12_port, QN => n_1589);
   pass_tid_curr_reg_13_inst : GTECH_FD1 port map( D => n2708, CP => clk, Q => 
                           pass_tid_curr_13_port, QN => n_1590);
   pass_tid_curr_reg_14_inst : GTECH_FD1 port map( D => n2709, CP => clk, Q => 
                           pass_tid_curr_14_port, QN => n_1591);
   pass_tid_curr_reg_15_inst : GTECH_FD1 port map( D => n2710, CP => clk, Q => 
                           pass_tid_curr_15_port, QN => n_1592);
   pass_tid_curr_reg_16_inst : GTECH_FD1 port map( D => n2711, CP => clk, Q => 
                           pass_tid_curr_16_port, QN => n_1593);
   pass_tid_curr_reg_17_inst : GTECH_FD1 port map( D => n2712, CP => clk, Q => 
                           pass_tid_curr_17_port, QN => n_1594);
   pass_tid_curr_reg_18_inst : GTECH_FD1 port map( D => n2713, CP => clk, Q => 
                           pass_tid_curr_18_port, QN => n_1595);
   pass_tid_curr_reg_19_inst : GTECH_FD1 port map( D => n2714, CP => clk, Q => 
                           pass_tid_curr_19_port, QN => n_1596);
   pass_tid_curr_reg_20_inst : GTECH_FD1 port map( D => n2715, CP => clk, Q => 
                           pass_tid_curr_20_port, QN => n_1597);
   pass_tid_curr_reg_21_inst : GTECH_FD1 port map( D => n2716, CP => clk, Q => 
                           pass_tid_curr_21_port, QN => n_1598);
   pass_tid_curr_reg_22_inst : GTECH_FD1 port map( D => n2717, CP => clk, Q => 
                           pass_tid_curr_22_port, QN => n_1599);
   pass_tid_curr_reg_23_inst : GTECH_FD1 port map( D => n2718, CP => clk, Q => 
                           pass_tid_curr_23_port, QN => n_1600);
   pass_tid_curr_reg_24_inst : GTECH_FD1 port map( D => n2719, CP => clk, Q => 
                           pass_tid_curr_24_port, QN => n_1601);
   pass_tid_curr_reg_25_inst : GTECH_FD1 port map( D => n2720, CP => clk, Q => 
                           pass_tid_curr_25_port, QN => n_1602);
   pass_tid_curr_reg_26_inst : GTECH_FD1 port map( D => n2721, CP => clk, Q => 
                           pass_tid_curr_26_port, QN => n_1603);
   pass_tid_curr_reg_27_inst : GTECH_FD1 port map( D => n2722, CP => clk, Q => 
                           pass_tid_curr_27_port, QN => n_1604);
   pass_tid_curr_reg_28_inst : GTECH_FD1 port map( D => n2723, CP => clk, Q => 
                           pass_tid_curr_28_port, QN => n_1605);
   pass_tid_curr_reg_29_inst : GTECH_FD1 port map( D => n2724, CP => clk, Q => 
                           pass_tid_curr_29_port, QN => n_1606);
   pass_tid_curr_reg_30_inst : GTECH_FD1 port map( D => n2725, CP => clk, Q => 
                           pass_tid_curr_30_port, QN => n_1607);
   pass_tid_curr_reg_31_inst : GTECH_FD1 port map( D => n2730, CP => clk, Q => 
                           pass_tid_curr_31_port, QN => n_1608);
   tx_src_curr_reg_4_inst : GTECH_FD1 port map( D => n4841, CP => clk, Q => 
                           tx_src_4_port, QN => n_1609);
   tx_src_curr_reg_3_inst : GTECH_FD1 port map( D => n2614, CP => clk, Q => 
                           tx_src_3_port, QN => n_1610);
   tx_src_curr_reg_2_inst : GTECH_FD1 port map( D => n2615, CP => clk, Q => 
                           tx_src_2_port, QN => n_1611);
   tx_src_curr_reg_1_inst : GTECH_FD1 port map( D => n2616, CP => clk, Q => 
                           tx_src_1_port, QN => n_1612);
   tx_src_curr_reg_0_inst : GTECH_FD1 port map( D => n2617, CP => clk, Q => 
                           tx_src_0_port, QN => n_1613);
   tx_dst_curr_reg_4_inst : GTECH_FD1 port map( D => n2618, CP => clk, Q => 
                           tx_dst(4), QN => n2249);
   tx_dst_curr_reg_3_inst : GTECH_FD1 port map( D => n2619, CP => clk, Q => 
                           tx_dst(3), QN => n2247);
   tx_dst_curr_reg_2_inst : GTECH_FD1 port map( D => n2620, CP => clk, Q => 
                           tx_dst(2), QN => n2246);
   tx_dst_curr_reg_1_inst : GTECH_FD1 port map( D => n2621, CP => clk, Q => 
                           tx_dst(1), QN => n2245);
   tx_dst_curr_reg_0_inst : GTECH_FD1 port map( D => n4840, CP => clk, Q => 
                           tx_dst(0), QN => n4778);
   pass_addr_curr_reg_7_inst : GTECH_FD1 port map( D => n2662, CP => clk, Q => 
                           pass_addr_curr_7_port, QN => n_1614);
   pass_addr_curr_reg_6_inst : GTECH_FD1 port map( D => n2661, CP => clk, Q => 
                           pass_addr_curr_6_port, QN => n_1615);
   pass_addr_curr_reg_5_inst : GTECH_FD1 port map( D => n2660, CP => clk, Q => 
                           pass_addr_curr_5_port, QN => n_1616);
   pass_addr_curr_reg_4_inst : GTECH_FD1 port map( D => n2659, CP => clk, Q => 
                           pass_addr_curr_4_port, QN => n_1617);
   pass_addr_curr_reg_3_inst : GTECH_FD1 port map( D => n2658, CP => clk, Q => 
                           pass_addr_curr_3_port, QN => n_1618);
   pass_addr_curr_reg_2_inst : GTECH_FD1 port map( D => n2657, CP => clk, Q => 
                           pass_addr_curr_2_port, QN => n_1619);
   pass_addr_curr_reg_1_inst : GTECH_FD1 port map( D => n2656, CP => clk, Q => 
                           pass_addr_curr_1_port, QN => n_1620);
   pass_addr_curr_reg_11_inst : GTECH_FD1 port map( D => n2654, CP => clk, Q =>
                           pass_addr_curr_11_port, QN => n_1621);
   pass_addr_curr_reg_10_inst : GTECH_FD1 port map( D => n2653, CP => clk, Q =>
                           pass_addr_curr_10_port, QN => n_1622);
   pass_addr_curr_reg_9_inst : GTECH_FD1 port map( D => n2652, CP => clk, Q => 
                           pass_addr_curr_9_port, QN => n_1623);
   pass_addr_curr_reg_8_inst : GTECH_FD1 port map( D => n2651, CP => clk, Q => 
                           pass_addr_curr_8_port, QN => n_1624);
   pass_addr_curr_reg_14_inst : GTECH_FD1 port map( D => n2650, CP => clk, Q =>
                           pass_addr_curr_14_port, QN => n_1625);
   pass_addr_curr_reg_13_inst : GTECH_FD1 port map( D => n2649, CP => clk, Q =>
                           pass_addr_curr_13_port, QN => n_1626);
   pass_addr_curr_reg_12_inst : GTECH_FD1 port map( D => n2648, CP => clk, Q =>
                           pass_addr_curr_12_port, QN => n_1627);
   pass_addr_curr_reg_15_inst : GTECH_FD1 port map( D => n2647, CP => clk, Q =>
                           pass_addr_curr_15_port, QN => n_1628);
   pass_addr_curr_reg_31_inst : GTECH_FD1 port map( D => n2646, CP => clk, Q =>
                           pass_addr_curr_31_port, QN => n_1629);
   pass_addr_curr_reg_30_inst : GTECH_FD1 port map( D => n2645, CP => clk, Q =>
                           pass_addr_curr_30_port, QN => n_1630);
   pass_addr_curr_reg_29_inst : GTECH_FD1 port map( D => n2644, CP => clk, Q =>
                           pass_addr_curr_29_port, QN => n_1631);
   pass_addr_curr_reg_28_inst : GTECH_FD1 port map( D => n2643, CP => clk, Q =>
                           pass_addr_curr_28_port, QN => n_1632);
   pass_addr_curr_reg_27_inst : GTECH_FD1 port map( D => n2642, CP => clk, Q =>
                           pass_addr_curr_27_port, QN => n_1633);
   pass_addr_curr_reg_26_inst : GTECH_FD1 port map( D => n2641, CP => clk, Q =>
                           pass_addr_curr_26_port, QN => n_1634);
   pass_addr_curr_reg_25_inst : GTECH_FD1 port map( D => n2640, CP => clk, Q =>
                           pass_addr_curr_25_port, QN => n_1635);
   pass_addr_curr_reg_24_inst : GTECH_FD1 port map( D => n2639, CP => clk, Q =>
                           pass_addr_curr_24_port, QN => n_1636);
   pass_addr_curr_reg_23_inst : GTECH_FD1 port map( D => n2638, CP => clk, Q =>
                           pass_addr_curr_23_port, QN => n_1637);
   pass_addr_curr_reg_22_inst : GTECH_FD1 port map( D => n2637, CP => clk, Q =>
                           pass_addr_curr_22_port, QN => n_1638);
   pass_addr_curr_reg_21_inst : GTECH_FD1 port map( D => n2636, CP => clk, Q =>
                           pass_addr_curr_21_port, QN => n_1639);
   pass_addr_curr_reg_20_inst : GTECH_FD1 port map( D => n2635, CP => clk, Q =>
                           pass_addr_curr_20_port, QN => n_1640);
   pass_addr_curr_reg_19_inst : GTECH_FD1 port map( D => n2634, CP => clk, Q =>
                           pass_addr_curr_19_port, QN => n_1641);
   pass_addr_curr_reg_18_inst : GTECH_FD1 port map( D => n2633, CP => clk, Q =>
                           pass_addr_curr_18_port, QN => n_1642);
   pass_addr_curr_reg_17_inst : GTECH_FD1 port map( D => n2632, CP => clk, Q =>
                           pass_addr_curr_17_port, QN => n_1643);
   pass_addr_curr_reg_16_inst : GTECH_FD1 port map( D => n2631, CP => clk, Q =>
                           pass_addr_curr_16_port, QN => n_1644);
   mem_rd_len_counter_curr_reg_6_inst : GTECH_FD1 port map( D => n4848, CP => 
                           clk, Q => mem_rd_len_counter_curr_6_port, QN => 
                           n2292_port);
   mem_rd_len_counter_curr_reg_1_inst : GTECH_FD1 port map( D => n4843, CP => 
                           clk, Q => mem_rd_len_counter_curr_1_port, QN => 
                           n2287_port);
   mem_rd_len_counter_curr_reg_2_inst : GTECH_FD1 port map( D => n4844, CP => 
                           clk, Q => mem_rd_len_counter_curr_2_port, QN => 
                           n2288_port);
   mem_rd_len_counter_curr_reg_3_inst : GTECH_FD1 port map( D => n4845, CP => 
                           clk, Q => mem_rd_len_counter_curr_3_port, QN => 
                           n2289_port);
   mem_rd_len_counter_curr_reg_4_inst : GTECH_FD1 port map( D => n4846, CP => 
                           clk, Q => mem_rd_len_counter_curr_4_port, QN => 
                           n2290_port);
   mem_rd_len_counter_curr_reg_5_inst : GTECH_FD1 port map( D => n4847, CP => 
                           clk, Q => mem_rd_len_counter_curr_5_port, QN => 
                           n2291_port);
   tmp_addr_curr_reg_26_inst : GTECH_FD1 port map( D => n2382, CP => clk, Q => 
                           tmp_addr_curr_26_port, QN => n_1645);
   tmp_addr_curr_reg_25_inst : GTECH_FD1 port map( D => n2383, CP => clk, Q => 
                           tmp_addr_curr_25_port, QN => n_1646);
   tmp_addr_curr_reg_24_inst : GTECH_FD1 port map( D => n2384, CP => clk, Q => 
                           tmp_addr_curr_24_port, QN => n_1647);
   tmp_addr_curr_reg_0_inst : GTECH_FD1 port map( D => n2408, CP => clk, Q => 
                           tmp_addr_curr_0_port, QN => n_1648);
   tmp_addr_curr_reg_1_inst : GTECH_FD1 port map( D => n2407, CP => clk, Q => 
                           tmp_addr_curr_1_port, QN => n_1649);
   tmp_addr_curr_reg_2_inst : GTECH_FD1 port map( D => n2406, CP => clk, Q => 
                           tmp_addr_curr_2_port, QN => n_1650);
   tmp_addr_curr_reg_3_inst : GTECH_FD1 port map( D => n2405, CP => clk, Q => 
                           tmp_addr_curr_3_port, QN => n_1651);
   tmp_addr_curr_reg_4_inst : GTECH_FD1 port map( D => n2404, CP => clk, Q => 
                           tmp_addr_curr_4_port, QN => n_1652);
   tmp_addr_curr_reg_5_inst : GTECH_FD1 port map( D => n2403, CP => clk, Q => 
                           tmp_addr_curr_5_port, QN => n_1653);
   tmp_addr_curr_reg_6_inst : GTECH_FD1 port map( D => n2402, CP => clk, Q => 
                           tmp_addr_curr_6_port, QN => n_1654);
   tmp_addr_curr_reg_7_inst : GTECH_FD1 port map( D => n2401, CP => clk, Q => 
                           tmp_addr_curr_7_port, QN => n_1655);
   tmp_addr_curr_reg_8_inst : GTECH_FD1 port map( D => n2400, CP => clk, Q => 
                           tmp_addr_curr_8_port, QN => n_1656);
   tmp_addr_curr_reg_9_inst : GTECH_FD1 port map( D => n2399, CP => clk, Q => 
                           tmp_addr_curr_9_port, QN => n_1657);
   tmp_addr_curr_reg_10_inst : GTECH_FD1 port map( D => n2398, CP => clk, Q => 
                           tmp_addr_curr_10_port, QN => n_1658);
   tmp_addr_curr_reg_11_inst : GTECH_FD1 port map( D => n2397, CP => clk, Q => 
                           tmp_addr_curr_11_port, QN => n_1659);
   tmp_addr_curr_reg_12_inst : GTECH_FD1 port map( D => n2396, CP => clk, Q => 
                           tmp_addr_curr_12_port, QN => n_1660);
   tmp_addr_curr_reg_13_inst : GTECH_FD1 port map( D => n2395, CP => clk, Q => 
                           tmp_addr_curr_13_port, QN => n_1661);
   tmp_addr_curr_reg_14_inst : GTECH_FD1 port map( D => n2394, CP => clk, Q => 
                           tmp_addr_curr_14_port, QN => n_1662);
   tmp_addr_curr_reg_15_inst : GTECH_FD1 port map( D => n2393, CP => clk, Q => 
                           tmp_addr_curr_15_port, QN => n_1663);
   tmp_addr_curr_reg_16_inst : GTECH_FD1 port map( D => n2392, CP => clk, Q => 
                           tmp_addr_curr_16_port, QN => n_1664);
   tmp_addr_curr_reg_17_inst : GTECH_FD1 port map( D => n2391, CP => clk, Q => 
                           tmp_addr_curr_17_port, QN => n_1665);
   tmp_addr_curr_reg_18_inst : GTECH_FD1 port map( D => n2390, CP => clk, Q => 
                           tmp_addr_curr_18_port, QN => n_1666);
   tmp_addr_curr_reg_19_inst : GTECH_FD1 port map( D => n2389, CP => clk, Q => 
                           tmp_addr_curr_19_port, QN => n_1667);
   tmp_addr_curr_reg_20_inst : GTECH_FD1 port map( D => n2388, CP => clk, Q => 
                           tmp_addr_curr_20_port, QN => n_1668);
   tmp_addr_curr_reg_21_inst : GTECH_FD1 port map( D => n2387, CP => clk, Q => 
                           tmp_addr_curr_21_port, QN => n_1669);
   tmp_addr_curr_reg_22_inst : GTECH_FD1 port map( D => n2386, CP => clk, Q => 
                           tmp_addr_curr_22_port, QN => n_1670);
   tmp_addr_curr_reg_23_inst : GTECH_FD1 port map( D => n2385, CP => clk, Q => 
                           tmp_addr_curr_23_port, QN => n_1671);
   mem_wr_en_curr_reg : GTECH_FD1 port map( D => n2380, CP => clk, Q => 
                           mem_wr_en_port, QN => n_1672);
   tx_len_curr_reg_0_inst : GTECH_FD1 port map( D => n4850, CP => clk, Q => 
                           tx_len(0), QN => n2294);
   tx_len_curr_reg_1_inst : GTECH_FD1 port map( D => n4851, CP => clk, Q => 
                           tx_len(1), QN => n2295);
   tx_len_curr_reg_2_inst : GTECH_FD1 port map( D => n4852, CP => clk, Q => 
                           tx_len(2), QN => n2296_port);
   tx_len_curr_reg_3_inst : GTECH_FD1 port map( D => n4853, CP => clk, Q => 
                           tx_len(3), QN => n2297);
   tx_len_curr_reg_4_inst : GTECH_FD1 port map( D => n4854, CP => clk, Q => 
                           tx_len(4), QN => n2298);
   tx_len_curr_reg_5_inst : GTECH_FD1 port map( D => n4855, CP => clk, Q => 
                           tx_len(5), QN => n2299);
   tx_len_curr_reg_6_inst : GTECH_FD1 port map( D => n4856, CP => clk, Q => 
                           tx_len(6), QN => n2300);
   tx_len_curr_reg_7_inst : GTECH_FD1 port map( D => n4857, CP => clk, Q => 
                           tx_len(7), QN => n2301_port);
   tx_len_curr_reg_8_inst : GTECH_FD1 port map( D => n4858, CP => clk, Q => 
                           tx_len(8), QN => n2302);
   tx_len_curr_reg_9_inst : GTECH_FD1 port map( D => n4859, CP => clk, Q => 
                           tx_len(9), QN => n2303);
   tx_len_curr_reg_10_inst : GTECH_FD1 port map( D => n4860, CP => clk, Q => 
                           tx_len(10), QN => n2304);
   tx_len_curr_reg_11_inst : GTECH_FD1 port map( D => n4861, CP => clk, Q => 
                           tx_len(11), QN => n2305);
   tx_len_curr_reg_12_inst : GTECH_FD1 port map( D => n4862, CP => clk, Q => 
                           tx_len(12), QN => n2306);
   tx_len_curr_reg_13_inst : GTECH_FD1 port map( D => n4863, CP => clk, Q => 
                           tx_len(13), QN => n2307);
   tx_len_curr_reg_14_inst : GTECH_FD1 port map( D => n4864, CP => clk, Q => 
                           tx_len(14), QN => n2308);
   tx_len_curr_reg_15_inst : GTECH_FD1 port map( D => n4865, CP => clk, Q => 
                           tx_len(15), QN => n2309);
   tx_len_curr_reg_16_inst : GTECH_FD1 port map( D => n4866, CP => clk, Q => 
                           tx_len(16), QN => n2310);
   tx_len_curr_reg_17_inst : GTECH_FD1 port map( D => n4867, CP => clk, Q => 
                           tx_len(17), QN => n2311);
   tx_len_curr_reg_18_inst : GTECH_FD1 port map( D => n4868, CP => clk, Q => 
                           tx_len(18), QN => n2312);
   tx_len_curr_reg_19_inst : GTECH_FD1 port map( D => n4869, CP => clk, Q => 
                           tx_len(19), QN => n2313);
   tx_len_curr_reg_20_inst : GTECH_FD1 port map( D => n4870, CP => clk, Q => 
                           tx_len(20), QN => n2314);
   tx_len_curr_reg_21_inst : GTECH_FD1 port map( D => n4871, CP => clk, Q => 
                           tx_len(21), QN => n2315);
   tx_len_curr_reg_22_inst : GTECH_FD1 port map( D => n4872, CP => clk, Q => 
                           tx_len(22), QN => n2316);
   tx_len_curr_reg_23_inst : GTECH_FD1 port map( D => n4873, CP => clk, Q => 
                           tx_len(23), QN => n2317);
   tx_len_curr_reg_24_inst : GTECH_FD1 port map( D => n4874, CP => clk, Q => 
                           tx_len(24), QN => n2318);
   tx_len_curr_reg_25_inst : GTECH_FD1 port map( D => n4875, CP => clk, Q => 
                           tx_len(25), QN => n2319);
   tx_len_curr_reg_26_inst : GTECH_FD1 port map( D => n4876, CP => clk, Q => 
                           tx_len(26), QN => n2320);
   tx_len_curr_reg_27_inst : GTECH_FD1 port map( D => n4877, CP => clk, Q => 
                           tx_len(27), QN => n2321);
   tx_len_curr_reg_28_inst : GTECH_FD1 port map( D => n4878, CP => clk, Q => 
                           tx_len(28), QN => n2322);
   tx_len_curr_reg_29_inst : GTECH_FD1 port map( D => n4879, CP => clk, Q => 
                           tx_len(29), QN => n2323);
   tx_len_curr_reg_30_inst : GTECH_FD1 port map( D => n4880, CP => clk, Q => 
                           tx_len(30), QN => n2324);
   tx_len_curr_reg_31_inst : GTECH_FD1 port map( D => n4881, CP => clk, Q => 
                           tx_len(31), QN => n2325);
   pass_addr_curr_reg_0_inst : GTECH_FD1 port map( D => n2655, CP => clk, Q => 
                           pass_addr_curr_0_port, QN => n_1673);
   add_719 : mem_C_DW01_inc_0 port map( A(7) => mem_rd_len_counter_curr_7_port,
                           A(6) => mem_rd_len_counter_curr_6_port, A(5) => 
                           mem_rd_len_counter_curr_5_port, A(4) => 
                           mem_rd_len_counter_curr_4_port, A(3) => 
                           mem_rd_len_counter_curr_3_port, A(2) => 
                           mem_rd_len_counter_curr_2_port, A(1) => 
                           mem_rd_len_counter_curr_1_port, A(0) => 
                           mem_rd_len_counter_curr_0_port, SUM(7) => N1700, 
                           SUM(6) => N1699, SUM(5) => N1698, SUM(4) => N1697, 
                           SUM(3) => N1696, SUM(2) => N1695, SUM(1) => N1694, 
                           SUM(0) => N1693);
   sub_713 : mem_C_DW01_sub_0 port map( A(27) => tmp_addr_curr_27_port, A(26) 
                           => tmp_addr_curr_26_port, A(25) => 
                           tmp_addr_curr_25_port, A(24) => 
                           tmp_addr_curr_24_port, A(23) => 
                           tmp_addr_curr_23_port, A(22) => 
                           tmp_addr_curr_22_port, A(21) => 
                           tmp_addr_curr_21_port, A(20) => 
                           tmp_addr_curr_20_port, A(19) => 
                           tmp_addr_curr_19_port, A(18) => 
                           tmp_addr_curr_18_port, A(17) => 
                           tmp_addr_curr_17_port, A(16) => 
                           tmp_addr_curr_16_port, A(15) => 
                           tmp_addr_curr_15_port, A(14) => 
                           tmp_addr_curr_14_port, A(13) => 
                           tmp_addr_curr_13_port, A(12) => 
                           tmp_addr_curr_12_port, A(11) => 
                           tmp_addr_curr_11_port, A(10) => 
                           tmp_addr_curr_10_port, A(9) => tmp_addr_curr_9_port,
                           A(8) => tmp_addr_curr_8_port, A(7) => 
                           tmp_addr_curr_7_port, A(6) => tmp_addr_curr_6_port, 
                           A(5) => tmp_addr_curr_5_port, A(4) => 
                           tmp_addr_curr_4_port, A(3) => tmp_addr_curr_3_port, 
                           A(2) => tmp_addr_curr_2_port, A(1) => 
                           tmp_addr_curr_1_port, A(0) => tmp_addr_curr_0_port, 
                           B(27) => X_Logic0_port, B(26) => X_Logic0_port, 
                           B(25) => X_Logic0_port, B(24) => X_Logic0_port, 
                           B(23) => X_Logic0_port, B(22) => X_Logic0_port, 
                           B(21) => X_Logic0_port, B(20) => X_Logic0_port, 
                           B(19) => X_Logic0_port, B(18) => X_Logic0_port, 
                           B(17) => X_Logic0_port, B(16) => X_Logic0_port, 
                           B(15) => X_Logic0_port, B(14) => X_Logic0_port, 
                           B(13) => X_Logic0_port, B(12) => X_Logic0_port, 
                           B(11) => X_Logic0_port, B(10) => X_Logic0_port, B(9)
                           => X_Logic0_port, B(8) => X_Logic0_port, B(7) => 
                           X_Logic0_port, B(6) => X_Logic0_port, B(5) => 
                           X_Logic0_port, B(4) => X_Logic0_port, B(3) => 
                           X_Logic0_port, B(2) => X_Logic1_port, B(1) => 
                           X_Logic0_port, B(0) => X_Logic0_port, CI => n4, 
                           DIFF(27) => N1692, DIFF(26) => N1691, DIFF(25) => 
                           N1690, DIFF(24) => N1689, DIFF(23) => N1688, 
                           DIFF(22) => N1687, DIFF(21) => N1686, DIFF(20) => 
                           N1685, DIFF(19) => N1684, DIFF(18) => N1683, 
                           DIFF(17) => N1682, DIFF(16) => N1681, DIFF(15) => 
                           N1680, DIFF(14) => N1679, DIFF(13) => N1678, 
                           DIFF(12) => N1677, DIFF(11) => N1676, DIFF(10) => 
                           N1675, DIFF(9) => N1674, DIFF(8) => N1673, DIFF(7) 
                           => N1672, DIFF(6) => N1671, DIFF(5) => N1670, 
                           DIFF(4) => N1669, DIFF(3) => N1668, DIFF(2) => N1667
                           , DIFF(1) => N1666, DIFF(0) => N1665, CO => n_1674);
   lte_gte_711 : mem_C_DW01_cmp2_2 port map( A(32) => X_Logic0_port, A(31) => 
                           N1662, A(30) => N1661, A(29) => N1660, A(28) => 
                           N1659, A(27) => N1658, A(26) => N1657, A(25) => 
                           N1656, A(24) => N1655, A(23) => N1654, A(22) => 
                           N1653, A(21) => N1652, A(20) => N1651, A(19) => 
                           N1650, A(18) => N1649, A(17) => N1648, A(16) => 
                           N1647, A(15) => N1646, A(14) => N1645, A(13) => 
                           N1644, A(12) => N1643, A(11) => N1642, A(10) => 
                           N1641, A(9) => N1640, A(8) => N1639, A(7) => N1638, 
                           A(6) => N1637, A(5) => N1636, A(4) => N1635, A(3) =>
                           N1634, A(2) => N1633, A(1) => N1632, A(0) => N1631, 
                           B(32) => X_Logic0_port, B(31) => X_Logic0_port, 
                           B(30) => X_Logic0_port, B(29) => X_Logic0_port, 
                           B(28) => X_Logic0_port, B(27) => X_Logic0_port, 
                           B(26) => X_Logic0_port, B(25) => X_Logic0_port, 
                           B(24) => X_Logic0_port, B(23) => X_Logic0_port, 
                           B(22) => X_Logic0_port, B(21) => X_Logic0_port, 
                           B(20) => X_Logic0_port, B(19) => X_Logic0_port, 
                           B(18) => X_Logic0_port, B(17) => X_Logic0_port, 
                           B(16) => X_Logic0_port, B(15) => X_Logic0_port, 
                           B(14) => X_Logic0_port, B(13) => X_Logic0_port, 
                           B(12) => X_Logic0_port, B(11) => X_Logic0_port, 
                           B(10) => X_Logic0_port, B(9) => X_Logic0_port, B(8) 
                           => X_Logic0_port, B(7) => 
                           mem_rd_len_counter_curr_7_port, B(6) => 
                           mem_rd_len_counter_curr_6_port, B(5) => 
                           mem_rd_len_counter_curr_5_port, B(4) => 
                           mem_rd_len_counter_curr_4_port, B(3) => 
                           mem_rd_len_counter_curr_3_port, B(2) => 
                           mem_rd_len_counter_curr_2_port, B(1) => 
                           mem_rd_len_counter_curr_1_port, B(0) => 
                           mem_rd_len_counter_curr_0_port, LEQ => n5, TC => n5,
                           LT_LE => N1663, GE_GT => n_1675);
   sub_711 : mem_C_DW01_dec_0 port map( A(31) => mem_len_curr_31_port, A(30) =>
                           mem_len_curr_30_port, A(29) => mem_len_curr_29_port,
                           A(28) => mem_len_curr_28_port, A(27) => 
                           mem_len_curr_27_port, A(26) => mem_len_curr_26_port,
                           A(25) => mem_len_curr_25_port, A(24) => 
                           mem_len_curr_24_port, A(23) => mem_len_curr_23_port,
                           A(22) => mem_len_curr_22_port, A(21) => 
                           mem_len_curr_21_port, A(20) => mem_len_curr_20_port,
                           A(19) => mem_len_curr_19_port, A(18) => 
                           mem_len_curr_18_port, A(17) => mem_len_curr_17_port,
                           A(16) => mem_len_curr_16_port, A(15) => 
                           mem_len_curr_15_port, A(14) => mem_len_curr_14_port,
                           A(13) => mem_len_curr_13_port, A(12) => 
                           mem_len_curr_12_port, A(11) => mem_len_curr_11_port,
                           A(10) => mem_len_curr_10_port, A(9) => 
                           mem_len_curr_9_port, A(8) => mem_len_curr_8_port, 
                           A(7) => mem_len_curr_7_port, A(6) => 
                           mem_len_curr_6_port, A(5) => mem_len_curr_5_port, 
                           A(4) => mem_len_curr_4_port, A(3) => 
                           mem_len_curr_3_port, A(2) => mem_len_curr_2_port, 
                           A(1) => mem_len_curr_1_port, A(0) => 
                           mem_len_curr_0_port, SUM(31) => N1662, SUM(30) => 
                           N1661, SUM(29) => N1660, SUM(28) => N1659, SUM(27) 
                           => N1658, SUM(26) => N1657, SUM(25) => N1656, 
                           SUM(24) => N1655, SUM(23) => N1654, SUM(22) => N1653
                           , SUM(21) => N1652, SUM(20) => N1651, SUM(19) => 
                           N1650, SUM(18) => N1649, SUM(17) => N1648, SUM(16) 
                           => N1647, SUM(15) => N1646, SUM(14) => N1645, 
                           SUM(13) => N1644, SUM(12) => N1643, SUM(11) => N1642
                           , SUM(10) => N1641, SUM(9) => N1640, SUM(8) => N1639
                           , SUM(7) => N1638, SUM(6) => N1637, SUM(5) => N1636,
                           SUM(4) => N1635, SUM(3) => N1634, SUM(2) => N1633, 
                           SUM(1) => N1632, SUM(0) => N1631);
   add_701 : mem_C_DW01_inc_1 port map( A(7) => mem_rd_len_counter_curr_7_port,
                           A(6) => mem_rd_len_counter_curr_6_port, A(5) => 
                           mem_rd_len_counter_curr_5_port, A(4) => 
                           mem_rd_len_counter_curr_4_port, A(3) => 
                           mem_rd_len_counter_curr_3_port, A(2) => 
                           mem_rd_len_counter_curr_2_port, A(1) => 
                           mem_rd_len_counter_curr_1_port, A(0) => 
                           mem_rd_len_counter_curr_0_port, SUM(7) => N1621, 
                           SUM(6) => N1620, SUM(5) => N1619, SUM(4) => N1618, 
                           SUM(3) => N1617, SUM(2) => N1616, SUM(1) => N1615, 
                           SUM(0) => N1614);
   lte_gte_694 : mem_C_DW01_cmp2_3 port map( A(32) => X_Logic0_port, A(31) => 
                           N1610, A(30) => N1609, A(29) => N1608, A(28) => 
                           N1607, A(27) => N1606, A(26) => N1605, A(25) => 
                           N1604, A(24) => N1603, A(23) => N1602, A(22) => 
                           N1601, A(21) => N1600, A(20) => N1599, A(19) => 
                           N1598, A(18) => N1597, A(17) => N1596, A(16) => 
                           N1595, A(15) => N1594, A(14) => N1593, A(13) => 
                           N1592, A(12) => N1591, A(11) => N1590, A(10) => 
                           N1589, A(9) => N1588, A(8) => N1587, A(7) => N1586, 
                           A(6) => N1585, A(5) => N1584, A(4) => N1583, A(3) =>
                           N1582, A(2) => N1581, A(1) => N1580, A(0) => N1579, 
                           B(32) => X_Logic0_port, B(31) => X_Logic0_port, 
                           B(30) => X_Logic0_port, B(29) => X_Logic0_port, 
                           B(28) => X_Logic0_port, B(27) => X_Logic0_port, 
                           B(26) => X_Logic0_port, B(25) => X_Logic0_port, 
                           B(24) => X_Logic0_port, B(23) => X_Logic0_port, 
                           B(22) => X_Logic0_port, B(21) => X_Logic0_port, 
                           B(20) => X_Logic0_port, B(19) => X_Logic0_port, 
                           B(18) => X_Logic0_port, B(17) => X_Logic0_port, 
                           B(16) => X_Logic0_port, B(15) => X_Logic0_port, 
                           B(14) => X_Logic0_port, B(13) => X_Logic0_port, 
                           B(12) => X_Logic0_port, B(11) => X_Logic0_port, 
                           B(10) => X_Logic0_port, B(9) => X_Logic0_port, B(8) 
                           => X_Logic0_port, B(7) => 
                           mem_rd_len_counter_curr_7_port, B(6) => 
                           mem_rd_len_counter_curr_6_port, B(5) => 
                           mem_rd_len_counter_curr_5_port, B(4) => 
                           mem_rd_len_counter_curr_4_port, B(3) => 
                           mem_rd_len_counter_curr_3_port, B(2) => 
                           mem_rd_len_counter_curr_2_port, B(1) => 
                           mem_rd_len_counter_curr_1_port, B(0) => 
                           mem_rd_len_counter_curr_0_port, LEQ => n6, TC => n6,
                           LT_LE => N1611, GE_GT => n_1676);
   sub_694 : mem_C_DW01_dec_1 port map( A(31) => pass_num_curr_31_port, A(30) 
                           => pass_num_curr_30_port, A(29) => 
                           pass_num_curr_29_port, A(28) => 
                           pass_num_curr_28_port, A(27) => 
                           pass_num_curr_27_port, A(26) => 
                           pass_num_curr_26_port, A(25) => 
                           pass_num_curr_25_port, A(24) => 
                           pass_num_curr_24_port, A(23) => 
                           pass_num_curr_23_port, A(22) => 
                           pass_num_curr_22_port, A(21) => 
                           pass_num_curr_21_port, A(20) => 
                           pass_num_curr_20_port, A(19) => 
                           pass_num_curr_19_port, A(18) => 
                           pass_num_curr_18_port, A(17) => 
                           pass_num_curr_17_port, A(16) => 
                           pass_num_curr_16_port, A(15) => 
                           pass_num_curr_15_port, A(14) => 
                           pass_num_curr_14_port, A(13) => 
                           pass_num_curr_13_port, A(12) => 
                           pass_num_curr_12_port, A(11) => 
                           pass_num_curr_11_port, A(10) => 
                           pass_num_curr_10_port, A(9) => pass_num_curr_9_port,
                           A(8) => pass_num_curr_8_port, A(7) => 
                           pass_num_curr_7_port, A(6) => pass_num_curr_6_port, 
                           A(5) => pass_num_curr_5_port, A(4) => 
                           pass_num_curr_4_port, A(3) => pass_num_curr_3_port, 
                           A(2) => pass_num_curr_2_port, A(1) => 
                           pass_num_curr_1_port, A(0) => pass_num_curr_0_port, 
                           SUM(31) => N1610, SUM(30) => N1609, SUM(29) => N1608
                           , SUM(28) => N1607, SUM(27) => N1606, SUM(26) => 
                           N1605, SUM(25) => N1604, SUM(24) => N1603, SUM(23) 
                           => N1602, SUM(22) => N1601, SUM(21) => N1600, 
                           SUM(20) => N1599, SUM(19) => N1598, SUM(18) => N1597
                           , SUM(17) => N1596, SUM(16) => N1595, SUM(15) => 
                           N1594, SUM(14) => N1593, SUM(13) => N1592, SUM(12) 
                           => N1591, SUM(11) => N1590, SUM(10) => N1589, SUM(9)
                           => N1588, SUM(8) => N1587, SUM(7) => N1586, SUM(6) 
                           => N1585, SUM(5) => N1584, SUM(4) => N1583, SUM(3) 
                           => N1582, SUM(2) => N1581, SUM(1) => N1580, SUM(0) 
                           => N1579);
   add_686_aco : mem_C_DW01_add_0 port map( A(27) => tmp_addr_curr_27_port, 
                           A(26) => tmp_addr_curr_26_port, A(25) => 
                           tmp_addr_curr_25_port, A(24) => 
                           tmp_addr_curr_24_port, A(23) => 
                           tmp_addr_curr_23_port, A(22) => 
                           tmp_addr_curr_22_port, A(21) => 
                           tmp_addr_curr_21_port, A(20) => 
                           tmp_addr_curr_20_port, A(19) => 
                           tmp_addr_curr_19_port, A(18) => 
                           tmp_addr_curr_18_port, A(17) => 
                           tmp_addr_curr_17_port, A(16) => 
                           tmp_addr_curr_16_port, A(15) => 
                           tmp_addr_curr_15_port, A(14) => 
                           tmp_addr_curr_14_port, A(13) => 
                           tmp_addr_curr_13_port, A(12) => 
                           tmp_addr_curr_12_port, A(11) => 
                           tmp_addr_curr_11_port, A(10) => 
                           tmp_addr_curr_10_port, A(9) => tmp_addr_curr_9_port,
                           A(8) => tmp_addr_curr_8_port, A(7) => 
                           tmp_addr_curr_7_port, A(6) => tmp_addr_curr_6_port, 
                           A(5) => tmp_addr_curr_5_port, A(4) => 
                           tmp_addr_curr_4_port, A(3) => tmp_addr_curr_3_port, 
                           A(2) => tmp_addr_curr_2_port, A(1) => 
                           tmp_addr_curr_1_port, A(0) => tmp_addr_curr_0_port, 
                           B(27) => X_Logic0_port, B(26) => X_Logic0_port, 
                           B(25) => X_Logic0_port, B(24) => X_Logic0_port, 
                           B(23) => X_Logic0_port, B(22) => X_Logic0_port, 
                           B(21) => X_Logic0_port, B(20) => X_Logic0_port, 
                           B(19) => X_Logic0_port, B(18) => X_Logic0_port, 
                           B(17) => X_Logic0_port, B(16) => X_Logic0_port, 
                           B(15) => X_Logic0_port, B(14) => X_Logic0_port, 
                           B(13) => X_Logic0_port, B(12) => X_Logic0_port, 
                           B(11) => X_Logic0_port, B(10) => X_Logic0_port, B(9)
                           => X_Logic0_port, B(8) => X_Logic0_port, B(7) => 
                           X_Logic0_port, B(6) => X_Logic0_port, B(5) => 
                           X_Logic0_port, B(4) => X_Logic0_port, B(3) => 
                           X_Logic0_port, B(2) => n2369, B(1) => X_Logic0_port,
                           B(0) => X_Logic0_port, CI => n7, SUM(27) => N1577, 
                           SUM(26) => N1576, SUM(25) => N1575, SUM(24) => N1574
                           , SUM(23) => N1573, SUM(22) => N1572, SUM(21) => 
                           N1571, SUM(20) => N1570, SUM(19) => N1569, SUM(18) 
                           => N1568, SUM(17) => N1567, SUM(16) => N1566, 
                           SUM(15) => N1565, SUM(14) => N1564, SUM(13) => N1563
                           , SUM(12) => N1562, SUM(11) => N1561, SUM(10) => 
                           N1560, SUM(9) => N1559, SUM(8) => N1558, SUM(7) => 
                           N1557, SUM(6) => N1556, SUM(5) => N1555, SUM(4) => 
                           N1554, SUM(3) => N1553, SUM(2) => N1552, SUM(1) => 
                           N1551, SUM(0) => N1550, CO => n_1677);
   eq_682 : mem_C_DW01_cmp6_0 port map( A(32) => X_Logic0_port, A(31) => 
                           X_Logic0_port, A(30) => X_Logic0_port, A(29) => 
                           X_Logic0_port, A(28) => X_Logic0_port, A(27) => 
                           X_Logic0_port, A(26) => X_Logic0_port, A(25) => 
                           X_Logic0_port, A(24) => X_Logic0_port, A(23) => 
                           X_Logic0_port, A(22) => X_Logic0_port, A(21) => 
                           X_Logic0_port, A(20) => X_Logic0_port, A(19) => 
                           X_Logic0_port, A(18) => X_Logic0_port, A(17) => 
                           X_Logic0_port, A(16) => X_Logic0_port, A(15) => 
                           X_Logic0_port, A(14) => X_Logic0_port, A(13) => 
                           X_Logic0_port, A(12) => X_Logic0_port, A(11) => 
                           X_Logic0_port, A(10) => X_Logic0_port, A(9) => 
                           X_Logic0_port, A(8) => X_Logic0_port, A(7) => 
                           mem_rd_len_counter_curr_7_port, A(6) => 
                           mem_rd_len_counter_curr_6_port, A(5) => 
                           mem_rd_len_counter_curr_5_port, A(4) => 
                           mem_rd_len_counter_curr_4_port, A(3) => 
                           mem_rd_len_counter_curr_3_port, A(2) => 
                           mem_rd_len_counter_curr_2_port, A(1) => 
                           mem_rd_len_counter_curr_1_port, A(0) => 
                           mem_rd_len_counter_curr_0_port, B(32) => 
                           X_Logic0_port, B(31) => N1546, B(30) => N1545, B(29)
                           => N1544, B(28) => N1543, B(27) => N1542, B(26) => 
                           N1541, B(25) => N1540, B(24) => N1539, B(23) => 
                           N1538, B(22) => N1537, B(21) => N1536, B(20) => 
                           N1535, B(19) => N1534, B(18) => N1533, B(17) => 
                           N1532, B(16) => N1531, B(15) => N1530, B(14) => 
                           N1529, B(13) => N1528, B(12) => N1527, B(11) => 
                           N1526, B(10) => N1525, B(9) => N1524, B(8) => N1523,
                           B(7) => N1522, B(6) => N1521, B(5) => N1520, B(4) =>
                           N1519, B(3) => N1518, B(2) => N1517, B(1) => N1516, 
                           B(0) => N1515, TC => n8, LT => n_1678, GT => n_1679,
                           EQ => N1547, LE => n_1680, GE => n_1681, NE => 
                           n_1682);
   sub_682 : mem_C_DW01_sub_1 port map( A(31) => mem_len_curr_31_port, A(30) =>
                           mem_len_curr_30_port, A(29) => mem_len_curr_29_port,
                           A(28) => mem_len_curr_28_port, A(27) => 
                           mem_len_curr_27_port, A(26) => mem_len_curr_26_port,
                           A(25) => mem_len_curr_25_port, A(24) => 
                           mem_len_curr_24_port, A(23) => mem_len_curr_23_port,
                           A(22) => mem_len_curr_22_port, A(21) => 
                           mem_len_curr_21_port, A(20) => mem_len_curr_20_port,
                           A(19) => mem_len_curr_19_port, A(18) => 
                           mem_len_curr_18_port, A(17) => mem_len_curr_17_port,
                           A(16) => mem_len_curr_16_port, A(15) => 
                           mem_len_curr_15_port, A(14) => mem_len_curr_14_port,
                           A(13) => mem_len_curr_13_port, A(12) => 
                           mem_len_curr_12_port, A(11) => mem_len_curr_11_port,
                           A(10) => mem_len_curr_10_port, A(9) => 
                           mem_len_curr_9_port, A(8) => mem_len_curr_8_port, 
                           A(7) => mem_len_curr_7_port, A(6) => 
                           mem_len_curr_6_port, A(5) => mem_len_curr_5_port, 
                           A(4) => mem_len_curr_4_port, A(3) => 
                           mem_len_curr_3_port, A(2) => mem_len_curr_2_port, 
                           A(1) => mem_len_curr_1_port, A(0) => 
                           mem_len_curr_0_port, B(31) => X_Logic0_port, B(30) 
                           => X_Logic0_port, B(29) => X_Logic0_port, B(28) => 
                           X_Logic0_port, B(27) => X_Logic0_port, B(26) => 
                           X_Logic0_port, B(25) => X_Logic0_port, B(24) => 
                           X_Logic0_port, B(23) => X_Logic0_port, B(22) => 
                           X_Logic0_port, B(21) => X_Logic0_port, B(20) => 
                           X_Logic0_port, B(19) => X_Logic0_port, B(18) => 
                           X_Logic0_port, B(17) => X_Logic0_port, B(16) => 
                           X_Logic0_port, B(15) => X_Logic0_port, B(14) => 
                           X_Logic0_port, B(13) => X_Logic0_port, B(12) => 
                           X_Logic0_port, B(11) => X_Logic0_port, B(10) => 
                           X_Logic0_port, B(9) => X_Logic0_port, B(8) => 
                           X_Logic0_port, B(7) => X_Logic0_port, B(6) => 
                           X_Logic0_port, B(5) => X_Logic0_port, B(4) => 
                           X_Logic0_port, B(3) => X_Logic0_port, B(2) => 
                           X_Logic0_port, B(1) => X_Logic1_port, B(0) => 
                           X_Logic0_port, CI => n9, DIFF(31) => N1546, DIFF(30)
                           => N1545, DIFF(29) => N1544, DIFF(28) => N1543, 
                           DIFF(27) => N1542, DIFF(26) => N1541, DIFF(25) => 
                           N1540, DIFF(24) => N1539, DIFF(23) => N1538, 
                           DIFF(22) => N1537, DIFF(21) => N1536, DIFF(20) => 
                           N1535, DIFF(19) => N1534, DIFF(18) => N1533, 
                           DIFF(17) => N1532, DIFF(16) => N1531, DIFF(15) => 
                           N1530, DIFF(14) => N1529, DIFF(13) => N1528, 
                           DIFF(12) => N1527, DIFF(11) => N1526, DIFF(10) => 
                           N1525, DIFF(9) => N1524, DIFF(8) => N1523, DIFF(7) 
                           => N1522, DIFF(6) => N1521, DIFF(5) => N1520, 
                           DIFF(4) => N1519, DIFF(3) => N1518, DIFF(2) => N1517
                           , DIFF(1) => N1516, DIFF(0) => N1515, CO => n_1683);
   add_661_aco : mem_C_DW01_add_1 port map( A(27) => tmp_addr_curr_27_port, 
                           A(26) => tmp_addr_curr_26_port, A(25) => 
                           tmp_addr_curr_25_port, A(24) => 
                           tmp_addr_curr_24_port, A(23) => 
                           tmp_addr_curr_23_port, A(22) => 
                           tmp_addr_curr_22_port, A(21) => 
                           tmp_addr_curr_21_port, A(20) => 
                           tmp_addr_curr_20_port, A(19) => 
                           tmp_addr_curr_19_port, A(18) => 
                           tmp_addr_curr_18_port, A(17) => 
                           tmp_addr_curr_17_port, A(16) => 
                           tmp_addr_curr_16_port, A(15) => 
                           tmp_addr_curr_15_port, A(14) => 
                           tmp_addr_curr_14_port, A(13) => 
                           tmp_addr_curr_13_port, A(12) => 
                           tmp_addr_curr_12_port, A(11) => 
                           tmp_addr_curr_11_port, A(10) => 
                           tmp_addr_curr_10_port, A(9) => tmp_addr_curr_9_port,
                           A(8) => tmp_addr_curr_8_port, A(7) => 
                           tmp_addr_curr_7_port, A(6) => tmp_addr_curr_6_port, 
                           A(5) => tmp_addr_curr_5_port, A(4) => 
                           tmp_addr_curr_4_port, A(3) => tmp_addr_curr_3_port, 
                           A(2) => tmp_addr_curr_2_port, A(1) => 
                           tmp_addr_curr_1_port, A(0) => tmp_addr_curr_0_port, 
                           B(27) => X_Logic0_port, B(26) => X_Logic0_port, 
                           B(25) => X_Logic0_port, B(24) => X_Logic0_port, 
                           B(23) => X_Logic0_port, B(22) => X_Logic0_port, 
                           B(21) => X_Logic0_port, B(20) => X_Logic0_port, 
                           B(19) => X_Logic0_port, B(18) => X_Logic0_port, 
                           B(17) => X_Logic0_port, B(16) => X_Logic0_port, 
                           B(15) => X_Logic0_port, B(14) => X_Logic0_port, 
                           B(13) => X_Logic0_port, B(12) => X_Logic0_port, 
                           B(11) => X_Logic0_port, B(10) => X_Logic0_port, B(9)
                           => X_Logic0_port, B(8) => X_Logic0_port, B(7) => 
                           X_Logic0_port, B(6) => X_Logic0_port, B(5) => 
                           X_Logic0_port, B(4) => X_Logic0_port, B(3) => 
                           X_Logic0_port, B(2) => N2296, B(1) => X_Logic0_port,
                           B(0) => X_Logic0_port, CI => n12, SUM(27) => N1437, 
                           SUM(26) => N1436, SUM(25) => N1435, SUM(24) => N1434
                           , SUM(23) => N1433, SUM(22) => N1432, SUM(21) => 
                           N1431, SUM(20) => N1430, SUM(19) => N1429, SUM(18) 
                           => N1428, SUM(17) => N1427, SUM(16) => N1426, 
                           SUM(15) => N1425, SUM(14) => N1424, SUM(13) => N1423
                           , SUM(12) => N1422, SUM(11) => N1421, SUM(10) => 
                           N1420, SUM(9) => N1419, SUM(8) => N1418, SUM(7) => 
                           N1417, SUM(6) => N1416, SUM(5) => N1415, SUM(4) => 
                           N1414, SUM(3) => N1413, SUM(2) => N1412, SUM(1) => 
                           N1411, SUM(0) => N1410, CO => n_1684);
   add_580_aco : mem_C_DW01_add_2 port map( A(31) => N2293, A(30) => N2292, 
                           A(29) => N2291, A(28) => N2290, A(27) => N2289, 
                           A(26) => N2288, A(25) => N2287, A(24) => N2286, 
                           A(23) => N2285, A(22) => N2284, A(21) => N2283, 
                           A(20) => N2282, A(19) => N2281, A(18) => N2280, 
                           A(17) => N2279, A(16) => N2278, A(15) => N2277, 
                           A(14) => N2276, A(13) => N2275, A(12) => N2274, 
                           A(11) => N2273, A(10) => N2272, A(9) => N2271, A(8) 
                           => N2270, A(7) => N2269, A(6) => N2268, A(5) => 
                           N2267, A(4) => N2266, A(3) => N2265, A(2) => N2264, 
                           A(1) => N2263, A(0) => N2262, B(31) => n13, B(30) =>
                           n13, B(29) => n13, B(28) => n13, B(27) => n13, B(26)
                           => n13, B(25) => n13, B(24) => n13, B(23) => n13, 
                           B(22) => n13, B(21) => n13, B(20) => n13, B(19) => 
                           n13, B(18) => n13, B(17) => n13, B(16) => n13, B(15)
                           => n13, B(14) => n13, B(13) => n13, B(12) => n13, 
                           B(11) => n13, B(10) => n13, B(9) => n13, B(8) => n13
                           , B(7) => n13, B(6) => n13, B(5) => n13, B(4) => n13
                           , B(3) => n13, B(2) => n13, B(1) => X_Logic1_port, 
                           B(0) => X_Logic1_port, CI => n13, SUM(31) => N1215, 
                           SUM(30) => N1214, SUM(29) => N1213, SUM(28) => N1212
                           , SUM(27) => N1211, SUM(26) => N1210, SUM(25) => 
                           N1209, SUM(24) => N1208, SUM(23) => N1207, SUM(22) 
                           => N1206, SUM(21) => N1205, SUM(20) => N1204, 
                           SUM(19) => N1203, SUM(18) => N1202, SUM(17) => N1201
                           , SUM(16) => N1200, SUM(15) => N1199, SUM(14) => 
                           N1198, SUM(13) => N1197, SUM(12) => N1196, SUM(11) 
                           => N1195, SUM(10) => N1194, SUM(9) => N1193, SUM(8) 
                           => N1192, SUM(7) => N1191, SUM(6) => N1190, SUM(5) 
                           => N1189, SUM(4) => N1188, SUM(3) => N1187, SUM(2) 
                           => N1186, SUM(1) => N1185, SUM(0) => N1184, CO => 
                           n_1685);
   mult_add_580_aco : mem_C_DW02_mult_0 port map( A(31) => mem_len_curr_31_port
                           , A(30) => mem_len_curr_30_port, A(29) => 
                           mem_len_curr_29_port, A(28) => mem_len_curr_28_port,
                           A(27) => mem_len_curr_27_port, A(26) => 
                           mem_len_curr_26_port, A(25) => mem_len_curr_25_port,
                           A(24) => mem_len_curr_24_port, A(23) => 
                           mem_len_curr_23_port, A(22) => mem_len_curr_22_port,
                           A(21) => mem_len_curr_21_port, A(20) => 
                           mem_len_curr_20_port, A(19) => mem_len_curr_19_port,
                           A(18) => mem_len_curr_18_port, A(17) => 
                           mem_len_curr_17_port, A(16) => mem_len_curr_16_port,
                           A(15) => mem_len_curr_15_port, A(14) => 
                           mem_len_curr_14_port, A(13) => mem_len_curr_13_port,
                           A(12) => mem_len_curr_12_port, A(11) => 
                           mem_len_curr_11_port, A(10) => mem_len_curr_10_port,
                           A(9) => mem_len_curr_9_port, A(8) => 
                           mem_len_curr_8_port, A(7) => mem_len_curr_7_port, 
                           A(6) => mem_len_curr_6_port, A(5) => 
                           mem_len_curr_5_port, A(4) => mem_len_curr_4_port, 
                           A(3) => mem_len_curr_3_port, A(2) => 
                           mem_len_curr_2_port, A(1) => mem_len_curr_1_port, 
                           A(0) => mem_len_curr_0_port, B => N2261, TC => n14, 
                           PRODUCT(32) => n_1686, PRODUCT(31) => N2293, 
                           PRODUCT(30) => N2292, PRODUCT(29) => N2291, 
                           PRODUCT(28) => N2290, PRODUCT(27) => N2289, 
                           PRODUCT(26) => N2288, PRODUCT(25) => N2287, 
                           PRODUCT(24) => N2286, PRODUCT(23) => N2285, 
                           PRODUCT(22) => N2284, PRODUCT(21) => N2283, 
                           PRODUCT(20) => N2282, PRODUCT(19) => N2281, 
                           PRODUCT(18) => N2280, PRODUCT(17) => N2279, 
                           PRODUCT(16) => N2278, PRODUCT(15) => N2277, 
                           PRODUCT(14) => N2276, PRODUCT(13) => N2275, 
                           PRODUCT(12) => N2274, PRODUCT(11) => N2273, 
                           PRODUCT(10) => N2272, PRODUCT(9) => N2271, 
                           PRODUCT(8) => N2270, PRODUCT(7) => N2269, PRODUCT(6)
                           => N2268, PRODUCT(5) => N2267, PRODUCT(4) => N2266, 
                           PRODUCT(3) => N2265, PRODUCT(2) => N2264, PRODUCT(1)
                           => N2263, PRODUCT(0) => N2262);
   add_568 : mem_C_DW01_add_3 port map( A(31) => pass_num_curr_31_port, A(30) 
                           => pass_num_curr_30_port, A(29) => 
                           pass_num_curr_29_port, A(28) => 
                           pass_num_curr_28_port, A(27) => 
                           pass_num_curr_27_port, A(26) => 
                           pass_num_curr_26_port, A(25) => 
                           pass_num_curr_25_port, A(24) => 
                           pass_num_curr_24_port, A(23) => 
                           pass_num_curr_23_port, A(22) => 
                           pass_num_curr_22_port, A(21) => 
                           pass_num_curr_21_port, A(20) => 
                           pass_num_curr_20_port, A(19) => 
                           pass_num_curr_19_port, A(18) => 
                           pass_num_curr_18_port, A(17) => 
                           pass_num_curr_17_port, A(16) => 
                           pass_num_curr_16_port, A(15) => 
                           pass_num_curr_15_port, A(14) => 
                           pass_num_curr_14_port, A(13) => 
                           pass_num_curr_13_port, A(12) => 
                           pass_num_curr_12_port, A(11) => 
                           pass_num_curr_11_port, A(10) => 
                           pass_num_curr_10_port, A(9) => pass_num_curr_9_port,
                           A(8) => pass_num_curr_8_port, A(7) => 
                           pass_num_curr_7_port, A(6) => pass_num_curr_6_port, 
                           A(5) => pass_num_curr_5_port, A(4) => 
                           pass_num_curr_4_port, A(3) => pass_num_curr_3_port, 
                           A(2) => pass_num_curr_2_port, A(1) => 
                           pass_num_curr_1_port, A(0) => pass_num_curr_0_port, 
                           B(31) => X_Logic0_port, B(30) => X_Logic0_port, 
                           B(29) => X_Logic0_port, B(28) => X_Logic0_port, 
                           B(27) => X_Logic0_port, B(26) => X_Logic0_port, 
                           B(25) => X_Logic0_port, B(24) => X_Logic0_port, 
                           B(23) => X_Logic0_port, B(22) => X_Logic0_port, 
                           B(21) => X_Logic0_port, B(20) => X_Logic0_port, 
                           B(19) => X_Logic0_port, B(18) => X_Logic0_port, 
                           B(17) => X_Logic0_port, B(16) => X_Logic0_port, 
                           B(15) => X_Logic0_port, B(14) => X_Logic0_port, 
                           B(13) => X_Logic0_port, B(12) => X_Logic0_port, 
                           B(11) => X_Logic0_port, B(10) => X_Logic0_port, B(9)
                           => X_Logic0_port, B(8) => X_Logic0_port, B(7) => 
                           X_Logic0_port, B(6) => X_Logic0_port, B(5) => 
                           X_Logic0_port, B(4) => X_Logic0_port, B(3) => 
                           X_Logic0_port, B(2) => X_Logic0_port, B(1) => 
                           X_Logic1_port, B(0) => X_Logic1_port, CI => n15, 
                           SUM(31) => N1170, SUM(30) => N1169, SUM(29) => N1168
                           , SUM(28) => N1167, SUM(27) => N1166, SUM(26) => 
                           N1165, SUM(25) => N1164, SUM(24) => N1163, SUM(23) 
                           => N1162, SUM(22) => N1161, SUM(21) => N1160, 
                           SUM(20) => N1159, SUM(19) => N1158, SUM(18) => N1157
                           , SUM(17) => N1156, SUM(16) => N1155, SUM(15) => 
                           N1154, SUM(14) => N1153, SUM(13) => N1152, SUM(12) 
                           => N1151, SUM(11) => N1150, SUM(10) => N1149, SUM(9)
                           => N1148, SUM(8) => N1147, SUM(7) => N1146, SUM(6) 
                           => N1145, SUM(5) => N1144, SUM(4) => N1143, SUM(3) 
                           => N1142, SUM(2) => N1141, SUM(1) => N1140, SUM(0) 
                           => N1139, CO => n_1687);
   add_758_aco : mem_C_DW01_add_4 port map( A(27) => tmp_addr_curr_27_port, 
                           A(26) => tmp_addr_curr_26_port, A(25) => 
                           tmp_addr_curr_25_port, A(24) => 
                           tmp_addr_curr_24_port, A(23) => 
                           tmp_addr_curr_23_port, A(22) => 
                           tmp_addr_curr_22_port, A(21) => 
                           tmp_addr_curr_21_port, A(20) => 
                           tmp_addr_curr_20_port, A(19) => 
                           tmp_addr_curr_19_port, A(18) => 
                           tmp_addr_curr_18_port, A(17) => 
                           tmp_addr_curr_17_port, A(16) => 
                           tmp_addr_curr_16_port, A(15) => 
                           tmp_addr_curr_15_port, A(14) => 
                           tmp_addr_curr_14_port, A(13) => 
                           tmp_addr_curr_13_port, A(12) => 
                           tmp_addr_curr_12_port, A(11) => 
                           tmp_addr_curr_11_port, A(10) => 
                           tmp_addr_curr_10_port, A(9) => tmp_addr_curr_9_port,
                           A(8) => tmp_addr_curr_8_port, A(7) => 
                           tmp_addr_curr_7_port, A(6) => tmp_addr_curr_6_port, 
                           A(5) => tmp_addr_curr_5_port, A(4) => 
                           tmp_addr_curr_4_port, A(3) => tmp_addr_curr_3_port, 
                           A(2) => tmp_addr_curr_2_port, A(1) => 
                           tmp_addr_curr_1_port, A(0) => tmp_addr_curr_0_port, 
                           B(27) => X_Logic0_port, B(26) => X_Logic0_port, 
                           B(25) => X_Logic0_port, B(24) => X_Logic0_port, 
                           B(23) => X_Logic0_port, B(22) => X_Logic0_port, 
                           B(21) => X_Logic0_port, B(20) => X_Logic0_port, 
                           B(19) => X_Logic0_port, B(18) => X_Logic0_port, 
                           B(17) => X_Logic0_port, B(16) => X_Logic0_port, 
                           B(15) => X_Logic0_port, B(14) => X_Logic0_port, 
                           B(13) => X_Logic0_port, B(12) => X_Logic0_port, 
                           B(11) => X_Logic0_port, B(10) => X_Logic0_port, B(9)
                           => X_Logic0_port, B(8) => X_Logic0_port, B(7) => 
                           X_Logic0_port, B(6) => X_Logic0_port, B(5) => 
                           X_Logic0_port, B(4) => X_Logic0_port, B(3) => 
                           X_Logic0_port, B(2) => N2301, B(1) => X_Logic0_port,
                           B(0) => X_Logic0_port, CI => n16, SUM(27) => N1130, 
                           SUM(26) => N1129, SUM(25) => N1128, SUM(24) => N1127
                           , SUM(23) => N1126, SUM(22) => N1125, SUM(21) => 
                           N1124, SUM(20) => N1123, SUM(19) => N1122, SUM(18) 
                           => N1121, SUM(17) => N1120, SUM(16) => N1119, 
                           SUM(15) => N1118, SUM(14) => N1117, SUM(13) => N1116
                           , SUM(12) => N1115, SUM(11) => N1114, SUM(10) => 
                           N1113, SUM(9) => N1112, SUM(8) => N1111, SUM(7) => 
                           N1110, SUM(6) => N1109, SUM(5) => N1108, SUM(4) => 
                           N1107, SUM(3) => N1106, SUM(2) => N1105, SUM(1) => 
                           N1104, SUM(0) => N1103, CO => n_1688);
   lte_gte_752 : mem_C_DW01_cmp2_5 port map( A(32) => X_Logic0_port, A(31) => 
                           N1089, A(30) => N1088, A(29) => N1087, A(28) => 
                           N1086, A(27) => N1085, A(26) => N1084, A(25) => 
                           N1083, A(24) => N1082, A(23) => N1081, A(22) => 
                           N1080, A(21) => N1079, A(20) => N1078, A(19) => 
                           N1077, A(18) => N1076, A(17) => N1075, A(16) => 
                           N1074, A(15) => N1073, A(14) => N1072, A(13) => 
                           N1071, A(12) => N1070, A(11) => N1069, A(10) => 
                           N1068, A(9) => N1067, A(8) => N1066, A(7) => N1065, 
                           A(6) => N1064, A(5) => N1063, A(4) => N1062, A(3) =>
                           N1061, A(2) => N1060, A(1) => N1059, A(0) => N1058, 
                           B(32) => X_Logic0_port, B(31) => X_Logic0_port, 
                           B(30) => X_Logic0_port, B(29) => X_Logic0_port, 
                           B(28) => X_Logic0_port, B(27) => X_Logic0_port, 
                           B(26) => X_Logic0_port, B(25) => X_Logic0_port, 
                           B(24) => X_Logic0_port, B(23) => X_Logic0_port, 
                           B(22) => X_Logic0_port, B(21) => X_Logic0_port, 
                           B(20) => X_Logic0_port, B(19) => X_Logic0_port, 
                           B(18) => X_Logic0_port, B(17) => X_Logic0_port, 
                           B(16) => X_Logic0_port, B(15) => X_Logic0_port, 
                           B(14) => X_Logic0_port, B(13) => X_Logic0_port, 
                           B(12) => X_Logic0_port, B(11) => X_Logic0_port, 
                           B(10) => X_Logic0_port, B(9) => X_Logic0_port, B(8) 
                           => X_Logic0_port, B(7) => wr_counter_curr_7_port, 
                           B(6) => wr_counter_curr_6_port, B(5) => 
                           wr_counter_curr_5_port, B(4) => 
                           wr_counter_curr_4_port, B(3) => 
                           wr_counter_curr_3_port, B(2) => 
                           wr_counter_curr_2_port, B(1) => 
                           wr_counter_curr_1_port, B(0) => 
                           wr_counter_curr_0_port, LEQ => n17, TC => n17, LT_LE
                           => N1090, GE_GT => n_1689);
   sub_752 : mem_C_DW01_dec_2 port map( A(31) => mem_len_curr_31_port, A(30) =>
                           mem_len_curr_30_port, A(29) => mem_len_curr_29_port,
                           A(28) => mem_len_curr_28_port, A(27) => 
                           mem_len_curr_27_port, A(26) => mem_len_curr_26_port,
                           A(25) => mem_len_curr_25_port, A(24) => 
                           mem_len_curr_24_port, A(23) => mem_len_curr_23_port,
                           A(22) => mem_len_curr_22_port, A(21) => 
                           mem_len_curr_21_port, A(20) => mem_len_curr_20_port,
                           A(19) => mem_len_curr_19_port, A(18) => 
                           mem_len_curr_18_port, A(17) => mem_len_curr_17_port,
                           A(16) => mem_len_curr_16_port, A(15) => 
                           mem_len_curr_15_port, A(14) => mem_len_curr_14_port,
                           A(13) => mem_len_curr_13_port, A(12) => 
                           mem_len_curr_12_port, A(11) => mem_len_curr_11_port,
                           A(10) => mem_len_curr_10_port, A(9) => 
                           mem_len_curr_9_port, A(8) => mem_len_curr_8_port, 
                           A(7) => mem_len_curr_7_port, A(6) => 
                           mem_len_curr_6_port, A(5) => mem_len_curr_5_port, 
                           A(4) => mem_len_curr_4_port, A(3) => 
                           mem_len_curr_3_port, A(2) => mem_len_curr_2_port, 
                           A(1) => mem_len_curr_1_port, A(0) => 
                           mem_len_curr_0_port, SUM(31) => N1089, SUM(30) => 
                           N1088, SUM(29) => N1087, SUM(28) => N1086, SUM(27) 
                           => N1085, SUM(26) => N1084, SUM(25) => N1083, 
                           SUM(24) => N1082, SUM(23) => N1081, SUM(22) => N1080
                           , SUM(21) => N1079, SUM(20) => N1078, SUM(19) => 
                           N1077, SUM(18) => N1076, SUM(17) => N1075, SUM(16) 
                           => N1074, SUM(15) => N1073, SUM(14) => N1072, 
                           SUM(13) => N1071, SUM(12) => N1070, SUM(11) => N1069
                           , SUM(10) => N1068, SUM(9) => N1067, SUM(8) => N1066
                           , SUM(7) => N1065, SUM(6) => N1064, SUM(5) => N1063,
                           SUM(4) => N1062, SUM(3) => N1061, SUM(2) => N1060, 
                           SUM(1) => N1059, SUM(0) => N1058);
   lte_gte_748 : mem_C_DW01_cmp2_6 port map( A(32) => X_Logic0_port, A(31) => 
                           N1049, A(30) => N1048, A(29) => N1047, A(28) => 
                           N1046, A(27) => N1045, A(26) => N1044, A(25) => 
                           N1043, A(24) => N1042, A(23) => N1041, A(22) => 
                           N1040, A(21) => N1039, A(20) => N1038, A(19) => 
                           N1037, A(18) => N1036, A(17) => N1035, A(16) => 
                           N1034, A(15) => N1033, A(14) => N1032, A(13) => 
                           N1031, A(12) => N1030, A(11) => N1029, A(10) => 
                           N1028, A(9) => N1027, A(8) => N1026, A(7) => N1025, 
                           A(6) => N1024, A(5) => N1023, A(4) => N1022, A(3) =>
                           N1021, A(2) => N1020, A(1) => N1019, A(0) => N1018, 
                           B(32) => X_Logic0_port, B(31) => X_Logic0_port, 
                           B(30) => X_Logic0_port, B(29) => X_Logic0_port, 
                           B(28) => X_Logic0_port, B(27) => X_Logic0_port, 
                           B(26) => X_Logic0_port, B(25) => X_Logic0_port, 
                           B(24) => X_Logic0_port, B(23) => X_Logic0_port, 
                           B(22) => X_Logic0_port, B(21) => X_Logic0_port, 
                           B(20) => X_Logic0_port, B(19) => X_Logic0_port, 
                           B(18) => X_Logic0_port, B(17) => X_Logic0_port, 
                           B(16) => X_Logic0_port, B(15) => X_Logic0_port, 
                           B(14) => X_Logic0_port, B(13) => X_Logic0_port, 
                           B(12) => X_Logic0_port, B(11) => X_Logic0_port, 
                           B(10) => X_Logic0_port, B(9) => X_Logic0_port, B(8) 
                           => X_Logic0_port, B(7) => wr_counter_curr_7_port, 
                           B(6) => wr_counter_curr_6_port, B(5) => 
                           wr_counter_curr_5_port, B(4) => 
                           wr_counter_curr_4_port, B(3) => 
                           wr_counter_curr_3_port, B(2) => 
                           wr_counter_curr_2_port, B(1) => 
                           wr_counter_curr_1_port, B(0) => 
                           wr_counter_curr_0_port, LEQ => n18, TC => n18, LT_LE
                           => N1050, GE_GT => n_1690);
   sub_748 : mem_C_DW01_dec_3 port map( A(31) => pass_num_curr_31_port, A(30) 
                           => pass_num_curr_30_port, A(29) => 
                           pass_num_curr_29_port, A(28) => 
                           pass_num_curr_28_port, A(27) => 
                           pass_num_curr_27_port, A(26) => 
                           pass_num_curr_26_port, A(25) => 
                           pass_num_curr_25_port, A(24) => 
                           pass_num_curr_24_port, A(23) => 
                           pass_num_curr_23_port, A(22) => 
                           pass_num_curr_22_port, A(21) => 
                           pass_num_curr_21_port, A(20) => 
                           pass_num_curr_20_port, A(19) => 
                           pass_num_curr_19_port, A(18) => 
                           pass_num_curr_18_port, A(17) => 
                           pass_num_curr_17_port, A(16) => 
                           pass_num_curr_16_port, A(15) => 
                           pass_num_curr_15_port, A(14) => 
                           pass_num_curr_14_port, A(13) => 
                           pass_num_curr_13_port, A(12) => 
                           pass_num_curr_12_port, A(11) => 
                           pass_num_curr_11_port, A(10) => 
                           pass_num_curr_10_port, A(9) => pass_num_curr_9_port,
                           A(8) => pass_num_curr_8_port, A(7) => 
                           pass_num_curr_7_port, A(6) => pass_num_curr_6_port, 
                           A(5) => pass_num_curr_5_port, A(4) => 
                           pass_num_curr_4_port, A(3) => pass_num_curr_3_port, 
                           A(2) => pass_num_curr_2_port, A(1) => 
                           pass_num_curr_1_port, A(0) => pass_num_curr_0_port, 
                           SUM(31) => N1049, SUM(30) => N1048, SUM(29) => N1047
                           , SUM(28) => N1046, SUM(27) => N1045, SUM(26) => 
                           N1044, SUM(25) => N1043, SUM(24) => N1042, SUM(23) 
                           => N1041, SUM(22) => N1040, SUM(21) => N1039, 
                           SUM(20) => N1038, SUM(19) => N1037, SUM(18) => N1036
                           , SUM(17) => N1035, SUM(16) => N1034, SUM(15) => 
                           N1033, SUM(14) => N1032, SUM(13) => N1031, SUM(12) 
                           => N1030, SUM(11) => N1029, SUM(10) => N1028, SUM(9)
                           => N1027, SUM(8) => N1026, SUM(7) => N1025, SUM(6) 
                           => N1024, SUM(5) => N1023, SUM(4) => N1022, SUM(3) 
                           => N1021, SUM(2) => N1020, SUM(1) => N1019, SUM(0) 
                           => N1018);
   add_743 : mem_C_DW01_inc_2 port map( A(7) => wr_counter_curr_7_port, A(6) =>
                           wr_counter_curr_6_port, A(5) => 
                           wr_counter_curr_5_port, A(4) => 
                           wr_counter_curr_4_port, A(3) => 
                           wr_counter_curr_3_port, A(2) => 
                           wr_counter_curr_2_port, A(1) => 
                           wr_counter_curr_1_port, A(0) => 
                           wr_counter_curr_0_port, SUM(7) => N964, SUM(6) => 
                           N963, SUM(5) => N962, SUM(4) => N961, SUM(3) => N960
                           , SUM(2) => N959, SUM(1) => N958, SUM(0) => N957);
   U2656 : GTECH_NAND2 port map( A => n2731, B => n2732, Z => n4840);
   U2657 : GTECH_NAND2 port map( A => rx_src(0), B => n2733, Z => n2732);
   U2658 : GTECH_NOR2 port map( A => n2734, B => n2735, Z => n2731);
   U2659 : GTECH_NOR2 port map( A => n2736, B => n4778, Z => n2735);
   U2660 : GTECH_NOR2 port map( A => n2375, B => n2737, Z => n2734);
   U2661 : GTECH_NOT port map( A => n2738, Z => n4841);
   U2662 : GTECH_NOR2 port map( A => n2739, B => n2740, Z => n2738);
   U2663 : GTECH_NAND2 port map( A => n2741, B => n2742, Z => n2740);
   U2664 : GTECH_NAND2 port map( A => tx_src_4_port, B => n2743, Z => n2742);
   U2665 : GTECH_NAND2 port map( A => rx_dst(4), B => n2733, Z => n2741);
   U2666 : GTECH_NOR2 port map( A => n2744, B => n2745, Z => n2739);
   U2667 : GTECH_NOT port map( A => n2746, Z => n4842);
   U2668 : GTECH_NOR2 port map( A => n2747, B => n2748, Z => n2746);
   U2669 : GTECH_NAND2 port map( A => n2749, B => n2750, Z => n2748);
   U2670 : GTECH_NAND2 port map( A => N1693, B => n2751, Z => n2750);
   U2671 : GTECH_NAND2 port map( A => N1614, B => n2752, Z => n2749);
   U2672 : GTECH_NOR2 port map( A => n2286_port, B => n2753, Z => n2747);
   U2673 : GTECH_NOT port map( A => n2754, Z => n4843);
   U2674 : GTECH_NOR2 port map( A => n2755, B => n2756, Z => n2754);
   U2675 : GTECH_NAND2 port map( A => n2757, B => n2758, Z => n2756);
   U2676 : GTECH_NAND2 port map( A => N1694, B => n2751, Z => n2758);
   U2677 : GTECH_NAND2 port map( A => N1615, B => n2752, Z => n2757);
   U2678 : GTECH_NOR2 port map( A => n2287_port, B => n2753, Z => n2755);
   U2679 : GTECH_NOT port map( A => n2759, Z => n4844);
   U2680 : GTECH_NOR2 port map( A => n2760, B => n2761, Z => n2759);
   U2681 : GTECH_NAND2 port map( A => n2762, B => n2763, Z => n2761);
   U2682 : GTECH_NAND2 port map( A => N1695, B => n2751, Z => n2763);
   U2683 : GTECH_NAND2 port map( A => N1616, B => n2752, Z => n2762);
   U2684 : GTECH_NOR2 port map( A => n2288_port, B => n2753, Z => n2760);
   U2685 : GTECH_NOT port map( A => n2764, Z => n4845);
   U2686 : GTECH_NOR2 port map( A => n2765, B => n2766, Z => n2764);
   U2687 : GTECH_NAND2 port map( A => n2767, B => n2768, Z => n2766);
   U2688 : GTECH_NAND2 port map( A => N1696, B => n2751, Z => n2768);
   U2689 : GTECH_NAND2 port map( A => N1617, B => n2752, Z => n2767);
   U2690 : GTECH_NOR2 port map( A => n2289_port, B => n2753, Z => n2765);
   U2691 : GTECH_NOT port map( A => n2769, Z => n4846);
   U2692 : GTECH_NOR2 port map( A => n2770, B => n2771, Z => n2769);
   U2693 : GTECH_NAND2 port map( A => n2772, B => n2773, Z => n2771);
   U2694 : GTECH_NAND2 port map( A => N1697, B => n2751, Z => n2773);
   U2695 : GTECH_NAND2 port map( A => N1618, B => n2752, Z => n2772);
   U2696 : GTECH_NOR2 port map( A => n2290_port, B => n2753, Z => n2770);
   U2697 : GTECH_NOT port map( A => n2774, Z => n4847);
   U2698 : GTECH_NOR2 port map( A => n2775, B => n2776, Z => n2774);
   U2699 : GTECH_NAND2 port map( A => n2777, B => n2778, Z => n2776);
   U2700 : GTECH_NAND2 port map( A => N1698, B => n2751, Z => n2778);
   U2701 : GTECH_NAND2 port map( A => N1619, B => n2752, Z => n2777);
   U2702 : GTECH_NOR2 port map( A => n2291_port, B => n2753, Z => n2775);
   U2703 : GTECH_NOT port map( A => n2779, Z => n4848);
   U2704 : GTECH_NOR2 port map( A => n2780, B => n2781, Z => n2779);
   U2705 : GTECH_NAND2 port map( A => n2782, B => n2783, Z => n2781);
   U2706 : GTECH_NAND2 port map( A => N1699, B => n2751, Z => n2783);
   U2707 : GTECH_NAND2 port map( A => N1620, B => n2752, Z => n2782);
   U2708 : GTECH_NOR2 port map( A => n2292_port, B => n2753, Z => n2780);
   U2709 : GTECH_NOT port map( A => n2784, Z => n4849);
   U2710 : GTECH_NOR2 port map( A => n2785, B => n2786, Z => n2784);
   U2711 : GTECH_NAND2 port map( A => n2787, B => n2788, Z => n2786);
   U2712 : GTECH_NAND2 port map( A => N1700, B => n2751, Z => n2788);
   U2713 : GTECH_NOT port map( A => n2789, Z => n2751);
   U2714 : GTECH_NAND2 port map( A => n2790, B => n2791, Z => n2789);
   U2715 : GTECH_NOR2 port map( A => pass_thru_mode_curr, B => N1663, Z => 
                           n2791);
   U2716 : GTECH_NOR2 port map( A => n2745, B => n2792, Z => n2790);
   U2717 : GTECH_NAND2 port map( A => N1621, B => n2752, Z => n2787);
   U2718 : GTECH_NOR2 port map( A => n2793, B => n2794, Z => n2752);
   U2719 : GTECH_NAND2 port map( A => n2795, B => reset_b, Z => n2793);
   U2720 : GTECH_NOR2 port map( A => n2293_port, B => n2753, Z => n2785);
   U2721 : GTECH_NOT port map( A => n2796, Z => n2753);
   U2722 : GTECH_NAND2 port map( A => n2797, B => n2798, Z => n2796);
   U2723 : GTECH_NOR2 port map( A => n2799, B => n2800, Z => n2797);
   U2724 : GTECH_NOR2 port map( A => n2801, B => n2745, Z => n2800);
   U2725 : GTECH_NOR2 port map( A => n2802, B => n2803, Z => n2801);
   U2726 : GTECH_NOR2 port map( A => n2804, B => n2792, Z => n2802);
   U2727 : GTECH_NOT port map( A => n2805, Z => n4850);
   U2728 : GTECH_NOR2 port map( A => n2806, B => n2807, Z => n2805);
   U2729 : GTECH_NAND2 port map( A => n2808, B => n2809, Z => n2807);
   U2730 : GTECH_NAND2 port map( A => N1139, B => n2810, Z => n2809);
   U2731 : GTECH_NAND2 port map( A => N1184, B => n2811, Z => n2808);
   U2732 : GTECH_NOR2 port map( A => n2812, B => n2294, Z => n2806);
   U2733 : GTECH_NOT port map( A => n2813, Z => n4851);
   U2734 : GTECH_NOR2 port map( A => n2814, B => n2815, Z => n2813);
   U2735 : GTECH_NAND2 port map( A => n2816, B => n2817, Z => n2815);
   U2736 : GTECH_NAND2 port map( A => N1140, B => n2810, Z => n2817);
   U2737 : GTECH_NAND2 port map( A => N1185, B => n2811, Z => n2816);
   U2738 : GTECH_NOR2 port map( A => n2812, B => n2295, Z => n2814);
   U2739 : GTECH_NOT port map( A => n2818, Z => n4852);
   U2740 : GTECH_NOR2 port map( A => n2819, B => n2820, Z => n2818);
   U2741 : GTECH_NAND2 port map( A => n2821, B => n2822, Z => n2820);
   U2742 : GTECH_NAND2 port map( A => N1141, B => n2810, Z => n2822);
   U2743 : GTECH_NAND2 port map( A => N1186, B => n2811, Z => n2821);
   U2744 : GTECH_NOR2 port map( A => n2812, B => n2296_port, Z => n2819);
   U2745 : GTECH_NOT port map( A => n2823, Z => n4853);
   U2746 : GTECH_NOR2 port map( A => n2824, B => n2825, Z => n2823);
   U2747 : GTECH_NAND2 port map( A => n2826, B => n2827, Z => n2825);
   U2748 : GTECH_NAND2 port map( A => N1142, B => n2810, Z => n2827);
   U2749 : GTECH_NAND2 port map( A => N1187, B => n2811, Z => n2826);
   U2750 : GTECH_NOR2 port map( A => n2812, B => n2297, Z => n2824);
   U2751 : GTECH_NOT port map( A => n2828, Z => n4854);
   U2752 : GTECH_NOR2 port map( A => n2829, B => n2830, Z => n2828);
   U2753 : GTECH_NAND2 port map( A => n2831, B => n2832, Z => n2830);
   U2754 : GTECH_NAND2 port map( A => N1143, B => n2810, Z => n2832);
   U2755 : GTECH_NAND2 port map( A => N1188, B => n2811, Z => n2831);
   U2756 : GTECH_NOR2 port map( A => n2812, B => n2298, Z => n2829);
   U2757 : GTECH_NOT port map( A => n2833, Z => n4855);
   U2758 : GTECH_NOR2 port map( A => n2834, B => n2835, Z => n2833);
   U2759 : GTECH_NAND2 port map( A => n2836, B => n2837, Z => n2835);
   U2760 : GTECH_NAND2 port map( A => N1144, B => n2810, Z => n2837);
   U2761 : GTECH_NAND2 port map( A => N1189, B => n2811, Z => n2836);
   U2762 : GTECH_NOR2 port map( A => n2812, B => n2299, Z => n2834);
   U2763 : GTECH_NOT port map( A => n2838, Z => n4856);
   U2764 : GTECH_NOR2 port map( A => n2839, B => n2840, Z => n2838);
   U2765 : GTECH_NAND2 port map( A => n2841, B => n2842, Z => n2840);
   U2766 : GTECH_NAND2 port map( A => N1145, B => n2810, Z => n2842);
   U2767 : GTECH_NAND2 port map( A => N1190, B => n2811, Z => n2841);
   U2768 : GTECH_NOR2 port map( A => n2812, B => n2300, Z => n2839);
   U2769 : GTECH_NOT port map( A => n2843, Z => n4857);
   U2770 : GTECH_NOR2 port map( A => n2844, B => n2845, Z => n2843);
   U2771 : GTECH_NAND2 port map( A => n2846, B => n2847, Z => n2845);
   U2772 : GTECH_NAND2 port map( A => N1146, B => n2810, Z => n2847);
   U2773 : GTECH_NAND2 port map( A => N1191, B => n2811, Z => n2846);
   U2774 : GTECH_NOR2 port map( A => n2812, B => n2301_port, Z => n2844);
   U2775 : GTECH_NOT port map( A => n2848, Z => n4858);
   U2776 : GTECH_NOR2 port map( A => n2849, B => n2850, Z => n2848);
   U2777 : GTECH_NAND2 port map( A => n2851, B => n2852, Z => n2850);
   U2778 : GTECH_NAND2 port map( A => N1147, B => n2810, Z => n2852);
   U2779 : GTECH_NAND2 port map( A => N1192, B => n2811, Z => n2851);
   U2780 : GTECH_NOR2 port map( A => n2812, B => n2302, Z => n2849);
   U2781 : GTECH_NOT port map( A => n2853, Z => n4859);
   U2782 : GTECH_NOR2 port map( A => n2854, B => n2855, Z => n2853);
   U2783 : GTECH_NAND2 port map( A => n2856, B => n2857, Z => n2855);
   U2784 : GTECH_NAND2 port map( A => N1148, B => n2810, Z => n2857);
   U2785 : GTECH_NAND2 port map( A => N1193, B => n2811, Z => n2856);
   U2786 : GTECH_NOR2 port map( A => n2812, B => n2303, Z => n2854);
   U2787 : GTECH_NOT port map( A => n2858, Z => n4860);
   U2788 : GTECH_NOR2 port map( A => n2859, B => n2860, Z => n2858);
   U2789 : GTECH_NAND2 port map( A => n2861, B => n2862, Z => n2860);
   U2790 : GTECH_NAND2 port map( A => N1149, B => n2810, Z => n2862);
   U2791 : GTECH_NAND2 port map( A => N1194, B => n2811, Z => n2861);
   U2792 : GTECH_NOR2 port map( A => n2812, B => n2304, Z => n2859);
   U2793 : GTECH_NOT port map( A => n2863, Z => n4861);
   U2794 : GTECH_NOR2 port map( A => n2864, B => n2865, Z => n2863);
   U2795 : GTECH_NAND2 port map( A => n2866, B => n2867, Z => n2865);
   U2796 : GTECH_NAND2 port map( A => N1150, B => n2810, Z => n2867);
   U2797 : GTECH_NAND2 port map( A => N1195, B => n2811, Z => n2866);
   U2798 : GTECH_NOR2 port map( A => n2812, B => n2305, Z => n2864);
   U2799 : GTECH_NOT port map( A => n2868, Z => n4862);
   U2800 : GTECH_NOR2 port map( A => n2869, B => n2870, Z => n2868);
   U2801 : GTECH_NAND2 port map( A => n2871, B => n2872, Z => n2870);
   U2802 : GTECH_NAND2 port map( A => N1151, B => n2810, Z => n2872);
   U2803 : GTECH_NAND2 port map( A => N1196, B => n2811, Z => n2871);
   U2804 : GTECH_NOR2 port map( A => n2812, B => n2306, Z => n2869);
   U2805 : GTECH_NOT port map( A => n2873, Z => n4863);
   U2806 : GTECH_NOR2 port map( A => n2874, B => n2875, Z => n2873);
   U2807 : GTECH_NAND2 port map( A => n2876, B => n2877, Z => n2875);
   U2808 : GTECH_NAND2 port map( A => N1152, B => n2810, Z => n2877);
   U2809 : GTECH_NAND2 port map( A => N1197, B => n2811, Z => n2876);
   U2810 : GTECH_NOR2 port map( A => n2812, B => n2307, Z => n2874);
   U2811 : GTECH_NOT port map( A => n2878, Z => n4864);
   U2812 : GTECH_NOR2 port map( A => n2879, B => n2880, Z => n2878);
   U2813 : GTECH_NAND2 port map( A => n2881, B => n2882, Z => n2880);
   U2814 : GTECH_NAND2 port map( A => N1153, B => n2810, Z => n2882);
   U2815 : GTECH_NAND2 port map( A => N1198, B => n2811, Z => n2881);
   U2816 : GTECH_NOR2 port map( A => n2812, B => n2308, Z => n2879);
   U2817 : GTECH_NOT port map( A => n2883, Z => n4865);
   U2818 : GTECH_NOR2 port map( A => n2884, B => n2885, Z => n2883);
   U2819 : GTECH_NAND2 port map( A => n2886, B => n2887, Z => n2885);
   U2820 : GTECH_NAND2 port map( A => N1154, B => n2810, Z => n2887);
   U2821 : GTECH_NAND2 port map( A => N1199, B => n2811, Z => n2886);
   U2822 : GTECH_NOR2 port map( A => n2812, B => n2309, Z => n2884);
   U2823 : GTECH_NOT port map( A => n2888, Z => n4866);
   U2824 : GTECH_NOR2 port map( A => n2889, B => n2890, Z => n2888);
   U2825 : GTECH_NAND2 port map( A => n2891, B => n2892, Z => n2890);
   U2826 : GTECH_NAND2 port map( A => N1155, B => n2810, Z => n2892);
   U2827 : GTECH_NAND2 port map( A => N1200, B => n2811, Z => n2891);
   U2828 : GTECH_NOR2 port map( A => n2812, B => n2310, Z => n2889);
   U2829 : GTECH_NOT port map( A => n2893, Z => n4867);
   U2830 : GTECH_NOR2 port map( A => n2894, B => n2895, Z => n2893);
   U2831 : GTECH_NAND2 port map( A => n2896, B => n2897, Z => n2895);
   U2832 : GTECH_NAND2 port map( A => N1156, B => n2810, Z => n2897);
   U2833 : GTECH_NAND2 port map( A => N1201, B => n2811, Z => n2896);
   U2834 : GTECH_NOR2 port map( A => n2812, B => n2311, Z => n2894);
   U2835 : GTECH_NOT port map( A => n2898, Z => n4868);
   U2836 : GTECH_NOR2 port map( A => n2899, B => n2900, Z => n2898);
   U2837 : GTECH_NAND2 port map( A => n2901, B => n2902, Z => n2900);
   U2838 : GTECH_NAND2 port map( A => N1157, B => n2810, Z => n2902);
   U2839 : GTECH_NAND2 port map( A => N1202, B => n2811, Z => n2901);
   U2840 : GTECH_NOR2 port map( A => n2812, B => n2312, Z => n2899);
   U2841 : GTECH_NOT port map( A => n2903, Z => n4869);
   U2842 : GTECH_NOR2 port map( A => n2904, B => n2905, Z => n2903);
   U2843 : GTECH_NAND2 port map( A => n2906, B => n2907, Z => n2905);
   U2844 : GTECH_NAND2 port map( A => N1158, B => n2810, Z => n2907);
   U2845 : GTECH_NAND2 port map( A => N1203, B => n2811, Z => n2906);
   U2846 : GTECH_NOR2 port map( A => n2812, B => n2313, Z => n2904);
   U2847 : GTECH_NOT port map( A => n2908, Z => n4870);
   U2848 : GTECH_NOR2 port map( A => n2909, B => n2910, Z => n2908);
   U2849 : GTECH_NAND2 port map( A => n2911, B => n2912, Z => n2910);
   U2850 : GTECH_NAND2 port map( A => N1159, B => n2810, Z => n2912);
   U2851 : GTECH_NAND2 port map( A => N1204, B => n2811, Z => n2911);
   U2852 : GTECH_NOR2 port map( A => n2812, B => n2314, Z => n2909);
   U2853 : GTECH_NOT port map( A => n2913, Z => n4871);
   U2854 : GTECH_NOR2 port map( A => n2914, B => n2915, Z => n2913);
   U2855 : GTECH_NAND2 port map( A => n2916, B => n2917, Z => n2915);
   U2856 : GTECH_NAND2 port map( A => N1160, B => n2810, Z => n2917);
   U2857 : GTECH_NAND2 port map( A => N1205, B => n2811, Z => n2916);
   U2858 : GTECH_NOR2 port map( A => n2812, B => n2315, Z => n2914);
   U2859 : GTECH_NOT port map( A => n2918, Z => n4872);
   U2860 : GTECH_NOR2 port map( A => n2919, B => n2920, Z => n2918);
   U2861 : GTECH_NAND2 port map( A => n2921, B => n2922, Z => n2920);
   U2862 : GTECH_NAND2 port map( A => N1161, B => n2810, Z => n2922);
   U2863 : GTECH_NAND2 port map( A => N1206, B => n2811, Z => n2921);
   U2864 : GTECH_NOR2 port map( A => n2812, B => n2316, Z => n2919);
   U2865 : GTECH_NOT port map( A => n2923, Z => n4873);
   U2866 : GTECH_NOR2 port map( A => n2924, B => n2925, Z => n2923);
   U2867 : GTECH_NAND2 port map( A => n2926, B => n2927, Z => n2925);
   U2868 : GTECH_NAND2 port map( A => N1162, B => n2810, Z => n2927);
   U2869 : GTECH_NAND2 port map( A => N1207, B => n2811, Z => n2926);
   U2870 : GTECH_NOR2 port map( A => n2812, B => n2317, Z => n2924);
   U2871 : GTECH_NOT port map( A => n2928, Z => n4874);
   U2872 : GTECH_NOR2 port map( A => n2929, B => n2930, Z => n2928);
   U2873 : GTECH_NAND2 port map( A => n2931, B => n2932, Z => n2930);
   U2874 : GTECH_NAND2 port map( A => N1163, B => n2810, Z => n2932);
   U2875 : GTECH_NAND2 port map( A => N1208, B => n2811, Z => n2931);
   U2876 : GTECH_NOR2 port map( A => n2812, B => n2318, Z => n2929);
   U2877 : GTECH_NOT port map( A => n2933, Z => n4875);
   U2878 : GTECH_NOR2 port map( A => n2934, B => n2935, Z => n2933);
   U2879 : GTECH_NAND2 port map( A => n2936, B => n2937, Z => n2935);
   U2880 : GTECH_NAND2 port map( A => N1164, B => n2810, Z => n2937);
   U2881 : GTECH_NAND2 port map( A => N1209, B => n2811, Z => n2936);
   U2882 : GTECH_NOR2 port map( A => n2812, B => n2319, Z => n2934);
   U2883 : GTECH_NOT port map( A => n2938, Z => n4876);
   U2884 : GTECH_NOR2 port map( A => n2939, B => n2940, Z => n2938);
   U2885 : GTECH_NAND2 port map( A => n2941, B => n2942, Z => n2940);
   U2886 : GTECH_NAND2 port map( A => N1165, B => n2810, Z => n2942);
   U2887 : GTECH_NAND2 port map( A => N1210, B => n2811, Z => n2941);
   U2888 : GTECH_NOR2 port map( A => n2812, B => n2320, Z => n2939);
   U2889 : GTECH_NOT port map( A => n2943, Z => n4877);
   U2890 : GTECH_NOR2 port map( A => n2944, B => n2945, Z => n2943);
   U2891 : GTECH_NAND2 port map( A => n2946, B => n2947, Z => n2945);
   U2892 : GTECH_NAND2 port map( A => N1166, B => n2810, Z => n2947);
   U2893 : GTECH_NAND2 port map( A => N1211, B => n2811, Z => n2946);
   U2894 : GTECH_NOR2 port map( A => n2812, B => n2321, Z => n2944);
   U2895 : GTECH_NOT port map( A => n2948, Z => n4878);
   U2896 : GTECH_NOR2 port map( A => n2949, B => n2950, Z => n2948);
   U2897 : GTECH_NAND2 port map( A => n2951, B => n2952, Z => n2950);
   U2898 : GTECH_NAND2 port map( A => N1167, B => n2810, Z => n2952);
   U2899 : GTECH_NAND2 port map( A => N1212, B => n2811, Z => n2951);
   U2900 : GTECH_NOR2 port map( A => n2812, B => n2322, Z => n2949);
   U2901 : GTECH_NOT port map( A => n2953, Z => n4879);
   U2902 : GTECH_NOR2 port map( A => n2954, B => n2955, Z => n2953);
   U2903 : GTECH_NAND2 port map( A => n2956, B => n2957, Z => n2955);
   U2904 : GTECH_NAND2 port map( A => N1168, B => n2810, Z => n2957);
   U2905 : GTECH_NAND2 port map( A => N1213, B => n2811, Z => n2956);
   U2906 : GTECH_NOR2 port map( A => n2812, B => n2323, Z => n2954);
   U2907 : GTECH_NOT port map( A => n2958, Z => n4880);
   U2908 : GTECH_NOR2 port map( A => n2959, B => n2960, Z => n2958);
   U2909 : GTECH_NAND2 port map( A => n2961, B => n2962, Z => n2960);
   U2910 : GTECH_NAND2 port map( A => N1169, B => n2810, Z => n2962);
   U2911 : GTECH_NAND2 port map( A => N1214, B => n2811, Z => n2961);
   U2912 : GTECH_NOR2 port map( A => n2812, B => n2324, Z => n2959);
   U2913 : GTECH_NOT port map( A => n2963, Z => n4881);
   U2914 : GTECH_NOR2 port map( A => n2964, B => n2965, Z => n2963);
   U2915 : GTECH_NAND2 port map( A => n2966, B => n2967, Z => n2965);
   U2916 : GTECH_NAND2 port map( A => N1170, B => n2810, Z => n2967);
   U2917 : GTECH_NOR2 port map( A => n2968, B => n2969, Z => n2810);
   U2918 : GTECH_NAND2 port map( A => n2812, B => reset_b, Z => n2968);
   U2919 : GTECH_NAND2 port map( A => N1215, B => n2811, Z => n2966);
   U2920 : GTECH_NOR2 port map( A => n2970, B => n2745, Z => n2811);
   U2921 : GTECH_NAND2 port map( A => n2969, B => n2812, Z => n2970);
   U2922 : GTECH_NOT port map( A => n2971, Z => n2969);
   U2923 : GTECH_NOR2 port map( A => n2812, B => n2325, Z => n2964);
   U2924 : GTECH_NAND2 port map( A => reset_b, B => ll_tx_sof_n_port, Z => 
                           n2812);
   U2925 : GTECH_NAND2 port map( A => n2972, B => n2973, Z => n4882);
   U2926 : GTECH_NAND2 port map( A => ll_rx_data(31), B => n2974, Z => n2973);
   U2927 : GTECH_NAND2 port map( A => n2975, B => n2976, Z => n2972);
   U2928 : GTECH_NAND2 port map( A => n2977, B => n2978, Z => n4883);
   U2929 : GTECH_NAND2 port map( A => ll_rx_data(30), B => n2974, Z => n2978);
   U2930 : GTECH_NAND2 port map( A => n2975, B => n2979, Z => n2977);
   U2931 : GTECH_NAND2 port map( A => n2980, B => n2981, Z => n4884);
   U2932 : GTECH_NAND2 port map( A => ll_rx_data(29), B => n2974, Z => n2981);
   U2933 : GTECH_NAND2 port map( A => n2975, B => n2982, Z => n2980);
   U2934 : GTECH_NAND2 port map( A => n2983, B => n2984, Z => n4885);
   U2935 : GTECH_NAND2 port map( A => ll_rx_data(28), B => n2974, Z => n2984);
   U2936 : GTECH_NAND2 port map( A => n2975, B => n2985, Z => n2983);
   U2937 : GTECH_NAND2 port map( A => n2986, B => n2987, Z => n4886);
   U2938 : GTECH_NAND2 port map( A => ll_rx_data(27), B => n2974, Z => n2987);
   U2939 : GTECH_NAND2 port map( A => n2975, B => n2988, Z => n2986);
   U2940 : GTECH_NAND2 port map( A => n2989, B => n2990, Z => n4887);
   U2941 : GTECH_NAND2 port map( A => ll_rx_data(26), B => n2974, Z => n2990);
   U2942 : GTECH_NAND2 port map( A => n2975, B => n2991, Z => n2989);
   U2943 : GTECH_NAND2 port map( A => n2992, B => n2993, Z => n4888);
   U2944 : GTECH_NAND2 port map( A => ll_rx_data(25), B => n2974, Z => n2993);
   U2945 : GTECH_NAND2 port map( A => n2975, B => n2994, Z => n2992);
   U2946 : GTECH_NAND2 port map( A => n2995, B => n2996, Z => n4889);
   U2947 : GTECH_NAND2 port map( A => ll_rx_data(24), B => n2974, Z => n2996);
   U2948 : GTECH_NAND2 port map( A => n2975, B => n2997, Z => n2995);
   U2949 : GTECH_NAND2 port map( A => n2998, B => n2999, Z => n4890);
   U2950 : GTECH_NAND2 port map( A => ll_rx_data(23), B => n2974, Z => n2999);
   U2951 : GTECH_NAND2 port map( A => n2975, B => n3000, Z => n2998);
   U2952 : GTECH_NAND2 port map( A => n3001, B => n3002, Z => n4891);
   U2953 : GTECH_NAND2 port map( A => ll_rx_data(22), B => n2974, Z => n3002);
   U2954 : GTECH_NAND2 port map( A => n2975, B => n3003, Z => n3001);
   U2955 : GTECH_NAND2 port map( A => n3004, B => n3005, Z => n4892);
   U2956 : GTECH_NAND2 port map( A => ll_rx_data(21), B => n2974, Z => n3005);
   U2957 : GTECH_NAND2 port map( A => n2975, B => n3006, Z => n3004);
   U2958 : GTECH_NAND2 port map( A => n3007, B => n3008, Z => n4893);
   U2959 : GTECH_NAND2 port map( A => ll_rx_data(20), B => n2974, Z => n3008);
   U2960 : GTECH_NAND2 port map( A => n2975, B => n3009, Z => n3007);
   U2961 : GTECH_NAND2 port map( A => n3010, B => n3011, Z => n4894);
   U2962 : GTECH_NAND2 port map( A => ll_rx_data(19), B => n2974, Z => n3011);
   U2963 : GTECH_NAND2 port map( A => n2975, B => n3012, Z => n3010);
   U2964 : GTECH_NAND2 port map( A => n3013, B => n3014, Z => n4895);
   U2965 : GTECH_NAND2 port map( A => ll_rx_data(18), B => n2974, Z => n3014);
   U2966 : GTECH_NAND2 port map( A => n2975, B => n3015, Z => n3013);
   U2967 : GTECH_NAND2 port map( A => n3016, B => n3017, Z => n4896);
   U2968 : GTECH_NAND2 port map( A => ll_rx_data(17), B => n2974, Z => n3017);
   U2969 : GTECH_NAND2 port map( A => n2975, B => n3018, Z => n3016);
   U2970 : GTECH_NAND2 port map( A => n3019, B => n3020, Z => n4897);
   U2971 : GTECH_NAND2 port map( A => ll_rx_data(16), B => n2974, Z => n3020);
   U2972 : GTECH_NAND2 port map( A => n2975, B => n3021, Z => n3019);
   U2973 : GTECH_NAND2 port map( A => n3022, B => n3023, Z => n4898);
   U2974 : GTECH_NAND2 port map( A => ll_rx_data(15), B => n2974, Z => n3023);
   U2975 : GTECH_NAND2 port map( A => n2975, B => n3024, Z => n3022);
   U2976 : GTECH_NAND2 port map( A => n3025, B => n3026, Z => n4899);
   U2977 : GTECH_NAND2 port map( A => ll_rx_data(14), B => n2974, Z => n3026);
   U2978 : GTECH_NAND2 port map( A => n2975, B => n3027, Z => n3025);
   U2979 : GTECH_NAND2 port map( A => n3028, B => n3029, Z => n4900);
   U2980 : GTECH_NAND2 port map( A => ll_rx_data(13), B => n2974, Z => n3029);
   U2981 : GTECH_NAND2 port map( A => n2975, B => n3030, Z => n3028);
   U2982 : GTECH_NAND2 port map( A => n3031, B => n3032, Z => n4901);
   U2983 : GTECH_NAND2 port map( A => ll_rx_data(12), B => n2974, Z => n3032);
   U2984 : GTECH_NAND2 port map( A => n2975, B => n3033, Z => n3031);
   U2985 : GTECH_NAND2 port map( A => n3034, B => n3035, Z => n4902);
   U2986 : GTECH_NAND2 port map( A => ll_rx_data(11), B => n2974, Z => n3035);
   U2987 : GTECH_NAND2 port map( A => n2975, B => n3036, Z => n3034);
   U2988 : GTECH_NAND2 port map( A => n3037, B => n3038, Z => n4903);
   U2989 : GTECH_NAND2 port map( A => ll_rx_data(10), B => n2974, Z => n3038);
   U2990 : GTECH_NAND2 port map( A => n2975, B => n3039, Z => n3037);
   U2991 : GTECH_NAND2 port map( A => n3040, B => n3041, Z => n4904);
   U2992 : GTECH_NAND2 port map( A => ll_rx_data(9), B => n2974, Z => n3041);
   U2993 : GTECH_NAND2 port map( A => n2975, B => n3042, Z => n3040);
   U2994 : GTECH_NAND2 port map( A => n3043, B => n3044, Z => n4905);
   U2995 : GTECH_NAND2 port map( A => ll_rx_data(8), B => n2974, Z => n3044);
   U2996 : GTECH_NAND2 port map( A => n2975, B => n3045, Z => n3043);
   U2997 : GTECH_NAND2 port map( A => n3046, B => n3047, Z => n4906);
   U2998 : GTECH_NAND2 port map( A => ll_rx_data(7), B => n2974, Z => n3047);
   U2999 : GTECH_NAND2 port map( A => n2975, B => n3048, Z => n3046);
   U3000 : GTECH_NAND2 port map( A => n3049, B => n3050, Z => n4907);
   U3001 : GTECH_NAND2 port map( A => ll_rx_data(6), B => n2974, Z => n3050);
   U3002 : GTECH_NAND2 port map( A => n2975, B => n3051, Z => n3049);
   U3003 : GTECH_NAND2 port map( A => n3052, B => n3053, Z => n4908);
   U3004 : GTECH_NAND2 port map( A => ll_rx_data(5), B => n2974, Z => n3053);
   U3005 : GTECH_NAND2 port map( A => n2975, B => n3054, Z => n3052);
   U3006 : GTECH_NAND2 port map( A => n3055, B => n3056, Z => n4909);
   U3007 : GTECH_NAND2 port map( A => ll_rx_data(4), B => n2974, Z => n3056);
   U3008 : GTECH_NAND2 port map( A => n2975, B => n3057, Z => n3055);
   U3009 : GTECH_NAND2 port map( A => n3058, B => n3059, Z => n4910);
   U3010 : GTECH_NAND2 port map( A => ll_rx_data(3), B => n2974, Z => n3059);
   U3011 : GTECH_NAND2 port map( A => n2975, B => n3060, Z => n3058);
   U3012 : GTECH_NAND2 port map( A => n3061, B => n3062, Z => n4911);
   U3013 : GTECH_NAND2 port map( A => ll_rx_data(2), B => n2974, Z => n3062);
   U3014 : GTECH_NAND2 port map( A => n2975, B => n3063, Z => n3061);
   U3015 : GTECH_NAND2 port map( A => n3064, B => n3065, Z => n4912);
   U3016 : GTECH_NAND2 port map( A => ll_rx_data(1), B => n2974, Z => n3065);
   U3017 : GTECH_NAND2 port map( A => n2975, B => n3066, Z => n3064);
   U3018 : GTECH_NAND2 port map( A => n3067, B => n3068, Z => n4913);
   U3019 : GTECH_NAND2 port map( A => ll_rx_data(0), B => n2974, Z => n3068);
   U3020 : GTECH_NOR2 port map( A => n2745, B => n2975, Z => n2974);
   U3021 : GTECH_NAND2 port map( A => n2975, B => n3069, Z => n3067);
   U3022 : GTECH_NOR2 port map( A => n2745, B => n3070, Z => n2975);
   U3023 : GTECH_NOT port map( A => n3071, Z => n3070);
   U3024 : GTECH_NAND2 port map( A => n3072, B => n3073, Z => n3071);
   U3025 : GTECH_NAND2 port map( A => n3074, B => n3075, Z => n3073);
   U3026 : GTECH_NAND2 port map( A => n3076, B => n3077, Z => n3074);
   U3027 : GTECH_NOR2 port map( A => sic_rx_fsm_cs_2_port, B => ll_rx_src_rdy_n
                           , Z => n3076);
   U3028 : GTECH_NOR2 port map( A => n3078, B => n3079, Z => n3072);
   U3029 : GTECH_NAND2 port map( A => n3080, B => n3081, Z => n4914);
   U3030 : GTECH_NAND2 port map( A => n3082, B => ll_rx_data(0), Z => n3081);
   U3031 : GTECH_NAND2 port map( A => n4779, B => n3083, Z => n3080);
   U3032 : GTECH_NAND2 port map( A => n3084, B => n3085, Z => n4915);
   U3033 : GTECH_NAND2 port map( A => n3082, B => ll_rx_data(1), Z => n3085);
   U3034 : GTECH_NAND2 port map( A => n4780, B => n3083, Z => n3084);
   U3035 : GTECH_NAND2 port map( A => n3086, B => n3087, Z => n4916);
   U3036 : GTECH_NAND2 port map( A => n3082, B => ll_rx_data(2), Z => n3087);
   U3037 : GTECH_NAND2 port map( A => n4781, B => n3083, Z => n3086);
   U3038 : GTECH_NAND2 port map( A => n3088, B => n3089, Z => n4917);
   U3039 : GTECH_NAND2 port map( A => n3082, B => ll_rx_data(3), Z => n3089);
   U3040 : GTECH_NAND2 port map( A => n4782, B => n3083, Z => n3088);
   U3041 : GTECH_NAND2 port map( A => n3090, B => n3091, Z => n4918);
   U3042 : GTECH_NAND2 port map( A => n3082, B => ll_rx_data(4), Z => n3091);
   U3043 : GTECH_NAND2 port map( A => n4783, B => n3083, Z => n3090);
   U3044 : GTECH_NAND2 port map( A => n3092, B => n3093, Z => n4919);
   U3045 : GTECH_NAND2 port map( A => n3082, B => ll_rx_data(5), Z => n3093);
   U3046 : GTECH_NAND2 port map( A => n4784, B => n3083, Z => n3092);
   U3047 : GTECH_NAND2 port map( A => n3094, B => n3095, Z => n4920);
   U3048 : GTECH_NAND2 port map( A => n3082, B => ll_rx_data(6), Z => n3095);
   U3049 : GTECH_NAND2 port map( A => n4785, B => n3083, Z => n3094);
   U3050 : GTECH_NAND2 port map( A => n3096, B => n3097, Z => n4921);
   U3051 : GTECH_NAND2 port map( A => n3082, B => ll_rx_data(7), Z => n3097);
   U3052 : GTECH_NAND2 port map( A => n4786, B => n3083, Z => n3096);
   U3053 : GTECH_NAND2 port map( A => n3098, B => n3099, Z => n4922);
   U3054 : GTECH_NAND2 port map( A => n3082, B => ll_rx_data(8), Z => n3099);
   U3055 : GTECH_NAND2 port map( A => n4787, B => n3083, Z => n3098);
   U3056 : GTECH_NAND2 port map( A => n3100, B => n3101, Z => n4923);
   U3057 : GTECH_NAND2 port map( A => n3082, B => ll_rx_data(9), Z => n3101);
   U3058 : GTECH_NAND2 port map( A => n4788, B => n3083, Z => n3100);
   U3059 : GTECH_NAND2 port map( A => n3102, B => n3103, Z => n4924);
   U3060 : GTECH_NAND2 port map( A => n3082, B => ll_rx_data(10), Z => n3103);
   U3061 : GTECH_NAND2 port map( A => n4789, B => n3083, Z => n3102);
   U3062 : GTECH_NAND2 port map( A => n3104, B => n3105, Z => n4925);
   U3063 : GTECH_NAND2 port map( A => n3082, B => ll_rx_data(11), Z => n3105);
   U3064 : GTECH_NAND2 port map( A => n4790, B => n3083, Z => n3104);
   U3065 : GTECH_NAND2 port map( A => n3106, B => n3107, Z => n4926);
   U3066 : GTECH_NAND2 port map( A => n3082, B => ll_rx_data(12), Z => n3107);
   U3067 : GTECH_NAND2 port map( A => n4791, B => n3083, Z => n3106);
   U3068 : GTECH_NAND2 port map( A => n3108, B => n3109, Z => n4927);
   U3069 : GTECH_NAND2 port map( A => n3082, B => ll_rx_data(13), Z => n3109);
   U3070 : GTECH_NAND2 port map( A => n4792, B => n3083, Z => n3108);
   U3071 : GTECH_NAND2 port map( A => n3110, B => n3111, Z => n4928);
   U3072 : GTECH_NAND2 port map( A => n3082, B => ll_rx_data(14), Z => n3111);
   U3073 : GTECH_NAND2 port map( A => n4793, B => n3083, Z => n3110);
   U3074 : GTECH_NAND2 port map( A => n3112, B => n3113, Z => n4929);
   U3075 : GTECH_NAND2 port map( A => n3082, B => ll_rx_data(15), Z => n3113);
   U3076 : GTECH_NAND2 port map( A => n4794, B => n3083, Z => n3112);
   U3077 : GTECH_NAND2 port map( A => n3114, B => n3115, Z => n4930);
   U3078 : GTECH_NAND2 port map( A => n3082, B => ll_rx_data(16), Z => n3115);
   U3079 : GTECH_NAND2 port map( A => n4795, B => n3083, Z => n3114);
   U3080 : GTECH_NAND2 port map( A => n3116, B => n3117, Z => n4931);
   U3081 : GTECH_NAND2 port map( A => n3082, B => ll_rx_data(17), Z => n3117);
   U3082 : GTECH_NAND2 port map( A => n4796, B => n3083, Z => n3116);
   U3083 : GTECH_NAND2 port map( A => n3118, B => n3119, Z => n4932);
   U3084 : GTECH_NAND2 port map( A => n3082, B => ll_rx_data(18), Z => n3119);
   U3085 : GTECH_NAND2 port map( A => n4797, B => n3083, Z => n3118);
   U3086 : GTECH_NAND2 port map( A => n3120, B => n3121, Z => n4933);
   U3087 : GTECH_NAND2 port map( A => n3082, B => ll_rx_data(19), Z => n3121);
   U3088 : GTECH_NAND2 port map( A => n4798, B => n3083, Z => n3120);
   U3089 : GTECH_NAND2 port map( A => n3122, B => n3123, Z => n4934);
   U3090 : GTECH_NAND2 port map( A => n3082, B => ll_rx_data(20), Z => n3123);
   U3091 : GTECH_NAND2 port map( A => n4799, B => n3083, Z => n3122);
   U3092 : GTECH_NAND2 port map( A => n3124, B => n3125, Z => n4935);
   U3093 : GTECH_NAND2 port map( A => n3082, B => ll_rx_data(21), Z => n3125);
   U3094 : GTECH_NAND2 port map( A => n4800, B => n3083, Z => n3124);
   U3095 : GTECH_NAND2 port map( A => n3126, B => n3127, Z => n4936);
   U3096 : GTECH_NAND2 port map( A => n3082, B => ll_rx_data(22), Z => n3127);
   U3097 : GTECH_NAND2 port map( A => n4801, B => n3083, Z => n3126);
   U3098 : GTECH_NAND2 port map( A => n3128, B => n3129, Z => n4937);
   U3099 : GTECH_NAND2 port map( A => n3082, B => ll_rx_data(23), Z => n3129);
   U3100 : GTECH_NAND2 port map( A => n4802, B => n3083, Z => n3128);
   U3101 : GTECH_NAND2 port map( A => n3130, B => n3131, Z => n4938);
   U3102 : GTECH_NAND2 port map( A => n3082, B => ll_rx_data(24), Z => n3131);
   U3103 : GTECH_NAND2 port map( A => n4803, B => n3083, Z => n3130);
   U3104 : GTECH_NAND2 port map( A => n3132, B => n3133, Z => n4939);
   U3105 : GTECH_NAND2 port map( A => n3082, B => ll_rx_data(25), Z => n3133);
   U3106 : GTECH_NAND2 port map( A => n4804, B => n3083, Z => n3132);
   U3107 : GTECH_NAND2 port map( A => n3134, B => n3135, Z => n4940);
   U3108 : GTECH_NAND2 port map( A => n3082, B => ll_rx_data(26), Z => n3135);
   U3109 : GTECH_NAND2 port map( A => n4805, B => n3083, Z => n3134);
   U3110 : GTECH_NAND2 port map( A => n3136, B => n3137, Z => n4941);
   U3111 : GTECH_NAND2 port map( A => n3082, B => ll_rx_data(27), Z => n3137);
   U3112 : GTECH_NOR2 port map( A => n3138, B => n3075, Z => n3082);
   U3113 : GTECH_NAND2 port map( A => n3139, B => n3140, Z => n3138);
   U3114 : GTECH_NAND2 port map( A => n4806, B => n3083, Z => n3136);
   U3115 : GTECH_NOR2 port map( A => n2745, B => n3141, Z => n3083);
   U3116 : GTECH_NOR2 port map( A => n3142, B => n3143, Z => n3141);
   U3117 : GTECH_NAND2 port map( A => n3144, B => n3145, Z => n3143);
   U3118 : GTECH_NOT port map( A => n3146, Z => n3142);
   U3119 : GTECH_NOR2 port map( A => n3075, B => n3147, Z => n3146);
   U3120 : GTECH_NAND2 port map( A => n3148, B => n3139, Z => n3147);
   U3121 : GTECH_NAND2 port map( A => n3149, B => n3150, Z => ll_rx_dst_rdy_n);
   U3122 : GTECH_NAND2 port map( A => n3079, B => n3151, Z => n3149);
   U3123 : GTECH_NAND2 port map( A => n3148, B => n3144, Z => n3151);
   U3124 : GTECH_NOT port map( A => n3152, Z => ll_tx_data_be(0));
   U3125 : GTECH_NOR2 port map( A => n3153, B => n3154, Z => n3152);
   U3126 : GTECH_NOR2 port map( A => n2792, B => n2282_port, Z => n3154);
   U3127 : GTECH_NOT port map( A => n3155, Z => ll_tx_data_be(1));
   U3128 : GTECH_NOR2 port map( A => n3153, B => n3156, Z => n3155);
   U3129 : GTECH_NOR2 port map( A => n2792, B => n2283_port, Z => n3156);
   U3130 : GTECH_NOT port map( A => n3157, Z => ll_tx_data_be(2));
   U3131 : GTECH_NOR2 port map( A => n3153, B => n3158, Z => n3157);
   U3132 : GTECH_NOR2 port map( A => n2792, B => n2284_port, Z => n3158);
   U3133 : GTECH_NOT port map( A => n3159, Z => ll_tx_data_be(3));
   U3134 : GTECH_NOR2 port map( A => n3153, B => n3160, Z => n3159);
   U3135 : GTECH_NOR2 port map( A => n2792, B => n2285_port, Z => n3160);
   U3136 : GTECH_NAND2 port map( A => n3161, B => n2794, Z => n3153);
   U3137 : GTECH_NAND2 port map( A => n3162, B => n3163, Z => n2730);
   U3138 : GTECH_NAND2 port map( A => n3164, B => n3165, Z => n3163);
   U3139 : GTECH_NAND2 port map( A => pass_tid_curr_31_port, B => n3166, Z => 
                           n3162);
   U3140 : GTECH_NAND2 port map( A => n3167, B => n3168, Z => n2729);
   U3141 : GTECH_NAND2 port map( A => n3169, B => n3170, Z => n3168);
   U3142 : GTECH_NAND2 port map( A => n3171, B => n3172, Z => n3170);
   U3143 : GTECH_NOR2 port map( A => n3173, B => n3174, Z => n3172);
   U3144 : GTECH_NAND2 port map( A => n3175, B => n3176, Z => n3174);
   U3145 : GTECH_NAND2 port map( A => n3177, B => n3178, Z => n3176);
   U3146 : GTECH_NAND2 port map( A => n3179, B => n3180, Z => n3175);
   U3147 : GTECH_NAND2 port map( A => n3181, B => n3182, Z => n3173);
   U3148 : GTECH_NAND2 port map( A => n3183, B => n3184, Z => n3182);
   U3149 : GTECH_NOR2 port map( A => n3185, B => n3186, Z => n3181);
   U3150 : GTECH_NOR2 port map( A => n3187, B => n3188, Z => n3171);
   U3151 : GTECH_NAND2 port map( A => n3189, B => n3190, Z => n3188);
   U3152 : GTECH_NAND2 port map( A => n3191, B => n3192, Z => n3187);
   U3153 : GTECH_NAND2 port map( A => n3193, B => n3194, Z => n3191);
   U3154 : GTECH_NAND2 port map( A => n3195, B => n4810, Z => n3167);
   U3155 : GTECH_NAND2 port map( A => n3196, B => n3197, Z => n2728);
   U3156 : GTECH_NAND2 port map( A => n3198, B => N1840, Z => n3197);
   U3157 : GTECH_NOR2 port map( A => n3199, B => n3200, Z => n3196);
   U3158 : GTECH_NOR2 port map( A => n3201, B => n3202, Z => n3200);
   U3159 : GTECH_NOR2 port map( A => n3203, B => n3204, Z => n3199);
   U3160 : GTECH_NOR2 port map( A => n3205, B => n3206, Z => n3203);
   U3161 : GTECH_NAND2 port map( A => n3207, B => n3190, Z => n3206);
   U3162 : GTECH_NAND2 port map( A => n3208, B => n3209, Z => n3205);
   U3163 : GTECH_NOT port map( A => n3210, Z => n3209);
   U3164 : GTECH_NOR2 port map( A => n3211, B => n3212, Z => n3208);
   U3165 : GTECH_NOR2 port map( A => n3213, B => n3214, Z => n3212);
   U3166 : GTECH_NOT port map( A => n3215, Z => n3214);
   U3167 : GTECH_NOT port map( A => n3216, Z => n2727);
   U3168 : GTECH_NOR2 port map( A => n3217, B => n3218, Z => n3216);
   U3169 : GTECH_NOR2 port map( A => n3204, B => n3219, Z => n3218);
   U3170 : GTECH_NOR2 port map( A => n3220, B => n3221, Z => n3219);
   U3171 : GTECH_NAND2 port map( A => n3222, B => n3223, Z => n3221);
   U3172 : GTECH_NAND2 port map( A => n3224, B => n3225, Z => n3223);
   U3173 : GTECH_NAND2 port map( A => n3189, B => n3207, Z => n3220);
   U3174 : GTECH_NOT port map( A => n3226, Z => n3189);
   U3175 : GTECH_NOT port map( A => n3169, Z => n3204);
   U3176 : GTECH_NOR2 port map( A => n3227, B => n3228, Z => n3217);
   U3177 : GTECH_NOR2 port map( A => n3195, B => n3229, Z => n3228);
   U3178 : GTECH_NOR2 port map( A => n2745, B => n3230, Z => n3229);
   U3179 : GTECH_NAND2 port map( A => n3231, B => n3232, Z => n2726);
   U3180 : GTECH_NAND2 port map( A => n3195, B => n4807, Z => n3232);
   U3181 : GTECH_NAND2 port map( A => n3169, B => n3233, Z => n3231);
   U3182 : GTECH_NAND2 port map( A => n3234, B => n3235, Z => n3233);
   U3183 : GTECH_NOR2 port map( A => n3236, B => n3237, Z => n3235);
   U3184 : GTECH_NAND2 port map( A => n3238, B => n3239, Z => n3237);
   U3185 : GTECH_NOT port map( A => n3240, Z => n3236);
   U3186 : GTECH_NOR2 port map( A => n3241, B => n3185, Z => n3240);
   U3187 : GTECH_NAND2 port map( A => n3242, B => n3243, Z => n3241);
   U3188 : GTECH_NAND2 port map( A => n3078, B => n3244, Z => n3242);
   U3189 : GTECH_NOR2 port map( A => n3245, B => ll_rx_src_rdy_n, Z => n3244);
   U3190 : GTECH_NOR2 port map( A => n3246, B => n3247, Z => n3234);
   U3191 : GTECH_NAND2 port map( A => n3230, B => n3207, Z => n3247);
   U3192 : GTECH_NOR2 port map( A => n3248, B => n3249, Z => n3230);
   U3193 : GTECH_NOR2 port map( A => n3250, B => n3183, Z => n3249);
   U3194 : GTECH_NOR2 port map( A => n3251, B => n3079, Z => n3248);
   U3195 : GTECH_NAND2 port map( A => n3252, B => n3253, Z => n3246);
   U3196 : GTECH_NOT port map( A => n3186, Z => n3253);
   U3197 : GTECH_NOR2 port map( A => n3213, B => n3215, Z => n3186);
   U3198 : GTECH_NAND2 port map( A => n3254, B => n3225, Z => n3252);
   U3199 : GTECH_NOR2 port map( A => n3255, B => n3256, Z => n3254);
   U3200 : GTECH_NOR2 port map( A => n3144, B => n3257, Z => n3256);
   U3201 : GTECH_NOR2 port map( A => n2745, B => n3195, Z => n3169);
   U3202 : GTECH_NOT port map( A => n3202, Z => n3195);
   U3203 : GTECH_NAND2 port map( A => reset_b, B => n3258, Z => n3202);
   U3204 : GTECH_NAND2 port map( A => n3259, B => n3260, Z => n3258);
   U3205 : GTECH_NAND2 port map( A => n3185, B => n3144, Z => n3260);
   U3206 : GTECH_NOR2 port map( A => n3261, B => n3262, Z => n3259);
   U3207 : GTECH_NOT port map( A => n3263, Z => n3262);
   U3208 : GTECH_NAND2 port map( A => n3264, B => ll_tx_dst_rdy_n, Z => n3263);
   U3209 : GTECH_NOR2 port map( A => n4839, B => n3265, Z => n3261);
   U3210 : GTECH_NAND2 port map( A => n3266, B => n3267, Z => n2725);
   U3211 : GTECH_NAND2 port map( A => n3164, B => n3268, Z => n3267);
   U3212 : GTECH_NAND2 port map( A => pass_tid_curr_30_port, B => n3166, Z => 
                           n3266);
   U3213 : GTECH_NAND2 port map( A => n3269, B => n3270, Z => n2724);
   U3214 : GTECH_NAND2 port map( A => n3164, B => n3271, Z => n3270);
   U3215 : GTECH_NAND2 port map( A => pass_tid_curr_29_port, B => n3166, Z => 
                           n3269);
   U3216 : GTECH_NAND2 port map( A => n3272, B => n3273, Z => n2723);
   U3217 : GTECH_NAND2 port map( A => n3164, B => n3274, Z => n3273);
   U3218 : GTECH_NAND2 port map( A => pass_tid_curr_28_port, B => n3166, Z => 
                           n3272);
   U3219 : GTECH_NAND2 port map( A => n3275, B => n3276, Z => n2722);
   U3220 : GTECH_NAND2 port map( A => n4838, B => n3164, Z => n3276);
   U3221 : GTECH_NAND2 port map( A => pass_tid_curr_27_port, B => n3166, Z => 
                           n3275);
   U3222 : GTECH_NAND2 port map( A => n3277, B => n3278, Z => n2721);
   U3223 : GTECH_NAND2 port map( A => n4837, B => n3164, Z => n3278);
   U3224 : GTECH_NAND2 port map( A => pass_tid_curr_26_port, B => n3166, Z => 
                           n3277);
   U3225 : GTECH_NAND2 port map( A => n3279, B => n3280, Z => n2720);
   U3226 : GTECH_NAND2 port map( A => n4836, B => n3164, Z => n3280);
   U3227 : GTECH_NAND2 port map( A => pass_tid_curr_25_port, B => n3166, Z => 
                           n3279);
   U3228 : GTECH_NAND2 port map( A => n3281, B => n3282, Z => n2719);
   U3229 : GTECH_NAND2 port map( A => n4835, B => n3164, Z => n3282);
   U3230 : GTECH_NAND2 port map( A => pass_tid_curr_24_port, B => n3166, Z => 
                           n3281);
   U3231 : GTECH_NAND2 port map( A => n3283, B => n3284, Z => n2718);
   U3232 : GTECH_NAND2 port map( A => n4834, B => n3164, Z => n3284);
   U3233 : GTECH_NAND2 port map( A => pass_tid_curr_23_port, B => n3166, Z => 
                           n3283);
   U3234 : GTECH_NAND2 port map( A => n3285, B => n3286, Z => n2717);
   U3235 : GTECH_NAND2 port map( A => n4833, B => n3164, Z => n3286);
   U3236 : GTECH_NAND2 port map( A => pass_tid_curr_22_port, B => n3166, Z => 
                           n3285);
   U3237 : GTECH_NAND2 port map( A => n3287, B => n3288, Z => n2716);
   U3238 : GTECH_NAND2 port map( A => n4832, B => n3164, Z => n3288);
   U3239 : GTECH_NAND2 port map( A => pass_tid_curr_21_port, B => n3166, Z => 
                           n3287);
   U3240 : GTECH_NAND2 port map( A => n3289, B => n3290, Z => n2715);
   U3241 : GTECH_NAND2 port map( A => n4831, B => n3164, Z => n3290);
   U3242 : GTECH_NAND2 port map( A => pass_tid_curr_20_port, B => n3166, Z => 
                           n3289);
   U3243 : GTECH_NAND2 port map( A => n3291, B => n3292, Z => n2714);
   U3244 : GTECH_NAND2 port map( A => n4830, B => n3164, Z => n3292);
   U3245 : GTECH_NAND2 port map( A => pass_tid_curr_19_port, B => n3166, Z => 
                           n3291);
   U3246 : GTECH_NAND2 port map( A => n3293, B => n3294, Z => n2713);
   U3247 : GTECH_NAND2 port map( A => n4829, B => n3164, Z => n3294);
   U3248 : GTECH_NAND2 port map( A => pass_tid_curr_18_port, B => n3166, Z => 
                           n3293);
   U3249 : GTECH_NAND2 port map( A => n3295, B => n3296, Z => n2712);
   U3250 : GTECH_NAND2 port map( A => n4828, B => n3164, Z => n3296);
   U3251 : GTECH_NAND2 port map( A => pass_tid_curr_17_port, B => n3166, Z => 
                           n3295);
   U3252 : GTECH_NAND2 port map( A => n3297, B => n3298, Z => n2711);
   U3253 : GTECH_NAND2 port map( A => n4827, B => n3164, Z => n3298);
   U3254 : GTECH_NAND2 port map( A => pass_tid_curr_16_port, B => n3166, Z => 
                           n3297);
   U3255 : GTECH_NAND2 port map( A => n3299, B => n3300, Z => n2710);
   U3256 : GTECH_NAND2 port map( A => n4826, B => n3164, Z => n3300);
   U3257 : GTECH_NAND2 port map( A => pass_tid_curr_15_port, B => n3166, Z => 
                           n3299);
   U3258 : GTECH_NAND2 port map( A => n3301, B => n3302, Z => n2709);
   U3259 : GTECH_NAND2 port map( A => n4825, B => n3164, Z => n3302);
   U3260 : GTECH_NAND2 port map( A => pass_tid_curr_14_port, B => n3166, Z => 
                           n3301);
   U3261 : GTECH_NAND2 port map( A => n3303, B => n3304, Z => n2708);
   U3262 : GTECH_NAND2 port map( A => n4824, B => n3164, Z => n3304);
   U3263 : GTECH_NAND2 port map( A => pass_tid_curr_13_port, B => n3166, Z => 
                           n3303);
   U3264 : GTECH_NAND2 port map( A => n3305, B => n3306, Z => n2707);
   U3265 : GTECH_NAND2 port map( A => n4823, B => n3164, Z => n3306);
   U3266 : GTECH_NAND2 port map( A => pass_tid_curr_12_port, B => n3166, Z => 
                           n3305);
   U3267 : GTECH_NAND2 port map( A => n3307, B => n3308, Z => n2706);
   U3268 : GTECH_NAND2 port map( A => n4822, B => n3164, Z => n3308);
   U3269 : GTECH_NAND2 port map( A => pass_tid_curr_11_port, B => n3166, Z => 
                           n3307);
   U3270 : GTECH_NAND2 port map( A => n3309, B => n3310, Z => n2705);
   U3271 : GTECH_NAND2 port map( A => n4821, B => n3164, Z => n3310);
   U3272 : GTECH_NAND2 port map( A => pass_tid_curr_10_port, B => n3166, Z => 
                           n3309);
   U3273 : GTECH_NAND2 port map( A => n3311, B => n3312, Z => n2704);
   U3274 : GTECH_NAND2 port map( A => n4820, B => n3164, Z => n3312);
   U3275 : GTECH_NAND2 port map( A => pass_tid_curr_9_port, B => n3166, Z => 
                           n3311);
   U3276 : GTECH_NAND2 port map( A => n3313, B => n3314, Z => n2703);
   U3277 : GTECH_NAND2 port map( A => n4819, B => n3164, Z => n3314);
   U3278 : GTECH_NAND2 port map( A => pass_tid_curr_8_port, B => n3166, Z => 
                           n3313);
   U3279 : GTECH_NAND2 port map( A => n3315, B => n3316, Z => n2702);
   U3280 : GTECH_NAND2 port map( A => n4818, B => n3164, Z => n3316);
   U3281 : GTECH_NAND2 port map( A => pass_tid_curr_7_port, B => n3166, Z => 
                           n3315);
   U3282 : GTECH_NAND2 port map( A => n3317, B => n3318, Z => n2701);
   U3283 : GTECH_NAND2 port map( A => n4817, B => n3164, Z => n3318);
   U3284 : GTECH_NAND2 port map( A => pass_tid_curr_6_port, B => n3166, Z => 
                           n3317);
   U3285 : GTECH_NAND2 port map( A => n3319, B => n3320, Z => n2700);
   U3286 : GTECH_NAND2 port map( A => n4816, B => n3164, Z => n3320);
   U3287 : GTECH_NAND2 port map( A => pass_tid_curr_5_port, B => n3166, Z => 
                           n3319);
   U3288 : GTECH_NAND2 port map( A => n3321, B => n3322, Z => n2699);
   U3289 : GTECH_NAND2 port map( A => n4815, B => n3164, Z => n3322);
   U3290 : GTECH_NAND2 port map( A => pass_tid_curr_4_port, B => n3166, Z => 
                           n3321);
   U3291 : GTECH_NAND2 port map( A => n3323, B => n3324, Z => n2698);
   U3292 : GTECH_NAND2 port map( A => n4814, B => n3164, Z => n3324);
   U3293 : GTECH_NAND2 port map( A => pass_tid_curr_3_port, B => n3166, Z => 
                           n3323);
   U3294 : GTECH_NAND2 port map( A => n3325, B => n3326, Z => n2697);
   U3295 : GTECH_NAND2 port map( A => n4813, B => n3164, Z => n3326);
   U3296 : GTECH_NAND2 port map( A => pass_tid_curr_2_port, B => n3166, Z => 
                           n3325);
   U3297 : GTECH_NAND2 port map( A => n3327, B => n3328, Z => n2696);
   U3298 : GTECH_NAND2 port map( A => n4812, B => n3164, Z => n3328);
   U3299 : GTECH_NAND2 port map( A => pass_tid_curr_1_port, B => n3166, Z => 
                           n3327);
   U3300 : GTECH_NAND2 port map( A => n3329, B => n3330, Z => n2695);
   U3301 : GTECH_NAND2 port map( A => n4811, B => n3164, Z => n3330);
   U3302 : GTECH_NOR2 port map( A => n3166, B => n2745, Z => n3164);
   U3303 : GTECH_NAND2 port map( A => pass_tid_curr_0_port, B => n3166, Z => 
                           n3329);
   U3304 : GTECH_NAND2 port map( A => n2798, B => n3331, Z => n3166);
   U3305 : GTECH_NAND2 port map( A => reset_b, B => n3332, Z => n3331);
   U3306 : GTECH_NOR2 port map( A => n2733, B => n3333, Z => n2798);
   U3307 : GTECH_NOR2 port map( A => n2745, B => n3190, Z => n3333);
   U3308 : GTECH_NAND2 port map( A => n3334, B => n3335, Z => n2694);
   U3309 : GTECH_NAND2 port map( A => n3336, B => n3337, Z => n3335);
   U3310 : GTECH_NOR2 port map( A => n2374, B => n2745, Z => n3336);
   U3311 : GTECH_NAND2 port map( A => pass_num_curr_31_port, B => n3338, Z => 
                           n3334);
   U3312 : GTECH_NAND2 port map( A => n3339, B => n3340, Z => n2693);
   U3313 : GTECH_NAND2 port map( A => n3341, B => n3268, Z => n3340);
   U3314 : GTECH_NAND2 port map( A => pass_num_curr_30_port, B => n3338, Z => 
                           n3339);
   U3315 : GTECH_NAND2 port map( A => n3342, B => n3343, Z => n2692);
   U3316 : GTECH_NAND2 port map( A => n3341, B => n3271, Z => n3343);
   U3317 : GTECH_NAND2 port map( A => pass_num_curr_29_port, B => n3338, Z => 
                           n3342);
   U3318 : GTECH_NAND2 port map( A => n3344, B => n3345, Z => n2691);
   U3319 : GTECH_NAND2 port map( A => n3341, B => n3274, Z => n3345);
   U3320 : GTECH_NAND2 port map( A => pass_num_curr_28_port, B => n3338, Z => 
                           n3344);
   U3321 : GTECH_NAND2 port map( A => n3346, B => n3347, Z => n2690);
   U3322 : GTECH_NAND2 port map( A => n3341, B => n4838, Z => n3347);
   U3323 : GTECH_NAND2 port map( A => pass_num_curr_27_port, B => n3338, Z => 
                           n3346);
   U3324 : GTECH_NAND2 port map( A => n3348, B => n3349, Z => n2689);
   U3325 : GTECH_NAND2 port map( A => n3341, B => n4837, Z => n3349);
   U3326 : GTECH_NAND2 port map( A => pass_num_curr_26_port, B => n3338, Z => 
                           n3348);
   U3327 : GTECH_NAND2 port map( A => n3350, B => n3351, Z => n2688);
   U3328 : GTECH_NAND2 port map( A => n3341, B => n4836, Z => n3351);
   U3329 : GTECH_NAND2 port map( A => pass_num_curr_25_port, B => n3338, Z => 
                           n3350);
   U3330 : GTECH_NAND2 port map( A => n3352, B => n3353, Z => n2687);
   U3331 : GTECH_NAND2 port map( A => n3341, B => n4835, Z => n3353);
   U3332 : GTECH_NAND2 port map( A => pass_num_curr_24_port, B => n3338, Z => 
                           n3352);
   U3333 : GTECH_NAND2 port map( A => n3354, B => n3355, Z => n2686);
   U3334 : GTECH_NAND2 port map( A => n3341, B => n4834, Z => n3355);
   U3335 : GTECH_NAND2 port map( A => pass_num_curr_23_port, B => n3338, Z => 
                           n3354);
   U3336 : GTECH_NAND2 port map( A => n3356, B => n3357, Z => n2685);
   U3337 : GTECH_NAND2 port map( A => n3341, B => n4833, Z => n3357);
   U3338 : GTECH_NAND2 port map( A => pass_num_curr_22_port, B => n3338, Z => 
                           n3356);
   U3339 : GTECH_NAND2 port map( A => n3358, B => n3359, Z => n2684);
   U3340 : GTECH_NAND2 port map( A => n3341, B => n4832, Z => n3359);
   U3341 : GTECH_NAND2 port map( A => pass_num_curr_21_port, B => n3338, Z => 
                           n3358);
   U3342 : GTECH_NAND2 port map( A => n3360, B => n3361, Z => n2683);
   U3343 : GTECH_NAND2 port map( A => n3341, B => n4831, Z => n3361);
   U3344 : GTECH_NAND2 port map( A => pass_num_curr_20_port, B => n3338, Z => 
                           n3360);
   U3345 : GTECH_NAND2 port map( A => n3362, B => n3363, Z => n2682);
   U3346 : GTECH_NAND2 port map( A => n3341, B => n4830, Z => n3363);
   U3347 : GTECH_NAND2 port map( A => pass_num_curr_19_port, B => n3338, Z => 
                           n3362);
   U3348 : GTECH_NAND2 port map( A => n3364, B => n3365, Z => n2681);
   U3349 : GTECH_NAND2 port map( A => n3341, B => n4829, Z => n3365);
   U3350 : GTECH_NAND2 port map( A => pass_num_curr_18_port, B => n3338, Z => 
                           n3364);
   U3351 : GTECH_NAND2 port map( A => n3366, B => n3367, Z => n2680);
   U3352 : GTECH_NAND2 port map( A => n3341, B => n4828, Z => n3367);
   U3353 : GTECH_NAND2 port map( A => pass_num_curr_17_port, B => n3338, Z => 
                           n3366);
   U3354 : GTECH_NAND2 port map( A => n3368, B => n3369, Z => n2679);
   U3355 : GTECH_NAND2 port map( A => n3341, B => n4827, Z => n3369);
   U3356 : GTECH_NAND2 port map( A => pass_num_curr_16_port, B => n3338, Z => 
                           n3368);
   U3357 : GTECH_NAND2 port map( A => n3370, B => n3371, Z => n2678);
   U3358 : GTECH_NAND2 port map( A => n3372, B => n3337, Z => n3371);
   U3359 : GTECH_NOT port map( A => n3373, Z => n3372);
   U3360 : GTECH_NAND2 port map( A => reset_b, B => n4826, Z => n3373);
   U3361 : GTECH_NAND2 port map( A => pass_num_curr_15_port, B => n3338, Z => 
                           n3370);
   U3362 : GTECH_NAND2 port map( A => n3374, B => n3375, Z => n2677);
   U3363 : GTECH_NAND2 port map( A => n3341, B => n4825, Z => n3375);
   U3364 : GTECH_NAND2 port map( A => pass_num_curr_14_port, B => n3338, Z => 
                           n3374);
   U3365 : GTECH_NAND2 port map( A => n3376, B => n3377, Z => n2676);
   U3366 : GTECH_NAND2 port map( A => n3341, B => n4824, Z => n3377);
   U3367 : GTECH_NAND2 port map( A => pass_num_curr_13_port, B => n3338, Z => 
                           n3376);
   U3368 : GTECH_NAND2 port map( A => n3378, B => n3379, Z => n2675);
   U3369 : GTECH_NAND2 port map( A => n3341, B => n4823, Z => n3379);
   U3370 : GTECH_NAND2 port map( A => pass_num_curr_12_port, B => n3338, Z => 
                           n3378);
   U3371 : GTECH_NAND2 port map( A => n3380, B => n3381, Z => n2674);
   U3372 : GTECH_NAND2 port map( A => n3341, B => n4822, Z => n3381);
   U3373 : GTECH_NAND2 port map( A => pass_num_curr_11_port, B => n3338, Z => 
                           n3380);
   U3374 : GTECH_NAND2 port map( A => n3382, B => n3383, Z => n2673);
   U3375 : GTECH_NAND2 port map( A => n3341, B => n4821, Z => n3383);
   U3376 : GTECH_NAND2 port map( A => pass_num_curr_10_port, B => n3338, Z => 
                           n3382);
   U3377 : GTECH_NAND2 port map( A => n3384, B => n3385, Z => n2672);
   U3378 : GTECH_NAND2 port map( A => n3341, B => n4820, Z => n3385);
   U3379 : GTECH_NAND2 port map( A => pass_num_curr_9_port, B => n3338, Z => 
                           n3384);
   U3380 : GTECH_NAND2 port map( A => n3386, B => n3387, Z => n2671);
   U3381 : GTECH_NAND2 port map( A => n3341, B => n4819, Z => n3387);
   U3382 : GTECH_NAND2 port map( A => pass_num_curr_8_port, B => n3338, Z => 
                           n3386);
   U3383 : GTECH_NAND2 port map( A => n3388, B => n3389, Z => n2670);
   U3384 : GTECH_NAND2 port map( A => n3341, B => n4818, Z => n3389);
   U3385 : GTECH_NAND2 port map( A => pass_num_curr_7_port, B => n3338, Z => 
                           n3388);
   U3386 : GTECH_NAND2 port map( A => n3390, B => n3391, Z => n2669);
   U3387 : GTECH_NAND2 port map( A => n3341, B => n4817, Z => n3391);
   U3388 : GTECH_NAND2 port map( A => pass_num_curr_6_port, B => n3338, Z => 
                           n3390);
   U3389 : GTECH_NAND2 port map( A => n3392, B => n3393, Z => n2668);
   U3390 : GTECH_NAND2 port map( A => n3341, B => n4816, Z => n3393);
   U3391 : GTECH_NAND2 port map( A => pass_num_curr_5_port, B => n3338, Z => 
                           n3392);
   U3392 : GTECH_NAND2 port map( A => n3394, B => n3395, Z => n2667);
   U3393 : GTECH_NAND2 port map( A => n3341, B => n4815, Z => n3395);
   U3394 : GTECH_NAND2 port map( A => pass_num_curr_4_port, B => n3338, Z => 
                           n3394);
   U3395 : GTECH_NAND2 port map( A => n3396, B => n3397, Z => n2666);
   U3396 : GTECH_NAND2 port map( A => n3341, B => n4814, Z => n3397);
   U3397 : GTECH_NAND2 port map( A => pass_num_curr_3_port, B => n3338, Z => 
                           n3396);
   U3398 : GTECH_NAND2 port map( A => n3398, B => n3399, Z => n2665);
   U3399 : GTECH_NAND2 port map( A => n3341, B => n4813, Z => n3399);
   U3400 : GTECH_NAND2 port map( A => pass_num_curr_2_port, B => n3338, Z => 
                           n3398);
   U3401 : GTECH_NAND2 port map( A => n3400, B => n3401, Z => n2664);
   U3402 : GTECH_NAND2 port map( A => n3341, B => n4812, Z => n3401);
   U3403 : GTECH_NAND2 port map( A => pass_num_curr_1_port, B => n3338, Z => 
                           n3400);
   U3404 : GTECH_NAND2 port map( A => n3402, B => n3403, Z => n2663);
   U3405 : GTECH_NAND2 port map( A => n3341, B => n4811, Z => n3403);
   U3406 : GTECH_NOR2 port map( A => n2745, B => n3338, Z => n3341);
   U3407 : GTECH_NAND2 port map( A => pass_num_curr_0_port, B => n3338, Z => 
                           n3402);
   U3408 : GTECH_NOR2 port map( A => n2745, B => n3337, Z => n3338);
   U3409 : GTECH_NOT port map( A => n3404, Z => n3337);
   U3410 : GTECH_NAND2 port map( A => n3405, B => n3406, Z => n3404);
   U3411 : GTECH_NOR2 port map( A => n3148, B => n3211, Z => n3406);
   U3412 : GTECH_NOT port map( A => n3407, Z => n3211);
   U3413 : GTECH_NOR2 port map( A => n3408, B => n3332, Z => n3405);
   U3414 : GTECH_NOT port map( A => n2744, Z => n3408);
   U3415 : GTECH_NAND2 port map( A => n3409, B => n3410, Z => n2662);
   U3416 : GTECH_NAND2 port map( A => n3411, B => n4818, Z => n3410);
   U3417 : GTECH_NAND2 port map( A => pass_addr_curr_7_port, B => n3412, Z => 
                           n3409);
   U3418 : GTECH_NAND2 port map( A => n3413, B => n3414, Z => n2661);
   U3419 : GTECH_NAND2 port map( A => n3411, B => n4817, Z => n3414);
   U3420 : GTECH_NAND2 port map( A => pass_addr_curr_6_port, B => n3412, Z => 
                           n3413);
   U3421 : GTECH_NAND2 port map( A => n3415, B => n3416, Z => n2660);
   U3422 : GTECH_NAND2 port map( A => n3411, B => n4816, Z => n3416);
   U3423 : GTECH_NAND2 port map( A => pass_addr_curr_5_port, B => n3412, Z => 
                           n3415);
   U3424 : GTECH_NAND2 port map( A => n3417, B => n3418, Z => n2659);
   U3425 : GTECH_NAND2 port map( A => n3411, B => n4815, Z => n3418);
   U3426 : GTECH_NAND2 port map( A => pass_addr_curr_4_port, B => n3412, Z => 
                           n3417);
   U3427 : GTECH_NAND2 port map( A => n3419, B => n3420, Z => n2658);
   U3428 : GTECH_NAND2 port map( A => n3411, B => n4814, Z => n3420);
   U3429 : GTECH_NAND2 port map( A => pass_addr_curr_3_port, B => n3412, Z => 
                           n3419);
   U3430 : GTECH_NAND2 port map( A => n3421, B => n3422, Z => n2657);
   U3431 : GTECH_NAND2 port map( A => n3411, B => n4813, Z => n3422);
   U3432 : GTECH_NAND2 port map( A => pass_addr_curr_2_port, B => n3412, Z => 
                           n3421);
   U3433 : GTECH_NAND2 port map( A => n3423, B => n3424, Z => n2656);
   U3434 : GTECH_NAND2 port map( A => n3411, B => n4812, Z => n3424);
   U3435 : GTECH_NAND2 port map( A => pass_addr_curr_1_port, B => n3412, Z => 
                           n3423);
   U3436 : GTECH_NAND2 port map( A => n3425, B => n3426, Z => n2655);
   U3437 : GTECH_NAND2 port map( A => n3411, B => n4811, Z => n3426);
   U3438 : GTECH_NAND2 port map( A => pass_addr_curr_0_port, B => n3412, Z => 
                           n3425);
   U3439 : GTECH_NAND2 port map( A => n3427, B => n3428, Z => n2654);
   U3440 : GTECH_NAND2 port map( A => n3411, B => n4822, Z => n3428);
   U3441 : GTECH_NAND2 port map( A => pass_addr_curr_11_port, B => n3412, Z => 
                           n3427);
   U3442 : GTECH_NAND2 port map( A => n3429, B => n3430, Z => n2653);
   U3443 : GTECH_NAND2 port map( A => n3411, B => n4821, Z => n3430);
   U3444 : GTECH_NAND2 port map( A => pass_addr_curr_10_port, B => n3412, Z => 
                           n3429);
   U3445 : GTECH_NAND2 port map( A => n3431, B => n3432, Z => n2652);
   U3446 : GTECH_NAND2 port map( A => n3411, B => n4820, Z => n3432);
   U3447 : GTECH_NAND2 port map( A => pass_addr_curr_9_port, B => n3412, Z => 
                           n3431);
   U3448 : GTECH_NAND2 port map( A => n3433, B => n3434, Z => n2651);
   U3449 : GTECH_NAND2 port map( A => n3411, B => n4819, Z => n3434);
   U3450 : GTECH_NAND2 port map( A => pass_addr_curr_8_port, B => n3412, Z => 
                           n3433);
   U3451 : GTECH_NAND2 port map( A => n3435, B => n3436, Z => n2650);
   U3452 : GTECH_NAND2 port map( A => n3411, B => n4825, Z => n3436);
   U3453 : GTECH_NAND2 port map( A => pass_addr_curr_14_port, B => n3412, Z => 
                           n3435);
   U3454 : GTECH_NAND2 port map( A => n3437, B => n3438, Z => n2649);
   U3455 : GTECH_NAND2 port map( A => n3411, B => n4824, Z => n3438);
   U3456 : GTECH_NAND2 port map( A => pass_addr_curr_13_port, B => n3412, Z => 
                           n3437);
   U3457 : GTECH_NAND2 port map( A => n3439, B => n3440, Z => n2648);
   U3458 : GTECH_NAND2 port map( A => n3411, B => n4823, Z => n3440);
   U3459 : GTECH_NAND2 port map( A => pass_addr_curr_12_port, B => n3412, Z => 
                           n3439);
   U3460 : GTECH_NAND2 port map( A => n3441, B => n3442, Z => n2647);
   U3461 : GTECH_NAND2 port map( A => n3411, B => n4826, Z => n3442);
   U3462 : GTECH_NAND2 port map( A => pass_addr_curr_15_port, B => n3412, Z => 
                           n3441);
   U3463 : GTECH_NAND2 port map( A => n3443, B => n3444, Z => n2646);
   U3464 : GTECH_NAND2 port map( A => n3411, B => n3165, Z => n3444);
   U3465 : GTECH_NAND2 port map( A => pass_addr_curr_31_port, B => n3412, Z => 
                           n3443);
   U3466 : GTECH_NAND2 port map( A => n3445, B => n3446, Z => n2645);
   U3467 : GTECH_NAND2 port map( A => n3411, B => n3268, Z => n3446);
   U3468 : GTECH_NAND2 port map( A => pass_addr_curr_30_port, B => n3412, Z => 
                           n3445);
   U3469 : GTECH_NAND2 port map( A => n3447, B => n3448, Z => n2644);
   U3470 : GTECH_NAND2 port map( A => n3411, B => n3271, Z => n3448);
   U3471 : GTECH_NAND2 port map( A => pass_addr_curr_29_port, B => n3412, Z => 
                           n3447);
   U3472 : GTECH_NAND2 port map( A => n3449, B => n3450, Z => n2643);
   U3473 : GTECH_NAND2 port map( A => n3411, B => n3274, Z => n3450);
   U3474 : GTECH_NAND2 port map( A => pass_addr_curr_28_port, B => n3412, Z => 
                           n3449);
   U3475 : GTECH_NAND2 port map( A => n3451, B => n3452, Z => n2642);
   U3476 : GTECH_NAND2 port map( A => n3411, B => n4838, Z => n3452);
   U3477 : GTECH_NAND2 port map( A => pass_addr_curr_27_port, B => n3412, Z => 
                           n3451);
   U3478 : GTECH_NAND2 port map( A => n3453, B => n3454, Z => n2641);
   U3479 : GTECH_NAND2 port map( A => n3411, B => n4837, Z => n3454);
   U3480 : GTECH_NAND2 port map( A => pass_addr_curr_26_port, B => n3412, Z => 
                           n3453);
   U3481 : GTECH_NAND2 port map( A => n3455, B => n3456, Z => n2640);
   U3482 : GTECH_NAND2 port map( A => n3411, B => n4836, Z => n3456);
   U3483 : GTECH_NAND2 port map( A => pass_addr_curr_25_port, B => n3412, Z => 
                           n3455);
   U3484 : GTECH_NAND2 port map( A => n3457, B => n3458, Z => n2639);
   U3485 : GTECH_NAND2 port map( A => n3411, B => n4835, Z => n3458);
   U3486 : GTECH_NAND2 port map( A => pass_addr_curr_24_port, B => n3412, Z => 
                           n3457);
   U3487 : GTECH_NAND2 port map( A => n3459, B => n3460, Z => n2638);
   U3488 : GTECH_NAND2 port map( A => n3411, B => n4834, Z => n3460);
   U3489 : GTECH_NAND2 port map( A => pass_addr_curr_23_port, B => n3412, Z => 
                           n3459);
   U3490 : GTECH_NAND2 port map( A => n3461, B => n3462, Z => n2637);
   U3491 : GTECH_NAND2 port map( A => n3411, B => n4833, Z => n3462);
   U3492 : GTECH_NAND2 port map( A => pass_addr_curr_22_port, B => n3412, Z => 
                           n3461);
   U3493 : GTECH_NAND2 port map( A => n3463, B => n3464, Z => n2636);
   U3494 : GTECH_NAND2 port map( A => n3411, B => n4832, Z => n3464);
   U3495 : GTECH_NAND2 port map( A => pass_addr_curr_21_port, B => n3412, Z => 
                           n3463);
   U3496 : GTECH_NAND2 port map( A => n3465, B => n3466, Z => n2635);
   U3497 : GTECH_NAND2 port map( A => n3411, B => n4831, Z => n3466);
   U3498 : GTECH_NAND2 port map( A => pass_addr_curr_20_port, B => n3412, Z => 
                           n3465);
   U3499 : GTECH_NAND2 port map( A => n3467, B => n3468, Z => n2634);
   U3500 : GTECH_NAND2 port map( A => n3411, B => n4830, Z => n3468);
   U3501 : GTECH_NAND2 port map( A => pass_addr_curr_19_port, B => n3412, Z => 
                           n3467);
   U3502 : GTECH_NAND2 port map( A => n3469, B => n3470, Z => n2633);
   U3503 : GTECH_NAND2 port map( A => n3411, B => n4829, Z => n3470);
   U3504 : GTECH_NAND2 port map( A => pass_addr_curr_18_port, B => n3412, Z => 
                           n3469);
   U3505 : GTECH_NAND2 port map( A => n3471, B => n3472, Z => n2632);
   U3506 : GTECH_NAND2 port map( A => n3411, B => n4828, Z => n3472);
   U3507 : GTECH_NAND2 port map( A => pass_addr_curr_17_port, B => n3412, Z => 
                           n3471);
   U3508 : GTECH_NAND2 port map( A => n3473, B => n3474, Z => n2631);
   U3509 : GTECH_NAND2 port map( A => n3411, B => n4827, Z => n3474);
   U3510 : GTECH_NOR2 port map( A => n3412, B => n2745, Z => n3411);
   U3511 : GTECH_NAND2 port map( A => pass_addr_curr_16_port, B => n3412, Z => 
                           n3473);
   U3512 : GTECH_NAND2 port map( A => n3475, B => n2736, Z => n3412);
   U3513 : GTECH_NAND2 port map( A => n3476, B => n3477, Z => n2630);
   U3514 : GTECH_NAND2 port map( A => wr_counter_curr_0_port, B => n3478, Z => 
                           n3477);
   U3515 : GTECH_NAND2 port map( A => N957, B => n2799, Z => n3476);
   U3516 : GTECH_NAND2 port map( A => n3479, B => n3480, Z => n2629);
   U3517 : GTECH_NAND2 port map( A => wr_counter_curr_1_port, B => n3478, Z => 
                           n3480);
   U3518 : GTECH_NAND2 port map( A => N958, B => n2799, Z => n3479);
   U3519 : GTECH_NAND2 port map( A => n3481, B => n3482, Z => n2628);
   U3520 : GTECH_NAND2 port map( A => wr_counter_curr_2_port, B => n3478, Z => 
                           n3482);
   U3521 : GTECH_NAND2 port map( A => N959, B => n2799, Z => n3481);
   U3522 : GTECH_NAND2 port map( A => n3483, B => n3484, Z => n2627);
   U3523 : GTECH_NAND2 port map( A => wr_counter_curr_3_port, B => n3478, Z => 
                           n3484);
   U3524 : GTECH_NAND2 port map( A => N960, B => n2799, Z => n3483);
   U3525 : GTECH_NAND2 port map( A => n3485, B => n3486, Z => n2626);
   U3526 : GTECH_NAND2 port map( A => wr_counter_curr_4_port, B => n3478, Z => 
                           n3486);
   U3527 : GTECH_NAND2 port map( A => N961, B => n2799, Z => n3485);
   U3528 : GTECH_NAND2 port map( A => n3487, B => n3488, Z => n2625);
   U3529 : GTECH_NAND2 port map( A => wr_counter_curr_5_port, B => n3478, Z => 
                           n3488);
   U3530 : GTECH_NAND2 port map( A => N962, B => n2799, Z => n3487);
   U3531 : GTECH_NAND2 port map( A => n3489, B => n3490, Z => n2624);
   U3532 : GTECH_NAND2 port map( A => wr_counter_curr_6_port, B => n3478, Z => 
                           n3490);
   U3533 : GTECH_NAND2 port map( A => N963, B => n2799, Z => n3489);
   U3534 : GTECH_NAND2 port map( A => n3491, B => n3492, Z => n2623);
   U3535 : GTECH_NAND2 port map( A => wr_counter_curr_7_port, B => n3478, Z => 
                           n3492);
   U3536 : GTECH_NOT port map( A => n3493, Z => n3478);
   U3537 : GTECH_NAND2 port map( A => N964, B => n2799, Z => n3491);
   U3538 : GTECH_NAND2 port map( A => n3494, B => n3495, Z => n2621);
   U3539 : GTECH_NAND2 port map( A => rx_src(1), B => n2733, Z => n3495);
   U3540 : GTECH_NOR2 port map( A => n3496, B => n3497, Z => n3494);
   U3541 : GTECH_NOR2 port map( A => n2736, B => n2245, Z => n3497);
   U3542 : GTECH_NOR2 port map( A => n2737, B => n3498, Z => n3496);
   U3543 : GTECH_NAND2 port map( A => n3271, B => n3274, Z => n3498);
   U3544 : GTECH_NAND2 port map( A => n3499, B => n3500, Z => n2620);
   U3545 : GTECH_NAND2 port map( A => rx_src(2), B => n2733, Z => n3500);
   U3546 : GTECH_NOR2 port map( A => n3501, B => n3502, Z => n3499);
   U3547 : GTECH_NOR2 port map( A => n2736, B => n2246, Z => n3502);
   U3548 : GTECH_NOR2 port map( A => n2737, B => n3503, Z => n3501);
   U3549 : GTECH_NAND2 port map( A => n2376, B => n3271, Z => n3503);
   U3550 : GTECH_NAND2 port map( A => n3504, B => n3505, Z => n2619);
   U3551 : GTECH_NAND2 port map( A => rx_src(3), B => n2733, Z => n3505);
   U3552 : GTECH_NOR2 port map( A => n3506, B => n3507, Z => n3504);
   U3553 : GTECH_NOR2 port map( A => n2736, B => n2247, Z => n3507);
   U3554 : GTECH_NOR2 port map( A => n2737, B => n3508, Z => n3506);
   U3555 : GTECH_NAND2 port map( A => n2248, B => n3274, Z => n3508);
   U3556 : GTECH_NAND2 port map( A => n3509, B => n3510, Z => n2618);
   U3557 : GTECH_NAND2 port map( A => rx_src(4), B => n2733, Z => n3510);
   U3558 : GTECH_NOR2 port map( A => n3511, B => n3512, Z => n3509);
   U3559 : GTECH_NOR2 port map( A => n2736, B => n2249, Z => n3512);
   U3560 : GTECH_NOT port map( A => n2743, Z => n2736);
   U3561 : GTECH_NOR2 port map( A => n3513, B => n3514, Z => n3511);
   U3562 : GTECH_NOT port map( A => n3515, Z => n3514);
   U3563 : GTECH_NOR2 port map( A => n3268, B => n2737, Z => n3515);
   U3564 : GTECH_NAND2 port map( A => n3516, B => n3517, Z => n2737);
   U3565 : GTECH_NOR2 port map( A => n3518, B => n2744, Z => n3517);
   U3566 : GTECH_NOR2 port map( A => n3519, B => n2375, Z => n3518);
   U3567 : GTECH_NOR2 port map( A => n3271, B => n3274, Z => n3519);
   U3568 : GTECH_NOT port map( A => n2376, Z => n3274);
   U3569 : GTECH_NOT port map( A => n2248, Z => n3271);
   U3570 : GTECH_NOR2 port map( A => n3165, B => n2745, Z => n3516);
   U3571 : GTECH_NAND2 port map( A => n2376, B => n2248, Z => n3513);
   U3572 : GTECH_NAND2 port map( A => n3520, B => n3521, Z => n2617);
   U3573 : GTECH_NAND2 port map( A => tx_src_0_port, B => n2743, Z => n3521);
   U3574 : GTECH_NAND2 port map( A => rx_dst(0), B => n2733, Z => n3520);
   U3575 : GTECH_NAND2 port map( A => n3522, B => n3523, Z => n2616);
   U3576 : GTECH_NAND2 port map( A => tx_src_1_port, B => n2743, Z => n3523);
   U3577 : GTECH_NAND2 port map( A => rx_dst(1), B => n2733, Z => n3522);
   U3578 : GTECH_NAND2 port map( A => n3524, B => n3525, Z => n2615);
   U3579 : GTECH_NAND2 port map( A => tx_src_2_port, B => n2743, Z => n3525);
   U3580 : GTECH_NAND2 port map( A => rx_dst(2), B => n2733, Z => n3524);
   U3581 : GTECH_NAND2 port map( A => n3526, B => n3527, Z => n2614);
   U3582 : GTECH_NAND2 port map( A => tx_src_3_port, B => n2743, Z => n3527);
   U3583 : GTECH_NOR2 port map( A => n2745, B => n3528, Z => n2743);
   U3584 : GTECH_NOR2 port map( A => n3529, B => n3332, Z => n3528);
   U3585 : GTECH_NAND2 port map( A => n3530, B => n3531, Z => n3332);
   U3586 : GTECH_NOR2 port map( A => n3185, B => n3532, Z => n3531);
   U3587 : GTECH_NAND2 port map( A => n3213, B => n2792, Z => n3532);
   U3588 : GTECH_NOR2 port map( A => n3184, B => n2803, Z => n3530);
   U3589 : GTECH_NAND2 port map( A => n3533, B => n3534, Z => n2803);
   U3590 : GTECH_NOR2 port map( A => n3535, B => n3177, Z => n3534);
   U3591 : GTECH_NOT port map( A => n3239, Z => n3535);
   U3592 : GTECH_NOR2 port map( A => n3225, B => n3264, Z => n3533);
   U3593 : GTECH_NAND2 port map( A => n3407, B => n3243, Z => n3529);
   U3594 : GTECH_NAND2 port map( A => rx_dst(3), B => n2733, Z => n3526);
   U3595 : GTECH_NAND2 port map( A => n3536, B => n3537, Z => n2612);
   U3596 : GTECH_NOT port map( A => n3538, Z => n3537);
   U3597 : GTECH_NAND2 port map( A => n3539, B => n3540, Z => n3538);
   U3598 : GTECH_NAND2 port map( A => n3541, B => n3542, Z => n3540);
   U3599 : GTECH_NOR2 port map( A => n3543, B => n3544, Z => n3536);
   U3600 : GTECH_NOR2 port map( A => n3545, B => n3546, Z => n3544);
   U3601 : GTECH_NOR2 port map( A => n3547, B => n2745, Z => n3543);
   U3602 : GTECH_NOR2 port map( A => n3548, B => n3549, Z => n3547);
   U3603 : GTECH_NOT port map( A => n3550, Z => n3548);
   U3604 : GTECH_NAND2 port map( A => n3551, B => ll_rx_src_rdy_n, Z => n3550);
   U3605 : GTECH_NAND2 port map( A => n3552, B => n3553, Z => n2611);
   U3606 : GTECH_NOR2 port map( A => n3554, B => n3555, Z => n3553);
   U3607 : GTECH_NOR2 port map( A => n3556, B => n3542, Z => n3552);
   U3608 : GTECH_NOR2 port map( A => n3475, B => n3139, Z => n3542);
   U3609 : GTECH_NOR2 port map( A => n3557, B => n2745, Z => n3556);
   U3610 : GTECH_NOR2 port map( A => n3549, B => n3558, Z => n3557);
   U3611 : GTECH_NAND2 port map( A => n3559, B => n3560, Z => n3558);
   U3612 : GTECH_NAND2 port map( A => n3551, B => n3561, Z => n3560);
   U3613 : GTECH_NOT port map( A => n3562, Z => n3559);
   U3614 : GTECH_NOR2 port map( A => n3139, B => n3541, Z => n3562);
   U3615 : GTECH_NAND2 port map( A => n3563, B => n3564, Z => n3549);
   U3616 : GTECH_NAND2 port map( A => n3565, B => n3566, Z => n3564);
   U3617 : GTECH_NOR2 port map( A => n3139, B => n3567, Z => n3565);
   U3618 : GTECH_NAND2 port map( A => n3568, B => n3148, Z => n3563);
   U3619 : GTECH_NOT port map( A => n3569, Z => n3568);
   U3620 : GTECH_NAND2 port map( A => n3570, B => n3571, Z => n2550);
   U3621 : GTECH_NAND2 port map( A => n3572, B => ll_rx_data(27), Z => n3571);
   U3622 : GTECH_NAND2 port map( A => trans_id_curr_27_port, B => n3573, Z => 
                           n3570);
   U3623 : GTECH_NAND2 port map( A => n3574, B => n3575, Z => n2549);
   U3624 : GTECH_NAND2 port map( A => n3572, B => ll_rx_data(26), Z => n3575);
   U3625 : GTECH_NAND2 port map( A => trans_id_curr_26_port, B => n3573, Z => 
                           n3574);
   U3626 : GTECH_NAND2 port map( A => n3576, B => n3577, Z => n2548);
   U3627 : GTECH_NAND2 port map( A => n3572, B => ll_rx_data(25), Z => n3577);
   U3628 : GTECH_NAND2 port map( A => trans_id_curr_25_port, B => n3573, Z => 
                           n3576);
   U3629 : GTECH_NAND2 port map( A => n3578, B => n3579, Z => n2547);
   U3630 : GTECH_NAND2 port map( A => n3572, B => ll_rx_data(24), Z => n3579);
   U3631 : GTECH_NAND2 port map( A => trans_id_curr_24_port, B => n3573, Z => 
                           n3578);
   U3632 : GTECH_NAND2 port map( A => n3580, B => n3581, Z => n2546);
   U3633 : GTECH_NAND2 port map( A => n3572, B => ll_rx_data(23), Z => n3581);
   U3634 : GTECH_NAND2 port map( A => trans_id_curr_23_port, B => n3573, Z => 
                           n3580);
   U3635 : GTECH_NAND2 port map( A => n3582, B => n3583, Z => n2545);
   U3636 : GTECH_NAND2 port map( A => n3572, B => ll_rx_data(22), Z => n3583);
   U3637 : GTECH_NAND2 port map( A => trans_id_curr_22_port, B => n3573, Z => 
                           n3582);
   U3638 : GTECH_NAND2 port map( A => n3584, B => n3585, Z => n2544);
   U3639 : GTECH_NAND2 port map( A => n3572, B => ll_rx_data(21), Z => n3585);
   U3640 : GTECH_NAND2 port map( A => trans_id_curr_21_port, B => n3573, Z => 
                           n3584);
   U3641 : GTECH_NAND2 port map( A => n3586, B => n3587, Z => n2543);
   U3642 : GTECH_NAND2 port map( A => n3572, B => ll_rx_data(20), Z => n3587);
   U3643 : GTECH_NAND2 port map( A => trans_id_curr_20_port, B => n3573, Z => 
                           n3586);
   U3644 : GTECH_NAND2 port map( A => n3588, B => n3589, Z => n2542);
   U3645 : GTECH_NAND2 port map( A => n3572, B => ll_rx_data(19), Z => n3589);
   U3646 : GTECH_NAND2 port map( A => trans_id_curr_19_port, B => n3573, Z => 
                           n3588);
   U3647 : GTECH_NAND2 port map( A => n3590, B => n3591, Z => n2541);
   U3648 : GTECH_NAND2 port map( A => n3572, B => ll_rx_data(18), Z => n3591);
   U3649 : GTECH_NAND2 port map( A => trans_id_curr_18_port, B => n3573, Z => 
                           n3590);
   U3650 : GTECH_NAND2 port map( A => n3592, B => n3593, Z => n2540);
   U3651 : GTECH_NAND2 port map( A => n3572, B => ll_rx_data(17), Z => n3593);
   U3652 : GTECH_NAND2 port map( A => trans_id_curr_17_port, B => n3573, Z => 
                           n3592);
   U3653 : GTECH_NAND2 port map( A => n3594, B => n3595, Z => n2539);
   U3654 : GTECH_NAND2 port map( A => n3572, B => ll_rx_data(16), Z => n3595);
   U3655 : GTECH_NAND2 port map( A => trans_id_curr_16_port, B => n3573, Z => 
                           n3594);
   U3656 : GTECH_NAND2 port map( A => n3596, B => n3597, Z => n2538);
   U3657 : GTECH_NAND2 port map( A => n3572, B => ll_rx_data(15), Z => n3597);
   U3658 : GTECH_NAND2 port map( A => trans_id_curr_15_port, B => n3573, Z => 
                           n3596);
   U3659 : GTECH_NAND2 port map( A => n3598, B => n3599, Z => n2537);
   U3660 : GTECH_NAND2 port map( A => n3572, B => ll_rx_data(14), Z => n3599);
   U3661 : GTECH_NAND2 port map( A => trans_id_curr_14_port, B => n3573, Z => 
                           n3598);
   U3662 : GTECH_NAND2 port map( A => n3600, B => n3601, Z => n2536);
   U3663 : GTECH_NAND2 port map( A => n3572, B => ll_rx_data(13), Z => n3601);
   U3664 : GTECH_NAND2 port map( A => trans_id_curr_13_port, B => n3573, Z => 
                           n3600);
   U3665 : GTECH_NAND2 port map( A => n3602, B => n3603, Z => n2535);
   U3666 : GTECH_NAND2 port map( A => n3572, B => ll_rx_data(12), Z => n3603);
   U3667 : GTECH_NAND2 port map( A => trans_id_curr_12_port, B => n3573, Z => 
                           n3602);
   U3668 : GTECH_NAND2 port map( A => n3604, B => n3605, Z => n2534);
   U3669 : GTECH_NAND2 port map( A => n3572, B => ll_rx_data(11), Z => n3605);
   U3670 : GTECH_NAND2 port map( A => trans_id_curr_11_port, B => n3573, Z => 
                           n3604);
   U3671 : GTECH_NAND2 port map( A => n3606, B => n3607, Z => n2533);
   U3672 : GTECH_NAND2 port map( A => n3572, B => ll_rx_data(10), Z => n3607);
   U3673 : GTECH_NAND2 port map( A => trans_id_curr_10_port, B => n3573, Z => 
                           n3606);
   U3674 : GTECH_NAND2 port map( A => n3608, B => n3609, Z => n2532);
   U3675 : GTECH_NAND2 port map( A => n3572, B => ll_rx_data(9), Z => n3609);
   U3676 : GTECH_NAND2 port map( A => trans_id_curr_9_port, B => n3573, Z => 
                           n3608);
   U3677 : GTECH_NAND2 port map( A => n3610, B => n3611, Z => n2531);
   U3678 : GTECH_NAND2 port map( A => n3572, B => ll_rx_data(8), Z => n3611);
   U3679 : GTECH_NAND2 port map( A => trans_id_curr_8_port, B => n3573, Z => 
                           n3610);
   U3680 : GTECH_NAND2 port map( A => n3612, B => n3613, Z => n2530);
   U3681 : GTECH_NAND2 port map( A => n3572, B => ll_rx_data(7), Z => n3613);
   U3682 : GTECH_NAND2 port map( A => trans_id_curr_7_port, B => n3573, Z => 
                           n3612);
   U3683 : GTECH_NAND2 port map( A => n3614, B => n3615, Z => n2529);
   U3684 : GTECH_NAND2 port map( A => n3572, B => ll_rx_data(6), Z => n3615);
   U3685 : GTECH_NAND2 port map( A => trans_id_curr_6_port, B => n3573, Z => 
                           n3614);
   U3686 : GTECH_NAND2 port map( A => n3616, B => n3617, Z => n2528);
   U3687 : GTECH_NAND2 port map( A => n3572, B => ll_rx_data(5), Z => n3617);
   U3688 : GTECH_NAND2 port map( A => trans_id_curr_5_port, B => n3573, Z => 
                           n3616);
   U3689 : GTECH_NAND2 port map( A => n3618, B => n3619, Z => n2527);
   U3690 : GTECH_NAND2 port map( A => n3572, B => ll_rx_data(4), Z => n3619);
   U3691 : GTECH_NAND2 port map( A => trans_id_curr_4_port, B => n3573, Z => 
                           n3618);
   U3692 : GTECH_NAND2 port map( A => n3620, B => n3621, Z => n2526);
   U3693 : GTECH_NAND2 port map( A => n3572, B => ll_rx_data(3), Z => n3621);
   U3694 : GTECH_NAND2 port map( A => trans_id_curr_3_port, B => n3573, Z => 
                           n3620);
   U3695 : GTECH_NAND2 port map( A => n3622, B => n3623, Z => n2525);
   U3696 : GTECH_NAND2 port map( A => n3572, B => ll_rx_data(2), Z => n3623);
   U3697 : GTECH_NAND2 port map( A => trans_id_curr_2_port, B => n3573, Z => 
                           n3622);
   U3698 : GTECH_NAND2 port map( A => n3624, B => n3625, Z => n2524);
   U3699 : GTECH_NAND2 port map( A => n3572, B => ll_rx_data(1), Z => n3625);
   U3700 : GTECH_NAND2 port map( A => trans_id_curr_1_port, B => n3573, Z => 
                           n3624);
   U3701 : GTECH_NAND2 port map( A => n3626, B => n3627, Z => n2523);
   U3702 : GTECH_NAND2 port map( A => n3572, B => ll_rx_data(0), Z => n3627);
   U3703 : GTECH_NOR2 port map( A => n3573, B => n2745, Z => n3572);
   U3704 : GTECH_NAND2 port map( A => trans_id_curr_0_port, B => n3573, Z => 
                           n3626);
   U3705 : GTECH_NAND2 port map( A => n3628, B => n3629, Z => n3573);
   U3706 : GTECH_NAND2 port map( A => n3079, B => reset_b, Z => n3629);
   U3707 : GTECH_NAND2 port map( A => n3630, B => n3631, Z => n2522);
   U3708 : GTECH_NAND2 port map( A => n3632, B => waiting_to_recv_data_curr, Z 
                           => n3631);
   U3709 : GTECH_NOR2 port map( A => n3633, B => n2745, Z => n3632);
   U3710 : GTECH_NOR2 port map( A => n3634, B => n3635, Z => n3633);
   U3711 : GTECH_NAND2 port map( A => n3636, B => n3178, Z => n3635);
   U3712 : GTECH_NAND2 port map( A => sic_rx_fsm_cs_2_port, B => 
                           sic_rx_fsm_cs_1_port, Z => n3636);
   U3713 : GTECH_NAND2 port map( A => n3637, B => n3569, Z => n3634);
   U3714 : GTECH_NAND2 port map( A => n3638, B => n3554, Z => n3630);
   U3715 : GTECH_NOR2 port map( A => n3639, B => n3640, Z => n3638);
   U3716 : GTECH_NOR2 port map( A => n3641, B => n3642, Z => n3640);
   U3717 : GTECH_NOR2 port map( A => waiting_to_recv_data_curr, B => n3561, Z 
                           => n3639);
   U3718 : GTECH_NAND2 port map( A => n3643, B => n3644, Z => n2521);
   U3719 : GTECH_NAND2 port map( A => tmp_data_curr_0_port, B => n3645, Z => 
                           n3644);
   U3720 : GTECH_NAND2 port map( A => n3554, B => ll_rx_data(0), Z => n3643);
   U3721 : GTECH_NAND2 port map( A => n3646, B => n3647, Z => n2520);
   U3722 : GTECH_NAND2 port map( A => tmp_data_curr_1_port, B => n3645, Z => 
                           n3647);
   U3723 : GTECH_NAND2 port map( A => n3554, B => ll_rx_data(1), Z => n3646);
   U3724 : GTECH_NAND2 port map( A => n3648, B => n3649, Z => n2519);
   U3725 : GTECH_NAND2 port map( A => tmp_data_curr_2_port, B => n3645, Z => 
                           n3649);
   U3726 : GTECH_NAND2 port map( A => n3554, B => ll_rx_data(2), Z => n3648);
   U3727 : GTECH_NAND2 port map( A => n3650, B => n3651, Z => n2518);
   U3728 : GTECH_NAND2 port map( A => tmp_data_curr_3_port, B => n3645, Z => 
                           n3651);
   U3729 : GTECH_NAND2 port map( A => n3554, B => ll_rx_data(3), Z => n3650);
   U3730 : GTECH_NAND2 port map( A => n3652, B => n3653, Z => n2517);
   U3731 : GTECH_NAND2 port map( A => tmp_data_curr_4_port, B => n3645, Z => 
                           n3653);
   U3732 : GTECH_NAND2 port map( A => n3554, B => ll_rx_data(4), Z => n3652);
   U3733 : GTECH_NAND2 port map( A => n3654, B => n3655, Z => n2516);
   U3734 : GTECH_NAND2 port map( A => tmp_data_curr_5_port, B => n3645, Z => 
                           n3655);
   U3735 : GTECH_NAND2 port map( A => n3554, B => ll_rx_data(5), Z => n3654);
   U3736 : GTECH_NAND2 port map( A => n3656, B => n3657, Z => n2515);
   U3737 : GTECH_NAND2 port map( A => tmp_data_curr_6_port, B => n3645, Z => 
                           n3657);
   U3738 : GTECH_NAND2 port map( A => n3554, B => ll_rx_data(6), Z => n3656);
   U3739 : GTECH_NAND2 port map( A => n3658, B => n3659, Z => n2514);
   U3740 : GTECH_NAND2 port map( A => tmp_data_curr_7_port, B => n3645, Z => 
                           n3659);
   U3741 : GTECH_NAND2 port map( A => n3554, B => ll_rx_data(7), Z => n3658);
   U3742 : GTECH_NAND2 port map( A => n3660, B => n3661, Z => n2513);
   U3743 : GTECH_NAND2 port map( A => tmp_data_curr_8_port, B => n3645, Z => 
                           n3661);
   U3744 : GTECH_NAND2 port map( A => n3554, B => ll_rx_data(8), Z => n3660);
   U3745 : GTECH_NAND2 port map( A => n3662, B => n3663, Z => n2512);
   U3746 : GTECH_NAND2 port map( A => tmp_data_curr_9_port, B => n3645, Z => 
                           n3663);
   U3747 : GTECH_NAND2 port map( A => n3554, B => ll_rx_data(9), Z => n3662);
   U3748 : GTECH_NAND2 port map( A => n3664, B => n3665, Z => n2511);
   U3749 : GTECH_NAND2 port map( A => tmp_data_curr_10_port, B => n3645, Z => 
                           n3665);
   U3750 : GTECH_NAND2 port map( A => n3554, B => ll_rx_data(10), Z => n3664);
   U3751 : GTECH_NAND2 port map( A => n3666, B => n3667, Z => n2510);
   U3752 : GTECH_NAND2 port map( A => tmp_data_curr_11_port, B => n3645, Z => 
                           n3667);
   U3753 : GTECH_NAND2 port map( A => n3554, B => ll_rx_data(11), Z => n3666);
   U3754 : GTECH_NAND2 port map( A => n3668, B => n3669, Z => n2509);
   U3755 : GTECH_NAND2 port map( A => tmp_data_curr_12_port, B => n3645, Z => 
                           n3669);
   U3756 : GTECH_NAND2 port map( A => n3554, B => ll_rx_data(12), Z => n3668);
   U3757 : GTECH_NAND2 port map( A => n3670, B => n3671, Z => n2508);
   U3758 : GTECH_NAND2 port map( A => tmp_data_curr_13_port, B => n3645, Z => 
                           n3671);
   U3759 : GTECH_NAND2 port map( A => n3554, B => ll_rx_data(13), Z => n3670);
   U3760 : GTECH_NAND2 port map( A => n3672, B => n3673, Z => n2507);
   U3761 : GTECH_NAND2 port map( A => tmp_data_curr_14_port, B => n3645, Z => 
                           n3673);
   U3762 : GTECH_NAND2 port map( A => n3554, B => ll_rx_data(14), Z => n3672);
   U3763 : GTECH_NAND2 port map( A => n3674, B => n3675, Z => n2506);
   U3764 : GTECH_NAND2 port map( A => tmp_data_curr_15_port, B => n3645, Z => 
                           n3675);
   U3765 : GTECH_NAND2 port map( A => n3554, B => ll_rx_data(15), Z => n3674);
   U3766 : GTECH_NAND2 port map( A => n3676, B => n3677, Z => n2505);
   U3767 : GTECH_NAND2 port map( A => tmp_data_curr_16_port, B => n3645, Z => 
                           n3677);
   U3768 : GTECH_NAND2 port map( A => n3554, B => ll_rx_data(16), Z => n3676);
   U3769 : GTECH_NAND2 port map( A => n3678, B => n3679, Z => n2504);
   U3770 : GTECH_NAND2 port map( A => tmp_data_curr_17_port, B => n3645, Z => 
                           n3679);
   U3771 : GTECH_NAND2 port map( A => n3554, B => ll_rx_data(17), Z => n3678);
   U3772 : GTECH_NAND2 port map( A => n3680, B => n3681, Z => n2503);
   U3773 : GTECH_NAND2 port map( A => tmp_data_curr_18_port, B => n3645, Z => 
                           n3681);
   U3774 : GTECH_NAND2 port map( A => n3554, B => ll_rx_data(18), Z => n3680);
   U3775 : GTECH_NAND2 port map( A => n3682, B => n3683, Z => n2502);
   U3776 : GTECH_NAND2 port map( A => tmp_data_curr_19_port, B => n3645, Z => 
                           n3683);
   U3777 : GTECH_NAND2 port map( A => n3554, B => ll_rx_data(19), Z => n3682);
   U3778 : GTECH_NAND2 port map( A => n3684, B => n3685, Z => n2501);
   U3779 : GTECH_NAND2 port map( A => tmp_data_curr_20_port, B => n3645, Z => 
                           n3685);
   U3780 : GTECH_NAND2 port map( A => n3554, B => ll_rx_data(20), Z => n3684);
   U3781 : GTECH_NAND2 port map( A => n3686, B => n3687, Z => n2500);
   U3782 : GTECH_NAND2 port map( A => tmp_data_curr_21_port, B => n3645, Z => 
                           n3687);
   U3783 : GTECH_NAND2 port map( A => n3554, B => ll_rx_data(21), Z => n3686);
   U3784 : GTECH_NAND2 port map( A => n3688, B => n3689, Z => n2499);
   U3785 : GTECH_NAND2 port map( A => tmp_data_curr_22_port, B => n3645, Z => 
                           n3689);
   U3786 : GTECH_NAND2 port map( A => n3554, B => ll_rx_data(22), Z => n3688);
   U3787 : GTECH_NAND2 port map( A => n3690, B => n3691, Z => n2498);
   U3788 : GTECH_NAND2 port map( A => tmp_data_curr_23_port, B => n3645, Z => 
                           n3691);
   U3789 : GTECH_NAND2 port map( A => n3554, B => ll_rx_data(23), Z => n3690);
   U3790 : GTECH_NAND2 port map( A => n3692, B => n3693, Z => n2497);
   U3791 : GTECH_NAND2 port map( A => tmp_data_curr_24_port, B => n3645, Z => 
                           n3693);
   U3792 : GTECH_NAND2 port map( A => n3554, B => ll_rx_data(24), Z => n3692);
   U3793 : GTECH_NAND2 port map( A => n3694, B => n3695, Z => n2496);
   U3794 : GTECH_NAND2 port map( A => tmp_data_curr_25_port, B => n3645, Z => 
                           n3695);
   U3795 : GTECH_NAND2 port map( A => n3554, B => ll_rx_data(25), Z => n3694);
   U3796 : GTECH_NAND2 port map( A => n3696, B => n3697, Z => n2495);
   U3797 : GTECH_NAND2 port map( A => tmp_data_curr_26_port, B => n3645, Z => 
                           n3697);
   U3798 : GTECH_NAND2 port map( A => n3554, B => ll_rx_data(26), Z => n3696);
   U3799 : GTECH_NAND2 port map( A => n3698, B => n3699, Z => n2494);
   U3800 : GTECH_NAND2 port map( A => tmp_data_curr_27_port, B => n3645, Z => 
                           n3699);
   U3801 : GTECH_NAND2 port map( A => n3554, B => ll_rx_data(27), Z => n3698);
   U3802 : GTECH_NAND2 port map( A => n3700, B => n3701, Z => n2493);
   U3803 : GTECH_NAND2 port map( A => tmp_data_curr_28_port, B => n3645, Z => 
                           n3701);
   U3804 : GTECH_NAND2 port map( A => n3554, B => ll_rx_data(28), Z => n3700);
   U3805 : GTECH_NAND2 port map( A => n3702, B => n3703, Z => n2492);
   U3806 : GTECH_NAND2 port map( A => tmp_data_curr_29_port, B => n3645, Z => 
                           n3703);
   U3807 : GTECH_NAND2 port map( A => n3554, B => ll_rx_data(29), Z => n3702);
   U3808 : GTECH_NAND2 port map( A => n3704, B => n3705, Z => n2491);
   U3809 : GTECH_NAND2 port map( A => tmp_data_curr_30_port, B => n3645, Z => 
                           n3705);
   U3810 : GTECH_NAND2 port map( A => n3554, B => ll_rx_data(30), Z => n3704);
   U3811 : GTECH_NAND2 port map( A => n3706, B => n3707, Z => n2490);
   U3812 : GTECH_NAND2 port map( A => tmp_data_curr_31_port, B => n3645, Z => 
                           n3707);
   U3813 : GTECH_NAND2 port map( A => n3554, B => ll_rx_data(31), Z => n3706);
   U3814 : GTECH_NAND2 port map( A => n3708, B => n3709, Z => n2489);
   U3815 : GTECH_NAND2 port map( A => ll_rx_data_be(0), B => n3710, Z => n3709)
                           ;
   U3816 : GTECH_NOT port map( A => n3711, Z => n3708);
   U3817 : GTECH_NOR2 port map( A => n3712, B => n2282_port, Z => n3711);
   U3818 : GTECH_NAND2 port map( A => n3713, B => n3714, Z => n2488);
   U3819 : GTECH_NAND2 port map( A => ll_rx_data_be(1), B => n3710, Z => n3714)
                           ;
   U3820 : GTECH_NOT port map( A => n3715, Z => n3713);
   U3821 : GTECH_NOR2 port map( A => n3712, B => n2283_port, Z => n3715);
   U3822 : GTECH_NAND2 port map( A => n3716, B => n3717, Z => n2487);
   U3823 : GTECH_NAND2 port map( A => ll_rx_data_be(2), B => n3710, Z => n3717)
                           ;
   U3824 : GTECH_NOT port map( A => n3718, Z => n3716);
   U3825 : GTECH_NOR2 port map( A => n3712, B => n2284_port, Z => n3718);
   U3826 : GTECH_NAND2 port map( A => n3719, B => n3720, Z => n2486);
   U3827 : GTECH_NAND2 port map( A => ll_rx_data_be(3), B => n3710, Z => n3720)
                           ;
   U3828 : GTECH_NAND2 port map( A => n3546, B => n3539, Z => n3710);
   U3829 : GTECH_NAND2 port map( A => n3079, B => n3140, Z => n3539);
   U3830 : GTECH_NOT port map( A => n3721, Z => n3140);
   U3831 : GTECH_NAND2 port map( A => n3722, B => n3145, Z => n3721);
   U3832 : GTECH_NOR2 port map( A => ll_rx_src_rdy_n, B => ll_rx_sof_n, Z => 
                           n3145);
   U3833 : GTECH_NOR2 port map( A => ack, B => n3475, Z => n3722);
   U3834 : GTECH_NOT port map( A => n2733, Z => n3475);
   U3835 : GTECH_NOT port map( A => n3178, Z => n3079);
   U3836 : GTECH_NAND2 port map( A => n3723, B => n3150, Z => n3178);
   U3837 : GTECH_NAND2 port map( A => n3645, B => n3724, Z => n3719);
   U3838 : GTECH_NOT port map( A => n2285_port, Z => n3724);
   U3839 : GTECH_NOT port map( A => n3712, Z => n3645);
   U3840 : GTECH_NAND2 port map( A => reset_b, B => n3725, Z => n3712);
   U3841 : GTECH_NAND2 port map( A => n3637, B => n3150, Z => n3725);
   U3842 : GTECH_NOR2 port map( A => n3078, B => n3551, Z => n3637);
   U3843 : GTECH_NOT port map( A => n3139, Z => n3078);
   U3844 : GTECH_NAND2 port map( A => n3726, B => n3727, Z => n2485);
   U3845 : GTECH_NAND2 port map( A => n3728, B => trans_type_curr_0_port, Z => 
                           n3727);
   U3846 : GTECH_NAND2 port map( A => n3729, B => ll_rx_data(28), Z => n3726);
   U3847 : GTECH_NAND2 port map( A => n3730, B => n3731, Z => n2484);
   U3848 : GTECH_NAND2 port map( A => n3728, B => trans_type_curr_1_port, Z => 
                           n3731);
   U3849 : GTECH_NAND2 port map( A => n3729, B => ll_rx_data(29), Z => n3730);
   U3850 : GTECH_NAND2 port map( A => n3732, B => n3733, Z => n2483);
   U3851 : GTECH_NAND2 port map( A => trans_type_curr_2_port, B => n3728, Z => 
                           n3733);
   U3852 : GTECH_NAND2 port map( A => n3729, B => ll_rx_data(30), Z => n3732);
   U3853 : GTECH_NAND2 port map( A => n3734, B => n3735, Z => n2482);
   U3854 : GTECH_NAND2 port map( A => trans_type_curr_3_port, B => n3728, Z => 
                           n3735);
   U3855 : GTECH_NOT port map( A => n3628, Z => n3728);
   U3856 : GTECH_NAND2 port map( A => reset_b, B => n3075, Z => n3628);
   U3857 : GTECH_NAND2 port map( A => n3736, B => n3077, Z => n3075);
   U3858 : GTECH_NOR2 port map( A => sic_rx_fsm_cs_2_port, B => n3551, Z => 
                           n3736);
   U3859 : GTECH_NOR2 port map( A => n3737, B => n3738, Z => n3551);
   U3860 : GTECH_NAND2 port map( A => n3150, B => n3739, Z => n3737);
   U3861 : GTECH_NAND2 port map( A => n3729, B => ll_rx_data(31), Z => n3734);
   U3862 : GTECH_NAND2 port map( A => n3740, B => n3741, Z => n2481);
   U3863 : GTECH_NAND2 port map( A => reset_b, B => n3226, Z => n3741);
   U3864 : GTECH_NOR2 port map( A => n3742, B => n3743, Z => n3740);
   U3865 : GTECH_NOR2 port map( A => n3744, B => n3745, Z => n3743);
   U3866 : GTECH_NOR2 port map( A => n3746, B => n2733, Z => n3744);
   U3867 : GTECH_NOR2 port map( A => n3245, B => n2745, Z => n2733);
   U3868 : GTECH_NOT port map( A => n3747, Z => n3746);
   U3869 : GTECH_NAND2 port map( A => n3748, B => n3749, Z => n3747);
   U3870 : GTECH_NOR2 port map( A => n3745, B => n3750, Z => n3742);
   U3871 : GTECH_NAND2 port map( A => reset_b, B => n3751, Z => n3750);
   U3872 : GTECH_NAND2 port map( A => n3752, B => n3753, Z => n3751);
   U3873 : GTECH_NOR2 port map( A => n3754, B => n3755, Z => n3753);
   U3874 : GTECH_NAND2 port map( A => n3250, B => n3756, Z => n3755);
   U3875 : GTECH_NAND2 port map( A => n2792, B => n3407, Z => n3754);
   U3876 : GTECH_NOR2 port map( A => n3757, B => n3758, Z => n3752);
   U3877 : GTECH_NAND2 port map( A => n3161, B => n3251, Z => n3758);
   U3878 : GTECH_NAND2 port map( A => n3759, B => n3760, Z => n2472);
   U3879 : GTECH_NAND2 port map( A => tmp_data_curr_0_port, B => n3761, Z => 
                           n3760);
   U3880 : GTECH_NAND2 port map( A => n3762, B => mem_data_out_0_port, Z => 
                           n3759);
   U3881 : GTECH_NAND2 port map( A => n3763, B => n3764, Z => n2471);
   U3882 : GTECH_NAND2 port map( A => tmp_data_curr_1_port, B => n3761, Z => 
                           n3764);
   U3883 : GTECH_NAND2 port map( A => n3762, B => mem_data_out_1_port, Z => 
                           n3763);
   U3884 : GTECH_NAND2 port map( A => n3765, B => n3766, Z => n2470);
   U3885 : GTECH_NAND2 port map( A => tmp_data_curr_2_port, B => n3761, Z => 
                           n3766);
   U3886 : GTECH_NAND2 port map( A => n3762, B => mem_data_out_2_port, Z => 
                           n3765);
   U3887 : GTECH_NAND2 port map( A => n3767, B => n3768, Z => n2469);
   U3888 : GTECH_NAND2 port map( A => tmp_data_curr_3_port, B => n3761, Z => 
                           n3768);
   U3889 : GTECH_NAND2 port map( A => n3762, B => mem_data_out_3_port, Z => 
                           n3767);
   U3890 : GTECH_NAND2 port map( A => n3769, B => n3770, Z => n2468);
   U3891 : GTECH_NAND2 port map( A => tmp_data_curr_4_port, B => n3761, Z => 
                           n3770);
   U3892 : GTECH_NAND2 port map( A => n3762, B => mem_data_out_4_port, Z => 
                           n3769);
   U3893 : GTECH_NAND2 port map( A => n3771, B => n3772, Z => n2467);
   U3894 : GTECH_NAND2 port map( A => tmp_data_curr_5_port, B => n3761, Z => 
                           n3772);
   U3895 : GTECH_NAND2 port map( A => n3762, B => mem_data_out_5_port, Z => 
                           n3771);
   U3896 : GTECH_NAND2 port map( A => n3773, B => n3774, Z => n2466);
   U3897 : GTECH_NAND2 port map( A => tmp_data_curr_6_port, B => n3761, Z => 
                           n3774);
   U3898 : GTECH_NAND2 port map( A => n3762, B => mem_data_out_6_port, Z => 
                           n3773);
   U3899 : GTECH_NAND2 port map( A => n3775, B => n3776, Z => n2465);
   U3900 : GTECH_NAND2 port map( A => tmp_data_curr_7_port, B => n3761, Z => 
                           n3776);
   U3901 : GTECH_NAND2 port map( A => n3762, B => mem_data_out_7_port, Z => 
                           n3775);
   U3902 : GTECH_NAND2 port map( A => n3777, B => n3778, Z => n2464);
   U3903 : GTECH_NAND2 port map( A => tmp_data_curr_8_port, B => n3761, Z => 
                           n3778);
   U3904 : GTECH_NAND2 port map( A => n3762, B => mem_data_out_8_port, Z => 
                           n3777);
   U3905 : GTECH_NAND2 port map( A => n3779, B => n3780, Z => n2463);
   U3906 : GTECH_NAND2 port map( A => tmp_data_curr_9_port, B => n3761, Z => 
                           n3780);
   U3907 : GTECH_NAND2 port map( A => n3762, B => mem_data_out_9_port, Z => 
                           n3779);
   U3908 : GTECH_NAND2 port map( A => n3781, B => n3782, Z => n2462);
   U3909 : GTECH_NAND2 port map( A => tmp_data_curr_10_port, B => n3761, Z => 
                           n3782);
   U3910 : GTECH_NAND2 port map( A => n3762, B => mem_data_out_10_port, Z => 
                           n3781);
   U3911 : GTECH_NAND2 port map( A => n3783, B => n3784, Z => n2461);
   U3912 : GTECH_NAND2 port map( A => tmp_data_curr_11_port, B => n3761, Z => 
                           n3784);
   U3913 : GTECH_NAND2 port map( A => n3762, B => mem_data_out_11_port, Z => 
                           n3783);
   U3914 : GTECH_NAND2 port map( A => n3785, B => n3786, Z => n2460);
   U3915 : GTECH_NAND2 port map( A => tmp_data_curr_12_port, B => n3761, Z => 
                           n3786);
   U3916 : GTECH_NAND2 port map( A => n3762, B => mem_data_out_12_port, Z => 
                           n3785);
   U3917 : GTECH_NAND2 port map( A => n3787, B => n3788, Z => n2459);
   U3918 : GTECH_NAND2 port map( A => tmp_data_curr_13_port, B => n3761, Z => 
                           n3788);
   U3919 : GTECH_NAND2 port map( A => n3762, B => mem_data_out_13_port, Z => 
                           n3787);
   U3920 : GTECH_NAND2 port map( A => n3789, B => n3790, Z => n2458);
   U3921 : GTECH_NAND2 port map( A => tmp_data_curr_14_port, B => n3761, Z => 
                           n3790);
   U3922 : GTECH_NAND2 port map( A => n3762, B => mem_data_out_14_port, Z => 
                           n3789);
   U3923 : GTECH_NAND2 port map( A => n3791, B => n3792, Z => n2457);
   U3924 : GTECH_NAND2 port map( A => tmp_data_curr_15_port, B => n3761, Z => 
                           n3792);
   U3925 : GTECH_NAND2 port map( A => n3762, B => mem_data_out_15_port, Z => 
                           n3791);
   U3926 : GTECH_NAND2 port map( A => n3793, B => n3794, Z => n2456);
   U3927 : GTECH_NAND2 port map( A => tmp_data_curr_16_port, B => n3761, Z => 
                           n3794);
   U3928 : GTECH_NAND2 port map( A => n3762, B => mem_data_out_16_port, Z => 
                           n3793);
   U3929 : GTECH_NAND2 port map( A => n3795, B => n3796, Z => n2455);
   U3930 : GTECH_NAND2 port map( A => tmp_data_curr_17_port, B => n3761, Z => 
                           n3796);
   U3931 : GTECH_NAND2 port map( A => n3762, B => mem_data_out_17_port, Z => 
                           n3795);
   U3932 : GTECH_NAND2 port map( A => n3797, B => n3798, Z => n2454);
   U3933 : GTECH_NAND2 port map( A => tmp_data_curr_18_port, B => n3761, Z => 
                           n3798);
   U3934 : GTECH_NAND2 port map( A => n3762, B => mem_data_out_18_port, Z => 
                           n3797);
   U3935 : GTECH_NAND2 port map( A => n3799, B => n3800, Z => n2453);
   U3936 : GTECH_NAND2 port map( A => tmp_data_curr_19_port, B => n3761, Z => 
                           n3800);
   U3937 : GTECH_NAND2 port map( A => n3762, B => mem_data_out_19_port, Z => 
                           n3799);
   U3938 : GTECH_NAND2 port map( A => n3801, B => n3802, Z => n2452);
   U3939 : GTECH_NAND2 port map( A => tmp_data_curr_20_port, B => n3761, Z => 
                           n3802);
   U3940 : GTECH_NAND2 port map( A => n3762, B => mem_data_out_20_port, Z => 
                           n3801);
   U3941 : GTECH_NAND2 port map( A => n3803, B => n3804, Z => n2451);
   U3942 : GTECH_NAND2 port map( A => tmp_data_curr_21_port, B => n3761, Z => 
                           n3804);
   U3943 : GTECH_NAND2 port map( A => n3762, B => mem_data_out_21_port, Z => 
                           n3803);
   U3944 : GTECH_NAND2 port map( A => n3805, B => n3806, Z => n2450);
   U3945 : GTECH_NAND2 port map( A => tmp_data_curr_22_port, B => n3761, Z => 
                           n3806);
   U3946 : GTECH_NAND2 port map( A => n3762, B => mem_data_out_22_port, Z => 
                           n3805);
   U3947 : GTECH_NAND2 port map( A => n3807, B => n3808, Z => n2449);
   U3948 : GTECH_NAND2 port map( A => tmp_data_curr_23_port, B => n3761, Z => 
                           n3808);
   U3949 : GTECH_NAND2 port map( A => n3762, B => mem_data_out_23_port, Z => 
                           n3807);
   U3950 : GTECH_NAND2 port map( A => n3809, B => n3810, Z => n2448);
   U3951 : GTECH_NAND2 port map( A => tmp_data_curr_24_port, B => n3761, Z => 
                           n3810);
   U3952 : GTECH_NAND2 port map( A => n3762, B => mem_data_out_24_port, Z => 
                           n3809);
   U3953 : GTECH_NAND2 port map( A => n3811, B => n3812, Z => n2447);
   U3954 : GTECH_NAND2 port map( A => tmp_data_curr_25_port, B => n3761, Z => 
                           n3812);
   U3955 : GTECH_NAND2 port map( A => n3762, B => mem_data_out_25_port, Z => 
                           n3811);
   U3956 : GTECH_NAND2 port map( A => n3813, B => n3814, Z => n2446);
   U3957 : GTECH_NAND2 port map( A => tmp_data_curr_26_port, B => n3761, Z => 
                           n3814);
   U3958 : GTECH_NAND2 port map( A => n3762, B => mem_data_out_26_port, Z => 
                           n3813);
   U3959 : GTECH_NAND2 port map( A => n3815, B => n3816, Z => n2445);
   U3960 : GTECH_NAND2 port map( A => tmp_data_curr_27_port, B => n3761, Z => 
                           n3816);
   U3961 : GTECH_NAND2 port map( A => n3762, B => mem_data_out_27_port, Z => 
                           n3815);
   U3962 : GTECH_NAND2 port map( A => n3817, B => n3818, Z => n2444);
   U3963 : GTECH_NAND2 port map( A => tmp_data_curr_28_port, B => n3761, Z => 
                           n3818);
   U3964 : GTECH_NAND2 port map( A => n3762, B => mem_data_out_28_port, Z => 
                           n3817);
   U3965 : GTECH_NAND2 port map( A => n3819, B => n3820, Z => n2443);
   U3966 : GTECH_NAND2 port map( A => tmp_data_curr_29_port, B => n3761, Z => 
                           n3820);
   U3967 : GTECH_NAND2 port map( A => n3762, B => mem_data_out_29_port, Z => 
                           n3819);
   U3968 : GTECH_NAND2 port map( A => n3821, B => n3822, Z => n2442);
   U3969 : GTECH_NAND2 port map( A => tmp_data_curr_30_port, B => n3761, Z => 
                           n3822);
   U3970 : GTECH_NAND2 port map( A => n3762, B => mem_data_out_30_port, Z => 
                           n3821);
   U3971 : GTECH_NAND2 port map( A => n3823, B => n3824, Z => n2441);
   U3972 : GTECH_NAND2 port map( A => tmp_data_curr_31_port, B => n3761, Z => 
                           n3824);
   U3973 : GTECH_NAND2 port map( A => n3825, B => n3826, Z => n3761);
   U3974 : GTECH_NAND2 port map( A => n3827, B => n3749, Z => n3826);
   U3975 : GTECH_NOT port map( A => n3828, Z => n3827);
   U3976 : GTECH_NAND2 port map( A => n3762, B => mem_data_out_31_port, Z => 
                           n3823);
   U3977 : GTECH_NOR2 port map( A => n2745, B => n3829, Z => n3762);
   U3978 : GTECH_NOR2 port map( A => n3830, B => n3831, Z => n3829);
   U3979 : GTECH_NAND2 port map( A => n3213, B => n3756, Z => n3831);
   U3980 : GTECH_NAND2 port map( A => n3832, B => n3833, Z => n3830);
   U3981 : GTECH_NAND2 port map( A => n3828, B => n3225, Z => n3832);
   U3982 : GTECH_NAND2 port map( A => n3834, B => n3835, Z => n2408);
   U3983 : GTECH_NOR2 port map( A => n3836, B => n3837, Z => n3835);
   U3984 : GTECH_NAND2 port map( A => n3838, B => n3839, Z => n3837);
   U3985 : GTECH_NAND2 port map( A => tmp_addr_curr_0_port, B => n3840, Z => 
                           n3839);
   U3986 : GTECH_NAND2 port map( A => N1665, B => n3841, Z => n3838);
   U3987 : GTECH_NOT port map( A => n3842, Z => n3836);
   U3988 : GTECH_NAND2 port map( A => N1550, B => n3843, Z => n3842);
   U3989 : GTECH_NOR2 port map( A => n3844, B => n3845, Z => n3834);
   U3990 : GTECH_NAND2 port map( A => n3846, B => n3847, Z => n3845);
   U3991 : GTECH_NAND2 port map( A => n3848, B => n4779, Z => n3847);
   U3992 : GTECH_NAND2 port map( A => N1103, B => n3849, Z => n3846);
   U3993 : GTECH_NOT port map( A => n3850, Z => n3844);
   U3994 : GTECH_NAND2 port map( A => N1410, B => n3851, Z => n3850);
   U3995 : GTECH_NAND2 port map( A => n3852, B => n3853, Z => n2407);
   U3996 : GTECH_NOR2 port map( A => n3854, B => n3855, Z => n3853);
   U3997 : GTECH_NAND2 port map( A => n3856, B => n3857, Z => n3855);
   U3998 : GTECH_NAND2 port map( A => tmp_addr_curr_1_port, B => n3840, Z => 
                           n3857);
   U3999 : GTECH_NAND2 port map( A => N1666, B => n3841, Z => n3856);
   U4000 : GTECH_NOT port map( A => n3858, Z => n3854);
   U4001 : GTECH_NAND2 port map( A => N1551, B => n3843, Z => n3858);
   U4002 : GTECH_NOR2 port map( A => n3859, B => n3860, Z => n3852);
   U4003 : GTECH_NAND2 port map( A => n3861, B => n3862, Z => n3860);
   U4004 : GTECH_NAND2 port map( A => n3848, B => n4780, Z => n3862);
   U4005 : GTECH_NAND2 port map( A => N1104, B => n3849, Z => n3861);
   U4006 : GTECH_NOT port map( A => n3863, Z => n3859);
   U4007 : GTECH_NAND2 port map( A => N1411, B => n3851, Z => n3863);
   U4008 : GTECH_NAND2 port map( A => n3864, B => n3865, Z => n2406);
   U4009 : GTECH_NOR2 port map( A => n3866, B => n3867, Z => n3865);
   U4010 : GTECH_NAND2 port map( A => n3868, B => n3869, Z => n3867);
   U4011 : GTECH_NAND2 port map( A => tmp_addr_curr_2_port, B => n3840, Z => 
                           n3869);
   U4012 : GTECH_NOR2 port map( A => n3870, B => n3871, Z => n3840);
   U4013 : GTECH_NOR2 port map( A => n3872, B => n3873, Z => n3871);
   U4014 : GTECH_NAND2 port map( A => N1667, B => n3841, Z => n3868);
   U4015 : GTECH_NOT port map( A => n3874, Z => n3866);
   U4016 : GTECH_NAND2 port map( A => N1552, B => n3843, Z => n3874);
   U4017 : GTECH_NOR2 port map( A => n3875, B => n3876, Z => n3864);
   U4018 : GTECH_NAND2 port map( A => n3877, B => n3878, Z => n3876);
   U4019 : GTECH_NAND2 port map( A => n3848, B => n4781, Z => n3878);
   U4020 : GTECH_NAND2 port map( A => N1105, B => n3849, Z => n3877);
   U4021 : GTECH_NOT port map( A => n3879, Z => n3875);
   U4022 : GTECH_NAND2 port map( A => N1412, B => n3851, Z => n3879);
   U4023 : GTECH_NAND2 port map( A => n3880, B => n3881, Z => n2405);
   U4024 : GTECH_NOR2 port map( A => n3882, B => n3883, Z => n3881);
   U4025 : GTECH_NAND2 port map( A => n3884, B => n3885, Z => n3883);
   U4026 : GTECH_NAND2 port map( A => N1553, B => n3843, Z => n3885);
   U4027 : GTECH_NAND2 port map( A => n3848, B => n4782, Z => n3884);
   U4028 : GTECH_NAND2 port map( A => n3886, B => n3887, Z => n3882);
   U4029 : GTECH_NAND2 port map( A => N1668, B => n3841, Z => n3886);
   U4030 : GTECH_NOR2 port map( A => n3888, B => n3889, Z => n3880);
   U4031 : GTECH_NAND2 port map( A => n3890, B => n3891, Z => n3889);
   U4032 : GTECH_NAND2 port map( A => N1106, B => n3849, Z => n3891);
   U4033 : GTECH_NAND2 port map( A => N1413, B => n3851, Z => n3890);
   U4034 : GTECH_NOR2 port map( A => n3870, B => n3892, Z => n3888);
   U4035 : GTECH_NAND2 port map( A => n3893, B => n3894, Z => n2404);
   U4036 : GTECH_NOR2 port map( A => n3895, B => n3896, Z => n3894);
   U4037 : GTECH_NAND2 port map( A => n3897, B => n3898, Z => n3896);
   U4038 : GTECH_NAND2 port map( A => N1554, B => n3843, Z => n3898);
   U4039 : GTECH_NAND2 port map( A => n3848, B => n4783, Z => n3897);
   U4040 : GTECH_NAND2 port map( A => n3899, B => n3887, Z => n3895);
   U4041 : GTECH_NAND2 port map( A => N1669, B => n3841, Z => n3899);
   U4042 : GTECH_NOR2 port map( A => n3900, B => n3901, Z => n3893);
   U4043 : GTECH_NAND2 port map( A => n3902, B => n3903, Z => n3901);
   U4044 : GTECH_NAND2 port map( A => N1107, B => n3849, Z => n3903);
   U4045 : GTECH_NAND2 port map( A => N1414, B => n3851, Z => n3902);
   U4046 : GTECH_NOR2 port map( A => n3870, B => n3904, Z => n3900);
   U4047 : GTECH_NAND2 port map( A => n3905, B => n3906, Z => n2403);
   U4048 : GTECH_NOR2 port map( A => n3907, B => n3908, Z => n3906);
   U4049 : GTECH_NAND2 port map( A => n3909, B => n3910, Z => n3908);
   U4050 : GTECH_NAND2 port map( A => N1555, B => n3843, Z => n3910);
   U4051 : GTECH_NAND2 port map( A => n3848, B => n4784, Z => n3909);
   U4052 : GTECH_NAND2 port map( A => n3911, B => n3887, Z => n3907);
   U4053 : GTECH_NAND2 port map( A => N1670, B => n3841, Z => n3911);
   U4054 : GTECH_NOR2 port map( A => n3912, B => n3913, Z => n3905);
   U4055 : GTECH_NAND2 port map( A => n3914, B => n3915, Z => n3913);
   U4056 : GTECH_NAND2 port map( A => N1108, B => n3849, Z => n3915);
   U4057 : GTECH_NAND2 port map( A => N1415, B => n3851, Z => n3914);
   U4058 : GTECH_NOR2 port map( A => n3870, B => n3916, Z => n3912);
   U4059 : GTECH_NAND2 port map( A => n3917, B => n3918, Z => n2402);
   U4060 : GTECH_NOR2 port map( A => n3919, B => n3920, Z => n3918);
   U4061 : GTECH_NAND2 port map( A => n3921, B => n3922, Z => n3920);
   U4062 : GTECH_NAND2 port map( A => N1556, B => n3843, Z => n3922);
   U4063 : GTECH_NAND2 port map( A => n3848, B => n4785, Z => n3921);
   U4064 : GTECH_NAND2 port map( A => n3923, B => n3887, Z => n3919);
   U4065 : GTECH_NAND2 port map( A => N1671, B => n3841, Z => n3923);
   U4066 : GTECH_NOR2 port map( A => n3924, B => n3925, Z => n3917);
   U4067 : GTECH_NAND2 port map( A => n3926, B => n3927, Z => n3925);
   U4068 : GTECH_NAND2 port map( A => N1109, B => n3849, Z => n3927);
   U4069 : GTECH_NAND2 port map( A => N1416, B => n3851, Z => n3926);
   U4070 : GTECH_NOR2 port map( A => n3870, B => n3928, Z => n3924);
   U4071 : GTECH_NAND2 port map( A => n3929, B => n3930, Z => n2401);
   U4072 : GTECH_NOR2 port map( A => n3931, B => n3932, Z => n3930);
   U4073 : GTECH_NAND2 port map( A => n3933, B => n3934, Z => n3932);
   U4074 : GTECH_NAND2 port map( A => N1557, B => n3843, Z => n3934);
   U4075 : GTECH_NAND2 port map( A => n3848, B => n4786, Z => n3933);
   U4076 : GTECH_NAND2 port map( A => n3935, B => n3887, Z => n3931);
   U4077 : GTECH_NAND2 port map( A => N1672, B => n3841, Z => n3935);
   U4078 : GTECH_NOR2 port map( A => n3936, B => n3937, Z => n3929);
   U4079 : GTECH_NAND2 port map( A => n3938, B => n3939, Z => n3937);
   U4080 : GTECH_NAND2 port map( A => N1110, B => n3849, Z => n3939);
   U4081 : GTECH_NAND2 port map( A => N1417, B => n3851, Z => n3938);
   U4082 : GTECH_NOR2 port map( A => n3870, B => n3940, Z => n3936);
   U4083 : GTECH_NAND2 port map( A => n3941, B => n3942, Z => n2400);
   U4084 : GTECH_NOR2 port map( A => n3943, B => n3944, Z => n3942);
   U4085 : GTECH_NAND2 port map( A => n3945, B => n3946, Z => n3944);
   U4086 : GTECH_NAND2 port map( A => N1558, B => n3843, Z => n3946);
   U4087 : GTECH_NAND2 port map( A => n3848, B => n4787, Z => n3945);
   U4088 : GTECH_NAND2 port map( A => n3947, B => n3887, Z => n3943);
   U4089 : GTECH_NAND2 port map( A => N1673, B => n3841, Z => n3947);
   U4090 : GTECH_NOR2 port map( A => n3948, B => n3949, Z => n3941);
   U4091 : GTECH_NAND2 port map( A => n3950, B => n3951, Z => n3949);
   U4092 : GTECH_NAND2 port map( A => N1111, B => n3849, Z => n3951);
   U4093 : GTECH_NAND2 port map( A => N1418, B => n3851, Z => n3950);
   U4094 : GTECH_NOR2 port map( A => n3870, B => n3952, Z => n3948);
   U4095 : GTECH_NAND2 port map( A => n3953, B => n3954, Z => n2399);
   U4096 : GTECH_NOR2 port map( A => n3955, B => n3956, Z => n3954);
   U4097 : GTECH_NAND2 port map( A => n3957, B => n3958, Z => n3956);
   U4098 : GTECH_NAND2 port map( A => N1559, B => n3843, Z => n3958);
   U4099 : GTECH_NAND2 port map( A => n3848, B => n4788, Z => n3957);
   U4100 : GTECH_NAND2 port map( A => n3959, B => n3887, Z => n3955);
   U4101 : GTECH_NAND2 port map( A => N1674, B => n3841, Z => n3959);
   U4102 : GTECH_NOR2 port map( A => n3960, B => n3961, Z => n3953);
   U4103 : GTECH_NAND2 port map( A => n3962, B => n3963, Z => n3961);
   U4104 : GTECH_NAND2 port map( A => N1112, B => n3849, Z => n3963);
   U4105 : GTECH_NAND2 port map( A => N1419, B => n3851, Z => n3962);
   U4106 : GTECH_NOR2 port map( A => n3870, B => n3964, Z => n3960);
   U4107 : GTECH_NAND2 port map( A => n3965, B => n3966, Z => n2398);
   U4108 : GTECH_NOR2 port map( A => n3967, B => n3968, Z => n3966);
   U4109 : GTECH_NAND2 port map( A => n3969, B => n3970, Z => n3968);
   U4110 : GTECH_NAND2 port map( A => N1560, B => n3843, Z => n3970);
   U4111 : GTECH_NAND2 port map( A => n3848, B => n4789, Z => n3969);
   U4112 : GTECH_NAND2 port map( A => n3971, B => n3887, Z => n3967);
   U4113 : GTECH_NAND2 port map( A => N1675, B => n3841, Z => n3971);
   U4114 : GTECH_NOR2 port map( A => n3972, B => n3973, Z => n3965);
   U4115 : GTECH_NAND2 port map( A => n3974, B => n3975, Z => n3973);
   U4116 : GTECH_NAND2 port map( A => N1113, B => n3849, Z => n3975);
   U4117 : GTECH_NAND2 port map( A => N1420, B => n3851, Z => n3974);
   U4118 : GTECH_NOR2 port map( A => n3870, B => n3976, Z => n3972);
   U4119 : GTECH_NAND2 port map( A => n3977, B => n3978, Z => n2397);
   U4120 : GTECH_NOR2 port map( A => n3979, B => n3980, Z => n3978);
   U4121 : GTECH_NAND2 port map( A => n3981, B => n3982, Z => n3980);
   U4122 : GTECH_NAND2 port map( A => N1561, B => n3843, Z => n3982);
   U4123 : GTECH_NAND2 port map( A => n3848, B => n4790, Z => n3981);
   U4124 : GTECH_NAND2 port map( A => n3983, B => n3887, Z => n3979);
   U4125 : GTECH_NAND2 port map( A => N1676, B => n3841, Z => n3983);
   U4126 : GTECH_NOR2 port map( A => n3984, B => n3985, Z => n3977);
   U4127 : GTECH_NAND2 port map( A => n3986, B => n3987, Z => n3985);
   U4128 : GTECH_NAND2 port map( A => N1114, B => n3849, Z => n3987);
   U4129 : GTECH_NAND2 port map( A => N1421, B => n3851, Z => n3986);
   U4130 : GTECH_NOR2 port map( A => n3870, B => n3988, Z => n3984);
   U4131 : GTECH_NAND2 port map( A => n3989, B => n3990, Z => n2396);
   U4132 : GTECH_NOR2 port map( A => n3991, B => n3992, Z => n3990);
   U4133 : GTECH_NAND2 port map( A => n3993, B => n3994, Z => n3992);
   U4134 : GTECH_NAND2 port map( A => N1562, B => n3843, Z => n3994);
   U4135 : GTECH_NAND2 port map( A => n3848, B => n4791, Z => n3993);
   U4136 : GTECH_NAND2 port map( A => n3995, B => n3887, Z => n3991);
   U4137 : GTECH_NAND2 port map( A => N1677, B => n3841, Z => n3995);
   U4138 : GTECH_NOR2 port map( A => n3996, B => n3997, Z => n3989);
   U4139 : GTECH_NAND2 port map( A => n3998, B => n3999, Z => n3997);
   U4140 : GTECH_NAND2 port map( A => N1115, B => n3849, Z => n3999);
   U4141 : GTECH_NAND2 port map( A => N1422, B => n3851, Z => n3998);
   U4142 : GTECH_NOR2 port map( A => n3870, B => n4000, Z => n3996);
   U4143 : GTECH_NAND2 port map( A => n4001, B => n4002, Z => n2395);
   U4144 : GTECH_NOR2 port map( A => n4003, B => n4004, Z => n4002);
   U4145 : GTECH_NAND2 port map( A => n4005, B => n4006, Z => n4004);
   U4146 : GTECH_NAND2 port map( A => N1563, B => n3843, Z => n4006);
   U4147 : GTECH_NAND2 port map( A => n3848, B => n4792, Z => n4005);
   U4148 : GTECH_NAND2 port map( A => n4007, B => n3887, Z => n4003);
   U4149 : GTECH_NAND2 port map( A => N1678, B => n3841, Z => n4007);
   U4150 : GTECH_NOR2 port map( A => n4008, B => n4009, Z => n4001);
   U4151 : GTECH_NAND2 port map( A => n4010, B => n4011, Z => n4009);
   U4152 : GTECH_NAND2 port map( A => N1116, B => n3849, Z => n4011);
   U4153 : GTECH_NAND2 port map( A => N1423, B => n3851, Z => n4010);
   U4154 : GTECH_NOR2 port map( A => n3870, B => n4012, Z => n4008);
   U4155 : GTECH_NAND2 port map( A => n4013, B => n4014, Z => n2394);
   U4156 : GTECH_NOR2 port map( A => n4015, B => n4016, Z => n4014);
   U4157 : GTECH_NAND2 port map( A => n4017, B => n4018, Z => n4016);
   U4158 : GTECH_NAND2 port map( A => N1564, B => n3843, Z => n4018);
   U4159 : GTECH_NAND2 port map( A => n3848, B => n4793, Z => n4017);
   U4160 : GTECH_NAND2 port map( A => n4019, B => n3887, Z => n4015);
   U4161 : GTECH_NAND2 port map( A => N1679, B => n3841, Z => n4019);
   U4162 : GTECH_NOR2 port map( A => n4020, B => n4021, Z => n4013);
   U4163 : GTECH_NAND2 port map( A => n4022, B => n4023, Z => n4021);
   U4164 : GTECH_NAND2 port map( A => N1117, B => n3849, Z => n4023);
   U4165 : GTECH_NAND2 port map( A => N1424, B => n3851, Z => n4022);
   U4166 : GTECH_NOR2 port map( A => n3870, B => n4024, Z => n4020);
   U4167 : GTECH_NAND2 port map( A => n4025, B => n4026, Z => n2393);
   U4168 : GTECH_NOR2 port map( A => n4027, B => n4028, Z => n4026);
   U4169 : GTECH_NAND2 port map( A => n4029, B => n4030, Z => n4028);
   U4170 : GTECH_NAND2 port map( A => N1565, B => n3843, Z => n4030);
   U4171 : GTECH_NAND2 port map( A => n3848, B => n4794, Z => n4029);
   U4172 : GTECH_NAND2 port map( A => n4031, B => n3887, Z => n4027);
   U4173 : GTECH_NAND2 port map( A => N1680, B => n3841, Z => n4031);
   U4174 : GTECH_NOR2 port map( A => n4032, B => n4033, Z => n4025);
   U4175 : GTECH_NAND2 port map( A => n4034, B => n4035, Z => n4033);
   U4176 : GTECH_NAND2 port map( A => N1118, B => n3849, Z => n4035);
   U4177 : GTECH_NAND2 port map( A => N1425, B => n3851, Z => n4034);
   U4178 : GTECH_NOR2 port map( A => n3870, B => n4036, Z => n4032);
   U4179 : GTECH_NAND2 port map( A => n4037, B => n4038, Z => n2392);
   U4180 : GTECH_NOR2 port map( A => n4039, B => n4040, Z => n4038);
   U4181 : GTECH_NAND2 port map( A => n4041, B => n4042, Z => n4040);
   U4182 : GTECH_NAND2 port map( A => N1566, B => n3843, Z => n4042);
   U4183 : GTECH_NAND2 port map( A => n3848, B => n4795, Z => n4041);
   U4184 : GTECH_NAND2 port map( A => n4043, B => n3887, Z => n4039);
   U4185 : GTECH_NAND2 port map( A => N1681, B => n3841, Z => n4043);
   U4186 : GTECH_NOR2 port map( A => n4044, B => n4045, Z => n4037);
   U4187 : GTECH_NAND2 port map( A => n4046, B => n4047, Z => n4045);
   U4188 : GTECH_NAND2 port map( A => N1119, B => n3849, Z => n4047);
   U4189 : GTECH_NAND2 port map( A => N1426, B => n3851, Z => n4046);
   U4190 : GTECH_NOR2 port map( A => n3870, B => n4048, Z => n4044);
   U4191 : GTECH_NAND2 port map( A => n4049, B => n4050, Z => n2391);
   U4192 : GTECH_NOR2 port map( A => n4051, B => n4052, Z => n4050);
   U4193 : GTECH_NAND2 port map( A => n4053, B => n4054, Z => n4052);
   U4194 : GTECH_NAND2 port map( A => N1567, B => n3843, Z => n4054);
   U4195 : GTECH_NAND2 port map( A => n3848, B => n4796, Z => n4053);
   U4196 : GTECH_NAND2 port map( A => n4055, B => n3887, Z => n4051);
   U4197 : GTECH_NAND2 port map( A => N1682, B => n3841, Z => n4055);
   U4198 : GTECH_NOR2 port map( A => n4056, B => n4057, Z => n4049);
   U4199 : GTECH_NAND2 port map( A => n4058, B => n4059, Z => n4057);
   U4200 : GTECH_NAND2 port map( A => N1120, B => n3849, Z => n4059);
   U4201 : GTECH_NAND2 port map( A => N1427, B => n3851, Z => n4058);
   U4202 : GTECH_NOR2 port map( A => n3870, B => n4060, Z => n4056);
   U4203 : GTECH_NAND2 port map( A => n4061, B => n4062, Z => n2390);
   U4204 : GTECH_NOR2 port map( A => n4063, B => n4064, Z => n4062);
   U4205 : GTECH_NAND2 port map( A => n4065, B => n4066, Z => n4064);
   U4206 : GTECH_NAND2 port map( A => N1568, B => n3843, Z => n4066);
   U4207 : GTECH_NAND2 port map( A => n3848, B => n4797, Z => n4065);
   U4208 : GTECH_NAND2 port map( A => n4067, B => n3887, Z => n4063);
   U4209 : GTECH_NAND2 port map( A => N1683, B => n3841, Z => n4067);
   U4210 : GTECH_NOR2 port map( A => n4068, B => n4069, Z => n4061);
   U4211 : GTECH_NAND2 port map( A => n4070, B => n4071, Z => n4069);
   U4212 : GTECH_NAND2 port map( A => N1121, B => n3849, Z => n4071);
   U4213 : GTECH_NAND2 port map( A => N1428, B => n3851, Z => n4070);
   U4214 : GTECH_NOR2 port map( A => n3870, B => n4072, Z => n4068);
   U4215 : GTECH_NAND2 port map( A => n4073, B => n4074, Z => n2389);
   U4216 : GTECH_NOR2 port map( A => n4075, B => n4076, Z => n4074);
   U4217 : GTECH_NAND2 port map( A => n4077, B => n4078, Z => n4076);
   U4218 : GTECH_NAND2 port map( A => N1569, B => n3843, Z => n4078);
   U4219 : GTECH_NAND2 port map( A => n3848, B => n4798, Z => n4077);
   U4220 : GTECH_NAND2 port map( A => n4079, B => n3887, Z => n4075);
   U4221 : GTECH_NAND2 port map( A => N1684, B => n3841, Z => n4079);
   U4222 : GTECH_NOR2 port map( A => n4080, B => n4081, Z => n4073);
   U4223 : GTECH_NAND2 port map( A => n4082, B => n4083, Z => n4081);
   U4224 : GTECH_NAND2 port map( A => N1122, B => n3849, Z => n4083);
   U4225 : GTECH_NAND2 port map( A => N1429, B => n3851, Z => n4082);
   U4226 : GTECH_NOR2 port map( A => n3870, B => n4084, Z => n4080);
   U4227 : GTECH_NAND2 port map( A => n4085, B => n4086, Z => n2388);
   U4228 : GTECH_NOR2 port map( A => n4087, B => n4088, Z => n4086);
   U4229 : GTECH_NAND2 port map( A => n4089, B => n4090, Z => n4088);
   U4230 : GTECH_NAND2 port map( A => N1570, B => n3843, Z => n4090);
   U4231 : GTECH_NAND2 port map( A => n3848, B => n4799, Z => n4089);
   U4232 : GTECH_NAND2 port map( A => n4091, B => n3887, Z => n4087);
   U4233 : GTECH_NAND2 port map( A => N1685, B => n3841, Z => n4091);
   U4234 : GTECH_NOR2 port map( A => n4092, B => n4093, Z => n4085);
   U4235 : GTECH_NAND2 port map( A => n4094, B => n4095, Z => n4093);
   U4236 : GTECH_NAND2 port map( A => N1123, B => n3849, Z => n4095);
   U4237 : GTECH_NAND2 port map( A => N1430, B => n3851, Z => n4094);
   U4238 : GTECH_NOR2 port map( A => n3870, B => n4096, Z => n4092);
   U4239 : GTECH_NAND2 port map( A => n4097, B => n4098, Z => n2387);
   U4240 : GTECH_NOR2 port map( A => n4099, B => n4100, Z => n4098);
   U4241 : GTECH_NAND2 port map( A => n4101, B => n4102, Z => n4100);
   U4242 : GTECH_NAND2 port map( A => N1571, B => n3843, Z => n4102);
   U4243 : GTECH_NAND2 port map( A => n3848, B => n4800, Z => n4101);
   U4244 : GTECH_NAND2 port map( A => n4103, B => n3887, Z => n4099);
   U4245 : GTECH_NAND2 port map( A => N1686, B => n3841, Z => n4103);
   U4246 : GTECH_NOR2 port map( A => n4104, B => n4105, Z => n4097);
   U4247 : GTECH_NAND2 port map( A => n4106, B => n4107, Z => n4105);
   U4248 : GTECH_NAND2 port map( A => N1124, B => n3849, Z => n4107);
   U4249 : GTECH_NAND2 port map( A => N1431, B => n3851, Z => n4106);
   U4250 : GTECH_NOR2 port map( A => n3870, B => n4108, Z => n4104);
   U4251 : GTECH_NAND2 port map( A => n4109, B => n4110, Z => n2386);
   U4252 : GTECH_NOR2 port map( A => n4111, B => n4112, Z => n4110);
   U4253 : GTECH_NAND2 port map( A => n4113, B => n4114, Z => n4112);
   U4254 : GTECH_NAND2 port map( A => N1572, B => n3843, Z => n4114);
   U4255 : GTECH_NAND2 port map( A => n3848, B => n4801, Z => n4113);
   U4256 : GTECH_NAND2 port map( A => n4115, B => n3887, Z => n4111);
   U4257 : GTECH_NAND2 port map( A => N1687, B => n3841, Z => n4115);
   U4258 : GTECH_NOR2 port map( A => n4116, B => n4117, Z => n4109);
   U4259 : GTECH_NAND2 port map( A => n4118, B => n4119, Z => n4117);
   U4260 : GTECH_NAND2 port map( A => N1125, B => n3849, Z => n4119);
   U4261 : GTECH_NAND2 port map( A => N1432, B => n3851, Z => n4118);
   U4262 : GTECH_NOR2 port map( A => n3870, B => n4120, Z => n4116);
   U4263 : GTECH_NAND2 port map( A => n4121, B => n4122, Z => n2385);
   U4264 : GTECH_NOR2 port map( A => n4123, B => n4124, Z => n4122);
   U4265 : GTECH_NAND2 port map( A => n4125, B => n4126, Z => n4124);
   U4266 : GTECH_NAND2 port map( A => N1573, B => n3843, Z => n4126);
   U4267 : GTECH_NAND2 port map( A => n3848, B => n4802, Z => n4125);
   U4268 : GTECH_NAND2 port map( A => n4127, B => n3887, Z => n4123);
   U4269 : GTECH_NAND2 port map( A => N1688, B => n3841, Z => n4127);
   U4270 : GTECH_NOR2 port map( A => n4128, B => n4129, Z => n4121);
   U4271 : GTECH_NAND2 port map( A => n4130, B => n4131, Z => n4129);
   U4272 : GTECH_NAND2 port map( A => N1126, B => n3849, Z => n4131);
   U4273 : GTECH_NAND2 port map( A => N1433, B => n3851, Z => n4130);
   U4274 : GTECH_NOR2 port map( A => n3870, B => n4132, Z => n4128);
   U4275 : GTECH_NAND2 port map( A => n4133, B => n4134, Z => n2384);
   U4276 : GTECH_NOR2 port map( A => n4135, B => n4136, Z => n4134);
   U4277 : GTECH_NAND2 port map( A => n4137, B => n4138, Z => n4136);
   U4278 : GTECH_NAND2 port map( A => N1574, B => n3843, Z => n4138);
   U4279 : GTECH_NAND2 port map( A => n3848, B => n4803, Z => n4137);
   U4280 : GTECH_NAND2 port map( A => n4139, B => n3887, Z => n4135);
   U4281 : GTECH_NAND2 port map( A => N1689, B => n3841, Z => n4139);
   U4282 : GTECH_NOR2 port map( A => n4140, B => n4141, Z => n4133);
   U4283 : GTECH_NAND2 port map( A => n4142, B => n4143, Z => n4141);
   U4284 : GTECH_NAND2 port map( A => N1127, B => n3849, Z => n4143);
   U4285 : GTECH_NAND2 port map( A => N1434, B => n3851, Z => n4142);
   U4286 : GTECH_NOR2 port map( A => n3870, B => n4144, Z => n4140);
   U4287 : GTECH_NAND2 port map( A => n4145, B => n4146, Z => n2383);
   U4288 : GTECH_NOR2 port map( A => n4147, B => n4148, Z => n4146);
   U4289 : GTECH_NAND2 port map( A => n4149, B => n4150, Z => n4148);
   U4290 : GTECH_NAND2 port map( A => N1575, B => n3843, Z => n4150);
   U4291 : GTECH_NAND2 port map( A => n3848, B => n4804, Z => n4149);
   U4292 : GTECH_NAND2 port map( A => n4151, B => n3887, Z => n4147);
   U4293 : GTECH_NAND2 port map( A => N1690, B => n3841, Z => n4151);
   U4294 : GTECH_NOR2 port map( A => n4152, B => n4153, Z => n4145);
   U4295 : GTECH_NAND2 port map( A => n4154, B => n4155, Z => n4153);
   U4296 : GTECH_NAND2 port map( A => N1128, B => n3849, Z => n4155);
   U4297 : GTECH_NAND2 port map( A => N1435, B => n3851, Z => n4154);
   U4298 : GTECH_NOR2 port map( A => n3870, B => n4156, Z => n4152);
   U4299 : GTECH_NAND2 port map( A => n4157, B => n4158, Z => n2382);
   U4300 : GTECH_NOR2 port map( A => n4159, B => n4160, Z => n4158);
   U4301 : GTECH_NAND2 port map( A => n4161, B => n4162, Z => n4160);
   U4302 : GTECH_NAND2 port map( A => N1576, B => n3843, Z => n4162);
   U4303 : GTECH_NAND2 port map( A => n3848, B => n4805, Z => n4161);
   U4304 : GTECH_NAND2 port map( A => n4163, B => n3887, Z => n4159);
   U4305 : GTECH_NAND2 port map( A => N1691, B => n3841, Z => n4163);
   U4306 : GTECH_NOR2 port map( A => n4164, B => n4165, Z => n4157);
   U4307 : GTECH_NAND2 port map( A => n4166, B => n4167, Z => n4165);
   U4308 : GTECH_NAND2 port map( A => N1129, B => n3849, Z => n4167);
   U4309 : GTECH_NAND2 port map( A => N1436, B => n3851, Z => n4166);
   U4310 : GTECH_NOR2 port map( A => n3870, B => n4168, Z => n4164);
   U4311 : GTECH_NAND2 port map( A => n4169, B => n4170, Z => n2381);
   U4312 : GTECH_NOR2 port map( A => n4171, B => n4172, Z => n4170);
   U4313 : GTECH_NAND2 port map( A => n4173, B => n4174, Z => n4172);
   U4314 : GTECH_NAND2 port map( A => N1577, B => n3843, Z => n4174);
   U4315 : GTECH_NOR2 port map( A => n4175, B => n4176, Z => n3843);
   U4316 : GTECH_NAND2 port map( A => n4177, B => n3179, Z => n4175);
   U4317 : GTECH_NAND2 port map( A => n3848, B => n4806, Z => n4173);
   U4318 : GTECH_NOR2 port map( A => n4178, B => n4176, Z => n3848);
   U4319 : GTECH_NAND2 port map( A => n4179, B => n3225, Z => n4178);
   U4320 : GTECH_NAND2 port map( A => n4180, B => n3887, Z => n4171);
   U4321 : GTECH_NAND2 port map( A => n4181, B => n4182, Z => n3887);
   U4322 : GTECH_NOR2 port map( A => n3872, B => n4183, Z => n4181);
   U4323 : GTECH_NOR2 port map( A => n3255, B => n4184, Z => n3872);
   U4324 : GTECH_NOR2 port map( A => n4185, B => n4186, Z => n4184);
   U4325 : GTECH_NOT port map( A => n3748, Z => n3255);
   U4326 : GTECH_NAND2 port map( A => N1692, B => n3841, Z => n4180);
   U4327 : GTECH_NOR2 port map( A => n4187, B => n4177, Z => n3841);
   U4328 : GTECH_NAND2 port map( A => n3179, B => n4182, Z => n4187);
   U4329 : GTECH_NOR2 port map( A => n4188, B => n4189, Z => n4169);
   U4330 : GTECH_NAND2 port map( A => n4190, B => n4191, Z => n4189);
   U4331 : GTECH_NAND2 port map( A => N1130, B => n3849, Z => n4191);
   U4332 : GTECH_NOR2 port map( A => n4176, B => n3250, Z => n3849);
   U4333 : GTECH_NAND2 port map( A => N1437, B => n3851, Z => n4190);
   U4334 : GTECH_NOR2 port map( A => n4176, B => n4192, Z => n3851);
   U4335 : GTECH_NOR2 port map( A => n3870, B => n4193, Z => n4188);
   U4336 : GTECH_NOR2 port map( A => n4194, B => n3873, Z => n3870);
   U4337 : GTECH_NOR2 port map( A => n4195, B => n4176, Z => n4194);
   U4338 : GTECH_NOT port map( A => n4182, Z => n4176);
   U4339 : GTECH_NOR2 port map( A => n2745, B => n3873, Z => n4182);
   U4340 : GTECH_NOR2 port map( A => n2745, B => n4196, Z => n3873);
   U4341 : GTECH_NOR2 port map( A => n4197, B => n4198, Z => n4196);
   U4342 : GTECH_NOR2 port map( A => n4199, B => n3161, Z => n4198);
   U4343 : GTECH_NOR2 port map( A => n3210, B => ll_tx_dst_rdy_n, Z => n4199);
   U4344 : GTECH_NAND2 port map( A => n3225, B => n4200, Z => n4195);
   U4345 : GTECH_NOT port map( A => n4179, Z => n4200);
   U4346 : GTECH_NAND2 port map( A => n4201, B => n3257, Z => n4179);
   U4347 : GTECH_NAND2 port map( A => n4202, B => n4203, Z => n2380);
   U4348 : GTECH_NAND2 port map( A => n3749, B => n3224, Z => n4203);
   U4349 : GTECH_NAND2 port map( A => n3748, B => n3828, Z => n3224);
   U4350 : GTECH_NAND2 port map( A => waiting_to_recv_data_curr, B => n4204, Z 
                           => n3828);
   U4351 : GTECH_NAND2 port map( A => n4205, B => n4201, Z => n4204);
   U4352 : GTECH_NAND2 port map( A => trans_type_curr_1_port, B => n4206, Z => 
                           n4205);
   U4353 : GTECH_NAND2 port map( A => n4207, B => n4208, Z => n3748);
   U4354 : GTECH_NOR2 port map( A => n4209, B => n4185, Z => n4207);
   U4355 : GTECH_NAND2 port map( A => n4210, B => mem_wr_en_port, Z => n4202);
   U4356 : GTECH_NAND2 port map( A => n4211, B => n3493, Z => n4210);
   U4357 : GTECH_NOR2 port map( A => n4212, B => n4213, Z => n4211);
   U4358 : GTECH_NOR2 port map( A => n3183, B => n3825, Z => n4212);
   U4359 : GTECH_NOT port map( A => n2799, Z => n3825);
   U4360 : GTECH_NOR2 port map( A => N2301, B => n4214, Z => n3183);
   U4361 : GTECH_NOR2 port map( A => n4215, B => N1050, Z => n4214);
   U4362 : GTECH_NAND2 port map( A => n4216, B => n4217, Z => n2379);
   U4363 : GTECH_NAND2 port map( A => n4213, B => n3215, Z => n4217);
   U4364 : GTECH_NOR2 port map( A => n4201, B => wr_ack_curr, Z => n3215);
   U4365 : GTECH_NOR2 port map( A => n2745, B => n3213, Z => n4213);
   U4366 : GTECH_NAND2 port map( A => wr_ack_curr, B => n4218, Z => n4216);
   U4367 : GTECH_NAND2 port map( A => n4219, B => n3493, Z => n4218);
   U4368 : GTECH_NOR2 port map( A => n3749, B => n4220, Z => n3493);
   U4369 : GTECH_NOR2 port map( A => n2745, B => n3833, Z => n4220);
   U4370 : GTECH_NOR2 port map( A => n4221, B => n4222, Z => n3833);
   U4371 : GTECH_NAND2 port map( A => n3251, B => n4223, Z => n4222);
   U4372 : GTECH_NOR2 port map( A => n3179, B => n3148, Z => n4223);
   U4373 : GTECH_NAND2 port map( A => n3161, B => n3265, Z => n4221);
   U4374 : GTECH_NOR2 port map( A => n4183, B => n2745, Z => n3749);
   U4375 : GTECH_NOR2 port map( A => n2799, B => n4224, Z => n4219);
   U4376 : GTECH_NOR2 port map( A => n3756, B => n4225, Z => n4224);
   U4377 : GTECH_NAND2 port map( A => reset_b, B => n3144, Z => n4225);
   U4378 : GTECH_NOR2 port map( A => n3250, B => n2745, Z => n2799);
   U4379 : GTECH_NOR2 port map( A => n2745, B => n4226, Z => n2378);
   U4380 : GTECH_NOT port map( A => n4227, Z => n2369);
   U4381 : GTECH_NAND2 port map( A => n4228, B => ack, Z => n4227);
   U4382 : GTECH_NOR2 port map( A => N1547, B => n3641, Z => n4228);
   U4383 : GTECH_NAND2 port map( A => n4229, B => n4230, Z => n2354);
   U4384 : GTECH_NOR2 port map( A => n3555, B => n4231, Z => n4230);
   U4385 : GTECH_NOR2 port map( A => n4232, B => n4233, Z => n4231);
   U4386 : GTECH_NAND2 port map( A => n3729, B => n4234, Z => n4233);
   U4387 : GTECH_NAND2 port map( A => n3541, B => n3148, Z => n4234);
   U4388 : GTECH_NOT port map( A => n3245, Z => n3148);
   U4389 : GTECH_NOR2 port map( A => n4235, B => n3567, Z => n3541);
   U4390 : GTECH_NAND2 port map( A => n4236, B => ll_rx_data(28), Z => n4235);
   U4391 : GTECH_NOR2 port map( A => n3139, B => n2745, Z => n3729);
   U4392 : GTECH_NAND2 port map( A => n4237, B => n3561, Z => n4232);
   U4393 : GTECH_NOT port map( A => ll_rx_src_rdy_n, Z => n3561);
   U4394 : GTECH_NAND2 port map( A => n3566, B => n4238, Z => n4237);
   U4395 : GTECH_NOT port map( A => n3567, Z => n4238);
   U4396 : GTECH_NAND2 port map( A => n4239, B => n4240, Z => n3567);
   U4397 : GTECH_NOT port map( A => ll_rx_data(30), Z => n4240);
   U4398 : GTECH_NOR2 port map( A => ll_rx_src_rdy_n, B => ll_rx_data(31), Z =>
                           n4239);
   U4399 : GTECH_NOR2 port map( A => ll_rx_data(28), B => n4236, Z => n3566);
   U4400 : GTECH_NOT port map( A => ll_rx_data(29), Z => n4236);
   U4401 : GTECH_NOT port map( A => n4241, Z => n3555);
   U4402 : GTECH_NAND2 port map( A => n4242, B => n4243, Z => n4241);
   U4403 : GTECH_NOR2 port map( A => n2745, B => n4244, Z => n4243);
   U4404 : GTECH_NAND2 port map( A => n3251, B => n3738, Z => n4244);
   U4405 : GTECH_NOT port map( A => sic_rx_fsm_cs_1_port, Z => n3738);
   U4406 : GTECH_NOR2 port map( A => n3739, B => n3150, Z => n4242);
   U4407 : GTECH_NOT port map( A => sic_rx_fsm_cs_2_port, Z => n3150);
   U4408 : GTECH_NOR2 port map( A => n4245, B => n4246, Z => n4229);
   U4409 : GTECH_NOR2 port map( A => n3546, B => n3642, Z => n4246);
   U4410 : GTECH_NOT port map( A => n3545, Z => n3642);
   U4411 : GTECH_NOR2 port map( A => ll_rx_src_rdy_n, B => ll_rx_eof_n, Z => 
                           n3545);
   U4412 : GTECH_NOT port map( A => n3554, Z => n3546);
   U4413 : GTECH_NOR2 port map( A => n3077, B => n2745, Z => n3554);
   U4414 : GTECH_NAND2 port map( A => n4247, B => sic_rx_fsm_cs_1_port, Z => 
                           n3077);
   U4415 : GTECH_NOR2 port map( A => sic_rx_fsm_cs_2_port, B => n3739, Z => 
                           n4247);
   U4416 : GTECH_NOT port map( A => sic_rx_fsm_cs_0_port, Z => n3739);
   U4417 : GTECH_NOR2 port map( A => n3569, B => n4248, Z => n4245);
   U4418 : GTECH_NAND2 port map( A => reset_b, B => n3245, Z => n4248);
   U4419 : GTECH_NAND2 port map( A => sic_rx_fsm_cs_2_port, B => n3723, Z => 
                           n3569);
   U4420 : GTECH_NOR2 port map( A => sic_rx_fsm_cs_1_port, B => 
                           sic_rx_fsm_cs_0_port, Z => n3723);
   U4421 : GTECH_NAND2 port map( A => n4249, B => n4250, Z => mem_rd_en);
   U4422 : GTECH_NOR2 port map( A => n3179, B => n3198, Z => n4250);
   U4423 : GTECH_NOR2 port map( A => n3257, B => n4183, Z => n3198);
   U4424 : GTECH_NAND2 port map( A => n4206, B => n4185, Z => n3257);
   U4425 : GTECH_NOT port map( A => trans_type_curr_1_port, Z => n4185);
   U4426 : GTECH_NOT port map( A => n4186, Z => n4206);
   U4427 : GTECH_NAND2 port map( A => n4208, B => n4209, Z => n4186);
   U4428 : GTECH_NOR2 port map( A => n3264, B => n4251, Z => n4249);
   U4429 : GTECH_NOT port map( A => n3161, Z => n3264);
   U4430 : GTECH_NOR2 port map( A => n3210, B => n3194, Z => n3161);
   U4431 : GTECH_NAND2 port map( A => n4252, B => n3964, Z => mem_addr(9));
   U4432 : GTECH_NAND2 port map( A => n4252, B => n3952, Z => mem_addr(8));
   U4433 : GTECH_NOT port map( A => tmp_addr_curr_8_port, Z => n3952);
   U4434 : GTECH_NAND2 port map( A => n4252, B => n3940, Z => mem_addr(7));
   U4435 : GTECH_NOT port map( A => tmp_addr_curr_7_port, Z => n3940);
   U4436 : GTECH_NAND2 port map( A => n4252, B => n3928, Z => mem_addr(6));
   U4437 : GTECH_NOT port map( A => tmp_addr_curr_6_port, Z => n3928);
   U4438 : GTECH_NAND2 port map( A => n4252, B => n3916, Z => mem_addr(5));
   U4439 : GTECH_NOT port map( A => tmp_addr_curr_5_port, Z => n3916);
   U4440 : GTECH_NAND2 port map( A => n4252, B => n3904, Z => mem_addr(4));
   U4441 : GTECH_NOT port map( A => tmp_addr_curr_4_port, Z => n3904);
   U4442 : GTECH_NAND2 port map( A => n4252, B => n3892, Z => mem_addr(3));
   U4443 : GTECH_NOT port map( A => tmp_addr_curr_3_port, Z => n3892);
   U4444 : GTECH_NOR2 port map( A => n4253, B => n4251, Z => mem_addr(2));
   U4445 : GTECH_NAND2 port map( A => n4252, B => n4193, Z => mem_addr(27));
   U4446 : GTECH_NAND2 port map( A => n4252, B => n4168, Z => mem_addr(26));
   U4447 : GTECH_NOT port map( A => tmp_addr_curr_26_port, Z => n4168);
   U4448 : GTECH_NAND2 port map( A => n4252, B => n4156, Z => mem_addr(25));
   U4449 : GTECH_NOT port map( A => tmp_addr_curr_25_port, Z => n4156);
   U4450 : GTECH_NAND2 port map( A => n4252, B => n4144, Z => mem_addr(24));
   U4451 : GTECH_NOT port map( A => tmp_addr_curr_24_port, Z => n4144);
   U4452 : GTECH_NAND2 port map( A => n4252, B => n4132, Z => mem_addr(23));
   U4453 : GTECH_NOT port map( A => tmp_addr_curr_23_port, Z => n4132);
   U4454 : GTECH_NAND2 port map( A => n4252, B => n4120, Z => mem_addr(22));
   U4455 : GTECH_NOT port map( A => tmp_addr_curr_22_port, Z => n4120);
   U4456 : GTECH_NAND2 port map( A => n4252, B => n4108, Z => mem_addr(21));
   U4457 : GTECH_NOT port map( A => tmp_addr_curr_21_port, Z => n4108);
   U4458 : GTECH_NAND2 port map( A => n4252, B => n4096, Z => mem_addr(20));
   U4459 : GTECH_NOR2 port map( A => n4254, B => n4251, Z => mem_addr(1));
   U4460 : GTECH_NAND2 port map( A => n4252, B => n4084, Z => mem_addr(19));
   U4461 : GTECH_NOT port map( A => tmp_addr_curr_19_port, Z => n4084);
   U4462 : GTECH_NAND2 port map( A => n4252, B => n4072, Z => mem_addr(18));
   U4463 : GTECH_NOT port map( A => tmp_addr_curr_18_port, Z => n4072);
   U4464 : GTECH_NAND2 port map( A => n4252, B => n4060, Z => mem_addr(17));
   U4465 : GTECH_NOT port map( A => tmp_addr_curr_17_port, Z => n4060);
   U4466 : GTECH_NAND2 port map( A => n4252, B => n4048, Z => mem_addr(16));
   U4467 : GTECH_NOT port map( A => tmp_addr_curr_16_port, Z => n4048);
   U4468 : GTECH_NAND2 port map( A => n4252, B => n4036, Z => mem_addr(15));
   U4469 : GTECH_NOT port map( A => tmp_addr_curr_15_port, Z => n4036);
   U4470 : GTECH_NAND2 port map( A => n4252, B => n4024, Z => mem_addr(14));
   U4471 : GTECH_NOT port map( A => tmp_addr_curr_14_port, Z => n4024);
   U4472 : GTECH_NAND2 port map( A => n4252, B => n4012, Z => mem_addr(13));
   U4473 : GTECH_NAND2 port map( A => n4252, B => n4000, Z => mem_addr(12));
   U4474 : GTECH_NOT port map( A => tmp_addr_curr_12_port, Z => n4000);
   U4475 : GTECH_NAND2 port map( A => n4252, B => n3988, Z => mem_addr(11));
   U4476 : GTECH_NOT port map( A => tmp_addr_curr_11_port, Z => n3988);
   U4477 : GTECH_NAND2 port map( A => n4252, B => n3976, Z => mem_addr(10));
   U4478 : GTECH_NOT port map( A => tmp_addr_curr_10_port, Z => n3976);
   U4479 : GTECH_NOR2 port map( A => n4255, B => n4251, Z => mem_addr(0));
   U4480 : GTECH_NOT port map( A => n4252, Z => n4251);
   U4481 : GTECH_NOR2 port map( A => n4256, B => n3226, Z => n4252);
   U4482 : GTECH_NAND2 port map( A => n4257, B => n3239, Z => n3226);
   U4483 : GTECH_NAND2 port map( A => n4258, B => n4259, Z => n4257);
   U4484 : GTECH_NOR2 port map( A => n4260, B => n4261, Z => n4259);
   U4485 : GTECH_NAND2 port map( A => n3165, B => n3268, Z => n4261);
   U4486 : GTECH_NOT port map( A => n2375, Z => n3268);
   U4487 : GTECH_NOT port map( A => n2374, Z => n3165);
   U4488 : GTECH_NOR2 port map( A => ll_rx_src_rdy_n, B => n3139, Z => n4260);
   U4489 : GTECH_NAND2 port map( A => n4262, B => sic_rx_fsm_cs_0_port, Z => 
                           n3139);
   U4490 : GTECH_NOR2 port map( A => sic_rx_fsm_cs_2_port, B => 
                           sic_rx_fsm_cs_1_port, Z => n4262);
   U4491 : GTECH_NOR2 port map( A => n3245, B => n4263, Z => n4258);
   U4492 : GTECH_NOT port map( A => n4839, Z => n4263);
   U4493 : GTECH_NAND2 port map( A => n2794, B => n3190, Z => n4256);
   U4494 : GTECH_NOT port map( A => n3757, Z => n3190);
   U4495 : GTECH_NOT port map( A => n4264, Z => ll_tx_src_rdy_n);
   U4496 : GTECH_NOR2 port map( A => n4265, B => n4266, Z => n4264);
   U4497 : GTECH_NOR2 port map( A => n2794, B => ack, Z => n4266);
   U4498 : GTECH_NAND2 port map( A => pass_thru_mode_curr, B => n3179, Z => 
                           n2794);
   U4499 : GTECH_NAND2 port map( A => n4267, B => n4268, Z => ll_tx_sof_n_port)
                           ;
   U4500 : GTECH_NOR2 port map( A => n3179, B => n3194, Z => n4268);
   U4501 : GTECH_NOT port map( A => n2792, Z => n3179);
   U4502 : GTECH_NOR2 port map( A => n4269, B => n4265, Z => n4267);
   U4503 : GTECH_NOT port map( A => n3238, Z => n4269);
   U4504 : GTECH_NAND2 port map( A => n4270, B => n3207, Z => ll_tx_eof_n);
   U4505 : GTECH_NOT port map( A => n4271, Z => n3207);
   U4506 : GTECH_NAND2 port map( A => n4272, B => n4273, Z => n4271);
   U4507 : GTECH_NAND2 port map( A => N2261, B => n3194, Z => n4273);
   U4508 : GTECH_NOR2 port map( A => n4274, B => n4275, Z => n4272);
   U4509 : GTECH_NOR2 port map( A => n3193, B => n4276, Z => n4275);
   U4510 : GTECH_NOR2 port map( A => n2792, B => n3180, Z => n4274);
   U4511 : GTECH_NOT port map( A => n2804, Z => n3180);
   U4512 : GTECH_NOR2 port map( A => n4277, B => n4278, Z => n2804);
   U4513 : GTECH_NOR2 port map( A => n2795, B => n3745, Z => n4278);
   U4514 : GTECH_NAND2 port map( A => n4839, B => N1611, Z => n2795);
   U4515 : GTECH_NOT port map( A => n4177, Z => n4277);
   U4516 : GTECH_NAND2 port map( A => N1663, B => n3745, Z => n4177);
   U4517 : GTECH_NOR2 port map( A => n3210, B => n4265, Z => n4270);
   U4518 : GTECH_NAND2 port map( A => n4279, B => n4280, Z => n4265);
   U4519 : GTECH_NOR2 port map( A => n3184, B => n4281, Z => n4280);
   U4520 : GTECH_NAND2 port map( A => n3213, B => n3245, Z => n4281);
   U4521 : GTECH_NAND2 port map( A => n4282, B => n4283, Z => n3245);
   U4522 : GTECH_NAND2 port map( A => n4283, B => n4284, Z => n3213);
   U4523 : GTECH_NOT port map( A => n3250, Z => n3184);
   U4524 : GTECH_NAND2 port map( A => n4285, B => n4286, Z => n3250);
   U4525 : GTECH_NOR2 port map( A => n3225, B => n4197, Z => n4279);
   U4526 : GTECH_NAND2 port map( A => n4287, B => n3265, Z => n4197);
   U4527 : GTECH_NOR2 port map( A => n4288, B => n3757, Z => n3265);
   U4528 : GTECH_NAND2 port map( A => n2744, B => n3243, Z => n3757);
   U4529 : GTECH_NAND2 port map( A => n4284, B => n4289, Z => n3243);
   U4530 : GTECH_NAND2 port map( A => n4290, B => n4286, Z => n2744);
   U4531 : GTECH_NAND2 port map( A => n3407, B => n3239, Z => n4288);
   U4532 : GTECH_NAND2 port map( A => n4284, B => n4286, Z => n3239);
   U4533 : GTECH_NOR2 port map( A => n4291, B => n4807, Z => n4284);
   U4534 : GTECH_NAND2 port map( A => n4289, B => n4290, Z => n3407);
   U4535 : GTECH_NOR2 port map( A => n3185, B => n3177, Z => n4287);
   U4536 : GTECH_NOT port map( A => n3251, Z => n3177);
   U4537 : GTECH_NAND2 port map( A => n4283, B => n4290, Z => n3251);
   U4538 : GTECH_NOR2 port map( A => n4292, B => n4291, Z => n4290);
   U4539 : GTECH_NOT port map( A => n4810, Z => n4291);
   U4540 : GTECH_NOT port map( A => n3756, Z => n3185);
   U4541 : GTECH_NAND2 port map( A => n4282, B => n4286, Z => n3756);
   U4542 : GTECH_NOR2 port map( A => n3227, B => n4808, Z => n4286);
   U4543 : GTECH_NOT port map( A => n4183, Z => n3225);
   U4544 : GTECH_NAND2 port map( A => n4283, B => n4285, Z => n4183);
   U4545 : GTECH_NOR2 port map( A => n4808, B => n4809, Z => n4283);
   U4546 : GTECH_NAND2 port map( A => n3238, B => n3222, Z => n3210);
   U4547 : GTECH_NAND2 port map( A => n4293, B => n4294, Z => ll_tx_data(9));
   U4548 : GTECH_NOR2 port map( A => n4295, B => n4296, Z => n4294);
   U4549 : GTECH_NAND2 port map( A => n4297, B => n4298, Z => n4296);
   U4550 : GTECH_NAND2 port map( A => pass_tid_curr_9_port, B => n4299, Z => 
                           n4298);
   U4551 : GTECH_NAND2 port map( A => n4300, B => pass_addr_curr_9_port, Z => 
                           n4297);
   U4552 : GTECH_NAND2 port map( A => n4301, B => n4302, Z => n4295);
   U4553 : GTECH_NAND2 port map( A => n4303, B => trans_id_curr_5_port, Z => 
                           n4302);
   U4554 : GTECH_NAND2 port map( A => trans_id_curr_9_port, B => n4304, Z => 
                           n4301);
   U4555 : GTECH_NOR2 port map( A => n4305, B => n4306, Z => n4293);
   U4556 : GTECH_NAND2 port map( A => n4307, B => n4308, Z => n4306);
   U4557 : GTECH_NAND2 port map( A => n4309, B => pass_num_curr_9_port, Z => 
                           n4308);
   U4558 : GTECH_NAND2 port map( A => n4310, B => n3042, Z => n4307);
   U4559 : GTECH_NOT port map( A => n2272_port, Z => n3042);
   U4560 : GTECH_NOR2 port map( A => n2792, B => n4311, Z => n4305);
   U4561 : GTECH_NAND2 port map( A => n4312, B => n4313, Z => ll_tx_data(8));
   U4562 : GTECH_NOR2 port map( A => n4314, B => n4315, Z => n4313);
   U4563 : GTECH_NAND2 port map( A => n4316, B => n4317, Z => n4315);
   U4564 : GTECH_NAND2 port map( A => pass_tid_curr_8_port, B => n4299, Z => 
                           n4317);
   U4565 : GTECH_NAND2 port map( A => n4300, B => pass_addr_curr_8_port, Z => 
                           n4316);
   U4566 : GTECH_NAND2 port map( A => n4318, B => n4319, Z => n4314);
   U4567 : GTECH_NAND2 port map( A => n4303, B => trans_id_curr_4_port, Z => 
                           n4319);
   U4568 : GTECH_NAND2 port map( A => trans_id_curr_8_port, B => n4304, Z => 
                           n4318);
   U4569 : GTECH_NOR2 port map( A => n4320, B => n4321, Z => n4312);
   U4570 : GTECH_NAND2 port map( A => n4322, B => n4323, Z => n4321);
   U4571 : GTECH_NAND2 port map( A => n4309, B => pass_num_curr_8_port, Z => 
                           n4323);
   U4572 : GTECH_NAND2 port map( A => n4310, B => n3045, Z => n4322);
   U4573 : GTECH_NOT port map( A => n2273_port, Z => n3045);
   U4574 : GTECH_NOR2 port map( A => n2792, B => n4324, Z => n4320);
   U4575 : GTECH_NAND2 port map( A => n4325, B => n4326, Z => ll_tx_data(7));
   U4576 : GTECH_NOR2 port map( A => n4327, B => n4328, Z => n4326);
   U4577 : GTECH_NAND2 port map( A => n4329, B => n4330, Z => n4328);
   U4578 : GTECH_NAND2 port map( A => pass_tid_curr_7_port, B => n4299, Z => 
                           n4330);
   U4579 : GTECH_NAND2 port map( A => n4300, B => pass_addr_curr_7_port, Z => 
                           n4329);
   U4580 : GTECH_NAND2 port map( A => n4331, B => n4332, Z => n4327);
   U4581 : GTECH_NAND2 port map( A => n4303, B => trans_id_curr_3_port, Z => 
                           n4332);
   U4582 : GTECH_NAND2 port map( A => trans_id_curr_7_port, B => n4304, Z => 
                           n4331);
   U4583 : GTECH_NOR2 port map( A => n4333, B => n4334, Z => n4325);
   U4584 : GTECH_NAND2 port map( A => n4335, B => n4336, Z => n4334);
   U4585 : GTECH_NAND2 port map( A => n4309, B => pass_num_curr_7_port, Z => 
                           n4336);
   U4586 : GTECH_NAND2 port map( A => n4310, B => n3048, Z => n4335);
   U4587 : GTECH_NOT port map( A => n2274_port, Z => n3048);
   U4588 : GTECH_NOR2 port map( A => n2792, B => n4337, Z => n4333);
   U4589 : GTECH_NAND2 port map( A => n4338, B => n4339, Z => ll_tx_data(6));
   U4590 : GTECH_NOR2 port map( A => n4340, B => n4341, Z => n4339);
   U4591 : GTECH_NAND2 port map( A => n4342, B => n4343, Z => n4341);
   U4592 : GTECH_NAND2 port map( A => pass_tid_curr_6_port, B => n4299, Z => 
                           n4343);
   U4593 : GTECH_NAND2 port map( A => n4300, B => pass_addr_curr_6_port, Z => 
                           n4342);
   U4594 : GTECH_NAND2 port map( A => n4344, B => n4345, Z => n4340);
   U4595 : GTECH_NAND2 port map( A => n4303, B => trans_id_curr_2_port, Z => 
                           n4345);
   U4596 : GTECH_NAND2 port map( A => trans_id_curr_6_port, B => n4304, Z => 
                           n4344);
   U4597 : GTECH_NOR2 port map( A => n4346, B => n4347, Z => n4338);
   U4598 : GTECH_NAND2 port map( A => n4348, B => n4349, Z => n4347);
   U4599 : GTECH_NAND2 port map( A => n4309, B => pass_num_curr_6_port, Z => 
                           n4349);
   U4600 : GTECH_NAND2 port map( A => n4310, B => n3051, Z => n4348);
   U4601 : GTECH_NOT port map( A => n2275_port, Z => n3051);
   U4602 : GTECH_NOR2 port map( A => n2792, B => n4350, Z => n4346);
   U4603 : GTECH_NAND2 port map( A => n4351, B => n4352, Z => ll_tx_data(5));
   U4604 : GTECH_NOR2 port map( A => n4353, B => n4354, Z => n4352);
   U4605 : GTECH_NAND2 port map( A => n4355, B => n4356, Z => n4354);
   U4606 : GTECH_NAND2 port map( A => pass_tid_curr_5_port, B => n4299, Z => 
                           n4356);
   U4607 : GTECH_NAND2 port map( A => n4300, B => pass_addr_curr_5_port, Z => 
                           n4355);
   U4608 : GTECH_NAND2 port map( A => n4357, B => n4358, Z => n4353);
   U4609 : GTECH_NAND2 port map( A => n4303, B => trans_id_curr_1_port, Z => 
                           n4358);
   U4610 : GTECH_NAND2 port map( A => trans_id_curr_5_port, B => n4304, Z => 
                           n4357);
   U4611 : GTECH_NOR2 port map( A => n4359, B => n4360, Z => n4351);
   U4612 : GTECH_NAND2 port map( A => n4361, B => n4362, Z => n4360);
   U4613 : GTECH_NAND2 port map( A => n4309, B => pass_num_curr_5_port, Z => 
                           n4362);
   U4614 : GTECH_NAND2 port map( A => n4310, B => n3054, Z => n4361);
   U4615 : GTECH_NOT port map( A => n2276_port, Z => n3054);
   U4616 : GTECH_NOR2 port map( A => n2792, B => n4363, Z => n4359);
   U4617 : GTECH_NAND2 port map( A => n4364, B => n4365, Z => ll_tx_data(4));
   U4618 : GTECH_NOR2 port map( A => n4366, B => n4367, Z => n4365);
   U4619 : GTECH_NAND2 port map( A => n4368, B => n4369, Z => n4367);
   U4620 : GTECH_NAND2 port map( A => pass_tid_curr_4_port, B => n4299, Z => 
                           n4369);
   U4621 : GTECH_NAND2 port map( A => n4300, B => pass_addr_curr_4_port, Z => 
                           n4368);
   U4622 : GTECH_NAND2 port map( A => n4370, B => n4371, Z => n4366);
   U4623 : GTECH_NAND2 port map( A => n4303, B => trans_id_curr_0_port, Z => 
                           n4371);
   U4624 : GTECH_NAND2 port map( A => trans_id_curr_4_port, B => n4304, Z => 
                           n4370);
   U4625 : GTECH_NOR2 port map( A => n4372, B => n4373, Z => n4364);
   U4626 : GTECH_NAND2 port map( A => n4374, B => n4375, Z => n4373);
   U4627 : GTECH_NAND2 port map( A => n4309, B => pass_num_curr_4_port, Z => 
                           n4375);
   U4628 : GTECH_NAND2 port map( A => n4310, B => n3057, Z => n4374);
   U4629 : GTECH_NOT port map( A => n2277_port, Z => n3057);
   U4630 : GTECH_NOR2 port map( A => n2792, B => n4376, Z => n4372);
   U4631 : GTECH_NAND2 port map( A => n4377, B => n4378, Z => ll_tx_data(3));
   U4632 : GTECH_NOR2 port map( A => n4379, B => n4380, Z => n4378);
   U4633 : GTECH_NAND2 port map( A => n4381, B => n4382, Z => n4380);
   U4634 : GTECH_NAND2 port map( A => trans_id_curr_3_port, B => n4304, Z => 
                           n4382);
   U4635 : GTECH_NAND2 port map( A => pass_tid_curr_3_port, B => n4299, Z => 
                           n4381);
   U4636 : GTECH_NOT port map( A => n4383, Z => n4379);
   U4637 : GTECH_NAND2 port map( A => pass_addr_curr_3_port, B => n4300, Z => 
                           n4383);
   U4638 : GTECH_NOR2 port map( A => n4384, B => n4385, Z => n4377);
   U4639 : GTECH_NAND2 port map( A => n4386, B => n4387, Z => n4385);
   U4640 : GTECH_NAND2 port map( A => n4309, B => pass_num_curr_3_port, Z => 
                           n4387);
   U4641 : GTECH_NAND2 port map( A => n4310, B => n3060, Z => n4386);
   U4642 : GTECH_NOT port map( A => n2278_port, Z => n3060);
   U4643 : GTECH_NOR2 port map( A => n2792, B => n4388, Z => n4384);
   U4644 : GTECH_NAND2 port map( A => n4389, B => n4390, Z => ll_tx_data(31));
   U4645 : GTECH_NOR2 port map( A => n4391, B => n4392, Z => n4390);
   U4646 : GTECH_NAND2 port map( A => n4393, B => n4394, Z => n4392);
   U4647 : GTECH_NAND2 port map( A => n4303, B => trans_id_curr_27_port, Z => 
                           n4394);
   U4648 : GTECH_NAND2 port map( A => n4299, B => pass_tid_curr_31_port, Z => 
                           n4393);
   U4649 : GTECH_NOT port map( A => n4395, Z => n4391);
   U4650 : GTECH_NAND2 port map( A => pass_addr_curr_31_port, B => n4300, Z => 
                           n4395);
   U4651 : GTECH_NOR2 port map( A => n4396, B => n4397, Z => n4389);
   U4652 : GTECH_NAND2 port map( A => n4398, B => n4399, Z => n4397);
   U4653 : GTECH_NAND2 port map( A => n4309, B => pass_num_curr_31_port, Z => 
                           n4399);
   U4654 : GTECH_NAND2 port map( A => n4310, B => n2976, Z => n4398);
   U4655 : GTECH_NOT port map( A => n2250, Z => n2976);
   U4656 : GTECH_NOR2 port map( A => n2792, B => n4400, Z => n4396);
   U4657 : GTECH_NAND2 port map( A => n4401, B => n4402, Z => ll_tx_data(30));
   U4658 : GTECH_NOR2 port map( A => n4403, B => n4404, Z => n4402);
   U4659 : GTECH_NAND2 port map( A => n4405, B => n4406, Z => n4404);
   U4660 : GTECH_NAND2 port map( A => n4303, B => trans_id_curr_26_port, Z => 
                           n4406);
   U4661 : GTECH_NAND2 port map( A => pass_tid_curr_30_port, B => n4299, Z => 
                           n4405);
   U4662 : GTECH_NOT port map( A => n4407, Z => n4403);
   U4663 : GTECH_NAND2 port map( A => pass_addr_curr_30_port, B => n4300, Z => 
                           n4407);
   U4664 : GTECH_NOR2 port map( A => n4408, B => n4409, Z => n4401);
   U4665 : GTECH_NAND2 port map( A => n4410, B => n4411, Z => n4409);
   U4666 : GTECH_NAND2 port map( A => n4309, B => pass_num_curr_30_port, Z => 
                           n4411);
   U4667 : GTECH_NAND2 port map( A => n4310, B => n2979, Z => n4410);
   U4668 : GTECH_NOT port map( A => n2251, Z => n2979);
   U4669 : GTECH_NOR2 port map( A => n2792, B => n4412, Z => n4408);
   U4670 : GTECH_NAND2 port map( A => n4413, B => n4414, Z => ll_tx_data(2));
   U4671 : GTECH_NOR2 port map( A => n4415, B => n4416, Z => n4414);
   U4672 : GTECH_NAND2 port map( A => n4417, B => n4418, Z => n4416);
   U4673 : GTECH_NAND2 port map( A => trans_id_curr_2_port, B => n4304, Z => 
                           n4418);
   U4674 : GTECH_NAND2 port map( A => pass_tid_curr_2_port, B => n4299, Z => 
                           n4417);
   U4675 : GTECH_NOT port map( A => n4419, Z => n4415);
   U4676 : GTECH_NAND2 port map( A => pass_addr_curr_2_port, B => n4300, Z => 
                           n4419);
   U4677 : GTECH_NOR2 port map( A => n4420, B => n4421, Z => n4413);
   U4678 : GTECH_NAND2 port map( A => n4422, B => n4423, Z => n4421);
   U4679 : GTECH_NAND2 port map( A => n4309, B => pass_num_curr_2_port, Z => 
                           n4423);
   U4680 : GTECH_NAND2 port map( A => n4310, B => n3063, Z => n4422);
   U4681 : GTECH_NOT port map( A => n2279_port, Z => n3063);
   U4682 : GTECH_NOR2 port map( A => n2792, B => n4424, Z => n4420);
   U4683 : GTECH_NAND2 port map( A => n4425, B => n4426, Z => ll_tx_data(29));
   U4684 : GTECH_NOR2 port map( A => n4427, B => n4428, Z => n4426);
   U4685 : GTECH_NAND2 port map( A => n4429, B => n4430, Z => n4428);
   U4686 : GTECH_NAND2 port map( A => pass_tid_curr_29_port, B => n3194, Z => 
                           n4430);
   U4687 : GTECH_NAND2 port map( A => n4300, B => pass_addr_curr_29_port, Z => 
                           n4429);
   U4688 : GTECH_NAND2 port map( A => n4431, B => n4432, Z => n4427);
   U4689 : GTECH_NOT port map( A => n4304, Z => n4432);
   U4690 : GTECH_NAND2 port map( A => n4303, B => trans_id_curr_25_port, Z => 
                           n4431);
   U4691 : GTECH_NOR2 port map( A => n4433, B => n4434, Z => n4425);
   U4692 : GTECH_NAND2 port map( A => n4435, B => n4436, Z => n4434);
   U4693 : GTECH_NAND2 port map( A => n4309, B => pass_num_curr_29_port, Z => 
                           n4436);
   U4694 : GTECH_NAND2 port map( A => n4310, B => n2982, Z => n4435);
   U4695 : GTECH_NOT port map( A => n2252, Z => n2982);
   U4696 : GTECH_NOR2 port map( A => n2792, B => n4226, Z => n4433);
   U4697 : GTECH_NOT port map( A => mem_data_in(29), Z => n4226);
   U4698 : GTECH_NAND2 port map( A => n4437, B => n4438, Z => ll_tx_data(28));
   U4699 : GTECH_NOR2 port map( A => n4439, B => n4440, Z => n4438);
   U4700 : GTECH_NAND2 port map( A => n4441, B => n4442, Z => n4440);
   U4701 : GTECH_NAND2 port map( A => n4299, B => pass_tid_curr_28_port, Z => 
                           n4442);
   U4702 : GTECH_NAND2 port map( A => n4300, B => pass_addr_curr_28_port, Z => 
                           n4441);
   U4703 : GTECH_NAND2 port map( A => n3192, B => n4443, Z => n4439);
   U4704 : GTECH_NAND2 port map( A => n4303, B => trans_id_curr_24_port, Z => 
                           n4443);
   U4705 : GTECH_NAND2 port map( A => n4304, B => n4444, Z => n3192);
   U4706 : GTECH_NOR2 port map( A => n4445, B => n4446, Z => n4437);
   U4707 : GTECH_NAND2 port map( A => n4447, B => n4448, Z => n4446);
   U4708 : GTECH_NAND2 port map( A => n4309, B => pass_num_curr_28_port, Z => 
                           n4448);
   U4709 : GTECH_NAND2 port map( A => n4310, B => n2985, Z => n4447);
   U4710 : GTECH_NOT port map( A => n2253, Z => n2985);
   U4711 : GTECH_NOR2 port map( A => n2792, B => n4449, Z => n4445);
   U4712 : GTECH_NAND2 port map( A => n4450, B => n4451, Z => ll_tx_data(27));
   U4713 : GTECH_NOR2 port map( A => n4452, B => n4453, Z => n4451);
   U4714 : GTECH_NAND2 port map( A => n4454, B => n4455, Z => n4453);
   U4715 : GTECH_NAND2 port map( A => pass_tid_curr_27_port, B => n4299, Z => 
                           n4455);
   U4716 : GTECH_NAND2 port map( A => n4300, B => pass_addr_curr_27_port, Z => 
                           n4454);
   U4717 : GTECH_NAND2 port map( A => n4456, B => n4457, Z => n4452);
   U4718 : GTECH_NAND2 port map( A => n4303, B => trans_id_curr_23_port, Z => 
                           n4457);
   U4719 : GTECH_NAND2 port map( A => trans_id_curr_27_port, B => n4304, Z => 
                           n4456);
   U4720 : GTECH_NOR2 port map( A => n4458, B => n4459, Z => n4450);
   U4721 : GTECH_NAND2 port map( A => n4460, B => n4461, Z => n4459);
   U4722 : GTECH_NAND2 port map( A => n4309, B => pass_num_curr_27_port, Z => 
                           n4461);
   U4723 : GTECH_NAND2 port map( A => n4310, B => n2988, Z => n4460);
   U4724 : GTECH_NOT port map( A => n2254, Z => n2988);
   U4725 : GTECH_NOR2 port map( A => n2792, B => n4462, Z => n4458);
   U4726 : GTECH_NAND2 port map( A => n4463, B => n4464, Z => ll_tx_data(26));
   U4727 : GTECH_NOR2 port map( A => n4465, B => n4466, Z => n4464);
   U4728 : GTECH_NAND2 port map( A => n4467, B => n4468, Z => n4466);
   U4729 : GTECH_NAND2 port map( A => pass_tid_curr_26_port, B => n4299, Z => 
                           n4468);
   U4730 : GTECH_NAND2 port map( A => n4300, B => pass_addr_curr_26_port, Z => 
                           n4467);
   U4731 : GTECH_NAND2 port map( A => n4469, B => n4470, Z => n4465);
   U4732 : GTECH_NAND2 port map( A => n4303, B => trans_id_curr_22_port, Z => 
                           n4470);
   U4733 : GTECH_NAND2 port map( A => trans_id_curr_26_port, B => n4304, Z => 
                           n4469);
   U4734 : GTECH_NOR2 port map( A => n4471, B => n4472, Z => n4463);
   U4735 : GTECH_NAND2 port map( A => n4473, B => n4474, Z => n4472);
   U4736 : GTECH_NAND2 port map( A => n4309, B => pass_num_curr_26_port, Z => 
                           n4474);
   U4737 : GTECH_NAND2 port map( A => n4310, B => n2991, Z => n4473);
   U4738 : GTECH_NOT port map( A => n2255, Z => n2991);
   U4739 : GTECH_NOR2 port map( A => n2792, B => n4475, Z => n4471);
   U4740 : GTECH_NAND2 port map( A => n4476, B => n4477, Z => ll_tx_data(25));
   U4741 : GTECH_NOR2 port map( A => n4478, B => n4479, Z => n4477);
   U4742 : GTECH_NAND2 port map( A => n4480, B => n4481, Z => n4479);
   U4743 : GTECH_NAND2 port map( A => pass_tid_curr_25_port, B => n4299, Z => 
                           n4481);
   U4744 : GTECH_NAND2 port map( A => n4300, B => pass_addr_curr_25_port, Z => 
                           n4480);
   U4745 : GTECH_NAND2 port map( A => n4482, B => n4483, Z => n4478);
   U4746 : GTECH_NAND2 port map( A => n4303, B => trans_id_curr_21_port, Z => 
                           n4483);
   U4747 : GTECH_NAND2 port map( A => trans_id_curr_25_port, B => n4304, Z => 
                           n4482);
   U4748 : GTECH_NOR2 port map( A => n4484, B => n4485, Z => n4476);
   U4749 : GTECH_NAND2 port map( A => n4486, B => n4487, Z => n4485);
   U4750 : GTECH_NAND2 port map( A => n4309, B => pass_num_curr_25_port, Z => 
                           n4487);
   U4751 : GTECH_NAND2 port map( A => n4310, B => n2994, Z => n4486);
   U4752 : GTECH_NOT port map( A => n2256, Z => n2994);
   U4753 : GTECH_NOR2 port map( A => n2792, B => n4488, Z => n4484);
   U4754 : GTECH_NAND2 port map( A => n4489, B => n4490, Z => ll_tx_data(24));
   U4755 : GTECH_NOR2 port map( A => n4491, B => n4492, Z => n4490);
   U4756 : GTECH_NAND2 port map( A => n4493, B => n4494, Z => n4492);
   U4757 : GTECH_NAND2 port map( A => pass_tid_curr_24_port, B => n4299, Z => 
                           n4494);
   U4758 : GTECH_NAND2 port map( A => n4300, B => pass_addr_curr_24_port, Z => 
                           n4493);
   U4759 : GTECH_NAND2 port map( A => n4495, B => n4496, Z => n4491);
   U4760 : GTECH_NAND2 port map( A => n4303, B => trans_id_curr_20_port, Z => 
                           n4496);
   U4761 : GTECH_NAND2 port map( A => trans_id_curr_24_port, B => n4304, Z => 
                           n4495);
   U4762 : GTECH_NOR2 port map( A => n4497, B => n4498, Z => n4489);
   U4763 : GTECH_NAND2 port map( A => n4499, B => n4500, Z => n4498);
   U4764 : GTECH_NAND2 port map( A => n4309, B => pass_num_curr_24_port, Z => 
                           n4500);
   U4765 : GTECH_NAND2 port map( A => n4310, B => n2997, Z => n4499);
   U4766 : GTECH_NOT port map( A => n2257, Z => n2997);
   U4767 : GTECH_NOR2 port map( A => n2792, B => n4501, Z => n4497);
   U4768 : GTECH_NAND2 port map( A => n4502, B => n4503, Z => ll_tx_data(23));
   U4769 : GTECH_NOR2 port map( A => n4504, B => n4505, Z => n4503);
   U4770 : GTECH_NAND2 port map( A => n4506, B => n4507, Z => n4505);
   U4771 : GTECH_NAND2 port map( A => pass_tid_curr_23_port, B => n4299, Z => 
                           n4507);
   U4772 : GTECH_NAND2 port map( A => n4300, B => pass_addr_curr_23_port, Z => 
                           n4506);
   U4773 : GTECH_NAND2 port map( A => n4508, B => n4509, Z => n4504);
   U4774 : GTECH_NAND2 port map( A => n4303, B => trans_id_curr_19_port, Z => 
                           n4509);
   U4775 : GTECH_NAND2 port map( A => trans_id_curr_23_port, B => n4304, Z => 
                           n4508);
   U4776 : GTECH_NOR2 port map( A => n4510, B => n4511, Z => n4502);
   U4777 : GTECH_NAND2 port map( A => n4512, B => n4513, Z => n4511);
   U4778 : GTECH_NAND2 port map( A => n4309, B => pass_num_curr_23_port, Z => 
                           n4513);
   U4779 : GTECH_NAND2 port map( A => n4310, B => n3000, Z => n4512);
   U4780 : GTECH_NOT port map( A => n2258, Z => n3000);
   U4781 : GTECH_NOR2 port map( A => n2792, B => n4514, Z => n4510);
   U4782 : GTECH_NAND2 port map( A => n4515, B => n4516, Z => ll_tx_data(22));
   U4783 : GTECH_NOR2 port map( A => n4517, B => n4518, Z => n4516);
   U4784 : GTECH_NAND2 port map( A => n4519, B => n4520, Z => n4518);
   U4785 : GTECH_NAND2 port map( A => pass_tid_curr_22_port, B => n4299, Z => 
                           n4520);
   U4786 : GTECH_NAND2 port map( A => n4300, B => pass_addr_curr_22_port, Z => 
                           n4519);
   U4787 : GTECH_NAND2 port map( A => n4521, B => n4522, Z => n4517);
   U4788 : GTECH_NAND2 port map( A => n4303, B => trans_id_curr_18_port, Z => 
                           n4522);
   U4789 : GTECH_NAND2 port map( A => trans_id_curr_22_port, B => n4304, Z => 
                           n4521);
   U4790 : GTECH_NOR2 port map( A => n4523, B => n4524, Z => n4515);
   U4791 : GTECH_NAND2 port map( A => n4525, B => n4526, Z => n4524);
   U4792 : GTECH_NAND2 port map( A => n4309, B => pass_num_curr_22_port, Z => 
                           n4526);
   U4793 : GTECH_NAND2 port map( A => n4310, B => n3003, Z => n4525);
   U4794 : GTECH_NOT port map( A => n2259, Z => n3003);
   U4795 : GTECH_NOR2 port map( A => n2792, B => n4527, Z => n4523);
   U4796 : GTECH_NAND2 port map( A => n4528, B => n4529, Z => ll_tx_data(21));
   U4797 : GTECH_NOR2 port map( A => n4530, B => n4531, Z => n4529);
   U4798 : GTECH_NAND2 port map( A => n4532, B => n4533, Z => n4531);
   U4799 : GTECH_NAND2 port map( A => pass_tid_curr_21_port, B => n4299, Z => 
                           n4533);
   U4800 : GTECH_NAND2 port map( A => n4300, B => pass_addr_curr_21_port, Z => 
                           n4532);
   U4801 : GTECH_NAND2 port map( A => n4534, B => n4535, Z => n4530);
   U4802 : GTECH_NAND2 port map( A => n4303, B => trans_id_curr_17_port, Z => 
                           n4535);
   U4803 : GTECH_NAND2 port map( A => trans_id_curr_21_port, B => n4304, Z => 
                           n4534);
   U4804 : GTECH_NOR2 port map( A => n4536, B => n4537, Z => n4528);
   U4805 : GTECH_NAND2 port map( A => n4538, B => n4539, Z => n4537);
   U4806 : GTECH_NAND2 port map( A => n4309, B => pass_num_curr_21_port, Z => 
                           n4539);
   U4807 : GTECH_NAND2 port map( A => n4310, B => n3006, Z => n4538);
   U4808 : GTECH_NOT port map( A => n2260, Z => n3006);
   U4809 : GTECH_NOR2 port map( A => n2792, B => n4540, Z => n4536);
   U4810 : GTECH_NAND2 port map( A => n4541, B => n4542, Z => ll_tx_data(20));
   U4811 : GTECH_NOR2 port map( A => n4543, B => n4544, Z => n4542);
   U4812 : GTECH_NAND2 port map( A => n4545, B => n4546, Z => n4544);
   U4813 : GTECH_NAND2 port map( A => pass_tid_curr_20_port, B => n4299, Z => 
                           n4546);
   U4814 : GTECH_NAND2 port map( A => n4300, B => pass_addr_curr_20_port, Z => 
                           n4545);
   U4815 : GTECH_NAND2 port map( A => n4547, B => n4548, Z => n4543);
   U4816 : GTECH_NAND2 port map( A => n4303, B => trans_id_curr_16_port, Z => 
                           n4548);
   U4817 : GTECH_NAND2 port map( A => trans_id_curr_20_port, B => n4304, Z => 
                           n4547);
   U4818 : GTECH_NOR2 port map( A => n4549, B => n4550, Z => n4541);
   U4819 : GTECH_NAND2 port map( A => n4551, B => n4552, Z => n4550);
   U4820 : GTECH_NAND2 port map( A => n4309, B => pass_num_curr_20_port, Z => 
                           n4552);
   U4821 : GTECH_NAND2 port map( A => n4310, B => n3009, Z => n4551);
   U4822 : GTECH_NOT port map( A => n2261_port, Z => n3009);
   U4823 : GTECH_NOR2 port map( A => n2792, B => n4553, Z => n4549);
   U4824 : GTECH_NAND2 port map( A => n4554, B => n4555, Z => ll_tx_data(1));
   U4825 : GTECH_NOR2 port map( A => n4556, B => n4557, Z => n4555);
   U4826 : GTECH_NAND2 port map( A => n4558, B => n4559, Z => n4557);
   U4827 : GTECH_NAND2 port map( A => trans_id_curr_1_port, B => n4304, Z => 
                           n4559);
   U4828 : GTECH_NAND2 port map( A => pass_tid_curr_1_port, B => n4299, Z => 
                           n4558);
   U4829 : GTECH_NOT port map( A => n4560, Z => n4556);
   U4830 : GTECH_NAND2 port map( A => pass_addr_curr_1_port, B => n4300, Z => 
                           n4560);
   U4831 : GTECH_NOR2 port map( A => n4561, B => n4562, Z => n4554);
   U4832 : GTECH_NAND2 port map( A => n4563, B => n4564, Z => n4562);
   U4833 : GTECH_NAND2 port map( A => n4309, B => pass_num_curr_1_port, Z => 
                           n4564);
   U4834 : GTECH_NAND2 port map( A => n4310, B => n3066, Z => n4563);
   U4835 : GTECH_NOR2 port map( A => n2792, B => n4565, Z => n4561);
   U4836 : GTECH_NAND2 port map( A => n4566, B => n4567, Z => ll_tx_data(19));
   U4837 : GTECH_NOR2 port map( A => n4568, B => n4569, Z => n4567);
   U4838 : GTECH_NAND2 port map( A => n4570, B => n4571, Z => n4569);
   U4839 : GTECH_NAND2 port map( A => pass_tid_curr_19_port, B => n4299, Z => 
                           n4571);
   U4840 : GTECH_NAND2 port map( A => n4300, B => pass_addr_curr_19_port, Z => 
                           n4570);
   U4841 : GTECH_NAND2 port map( A => n4572, B => n4573, Z => n4568);
   U4842 : GTECH_NAND2 port map( A => n4303, B => trans_id_curr_15_port, Z => 
                           n4573);
   U4843 : GTECH_NAND2 port map( A => trans_id_curr_19_port, B => n4304, Z => 
                           n4572);
   U4844 : GTECH_NOR2 port map( A => n4574, B => n4575, Z => n4566);
   U4845 : GTECH_NAND2 port map( A => n4576, B => n4577, Z => n4575);
   U4846 : GTECH_NAND2 port map( A => n4309, B => pass_num_curr_19_port, Z => 
                           n4577);
   U4847 : GTECH_NAND2 port map( A => n4310, B => n3012, Z => n4576);
   U4848 : GTECH_NOT port map( A => n2262_port, Z => n3012);
   U4849 : GTECH_NOR2 port map( A => n2792, B => n4578, Z => n4574);
   U4850 : GTECH_NAND2 port map( A => n4579, B => n4580, Z => ll_tx_data(18));
   U4851 : GTECH_NOR2 port map( A => n4581, B => n4582, Z => n4580);
   U4852 : GTECH_NAND2 port map( A => n4583, B => n4584, Z => n4582);
   U4853 : GTECH_NAND2 port map( A => pass_tid_curr_18_port, B => n4299, Z => 
                           n4584);
   U4854 : GTECH_NAND2 port map( A => n4300, B => pass_addr_curr_18_port, Z => 
                           n4583);
   U4855 : GTECH_NAND2 port map( A => n4585, B => n4586, Z => n4581);
   U4856 : GTECH_NAND2 port map( A => n4303, B => trans_id_curr_14_port, Z => 
                           n4586);
   U4857 : GTECH_NAND2 port map( A => trans_id_curr_18_port, B => n4304, Z => 
                           n4585);
   U4858 : GTECH_NOR2 port map( A => n4587, B => n4588, Z => n4579);
   U4859 : GTECH_NAND2 port map( A => n4589, B => n4590, Z => n4588);
   U4860 : GTECH_NAND2 port map( A => n4309, B => pass_num_curr_18_port, Z => 
                           n4590);
   U4861 : GTECH_NAND2 port map( A => n4310, B => n3015, Z => n4589);
   U4862 : GTECH_NOT port map( A => n2263_port, Z => n3015);
   U4863 : GTECH_NOR2 port map( A => n2792, B => n4591, Z => n4587);
   U4864 : GTECH_NAND2 port map( A => n4592, B => n4593, Z => ll_tx_data(17));
   U4865 : GTECH_NOR2 port map( A => n4594, B => n4595, Z => n4593);
   U4866 : GTECH_NAND2 port map( A => n4596, B => n4597, Z => n4595);
   U4867 : GTECH_NAND2 port map( A => pass_tid_curr_17_port, B => n4299, Z => 
                           n4597);
   U4868 : GTECH_NAND2 port map( A => n4300, B => pass_addr_curr_17_port, Z => 
                           n4596);
   U4869 : GTECH_NAND2 port map( A => n4598, B => n4599, Z => n4594);
   U4870 : GTECH_NAND2 port map( A => n4303, B => trans_id_curr_13_port, Z => 
                           n4599);
   U4871 : GTECH_NAND2 port map( A => trans_id_curr_17_port, B => n4304, Z => 
                           n4598);
   U4872 : GTECH_NOR2 port map( A => n4600, B => n4601, Z => n4592);
   U4873 : GTECH_NAND2 port map( A => n4602, B => n4603, Z => n4601);
   U4874 : GTECH_NAND2 port map( A => n4309, B => pass_num_curr_17_port, Z => 
                           n4603);
   U4875 : GTECH_NAND2 port map( A => n4310, B => n3018, Z => n4602);
   U4876 : GTECH_NOT port map( A => n2264_port, Z => n3018);
   U4877 : GTECH_NOR2 port map( A => n2792, B => n4604, Z => n4600);
   U4878 : GTECH_NAND2 port map( A => n4605, B => n4606, Z => ll_tx_data(16));
   U4879 : GTECH_NOR2 port map( A => n4607, B => n4608, Z => n4606);
   U4880 : GTECH_NAND2 port map( A => n4609, B => n4610, Z => n4608);
   U4881 : GTECH_NAND2 port map( A => pass_tid_curr_16_port, B => n4299, Z => 
                           n4610);
   U4882 : GTECH_NAND2 port map( A => n4300, B => pass_addr_curr_16_port, Z => 
                           n4609);
   U4883 : GTECH_NAND2 port map( A => n4611, B => n4612, Z => n4607);
   U4884 : GTECH_NAND2 port map( A => n4303, B => trans_id_curr_12_port, Z => 
                           n4612);
   U4885 : GTECH_NAND2 port map( A => trans_id_curr_16_port, B => n4304, Z => 
                           n4611);
   U4886 : GTECH_NOR2 port map( A => n4613, B => n4614, Z => n4605);
   U4887 : GTECH_NAND2 port map( A => n4615, B => n4616, Z => n4614);
   U4888 : GTECH_NAND2 port map( A => n4309, B => pass_num_curr_16_port, Z => 
                           n4616);
   U4889 : GTECH_NAND2 port map( A => n4310, B => n3021, Z => n4615);
   U4890 : GTECH_NOT port map( A => n2265_port, Z => n3021);
   U4891 : GTECH_NOR2 port map( A => n2792, B => n4617, Z => n4613);
   U4892 : GTECH_NAND2 port map( A => n4618, B => n4619, Z => ll_tx_data(15));
   U4893 : GTECH_NOR2 port map( A => n4620, B => n4621, Z => n4619);
   U4894 : GTECH_NAND2 port map( A => n4622, B => n4623, Z => n4621);
   U4895 : GTECH_NAND2 port map( A => pass_tid_curr_15_port, B => n4299, Z => 
                           n4623);
   U4896 : GTECH_NAND2 port map( A => n4300, B => pass_addr_curr_15_port, Z => 
                           n4622);
   U4897 : GTECH_NAND2 port map( A => n4624, B => n4625, Z => n4620);
   U4898 : GTECH_NAND2 port map( A => n4303, B => trans_id_curr_11_port, Z => 
                           n4625);
   U4899 : GTECH_NAND2 port map( A => trans_id_curr_15_port, B => n4304, Z => 
                           n4624);
   U4900 : GTECH_NOR2 port map( A => n4626, B => n4627, Z => n4618);
   U4901 : GTECH_NAND2 port map( A => n4628, B => n4629, Z => n4627);
   U4902 : GTECH_NAND2 port map( A => n4309, B => pass_num_curr_15_port, Z => 
                           n4629);
   U4903 : GTECH_NAND2 port map( A => n4310, B => n3024, Z => n4628);
   U4904 : GTECH_NOT port map( A => n2266_port, Z => n3024);
   U4905 : GTECH_NOR2 port map( A => n2792, B => n4630, Z => n4626);
   U4906 : GTECH_NAND2 port map( A => n4631, B => n4632, Z => ll_tx_data(14));
   U4907 : GTECH_NOR2 port map( A => n4633, B => n4634, Z => n4632);
   U4908 : GTECH_NAND2 port map( A => n4635, B => n4636, Z => n4634);
   U4909 : GTECH_NAND2 port map( A => pass_tid_curr_14_port, B => n4299, Z => 
                           n4636);
   U4910 : GTECH_NAND2 port map( A => n4300, B => pass_addr_curr_14_port, Z => 
                           n4635);
   U4911 : GTECH_NAND2 port map( A => n4637, B => n4638, Z => n4633);
   U4912 : GTECH_NAND2 port map( A => n4303, B => trans_id_curr_10_port, Z => 
                           n4638);
   U4913 : GTECH_NAND2 port map( A => trans_id_curr_14_port, B => n4304, Z => 
                           n4637);
   U4914 : GTECH_NOR2 port map( A => n4639, B => n4640, Z => n4631);
   U4915 : GTECH_NAND2 port map( A => n4641, B => n4642, Z => n4640);
   U4916 : GTECH_NAND2 port map( A => n4309, B => pass_num_curr_14_port, Z => 
                           n4642);
   U4917 : GTECH_NAND2 port map( A => n4310, B => n3027, Z => n4641);
   U4918 : GTECH_NOT port map( A => n2267_port, Z => n3027);
   U4919 : GTECH_NOR2 port map( A => n2792, B => n4643, Z => n4639);
   U4920 : GTECH_NAND2 port map( A => n4644, B => n4645, Z => ll_tx_data(13));
   U4921 : GTECH_NOR2 port map( A => n4646, B => n4647, Z => n4645);
   U4922 : GTECH_NAND2 port map( A => n4648, B => n4649, Z => n4647);
   U4923 : GTECH_NAND2 port map( A => pass_tid_curr_13_port, B => n4299, Z => 
                           n4649);
   U4924 : GTECH_NAND2 port map( A => n4300, B => pass_addr_curr_13_port, Z => 
                           n4648);
   U4925 : GTECH_NAND2 port map( A => n4650, B => n4651, Z => n4646);
   U4926 : GTECH_NAND2 port map( A => n4303, B => trans_id_curr_9_port, Z => 
                           n4651);
   U4927 : GTECH_NAND2 port map( A => trans_id_curr_13_port, B => n4304, Z => 
                           n4650);
   U4928 : GTECH_NOR2 port map( A => n4652, B => n4653, Z => n4644);
   U4929 : GTECH_NAND2 port map( A => n4654, B => n4655, Z => n4653);
   U4930 : GTECH_NAND2 port map( A => n4309, B => pass_num_curr_13_port, Z => 
                           n4655);
   U4931 : GTECH_NAND2 port map( A => n4310, B => n3030, Z => n4654);
   U4932 : GTECH_NOT port map( A => n2268_port, Z => n3030);
   U4933 : GTECH_NOR2 port map( A => n2792, B => n4656, Z => n4652);
   U4934 : GTECH_NAND2 port map( A => n4657, B => n4658, Z => ll_tx_data(12));
   U4935 : GTECH_NOR2 port map( A => n4659, B => n4660, Z => n4658);
   U4936 : GTECH_NAND2 port map( A => n4661, B => n4662, Z => n4660);
   U4937 : GTECH_NAND2 port map( A => pass_tid_curr_12_port, B => n4299, Z => 
                           n4662);
   U4938 : GTECH_NAND2 port map( A => n4300, B => pass_addr_curr_12_port, Z => 
                           n4661);
   U4939 : GTECH_NAND2 port map( A => n4663, B => n4664, Z => n4659);
   U4940 : GTECH_NAND2 port map( A => n4303, B => trans_id_curr_8_port, Z => 
                           n4664);
   U4941 : GTECH_NAND2 port map( A => trans_id_curr_12_port, B => n4304, Z => 
                           n4663);
   U4942 : GTECH_NOR2 port map( A => n4665, B => n4666, Z => n4657);
   U4943 : GTECH_NAND2 port map( A => n4667, B => n4668, Z => n4666);
   U4944 : GTECH_NAND2 port map( A => n4309, B => pass_num_curr_12_port, Z => 
                           n4668);
   U4945 : GTECH_NAND2 port map( A => n4310, B => n3033, Z => n4667);
   U4946 : GTECH_NOT port map( A => n2269_port, Z => n3033);
   U4947 : GTECH_NOR2 port map( A => n2792, B => n4669, Z => n4665);
   U4948 : GTECH_NAND2 port map( A => n4670, B => n4671, Z => ll_tx_data(11));
   U4949 : GTECH_NOR2 port map( A => n4672, B => n4673, Z => n4671);
   U4950 : GTECH_NAND2 port map( A => n4674, B => n4675, Z => n4673);
   U4951 : GTECH_NAND2 port map( A => pass_tid_curr_11_port, B => n4299, Z => 
                           n4675);
   U4952 : GTECH_NAND2 port map( A => n4300, B => pass_addr_curr_11_port, Z => 
                           n4674);
   U4953 : GTECH_NAND2 port map( A => n4676, B => n4677, Z => n4672);
   U4954 : GTECH_NAND2 port map( A => n4303, B => trans_id_curr_7_port, Z => 
                           n4677);
   U4955 : GTECH_NAND2 port map( A => trans_id_curr_11_port, B => n4304, Z => 
                           n4676);
   U4956 : GTECH_NOR2 port map( A => n4678, B => n4679, Z => n4670);
   U4957 : GTECH_NAND2 port map( A => n4680, B => n4681, Z => n4679);
   U4958 : GTECH_NAND2 port map( A => n4309, B => pass_num_curr_11_port, Z => 
                           n4681);
   U4959 : GTECH_NAND2 port map( A => n4310, B => n3036, Z => n4680);
   U4960 : GTECH_NOT port map( A => n2270_port, Z => n3036);
   U4961 : GTECH_NOR2 port map( A => n2792, B => n4682, Z => n4678);
   U4962 : GTECH_NAND2 port map( A => n4683, B => n4684, Z => ll_tx_data(10));
   U4963 : GTECH_NOR2 port map( A => n4685, B => n4686, Z => n4684);
   U4964 : GTECH_NAND2 port map( A => n4687, B => n4688, Z => n4686);
   U4965 : GTECH_NAND2 port map( A => pass_tid_curr_10_port, B => n4299, Z => 
                           n4688);
   U4966 : GTECH_NAND2 port map( A => n4300, B => pass_addr_curr_10_port, Z => 
                           n4687);
   U4967 : GTECH_NAND2 port map( A => n4689, B => n4690, Z => n4685);
   U4968 : GTECH_NAND2 port map( A => n4303, B => trans_id_curr_6_port, Z => 
                           n4690);
   U4969 : GTECH_NOR2 port map( A => n4691, B => n3222, Z => n4303);
   U4970 : GTECH_NOT port map( A => n4692, Z => n4691);
   U4971 : GTECH_NAND2 port map( A => trans_id_curr_10_port, B => n4304, Z => 
                           n4689);
   U4972 : GTECH_NOR2 port map( A => n4693, B => n4694, Z => n4683);
   U4973 : GTECH_NAND2 port map( A => n4695, B => n4696, Z => n4694);
   U4974 : GTECH_NAND2 port map( A => n4309, B => pass_num_curr_10_port, Z => 
                           n4696);
   U4975 : GTECH_NAND2 port map( A => n4310, B => n3039, Z => n4695);
   U4976 : GTECH_NOT port map( A => n2271_port, Z => n3039);
   U4977 : GTECH_NOR2 port map( A => n2792, B => n4697, Z => n4693);
   U4978 : GTECH_NAND2 port map( A => n4698, B => n4699, Z => ll_tx_data(0));
   U4979 : GTECH_NOR2 port map( A => n4700, B => n4701, Z => n4699);
   U4980 : GTECH_NAND2 port map( A => n4702, B => n4703, Z => n4701);
   U4981 : GTECH_NAND2 port map( A => trans_id_curr_0_port, B => n4304, Z => 
                           n4703);
   U4982 : GTECH_NOR2 port map( A => n4192, B => pass_thru_mode_curr, Z => 
                           n4304);
   U4983 : GTECH_NAND2 port map( A => pass_tid_curr_0_port, B => n4299, Z => 
                           n4702);
   U4984 : GTECH_NOT port map( A => n4276, Z => n4299);
   U4985 : GTECH_NAND2 port map( A => n3194, B => pass_thru_mode_curr, Z => 
                           n4276);
   U4986 : GTECH_NOT port map( A => n4192, Z => n3194);
   U4987 : GTECH_NAND2 port map( A => n4285, B => n4289, Z => n4192);
   U4988 : GTECH_NOT port map( A => n4704, Z => n4700);
   U4989 : GTECH_NAND2 port map( A => pass_addr_curr_0_port, B => n4300, Z => 
                           n4704);
   U4990 : GTECH_NOR2 port map( A => n3222, B => n4692, Z => n4300);
   U4991 : GTECH_NOR2 port map( A => n3193, B => n2971, Z => n4692);
   U4992 : GTECH_NOR2 port map( A => n4705, B => n4706, Z => n2971);
   U4993 : GTECH_NAND2 port map( A => pass_thru_mode_curr, B => 
                           pass_tid_curr_28_port, Z => n4705);
   U4994 : GTECH_NAND2 port map( A => n4282, B => n4289, Z => n3222);
   U4995 : GTECH_NOR2 port map( A => n3201, B => n4809, Z => n4289);
   U4996 : GTECH_NOR2 port map( A => n4707, B => n4708, Z => n4698);
   U4997 : GTECH_NAND2 port map( A => n4709, B => n4710, Z => n4708);
   U4998 : GTECH_NAND2 port map( A => n4309, B => pass_num_curr_0_port, Z => 
                           n4710);
   U4999 : GTECH_NOR2 port map( A => n3238, B => n3745, Z => n4309);
   U5000 : GTECH_NAND2 port map( A => n4310, B => n3069, Z => n4709);
   U5001 : GTECH_NOT port map( A => n2281_port, Z => n3069);
   U5002 : GTECH_NOR2 port map( A => n4711, B => n3238, Z => n4310);
   U5003 : GTECH_NAND2 port map( A => n4712, B => n4282, Z => n3238);
   U5004 : GTECH_NOR2 port map( A => n4807, B => n4810, Z => n4282);
   U5005 : GTECH_NAND2 port map( A => n3745, B => n4201, Z => n4711);
   U5006 : GTECH_NOR2 port map( A => n2792, B => n4713, Z => n4707);
   U5007 : GTECH_NAND2 port map( A => n4712, B => n4285, Z => n2792);
   U5008 : GTECH_NOR2 port map( A => n4292, B => n4810, Z => n4285);
   U5009 : GTECH_NOT port map( A => n4807, Z => n4292);
   U5010 : GTECH_NOR2 port map( A => n3227, B => n3201, Z => n4712);
   U5011 : GTECH_NOT port map( A => n4808, Z => n3201);
   U5012 : GTECH_NOT port map( A => n4809, Z => n3227);
   U5013 : GTECH_NOR2 port map( A => n4714, B => N1090, Z => N2301);
   U5014 : GTECH_NOT port map( A => n4215, Z => n4714);
   U5015 : GTECH_NAND2 port map( A => n4715, B => n4716, Z => n4215);
   U5016 : GTECH_NOR2 port map( A => n4717, B => n4718, Z => n4716);
   U5017 : GTECH_NAND2 port map( A => n4719, B => n4720, Z => n4718);
   U5018 : GTECH_NOR2 port map( A => n4721, B => n4722, Z => n4720);
   U5019 : GTECH_NAND2 port map( A => tmp_addr_curr_17_port, B => 
                           tmp_addr_curr_16_port, Z => n4722);
   U5020 : GTECH_NAND2 port map( A => tmp_addr_curr_15_port, B => 
                           tmp_addr_curr_14_port, Z => n4721);
   U5021 : GTECH_NOR2 port map( A => n4096, B => n4723, Z => n4719);
   U5022 : GTECH_NAND2 port map( A => tmp_addr_curr_19_port, B => 
                           tmp_addr_curr_18_port, Z => n4723);
   U5023 : GTECH_NOT port map( A => tmp_addr_curr_20_port, Z => n4096);
   U5024 : GTECH_NAND2 port map( A => n4724, B => n4725, Z => n4717);
   U5025 : GTECH_NOR2 port map( A => n4726, B => n4727, Z => n4725);
   U5026 : GTECH_NAND2 port map( A => tmp_addr_curr_10_port, B => n4255, Z => 
                           n4727);
   U5027 : GTECH_NOT port map( A => tmp_addr_curr_0_port, Z => n4255);
   U5028 : GTECH_NAND2 port map( A => n4254, B => n4253, Z => n4726);
   U5029 : GTECH_NOT port map( A => tmp_addr_curr_2_port, Z => n4253);
   U5030 : GTECH_NOT port map( A => tmp_addr_curr_1_port, Z => n4254);
   U5031 : GTECH_NOR2 port map( A => n4012, B => n4728, Z => n4724);
   U5032 : GTECH_NAND2 port map( A => tmp_addr_curr_12_port, B => 
                           tmp_addr_curr_11_port, Z => n4728);
   U5033 : GTECH_NOT port map( A => tmp_addr_curr_13_port, Z => n4012);
   U5034 : GTECH_NOR2 port map( A => n4729, B => n4730, Z => n4715);
   U5035 : GTECH_NAND2 port map( A => n4731, B => n4732, Z => n4730);
   U5036 : GTECH_NOR2 port map( A => n4733, B => n4734, Z => n4732);
   U5037 : GTECH_NAND2 port map( A => tmp_addr_curr_6_port, B => 
                           tmp_addr_curr_5_port, Z => n4734);
   U5038 : GTECH_NAND2 port map( A => tmp_addr_curr_4_port, B => 
                           tmp_addr_curr_3_port, Z => n4733);
   U5039 : GTECH_NOR2 port map( A => n3964, B => n4735, Z => n4731);
   U5040 : GTECH_NAND2 port map( A => tmp_addr_curr_8_port, B => 
                           tmp_addr_curr_7_port, Z => n4735);
   U5041 : GTECH_NOT port map( A => tmp_addr_curr_9_port, Z => n3964);
   U5042 : GTECH_NAND2 port map( A => n4736, B => n4737, Z => n4729);
   U5043 : GTECH_NOR2 port map( A => n4738, B => n4739, Z => n4737);
   U5044 : GTECH_NAND2 port map( A => tmp_addr_curr_24_port, B => 
                           tmp_addr_curr_23_port, Z => n4739);
   U5045 : GTECH_NAND2 port map( A => tmp_addr_curr_22_port, B => 
                           tmp_addr_curr_21_port, Z => n4738);
   U5046 : GTECH_NOR2 port map( A => n4193, B => n4740, Z => n4736);
   U5047 : GTECH_NAND2 port map( A => tmp_addr_curr_26_port, B => 
                           tmp_addr_curr_25_port, Z => n4740);
   U5048 : GTECH_NOT port map( A => tmp_addr_curr_27_port, Z => n4193);
   U5049 : GTECH_NOR2 port map( A => n3641, B => n4741, Z => N2296);
   U5050 : GTECH_NOR2 port map( A => n4742, B => N2261, Z => n4741);
   U5051 : GTECH_NOR2 port map( A => n3193, B => n3745, Z => n4742);
   U5052 : GTECH_NOT port map( A => pass_thru_mode_curr, Z => n3745);
   U5053 : GTECH_NOT port map( A => n4743, Z => n3641);
   U5054 : GTECH_NAND2 port map( A => n4744, B => n4745, Z => n4743);
   U5055 : GTECH_NOR2 port map( A => n4746, B => n4747, Z => n4745);
   U5056 : GTECH_NAND2 port map( A => n4748, B => n4749, Z => n4747);
   U5057 : GTECH_NOR2 port map( A => n4750, B => n4751, Z => n4749);
   U5058 : GTECH_NAND2 port map( A => n2261_port, B => n2260, Z => n4751);
   U5059 : GTECH_NAND2 port map( A => n2259, B => n2258, Z => n4750);
   U5060 : GTECH_NOR2 port map( A => n4752, B => n4753, Z => n4748);
   U5061 : GTECH_NAND2 port map( A => n2265_port, B => n2264_port, Z => n4753);
   U5062 : GTECH_NAND2 port map( A => n2263_port, B => n2262_port, Z => n4752);
   U5063 : GTECH_NAND2 port map( A => n4754, B => n4755, Z => n4746);
   U5064 : GTECH_NOR2 port map( A => n4756, B => n4757, Z => n4755);
   U5065 : GTECH_NAND2 port map( A => n2253, B => n2252, Z => n4757);
   U5066 : GTECH_NAND2 port map( A => n2251, B => n2250, Z => n4756);
   U5067 : GTECH_NOR2 port map( A => n4758, B => n4759, Z => n4754);
   U5068 : GTECH_NAND2 port map( A => n2257, B => n2256, Z => n4759);
   U5069 : GTECH_NAND2 port map( A => n2255, B => n2254, Z => n4758);
   U5070 : GTECH_NOR2 port map( A => n4760, B => n4761, Z => n4744);
   U5071 : GTECH_NAND2 port map( A => n4762, B => n4763, Z => n4761);
   U5072 : GTECH_NOR2 port map( A => n4764, B => n4765, Z => n4763);
   U5073 : GTECH_NAND2 port map( A => n2277_port, B => n2276_port, Z => n4765);
   U5074 : GTECH_NAND2 port map( A => n2275_port, B => n2274_port, Z => n4764);
   U5075 : GTECH_NOR2 port map( A => n3066, B => n4766, Z => n4762);
   U5076 : GTECH_NAND2 port map( A => n2279_port, B => n2278_port, Z => n4766);
   U5077 : GTECH_NOT port map( A => n2280_port, Z => n3066);
   U5078 : GTECH_NAND2 port map( A => n4767, B => n4768, Z => n4760);
   U5079 : GTECH_NOR2 port map( A => n4769, B => n4770, Z => n4768);
   U5080 : GTECH_NAND2 port map( A => n2269_port, B => n2268_port, Z => n4770);
   U5081 : GTECH_NAND2 port map( A => n2267_port, B => n2266_port, Z => n4769);
   U5082 : GTECH_NOR2 port map( A => n4771, B => n4772, Z => n4767);
   U5083 : GTECH_NAND2 port map( A => n2273_port, B => n2272_port, Z => n4772);
   U5084 : GTECH_NAND2 port map( A => n2271_port, B => n2270_port, Z => n4771);
   U5085 : GTECH_NOR2 port map( A => n3193, B => n4444, Z => N2261);
   U5086 : GTECH_NOT port map( A => n4201, Z => n4444);
   U5087 : GTECH_NAND2 port map( A => n4773, B => n4208, Z => n4201);
   U5088 : GTECH_NOR2 port map( A => trans_type_curr_3_port, B => 
                           trans_type_curr_2_port, Z => n4208);
   U5089 : GTECH_NOR2 port map( A => trans_type_curr_1_port, B => n4209, Z => 
                           n4773);
   U5090 : GTECH_NOT port map( A => trans_type_curr_0_port, Z => n4209);
   U5091 : GTECH_NOR2 port map( A => n4774, B => n4706, Z => n3193);
   U5092 : GTECH_NAND2 port map( A => n4775, B => n4776, Z => n4706);
   U5093 : GTECH_NOR2 port map( A => pass_tid_curr_30_port, B => 
                           pass_tid_curr_31_port, Z => n4776);
   U5094 : GTECH_NOT port map( A => pass_tid_curr_29_port, Z => n4775);
   U5095 : GTECH_NAND2 port map( A => n4777, B => pass_thru_mode_curr, Z => 
                           n4774);
   U5096 : GTECH_NOT port map( A => pass_tid_curr_28_port, Z => n4777);
   U5097 : GTECH_NOR2 port map( A => n3144, B => n2745, Z => N1840);
   U5098 : GTECH_NOT port map( A => ack, Z => n3144);
   U5099 : GTECH_NOR2 port map( A => n2745, B => n4400, Z => N1839);
   U5100 : GTECH_NOT port map( A => mem_data_in(31), Z => n4400);
   U5101 : GTECH_NOR2 port map( A => n2745, B => n4412, Z => N1838);
   U5102 : GTECH_NOT port map( A => mem_data_in(30), Z => n4412);
   U5103 : GTECH_NOR2 port map( A => n2745, B => n4449, Z => N1836);
   U5104 : GTECH_NOT port map( A => mem_data_in(28), Z => n4449);
   U5105 : GTECH_NOR2 port map( A => n2745, B => n4462, Z => N1835);
   U5106 : GTECH_NOT port map( A => mem_data_in(27), Z => n4462);
   U5107 : GTECH_NOR2 port map( A => n2745, B => n4475, Z => N1834);
   U5108 : GTECH_NOT port map( A => mem_data_in(26), Z => n4475);
   U5109 : GTECH_NOR2 port map( A => n2745, B => n4488, Z => N1833);
   U5110 : GTECH_NOT port map( A => mem_data_in(25), Z => n4488);
   U5111 : GTECH_NOR2 port map( A => n2745, B => n4501, Z => N1832);
   U5112 : GTECH_NOT port map( A => mem_data_in(24), Z => n4501);
   U5113 : GTECH_NOR2 port map( A => n2745, B => n4514, Z => N1831);
   U5114 : GTECH_NOT port map( A => mem_data_in(23), Z => n4514);
   U5115 : GTECH_NOR2 port map( A => n2745, B => n4527, Z => N1830);
   U5116 : GTECH_NOT port map( A => mem_data_in(22), Z => n4527);
   U5117 : GTECH_NOR2 port map( A => n2745, B => n4540, Z => N1829);
   U5118 : GTECH_NOT port map( A => mem_data_in(21), Z => n4540);
   U5119 : GTECH_NOR2 port map( A => n2745, B => n4553, Z => N1828);
   U5120 : GTECH_NOT port map( A => mem_data_in(20), Z => n4553);
   U5121 : GTECH_NOR2 port map( A => n2745, B => n4578, Z => N1827);
   U5122 : GTECH_NOT port map( A => mem_data_in(19), Z => n4578);
   U5123 : GTECH_NOR2 port map( A => n2745, B => n4591, Z => N1826);
   U5124 : GTECH_NOT port map( A => mem_data_in(18), Z => n4591);
   U5125 : GTECH_NOR2 port map( A => n2745, B => n4604, Z => N1825);
   U5126 : GTECH_NOT port map( A => mem_data_in(17), Z => n4604);
   U5127 : GTECH_NOR2 port map( A => n2745, B => n4617, Z => N1824);
   U5128 : GTECH_NOT port map( A => mem_data_in(16), Z => n4617);
   U5129 : GTECH_NOR2 port map( A => n2745, B => n4630, Z => N1823);
   U5130 : GTECH_NOT port map( A => mem_data_in(15), Z => n4630);
   U5131 : GTECH_NOR2 port map( A => n2745, B => n4643, Z => N1822);
   U5132 : GTECH_NOT port map( A => mem_data_in(14), Z => n4643);
   U5133 : GTECH_NOR2 port map( A => n2745, B => n4656, Z => N1821);
   U5134 : GTECH_NOT port map( A => mem_data_in(13), Z => n4656);
   U5135 : GTECH_NOR2 port map( A => n2745, B => n4669, Z => N1820);
   U5136 : GTECH_NOT port map( A => mem_data_in(12), Z => n4669);
   U5137 : GTECH_NOR2 port map( A => n2745, B => n4682, Z => N1819);
   U5138 : GTECH_NOT port map( A => mem_data_in(11), Z => n4682);
   U5139 : GTECH_NOR2 port map( A => n2745, B => n4697, Z => N1818);
   U5140 : GTECH_NOT port map( A => mem_data_in(10), Z => n4697);
   U5141 : GTECH_NOR2 port map( A => n2745, B => n4311, Z => N1817);
   U5142 : GTECH_NOT port map( A => mem_data_in(9), Z => n4311);
   U5143 : GTECH_NOR2 port map( A => n2745, B => n4324, Z => N1816);
   U5144 : GTECH_NOT port map( A => mem_data_in(8), Z => n4324);
   U5145 : GTECH_NOR2 port map( A => n2745, B => n4337, Z => N1815);
   U5146 : GTECH_NOT port map( A => mem_data_in(7), Z => n4337);
   U5147 : GTECH_NOR2 port map( A => n2745, B => n4350, Z => N1814);
   U5148 : GTECH_NOT port map( A => mem_data_in(6), Z => n4350);
   U5149 : GTECH_NOR2 port map( A => n2745, B => n4363, Z => N1813);
   U5150 : GTECH_NOT port map( A => mem_data_in(5), Z => n4363);
   U5151 : GTECH_NOR2 port map( A => n2745, B => n4376, Z => N1812);
   U5152 : GTECH_NOT port map( A => mem_data_in(4), Z => n4376);
   U5153 : GTECH_NOR2 port map( A => n2745, B => n4388, Z => N1811);
   U5154 : GTECH_NOT port map( A => mem_data_in(3), Z => n4388);
   U5155 : GTECH_NOR2 port map( A => n2745, B => n4424, Z => N1810);
   U5156 : GTECH_NOT port map( A => mem_data_in(2), Z => n4424);
   U5157 : GTECH_NOR2 port map( A => n2745, B => n4565, Z => N1809);
   U5158 : GTECH_NOT port map( A => mem_data_in(1), Z => n4565);
   U5159 : GTECH_NOR2 port map( A => n2745, B => n4713, Z => N1808);
   U5160 : GTECH_NOT port map( A => mem_data_in(0), Z => n4713);
   U5161 : GTECH_NOT port map( A => reset_b, Z => n2745);

end SYN_beh;

library IEEE;

use IEEE.std_logic_1164.all;

package CONV_PACK_memory_subsystem is

-- define attributes
attribute ENUM_ENCODING : STRING;

end CONV_PACK_memory_subsystem;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_memory_subsystem.all;

entity memory_subsystem is

   port( clk, reset_b : in std_logic;  axi4s_tx_tdata : out std_logic_vector 
         (31 downto 0);  axi4s_tx_tstrb, axi4s_tx_tkeep : out std_logic_vector 
         (3 downto 0);  axi4s_tx_tvalid, axi4s_tx_tlast : out std_logic;  
         axi4s_tx_tid : out std_logic_vector (2 downto 0);  axi4s_tx_tdest : 
         out std_logic_vector (4 downto 0);  axi4s_tx_tuser : out 
         std_logic_vector (3 downto 0);  axi4s_tx_tready : in std_logic;  
         axi4s_rx_tdata : in std_logic_vector (31 downto 0);  axi4s_rx_tstrb, 
         axi4s_rx_tkeep : in std_logic_vector (3 downto 0);  axi4s_rx_tvalid, 
         axi4s_rx_tlast : in std_logic;  axi4s_rx_tid : in std_logic_vector (2 
         downto 0);  axi4s_rx_tdest : in std_logic_vector (4 downto 0);  
         axi4s_rx_tuser : in std_logic_vector (3 downto 0);  axi4s_rx_tready : 
         out std_logic;  mem_addr : out std_logic_vector (27 downto 0);  
         mem_rd_en, mem_wr_en : out std_logic;  mem_data_in : in 
         std_logic_vector (31 downto 0);  mem_data_out : out std_logic_vector 
         (31 downto 0);  mem_data_be : out std_logic_vector (3 downto 0);  ack 
         : in std_logic);

end memory_subsystem;

architecture SYN_beh of memory_subsystem is

   component mem_C
      port( clk, reset_b : in std_logic;  mem_addr : out std_logic_vector (27 
            downto 0);  mem_rd_en, mem_wr_en : out std_logic;  mem_data_in : in
            std_logic_vector (31 downto 0);  mem_data_out : out 
            std_logic_vector (31 downto 0);  mem_data_be : out std_logic_vector
            (3 downto 0);  ack : in std_logic;  ll_rx_data : in 
            std_logic_vector (31 downto 0);  ll_rx_data_be : in 
            std_logic_vector (3 downto 0);  ll_rx_sof_n, ll_rx_eof_n, 
            ll_rx_src_rdy_n : in std_logic;  ll_rx_dst_rdy_n : out std_logic;  
            rx_dst, rx_src : in std_logic_vector (4 downto 0);  rx_len : in 
            std_logic_vector (31 downto 0);  ll_tx_data : out std_logic_vector 
            (31 downto 0);  ll_tx_data_be : out std_logic_vector (3 downto 0); 
            ll_tx_sof_n, ll_tx_eof_n, ll_tx_src_rdy_n : out std_logic;  
            ll_tx_dst_rdy_n : in std_logic;  tx_dst, tx_src : out 
            std_logic_vector (4 downto 0);  tx_len : out std_logic_vector (31 
            downto 0));
   end component;
   
   component axi4s_to_ll_bridge
      port( clk, reset_b : in std_logic;  axi4s_tx_tdata : out std_logic_vector
            (31 downto 0);  axi4s_tx_tstrb, axi4s_tx_tkeep : out 
            std_logic_vector (3 downto 0);  axi4s_tx_tvalid, axi4s_tx_tlast : 
            out std_logic;  axi4s_tx_tid : out std_logic_vector (2 downto 0);  
            axi4s_tx_tdest : out std_logic_vector (4 downto 0);  axi4s_tx_tuser
            : out std_logic_vector (3 downto 0);  axi4s_tx_tready : in 
            std_logic;  axi4s_rx_tdata : in std_logic_vector (31 downto 0);  
            axi4s_rx_tstrb, axi4s_rx_tkeep : in std_logic_vector (3 downto 0); 
            axi4s_rx_tvalid, axi4s_rx_tlast : in std_logic;  axi4s_rx_tid : in 
            std_logic_vector (2 downto 0);  axi4s_rx_tdest : in 
            std_logic_vector (4 downto 0);  axi4s_rx_tuser : in 
            std_logic_vector (3 downto 0);  axi4s_rx_tready : out std_logic;  
            ll_rx_data : out std_logic_vector (31 downto 0);  ll_rx_data_be : 
            out std_logic_vector (3 downto 0);  ll_rx_sof_n, ll_rx_eof_n, 
            ll_rx_src_rdy_n : out std_logic;  ll_rx_dst_rdy_n : in std_logic;  
            ll_tx_data : in std_logic_vector (31 downto 0);  ll_tx_data_be : in
            std_logic_vector (3 downto 0);  ll_tx_sof_n, ll_tx_eof_n, 
            ll_tx_src_rdy_n : in std_logic;  ll_tx_dst_rdy_n : out std_logic;  
            rx_dst, rx_src : out std_logic_vector (4 downto 0);  rx_len : out 
            std_logic_vector (31 downto 0);  tx_dst, tx_src : in 
            std_logic_vector (4 downto 0);  tx_len : in std_logic_vector (31 
            downto 0));
   end component;
   
   signal ll_rx_data_31_port, ll_rx_data_30_port, ll_rx_data_29_port, 
      ll_rx_data_28_port, ll_rx_data_27_port, ll_rx_data_26_port, 
      ll_rx_data_25_port, ll_rx_data_24_port, ll_rx_data_23_port, 
      ll_rx_data_22_port, ll_rx_data_21_port, ll_rx_data_20_port, 
      ll_rx_data_19_port, ll_rx_data_18_port, ll_rx_data_17_port, 
      ll_rx_data_16_port, ll_rx_data_15_port, ll_rx_data_14_port, 
      ll_rx_data_13_port, ll_rx_data_12_port, ll_rx_data_11_port, 
      ll_rx_data_10_port, ll_rx_data_9_port, ll_rx_data_8_port, 
      ll_rx_data_7_port, ll_rx_data_6_port, ll_rx_data_5_port, 
      ll_rx_data_4_port, ll_rx_data_3_port, ll_rx_data_2_port, 
      ll_rx_data_1_port, ll_rx_data_0_port, ll_rx_data_be_3_port, 
      ll_rx_data_be_2_port, ll_rx_data_be_1_port, ll_rx_data_be_0_port, 
      ll_rx_sof_n, ll_rx_eof_n, ll_rx_src_rdy_n, ll_rx_dst_rdy_n, 
      ll_tx_data_31_port, ll_tx_data_30_port, ll_tx_data_29_port, 
      ll_tx_data_28_port, ll_tx_data_27_port, ll_tx_data_26_port, 
      ll_tx_data_25_port, ll_tx_data_24_port, ll_tx_data_23_port, 
      ll_tx_data_22_port, ll_tx_data_21_port, ll_tx_data_20_port, 
      ll_tx_data_19_port, ll_tx_data_18_port, ll_tx_data_17_port, 
      ll_tx_data_16_port, ll_tx_data_15_port, ll_tx_data_14_port, 
      ll_tx_data_13_port, ll_tx_data_12_port, ll_tx_data_11_port, 
      ll_tx_data_10_port, ll_tx_data_9_port, ll_tx_data_8_port, 
      ll_tx_data_7_port, ll_tx_data_6_port, ll_tx_data_5_port, 
      ll_tx_data_4_port, ll_tx_data_3_port, ll_tx_data_2_port, 
      ll_tx_data_1_port, ll_tx_data_0_port, ll_tx_data_be_3_port, 
      ll_tx_data_be_2_port, ll_tx_data_be_1_port, ll_tx_data_be_0_port, 
      ll_tx_sof_n, ll_tx_eof_n, ll_tx_src_rdy_n, ll_tx_dst_rdy_n, rx_dst_4_port
      , rx_dst_3_port, rx_dst_2_port, rx_dst_1_port, rx_dst_0_port, 
      rx_src_4_port, rx_src_3_port, rx_src_2_port, rx_src_1_port, rx_src_0_port
      , rx_len_31_port, rx_len_30_port, rx_len_29_port, rx_len_28_port, 
      rx_len_27_port, rx_len_26_port, rx_len_25_port, rx_len_24_port, 
      rx_len_23_port, rx_len_22_port, rx_len_21_port, rx_len_20_port, 
      rx_len_19_port, rx_len_18_port, rx_len_17_port, rx_len_16_port, 
      rx_len_15_port, rx_len_14_port, rx_len_13_port, rx_len_12_port, 
      rx_len_11_port, rx_len_10_port, rx_len_9_port, rx_len_8_port, 
      rx_len_7_port, rx_len_6_port, rx_len_5_port, rx_len_4_port, rx_len_3_port
      , rx_len_2_port, rx_len_1_port, rx_len_0_port, tx_dst_4_port, 
      tx_dst_3_port, tx_dst_2_port, tx_dst_1_port, tx_dst_0_port, tx_src_4_port
      , tx_src_3_port, tx_src_2_port, tx_src_1_port, tx_src_0_port, 
      tx_len_31_port, tx_len_30_port, tx_len_29_port, tx_len_28_port, 
      tx_len_27_port, tx_len_26_port, tx_len_25_port, tx_len_24_port, 
      tx_len_23_port, tx_len_22_port, tx_len_21_port, tx_len_20_port, 
      tx_len_19_port, tx_len_18_port, tx_len_17_port, tx_len_16_port, 
      tx_len_15_port, tx_len_14_port, tx_len_13_port, tx_len_12_port, 
      tx_len_11_port, tx_len_10_port, tx_len_9_port, tx_len_8_port, 
      tx_len_7_port, tx_len_6_port, tx_len_5_port, tx_len_4_port, tx_len_3_port
      , tx_len_2_port, tx_len_1_port, tx_len_0_port : std_logic;

begin
   
   axi4s_to_ll_bridge_i : axi4s_to_ll_bridge port map( clk => clk, reset_b => 
                           reset_b, axi4s_tx_tdata(31) => axi4s_tx_tdata(31), 
                           axi4s_tx_tdata(30) => axi4s_tx_tdata(30), 
                           axi4s_tx_tdata(29) => axi4s_tx_tdata(29), 
                           axi4s_tx_tdata(28) => axi4s_tx_tdata(28), 
                           axi4s_tx_tdata(27) => axi4s_tx_tdata(27), 
                           axi4s_tx_tdata(26) => axi4s_tx_tdata(26), 
                           axi4s_tx_tdata(25) => axi4s_tx_tdata(25), 
                           axi4s_tx_tdata(24) => axi4s_tx_tdata(24), 
                           axi4s_tx_tdata(23) => axi4s_tx_tdata(23), 
                           axi4s_tx_tdata(22) => axi4s_tx_tdata(22), 
                           axi4s_tx_tdata(21) => axi4s_tx_tdata(21), 
                           axi4s_tx_tdata(20) => axi4s_tx_tdata(20), 
                           axi4s_tx_tdata(19) => axi4s_tx_tdata(19), 
                           axi4s_tx_tdata(18) => axi4s_tx_tdata(18), 
                           axi4s_tx_tdata(17) => axi4s_tx_tdata(17), 
                           axi4s_tx_tdata(16) => axi4s_tx_tdata(16), 
                           axi4s_tx_tdata(15) => axi4s_tx_tdata(15), 
                           axi4s_tx_tdata(14) => axi4s_tx_tdata(14), 
                           axi4s_tx_tdata(13) => axi4s_tx_tdata(13), 
                           axi4s_tx_tdata(12) => axi4s_tx_tdata(12), 
                           axi4s_tx_tdata(11) => axi4s_tx_tdata(11), 
                           axi4s_tx_tdata(10) => axi4s_tx_tdata(10), 
                           axi4s_tx_tdata(9) => axi4s_tx_tdata(9), 
                           axi4s_tx_tdata(8) => axi4s_tx_tdata(8), 
                           axi4s_tx_tdata(7) => axi4s_tx_tdata(7), 
                           axi4s_tx_tdata(6) => axi4s_tx_tdata(6), 
                           axi4s_tx_tdata(5) => axi4s_tx_tdata(5), 
                           axi4s_tx_tdata(4) => axi4s_tx_tdata(4), 
                           axi4s_tx_tdata(3) => axi4s_tx_tdata(3), 
                           axi4s_tx_tdata(2) => axi4s_tx_tdata(2), 
                           axi4s_tx_tdata(1) => axi4s_tx_tdata(1), 
                           axi4s_tx_tdata(0) => axi4s_tx_tdata(0), 
                           axi4s_tx_tstrb(3) => axi4s_tx_tstrb(3), 
                           axi4s_tx_tstrb(2) => axi4s_tx_tstrb(2), 
                           axi4s_tx_tstrb(1) => axi4s_tx_tstrb(1), 
                           axi4s_tx_tstrb(0) => axi4s_tx_tstrb(0), 
                           axi4s_tx_tkeep(3) => axi4s_tx_tkeep(3), 
                           axi4s_tx_tkeep(2) => axi4s_tx_tkeep(2), 
                           axi4s_tx_tkeep(1) => axi4s_tx_tkeep(1), 
                           axi4s_tx_tkeep(0) => axi4s_tx_tkeep(0), 
                           axi4s_tx_tvalid => axi4s_tx_tvalid, axi4s_tx_tlast 
                           => axi4s_tx_tlast, axi4s_tx_tid(2) => 
                           axi4s_tx_tid(2), axi4s_tx_tid(1) => axi4s_tx_tid(1),
                           axi4s_tx_tid(0) => axi4s_tx_tid(0), 
                           axi4s_tx_tdest(4) => axi4s_tx_tdest(4), 
                           axi4s_tx_tdest(3) => axi4s_tx_tdest(3), 
                           axi4s_tx_tdest(2) => axi4s_tx_tdest(2), 
                           axi4s_tx_tdest(1) => axi4s_tx_tdest(1), 
                           axi4s_tx_tdest(0) => axi4s_tx_tdest(0), 
                           axi4s_tx_tuser(3) => axi4s_tx_tuser(3), 
                           axi4s_tx_tuser(2) => axi4s_tx_tuser(2), 
                           axi4s_tx_tuser(1) => axi4s_tx_tuser(1), 
                           axi4s_tx_tuser(0) => axi4s_tx_tuser(0), 
                           axi4s_tx_tready => axi4s_tx_tready, 
                           axi4s_rx_tdata(31) => axi4s_rx_tdata(31), 
                           axi4s_rx_tdata(30) => axi4s_rx_tdata(30), 
                           axi4s_rx_tdata(29) => axi4s_rx_tdata(29), 
                           axi4s_rx_tdata(28) => axi4s_rx_tdata(28), 
                           axi4s_rx_tdata(27) => axi4s_rx_tdata(27), 
                           axi4s_rx_tdata(26) => axi4s_rx_tdata(26), 
                           axi4s_rx_tdata(25) => axi4s_rx_tdata(25), 
                           axi4s_rx_tdata(24) => axi4s_rx_tdata(24), 
                           axi4s_rx_tdata(23) => axi4s_rx_tdata(23), 
                           axi4s_rx_tdata(22) => axi4s_rx_tdata(22), 
                           axi4s_rx_tdata(21) => axi4s_rx_tdata(21), 
                           axi4s_rx_tdata(20) => axi4s_rx_tdata(20), 
                           axi4s_rx_tdata(19) => axi4s_rx_tdata(19), 
                           axi4s_rx_tdata(18) => axi4s_rx_tdata(18), 
                           axi4s_rx_tdata(17) => axi4s_rx_tdata(17), 
                           axi4s_rx_tdata(16) => axi4s_rx_tdata(16), 
                           axi4s_rx_tdata(15) => axi4s_rx_tdata(15), 
                           axi4s_rx_tdata(14) => axi4s_rx_tdata(14), 
                           axi4s_rx_tdata(13) => axi4s_rx_tdata(13), 
                           axi4s_rx_tdata(12) => axi4s_rx_tdata(12), 
                           axi4s_rx_tdata(11) => axi4s_rx_tdata(11), 
                           axi4s_rx_tdata(10) => axi4s_rx_tdata(10), 
                           axi4s_rx_tdata(9) => axi4s_rx_tdata(9), 
                           axi4s_rx_tdata(8) => axi4s_rx_tdata(8), 
                           axi4s_rx_tdata(7) => axi4s_rx_tdata(7), 
                           axi4s_rx_tdata(6) => axi4s_rx_tdata(6), 
                           axi4s_rx_tdata(5) => axi4s_rx_tdata(5), 
                           axi4s_rx_tdata(4) => axi4s_rx_tdata(4), 
                           axi4s_rx_tdata(3) => axi4s_rx_tdata(3), 
                           axi4s_rx_tdata(2) => axi4s_rx_tdata(2), 
                           axi4s_rx_tdata(1) => axi4s_rx_tdata(1), 
                           axi4s_rx_tdata(0) => axi4s_rx_tdata(0), 
                           axi4s_rx_tstrb(3) => axi4s_rx_tstrb(3), 
                           axi4s_rx_tstrb(2) => axi4s_rx_tstrb(2), 
                           axi4s_rx_tstrb(1) => axi4s_rx_tstrb(1), 
                           axi4s_rx_tstrb(0) => axi4s_rx_tstrb(0), 
                           axi4s_rx_tkeep(3) => axi4s_rx_tkeep(3), 
                           axi4s_rx_tkeep(2) => axi4s_rx_tkeep(2), 
                           axi4s_rx_tkeep(1) => axi4s_rx_tkeep(1), 
                           axi4s_rx_tkeep(0) => axi4s_rx_tkeep(0), 
                           axi4s_rx_tvalid => axi4s_rx_tvalid, axi4s_rx_tlast 
                           => axi4s_rx_tlast, axi4s_rx_tid(2) => 
                           axi4s_rx_tid(2), axi4s_rx_tid(1) => axi4s_rx_tid(1),
                           axi4s_rx_tid(0) => axi4s_rx_tid(0), 
                           axi4s_rx_tdest(4) => axi4s_rx_tdest(4), 
                           axi4s_rx_tdest(3) => axi4s_rx_tdest(3), 
                           axi4s_rx_tdest(2) => axi4s_rx_tdest(2), 
                           axi4s_rx_tdest(1) => axi4s_rx_tdest(1), 
                           axi4s_rx_tdest(0) => axi4s_rx_tdest(0), 
                           axi4s_rx_tuser(3) => axi4s_rx_tuser(3), 
                           axi4s_rx_tuser(2) => axi4s_rx_tuser(2), 
                           axi4s_rx_tuser(1) => axi4s_rx_tuser(1), 
                           axi4s_rx_tuser(0) => axi4s_rx_tuser(0), 
                           axi4s_rx_tready => axi4s_rx_tready, ll_rx_data(31) 
                           => ll_rx_data_31_port, ll_rx_data(30) => 
                           ll_rx_data_30_port, ll_rx_data(29) => 
                           ll_rx_data_29_port, ll_rx_data(28) => 
                           ll_rx_data_28_port, ll_rx_data(27) => 
                           ll_rx_data_27_port, ll_rx_data(26) => 
                           ll_rx_data_26_port, ll_rx_data(25) => 
                           ll_rx_data_25_port, ll_rx_data(24) => 
                           ll_rx_data_24_port, ll_rx_data(23) => 
                           ll_rx_data_23_port, ll_rx_data(22) => 
                           ll_rx_data_22_port, ll_rx_data(21) => 
                           ll_rx_data_21_port, ll_rx_data(20) => 
                           ll_rx_data_20_port, ll_rx_data(19) => 
                           ll_rx_data_19_port, ll_rx_data(18) => 
                           ll_rx_data_18_port, ll_rx_data(17) => 
                           ll_rx_data_17_port, ll_rx_data(16) => 
                           ll_rx_data_16_port, ll_rx_data(15) => 
                           ll_rx_data_15_port, ll_rx_data(14) => 
                           ll_rx_data_14_port, ll_rx_data(13) => 
                           ll_rx_data_13_port, ll_rx_data(12) => 
                           ll_rx_data_12_port, ll_rx_data(11) => 
                           ll_rx_data_11_port, ll_rx_data(10) => 
                           ll_rx_data_10_port, ll_rx_data(9) => 
                           ll_rx_data_9_port, ll_rx_data(8) => 
                           ll_rx_data_8_port, ll_rx_data(7) => 
                           ll_rx_data_7_port, ll_rx_data(6) => 
                           ll_rx_data_6_port, ll_rx_data(5) => 
                           ll_rx_data_5_port, ll_rx_data(4) => 
                           ll_rx_data_4_port, ll_rx_data(3) => 
                           ll_rx_data_3_port, ll_rx_data(2) => 
                           ll_rx_data_2_port, ll_rx_data(1) => 
                           ll_rx_data_1_port, ll_rx_data(0) => 
                           ll_rx_data_0_port, ll_rx_data_be(3) => 
                           ll_rx_data_be_3_port, ll_rx_data_be(2) => 
                           ll_rx_data_be_2_port, ll_rx_data_be(1) => 
                           ll_rx_data_be_1_port, ll_rx_data_be(0) => 
                           ll_rx_data_be_0_port, ll_rx_sof_n => ll_rx_sof_n, 
                           ll_rx_eof_n => ll_rx_eof_n, ll_rx_src_rdy_n => 
                           ll_rx_src_rdy_n, ll_rx_dst_rdy_n => ll_rx_dst_rdy_n,
                           ll_tx_data(31) => ll_tx_data_31_port, ll_tx_data(30)
                           => ll_tx_data_30_port, ll_tx_data(29) => 
                           ll_tx_data_29_port, ll_tx_data(28) => 
                           ll_tx_data_28_port, ll_tx_data(27) => 
                           ll_tx_data_27_port, ll_tx_data(26) => 
                           ll_tx_data_26_port, ll_tx_data(25) => 
                           ll_tx_data_25_port, ll_tx_data(24) => 
                           ll_tx_data_24_port, ll_tx_data(23) => 
                           ll_tx_data_23_port, ll_tx_data(22) => 
                           ll_tx_data_22_port, ll_tx_data(21) => 
                           ll_tx_data_21_port, ll_tx_data(20) => 
                           ll_tx_data_20_port, ll_tx_data(19) => 
                           ll_tx_data_19_port, ll_tx_data(18) => 
                           ll_tx_data_18_port, ll_tx_data(17) => 
                           ll_tx_data_17_port, ll_tx_data(16) => 
                           ll_tx_data_16_port, ll_tx_data(15) => 
                           ll_tx_data_15_port, ll_tx_data(14) => 
                           ll_tx_data_14_port, ll_tx_data(13) => 
                           ll_tx_data_13_port, ll_tx_data(12) => 
                           ll_tx_data_12_port, ll_tx_data(11) => 
                           ll_tx_data_11_port, ll_tx_data(10) => 
                           ll_tx_data_10_port, ll_tx_data(9) => 
                           ll_tx_data_9_port, ll_tx_data(8) => 
                           ll_tx_data_8_port, ll_tx_data(7) => 
                           ll_tx_data_7_port, ll_tx_data(6) => 
                           ll_tx_data_6_port, ll_tx_data(5) => 
                           ll_tx_data_5_port, ll_tx_data(4) => 
                           ll_tx_data_4_port, ll_tx_data(3) => 
                           ll_tx_data_3_port, ll_tx_data(2) => 
                           ll_tx_data_2_port, ll_tx_data(1) => 
                           ll_tx_data_1_port, ll_tx_data(0) => 
                           ll_tx_data_0_port, ll_tx_data_be(3) => 
                           ll_tx_data_be_3_port, ll_tx_data_be(2) => 
                           ll_tx_data_be_2_port, ll_tx_data_be(1) => 
                           ll_tx_data_be_1_port, ll_tx_data_be(0) => 
                           ll_tx_data_be_0_port, ll_tx_sof_n => ll_tx_sof_n, 
                           ll_tx_eof_n => ll_tx_eof_n, ll_tx_src_rdy_n => 
                           ll_tx_src_rdy_n, ll_tx_dst_rdy_n => ll_tx_dst_rdy_n,
                           rx_dst(4) => rx_dst_4_port, rx_dst(3) => 
                           rx_dst_3_port, rx_dst(2) => rx_dst_2_port, rx_dst(1)
                           => rx_dst_1_port, rx_dst(0) => rx_dst_0_port, 
                           rx_src(4) => rx_src_4_port, rx_src(3) => 
                           rx_src_3_port, rx_src(2) => rx_src_2_port, rx_src(1)
                           => rx_src_1_port, rx_src(0) => rx_src_0_port, 
                           rx_len(31) => rx_len_31_port, rx_len(30) => 
                           rx_len_30_port, rx_len(29) => rx_len_29_port, 
                           rx_len(28) => rx_len_28_port, rx_len(27) => 
                           rx_len_27_port, rx_len(26) => rx_len_26_port, 
                           rx_len(25) => rx_len_25_port, rx_len(24) => 
                           rx_len_24_port, rx_len(23) => rx_len_23_port, 
                           rx_len(22) => rx_len_22_port, rx_len(21) => 
                           rx_len_21_port, rx_len(20) => rx_len_20_port, 
                           rx_len(19) => rx_len_19_port, rx_len(18) => 
                           rx_len_18_port, rx_len(17) => rx_len_17_port, 
                           rx_len(16) => rx_len_16_port, rx_len(15) => 
                           rx_len_15_port, rx_len(14) => rx_len_14_port, 
                           rx_len(13) => rx_len_13_port, rx_len(12) => 
                           rx_len_12_port, rx_len(11) => rx_len_11_port, 
                           rx_len(10) => rx_len_10_port, rx_len(9) => 
                           rx_len_9_port, rx_len(8) => rx_len_8_port, rx_len(7)
                           => rx_len_7_port, rx_len(6) => rx_len_6_port, 
                           rx_len(5) => rx_len_5_port, rx_len(4) => 
                           rx_len_4_port, rx_len(3) => rx_len_3_port, rx_len(2)
                           => rx_len_2_port, rx_len(1) => rx_len_1_port, 
                           rx_len(0) => rx_len_0_port, tx_dst(4) => 
                           tx_dst_4_port, tx_dst(3) => tx_dst_3_port, tx_dst(2)
                           => tx_dst_2_port, tx_dst(1) => tx_dst_1_port, 
                           tx_dst(0) => tx_dst_0_port, tx_src(4) => 
                           tx_src_4_port, tx_src(3) => tx_src_3_port, tx_src(2)
                           => tx_src_2_port, tx_src(1) => tx_src_1_port, 
                           tx_src(0) => tx_src_0_port, tx_len(31) => 
                           tx_len_31_port, tx_len(30) => tx_len_30_port, 
                           tx_len(29) => tx_len_29_port, tx_len(28) => 
                           tx_len_28_port, tx_len(27) => tx_len_27_port, 
                           tx_len(26) => tx_len_26_port, tx_len(25) => 
                           tx_len_25_port, tx_len(24) => tx_len_24_port, 
                           tx_len(23) => tx_len_23_port, tx_len(22) => 
                           tx_len_22_port, tx_len(21) => tx_len_21_port, 
                           tx_len(20) => tx_len_20_port, tx_len(19) => 
                           tx_len_19_port, tx_len(18) => tx_len_18_port, 
                           tx_len(17) => tx_len_17_port, tx_len(16) => 
                           tx_len_16_port, tx_len(15) => tx_len_15_port, 
                           tx_len(14) => tx_len_14_port, tx_len(13) => 
                           tx_len_13_port, tx_len(12) => tx_len_12_port, 
                           tx_len(11) => tx_len_11_port, tx_len(10) => 
                           tx_len_10_port, tx_len(9) => tx_len_9_port, 
                           tx_len(8) => tx_len_8_port, tx_len(7) => 
                           tx_len_7_port, tx_len(6) => tx_len_6_port, tx_len(5)
                           => tx_len_5_port, tx_len(4) => tx_len_4_port, 
                           tx_len(3) => tx_len_3_port, tx_len(2) => 
                           tx_len_2_port, tx_len(1) => tx_len_1_port, tx_len(0)
                           => tx_len_0_port);
   mem_c_i : mem_C port map( clk => clk, reset_b => reset_b, mem_addr(27) => 
                           mem_addr(27), mem_addr(26) => mem_addr(26), 
                           mem_addr(25) => mem_addr(25), mem_addr(24) => 
                           mem_addr(24), mem_addr(23) => mem_addr(23), 
                           mem_addr(22) => mem_addr(22), mem_addr(21) => 
                           mem_addr(21), mem_addr(20) => mem_addr(20), 
                           mem_addr(19) => mem_addr(19), mem_addr(18) => 
                           mem_addr(18), mem_addr(17) => mem_addr(17), 
                           mem_addr(16) => mem_addr(16), mem_addr(15) => 
                           mem_addr(15), mem_addr(14) => mem_addr(14), 
                           mem_addr(13) => mem_addr(13), mem_addr(12) => 
                           mem_addr(12), mem_addr(11) => mem_addr(11), 
                           mem_addr(10) => mem_addr(10), mem_addr(9) => 
                           mem_addr(9), mem_addr(8) => mem_addr(8), mem_addr(7)
                           => mem_addr(7), mem_addr(6) => mem_addr(6), 
                           mem_addr(5) => mem_addr(5), mem_addr(4) => 
                           mem_addr(4), mem_addr(3) => mem_addr(3), mem_addr(2)
                           => mem_addr(2), mem_addr(1) => mem_addr(1), 
                           mem_addr(0) => mem_addr(0), mem_rd_en => mem_rd_en, 
                           mem_wr_en => mem_wr_en, mem_data_in(31) => 
                           mem_data_in(31), mem_data_in(30) => mem_data_in(30),
                           mem_data_in(29) => mem_data_in(29), mem_data_in(28) 
                           => mem_data_in(28), mem_data_in(27) => 
                           mem_data_in(27), mem_data_in(26) => mem_data_in(26),
                           mem_data_in(25) => mem_data_in(25), mem_data_in(24) 
                           => mem_data_in(24), mem_data_in(23) => 
                           mem_data_in(23), mem_data_in(22) => mem_data_in(22),
                           mem_data_in(21) => mem_data_in(21), mem_data_in(20) 
                           => mem_data_in(20), mem_data_in(19) => 
                           mem_data_in(19), mem_data_in(18) => mem_data_in(18),
                           mem_data_in(17) => mem_data_in(17), mem_data_in(16) 
                           => mem_data_in(16), mem_data_in(15) => 
                           mem_data_in(15), mem_data_in(14) => mem_data_in(14),
                           mem_data_in(13) => mem_data_in(13), mem_data_in(12) 
                           => mem_data_in(12), mem_data_in(11) => 
                           mem_data_in(11), mem_data_in(10) => mem_data_in(10),
                           mem_data_in(9) => mem_data_in(9), mem_data_in(8) => 
                           mem_data_in(8), mem_data_in(7) => mem_data_in(7), 
                           mem_data_in(6) => mem_data_in(6), mem_data_in(5) => 
                           mem_data_in(5), mem_data_in(4) => mem_data_in(4), 
                           mem_data_in(3) => mem_data_in(3), mem_data_in(2) => 
                           mem_data_in(2), mem_data_in(1) => mem_data_in(1), 
                           mem_data_in(0) => mem_data_in(0), mem_data_out(31) 
                           => mem_data_out(31), mem_data_out(30) => 
                           mem_data_out(30), mem_data_out(29) => 
                           mem_data_out(29), mem_data_out(28) => 
                           mem_data_out(28), mem_data_out(27) => 
                           mem_data_out(27), mem_data_out(26) => 
                           mem_data_out(26), mem_data_out(25) => 
                           mem_data_out(25), mem_data_out(24) => 
                           mem_data_out(24), mem_data_out(23) => 
                           mem_data_out(23), mem_data_out(22) => 
                           mem_data_out(22), mem_data_out(21) => 
                           mem_data_out(21), mem_data_out(20) => 
                           mem_data_out(20), mem_data_out(19) => 
                           mem_data_out(19), mem_data_out(18) => 
                           mem_data_out(18), mem_data_out(17) => 
                           mem_data_out(17), mem_data_out(16) => 
                           mem_data_out(16), mem_data_out(15) => 
                           mem_data_out(15), mem_data_out(14) => 
                           mem_data_out(14), mem_data_out(13) => 
                           mem_data_out(13), mem_data_out(12) => 
                           mem_data_out(12), mem_data_out(11) => 
                           mem_data_out(11), mem_data_out(10) => 
                           mem_data_out(10), mem_data_out(9) => mem_data_out(9)
                           , mem_data_out(8) => mem_data_out(8), 
                           mem_data_out(7) => mem_data_out(7), mem_data_out(6) 
                           => mem_data_out(6), mem_data_out(5) => 
                           mem_data_out(5), mem_data_out(4) => mem_data_out(4),
                           mem_data_out(3) => mem_data_out(3), mem_data_out(2) 
                           => mem_data_out(2), mem_data_out(1) => 
                           mem_data_out(1), mem_data_out(0) => mem_data_out(0),
                           mem_data_be(3) => mem_data_be(3), mem_data_be(2) => 
                           mem_data_be(2), mem_data_be(1) => mem_data_be(1), 
                           mem_data_be(0) => mem_data_be(0), ack => ack, 
                           ll_rx_data(31) => ll_rx_data_31_port, ll_rx_data(30)
                           => ll_rx_data_30_port, ll_rx_data(29) => 
                           ll_rx_data_29_port, ll_rx_data(28) => 
                           ll_rx_data_28_port, ll_rx_data(27) => 
                           ll_rx_data_27_port, ll_rx_data(26) => 
                           ll_rx_data_26_port, ll_rx_data(25) => 
                           ll_rx_data_25_port, ll_rx_data(24) => 
                           ll_rx_data_24_port, ll_rx_data(23) => 
                           ll_rx_data_23_port, ll_rx_data(22) => 
                           ll_rx_data_22_port, ll_rx_data(21) => 
                           ll_rx_data_21_port, ll_rx_data(20) => 
                           ll_rx_data_20_port, ll_rx_data(19) => 
                           ll_rx_data_19_port, ll_rx_data(18) => 
                           ll_rx_data_18_port, ll_rx_data(17) => 
                           ll_rx_data_17_port, ll_rx_data(16) => 
                           ll_rx_data_16_port, ll_rx_data(15) => 
                           ll_rx_data_15_port, ll_rx_data(14) => 
                           ll_rx_data_14_port, ll_rx_data(13) => 
                           ll_rx_data_13_port, ll_rx_data(12) => 
                           ll_rx_data_12_port, ll_rx_data(11) => 
                           ll_rx_data_11_port, ll_rx_data(10) => 
                           ll_rx_data_10_port, ll_rx_data(9) => 
                           ll_rx_data_9_port, ll_rx_data(8) => 
                           ll_rx_data_8_port, ll_rx_data(7) => 
                           ll_rx_data_7_port, ll_rx_data(6) => 
                           ll_rx_data_6_port, ll_rx_data(5) => 
                           ll_rx_data_5_port, ll_rx_data(4) => 
                           ll_rx_data_4_port, ll_rx_data(3) => 
                           ll_rx_data_3_port, ll_rx_data(2) => 
                           ll_rx_data_2_port, ll_rx_data(1) => 
                           ll_rx_data_1_port, ll_rx_data(0) => 
                           ll_rx_data_0_port, ll_rx_data_be(3) => 
                           ll_rx_data_be_3_port, ll_rx_data_be(2) => 
                           ll_rx_data_be_2_port, ll_rx_data_be(1) => 
                           ll_rx_data_be_1_port, ll_rx_data_be(0) => 
                           ll_rx_data_be_0_port, ll_rx_sof_n => ll_rx_sof_n, 
                           ll_rx_eof_n => ll_rx_eof_n, ll_rx_src_rdy_n => 
                           ll_rx_src_rdy_n, ll_rx_dst_rdy_n => ll_rx_dst_rdy_n,
                           rx_dst(4) => rx_dst_4_port, rx_dst(3) => 
                           rx_dst_3_port, rx_dst(2) => rx_dst_2_port, rx_dst(1)
                           => rx_dst_1_port, rx_dst(0) => rx_dst_0_port, 
                           rx_src(4) => rx_src_4_port, rx_src(3) => 
                           rx_src_3_port, rx_src(2) => rx_src_2_port, rx_src(1)
                           => rx_src_1_port, rx_src(0) => rx_src_0_port, 
                           rx_len(31) => rx_len_31_port, rx_len(30) => 
                           rx_len_30_port, rx_len(29) => rx_len_29_port, 
                           rx_len(28) => rx_len_28_port, rx_len(27) => 
                           rx_len_27_port, rx_len(26) => rx_len_26_port, 
                           rx_len(25) => rx_len_25_port, rx_len(24) => 
                           rx_len_24_port, rx_len(23) => rx_len_23_port, 
                           rx_len(22) => rx_len_22_port, rx_len(21) => 
                           rx_len_21_port, rx_len(20) => rx_len_20_port, 
                           rx_len(19) => rx_len_19_port, rx_len(18) => 
                           rx_len_18_port, rx_len(17) => rx_len_17_port, 
                           rx_len(16) => rx_len_16_port, rx_len(15) => 
                           rx_len_15_port, rx_len(14) => rx_len_14_port, 
                           rx_len(13) => rx_len_13_port, rx_len(12) => 
                           rx_len_12_port, rx_len(11) => rx_len_11_port, 
                           rx_len(10) => rx_len_10_port, rx_len(9) => 
                           rx_len_9_port, rx_len(8) => rx_len_8_port, rx_len(7)
                           => rx_len_7_port, rx_len(6) => rx_len_6_port, 
                           rx_len(5) => rx_len_5_port, rx_len(4) => 
                           rx_len_4_port, rx_len(3) => rx_len_3_port, rx_len(2)
                           => rx_len_2_port, rx_len(1) => rx_len_1_port, 
                           rx_len(0) => rx_len_0_port, ll_tx_data(31) => 
                           ll_tx_data_31_port, ll_tx_data(30) => 
                           ll_tx_data_30_port, ll_tx_data(29) => 
                           ll_tx_data_29_port, ll_tx_data(28) => 
                           ll_tx_data_28_port, ll_tx_data(27) => 
                           ll_tx_data_27_port, ll_tx_data(26) => 
                           ll_tx_data_26_port, ll_tx_data(25) => 
                           ll_tx_data_25_port, ll_tx_data(24) => 
                           ll_tx_data_24_port, ll_tx_data(23) => 
                           ll_tx_data_23_port, ll_tx_data(22) => 
                           ll_tx_data_22_port, ll_tx_data(21) => 
                           ll_tx_data_21_port, ll_tx_data(20) => 
                           ll_tx_data_20_port, ll_tx_data(19) => 
                           ll_tx_data_19_port, ll_tx_data(18) => 
                           ll_tx_data_18_port, ll_tx_data(17) => 
                           ll_tx_data_17_port, ll_tx_data(16) => 
                           ll_tx_data_16_port, ll_tx_data(15) => 
                           ll_tx_data_15_port, ll_tx_data(14) => 
                           ll_tx_data_14_port, ll_tx_data(13) => 
                           ll_tx_data_13_port, ll_tx_data(12) => 
                           ll_tx_data_12_port, ll_tx_data(11) => 
                           ll_tx_data_11_port, ll_tx_data(10) => 
                           ll_tx_data_10_port, ll_tx_data(9) => 
                           ll_tx_data_9_port, ll_tx_data(8) => 
                           ll_tx_data_8_port, ll_tx_data(7) => 
                           ll_tx_data_7_port, ll_tx_data(6) => 
                           ll_tx_data_6_port, ll_tx_data(5) => 
                           ll_tx_data_5_port, ll_tx_data(4) => 
                           ll_tx_data_4_port, ll_tx_data(3) => 
                           ll_tx_data_3_port, ll_tx_data(2) => 
                           ll_tx_data_2_port, ll_tx_data(1) => 
                           ll_tx_data_1_port, ll_tx_data(0) => 
                           ll_tx_data_0_port, ll_tx_data_be(3) => 
                           ll_tx_data_be_3_port, ll_tx_data_be(2) => 
                           ll_tx_data_be_2_port, ll_tx_data_be(1) => 
                           ll_tx_data_be_1_port, ll_tx_data_be(0) => 
                           ll_tx_data_be_0_port, ll_tx_sof_n => ll_tx_sof_n, 
                           ll_tx_eof_n => ll_tx_eof_n, ll_tx_src_rdy_n => 
                           ll_tx_src_rdy_n, ll_tx_dst_rdy_n => ll_tx_dst_rdy_n,
                           tx_dst(4) => tx_dst_4_port, tx_dst(3) => 
                           tx_dst_3_port, tx_dst(2) => tx_dst_2_port, tx_dst(1)
                           => tx_dst_1_port, tx_dst(0) => tx_dst_0_port, 
                           tx_src(4) => tx_src_4_port, tx_src(3) => 
                           tx_src_3_port, tx_src(2) => tx_src_2_port, tx_src(1)
                           => tx_src_1_port, tx_src(0) => tx_src_0_port, 
                           tx_len(31) => tx_len_31_port, tx_len(30) => 
                           tx_len_30_port, tx_len(29) => tx_len_29_port, 
                           tx_len(28) => tx_len_28_port, tx_len(27) => 
                           tx_len_27_port, tx_len(26) => tx_len_26_port, 
                           tx_len(25) => tx_len_25_port, tx_len(24) => 
                           tx_len_24_port, tx_len(23) => tx_len_23_port, 
                           tx_len(22) => tx_len_22_port, tx_len(21) => 
                           tx_len_21_port, tx_len(20) => tx_len_20_port, 
                           tx_len(19) => tx_len_19_port, tx_len(18) => 
                           tx_len_18_port, tx_len(17) => tx_len_17_port, 
                           tx_len(16) => tx_len_16_port, tx_len(15) => 
                           tx_len_15_port, tx_len(14) => tx_len_14_port, 
                           tx_len(13) => tx_len_13_port, tx_len(12) => 
                           tx_len_12_port, tx_len(11) => tx_len_11_port, 
                           tx_len(10) => tx_len_10_port, tx_len(9) => 
                           tx_len_9_port, tx_len(8) => tx_len_8_port, tx_len(7)
                           => tx_len_7_port, tx_len(6) => tx_len_6_port, 
                           tx_len(5) => tx_len_5_port, tx_len(4) => 
                           tx_len_4_port, tx_len(3) => tx_len_3_port, tx_len(2)
                           => tx_len_2_port, tx_len(1) => tx_len_1_port, 
                           tx_len(0) => tx_len_0_port);

end SYN_beh;

library IEEE;

use IEEE.std_logic_1164.all;

package CONV_PACK_timer_core is

-- define attributes
attribute ENUM_ENCODING : STRING;

end CONV_PACK_timer_core;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_timer_core.all;

entity timer_core is

   port( clk, reset_b : in std_logic;  base_addr : in std_logic_vector (31 
         downto 0);  o_timer_int : out std_logic_vector (2 downto 0);  
         ll_rx_port_data : in std_logic_vector (31 downto 0);  
         ll_rx_port_data_be : in std_logic_vector (3 downto 0);  
         ll_rx_port_src_rdy_n : in std_logic;  ll_rx_port_dst_rdy_n : out 
         std_logic;  ll_rx_port_sof_n, ll_rx_port_eof_n : in std_logic;  rx_dst
         , rx_src : in std_logic_vector (4 downto 0);  rx_len : in 
         std_logic_vector (31 downto 0);  ll_tx_port_data : out 
         std_logic_vector (31 downto 0);  ll_tx_port_data_be : out 
         std_logic_vector (3 downto 0);  ll_tx_port_src_rdy_n : out std_logic; 
         ll_tx_port_dst_rdy_n : in std_logic;  ll_tx_port_sof_n, 
         ll_tx_port_eof_n : out std_logic;  tx_dst, tx_src : out 
         std_logic_vector (4 downto 0);  tx_len : out std_logic_vector (31 
         downto 0));

end timer_core;

architecture SYN_str of timer_core is

   component ll_to_wb_bridge
      port( clk, reset_b : in std_logic;  SLV_DAT_O : out std_logic_vector (31 
            downto 0);  SLV_DAT_I : in std_logic_vector (31 downto 0);  SEL_O :
            out std_logic_vector (3 downto 0);  CYC_O, STB_O, WE_O : out 
            std_logic;  ACK_I, RTY_I : in std_logic;  ADR_O : out 
            std_logic_vector (0 to 31);  base_addr, ll_rx_port_data : in 
            std_logic_vector (31 downto 0);  ll_rx_port_data_be : in 
            std_logic_vector (3 downto 0);  ll_rx_port_src_rdy_n : in std_logic
            ;  ll_rx_port_dst_rdy_n : out std_logic;  ll_rx_port_sof_n, 
            ll_rx_port_eof_n : in std_logic;  rx_dst, rx_src : in 
            std_logic_vector (4 downto 0);  rx_len : in std_logic_vector (31 
            downto 0);  ll_tx_port_data : out std_logic_vector (31 downto 0);  
            ll_tx_port_data_be : out std_logic_vector (3 downto 0);  
            ll_tx_port_src_rdy_n : out std_logic;  ll_tx_port_dst_rdy_n : in 
            std_logic;  ll_tx_port_sof_n, ll_tx_port_eof_n : out std_logic;  
            tx_dst, tx_src : out std_logic_vector (4 downto 0);  tx_len : out 
            std_logic_vector (31 downto 0));
   end component;
   
   component timer_module
      port( i_clk, reset_b : in std_logic;  i_wb_adr : in std_logic_vector (31 
            downto 0);  i_wb_sel : in std_logic_vector (3 downto 0);  i_wb_we :
            in std_logic;  o_wb_dat : out std_logic_vector (31 downto 0);  
            i_wb_dat : in std_logic_vector (31 downto 0);  i_wb_cyc, i_wb_stb :
            in std_logic;  o_wb_ack : out std_logic;  o_timer_int : out 
            std_logic_vector (2 downto 0));
   end component;
   
   signal X_Logic0_port, ADR_O_0_port, ADR_O_1_port, ADR_O_2_port, ADR_O_3_port
      , ADR_O_4_port, ADR_O_5_port, ADR_O_6_port, ADR_O_7_port, ADR_O_8_port, 
      ADR_O_9_port, ADR_O_10_port, ADR_O_11_port, ADR_O_12_port, ADR_O_13_port,
      ADR_O_14_port, ADR_O_15_port, ADR_O_16_port, ADR_O_17_port, ADR_O_18_port
      , ADR_O_19_port, ADR_O_20_port, ADR_O_21_port, ADR_O_22_port, 
      ADR_O_23_port, ADR_O_24_port, ADR_O_25_port, ADR_O_26_port, ADR_O_27_port
      , ADR_O_28_port, ADR_O_29_port, ADR_O_30_port, ADR_O_31_port, 
      SEL_O_3_port, SEL_O_2_port, SEL_O_1_port, SEL_O_0_port, WE_O, 
      SLV_DAT_I_31_port, SLV_DAT_I_30_port, SLV_DAT_I_29_port, 
      SLV_DAT_I_28_port, SLV_DAT_I_27_port, SLV_DAT_I_26_port, 
      SLV_DAT_I_25_port, SLV_DAT_I_24_port, SLV_DAT_I_23_port, 
      SLV_DAT_I_22_port, SLV_DAT_I_21_port, SLV_DAT_I_20_port, 
      SLV_DAT_I_19_port, SLV_DAT_I_18_port, SLV_DAT_I_17_port, 
      SLV_DAT_I_16_port, SLV_DAT_I_15_port, SLV_DAT_I_14_port, 
      SLV_DAT_I_13_port, SLV_DAT_I_12_port, SLV_DAT_I_11_port, 
      SLV_DAT_I_10_port, SLV_DAT_I_9_port, SLV_DAT_I_8_port, SLV_DAT_I_7_port, 
      SLV_DAT_I_6_port, SLV_DAT_I_5_port, SLV_DAT_I_4_port, SLV_DAT_I_3_port, 
      SLV_DAT_I_2_port, SLV_DAT_I_1_port, SLV_DAT_I_0_port, SLV_DAT_O_31_port, 
      SLV_DAT_O_30_port, SLV_DAT_O_29_port, SLV_DAT_O_28_port, 
      SLV_DAT_O_27_port, SLV_DAT_O_26_port, SLV_DAT_O_25_port, 
      SLV_DAT_O_24_port, SLV_DAT_O_23_port, SLV_DAT_O_22_port, 
      SLV_DAT_O_21_port, SLV_DAT_O_20_port, SLV_DAT_O_19_port, 
      SLV_DAT_O_18_port, SLV_DAT_O_17_port, SLV_DAT_O_16_port, 
      SLV_DAT_O_15_port, SLV_DAT_O_14_port, SLV_DAT_O_13_port, 
      SLV_DAT_O_12_port, SLV_DAT_O_11_port, SLV_DAT_O_10_port, SLV_DAT_O_9_port
      , SLV_DAT_O_8_port, SLV_DAT_O_7_port, SLV_DAT_O_6_port, SLV_DAT_O_5_port,
      SLV_DAT_O_4_port, SLV_DAT_O_3_port, SLV_DAT_O_2_port, SLV_DAT_O_1_port, 
      SLV_DAT_O_0_port, CYC_O, STB_O, ACK_I : std_logic;

begin
   
   U_timer_module : timer_module port map( i_clk => clk, reset_b => reset_b, 
                           i_wb_adr(31) => ADR_O_0_port, i_wb_adr(30) => 
                           ADR_O_1_port, i_wb_adr(29) => ADR_O_2_port, 
                           i_wb_adr(28) => ADR_O_3_port, i_wb_adr(27) => 
                           ADR_O_4_port, i_wb_adr(26) => ADR_O_5_port, 
                           i_wb_adr(25) => ADR_O_6_port, i_wb_adr(24) => 
                           ADR_O_7_port, i_wb_adr(23) => ADR_O_8_port, 
                           i_wb_adr(22) => ADR_O_9_port, i_wb_adr(21) => 
                           ADR_O_10_port, i_wb_adr(20) => ADR_O_11_port, 
                           i_wb_adr(19) => ADR_O_12_port, i_wb_adr(18) => 
                           ADR_O_13_port, i_wb_adr(17) => ADR_O_14_port, 
                           i_wb_adr(16) => ADR_O_15_port, i_wb_adr(15) => 
                           ADR_O_16_port, i_wb_adr(14) => ADR_O_17_port, 
                           i_wb_adr(13) => ADR_O_18_port, i_wb_adr(12) => 
                           ADR_O_19_port, i_wb_adr(11) => ADR_O_20_port, 
                           i_wb_adr(10) => ADR_O_21_port, i_wb_adr(9) => 
                           ADR_O_22_port, i_wb_adr(8) => ADR_O_23_port, 
                           i_wb_adr(7) => ADR_O_24_port, i_wb_adr(6) => 
                           ADR_O_25_port, i_wb_adr(5) => ADR_O_26_port, 
                           i_wb_adr(4) => ADR_O_27_port, i_wb_adr(3) => 
                           ADR_O_28_port, i_wb_adr(2) => ADR_O_29_port, 
                           i_wb_adr(1) => ADR_O_30_port, i_wb_adr(0) => 
                           ADR_O_31_port, i_wb_sel(3) => SEL_O_3_port, 
                           i_wb_sel(2) => SEL_O_2_port, i_wb_sel(1) => 
                           SEL_O_1_port, i_wb_sel(0) => SEL_O_0_port, i_wb_we 
                           => WE_O, o_wb_dat(31) => SLV_DAT_I_31_port, 
                           o_wb_dat(30) => SLV_DAT_I_30_port, o_wb_dat(29) => 
                           SLV_DAT_I_29_port, o_wb_dat(28) => SLV_DAT_I_28_port
                           , o_wb_dat(27) => SLV_DAT_I_27_port, o_wb_dat(26) =>
                           SLV_DAT_I_26_port, o_wb_dat(25) => SLV_DAT_I_25_port
                           , o_wb_dat(24) => SLV_DAT_I_24_port, o_wb_dat(23) =>
                           SLV_DAT_I_23_port, o_wb_dat(22) => SLV_DAT_I_22_port
                           , o_wb_dat(21) => SLV_DAT_I_21_port, o_wb_dat(20) =>
                           SLV_DAT_I_20_port, o_wb_dat(19) => SLV_DAT_I_19_port
                           , o_wb_dat(18) => SLV_DAT_I_18_port, o_wb_dat(17) =>
                           SLV_DAT_I_17_port, o_wb_dat(16) => SLV_DAT_I_16_port
                           , o_wb_dat(15) => SLV_DAT_I_15_port, o_wb_dat(14) =>
                           SLV_DAT_I_14_port, o_wb_dat(13) => SLV_DAT_I_13_port
                           , o_wb_dat(12) => SLV_DAT_I_12_port, o_wb_dat(11) =>
                           SLV_DAT_I_11_port, o_wb_dat(10) => SLV_DAT_I_10_port
                           , o_wb_dat(9) => SLV_DAT_I_9_port, o_wb_dat(8) => 
                           SLV_DAT_I_8_port, o_wb_dat(7) => SLV_DAT_I_7_port, 
                           o_wb_dat(6) => SLV_DAT_I_6_port, o_wb_dat(5) => 
                           SLV_DAT_I_5_port, o_wb_dat(4) => SLV_DAT_I_4_port, 
                           o_wb_dat(3) => SLV_DAT_I_3_port, o_wb_dat(2) => 
                           SLV_DAT_I_2_port, o_wb_dat(1) => SLV_DAT_I_1_port, 
                           o_wb_dat(0) => SLV_DAT_I_0_port, i_wb_dat(31) => 
                           SLV_DAT_O_31_port, i_wb_dat(30) => SLV_DAT_O_30_port
                           , i_wb_dat(29) => SLV_DAT_O_29_port, i_wb_dat(28) =>
                           SLV_DAT_O_28_port, i_wb_dat(27) => SLV_DAT_O_27_port
                           , i_wb_dat(26) => SLV_DAT_O_26_port, i_wb_dat(25) =>
                           SLV_DAT_O_25_port, i_wb_dat(24) => SLV_DAT_O_24_port
                           , i_wb_dat(23) => SLV_DAT_O_23_port, i_wb_dat(22) =>
                           SLV_DAT_O_22_port, i_wb_dat(21) => SLV_DAT_O_21_port
                           , i_wb_dat(20) => SLV_DAT_O_20_port, i_wb_dat(19) =>
                           SLV_DAT_O_19_port, i_wb_dat(18) => SLV_DAT_O_18_port
                           , i_wb_dat(17) => SLV_DAT_O_17_port, i_wb_dat(16) =>
                           SLV_DAT_O_16_port, i_wb_dat(15) => SLV_DAT_O_15_port
                           , i_wb_dat(14) => SLV_DAT_O_14_port, i_wb_dat(13) =>
                           SLV_DAT_O_13_port, i_wb_dat(12) => SLV_DAT_O_12_port
                           , i_wb_dat(11) => SLV_DAT_O_11_port, i_wb_dat(10) =>
                           SLV_DAT_O_10_port, i_wb_dat(9) => SLV_DAT_O_9_port, 
                           i_wb_dat(8) => SLV_DAT_O_8_port, i_wb_dat(7) => 
                           SLV_DAT_O_7_port, i_wb_dat(6) => SLV_DAT_O_6_port, 
                           i_wb_dat(5) => SLV_DAT_O_5_port, i_wb_dat(4) => 
                           SLV_DAT_O_4_port, i_wb_dat(3) => SLV_DAT_O_3_port, 
                           i_wb_dat(2) => SLV_DAT_O_2_port, i_wb_dat(1) => 
                           SLV_DAT_O_1_port, i_wb_dat(0) => SLV_DAT_O_0_port, 
                           i_wb_cyc => CYC_O, i_wb_stb => STB_O, o_wb_ack => 
                           ACK_I, o_timer_int(2) => o_timer_int(2), 
                           o_timer_int(1) => o_timer_int(1), o_timer_int(0) => 
                           o_timer_int(0));
   U_ll_to_wb_bridge : ll_to_wb_bridge port map( clk => clk, reset_b => reset_b
                           , SLV_DAT_O(31) => SLV_DAT_O_31_port, SLV_DAT_O(30) 
                           => SLV_DAT_O_30_port, SLV_DAT_O(29) => 
                           SLV_DAT_O_29_port, SLV_DAT_O(28) => 
                           SLV_DAT_O_28_port, SLV_DAT_O(27) => 
                           SLV_DAT_O_27_port, SLV_DAT_O(26) => 
                           SLV_DAT_O_26_port, SLV_DAT_O(25) => 
                           SLV_DAT_O_25_port, SLV_DAT_O(24) => 
                           SLV_DAT_O_24_port, SLV_DAT_O(23) => 
                           SLV_DAT_O_23_port, SLV_DAT_O(22) => 
                           SLV_DAT_O_22_port, SLV_DAT_O(21) => 
                           SLV_DAT_O_21_port, SLV_DAT_O(20) => 
                           SLV_DAT_O_20_port, SLV_DAT_O(19) => 
                           SLV_DAT_O_19_port, SLV_DAT_O(18) => 
                           SLV_DAT_O_18_port, SLV_DAT_O(17) => 
                           SLV_DAT_O_17_port, SLV_DAT_O(16) => 
                           SLV_DAT_O_16_port, SLV_DAT_O(15) => 
                           SLV_DAT_O_15_port, SLV_DAT_O(14) => 
                           SLV_DAT_O_14_port, SLV_DAT_O(13) => 
                           SLV_DAT_O_13_port, SLV_DAT_O(12) => 
                           SLV_DAT_O_12_port, SLV_DAT_O(11) => 
                           SLV_DAT_O_11_port, SLV_DAT_O(10) => 
                           SLV_DAT_O_10_port, SLV_DAT_O(9) => SLV_DAT_O_9_port,
                           SLV_DAT_O(8) => SLV_DAT_O_8_port, SLV_DAT_O(7) => 
                           SLV_DAT_O_7_port, SLV_DAT_O(6) => SLV_DAT_O_6_port, 
                           SLV_DAT_O(5) => SLV_DAT_O_5_port, SLV_DAT_O(4) => 
                           SLV_DAT_O_4_port, SLV_DAT_O(3) => SLV_DAT_O_3_port, 
                           SLV_DAT_O(2) => SLV_DAT_O_2_port, SLV_DAT_O(1) => 
                           SLV_DAT_O_1_port, SLV_DAT_O(0) => SLV_DAT_O_0_port, 
                           SLV_DAT_I(31) => SLV_DAT_I_31_port, SLV_DAT_I(30) =>
                           SLV_DAT_I_30_port, SLV_DAT_I(29) => 
                           SLV_DAT_I_29_port, SLV_DAT_I(28) => 
                           SLV_DAT_I_28_port, SLV_DAT_I(27) => 
                           SLV_DAT_I_27_port, SLV_DAT_I(26) => 
                           SLV_DAT_I_26_port, SLV_DAT_I(25) => 
                           SLV_DAT_I_25_port, SLV_DAT_I(24) => 
                           SLV_DAT_I_24_port, SLV_DAT_I(23) => 
                           SLV_DAT_I_23_port, SLV_DAT_I(22) => 
                           SLV_DAT_I_22_port, SLV_DAT_I(21) => 
                           SLV_DAT_I_21_port, SLV_DAT_I(20) => 
                           SLV_DAT_I_20_port, SLV_DAT_I(19) => 
                           SLV_DAT_I_19_port, SLV_DAT_I(18) => 
                           SLV_DAT_I_18_port, SLV_DAT_I(17) => 
                           SLV_DAT_I_17_port, SLV_DAT_I(16) => 
                           SLV_DAT_I_16_port, SLV_DAT_I(15) => 
                           SLV_DAT_I_15_port, SLV_DAT_I(14) => 
                           SLV_DAT_I_14_port, SLV_DAT_I(13) => 
                           SLV_DAT_I_13_port, SLV_DAT_I(12) => 
                           SLV_DAT_I_12_port, SLV_DAT_I(11) => 
                           SLV_DAT_I_11_port, SLV_DAT_I(10) => 
                           SLV_DAT_I_10_port, SLV_DAT_I(9) => SLV_DAT_I_9_port,
                           SLV_DAT_I(8) => SLV_DAT_I_8_port, SLV_DAT_I(7) => 
                           SLV_DAT_I_7_port, SLV_DAT_I(6) => SLV_DAT_I_6_port, 
                           SLV_DAT_I(5) => SLV_DAT_I_5_port, SLV_DAT_I(4) => 
                           SLV_DAT_I_4_port, SLV_DAT_I(3) => SLV_DAT_I_3_port, 
                           SLV_DAT_I(2) => SLV_DAT_I_2_port, SLV_DAT_I(1) => 
                           SLV_DAT_I_1_port, SLV_DAT_I(0) => SLV_DAT_I_0_port, 
                           SEL_O(3) => SEL_O_3_port, SEL_O(2) => SEL_O_2_port, 
                           SEL_O(1) => SEL_O_1_port, SEL_O(0) => SEL_O_0_port, 
                           CYC_O => CYC_O, STB_O => STB_O, WE_O => WE_O, ACK_I 
                           => ACK_I, RTY_I => X_Logic0_port, ADR_O(0) => 
                           ADR_O_0_port, ADR_O(1) => ADR_O_1_port, ADR_O(2) => 
                           ADR_O_2_port, ADR_O(3) => ADR_O_3_port, ADR_O(4) => 
                           ADR_O_4_port, ADR_O(5) => ADR_O_5_port, ADR_O(6) => 
                           ADR_O_6_port, ADR_O(7) => ADR_O_7_port, ADR_O(8) => 
                           ADR_O_8_port, ADR_O(9) => ADR_O_9_port, ADR_O(10) =>
                           ADR_O_10_port, ADR_O(11) => ADR_O_11_port, ADR_O(12)
                           => ADR_O_12_port, ADR_O(13) => ADR_O_13_port, 
                           ADR_O(14) => ADR_O_14_port, ADR_O(15) => 
                           ADR_O_15_port, ADR_O(16) => ADR_O_16_port, ADR_O(17)
                           => ADR_O_17_port, ADR_O(18) => ADR_O_18_port, 
                           ADR_O(19) => ADR_O_19_port, ADR_O(20) => 
                           ADR_O_20_port, ADR_O(21) => ADR_O_21_port, ADR_O(22)
                           => ADR_O_22_port, ADR_O(23) => ADR_O_23_port, 
                           ADR_O(24) => ADR_O_24_port, ADR_O(25) => 
                           ADR_O_25_port, ADR_O(26) => ADR_O_26_port, ADR_O(27)
                           => ADR_O_27_port, ADR_O(28) => ADR_O_28_port, 
                           ADR_O(29) => ADR_O_29_port, ADR_O(30) => 
                           ADR_O_30_port, ADR_O(31) => ADR_O_31_port, 
                           base_addr(31) => base_addr(31), base_addr(30) => 
                           base_addr(30), base_addr(29) => base_addr(29), 
                           base_addr(28) => base_addr(28), base_addr(27) => 
                           base_addr(27), base_addr(26) => base_addr(26), 
                           base_addr(25) => base_addr(25), base_addr(24) => 
                           base_addr(24), base_addr(23) => base_addr(23), 
                           base_addr(22) => base_addr(22), base_addr(21) => 
                           base_addr(21), base_addr(20) => base_addr(20), 
                           base_addr(19) => base_addr(19), base_addr(18) => 
                           base_addr(18), base_addr(17) => base_addr(17), 
                           base_addr(16) => base_addr(16), base_addr(15) => 
                           base_addr(15), base_addr(14) => base_addr(14), 
                           base_addr(13) => base_addr(13), base_addr(12) => 
                           base_addr(12), base_addr(11) => base_addr(11), 
                           base_addr(10) => base_addr(10), base_addr(9) => 
                           base_addr(9), base_addr(8) => base_addr(8), 
                           base_addr(7) => base_addr(7), base_addr(6) => 
                           base_addr(6), base_addr(5) => base_addr(5), 
                           base_addr(4) => base_addr(4), base_addr(3) => 
                           base_addr(3), base_addr(2) => base_addr(2), 
                           base_addr(1) => base_addr(1), base_addr(0) => 
                           base_addr(0), ll_rx_port_data(31) => 
                           ll_rx_port_data(31), ll_rx_port_data(30) => 
                           ll_rx_port_data(30), ll_rx_port_data(29) => 
                           ll_rx_port_data(29), ll_rx_port_data(28) => 
                           ll_rx_port_data(28), ll_rx_port_data(27) => 
                           ll_rx_port_data(27), ll_rx_port_data(26) => 
                           ll_rx_port_data(26), ll_rx_port_data(25) => 
                           ll_rx_port_data(25), ll_rx_port_data(24) => 
                           ll_rx_port_data(24), ll_rx_port_data(23) => 
                           ll_rx_port_data(23), ll_rx_port_data(22) => 
                           ll_rx_port_data(22), ll_rx_port_data(21) => 
                           ll_rx_port_data(21), ll_rx_port_data(20) => 
                           ll_rx_port_data(20), ll_rx_port_data(19) => 
                           ll_rx_port_data(19), ll_rx_port_data(18) => 
                           ll_rx_port_data(18), ll_rx_port_data(17) => 
                           ll_rx_port_data(17), ll_rx_port_data(16) => 
                           ll_rx_port_data(16), ll_rx_port_data(15) => 
                           ll_rx_port_data(15), ll_rx_port_data(14) => 
                           ll_rx_port_data(14), ll_rx_port_data(13) => 
                           ll_rx_port_data(13), ll_rx_port_data(12) => 
                           ll_rx_port_data(12), ll_rx_port_data(11) => 
                           ll_rx_port_data(11), ll_rx_port_data(10) => 
                           ll_rx_port_data(10), ll_rx_port_data(9) => 
                           ll_rx_port_data(9), ll_rx_port_data(8) => 
                           ll_rx_port_data(8), ll_rx_port_data(7) => 
                           ll_rx_port_data(7), ll_rx_port_data(6) => 
                           ll_rx_port_data(6), ll_rx_port_data(5) => 
                           ll_rx_port_data(5), ll_rx_port_data(4) => 
                           ll_rx_port_data(4), ll_rx_port_data(3) => 
                           ll_rx_port_data(3), ll_rx_port_data(2) => 
                           ll_rx_port_data(2), ll_rx_port_data(1) => 
                           ll_rx_port_data(1), ll_rx_port_data(0) => 
                           ll_rx_port_data(0), ll_rx_port_data_be(3) => 
                           ll_rx_port_data_be(3), ll_rx_port_data_be(2) => 
                           ll_rx_port_data_be(2), ll_rx_port_data_be(1) => 
                           ll_rx_port_data_be(1), ll_rx_port_data_be(0) => 
                           ll_rx_port_data_be(0), ll_rx_port_src_rdy_n => 
                           ll_rx_port_src_rdy_n, ll_rx_port_dst_rdy_n => 
                           ll_rx_port_dst_rdy_n, ll_rx_port_sof_n => 
                           ll_rx_port_sof_n, ll_rx_port_eof_n => 
                           ll_rx_port_eof_n, rx_dst(4) => rx_dst(4), rx_dst(3) 
                           => rx_dst(3), rx_dst(2) => rx_dst(2), rx_dst(1) => 
                           rx_dst(1), rx_dst(0) => rx_dst(0), rx_src(4) => 
                           rx_src(4), rx_src(3) => rx_src(3), rx_src(2) => 
                           rx_src(2), rx_src(1) => rx_src(1), rx_src(0) => 
                           rx_src(0), rx_len(31) => rx_len(31), rx_len(30) => 
                           rx_len(30), rx_len(29) => rx_len(29), rx_len(28) => 
                           rx_len(28), rx_len(27) => rx_len(27), rx_len(26) => 
                           rx_len(26), rx_len(25) => rx_len(25), rx_len(24) => 
                           rx_len(24), rx_len(23) => rx_len(23), rx_len(22) => 
                           rx_len(22), rx_len(21) => rx_len(21), rx_len(20) => 
                           rx_len(20), rx_len(19) => rx_len(19), rx_len(18) => 
                           rx_len(18), rx_len(17) => rx_len(17), rx_len(16) => 
                           rx_len(16), rx_len(15) => rx_len(15), rx_len(14) => 
                           rx_len(14), rx_len(13) => rx_len(13), rx_len(12) => 
                           rx_len(12), rx_len(11) => rx_len(11), rx_len(10) => 
                           rx_len(10), rx_len(9) => rx_len(9), rx_len(8) => 
                           rx_len(8), rx_len(7) => rx_len(7), rx_len(6) => 
                           rx_len(6), rx_len(5) => rx_len(5), rx_len(4) => 
                           rx_len(4), rx_len(3) => rx_len(3), rx_len(2) => 
                           rx_len(2), rx_len(1) => rx_len(1), rx_len(0) => 
                           rx_len(0), ll_tx_port_data(31) => 
                           ll_tx_port_data(31), ll_tx_port_data(30) => 
                           ll_tx_port_data(30), ll_tx_port_data(29) => 
                           ll_tx_port_data(29), ll_tx_port_data(28) => 
                           ll_tx_port_data(28), ll_tx_port_data(27) => 
                           ll_tx_port_data(27), ll_tx_port_data(26) => 
                           ll_tx_port_data(26), ll_tx_port_data(25) => 
                           ll_tx_port_data(25), ll_tx_port_data(24) => 
                           ll_tx_port_data(24), ll_tx_port_data(23) => 
                           ll_tx_port_data(23), ll_tx_port_data(22) => 
                           ll_tx_port_data(22), ll_tx_port_data(21) => 
                           ll_tx_port_data(21), ll_tx_port_data(20) => 
                           ll_tx_port_data(20), ll_tx_port_data(19) => 
                           ll_tx_port_data(19), ll_tx_port_data(18) => 
                           ll_tx_port_data(18), ll_tx_port_data(17) => 
                           ll_tx_port_data(17), ll_tx_port_data(16) => 
                           ll_tx_port_data(16), ll_tx_port_data(15) => 
                           ll_tx_port_data(15), ll_tx_port_data(14) => 
                           ll_tx_port_data(14), ll_tx_port_data(13) => 
                           ll_tx_port_data(13), ll_tx_port_data(12) => 
                           ll_tx_port_data(12), ll_tx_port_data(11) => 
                           ll_tx_port_data(11), ll_tx_port_data(10) => 
                           ll_tx_port_data(10), ll_tx_port_data(9) => 
                           ll_tx_port_data(9), ll_tx_port_data(8) => 
                           ll_tx_port_data(8), ll_tx_port_data(7) => 
                           ll_tx_port_data(7), ll_tx_port_data(6) => 
                           ll_tx_port_data(6), ll_tx_port_data(5) => 
                           ll_tx_port_data(5), ll_tx_port_data(4) => 
                           ll_tx_port_data(4), ll_tx_port_data(3) => 
                           ll_tx_port_data(3), ll_tx_port_data(2) => 
                           ll_tx_port_data(2), ll_tx_port_data(1) => 
                           ll_tx_port_data(1), ll_tx_port_data(0) => 
                           ll_tx_port_data(0), ll_tx_port_data_be(3) => 
                           ll_tx_port_data_be(3), ll_tx_port_data_be(2) => 
                           ll_tx_port_data_be(2), ll_tx_port_data_be(1) => 
                           ll_tx_port_data_be(1), ll_tx_port_data_be(0) => 
                           ll_tx_port_data_be(0), ll_tx_port_src_rdy_n => 
                           ll_tx_port_src_rdy_n, ll_tx_port_dst_rdy_n => 
                           ll_tx_port_dst_rdy_n, ll_tx_port_sof_n => 
                           ll_tx_port_sof_n, ll_tx_port_eof_n => 
                           ll_tx_port_eof_n, tx_dst(4) => tx_dst(4), tx_dst(3) 
                           => tx_dst(3), tx_dst(2) => tx_dst(2), tx_dst(1) => 
                           tx_dst(1), tx_dst(0) => tx_dst(0), tx_src(4) => 
                           tx_src(4), tx_src(3) => tx_src(3), tx_src(2) => 
                           tx_src(2), tx_src(1) => tx_src(1), tx_src(0) => 
                           tx_src(0), tx_len(31) => tx_len(31), tx_len(30) => 
                           tx_len(30), tx_len(29) => tx_len(29), tx_len(28) => 
                           tx_len(28), tx_len(27) => tx_len(27), tx_len(26) => 
                           tx_len(26), tx_len(25) => tx_len(25), tx_len(24) => 
                           tx_len(24), tx_len(23) => tx_len(23), tx_len(22) => 
                           tx_len(22), tx_len(21) => tx_len(21), tx_len(20) => 
                           tx_len(20), tx_len(19) => tx_len(19), tx_len(18) => 
                           tx_len(18), tx_len(17) => tx_len(17), tx_len(16) => 
                           tx_len(16), tx_len(15) => tx_len(15), tx_len(14) => 
                           tx_len(14), tx_len(13) => tx_len(13), tx_len(12) => 
                           tx_len(12), tx_len(11) => tx_len(11), tx_len(10) => 
                           tx_len(10), tx_len(9) => tx_len(9), tx_len(8) => 
                           tx_len(8), tx_len(7) => tx_len(7), tx_len(6) => 
                           tx_len(6), tx_len(5) => tx_len(5), tx_len(4) => 
                           tx_len(4), tx_len(3) => tx_len(3), tx_len(2) => 
                           tx_len(2), tx_len(1) => tx_len(1), tx_len(0) => 
                           tx_len(0));
   X_Logic0_port <= '0';

end SYN_str;

library IEEE;

use IEEE.std_logic_1164.all;

package CONV_PACK_uart_buffered_wrapper is

-- define attributes
attribute ENUM_ENCODING : STRING;

end CONV_PACK_uart_buffered_wrapper;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_uart_buffered_wrapper.all;

entity uart_buffered_wrapper is

   port( clk, reset_b : in std_logic;  rx_fifo_data : out std_logic_vector (7 
         downto 0);  rx_fifo_read : in std_logic;  rx_fifo_empty, rx_fifo_full 
         : out std_logic;  tx_fifo_data : in std_logic_vector (7 downto 0);  
         tx_fifo_write : in std_logic;  tx_fifo_full : out std_logic;  
         serial_in : in std_logic;  serial_out, baud_clk : out std_logic;  
         baud_freq, baud_limit : in std_logic_vector (31 downto 0);  status : 
         out std_logic_vector (31 downto 0));

end uart_buffered_wrapper;

architecture SYN_BEH of uart_buffered_wrapper is

   component uart_buffered
      port( clk, reset_b : in std_logic;  rx_fifo_data : out std_logic_vector 
            (7 downto 0);  rx_fifo_read : in std_logic;  rx_fifo_empty, 
            rx_fifo_full : out std_logic;  tx_fifo_data : in std_logic_vector 
            (7 downto 0);  tx_fifo_write : in std_logic;  tx_fifo_full : out 
            std_logic;  serial_in : in std_logic;  serial_out, baud_clk : out 
            std_logic;  baud_freq, baud_limit : in std_logic_vector (31 downto 
            0);  status : out std_logic_vector (31 downto 0));
   end component;

begin
   
   uart_buffered_1 : uart_buffered port map( clk => clk, reset_b => reset_b, 
                           rx_fifo_data(7) => rx_fifo_data(7), rx_fifo_data(6) 
                           => rx_fifo_data(6), rx_fifo_data(5) => 
                           rx_fifo_data(5), rx_fifo_data(4) => rx_fifo_data(4),
                           rx_fifo_data(3) => rx_fifo_data(3), rx_fifo_data(2) 
                           => rx_fifo_data(2), rx_fifo_data(1) => 
                           rx_fifo_data(1), rx_fifo_data(0) => rx_fifo_data(0),
                           rx_fifo_read => rx_fifo_read, rx_fifo_empty => 
                           rx_fifo_empty, rx_fifo_full => rx_fifo_full, 
                           tx_fifo_data(7) => tx_fifo_data(7), tx_fifo_data(6) 
                           => tx_fifo_data(6), tx_fifo_data(5) => 
                           tx_fifo_data(5), tx_fifo_data(4) => tx_fifo_data(4),
                           tx_fifo_data(3) => tx_fifo_data(3), tx_fifo_data(2) 
                           => tx_fifo_data(2), tx_fifo_data(1) => 
                           tx_fifo_data(1), tx_fifo_data(0) => tx_fifo_data(0),
                           tx_fifo_write => tx_fifo_write, tx_fifo_full => 
                           tx_fifo_full, serial_in => serial_in, serial_out => 
                           serial_out, baud_clk => baud_clk, baud_freq(31) => 
                           baud_freq(31), baud_freq(30) => baud_freq(30), 
                           baud_freq(29) => baud_freq(29), baud_freq(28) => 
                           baud_freq(28), baud_freq(27) => baud_freq(27), 
                           baud_freq(26) => baud_freq(26), baud_freq(25) => 
                           baud_freq(25), baud_freq(24) => baud_freq(24), 
                           baud_freq(23) => baud_freq(23), baud_freq(22) => 
                           baud_freq(22), baud_freq(21) => baud_freq(21), 
                           baud_freq(20) => baud_freq(20), baud_freq(19) => 
                           baud_freq(19), baud_freq(18) => baud_freq(18), 
                           baud_freq(17) => baud_freq(17), baud_freq(16) => 
                           baud_freq(16), baud_freq(15) => baud_freq(15), 
                           baud_freq(14) => baud_freq(14), baud_freq(13) => 
                           baud_freq(13), baud_freq(12) => baud_freq(12), 
                           baud_freq(11) => baud_freq(11), baud_freq(10) => 
                           baud_freq(10), baud_freq(9) => baud_freq(9), 
                           baud_freq(8) => baud_freq(8), baud_freq(7) => 
                           baud_freq(7), baud_freq(6) => baud_freq(6), 
                           baud_freq(5) => baud_freq(5), baud_freq(4) => 
                           baud_freq(4), baud_freq(3) => baud_freq(3), 
                           baud_freq(2) => baud_freq(2), baud_freq(1) => 
                           baud_freq(1), baud_freq(0) => baud_freq(0), 
                           baud_limit(31) => baud_limit(31), baud_limit(30) => 
                           baud_limit(30), baud_limit(29) => baud_limit(29), 
                           baud_limit(28) => baud_limit(28), baud_limit(27) => 
                           baud_limit(27), baud_limit(26) => baud_limit(26), 
                           baud_limit(25) => baud_limit(25), baud_limit(24) => 
                           baud_limit(24), baud_limit(23) => baud_limit(23), 
                           baud_limit(22) => baud_limit(22), baud_limit(21) => 
                           baud_limit(21), baud_limit(20) => baud_limit(20), 
                           baud_limit(19) => baud_limit(19), baud_limit(18) => 
                           baud_limit(18), baud_limit(17) => baud_limit(17), 
                           baud_limit(16) => baud_limit(16), baud_limit(15) => 
                           baud_limit(15), baud_limit(14) => baud_limit(14), 
                           baud_limit(13) => baud_limit(13), baud_limit(12) => 
                           baud_limit(12), baud_limit(11) => baud_limit(11), 
                           baud_limit(10) => baud_limit(10), baud_limit(9) => 
                           baud_limit(9), baud_limit(8) => baud_limit(8), 
                           baud_limit(7) => baud_limit(7), baud_limit(6) => 
                           baud_limit(6), baud_limit(5) => baud_limit(5), 
                           baud_limit(4) => baud_limit(4), baud_limit(3) => 
                           baud_limit(3), baud_limit(2) => baud_limit(2), 
                           baud_limit(1) => baud_limit(1), baud_limit(0) => 
                           baud_limit(0), status(31) => status(31), status(30) 
                           => status(30), status(29) => status(29), status(28) 
                           => status(28), status(27) => status(27), status(26) 
                           => status(26), status(25) => status(25), status(24) 
                           => status(24), status(23) => status(23), status(22) 
                           => status(22), status(21) => status(21), status(20) 
                           => status(20), status(19) => status(19), status(18) 
                           => status(18), status(17) => status(17), status(16) 
                           => status(16), status(15) => status(15), status(14) 
                           => status(14), status(13) => status(13), status(12) 
                           => status(12), status(11) => status(11), status(10) 
                           => status(10), status(9) => status(9), status(8) => 
                           status(8), status(7) => status(7), status(6) => 
                           status(6), status(5) => status(5), status(4) => 
                           status(4), status(3) => status(3), status(2) => 
                           status(2), status(1) => status(1), status(0) => 
                           status(0));

end SYN_BEH;

library IEEE;

use IEEE.std_logic_1164.all;

package CONV_PACK_uart_ll is

-- define attributes
attribute ENUM_ENCODING : STRING;

end CONV_PACK_uart_ll;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_uart_ll.all;

entity uart_ll is

   port( clk, reset_b : in std_logic;  base_addr, ll_rx_port_data : in 
         std_logic_vector (31 downto 0);  ll_rx_port_data_be : in 
         std_logic_vector (3 downto 0);  ll_rx_port_src_rdy_n : in std_logic;  
         ll_rx_port_dst_rdy_n : out std_logic;  ll_rx_port_sof_n, 
         ll_rx_port_eof_n : in std_logic;  rx_dst, rx_src : in std_logic_vector
         (4 downto 0);  rx_len : in std_logic_vector (31 downto 0);  
         ll_tx_port_data : out std_logic_vector (31 downto 0);  
         ll_tx_port_data_be : out std_logic_vector (3 downto 0);  
         ll_tx_port_src_rdy_n : out std_logic;  ll_tx_port_dst_rdy_n : in 
         std_logic;  ll_tx_port_sof_n, ll_tx_port_eof_n : out std_logic;  
         tx_dst, tx_src : out std_logic_vector (4 downto 0);  tx_len : out 
         std_logic_vector (31 downto 0);  serial_in : in std_logic;  serial_out
         , baud_clk : out std_logic);

end uart_ll;

architecture SYN_imp of uart_ll is

   component uart_buffered_wrapper
      port( clk, reset_b : in std_logic;  rx_fifo_data : out std_logic_vector 
            (7 downto 0);  rx_fifo_read : in std_logic;  rx_fifo_empty : out 
            std_logic;  tx_fifo_data : in std_logic_vector (7 downto 0);  
            tx_fifo_write : in std_logic;  tx_fifo_full : out std_logic;  
            serial_in : in std_logic;  serial_out, baud_clk : out std_logic;  
            baud_freq, baud_limit : in std_logic_vector (31 downto 0);  status 
            : out std_logic_vector (31 downto 0));
   end component;
   
   component ll_uart_if_v2
      port( clk, reset_b : in std_logic;  base_addr, ll_rx_port_data : in 
            std_logic_vector (31 downto 0);  ll_rx_port_data_be : in 
            std_logic_vector (3 downto 0);  ll_rx_port_src_rdy_n : in std_logic
            ;  ll_rx_port_dst_rdy_n : out std_logic;  ll_rx_port_sof_n, 
            ll_rx_port_eof_n : in std_logic;  rx_dst, rx_src : in 
            std_logic_vector (4 downto 0);  rx_len : in std_logic_vector (31 
            downto 0);  ll_tx_port_data : out std_logic_vector (31 downto 0);  
            ll_tx_port_data_be : out std_logic_vector (3 downto 0);  
            ll_tx_port_src_rdy_n : out std_logic;  ll_tx_port_dst_rdy_n : in 
            std_logic;  ll_tx_port_sof_n, ll_tx_port_eof_n : out std_logic;  
            tx_dst, tx_src : out std_logic_vector (4 downto 0);  tx_len : out 
            std_logic_vector (31 downto 0);  tx_fifo_data : out 
            std_logic_vector (7 downto 0);  tx_fifo_we : out std_logic;  
            tx_fifo_full : in std_logic;  rx_fifo_data : in std_logic_vector (7
            downto 0);  rx_fifo_re : out std_logic;  rx_fifo_empty : in 
            std_logic;  baud_freq, baud_limit : out std_logic_vector (31 downto
            0);  fifos_status : in std_logic_vector (31 downto 0));
   end component;
   
   signal tx_fifo_data_7_port, tx_fifo_data_6_port, tx_fifo_data_5_port, 
      tx_fifo_data_4_port, tx_fifo_data_3_port, tx_fifo_data_2_port, 
      tx_fifo_data_1_port, tx_fifo_data_0_port, tx_fifo_write, tx_fifo_full, 
      rx_fifo_data_7_port, rx_fifo_data_6_port, rx_fifo_data_5_port, 
      rx_fifo_data_4_port, rx_fifo_data_3_port, rx_fifo_data_2_port, 
      rx_fifo_data_1_port, rx_fifo_data_0_port, rx_fifo_read, rx_fifo_empty, 
      baud_freq_31_port, baud_freq_30_port, baud_freq_29_port, 
      baud_freq_28_port, baud_freq_27_port, baud_freq_26_port, 
      baud_freq_25_port, baud_freq_24_port, baud_freq_23_port, 
      baud_freq_22_port, baud_freq_21_port, baud_freq_20_port, 
      baud_freq_19_port, baud_freq_18_port, baud_freq_17_port, 
      baud_freq_16_port, baud_freq_15_port, baud_freq_14_port, 
      baud_freq_13_port, baud_freq_12_port, baud_freq_11_port, 
      baud_freq_10_port, baud_freq_9_port, baud_freq_8_port, baud_freq_7_port, 
      baud_freq_6_port, baud_freq_5_port, baud_freq_4_port, baud_freq_3_port, 
      baud_freq_2_port, baud_freq_1_port, baud_freq_0_port, baud_limit_31_port,
      baud_limit_30_port, baud_limit_29_port, baud_limit_28_port, 
      baud_limit_27_port, baud_limit_26_port, baud_limit_25_port, 
      baud_limit_24_port, baud_limit_23_port, baud_limit_22_port, 
      baud_limit_21_port, baud_limit_20_port, baud_limit_19_port, 
      baud_limit_18_port, baud_limit_17_port, baud_limit_16_port, 
      baud_limit_15_port, baud_limit_14_port, baud_limit_13_port, 
      baud_limit_12_port, baud_limit_11_port, baud_limit_10_port, 
      baud_limit_9_port, baud_limit_8_port, baud_limit_7_port, 
      baud_limit_6_port, baud_limit_5_port, baud_limit_4_port, 
      baud_limit_3_port, baud_limit_2_port, baud_limit_1_port, 
      baud_limit_0_port, fifos_status_31_port, fifos_status_30_port, 
      fifos_status_29_port, fifos_status_28_port, fifos_status_27_port, 
      fifos_status_26_port, fifos_status_25_port, fifos_status_24_port, 
      fifos_status_23_port, fifos_status_22_port, fifos_status_21_port, 
      fifos_status_20_port, fifos_status_19_port, fifos_status_18_port, 
      fifos_status_17_port, fifos_status_16_port, fifos_status_15_port, 
      fifos_status_14_port, fifos_status_13_port, fifos_status_12_port, 
      fifos_status_11_port, fifos_status_10_port, fifos_status_9_port, 
      fifos_status_8_port, fifos_status_7_port, fifos_status_6_port, 
      fifos_status_5_port, fifos_status_4_port, fifos_status_3_port, 
      fifos_status_2_port, fifos_status_1_port, fifos_status_0_port : std_logic
      ;

begin
   
   ll_uart_if_1 : ll_uart_if_v2 port map( clk => clk, reset_b => reset_b, 
                           base_addr(31) => base_addr(31), base_addr(30) => 
                           base_addr(30), base_addr(29) => base_addr(29), 
                           base_addr(28) => base_addr(28), base_addr(27) => 
                           base_addr(27), base_addr(26) => base_addr(26), 
                           base_addr(25) => base_addr(25), base_addr(24) => 
                           base_addr(24), base_addr(23) => base_addr(23), 
                           base_addr(22) => base_addr(22), base_addr(21) => 
                           base_addr(21), base_addr(20) => base_addr(20), 
                           base_addr(19) => base_addr(19), base_addr(18) => 
                           base_addr(18), base_addr(17) => base_addr(17), 
                           base_addr(16) => base_addr(16), base_addr(15) => 
                           base_addr(15), base_addr(14) => base_addr(14), 
                           base_addr(13) => base_addr(13), base_addr(12) => 
                           base_addr(12), base_addr(11) => base_addr(11), 
                           base_addr(10) => base_addr(10), base_addr(9) => 
                           base_addr(9), base_addr(8) => base_addr(8), 
                           base_addr(7) => base_addr(7), base_addr(6) => 
                           base_addr(6), base_addr(5) => base_addr(5), 
                           base_addr(4) => base_addr(4), base_addr(3) => 
                           base_addr(3), base_addr(2) => base_addr(2), 
                           base_addr(1) => base_addr(1), base_addr(0) => 
                           base_addr(0), ll_rx_port_data(31) => 
                           ll_rx_port_data(31), ll_rx_port_data(30) => 
                           ll_rx_port_data(30), ll_rx_port_data(29) => 
                           ll_rx_port_data(29), ll_rx_port_data(28) => 
                           ll_rx_port_data(28), ll_rx_port_data(27) => 
                           ll_rx_port_data(27), ll_rx_port_data(26) => 
                           ll_rx_port_data(26), ll_rx_port_data(25) => 
                           ll_rx_port_data(25), ll_rx_port_data(24) => 
                           ll_rx_port_data(24), ll_rx_port_data(23) => 
                           ll_rx_port_data(23), ll_rx_port_data(22) => 
                           ll_rx_port_data(22), ll_rx_port_data(21) => 
                           ll_rx_port_data(21), ll_rx_port_data(20) => 
                           ll_rx_port_data(20), ll_rx_port_data(19) => 
                           ll_rx_port_data(19), ll_rx_port_data(18) => 
                           ll_rx_port_data(18), ll_rx_port_data(17) => 
                           ll_rx_port_data(17), ll_rx_port_data(16) => 
                           ll_rx_port_data(16), ll_rx_port_data(15) => 
                           ll_rx_port_data(15), ll_rx_port_data(14) => 
                           ll_rx_port_data(14), ll_rx_port_data(13) => 
                           ll_rx_port_data(13), ll_rx_port_data(12) => 
                           ll_rx_port_data(12), ll_rx_port_data(11) => 
                           ll_rx_port_data(11), ll_rx_port_data(10) => 
                           ll_rx_port_data(10), ll_rx_port_data(9) => 
                           ll_rx_port_data(9), ll_rx_port_data(8) => 
                           ll_rx_port_data(8), ll_rx_port_data(7) => 
                           ll_rx_port_data(7), ll_rx_port_data(6) => 
                           ll_rx_port_data(6), ll_rx_port_data(5) => 
                           ll_rx_port_data(5), ll_rx_port_data(4) => 
                           ll_rx_port_data(4), ll_rx_port_data(3) => 
                           ll_rx_port_data(3), ll_rx_port_data(2) => 
                           ll_rx_port_data(2), ll_rx_port_data(1) => 
                           ll_rx_port_data(1), ll_rx_port_data(0) => 
                           ll_rx_port_data(0), ll_rx_port_data_be(3) => 
                           ll_rx_port_data_be(3), ll_rx_port_data_be(2) => 
                           ll_rx_port_data_be(2), ll_rx_port_data_be(1) => 
                           ll_rx_port_data_be(1), ll_rx_port_data_be(0) => 
                           ll_rx_port_data_be(0), ll_rx_port_src_rdy_n => 
                           ll_rx_port_src_rdy_n, ll_rx_port_dst_rdy_n => 
                           ll_rx_port_dst_rdy_n, ll_rx_port_sof_n => 
                           ll_rx_port_sof_n, ll_rx_port_eof_n => 
                           ll_rx_port_eof_n, rx_dst(4) => rx_dst(4), rx_dst(3) 
                           => rx_dst(3), rx_dst(2) => rx_dst(2), rx_dst(1) => 
                           rx_dst(1), rx_dst(0) => rx_dst(0), rx_src(4) => 
                           rx_src(4), rx_src(3) => rx_src(3), rx_src(2) => 
                           rx_src(2), rx_src(1) => rx_src(1), rx_src(0) => 
                           rx_src(0), rx_len(31) => rx_len(31), rx_len(30) => 
                           rx_len(30), rx_len(29) => rx_len(29), rx_len(28) => 
                           rx_len(28), rx_len(27) => rx_len(27), rx_len(26) => 
                           rx_len(26), rx_len(25) => rx_len(25), rx_len(24) => 
                           rx_len(24), rx_len(23) => rx_len(23), rx_len(22) => 
                           rx_len(22), rx_len(21) => rx_len(21), rx_len(20) => 
                           rx_len(20), rx_len(19) => rx_len(19), rx_len(18) => 
                           rx_len(18), rx_len(17) => rx_len(17), rx_len(16) => 
                           rx_len(16), rx_len(15) => rx_len(15), rx_len(14) => 
                           rx_len(14), rx_len(13) => rx_len(13), rx_len(12) => 
                           rx_len(12), rx_len(11) => rx_len(11), rx_len(10) => 
                           rx_len(10), rx_len(9) => rx_len(9), rx_len(8) => 
                           rx_len(8), rx_len(7) => rx_len(7), rx_len(6) => 
                           rx_len(6), rx_len(5) => rx_len(5), rx_len(4) => 
                           rx_len(4), rx_len(3) => rx_len(3), rx_len(2) => 
                           rx_len(2), rx_len(1) => rx_len(1), rx_len(0) => 
                           rx_len(0), ll_tx_port_data(31) => 
                           ll_tx_port_data(31), ll_tx_port_data(30) => 
                           ll_tx_port_data(30), ll_tx_port_data(29) => 
                           ll_tx_port_data(29), ll_tx_port_data(28) => 
                           ll_tx_port_data(28), ll_tx_port_data(27) => 
                           ll_tx_port_data(27), ll_tx_port_data(26) => 
                           ll_tx_port_data(26), ll_tx_port_data(25) => 
                           ll_tx_port_data(25), ll_tx_port_data(24) => 
                           ll_tx_port_data(24), ll_tx_port_data(23) => 
                           ll_tx_port_data(23), ll_tx_port_data(22) => 
                           ll_tx_port_data(22), ll_tx_port_data(21) => 
                           ll_tx_port_data(21), ll_tx_port_data(20) => 
                           ll_tx_port_data(20), ll_tx_port_data(19) => 
                           ll_tx_port_data(19), ll_tx_port_data(18) => 
                           ll_tx_port_data(18), ll_tx_port_data(17) => 
                           ll_tx_port_data(17), ll_tx_port_data(16) => 
                           ll_tx_port_data(16), ll_tx_port_data(15) => 
                           ll_tx_port_data(15), ll_tx_port_data(14) => 
                           ll_tx_port_data(14), ll_tx_port_data(13) => 
                           ll_tx_port_data(13), ll_tx_port_data(12) => 
                           ll_tx_port_data(12), ll_tx_port_data(11) => 
                           ll_tx_port_data(11), ll_tx_port_data(10) => 
                           ll_tx_port_data(10), ll_tx_port_data(9) => 
                           ll_tx_port_data(9), ll_tx_port_data(8) => 
                           ll_tx_port_data(8), ll_tx_port_data(7) => 
                           ll_tx_port_data(7), ll_tx_port_data(6) => 
                           ll_tx_port_data(6), ll_tx_port_data(5) => 
                           ll_tx_port_data(5), ll_tx_port_data(4) => 
                           ll_tx_port_data(4), ll_tx_port_data(3) => 
                           ll_tx_port_data(3), ll_tx_port_data(2) => 
                           ll_tx_port_data(2), ll_tx_port_data(1) => 
                           ll_tx_port_data(1), ll_tx_port_data(0) => 
                           ll_tx_port_data(0), ll_tx_port_data_be(3) => 
                           ll_tx_port_data_be(3), ll_tx_port_data_be(2) => 
                           ll_tx_port_data_be(2), ll_tx_port_data_be(1) => 
                           ll_tx_port_data_be(1), ll_tx_port_data_be(0) => 
                           ll_tx_port_data_be(0), ll_tx_port_src_rdy_n => 
                           ll_tx_port_src_rdy_n, ll_tx_port_dst_rdy_n => 
                           ll_tx_port_dst_rdy_n, ll_tx_port_sof_n => 
                           ll_tx_port_sof_n, ll_tx_port_eof_n => 
                           ll_tx_port_eof_n, tx_dst(4) => tx_dst(4), tx_dst(3) 
                           => tx_dst(3), tx_dst(2) => tx_dst(2), tx_dst(1) => 
                           tx_dst(1), tx_dst(0) => tx_dst(0), tx_src(4) => 
                           tx_src(4), tx_src(3) => tx_src(3), tx_src(2) => 
                           tx_src(2), tx_src(1) => tx_src(1), tx_src(0) => 
                           tx_src(0), tx_len(31) => tx_len(31), tx_len(30) => 
                           tx_len(30), tx_len(29) => tx_len(29), tx_len(28) => 
                           tx_len(28), tx_len(27) => tx_len(27), tx_len(26) => 
                           tx_len(26), tx_len(25) => tx_len(25), tx_len(24) => 
                           tx_len(24), tx_len(23) => tx_len(23), tx_len(22) => 
                           tx_len(22), tx_len(21) => tx_len(21), tx_len(20) => 
                           tx_len(20), tx_len(19) => tx_len(19), tx_len(18) => 
                           tx_len(18), tx_len(17) => tx_len(17), tx_len(16) => 
                           tx_len(16), tx_len(15) => tx_len(15), tx_len(14) => 
                           tx_len(14), tx_len(13) => tx_len(13), tx_len(12) => 
                           tx_len(12), tx_len(11) => tx_len(11), tx_len(10) => 
                           tx_len(10), tx_len(9) => tx_len(9), tx_len(8) => 
                           tx_len(8), tx_len(7) => tx_len(7), tx_len(6) => 
                           tx_len(6), tx_len(5) => tx_len(5), tx_len(4) => 
                           tx_len(4), tx_len(3) => tx_len(3), tx_len(2) => 
                           tx_len(2), tx_len(1) => tx_len(1), tx_len(0) => 
                           tx_len(0), tx_fifo_data(7) => tx_fifo_data_7_port, 
                           tx_fifo_data(6) => tx_fifo_data_6_port, 
                           tx_fifo_data(5) => tx_fifo_data_5_port, 
                           tx_fifo_data(4) => tx_fifo_data_4_port, 
                           tx_fifo_data(3) => tx_fifo_data_3_port, 
                           tx_fifo_data(2) => tx_fifo_data_2_port, 
                           tx_fifo_data(1) => tx_fifo_data_1_port, 
                           tx_fifo_data(0) => tx_fifo_data_0_port, tx_fifo_we 
                           => tx_fifo_write, tx_fifo_full => tx_fifo_full, 
                           rx_fifo_data(7) => rx_fifo_data_7_port, 
                           rx_fifo_data(6) => rx_fifo_data_6_port, 
                           rx_fifo_data(5) => rx_fifo_data_5_port, 
                           rx_fifo_data(4) => rx_fifo_data_4_port, 
                           rx_fifo_data(3) => rx_fifo_data_3_port, 
                           rx_fifo_data(2) => rx_fifo_data_2_port, 
                           rx_fifo_data(1) => rx_fifo_data_1_port, 
                           rx_fifo_data(0) => rx_fifo_data_0_port, rx_fifo_re 
                           => rx_fifo_read, rx_fifo_empty => rx_fifo_empty, 
                           baud_freq(31) => baud_freq_31_port, baud_freq(30) =>
                           baud_freq_30_port, baud_freq(29) => 
                           baud_freq_29_port, baud_freq(28) => 
                           baud_freq_28_port, baud_freq(27) => 
                           baud_freq_27_port, baud_freq(26) => 
                           baud_freq_26_port, baud_freq(25) => 
                           baud_freq_25_port, baud_freq(24) => 
                           baud_freq_24_port, baud_freq(23) => 
                           baud_freq_23_port, baud_freq(22) => 
                           baud_freq_22_port, baud_freq(21) => 
                           baud_freq_21_port, baud_freq(20) => 
                           baud_freq_20_port, baud_freq(19) => 
                           baud_freq_19_port, baud_freq(18) => 
                           baud_freq_18_port, baud_freq(17) => 
                           baud_freq_17_port, baud_freq(16) => 
                           baud_freq_16_port, baud_freq(15) => 
                           baud_freq_15_port, baud_freq(14) => 
                           baud_freq_14_port, baud_freq(13) => 
                           baud_freq_13_port, baud_freq(12) => 
                           baud_freq_12_port, baud_freq(11) => 
                           baud_freq_11_port, baud_freq(10) => 
                           baud_freq_10_port, baud_freq(9) => baud_freq_9_port,
                           baud_freq(8) => baud_freq_8_port, baud_freq(7) => 
                           baud_freq_7_port, baud_freq(6) => baud_freq_6_port, 
                           baud_freq(5) => baud_freq_5_port, baud_freq(4) => 
                           baud_freq_4_port, baud_freq(3) => baud_freq_3_port, 
                           baud_freq(2) => baud_freq_2_port, baud_freq(1) => 
                           baud_freq_1_port, baud_freq(0) => baud_freq_0_port, 
                           baud_limit(31) => baud_limit_31_port, baud_limit(30)
                           => baud_limit_30_port, baud_limit(29) => 
                           baud_limit_29_port, baud_limit(28) => 
                           baud_limit_28_port, baud_limit(27) => 
                           baud_limit_27_port, baud_limit(26) => 
                           baud_limit_26_port, baud_limit(25) => 
                           baud_limit_25_port, baud_limit(24) => 
                           baud_limit_24_port, baud_limit(23) => 
                           baud_limit_23_port, baud_limit(22) => 
                           baud_limit_22_port, baud_limit(21) => 
                           baud_limit_21_port, baud_limit(20) => 
                           baud_limit_20_port, baud_limit(19) => 
                           baud_limit_19_port, baud_limit(18) => 
                           baud_limit_18_port, baud_limit(17) => 
                           baud_limit_17_port, baud_limit(16) => 
                           baud_limit_16_port, baud_limit(15) => 
                           baud_limit_15_port, baud_limit(14) => 
                           baud_limit_14_port, baud_limit(13) => 
                           baud_limit_13_port, baud_limit(12) => 
                           baud_limit_12_port, baud_limit(11) => 
                           baud_limit_11_port, baud_limit(10) => 
                           baud_limit_10_port, baud_limit(9) => 
                           baud_limit_9_port, baud_limit(8) => 
                           baud_limit_8_port, baud_limit(7) => 
                           baud_limit_7_port, baud_limit(6) => 
                           baud_limit_6_port, baud_limit(5) => 
                           baud_limit_5_port, baud_limit(4) => 
                           baud_limit_4_port, baud_limit(3) => 
                           baud_limit_3_port, baud_limit(2) => 
                           baud_limit_2_port, baud_limit(1) => 
                           baud_limit_1_port, baud_limit(0) => 
                           baud_limit_0_port, fifos_status(31) => 
                           fifos_status_31_port, fifos_status(30) => 
                           fifos_status_30_port, fifos_status(29) => 
                           fifos_status_29_port, fifos_status(28) => 
                           fifos_status_28_port, fifos_status(27) => 
                           fifos_status_27_port, fifos_status(26) => 
                           fifos_status_26_port, fifos_status(25) => 
                           fifos_status_25_port, fifos_status(24) => 
                           fifos_status_24_port, fifos_status(23) => 
                           fifos_status_23_port, fifos_status(22) => 
                           fifos_status_22_port, fifos_status(21) => 
                           fifos_status_21_port, fifos_status(20) => 
                           fifos_status_20_port, fifos_status(19) => 
                           fifos_status_19_port, fifos_status(18) => 
                           fifos_status_18_port, fifos_status(17) => 
                           fifos_status_17_port, fifos_status(16) => 
                           fifos_status_16_port, fifos_status(15) => 
                           fifos_status_15_port, fifos_status(14) => 
                           fifos_status_14_port, fifos_status(13) => 
                           fifos_status_13_port, fifos_status(12) => 
                           fifos_status_12_port, fifos_status(11) => 
                           fifos_status_11_port, fifos_status(10) => 
                           fifos_status_10_port, fifos_status(9) => 
                           fifos_status_9_port, fifos_status(8) => 
                           fifos_status_8_port, fifos_status(7) => 
                           fifos_status_7_port, fifos_status(6) => 
                           fifos_status_6_port, fifos_status(5) => 
                           fifos_status_5_port, fifos_status(4) => 
                           fifos_status_4_port, fifos_status(3) => 
                           fifos_status_3_port, fifos_status(2) => 
                           fifos_status_2_port, fifos_status(1) => 
                           fifos_status_1_port, fifos_status(0) => 
                           fifos_status_0_port);
   uart_buffered_1 : uart_buffered_wrapper port map( clk => clk, reset_b => 
                           reset_b, rx_fifo_data(7) => rx_fifo_data_7_port, 
                           rx_fifo_data(6) => rx_fifo_data_6_port, 
                           rx_fifo_data(5) => rx_fifo_data_5_port, 
                           rx_fifo_data(4) => rx_fifo_data_4_port, 
                           rx_fifo_data(3) => rx_fifo_data_3_port, 
                           rx_fifo_data(2) => rx_fifo_data_2_port, 
                           rx_fifo_data(1) => rx_fifo_data_1_port, 
                           rx_fifo_data(0) => rx_fifo_data_0_port, rx_fifo_read
                           => rx_fifo_read, rx_fifo_empty => rx_fifo_empty, 
                           tx_fifo_data(7) => tx_fifo_data_7_port, 
                           tx_fifo_data(6) => tx_fifo_data_6_port, 
                           tx_fifo_data(5) => tx_fifo_data_5_port, 
                           tx_fifo_data(4) => tx_fifo_data_4_port, 
                           tx_fifo_data(3) => tx_fifo_data_3_port, 
                           tx_fifo_data(2) => tx_fifo_data_2_port, 
                           tx_fifo_data(1) => tx_fifo_data_1_port, 
                           tx_fifo_data(0) => tx_fifo_data_0_port, 
                           tx_fifo_write => tx_fifo_write, tx_fifo_full => 
                           tx_fifo_full, serial_in => serial_in, serial_out => 
                           serial_out, baud_clk => baud_clk, baud_freq(31) => 
                           baud_freq_31_port, baud_freq(30) => 
                           baud_freq_30_port, baud_freq(29) => 
                           baud_freq_29_port, baud_freq(28) => 
                           baud_freq_28_port, baud_freq(27) => 
                           baud_freq_27_port, baud_freq(26) => 
                           baud_freq_26_port, baud_freq(25) => 
                           baud_freq_25_port, baud_freq(24) => 
                           baud_freq_24_port, baud_freq(23) => 
                           baud_freq_23_port, baud_freq(22) => 
                           baud_freq_22_port, baud_freq(21) => 
                           baud_freq_21_port, baud_freq(20) => 
                           baud_freq_20_port, baud_freq(19) => 
                           baud_freq_19_port, baud_freq(18) => 
                           baud_freq_18_port, baud_freq(17) => 
                           baud_freq_17_port, baud_freq(16) => 
                           baud_freq_16_port, baud_freq(15) => 
                           baud_freq_15_port, baud_freq(14) => 
                           baud_freq_14_port, baud_freq(13) => 
                           baud_freq_13_port, baud_freq(12) => 
                           baud_freq_12_port, baud_freq(11) => 
                           baud_freq_11_port, baud_freq(10) => 
                           baud_freq_10_port, baud_freq(9) => baud_freq_9_port,
                           baud_freq(8) => baud_freq_8_port, baud_freq(7) => 
                           baud_freq_7_port, baud_freq(6) => baud_freq_6_port, 
                           baud_freq(5) => baud_freq_5_port, baud_freq(4) => 
                           baud_freq_4_port, baud_freq(3) => baud_freq_3_port, 
                           baud_freq(2) => baud_freq_2_port, baud_freq(1) => 
                           baud_freq_1_port, baud_freq(0) => baud_freq_0_port, 
                           baud_limit(31) => baud_limit_31_port, baud_limit(30)
                           => baud_limit_30_port, baud_limit(29) => 
                           baud_limit_29_port, baud_limit(28) => 
                           baud_limit_28_port, baud_limit(27) => 
                           baud_limit_27_port, baud_limit(26) => 
                           baud_limit_26_port, baud_limit(25) => 
                           baud_limit_25_port, baud_limit(24) => 
                           baud_limit_24_port, baud_limit(23) => 
                           baud_limit_23_port, baud_limit(22) => 
                           baud_limit_22_port, baud_limit(21) => 
                           baud_limit_21_port, baud_limit(20) => 
                           baud_limit_20_port, baud_limit(19) => 
                           baud_limit_19_port, baud_limit(18) => 
                           baud_limit_18_port, baud_limit(17) => 
                           baud_limit_17_port, baud_limit(16) => 
                           baud_limit_16_port, baud_limit(15) => 
                           baud_limit_15_port, baud_limit(14) => 
                           baud_limit_14_port, baud_limit(13) => 
                           baud_limit_13_port, baud_limit(12) => 
                           baud_limit_12_port, baud_limit(11) => 
                           baud_limit_11_port, baud_limit(10) => 
                           baud_limit_10_port, baud_limit(9) => 
                           baud_limit_9_port, baud_limit(8) => 
                           baud_limit_8_port, baud_limit(7) => 
                           baud_limit_7_port, baud_limit(6) => 
                           baud_limit_6_port, baud_limit(5) => 
                           baud_limit_5_port, baud_limit(4) => 
                           baud_limit_4_port, baud_limit(3) => 
                           baud_limit_3_port, baud_limit(2) => 
                           baud_limit_2_port, baud_limit(1) => 
                           baud_limit_1_port, baud_limit(0) => 
                           baud_limit_0_port, status(31) => 
                           fifos_status_31_port, status(30) => 
                           fifos_status_30_port, status(29) => 
                           fifos_status_29_port, status(28) => 
                           fifos_status_28_port, status(27) => 
                           fifos_status_27_port, status(26) => 
                           fifos_status_26_port, status(25) => 
                           fifos_status_25_port, status(24) => 
                           fifos_status_24_port, status(23) => 
                           fifos_status_23_port, status(22) => 
                           fifos_status_22_port, status(21) => 
                           fifos_status_21_port, status(20) => 
                           fifos_status_20_port, status(19) => 
                           fifos_status_19_port, status(18) => 
                           fifos_status_18_port, status(17) => 
                           fifos_status_17_port, status(16) => 
                           fifos_status_16_port, status(15) => 
                           fifos_status_15_port, status(14) => 
                           fifos_status_14_port, status(13) => 
                           fifos_status_13_port, status(12) => 
                           fifos_status_12_port, status(11) => 
                           fifos_status_11_port, status(10) => 
                           fifos_status_10_port, status(9) => 
                           fifos_status_9_port, status(8) => 
                           fifos_status_8_port, status(7) => 
                           fifos_status_7_port, status(6) => 
                           fifos_status_6_port, status(5) => 
                           fifos_status_5_port, status(4) => 
                           fifos_status_4_port, status(3) => 
                           fifos_status_3_port, status(2) => 
                           fifos_status_2_port, status(1) => 
                           fifos_status_1_port, status(0) => 
                           fifos_status_0_port);

end SYN_imp;

library IEEE;

use IEEE.std_logic_1164.all;

package CONV_PACK_zpu_core is

-- define attributes
attribute ENUM_ENCODING : STRING;

end CONV_PACK_zpu_core;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_zpu_core.all;

entity zpu_core_DW01_inc_1 is

   port( A : in std_logic_vector (31 downto 0);  SUM : out std_logic_vector (31
         downto 0));

end zpu_core_DW01_inc_1;

architecture SYN_rpl of zpu_core_DW01_inc_1 is

   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   signal n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16
      , n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, 
      n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45
      , n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, 
      n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n73, n74
      , n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86, n87, n88, 
      n89, n90, n91, n92, n93, n94, n95, n96, n97, n98, n99, n100, n101, n102, 
      n103, n104, n105, n106, n107, n108, n109, n110, n111, n112, n113, n114, 
      n115, n116, n117, n118, n119, n120, n121, n122, n123, n124, n125, n126, 
      n127, n128, n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, 
      n139, n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150, 
      n151, n152, n153 : std_logic;

begin
   
   U1 : GTECH_NOT port map( A => n53, Z => n1);
   U2 : GTECH_NOT port map( A => n56, Z => n2);
   U3 : GTECH_NOT port map( A => n149, Z => n3);
   U4 : GTECH_NOT port map( A => n50, Z => n4);
   U5 : GTECH_NOT port map( A => n143, Z => n5);
   U6 : GTECH_NOT port map( A => n140, Z => n6);
   U7 : GTECH_NOT port map( A => n136, Z => n7);
   U8 : GTECH_NOT port map( A => n133, Z => n8);
   U9 : GTECH_NOT port map( A => n129, Z => n9);
   U10 : GTECH_NOT port map( A => n126, Z => n10);
   U11 : GTECH_NOT port map( A => n122, Z => n11);
   U12 : GTECH_NOT port map( A => n119, Z => n12);
   U13 : GTECH_NOT port map( A => n113, Z => n13);
   U14 : GTECH_NOT port map( A => n110, Z => n14);
   U15 : GTECH_NOT port map( A => n106, Z => n15);
   U16 : GTECH_NOT port map( A => n103, Z => n16);
   U17 : GTECH_NOT port map( A => n99, Z => n17);
   U18 : GTECH_NOT port map( A => n96, Z => n18);
   U19 : GTECH_NOT port map( A => n92, Z => n19);
   U20 : GTECH_NOT port map( A => n89, Z => n20);
   U21 : GTECH_NOT port map( A => n85, Z => n21);
   U22 : GTECH_NOT port map( A => n82, Z => n22);
   U23 : GTECH_NOT port map( A => n80, Z => n23);
   U24 : GTECH_NOT port map( A => n72, Z => n24);
   U25 : GTECH_NOT port map( A => n71, Z => n25);
   U26 : GTECH_NOT port map( A => A(5), Z => n26);
   U27 : GTECH_NOT port map( A => n59, Z => n27);
   U28 : GTECH_NOT port map( A => A(30), Z => n28);
   U29 : GTECH_NOT port map( A => A(29), Z => n29);
   U30 : GTECH_NOT port map( A => n65, Z => n30);
   U31 : GTECH_NOT port map( A => n68, Z => n31);
   U32 : GTECH_NOT port map( A => n62, Z => n32);
   U33 : GTECH_NOT port map( A => A(1), Z => n33);
   U34 : GTECH_NOT port map( A => n78, Z => n34);
   U35 : GTECH_NOT port map( A => A(0), Z => n35);
   U36 : GTECH_NOT port map( A => A(27), Z => n36);
   U37 : GTECH_NOT port map( A => A(25), Z => n37);
   U38 : GTECH_NOT port map( A => A(23), Z => n38);
   U39 : GTECH_NOT port map( A => A(21), Z => n39);
   U40 : GTECH_NOT port map( A => A(19), Z => n40);
   U41 : GTECH_NOT port map( A => A(17), Z => n41);
   U42 : GTECH_NOT port map( A => A(11), Z => n42);
   U43 : GTECH_NOT port map( A => A(7), Z => n43);
   U44 : GTECH_NOT port map( A => A(9), Z => n44);
   U45 : GTECH_NOT port map( A => A(3), Z => n45);
   U46 : GTECH_NOT port map( A => A(15), Z => n46);
   U47 : GTECH_NOT port map( A => A(13), Z => n47);
   U48 : GTECH_NAND2 port map( A => n48, B => n49, Z => SUM(9));
   U49 : GTECH_NAND2 port map( A => A(9), B => n50, Z => n49);
   U50 : GTECH_NAND2 port map( A => n4, B => n44, Z => n48);
   U51 : GTECH_NAND2 port map( A => n1, B => n51, Z => SUM(8));
   U52 : GTECH_NAND2 port map( A => A(8), B => n52, Z => n51);
   U53 : GTECH_NOR2 port map( A => n52, B => A(8), Z => n53);
   U54 : GTECH_NAND2 port map( A => A(7), B => n2, Z => n52);
   U55 : GTECH_NAND2 port map( A => n54, B => n55, Z => SUM(7));
   U56 : GTECH_NAND2 port map( A => A(7), B => n56, Z => n55);
   U57 : GTECH_NAND2 port map( A => n2, B => n43, Z => n54);
   U58 : GTECH_NAND2 port map( A => n27, B => n57, Z => SUM(6));
   U59 : GTECH_NAND2 port map( A => A(6), B => n58, Z => n57);
   U60 : GTECH_NOR2 port map( A => n58, B => A(6), Z => n59);
   U61 : GTECH_NAND2 port map( A => A(5), B => n32, Z => n58);
   U62 : GTECH_NAND2 port map( A => n60, B => n61, Z => SUM(5));
   U63 : GTECH_NAND2 port map( A => A(5), B => n62, Z => n61);
   U64 : GTECH_NAND2 port map( A => n32, B => n26, Z => n60);
   U65 : GTECH_NAND2 port map( A => n30, B => n63, Z => SUM(4));
   U66 : GTECH_NAND2 port map( A => A(4), B => n64, Z => n63);
   U67 : GTECH_NOR2 port map( A => n64, B => A(4), Z => n65);
   U68 : GTECH_NAND2 port map( A => A(3), B => n31, Z => n64);
   U69 : GTECH_NAND2 port map( A => n66, B => n67, Z => SUM(3));
   U70 : GTECH_NAND2 port map( A => A(3), B => n68, Z => n67);
   U71 : GTECH_NAND2 port map( A => n31, B => n45, Z => n66);
   U72 : GTECH_NAND2 port map( A => n25, B => n69, Z => SUM(31));
   U73 : GTECH_NAND2 port map( A => A(31), B => n70, Z => n69);
   U74 : GTECH_NOR2 port map( A => n70, B => A(31), Z => n71);
   U75 : GTECH_NAND2 port map( A => A(30), B => n72, Z => n70);
   U76 : GTECH_NAND2 port map( A => n73, B => n74, Z => SUM(30));
   U77 : GTECH_NAND2 port map( A => A(30), B => n24, Z => n74);
   U78 : GTECH_NAND2 port map( A => n72, B => n28, Z => n73);
   U79 : GTECH_NOR2 port map( A => n29, B => n75, Z => n72);
   U80 : GTECH_NAND2 port map( A => n34, B => n76, Z => SUM(2));
   U81 : GTECH_NAND2 port map( A => A(2), B => n77, Z => n76);
   U82 : GTECH_NOR2 port map( A => n77, B => A(2), Z => n78);
   U83 : GTECH_NAND2 port map( A => A(1), B => A(0), Z => n77);
   U84 : GTECH_NAND2 port map( A => n23, B => n79, Z => SUM(29));
   U85 : GTECH_NAND2 port map( A => A(29), B => n75, Z => n79);
   U86 : GTECH_NOR2 port map( A => n75, B => A(29), Z => n80);
   U87 : GTECH_NAND2 port map( A => n81, B => A(28), Z => n75);
   U88 : GTECH_NOR2 port map( A => n82, B => n36, Z => n81);
   U89 : GTECH_NAND2 port map( A => n21, B => n83, Z => SUM(28));
   U90 : GTECH_NAND2 port map( A => A(28), B => n84, Z => n83);
   U91 : GTECH_NOR2 port map( A => n84, B => A(28), Z => n85);
   U92 : GTECH_NAND2 port map( A => A(27), B => n22, Z => n84);
   U93 : GTECH_NAND2 port map( A => n86, B => n87, Z => SUM(27));
   U94 : GTECH_NAND2 port map( A => A(27), B => n82, Z => n87);
   U95 : GTECH_NAND2 port map( A => n22, B => n36, Z => n86);
   U96 : GTECH_NAND2 port map( A => n88, B => A(26), Z => n82);
   U97 : GTECH_NOR2 port map( A => n89, B => n37, Z => n88);
   U98 : GTECH_NAND2 port map( A => n19, B => n90, Z => SUM(26));
   U99 : GTECH_NAND2 port map( A => A(26), B => n91, Z => n90);
   U100 : GTECH_NOR2 port map( A => n91, B => A(26), Z => n92);
   U101 : GTECH_NAND2 port map( A => A(25), B => n20, Z => n91);
   U102 : GTECH_NAND2 port map( A => n93, B => n94, Z => SUM(25));
   U103 : GTECH_NAND2 port map( A => A(25), B => n89, Z => n94);
   U104 : GTECH_NAND2 port map( A => n20, B => n37, Z => n93);
   U105 : GTECH_NAND2 port map( A => n95, B => A(24), Z => n89);
   U106 : GTECH_NOR2 port map( A => n96, B => n38, Z => n95);
   U107 : GTECH_NAND2 port map( A => n17, B => n97, Z => SUM(24));
   U108 : GTECH_NAND2 port map( A => A(24), B => n98, Z => n97);
   U109 : GTECH_NOR2 port map( A => n98, B => A(24), Z => n99);
   U110 : GTECH_NAND2 port map( A => A(23), B => n18, Z => n98);
   U111 : GTECH_NAND2 port map( A => n100, B => n101, Z => SUM(23));
   U112 : GTECH_NAND2 port map( A => A(23), B => n96, Z => n101);
   U113 : GTECH_NAND2 port map( A => n18, B => n38, Z => n100);
   U114 : GTECH_NAND2 port map( A => n102, B => A(22), Z => n96);
   U115 : GTECH_NOR2 port map( A => n103, B => n39, Z => n102);
   U116 : GTECH_NAND2 port map( A => n15, B => n104, Z => SUM(22));
   U117 : GTECH_NAND2 port map( A => A(22), B => n105, Z => n104);
   U118 : GTECH_NOR2 port map( A => n105, B => A(22), Z => n106);
   U119 : GTECH_NAND2 port map( A => A(21), B => n16, Z => n105);
   U120 : GTECH_NAND2 port map( A => n107, B => n108, Z => SUM(21));
   U121 : GTECH_NAND2 port map( A => A(21), B => n103, Z => n108);
   U122 : GTECH_NAND2 port map( A => n16, B => n39, Z => n107);
   U123 : GTECH_NAND2 port map( A => n109, B => A(20), Z => n103);
   U124 : GTECH_NOR2 port map( A => n110, B => n40, Z => n109);
   U125 : GTECH_NAND2 port map( A => n13, B => n111, Z => SUM(20));
   U126 : GTECH_NAND2 port map( A => A(20), B => n112, Z => n111);
   U127 : GTECH_NOR2 port map( A => n112, B => A(20), Z => n113);
   U128 : GTECH_NAND2 port map( A => A(19), B => n14, Z => n112);
   U129 : GTECH_NAND2 port map( A => n114, B => n115, Z => SUM(1));
   U130 : GTECH_NAND2 port map( A => A(1), B => n35, Z => n115);
   U131 : GTECH_NAND2 port map( A => A(0), B => n33, Z => n114);
   U132 : GTECH_NAND2 port map( A => n116, B => n117, Z => SUM(19));
   U133 : GTECH_NAND2 port map( A => A(19), B => n110, Z => n117);
   U134 : GTECH_NAND2 port map( A => n14, B => n40, Z => n116);
   U135 : GTECH_NAND2 port map( A => n118, B => A(18), Z => n110);
   U136 : GTECH_NOR2 port map( A => n119, B => n41, Z => n118);
   U137 : GTECH_NAND2 port map( A => n11, B => n120, Z => SUM(18));
   U138 : GTECH_NAND2 port map( A => A(18), B => n121, Z => n120);
   U139 : GTECH_NOR2 port map( A => n121, B => A(18), Z => n122);
   U140 : GTECH_NAND2 port map( A => A(17), B => n12, Z => n121);
   U141 : GTECH_NAND2 port map( A => n123, B => n124, Z => SUM(17));
   U142 : GTECH_NAND2 port map( A => A(17), B => n119, Z => n124);
   U143 : GTECH_NAND2 port map( A => n12, B => n41, Z => n123);
   U144 : GTECH_NAND2 port map( A => n125, B => A(16), Z => n119);
   U145 : GTECH_NOR2 port map( A => n126, B => n46, Z => n125);
   U146 : GTECH_NAND2 port map( A => n9, B => n127, Z => SUM(16));
   U147 : GTECH_NAND2 port map( A => A(16), B => n128, Z => n127);
   U148 : GTECH_NOR2 port map( A => n128, B => A(16), Z => n129);
   U149 : GTECH_NAND2 port map( A => A(15), B => n10, Z => n128);
   U150 : GTECH_NAND2 port map( A => n130, B => n131, Z => SUM(15));
   U151 : GTECH_NAND2 port map( A => A(15), B => n126, Z => n131);
   U152 : GTECH_NAND2 port map( A => n10, B => n46, Z => n130);
   U153 : GTECH_NAND2 port map( A => n132, B => A(14), Z => n126);
   U154 : GTECH_NOR2 port map( A => n133, B => n47, Z => n132);
   U155 : GTECH_NAND2 port map( A => n7, B => n134, Z => SUM(14));
   U156 : GTECH_NAND2 port map( A => A(14), B => n135, Z => n134);
   U157 : GTECH_NOR2 port map( A => n135, B => A(14), Z => n136);
   U158 : GTECH_NAND2 port map( A => A(13), B => n8, Z => n135);
   U159 : GTECH_NAND2 port map( A => n137, B => n138, Z => SUM(13));
   U160 : GTECH_NAND2 port map( A => A(13), B => n133, Z => n138);
   U161 : GTECH_NAND2 port map( A => n8, B => n47, Z => n137);
   U162 : GTECH_NAND2 port map( A => n139, B => A(12), Z => n133);
   U163 : GTECH_NOR2 port map( A => n140, B => n42, Z => n139);
   U164 : GTECH_NAND2 port map( A => n5, B => n141, Z => SUM(12));
   U165 : GTECH_NAND2 port map( A => A(12), B => n142, Z => n141);
   U166 : GTECH_NOR2 port map( A => n142, B => A(12), Z => n143);
   U167 : GTECH_NAND2 port map( A => A(11), B => n6, Z => n142);
   U168 : GTECH_NAND2 port map( A => n144, B => n145, Z => SUM(11));
   U169 : GTECH_NAND2 port map( A => A(11), B => n140, Z => n145);
   U170 : GTECH_NAND2 port map( A => n6, B => n42, Z => n144);
   U171 : GTECH_NAND2 port map( A => n146, B => A(10), Z => n140);
   U172 : GTECH_NOR2 port map( A => n44, B => n50, Z => n146);
   U173 : GTECH_NAND2 port map( A => n3, B => n147, Z => SUM(10));
   U174 : GTECH_NAND2 port map( A => A(10), B => n148, Z => n147);
   U175 : GTECH_NOR2 port map( A => n148, B => A(10), Z => n149);
   U176 : GTECH_NAND2 port map( A => n4, B => A(9), Z => n148);
   U177 : GTECH_NAND2 port map( A => n150, B => A(8), Z => n50);
   U178 : GTECH_NOR2 port map( A => n56, B => n43, Z => n150);
   U179 : GTECH_NAND2 port map( A => n151, B => A(6), Z => n56);
   U180 : GTECH_NOR2 port map( A => n62, B => n26, Z => n151);
   U181 : GTECH_NAND2 port map( A => n152, B => A(4), Z => n62);
   U182 : GTECH_NOR2 port map( A => n68, B => n45, Z => n152);
   U183 : GTECH_NAND2 port map( A => n153, B => A(2), Z => n68);
   U184 : GTECH_NOR2 port map( A => n35, B => n33, Z => n153);

end SYN_rpl;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_zpu_core.all;

entity zpu_core_DW01_add_9 is

   port( A, B : in std_logic_vector (29 downto 0);  CI : in std_logic;  SUM : 
         out std_logic_vector (29 downto 0);  CO : out std_logic);

end zpu_core_DW01_add_9;

architecture SYN_rpl of zpu_core_DW01_add_9 is

   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   signal n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16
      , n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, 
      n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45
      , n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, 
      n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n73, n74
      , n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86, n87, n88, 
      n89, n90, n91, n92, n93, n94, n95, n96, n97, n98, n99, n100, n101, n102, 
      n103, n104, n105, n106, n107, n108, n109, n110, n111, n112, n113, n114, 
      n115, n116, n117, n118, n119, n120, n121, n122, n123, n124, n125, n126, 
      n127, n128, n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, 
      n139, n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150, 
      n151, n152, n153, n154, n155, n156, n157, n158, n159, n160, n161, n162, 
      n163, n164, n165, n166, n167, n168, n169, n170, n171, n172, n173, n174, 
      n175, n176, n177, n178, n179 : std_logic;

begin
   
   U1 : GTECH_NOT port map( A => B(0), Z => n1);
   U2 : GTECH_NOT port map( A => n62, Z => n2);
   U3 : GTECH_NOT port map( A => n65, Z => n3);
   U4 : GTECH_NOT port map( A => n164, Z => n4);
   U5 : GTECH_NOT port map( A => n59, Z => n5);
   U6 : GTECH_NOT port map( A => n158, Z => n6);
   U7 : GTECH_NOT port map( A => n155, Z => n7);
   U8 : GTECH_NOT port map( A => n151, Z => n8);
   U9 : GTECH_NOT port map( A => n148, Z => n9);
   U10 : GTECH_NOT port map( A => n144, Z => n10);
   U11 : GTECH_NOT port map( A => n141, Z => n11);
   U12 : GTECH_NOT port map( A => n137, Z => n12);
   U13 : GTECH_NOT port map( A => n134, Z => n13);
   U14 : GTECH_NOT port map( A => n124, Z => n14);
   U15 : GTECH_NOT port map( A => n121, Z => n15);
   U16 : GTECH_NOT port map( A => n117, Z => n16);
   U17 : GTECH_NOT port map( A => n114, Z => n17);
   U18 : GTECH_NOT port map( A => n110, Z => n18);
   U19 : GTECH_NOT port map( A => n107, Z => n19);
   U20 : GTECH_NOT port map( A => n103, Z => n20);
   U21 : GTECH_NOT port map( A => n100, Z => n21);
   U22 : GTECH_NOT port map( A => n96, Z => n22);
   U23 : GTECH_NOT port map( A => n93, Z => n23);
   U24 : GTECH_NOT port map( A => n92, Z => n24);
   U25 : GTECH_NOT port map( A => n69, Z => n25);
   U26 : GTECH_NOT port map( A => n68, Z => n26);
   U27 : GTECH_NOT port map( A => n167, Z => n27);
   U28 : GTECH_NOT port map( A => n73, Z => n28);
   U29 : GTECH_NOT port map( A => n80, Z => n29);
   U30 : GTECH_NOT port map( A => n79, Z => n30);
   U31 : GTECH_NOT port map( A => n173, Z => n31);
   U32 : GTECH_NOT port map( A => n85, Z => n32);
   U33 : GTECH_NOT port map( A => n177, Z => n33);
   U34 : GTECH_NOT port map( A => n126, Z => n34);
   U35 : GTECH_NOT port map( A => A(28), Z => n35);
   U36 : GTECH_NOT port map( A => A(27), Z => n36);
   U37 : GTECH_NOT port map( A => A(25), Z => n37);
   U38 : GTECH_NOT port map( A => A(23), Z => n38);
   U39 : GTECH_NOT port map( A => B(1), Z => n39);
   U40 : GTECH_NOT port map( A => B(2), Z => n40);
   U41 : GTECH_NOT port map( A => B(3), Z => n41);
   U42 : GTECH_NOT port map( A => B(4), Z => n42);
   U43 : GTECH_NOT port map( A => A(3), Z => n43);
   U44 : GTECH_NOT port map( A => A(5), Z => n44);
   U45 : GTECH_NOT port map( A => A(7), Z => n45);
   U46 : GTECH_NOT port map( A => A(9), Z => n46);
   U47 : GTECH_NOT port map( A => A(0), Z => n47);
   U48 : GTECH_NOT port map( A => A(1), Z => n48);
   U49 : GTECH_NOT port map( A => A(2), Z => n49);
   U50 : GTECH_NOT port map( A => A(4), Z => n50);
   U51 : GTECH_NOT port map( A => A(13), Z => n51);
   U52 : GTECH_NOT port map( A => A(11), Z => n52);
   U53 : GTECH_NOT port map( A => A(17), Z => n53);
   U54 : GTECH_NOT port map( A => A(15), Z => n54);
   U55 : GTECH_NOT port map( A => A(19), Z => n55);
   U56 : GTECH_NOT port map( A => A(21), Z => n56);
   U57 : GTECH_NAND2 port map( A => n57, B => n58, Z => SUM(9));
   U58 : GTECH_NAND2 port map( A => A(9), B => n59, Z => n58);
   U59 : GTECH_NAND2 port map( A => n5, B => n46, Z => n57);
   U60 : GTECH_NAND2 port map( A => n2, B => n60, Z => SUM(8));
   U61 : GTECH_NAND2 port map( A => A(8), B => n61, Z => n60);
   U62 : GTECH_NOR2 port map( A => n61, B => A(8), Z => n62);
   U63 : GTECH_NAND2 port map( A => A(7), B => n3, Z => n61);
   U64 : GTECH_NAND2 port map( A => n63, B => n64, Z => SUM(7));
   U65 : GTECH_NAND2 port map( A => A(7), B => n65, Z => n64);
   U66 : GTECH_NAND2 port map( A => n3, B => n45, Z => n63);
   U67 : GTECH_NAND2 port map( A => n26, B => n66, Z => SUM(6));
   U68 : GTECH_NAND2 port map( A => A(6), B => n67, Z => n66);
   U69 : GTECH_NOR2 port map( A => n67, B => A(6), Z => n68);
   U70 : GTECH_NAND2 port map( A => A(5), B => n69, Z => n67);
   U71 : GTECH_NOR2 port map( A => n70, B => n71, Z => SUM(5));
   U72 : GTECH_NOR2 port map( A => A(5), B => n69, Z => n71);
   U73 : GTECH_NOR2 port map( A => n72, B => n28, Z => SUM(4));
   U74 : GTECH_NAND2 port map( A => n74, B => n75, Z => n73);
   U75 : GTECH_NOR2 port map( A => n74, B => n75, Z => n72);
   U76 : GTECH_NAND2 port map( A => n76, B => n77, Z => n75);
   U77 : GTECH_NAND2 port map( A => B(4), B => n50, Z => n77);
   U78 : GTECH_NAND2 port map( A => A(4), B => n42, Z => n76);
   U79 : GTECH_NOR2 port map( A => n78, B => n30, Z => SUM(3));
   U80 : GTECH_NAND2 port map( A => n80, B => n81, Z => n79);
   U81 : GTECH_NOR2 port map( A => n80, B => n81, Z => n78);
   U82 : GTECH_NAND2 port map( A => n82, B => n83, Z => n81);
   U83 : GTECH_NAND2 port map( A => B(3), B => n43, Z => n83);
   U84 : GTECH_NAND2 port map( A => A(3), B => n41, Z => n82);
   U85 : GTECH_NOR2 port map( A => n84, B => n32, Z => SUM(2));
   U86 : GTECH_NAND2 port map( A => n86, B => n87, Z => n85);
   U87 : GTECH_NOR2 port map( A => n86, B => n87, Z => n84);
   U88 : GTECH_NAND2 port map( A => n88, B => n89, Z => n87);
   U89 : GTECH_NAND2 port map( A => B(2), B => n49, Z => n89);
   U90 : GTECH_NAND2 port map( A => A(2), B => n40, Z => n88);
   U91 : GTECH_NAND2 port map( A => n24, B => n90, Z => SUM(29));
   U92 : GTECH_NAND2 port map( A => A(29), B => n91, Z => n90);
   U93 : GTECH_NOR2 port map( A => n91, B => A(29), Z => n92);
   U94 : GTECH_NAND2 port map( A => A(28), B => n93, Z => n91);
   U95 : GTECH_NAND2 port map( A => n94, B => n95, Z => SUM(28));
   U96 : GTECH_NAND2 port map( A => A(28), B => n23, Z => n95);
   U97 : GTECH_NAND2 port map( A => n93, B => n35, Z => n94);
   U98 : GTECH_NOR2 port map( A => n36, B => n96, Z => n93);
   U99 : GTECH_NAND2 port map( A => n97, B => n98, Z => SUM(27));
   U100 : GTECH_NAND2 port map( A => A(27), B => n96, Z => n98);
   U101 : GTECH_NAND2 port map( A => n22, B => n36, Z => n97);
   U102 : GTECH_NAND2 port map( A => n99, B => A(26), Z => n96);
   U103 : GTECH_NOR2 port map( A => n100, B => n37, Z => n99);
   U104 : GTECH_NAND2 port map( A => n20, B => n101, Z => SUM(26));
   U105 : GTECH_NAND2 port map( A => A(26), B => n102, Z => n101);
   U106 : GTECH_NOR2 port map( A => n102, B => A(26), Z => n103);
   U107 : GTECH_NAND2 port map( A => A(25), B => n21, Z => n102);
   U108 : GTECH_NAND2 port map( A => n104, B => n105, Z => SUM(25));
   U109 : GTECH_NAND2 port map( A => A(25), B => n100, Z => n105);
   U110 : GTECH_NAND2 port map( A => n21, B => n37, Z => n104);
   U111 : GTECH_NAND2 port map( A => n106, B => A(24), Z => n100);
   U112 : GTECH_NOR2 port map( A => n107, B => n38, Z => n106);
   U113 : GTECH_NAND2 port map( A => n18, B => n108, Z => SUM(24));
   U114 : GTECH_NAND2 port map( A => A(24), B => n109, Z => n108);
   U115 : GTECH_NOR2 port map( A => n109, B => A(24), Z => n110);
   U116 : GTECH_NAND2 port map( A => A(23), B => n19, Z => n109);
   U117 : GTECH_NAND2 port map( A => n111, B => n112, Z => SUM(23));
   U118 : GTECH_NAND2 port map( A => A(23), B => n107, Z => n112);
   U119 : GTECH_NAND2 port map( A => n19, B => n38, Z => n111);
   U120 : GTECH_NAND2 port map( A => n113, B => A(22), Z => n107);
   U121 : GTECH_NOR2 port map( A => n114, B => n56, Z => n113);
   U122 : GTECH_NAND2 port map( A => n16, B => n115, Z => SUM(22));
   U123 : GTECH_NAND2 port map( A => A(22), B => n116, Z => n115);
   U124 : GTECH_NOR2 port map( A => n116, B => A(22), Z => n117);
   U125 : GTECH_NAND2 port map( A => A(21), B => n17, Z => n116);
   U126 : GTECH_NAND2 port map( A => n118, B => n119, Z => SUM(21));
   U127 : GTECH_NAND2 port map( A => A(21), B => n114, Z => n119);
   U128 : GTECH_NAND2 port map( A => n17, B => n56, Z => n118);
   U129 : GTECH_NAND2 port map( A => n120, B => A(20), Z => n114);
   U130 : GTECH_NOR2 port map( A => n121, B => n55, Z => n120);
   U131 : GTECH_NAND2 port map( A => n14, B => n122, Z => SUM(20));
   U132 : GTECH_NAND2 port map( A => A(20), B => n123, Z => n122);
   U133 : GTECH_NOR2 port map( A => n123, B => A(20), Z => n124);
   U134 : GTECH_NAND2 port map( A => A(19), B => n15, Z => n123);
   U135 : GTECH_NAND2 port map( A => n125, B => n34, Z => SUM(1));
   U136 : GTECH_NOR2 port map( A => n127, B => n128, Z => n126);
   U137 : GTECH_NAND2 port map( A => n127, B => n128, Z => n125);
   U138 : GTECH_NAND2 port map( A => n129, B => n130, Z => n127);
   U139 : GTECH_NAND2 port map( A => B(1), B => n48, Z => n130);
   U140 : GTECH_NAND2 port map( A => A(1), B => n39, Z => n129);
   U141 : GTECH_NAND2 port map( A => n131, B => n132, Z => SUM(19));
   U142 : GTECH_NAND2 port map( A => A(19), B => n121, Z => n132);
   U143 : GTECH_NAND2 port map( A => n15, B => n55, Z => n131);
   U144 : GTECH_NAND2 port map( A => n133, B => A(18), Z => n121);
   U145 : GTECH_NOR2 port map( A => n134, B => n53, Z => n133);
   U146 : GTECH_NAND2 port map( A => n12, B => n135, Z => SUM(18));
   U147 : GTECH_NAND2 port map( A => A(18), B => n136, Z => n135);
   U148 : GTECH_NOR2 port map( A => n136, B => A(18), Z => n137);
   U149 : GTECH_NAND2 port map( A => A(17), B => n13, Z => n136);
   U150 : GTECH_NAND2 port map( A => n138, B => n139, Z => SUM(17));
   U151 : GTECH_NAND2 port map( A => A(17), B => n134, Z => n139);
   U152 : GTECH_NAND2 port map( A => n13, B => n53, Z => n138);
   U153 : GTECH_NAND2 port map( A => n140, B => A(16), Z => n134);
   U154 : GTECH_NOR2 port map( A => n141, B => n54, Z => n140);
   U155 : GTECH_NAND2 port map( A => n10, B => n142, Z => SUM(16));
   U156 : GTECH_NAND2 port map( A => A(16), B => n143, Z => n142);
   U157 : GTECH_NOR2 port map( A => n143, B => A(16), Z => n144);
   U158 : GTECH_NAND2 port map( A => A(15), B => n11, Z => n143);
   U159 : GTECH_NAND2 port map( A => n145, B => n146, Z => SUM(15));
   U160 : GTECH_NAND2 port map( A => A(15), B => n141, Z => n146);
   U161 : GTECH_NAND2 port map( A => n11, B => n54, Z => n145);
   U162 : GTECH_NAND2 port map( A => n147, B => A(14), Z => n141);
   U163 : GTECH_NOR2 port map( A => n148, B => n51, Z => n147);
   U164 : GTECH_NAND2 port map( A => n8, B => n149, Z => SUM(14));
   U165 : GTECH_NAND2 port map( A => A(14), B => n150, Z => n149);
   U166 : GTECH_NOR2 port map( A => n150, B => A(14), Z => n151);
   U167 : GTECH_NAND2 port map( A => A(13), B => n9, Z => n150);
   U168 : GTECH_NAND2 port map( A => n152, B => n153, Z => SUM(13));
   U169 : GTECH_NAND2 port map( A => A(13), B => n148, Z => n153);
   U170 : GTECH_NAND2 port map( A => n9, B => n51, Z => n152);
   U171 : GTECH_NAND2 port map( A => n154, B => A(12), Z => n148);
   U172 : GTECH_NOR2 port map( A => n155, B => n52, Z => n154);
   U173 : GTECH_NAND2 port map( A => n6, B => n156, Z => SUM(12));
   U174 : GTECH_NAND2 port map( A => A(12), B => n157, Z => n156);
   U175 : GTECH_NOR2 port map( A => n157, B => A(12), Z => n158);
   U176 : GTECH_NAND2 port map( A => A(11), B => n7, Z => n157);
   U177 : GTECH_NAND2 port map( A => n159, B => n160, Z => SUM(11));
   U178 : GTECH_NAND2 port map( A => A(11), B => n155, Z => n160);
   U179 : GTECH_NAND2 port map( A => n7, B => n52, Z => n159);
   U180 : GTECH_NAND2 port map( A => n161, B => A(10), Z => n155);
   U181 : GTECH_NOR2 port map( A => n46, B => n59, Z => n161);
   U182 : GTECH_NAND2 port map( A => n4, B => n162, Z => SUM(10));
   U183 : GTECH_NAND2 port map( A => A(10), B => n163, Z => n162);
   U184 : GTECH_NOR2 port map( A => n163, B => A(10), Z => n164);
   U185 : GTECH_NAND2 port map( A => n5, B => A(9), Z => n163);
   U186 : GTECH_NAND2 port map( A => n165, B => A(8), Z => n59);
   U187 : GTECH_NOR2 port map( A => n65, B => n45, Z => n165);
   U188 : GTECH_NAND2 port map( A => n70, B => A(6), Z => n65);
   U189 : GTECH_NOR2 port map( A => n25, B => n44, Z => n70);
   U190 : GTECH_NAND2 port map( A => n166, B => n27, Z => n69);
   U191 : GTECH_NOR2 port map( A => n42, B => n168, Z => n167);
   U192 : GTECH_NOR2 port map( A => n74, B => A(4), Z => n168);
   U193 : GTECH_NAND2 port map( A => A(4), B => n74, Z => n166);
   U194 : GTECH_NAND2 port map( A => n169, B => n170, Z => n74);
   U195 : GTECH_NAND2 port map( A => B(3), B => n171, Z => n170);
   U196 : GTECH_NAND2 port map( A => n29, B => n43, Z => n171);
   U197 : GTECH_NAND2 port map( A => A(3), B => n80, Z => n169);
   U198 : GTECH_NAND2 port map( A => n172, B => n31, Z => n80);
   U199 : GTECH_NOR2 port map( A => n40, B => n174, Z => n173);
   U200 : GTECH_NOR2 port map( A => n86, B => A(2), Z => n174);
   U201 : GTECH_NAND2 port map( A => A(2), B => n86, Z => n172);
   U202 : GTECH_NAND2 port map( A => n33, B => n175, Z => n86);
   U203 : GTECH_NAND2 port map( A => B(1), B => n176, Z => n175);
   U204 : GTECH_NAND2 port map( A => n48, B => n128, Z => n176);
   U205 : GTECH_NOR2 port map( A => n48, B => n128, Z => n177);
   U206 : GTECH_NAND2 port map( A => B(0), B => A(0), Z => n128);
   U207 : GTECH_NAND2 port map( A => n178, B => n179, Z => SUM(0));
   U208 : GTECH_NAND2 port map( A => B(0), B => n47, Z => n179);
   U209 : GTECH_NAND2 port map( A => A(0), B => n1, Z => n178);

end SYN_rpl;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_zpu_core.all;

entity zpu_core_DW01_add_8 is

   port( A, B : in std_logic_vector (31 downto 0);  CI : in std_logic;  SUM : 
         out std_logic_vector (31 downto 0);  CO : out std_logic);

end zpu_core_DW01_add_8;

architecture SYN_rpl of zpu_core_DW01_add_8 is

   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   signal n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16
      , n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, 
      n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45
      , n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, 
      n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n73, n74
      , n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86, n87, n88, 
      n89, n90, n91, n92, n93, n94, n95, n96, n97, n98, n99, n100, n101, n102, 
      n103, n104, n105, n106, n107, n108, n109, n110, n111, n112, n113, n114, 
      n115, n116, n117, n118, n119, n120, n121, n122, n123, n124, n125, n126, 
      n127, n128, n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, 
      n139, n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150, 
      n151, n152, n153, n154, n155, n156, n157, n158, n159, n160, n161, n162, 
      n163, n164, n165, n166, n167, n168, n169, n170, n171, n172, n173, n174, 
      n175, n176, n177, n178, n179, n180, n181, n182, n183, n184, n185, n186, 
      n187, n188, n189, n190, n191, n192, n193, n194, n195, n196, n197, n198, 
      n199, n200, n201, n202, n203, n204, n205, n206, n207, n208, n209, n210, 
      n211, n212, n213, n214, n215, n216, n217, n218, n219, n220, n221, n222, 
      n223, n224, n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, 
      n235, n236, n237, n238, n239, n240, n241, n242, n243, n244, n245, n246, 
      n247, n248, n249, n250, n251, n252, n253, n254, n255, n256, n257, n258, 
      n259, n260, n261, n262, n263, n264, n265, n266, n267, n268, n269, n270, 
      n271, n272, n273, n274, n275, n276, n277, n278, n279, n280, n281, n282, 
      n283, n284, n285, n286, n287, n288, n289, n290, n291, n292, n293, n294, 
      n295, n296, n297, n298, n299, n300, n301, n302, n303, n304, n305, n306, 
      n307, n308, n309, n310, n311, n312, n313, n314, n315, n316, n317, n318, 
      n319, n320, n321, n322, n323, n324, n325, n326, n327, n328, n329, n330, 
      n331, n332, n333, n334, n335, n336, n337, n338, n339, n340, n341, n342, 
      n343, n344, n345, n346, n347, n348, n349, n350, n351, n352, n353, n354, 
      n355, n356, n357, n358, n359, n360, n361, n362, n363, n364, n365, n366, 
      n367, n368, n369, n370, n371, n372, n373, n374, n375, n376, n377, n378, 
      n379, n380, n381, n382, n383, n384, n385, n386, n387, n388, n389, n390, 
      n391, n392, n393, n394, n395, n396, n397, n398, n399, n400, n401, n402, 
      n403 : std_logic;

begin
   
   U1 : GTECH_NOT port map( A => n151, Z => n1);
   U2 : GTECH_NOT port map( A => B(5), Z => n2);
   U3 : GTECH_NOT port map( A => n169, Z => n3);
   U4 : GTECH_NOT port map( A => n175, Z => n4);
   U5 : GTECH_NOT port map( A => n179, Z => n5);
   U6 : GTECH_NOT port map( A => n186, Z => n6);
   U7 : GTECH_NOT port map( A => n194, Z => n7);
   U8 : GTECH_NOT port map( A => n201, Z => n8);
   U9 : GTECH_NOT port map( A => n203, Z => n9);
   U10 : GTECH_NOT port map( A => n210, Z => n10);
   U11 : GTECH_NOT port map( A => n212, Z => n11);
   U12 : GTECH_NOT port map( A => n219, Z => n12);
   U13 : GTECH_NOT port map( A => n221, Z => n13);
   U14 : GTECH_NOT port map( A => n228, Z => n14);
   U15 : GTECH_NOT port map( A => n230, Z => n15);
   U16 : GTECH_NOT port map( A => n237, Z => n16);
   U17 : GTECH_NOT port map( A => n239, Z => n17);
   U18 : GTECH_NOT port map( A => n246, Z => n18);
   U19 : GTECH_NOT port map( A => n248, Z => n19);
   U20 : GTECH_NOT port map( A => n255, Z => n20);
   U21 : GTECH_NOT port map( A => n257, Z => n21);
   U22 : GTECH_NOT port map( A => n264, Z => n22);
   U23 : GTECH_NOT port map( A => n266, Z => n23);
   U24 : GTECH_NOT port map( A => n273, Z => n24);
   U25 : GTECH_NOT port map( A => n275, Z => n25);
   U26 : GTECH_NOT port map( A => n282, Z => n26);
   U27 : GTECH_NOT port map( A => n290, Z => n27);
   U28 : GTECH_NOT port map( A => n297, Z => n28);
   U29 : GTECH_NOT port map( A => n299, Z => n29);
   U30 : GTECH_NOT port map( A => n306, Z => n30);
   U31 : GTECH_NOT port map( A => n308, Z => n31);
   U32 : GTECH_NOT port map( A => n315, Z => n32);
   U33 : GTECH_NOT port map( A => n317, Z => n33);
   U34 : GTECH_NOT port map( A => n324, Z => n34);
   U35 : GTECH_NOT port map( A => n326, Z => n35);
   U36 : GTECH_NOT port map( A => n333, Z => n36);
   U37 : GTECH_NOT port map( A => n335, Z => n37);
   U38 : GTECH_NOT port map( A => n342, Z => n38);
   U39 : GTECH_NOT port map( A => n344, Z => n39);
   U40 : GTECH_NOT port map( A => n351, Z => n40);
   U41 : GTECH_NOT port map( A => n353, Z => n41);
   U42 : GTECH_NOT port map( A => n360, Z => n42);
   U43 : GTECH_NOT port map( A => n362, Z => n43);
   U44 : GTECH_NOT port map( A => n369, Z => n44);
   U45 : GTECH_NOT port map( A => n371, Z => n45);
   U46 : GTECH_NOT port map( A => n129, Z => n46);
   U47 : GTECH_NOT port map( A => n134, Z => n47);
   U48 : GTECH_NOT port map( A => n133, Z => n48);
   U49 : GTECH_NOT port map( A => n140, Z => n49);
   U50 : GTECH_NOT port map( A => n139, Z => n50);
   U51 : GTECH_NOT port map( A => n146, Z => n51);
   U52 : GTECH_NOT port map( A => n145, Z => n52);
   U53 : GTECH_NOT port map( A => A(5), Z => n53);
   U54 : GTECH_NOT port map( A => n177, Z => n54);
   U55 : GTECH_NOT port map( A => A(30), Z => n55);
   U56 : GTECH_NOT port map( A => A(29), Z => n56);
   U57 : GTECH_NOT port map( A => B(31), Z => n57);
   U58 : GTECH_NOT port map( A => B(30), Z => n58);
   U59 : GTECH_NOT port map( A => B(29), Z => n59);
   U60 : GTECH_NOT port map( A => B(28), Z => n60);
   U61 : GTECH_NOT port map( A => A(28), Z => n61);
   U62 : GTECH_NOT port map( A => A(27), Z => n62);
   U63 : GTECH_NOT port map( A => A(26), Z => n63);
   U64 : GTECH_NOT port map( A => A(25), Z => n64);
   U65 : GTECH_NOT port map( A => A(24), Z => n65);
   U66 : GTECH_NOT port map( A => A(23), Z => n66);
   U67 : GTECH_NOT port map( A => n403, Z => n67);
   U68 : GTECH_NOT port map( A => A(0), Z => n68);
   U69 : GTECH_NOT port map( A => n152, Z => n69);
   U70 : GTECH_NOT port map( A => n158, Z => n70);
   U71 : GTECH_NOT port map( A => n157, Z => n71);
   U72 : GTECH_NOT port map( A => n164, Z => n72);
   U73 : GTECH_NOT port map( A => n163, Z => n73);
   U74 : GTECH_NOT port map( A => n189, Z => n74);
   U75 : GTECH_NOT port map( A => n188, Z => n75);
   U76 : GTECH_NOT port map( A => n286, Z => n76);
   U77 : GTECH_NOT port map( A => A(7), Z => n77);
   U78 : GTECH_NOT port map( A => A(14), Z => n78);
   U79 : GTECH_NOT port map( A => A(21), Z => n79);
   U80 : GTECH_NOT port map( A => A(22), Z => n80);
   U81 : GTECH_NOT port map( A => n128, Z => n81);
   U82 : GTECH_NOT port map( A => A(9), Z => n82);
   U83 : GTECH_NOT port map( A => A(16), Z => n83);
   U84 : GTECH_NOT port map( A => A(17), Z => n84);
   U85 : GTECH_NOT port map( A => A(18), Z => n85);
   U86 : GTECH_NOT port map( A => A(19), Z => n86);
   U87 : GTECH_NOT port map( A => A(20), Z => n87);
   U88 : GTECH_NOT port map( A => A(11), Z => n88);
   U89 : GTECH_NOT port map( A => A(12), Z => n89);
   U90 : GTECH_NOT port map( A => A(13), Z => n90);
   U91 : GTECH_NOT port map( A => n285, Z => n91);
   U92 : GTECH_NOT port map( A => A(1), Z => n92);
   U93 : GTECH_NOT port map( A => B(1), Z => n93);
   U94 : GTECH_NOT port map( A => B(27), Z => n94);
   U95 : GTECH_NOT port map( A => B(26), Z => n95);
   U96 : GTECH_NOT port map( A => B(25), Z => n96);
   U97 : GTECH_NOT port map( A => B(24), Z => n97);
   U98 : GTECH_NOT port map( A => B(23), Z => n98);
   U99 : GTECH_NOT port map( A => B(22), Z => n99);
   U100 : GTECH_NOT port map( A => B(21), Z => n100);
   U101 : GTECH_NOT port map( A => B(20), Z => n101);
   U102 : GTECH_NOT port map( A => B(19), Z => n102);
   U103 : GTECH_NOT port map( A => B(18), Z => n103);
   U104 : GTECH_NOT port map( A => B(17), Z => n104);
   U105 : GTECH_NOT port map( A => B(16), Z => n105);
   U106 : GTECH_NOT port map( A => B(14), Z => n106);
   U107 : GTECH_NOT port map( A => B(12), Z => n107);
   U108 : GTECH_NOT port map( A => B(11), Z => n108);
   U109 : GTECH_NOT port map( A => B(7), Z => n109);
   U110 : GTECH_NOT port map( A => B(9), Z => n110);
   U111 : GTECH_NOT port map( A => A(2), Z => n111);
   U112 : GTECH_NOT port map( A => B(2), Z => n112);
   U113 : GTECH_NOT port map( A => A(3), Z => n113);
   U114 : GTECH_NOT port map( A => B(3), Z => n114);
   U115 : GTECH_NOT port map( A => A(4), Z => n115);
   U116 : GTECH_NOT port map( A => B(4), Z => n116);
   U117 : GTECH_NOT port map( A => A(6), Z => n117);
   U118 : GTECH_NOT port map( A => B(6), Z => n118);
   U119 : GTECH_NOT port map( A => A(8), Z => n119);
   U120 : GTECH_NOT port map( A => B(8), Z => n120);
   U121 : GTECH_NOT port map( A => A(10), Z => n121);
   U122 : GTECH_NOT port map( A => B(10), Z => n122);
   U123 : GTECH_NOT port map( A => A(15), Z => n123);
   U124 : GTECH_NOT port map( A => B(15), Z => n124);
   U125 : GTECH_NOT port map( A => B(13), Z => n125);
   U126 : GTECH_NOR2 port map( A => n126, B => n127, Z => SUM(9));
   U127 : GTECH_NOR2 port map( A => n46, B => n128, Z => n127);
   U128 : GTECH_NOR2 port map( A => n129, B => n81, Z => n126);
   U129 : GTECH_NOR2 port map( A => n130, B => n131, Z => n128);
   U130 : GTECH_NOR2 port map( A => n110, B => A(9), Z => n131);
   U131 : GTECH_NOR2 port map( A => n82, B => B(9), Z => n130);
   U132 : GTECH_NOR2 port map( A => n132, B => n48, Z => SUM(8));
   U133 : GTECH_NAND2 port map( A => n134, B => n135, Z => n133);
   U134 : GTECH_NOR2 port map( A => n134, B => n135, Z => n132);
   U135 : GTECH_NAND2 port map( A => n136, B => n137, Z => n135);
   U136 : GTECH_NAND2 port map( A => B(8), B => n119, Z => n137);
   U137 : GTECH_NAND2 port map( A => A(8), B => n120, Z => n136);
   U138 : GTECH_NOR2 port map( A => n138, B => n50, Z => SUM(7));
   U139 : GTECH_NAND2 port map( A => n140, B => n141, Z => n139);
   U140 : GTECH_NOR2 port map( A => n140, B => n141, Z => n138);
   U141 : GTECH_NAND2 port map( A => n142, B => n143, Z => n141);
   U142 : GTECH_NAND2 port map( A => B(7), B => n77, Z => n143);
   U143 : GTECH_NAND2 port map( A => A(7), B => n109, Z => n142);
   U144 : GTECH_NOR2 port map( A => n144, B => n52, Z => SUM(6));
   U145 : GTECH_NAND2 port map( A => n146, B => n147, Z => n145);
   U146 : GTECH_NOR2 port map( A => n146, B => n147, Z => n144);
   U147 : GTECH_NAND2 port map( A => n148, B => n149, Z => n147);
   U148 : GTECH_NAND2 port map( A => B(6), B => n117, Z => n149);
   U149 : GTECH_NAND2 port map( A => A(6), B => n118, Z => n148);
   U150 : GTECH_NOR2 port map( A => n150, B => n1, Z => SUM(5));
   U151 : GTECH_NAND2 port map( A => n152, B => n153, Z => n151);
   U152 : GTECH_NOR2 port map( A => n152, B => n153, Z => n150);
   U153 : GTECH_NAND2 port map( A => n154, B => n155, Z => n153);
   U154 : GTECH_NAND2 port map( A => B(5), B => n53, Z => n155);
   U155 : GTECH_NAND2 port map( A => A(5), B => n2, Z => n154);
   U156 : GTECH_NOR2 port map( A => n156, B => n71, Z => SUM(4));
   U157 : GTECH_NAND2 port map( A => n158, B => n159, Z => n157);
   U158 : GTECH_NOR2 port map( A => n158, B => n159, Z => n156);
   U159 : GTECH_NAND2 port map( A => n160, B => n161, Z => n159);
   U160 : GTECH_NAND2 port map( A => B(4), B => n115, Z => n161);
   U161 : GTECH_NAND2 port map( A => A(4), B => n116, Z => n160);
   U162 : GTECH_NOR2 port map( A => n162, B => n73, Z => SUM(3));
   U163 : GTECH_NAND2 port map( A => n164, B => n165, Z => n163);
   U164 : GTECH_NOR2 port map( A => n164, B => n165, Z => n162);
   U165 : GTECH_NAND2 port map( A => n166, B => n167, Z => n165);
   U166 : GTECH_NAND2 port map( A => B(3), B => n113, Z => n167);
   U167 : GTECH_NAND2 port map( A => A(3), B => n114, Z => n166);
   U168 : GTECH_NOR2 port map( A => n168, B => n3, Z => SUM(31));
   U169 : GTECH_NAND2 port map( A => n170, B => n171, Z => n169);
   U170 : GTECH_NOR2 port map( A => n171, B => n170, Z => n168);
   U171 : GTECH_NAND2 port map( A => n172, B => n173, Z => n170);
   U172 : GTECH_NAND2 port map( A => B(30), B => n174, Z => n173);
   U173 : GTECH_NAND2 port map( A => n4, B => n55, Z => n174);
   U174 : GTECH_NAND2 port map( A => A(30), B => n175, Z => n172);
   U175 : GTECH_NAND2 port map( A => n176, B => n54, Z => n171);
   U176 : GTECH_NOR2 port map( A => n57, B => A(31), Z => n177);
   U177 : GTECH_NAND2 port map( A => A(31), B => n57, Z => n176);
   U178 : GTECH_NOR2 port map( A => n178, B => n5, Z => SUM(30));
   U179 : GTECH_NAND2 port map( A => n175, B => n180, Z => n179);
   U180 : GTECH_NOR2 port map( A => n175, B => n180, Z => n178);
   U181 : GTECH_NAND2 port map( A => n181, B => n182, Z => n180);
   U182 : GTECH_NAND2 port map( A => B(30), B => n55, Z => n182);
   U183 : GTECH_NAND2 port map( A => A(30), B => n58, Z => n181);
   U184 : GTECH_NAND2 port map( A => n183, B => n184, Z => n175);
   U185 : GTECH_NAND2 port map( A => B(29), B => n185, Z => n184);
   U186 : GTECH_NAND2 port map( A => n6, B => n56, Z => n185);
   U187 : GTECH_NAND2 port map( A => A(29), B => n186, Z => n183);
   U188 : GTECH_NOR2 port map( A => n187, B => n75, Z => SUM(2));
   U189 : GTECH_NAND2 port map( A => n189, B => n190, Z => n188);
   U190 : GTECH_NOR2 port map( A => n189, B => n190, Z => n187);
   U191 : GTECH_NAND2 port map( A => n191, B => n192, Z => n190);
   U192 : GTECH_NAND2 port map( A => B(2), B => n111, Z => n192);
   U193 : GTECH_NAND2 port map( A => A(2), B => n112, Z => n191);
   U194 : GTECH_NOR2 port map( A => n193, B => n7, Z => SUM(29));
   U195 : GTECH_NAND2 port map( A => n186, B => n195, Z => n194);
   U196 : GTECH_NOR2 port map( A => n186, B => n195, Z => n193);
   U197 : GTECH_NAND2 port map( A => n196, B => n197, Z => n195);
   U198 : GTECH_NAND2 port map( A => B(29), B => n56, Z => n197);
   U199 : GTECH_NAND2 port map( A => A(29), B => n59, Z => n196);
   U200 : GTECH_NAND2 port map( A => n198, B => n199, Z => n186);
   U201 : GTECH_NAND2 port map( A => B(28), B => n200, Z => n199);
   U202 : GTECH_NAND2 port map( A => n8, B => n61, Z => n200);
   U203 : GTECH_NAND2 port map( A => A(28), B => n201, Z => n198);
   U204 : GTECH_NOR2 port map( A => n202, B => n9, Z => SUM(28));
   U205 : GTECH_NAND2 port map( A => n201, B => n204, Z => n203);
   U206 : GTECH_NOR2 port map( A => n201, B => n204, Z => n202);
   U207 : GTECH_NAND2 port map( A => n205, B => n206, Z => n204);
   U208 : GTECH_NAND2 port map( A => B(28), B => n61, Z => n206);
   U209 : GTECH_NAND2 port map( A => A(28), B => n60, Z => n205);
   U210 : GTECH_NAND2 port map( A => n207, B => n208, Z => n201);
   U211 : GTECH_NAND2 port map( A => B(27), B => n209, Z => n208);
   U212 : GTECH_NAND2 port map( A => n10, B => n62, Z => n209);
   U213 : GTECH_NAND2 port map( A => A(27), B => n210, Z => n207);
   U214 : GTECH_NOR2 port map( A => n211, B => n11, Z => SUM(27));
   U215 : GTECH_NAND2 port map( A => n210, B => n213, Z => n212);
   U216 : GTECH_NOR2 port map( A => n210, B => n213, Z => n211);
   U217 : GTECH_NAND2 port map( A => n214, B => n215, Z => n213);
   U218 : GTECH_NAND2 port map( A => B(27), B => n62, Z => n215);
   U219 : GTECH_NAND2 port map( A => A(27), B => n94, Z => n214);
   U220 : GTECH_NAND2 port map( A => n216, B => n217, Z => n210);
   U221 : GTECH_NAND2 port map( A => B(26), B => n218, Z => n217);
   U222 : GTECH_NAND2 port map( A => n12, B => n63, Z => n218);
   U223 : GTECH_NAND2 port map( A => A(26), B => n219, Z => n216);
   U224 : GTECH_NOR2 port map( A => n220, B => n13, Z => SUM(26));
   U225 : GTECH_NAND2 port map( A => n219, B => n222, Z => n221);
   U226 : GTECH_NOR2 port map( A => n219, B => n222, Z => n220);
   U227 : GTECH_NAND2 port map( A => n223, B => n224, Z => n222);
   U228 : GTECH_NAND2 port map( A => B(26), B => n63, Z => n224);
   U229 : GTECH_NAND2 port map( A => A(26), B => n95, Z => n223);
   U230 : GTECH_NAND2 port map( A => n225, B => n226, Z => n219);
   U231 : GTECH_NAND2 port map( A => B(25), B => n227, Z => n226);
   U232 : GTECH_NAND2 port map( A => n14, B => n64, Z => n227);
   U233 : GTECH_NAND2 port map( A => A(25), B => n228, Z => n225);
   U234 : GTECH_NOR2 port map( A => n229, B => n15, Z => SUM(25));
   U235 : GTECH_NAND2 port map( A => n228, B => n231, Z => n230);
   U236 : GTECH_NOR2 port map( A => n228, B => n231, Z => n229);
   U237 : GTECH_NAND2 port map( A => n232, B => n233, Z => n231);
   U238 : GTECH_NAND2 port map( A => B(25), B => n64, Z => n233);
   U239 : GTECH_NAND2 port map( A => A(25), B => n96, Z => n232);
   U240 : GTECH_NAND2 port map( A => n234, B => n235, Z => n228);
   U241 : GTECH_NAND2 port map( A => B(24), B => n236, Z => n235);
   U242 : GTECH_NAND2 port map( A => n16, B => n65, Z => n236);
   U243 : GTECH_NAND2 port map( A => A(24), B => n237, Z => n234);
   U244 : GTECH_NOR2 port map( A => n238, B => n17, Z => SUM(24));
   U245 : GTECH_NAND2 port map( A => n237, B => n240, Z => n239);
   U246 : GTECH_NOR2 port map( A => n237, B => n240, Z => n238);
   U247 : GTECH_NAND2 port map( A => n241, B => n242, Z => n240);
   U248 : GTECH_NAND2 port map( A => B(24), B => n65, Z => n242);
   U249 : GTECH_NAND2 port map( A => A(24), B => n97, Z => n241);
   U250 : GTECH_NAND2 port map( A => n243, B => n244, Z => n237);
   U251 : GTECH_NAND2 port map( A => B(23), B => n245, Z => n244);
   U252 : GTECH_NAND2 port map( A => n18, B => n66, Z => n245);
   U253 : GTECH_NAND2 port map( A => A(23), B => n246, Z => n243);
   U254 : GTECH_NOR2 port map( A => n247, B => n19, Z => SUM(23));
   U255 : GTECH_NAND2 port map( A => n246, B => n249, Z => n248);
   U256 : GTECH_NOR2 port map( A => n246, B => n249, Z => n247);
   U257 : GTECH_NAND2 port map( A => n250, B => n251, Z => n249);
   U258 : GTECH_NAND2 port map( A => B(23), B => n66, Z => n251);
   U259 : GTECH_NAND2 port map( A => A(23), B => n98, Z => n250);
   U260 : GTECH_NAND2 port map( A => n252, B => n253, Z => n246);
   U261 : GTECH_NAND2 port map( A => B(22), B => n254, Z => n253);
   U262 : GTECH_NAND2 port map( A => n20, B => n80, Z => n254);
   U263 : GTECH_NAND2 port map( A => A(22), B => n255, Z => n252);
   U264 : GTECH_NOR2 port map( A => n256, B => n21, Z => SUM(22));
   U265 : GTECH_NAND2 port map( A => n255, B => n258, Z => n257);
   U266 : GTECH_NOR2 port map( A => n255, B => n258, Z => n256);
   U267 : GTECH_NAND2 port map( A => n259, B => n260, Z => n258);
   U268 : GTECH_NAND2 port map( A => B(22), B => n80, Z => n260);
   U269 : GTECH_NAND2 port map( A => A(22), B => n99, Z => n259);
   U270 : GTECH_NAND2 port map( A => n261, B => n262, Z => n255);
   U271 : GTECH_NAND2 port map( A => B(21), B => n263, Z => n262);
   U272 : GTECH_NAND2 port map( A => n22, B => n79, Z => n263);
   U273 : GTECH_NAND2 port map( A => A(21), B => n264, Z => n261);
   U274 : GTECH_NOR2 port map( A => n265, B => n23, Z => SUM(21));
   U275 : GTECH_NAND2 port map( A => n264, B => n267, Z => n266);
   U276 : GTECH_NOR2 port map( A => n264, B => n267, Z => n265);
   U277 : GTECH_NAND2 port map( A => n268, B => n269, Z => n267);
   U278 : GTECH_NAND2 port map( A => B(21), B => n79, Z => n269);
   U279 : GTECH_NAND2 port map( A => A(21), B => n100, Z => n268);
   U280 : GTECH_NAND2 port map( A => n270, B => n271, Z => n264);
   U281 : GTECH_NAND2 port map( A => B(20), B => n272, Z => n271);
   U282 : GTECH_NAND2 port map( A => n24, B => n87, Z => n272);
   U283 : GTECH_NAND2 port map( A => A(20), B => n273, Z => n270);
   U284 : GTECH_NOR2 port map( A => n274, B => n25, Z => SUM(20));
   U285 : GTECH_NAND2 port map( A => n273, B => n276, Z => n275);
   U286 : GTECH_NOR2 port map( A => n273, B => n276, Z => n274);
   U287 : GTECH_NAND2 port map( A => n277, B => n278, Z => n276);
   U288 : GTECH_NAND2 port map( A => B(20), B => n87, Z => n278);
   U289 : GTECH_NAND2 port map( A => A(20), B => n101, Z => n277);
   U290 : GTECH_NAND2 port map( A => n279, B => n280, Z => n273);
   U291 : GTECH_NAND2 port map( A => B(19), B => n281, Z => n280);
   U292 : GTECH_NAND2 port map( A => n26, B => n86, Z => n281);
   U293 : GTECH_NAND2 port map( A => A(19), B => n282, Z => n279);
   U294 : GTECH_NAND2 port map( A => n283, B => n284, Z => SUM(1));
   U295 : GTECH_NAND2 port map( A => n285, B => n76, Z => n284);
   U296 : GTECH_NAND2 port map( A => n91, B => n286, Z => n283);
   U297 : GTECH_NOR2 port map( A => n287, B => n288, Z => n285);
   U298 : GTECH_NOR2 port map( A => n93, B => A(1), Z => n288);
   U299 : GTECH_NOR2 port map( A => n92, B => B(1), Z => n287);
   U300 : GTECH_NOR2 port map( A => n289, B => n27, Z => SUM(19));
   U301 : GTECH_NAND2 port map( A => n282, B => n291, Z => n290);
   U302 : GTECH_NOR2 port map( A => n282, B => n291, Z => n289);
   U303 : GTECH_NAND2 port map( A => n292, B => n293, Z => n291);
   U304 : GTECH_NAND2 port map( A => B(19), B => n86, Z => n293);
   U305 : GTECH_NAND2 port map( A => A(19), B => n102, Z => n292);
   U306 : GTECH_NAND2 port map( A => n294, B => n295, Z => n282);
   U307 : GTECH_NAND2 port map( A => B(18), B => n296, Z => n295);
   U308 : GTECH_NAND2 port map( A => n28, B => n85, Z => n296);
   U309 : GTECH_NAND2 port map( A => A(18), B => n297, Z => n294);
   U310 : GTECH_NOR2 port map( A => n298, B => n29, Z => SUM(18));
   U311 : GTECH_NAND2 port map( A => n297, B => n300, Z => n299);
   U312 : GTECH_NOR2 port map( A => n297, B => n300, Z => n298);
   U313 : GTECH_NAND2 port map( A => n301, B => n302, Z => n300);
   U314 : GTECH_NAND2 port map( A => B(18), B => n85, Z => n302);
   U315 : GTECH_NAND2 port map( A => A(18), B => n103, Z => n301);
   U316 : GTECH_NAND2 port map( A => n303, B => n304, Z => n297);
   U317 : GTECH_NAND2 port map( A => B(17), B => n305, Z => n304);
   U318 : GTECH_NAND2 port map( A => n30, B => n84, Z => n305);
   U319 : GTECH_NAND2 port map( A => A(17), B => n306, Z => n303);
   U320 : GTECH_NOR2 port map( A => n307, B => n31, Z => SUM(17));
   U321 : GTECH_NAND2 port map( A => n306, B => n309, Z => n308);
   U322 : GTECH_NOR2 port map( A => n306, B => n309, Z => n307);
   U323 : GTECH_NAND2 port map( A => n310, B => n311, Z => n309);
   U324 : GTECH_NAND2 port map( A => B(17), B => n84, Z => n311);
   U325 : GTECH_NAND2 port map( A => A(17), B => n104, Z => n310);
   U326 : GTECH_NAND2 port map( A => n312, B => n313, Z => n306);
   U327 : GTECH_NAND2 port map( A => B(16), B => n314, Z => n313);
   U328 : GTECH_NAND2 port map( A => n32, B => n83, Z => n314);
   U329 : GTECH_NAND2 port map( A => A(16), B => n315, Z => n312);
   U330 : GTECH_NOR2 port map( A => n316, B => n33, Z => SUM(16));
   U331 : GTECH_NAND2 port map( A => n315, B => n318, Z => n317);
   U332 : GTECH_NOR2 port map( A => n315, B => n318, Z => n316);
   U333 : GTECH_NAND2 port map( A => n319, B => n320, Z => n318);
   U334 : GTECH_NAND2 port map( A => B(16), B => n83, Z => n320);
   U335 : GTECH_NAND2 port map( A => A(16), B => n105, Z => n319);
   U336 : GTECH_NAND2 port map( A => n321, B => n322, Z => n315);
   U337 : GTECH_NAND2 port map( A => B(15), B => n323, Z => n322);
   U338 : GTECH_NAND2 port map( A => n34, B => n123, Z => n323);
   U339 : GTECH_NAND2 port map( A => A(15), B => n324, Z => n321);
   U340 : GTECH_NOR2 port map( A => n325, B => n35, Z => SUM(15));
   U341 : GTECH_NAND2 port map( A => n324, B => n327, Z => n326);
   U342 : GTECH_NOR2 port map( A => n324, B => n327, Z => n325);
   U343 : GTECH_NAND2 port map( A => n328, B => n329, Z => n327);
   U344 : GTECH_NAND2 port map( A => B(15), B => n123, Z => n329);
   U345 : GTECH_NAND2 port map( A => A(15), B => n124, Z => n328);
   U346 : GTECH_NAND2 port map( A => n330, B => n331, Z => n324);
   U347 : GTECH_NAND2 port map( A => B(14), B => n332, Z => n331);
   U348 : GTECH_NAND2 port map( A => n36, B => n78, Z => n332);
   U349 : GTECH_NAND2 port map( A => A(14), B => n333, Z => n330);
   U350 : GTECH_NOR2 port map( A => n334, B => n37, Z => SUM(14));
   U351 : GTECH_NAND2 port map( A => n333, B => n336, Z => n335);
   U352 : GTECH_NOR2 port map( A => n333, B => n336, Z => n334);
   U353 : GTECH_NAND2 port map( A => n337, B => n338, Z => n336);
   U354 : GTECH_NAND2 port map( A => B(14), B => n78, Z => n338);
   U355 : GTECH_NAND2 port map( A => A(14), B => n106, Z => n337);
   U356 : GTECH_NAND2 port map( A => n339, B => n340, Z => n333);
   U357 : GTECH_NAND2 port map( A => B(13), B => n341, Z => n340);
   U358 : GTECH_NAND2 port map( A => n38, B => n90, Z => n341);
   U359 : GTECH_NAND2 port map( A => A(13), B => n342, Z => n339);
   U360 : GTECH_NOR2 port map( A => n343, B => n39, Z => SUM(13));
   U361 : GTECH_NAND2 port map( A => n342, B => n345, Z => n344);
   U362 : GTECH_NOR2 port map( A => n342, B => n345, Z => n343);
   U363 : GTECH_NAND2 port map( A => n346, B => n347, Z => n345);
   U364 : GTECH_NAND2 port map( A => B(13), B => n90, Z => n347);
   U365 : GTECH_NAND2 port map( A => A(13), B => n125, Z => n346);
   U366 : GTECH_NAND2 port map( A => n348, B => n349, Z => n342);
   U367 : GTECH_NAND2 port map( A => B(12), B => n350, Z => n349);
   U368 : GTECH_NAND2 port map( A => n40, B => n89, Z => n350);
   U369 : GTECH_NAND2 port map( A => A(12), B => n351, Z => n348);
   U370 : GTECH_NOR2 port map( A => n352, B => n41, Z => SUM(12));
   U371 : GTECH_NAND2 port map( A => n351, B => n354, Z => n353);
   U372 : GTECH_NOR2 port map( A => n351, B => n354, Z => n352);
   U373 : GTECH_NAND2 port map( A => n355, B => n356, Z => n354);
   U374 : GTECH_NAND2 port map( A => B(12), B => n89, Z => n356);
   U375 : GTECH_NAND2 port map( A => A(12), B => n107, Z => n355);
   U376 : GTECH_NAND2 port map( A => n357, B => n358, Z => n351);
   U377 : GTECH_NAND2 port map( A => B(11), B => n359, Z => n358);
   U378 : GTECH_NAND2 port map( A => n42, B => n88, Z => n359);
   U379 : GTECH_NAND2 port map( A => A(11), B => n360, Z => n357);
   U380 : GTECH_NOR2 port map( A => n361, B => n43, Z => SUM(11));
   U381 : GTECH_NAND2 port map( A => n360, B => n363, Z => n362);
   U382 : GTECH_NOR2 port map( A => n360, B => n363, Z => n361);
   U383 : GTECH_NAND2 port map( A => n364, B => n365, Z => n363);
   U384 : GTECH_NAND2 port map( A => B(11), B => n88, Z => n365);
   U385 : GTECH_NAND2 port map( A => A(11), B => n108, Z => n364);
   U386 : GTECH_NAND2 port map( A => n366, B => n367, Z => n360);
   U387 : GTECH_NAND2 port map( A => B(10), B => n368, Z => n367);
   U388 : GTECH_NAND2 port map( A => n44, B => n121, Z => n368);
   U389 : GTECH_NAND2 port map( A => A(10), B => n369, Z => n366);
   U390 : GTECH_NOR2 port map( A => n370, B => n45, Z => SUM(10));
   U391 : GTECH_NAND2 port map( A => n369, B => n372, Z => n371);
   U392 : GTECH_NOR2 port map( A => n369, B => n372, Z => n370);
   U393 : GTECH_NAND2 port map( A => n373, B => n374, Z => n372);
   U394 : GTECH_NAND2 port map( A => B(10), B => n121, Z => n374);
   U395 : GTECH_NAND2 port map( A => A(10), B => n122, Z => n373);
   U396 : GTECH_NAND2 port map( A => n375, B => n376, Z => n369);
   U397 : GTECH_NAND2 port map( A => B(9), B => n377, Z => n376);
   U398 : GTECH_NAND2 port map( A => n46, B => n82, Z => n377);
   U399 : GTECH_NAND2 port map( A => A(9), B => n129, Z => n375);
   U400 : GTECH_NAND2 port map( A => n378, B => n379, Z => n129);
   U401 : GTECH_NAND2 port map( A => B(8), B => n380, Z => n379);
   U402 : GTECH_NAND2 port map( A => n47, B => n119, Z => n380);
   U403 : GTECH_NAND2 port map( A => A(8), B => n134, Z => n378);
   U404 : GTECH_NAND2 port map( A => n381, B => n382, Z => n134);
   U405 : GTECH_NAND2 port map( A => B(7), B => n383, Z => n382);
   U406 : GTECH_NAND2 port map( A => n49, B => n77, Z => n383);
   U407 : GTECH_NAND2 port map( A => A(7), B => n140, Z => n381);
   U408 : GTECH_NAND2 port map( A => n384, B => n385, Z => n140);
   U409 : GTECH_NAND2 port map( A => B(6), B => n386, Z => n385);
   U410 : GTECH_NAND2 port map( A => n51, B => n117, Z => n386);
   U411 : GTECH_NAND2 port map( A => A(6), B => n146, Z => n384);
   U412 : GTECH_NAND2 port map( A => n387, B => n388, Z => n146);
   U413 : GTECH_NAND2 port map( A => B(5), B => n389, Z => n388);
   U414 : GTECH_NAND2 port map( A => n69, B => n53, Z => n389);
   U415 : GTECH_NAND2 port map( A => A(5), B => n152, Z => n387);
   U416 : GTECH_NAND2 port map( A => n390, B => n391, Z => n152);
   U417 : GTECH_NAND2 port map( A => B(4), B => n392, Z => n391);
   U418 : GTECH_NAND2 port map( A => n70, B => n115, Z => n392);
   U419 : GTECH_NAND2 port map( A => A(4), B => n158, Z => n390);
   U420 : GTECH_NAND2 port map( A => n393, B => n394, Z => n158);
   U421 : GTECH_NAND2 port map( A => B(3), B => n395, Z => n394);
   U422 : GTECH_NAND2 port map( A => n72, B => n113, Z => n395);
   U423 : GTECH_NAND2 port map( A => A(3), B => n164, Z => n393);
   U424 : GTECH_NAND2 port map( A => n396, B => n397, Z => n164);
   U425 : GTECH_NAND2 port map( A => B(2), B => n398, Z => n397);
   U426 : GTECH_NAND2 port map( A => n74, B => n111, Z => n398);
   U427 : GTECH_NAND2 port map( A => A(2), B => n189, Z => n396);
   U428 : GTECH_NAND2 port map( A => n399, B => n400, Z => n189);
   U429 : GTECH_NAND2 port map( A => B(1), B => n401, Z => n400);
   U430 : GTECH_NAND2 port map( A => n92, B => n286, Z => n401);
   U431 : GTECH_NAND2 port map( A => A(1), B => n76, Z => n399);
   U432 : GTECH_NAND2 port map( A => B(0), B => A(0), Z => n286);
   U433 : GTECH_NAND2 port map( A => n67, B => n402, Z => SUM(0));
   U434 : GTECH_NAND2 port map( A => B(0), B => n68, Z => n402);
   U435 : GTECH_NOR2 port map( A => n68, B => B(0), Z => n403);

end SYN_rpl;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_zpu_core.all;

entity zpu_core_DW01_cmp6_1 is

   port( A, B : in std_logic_vector (31 downto 0);  TC : in std_logic;  LT, GT,
         EQ, LE, GE, NE : out std_logic);

end zpu_core_DW01_cmp6_1;

architecture SYN_rpl of zpu_core_DW01_cmp6_1 is

   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   signal LT_port, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n14, n15,
      n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30
      , n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, 
      n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59
      , n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n73, 
      n74, n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86, n87, n88
      , n89, n90, n91, n92, n93, n94, n95, n96, n97, n98, n99, n100, n101, n102
      , n103, n104, n105, n106, n107, n108, n109, n110, n111, n112, n113, n114,
      n115, n116, n117, n118, n119, n120, n121, n122, n123, n124, n125, n126, 
      n127, n128, n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, 
      n139, n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150, 
      n151, n152, n153, n154, n155, n156, n157, n158, n159, n160, n161, n162, 
      n163, n164, n165, n166, n167, n168, n169, n170, n171, n172, n173, n174, 
      n175, n176, n177, n178, n179, n180, n181, n182, n183, n184, n185, n186, 
      n187, n188, n189, n190, n191, n192, n193, n194, n195, n196, n197, n198, 
      n199, n200, n201, n202, n203, n204, n205, n206, n207, n208, n209, n210, 
      n211, n212, n213, n214, n215, n216, n217, n218, n219, n220, n221, n222, 
      n223, n224, n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, 
      n235, n236, n237, n238, n239, n240, n241, n242, n243, n244, n245, n246, 
      n247, n248, n249, n250, n251, n252, n253, n254, n255, n256, n257, n258, 
      n259, n260, n261, n262, n263, n264, n265, n266, n267, n268, n269, n270, 
      n271, n272, n273, n274, n275, n276, n277, n278, n279, n280, n281, n282, 
      n283, n284, n285 : std_logic;

begin
   LT <= LT_port;
   
   U1 : GTECH_NOT port map( A => n208, Z => n1);
   U2 : GTECH_NOT port map( A => n213, Z => n2);
   U3 : GTECH_NOT port map( A => n219, Z => n3);
   U4 : GTECH_NOT port map( A => n224, Z => n4);
   U5 : GTECH_NOT port map( A => n230, Z => n5);
   U6 : GTECH_NOT port map( A => n235, Z => n6);
   U7 : GTECH_NOT port map( A => n241, Z => n7);
   U8 : GTECH_NOT port map( A => n246, Z => n8);
   U9 : GTECH_NOT port map( A => n252, Z => n9);
   U10 : GTECH_NOT port map( A => n257, Z => n10);
   U11 : GTECH_NOT port map( A => n263, Z => n11);
   U12 : GTECH_NOT port map( A => n268, Z => n12);
   U13 : GTECH_NOT port map( A => n80, Z => LE);
   U14 : GTECH_NOT port map( A => n171, Z => n14);
   U15 : GTECH_NOT port map( A => B(5), Z => n15);
   U16 : GTECH_NOT port map( A => A(31), Z => n16);
   U17 : GTECH_NOT port map( A => A(30), Z => n17);
   U18 : GTECH_NOT port map( A => n93, Z => n18);
   U19 : GTECH_NOT port map( A => B(29), Z => n19);
   U20 : GTECH_NOT port map( A => n210, Z => n20);
   U21 : GTECH_NOT port map( A => A(28), Z => n21);
   U22 : GTECH_NOT port map( A => n197, Z => n22);
   U23 : GTECH_NOT port map( A => A(27), Z => n23);
   U24 : GTECH_NOT port map( A => n215, Z => n24);
   U25 : GTECH_NOT port map( A => A(26), Z => n25);
   U26 : GTECH_NOT port map( A => n106, Z => n26);
   U27 : GTECH_NOT port map( A => B(25), Z => n27);
   U28 : GTECH_NOT port map( A => n221, Z => n28);
   U29 : GTECH_NOT port map( A => A(24), Z => n29);
   U30 : GTECH_NOT port map( A => n195, Z => n30);
   U31 : GTECH_NOT port map( A => A(23), Z => n31);
   U32 : GTECH_NOT port map( A => n173, Z => n32);
   U33 : GTECH_NOT port map( A => n181, Z => n33);
   U34 : GTECH_NOT port map( A => n274, Z => n34);
   U35 : GTECH_NOT port map( A => n277, Z => n35);
   U36 : GTECH_NOT port map( A => n283, Z => n36);
   U37 : GTECH_NOT port map( A => A(0), Z => n37);
   U38 : GTECH_NOT port map( A => n187, Z => n38);
   U39 : GTECH_NOT port map( A => A(7), Z => n39);
   U40 : GTECH_NOT port map( A => n248, Z => n40);
   U41 : GTECH_NOT port map( A => A(14), Z => n41);
   U42 : GTECH_NOT port map( A => n119, Z => n42);
   U43 : GTECH_NOT port map( A => n226, Z => n43);
   U44 : GTECH_NOT port map( A => A(22), Z => n44);
   U45 : GTECH_NOT port map( A => n158, Z => n45);
   U46 : GTECH_NOT port map( A => n243, Z => n46);
   U47 : GTECH_NOT port map( A => A(16), Z => n47);
   U48 : GTECH_NOT port map( A => n132, Z => n48);
   U49 : GTECH_NOT port map( A => n237, Z => n49);
   U50 : GTECH_NOT port map( A => A(18), Z => n50);
   U51 : GTECH_NOT port map( A => n193, Z => n51);
   U52 : GTECH_NOT port map( A => A(19), Z => n52);
   U53 : GTECH_NOT port map( A => n232, Z => n53);
   U54 : GTECH_NOT port map( A => A(20), Z => n54);
   U55 : GTECH_NOT port map( A => n189, Z => n55);
   U56 : GTECH_NOT port map( A => A(11), Z => n56);
   U57 : GTECH_NOT port map( A => n254, Z => n57);
   U58 : GTECH_NOT port map( A => A(12), Z => n58);
   U59 : GTECH_NOT port map( A => n145, Z => n59);
   U60 : GTECH_NOT port map( A => B(31), Z => n60);
   U61 : GTECH_NOT port map( A => B(30), Z => n61);
   U62 : GTECH_NOT port map( A => n179, Z => n62);
   U63 : GTECH_NOT port map( A => n281, Z => n63);
   U64 : GTECH_NOT port map( A => B(2), Z => n64);
   U65 : GTECH_NOT port map( A => B(3), Z => n65);
   U66 : GTECH_NOT port map( A => n276, Z => n66);
   U67 : GTECH_NOT port map( A => A(4), Z => n67);
   U68 : GTECH_NOT port map( A => n270, Z => n68);
   U69 : GTECH_NOT port map( A => A(6), Z => n69);
   U70 : GTECH_NOT port map( A => n265, Z => n70);
   U71 : GTECH_NOT port map( A => A(8), Z => n71);
   U72 : GTECH_NOT port map( A => n259, Z => n72);
   U73 : GTECH_NOT port map( A => A(10), Z => n73);
   U74 : GTECH_NOT port map( A => n191, Z => n74);
   U75 : GTECH_NOT port map( A => A(15), Z => n75);
   U76 : GTECH_NOT port map( A => B(13), Z => n76);
   U77 : GTECH_NOT port map( A => B(17), Z => n77);
   U78 : GTECH_NOT port map( A => B(9), Z => n78);
   U79 : GTECH_NOT port map( A => B(21), Z => n79);
   U80 : GTECH_NOR2 port map( A => LT_port, B => n80, Z => EQ);
   U81 : GTECH_NAND2 port map( A => n81, B => n82, Z => n80);
   U82 : GTECH_NAND2 port map( A => n83, B => n84, Z => n82);
   U83 : GTECH_NAND2 port map( A => n85, B => n86, Z => n84);
   U84 : GTECH_NAND2 port map( A => A(30), B => n61, Z => n86);
   U85 : GTECH_NAND2 port map( A => n87, B => n88, Z => n85);
   U86 : GTECH_NOR2 port map( A => n89, B => n90, Z => n87);
   U87 : GTECH_NOR2 port map( A => n91, B => n92, Z => n90);
   U88 : GTECH_NAND2 port map( A => n93, B => n20, Z => n92);
   U89 : GTECH_NOR2 port map( A => n94, B => n95, Z => n91);
   U90 : GTECH_NAND2 port map( A => n96, B => n97, Z => n95);
   U91 : GTECH_NAND2 port map( A => n98, B => n99, Z => n96);
   U92 : GTECH_NAND2 port map( A => n100, B => n101, Z => n99);
   U93 : GTECH_NOR2 port map( A => n102, B => n103, Z => n100);
   U94 : GTECH_NOR2 port map( A => n104, B => n105, Z => n103);
   U95 : GTECH_NAND2 port map( A => n106, B => n28, Z => n105);
   U96 : GTECH_NOR2 port map( A => n107, B => n108, Z => n104);
   U97 : GTECH_NAND2 port map( A => n109, B => n110, Z => n108);
   U98 : GTECH_NAND2 port map( A => n111, B => n112, Z => n109);
   U99 : GTECH_NAND2 port map( A => n113, B => n114, Z => n112);
   U100 : GTECH_NOR2 port map( A => n115, B => n116, Z => n113);
   U101 : GTECH_NOR2 port map( A => n117, B => n118, Z => n116);
   U102 : GTECH_NAND2 port map( A => n119, B => n53, Z => n118);
   U103 : GTECH_NOR2 port map( A => n120, B => n121, Z => n117);
   U104 : GTECH_NAND2 port map( A => n122, B => n123, Z => n121);
   U105 : GTECH_NAND2 port map( A => n124, B => n125, Z => n122);
   U106 : GTECH_NAND2 port map( A => n126, B => n127, Z => n125);
   U107 : GTECH_NOR2 port map( A => n128, B => n129, Z => n126);
   U108 : GTECH_NOR2 port map( A => n130, B => n131, Z => n129);
   U109 : GTECH_NAND2 port map( A => n132, B => n46, Z => n131);
   U110 : GTECH_NOR2 port map( A => n133, B => n134, Z => n130);
   U111 : GTECH_NAND2 port map( A => n135, B => n136, Z => n134);
   U112 : GTECH_NAND2 port map( A => n137, B => n138, Z => n135);
   U113 : GTECH_NAND2 port map( A => n139, B => n140, Z => n138);
   U114 : GTECH_NOR2 port map( A => n141, B => n142, Z => n139);
   U115 : GTECH_NOR2 port map( A => n143, B => n144, Z => n142);
   U116 : GTECH_NAND2 port map( A => n145, B => n57, Z => n144);
   U117 : GTECH_NOR2 port map( A => n146, B => n147, Z => n143);
   U118 : GTECH_NAND2 port map( A => n148, B => n149, Z => n147);
   U119 : GTECH_NAND2 port map( A => n150, B => n151, Z => n148);
   U120 : GTECH_NAND2 port map( A => n152, B => n153, Z => n151);
   U121 : GTECH_NOR2 port map( A => n154, B => n155, Z => n152);
   U122 : GTECH_NOR2 port map( A => n156, B => n157, Z => n155);
   U123 : GTECH_NAND2 port map( A => n158, B => n70, Z => n157);
   U124 : GTECH_NOR2 port map( A => n159, B => n160, Z => n156);
   U125 : GTECH_NAND2 port map( A => n161, B => n162, Z => n160);
   U126 : GTECH_NAND2 port map( A => n163, B => n164, Z => n161);
   U127 : GTECH_NAND2 port map( A => n165, B => n166, Z => n164);
   U128 : GTECH_NOR2 port map( A => n167, B => n168, Z => n165);
   U129 : GTECH_NOR2 port map( A => n169, B => n170, Z => n168);
   U130 : GTECH_NAND2 port map( A => n171, B => n66, Z => n170);
   U131 : GTECH_NOR2 port map( A => n172, B => n32, Z => n169);
   U132 : GTECH_NOR2 port map( A => n174, B => n175, Z => n173);
   U133 : GTECH_NOR2 port map( A => n176, B => n177, Z => n174);
   U134 : GTECH_NOR2 port map( A => n178, B => n179, Z => n177);
   U135 : GTECH_NAND2 port map( A => n180, B => n33, Z => n178);
   U136 : GTECH_NOR2 port map( A => A(1), B => n182, Z => n181);
   U137 : GTECH_NAND2 port map( A => n183, B => B(1), Z => n180);
   U138 : GTECH_NAND2 port map( A => A(1), B => n182, Z => n183);
   U139 : GTECH_NOR2 port map( A => n37, B => B(0), Z => n182);
   U140 : GTECH_NAND2 port map( A => n184, B => n185, Z => n176);
   U141 : GTECH_NOR2 port map( A => n186, B => n187, Z => n163);
   U142 : GTECH_NOR2 port map( A => n188, B => n189, Z => n150);
   U143 : GTECH_NOR2 port map( A => n190, B => n191, Z => n137);
   U144 : GTECH_NOR2 port map( A => n192, B => n193, Z => n124);
   U145 : GTECH_NOR2 port map( A => n194, B => n195, Z => n111);
   U146 : GTECH_NOR2 port map( A => n196, B => n197, Z => n98);
   U147 : GTECH_NAND2 port map( A => n83, B => n198, Z => LT_port);
   U148 : GTECH_NAND2 port map( A => n199, B => n81, Z => n198);
   U149 : GTECH_NAND2 port map( A => A(31), B => n60, Z => n81);
   U150 : GTECH_NAND2 port map( A => n200, B => n201, Z => n199);
   U151 : GTECH_NAND2 port map( A => B(30), B => n17, Z => n201);
   U152 : GTECH_NAND2 port map( A => n202, B => n88, Z => n200);
   U153 : GTECH_NOR2 port map( A => n203, B => n204, Z => n88);
   U154 : GTECH_NOR2 port map( A => n61, B => A(30), Z => n204);
   U155 : GTECH_NOR2 port map( A => n17, B => B(30), Z => n203);
   U156 : GTECH_NOR2 port map( A => n18, B => n205, Z => n202);
   U157 : GTECH_NOR2 port map( A => n89, B => n206, Z => n205);
   U158 : GTECH_NAND2 port map( A => n1, B => n207, Z => n206);
   U159 : GTECH_NOR2 port map( A => n209, B => n94, Z => n208);
   U160 : GTECH_NAND2 port map( A => n20, B => n207, Z => n94);
   U161 : GTECH_NAND2 port map( A => B(28), B => n21, Z => n207);
   U162 : GTECH_NOR2 port map( A => n21, B => B(28), Z => n210);
   U163 : GTECH_NAND2 port map( A => n22, B => n211, Z => n209);
   U164 : GTECH_NAND2 port map( A => n97, B => n212, Z => n211);
   U165 : GTECH_NOR2 port map( A => n2, B => n24, Z => n212);
   U166 : GTECH_NAND2 port map( A => n214, B => n101, Z => n213);
   U167 : GTECH_NOR2 port map( A => n196, B => n24, Z => n101);
   U168 : GTECH_NAND2 port map( A => B(26), B => n25, Z => n215);
   U169 : GTECH_NOR2 port map( A => n25, B => B(26), Z => n196);
   U170 : GTECH_NOR2 port map( A => n26, B => n216, Z => n214);
   U171 : GTECH_NOR2 port map( A => n102, B => n217, Z => n216);
   U172 : GTECH_NAND2 port map( A => n3, B => n218, Z => n217);
   U173 : GTECH_NOR2 port map( A => n220, B => n107, Z => n219);
   U174 : GTECH_NAND2 port map( A => n28, B => n218, Z => n107);
   U175 : GTECH_NAND2 port map( A => B(24), B => n29, Z => n218);
   U176 : GTECH_NOR2 port map( A => n29, B => B(24), Z => n221);
   U177 : GTECH_NAND2 port map( A => n30, B => n222, Z => n220);
   U178 : GTECH_NAND2 port map( A => n110, B => n223, Z => n222);
   U179 : GTECH_NOR2 port map( A => n4, B => n43, Z => n223);
   U180 : GTECH_NAND2 port map( A => n225, B => n114, Z => n224);
   U181 : GTECH_NOR2 port map( A => n194, B => n43, Z => n114);
   U182 : GTECH_NAND2 port map( A => B(22), B => n44, Z => n226);
   U183 : GTECH_NOR2 port map( A => n44, B => B(22), Z => n194);
   U184 : GTECH_NOR2 port map( A => n42, B => n227, Z => n225);
   U185 : GTECH_NOR2 port map( A => n115, B => n228, Z => n227);
   U186 : GTECH_NAND2 port map( A => n5, B => n229, Z => n228);
   U187 : GTECH_NOR2 port map( A => n231, B => n120, Z => n230);
   U188 : GTECH_NAND2 port map( A => n53, B => n229, Z => n120);
   U189 : GTECH_NAND2 port map( A => B(20), B => n54, Z => n229);
   U190 : GTECH_NOR2 port map( A => n54, B => B(20), Z => n232);
   U191 : GTECH_NAND2 port map( A => n51, B => n233, Z => n231);
   U192 : GTECH_NAND2 port map( A => n123, B => n234, Z => n233);
   U193 : GTECH_NOR2 port map( A => n6, B => n49, Z => n234);
   U194 : GTECH_NAND2 port map( A => n236, B => n127, Z => n235);
   U195 : GTECH_NOR2 port map( A => n192, B => n49, Z => n127);
   U196 : GTECH_NAND2 port map( A => B(18), B => n50, Z => n237);
   U197 : GTECH_NOR2 port map( A => n50, B => B(18), Z => n192);
   U198 : GTECH_NOR2 port map( A => n48, B => n238, Z => n236);
   U199 : GTECH_NOR2 port map( A => n128, B => n239, Z => n238);
   U200 : GTECH_NAND2 port map( A => n7, B => n240, Z => n239);
   U201 : GTECH_NOR2 port map( A => n242, B => n133, Z => n241);
   U202 : GTECH_NAND2 port map( A => n46, B => n240, Z => n133);
   U203 : GTECH_NAND2 port map( A => B(16), B => n47, Z => n240);
   U204 : GTECH_NOR2 port map( A => n47, B => B(16), Z => n243);
   U205 : GTECH_NAND2 port map( A => n74, B => n244, Z => n242);
   U206 : GTECH_NAND2 port map( A => n136, B => n245, Z => n244);
   U207 : GTECH_NOR2 port map( A => n8, B => n40, Z => n245);
   U208 : GTECH_NAND2 port map( A => n247, B => n140, Z => n246);
   U209 : GTECH_NOR2 port map( A => n190, B => n40, Z => n140);
   U210 : GTECH_NAND2 port map( A => B(14), B => n41, Z => n248);
   U211 : GTECH_NOR2 port map( A => n41, B => B(14), Z => n190);
   U212 : GTECH_NOR2 port map( A => n59, B => n249, Z => n247);
   U213 : GTECH_NOR2 port map( A => n141, B => n250, Z => n249);
   U214 : GTECH_NAND2 port map( A => n9, B => n251, Z => n250);
   U215 : GTECH_NOR2 port map( A => n253, B => n146, Z => n252);
   U216 : GTECH_NAND2 port map( A => n57, B => n251, Z => n146);
   U217 : GTECH_NAND2 port map( A => B(12), B => n58, Z => n251);
   U218 : GTECH_NOR2 port map( A => n58, B => B(12), Z => n254);
   U219 : GTECH_NAND2 port map( A => n55, B => n255, Z => n253);
   U220 : GTECH_NAND2 port map( A => n149, B => n256, Z => n255);
   U221 : GTECH_NOR2 port map( A => n10, B => n72, Z => n256);
   U222 : GTECH_NAND2 port map( A => n258, B => n153, Z => n257);
   U223 : GTECH_NOR2 port map( A => n188, B => n72, Z => n153);
   U224 : GTECH_NAND2 port map( A => B(10), B => n73, Z => n259);
   U225 : GTECH_NOR2 port map( A => n73, B => B(10), Z => n188);
   U226 : GTECH_NOR2 port map( A => n45, B => n260, Z => n258);
   U227 : GTECH_NOR2 port map( A => n154, B => n261, Z => n260);
   U228 : GTECH_NAND2 port map( A => n11, B => n262, Z => n261);
   U229 : GTECH_NOR2 port map( A => n264, B => n159, Z => n263);
   U230 : GTECH_NAND2 port map( A => n70, B => n262, Z => n159);
   U231 : GTECH_NAND2 port map( A => B(8), B => n71, Z => n262);
   U232 : GTECH_NOR2 port map( A => n71, B => B(8), Z => n265);
   U233 : GTECH_NAND2 port map( A => n38, B => n266, Z => n264);
   U234 : GTECH_NAND2 port map( A => n162, B => n267, Z => n266);
   U235 : GTECH_NOR2 port map( A => n12, B => n68, Z => n267);
   U236 : GTECH_NAND2 port map( A => n269, B => n166, Z => n268);
   U237 : GTECH_NOR2 port map( A => n186, B => n68, Z => n166);
   U238 : GTECH_NAND2 port map( A => B(6), B => n69, Z => n270);
   U239 : GTECH_NOR2 port map( A => n69, B => B(6), Z => n186);
   U240 : GTECH_NOR2 port map( A => n14, B => n271, Z => n269);
   U241 : GTECH_NOR2 port map( A => n167, B => n272, Z => n271);
   U242 : GTECH_NAND2 port map( A => n34, B => n273, Z => n272);
   U243 : GTECH_NOR2 port map( A => n275, B => n172, Z => n274);
   U244 : GTECH_NAND2 port map( A => n66, B => n273, Z => n172);
   U245 : GTECH_NAND2 port map( A => B(4), B => n67, Z => n273);
   U246 : GTECH_NOR2 port map( A => n67, B => B(4), Z => n276);
   U247 : GTECH_NAND2 port map( A => n185, B => n35, Z => n275);
   U248 : GTECH_NOR2 port map( A => n175, B => n278, Z => n277);
   U249 : GTECH_NAND2 port map( A => n279, B => n63, Z => n278);
   U250 : GTECH_NAND2 port map( A => n280, B => n62, Z => n279);
   U251 : GTECH_NAND2 port map( A => n184, B => n63, Z => n179);
   U252 : GTECH_NOR2 port map( A => n64, B => A(2), Z => n281);
   U253 : GTECH_NAND2 port map( A => A(2), B => n64, Z => n184);
   U254 : GTECH_NOR2 port map( A => n282, B => n36, Z => n280);
   U255 : GTECH_NAND2 port map( A => n284, B => A(1), Z => n283);
   U256 : GTECH_NOR2 port map( A => B(1), B => n285, Z => n282);
   U257 : GTECH_NOR2 port map( A => A(1), B => n284, Z => n285);
   U258 : GTECH_NAND2 port map( A => B(0), B => n37, Z => n284);
   U259 : GTECH_NOR2 port map( A => n65, B => A(3), Z => n175);
   U260 : GTECH_NAND2 port map( A => A(3), B => n65, Z => n185);
   U261 : GTECH_NOR2 port map( A => n15, B => A(5), Z => n167);
   U262 : GTECH_NAND2 port map( A => A(5), B => n15, Z => n171);
   U263 : GTECH_NAND2 port map( A => B(7), B => n39, Z => n162);
   U264 : GTECH_NOR2 port map( A => n39, B => B(7), Z => n187);
   U265 : GTECH_NOR2 port map( A => n78, B => A(9), Z => n154);
   U266 : GTECH_NAND2 port map( A => A(9), B => n78, Z => n158);
   U267 : GTECH_NAND2 port map( A => B(11), B => n56, Z => n149);
   U268 : GTECH_NOR2 port map( A => n56, B => B(11), Z => n189);
   U269 : GTECH_NOR2 port map( A => n76, B => A(13), Z => n141);
   U270 : GTECH_NAND2 port map( A => A(13), B => n76, Z => n145);
   U271 : GTECH_NAND2 port map( A => B(15), B => n75, Z => n136);
   U272 : GTECH_NOR2 port map( A => n75, B => B(15), Z => n191);
   U273 : GTECH_NOR2 port map( A => n77, B => A(17), Z => n128);
   U274 : GTECH_NAND2 port map( A => A(17), B => n77, Z => n132);
   U275 : GTECH_NAND2 port map( A => B(19), B => n52, Z => n123);
   U276 : GTECH_NOR2 port map( A => n52, B => B(19), Z => n193);
   U277 : GTECH_NOR2 port map( A => n79, B => A(21), Z => n115);
   U278 : GTECH_NAND2 port map( A => A(21), B => n79, Z => n119);
   U279 : GTECH_NAND2 port map( A => B(23), B => n31, Z => n110);
   U280 : GTECH_NOR2 port map( A => n31, B => B(23), Z => n195);
   U281 : GTECH_NOR2 port map( A => n27, B => A(25), Z => n102);
   U282 : GTECH_NAND2 port map( A => A(25), B => n27, Z => n106);
   U283 : GTECH_NAND2 port map( A => B(27), B => n23, Z => n97);
   U284 : GTECH_NOR2 port map( A => n23, B => B(27), Z => n197);
   U285 : GTECH_NOR2 port map( A => n19, B => A(29), Z => n89);
   U286 : GTECH_NAND2 port map( A => A(29), B => n19, Z => n93);
   U287 : GTECH_NAND2 port map( A => B(31), B => n16, Z => n83);

end SYN_rpl;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_zpu_core.all;

entity zpu_core_DW01_cmp6_0 is

   port( A, B : in std_logic_vector (31 downto 0);  TC : in std_logic;  LT, GT,
         EQ, LE, GE, NE : out std_logic);

end zpu_core_DW01_cmp6_0;

architecture SYN_rpl of zpu_core_DW01_cmp6_0 is

   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   signal n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n15, n16, n17
      , n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, 
      n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46
      , n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, 
      n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n73, n74, n75
      , n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86, n87, n88, n89, 
      n90, n91, n92, n93, n94, n95, n96, n97, n98, n99, n100, n101, n102, n103,
      n104, n105, n106, n107, n108, n109, n110, n111, n112, n113, n114, n115, 
      n116, n117, n118, n119, n120, n121, n122, n123, n124, n125, n126, n127, 
      n128, n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, n139, 
      n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150, n151, 
      n152, n153, n154, n155, n156, n157, n158, n159, n160, n161, n162, n163, 
      n164, n165, n166, n167, n168, n169, n170, n171, n172, n173, n174, n175, 
      n176, n177, n178, n179, n180, n181, n182, n183, n184, n185, n186, n187, 
      n188, n189, n190, n191, n192, n193, n194, n195, n196, n197, n198, n199, 
      n200, n201, n202, n203, n204, n205, n206, n207, n208, n209, n210, n211, 
      n212, n213, n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, 
      n224, n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235, 
      n236, n237, n238, n239, n240, n241, n242, n243, n244, n245, n246, n247, 
      n248, n249, n250, n251, n252, n253, n254, n255, n256, n257, n258, n259, 
      n260, n261, n262, n263, n264, n265, n266, n267, n268, n269, n270, n271, 
      n272, n273, n274, n275, n276, n277, n278, n279, n280, n281, n282, n283, 
      n284, n285 : std_logic;

begin
   
   U1 : GTECH_NOT port map( A => n93, Z => n1);
   U2 : GTECH_NOT port map( A => n99, Z => n2);
   U3 : GTECH_NOT port map( A => n106, Z => n3);
   U4 : GTECH_NOT port map( A => n112, Z => n4);
   U5 : GTECH_NOT port map( A => n119, Z => n5);
   U6 : GTECH_NOT port map( A => n125, Z => n6);
   U7 : GTECH_NOT port map( A => n132, Z => n7);
   U8 : GTECH_NOT port map( A => n138, Z => n8);
   U9 : GTECH_NOT port map( A => n145, Z => n9);
   U10 : GTECH_NOT port map( A => n151, Z => n10);
   U11 : GTECH_NOT port map( A => n158, Z => n11);
   U12 : GTECH_NOT port map( A => n164, Z => n12);
   U13 : GTECH_NOT port map( A => n185, Z => n13);
   U14 : GTECH_NOT port map( A => n199, Z => LE);
   U15 : GTECH_NOT port map( A => n204, Z => n15);
   U16 : GTECH_NOT port map( A => B(5), Z => n16);
   U17 : GTECH_NOT port map( A => n198, Z => n17);
   U18 : GTECH_NOT port map( A => A(31), Z => n18);
   U19 : GTECH_NOT port map( A => n88, Z => n19);
   U20 : GTECH_NOT port map( A => A(30), Z => n20);
   U21 : GTECH_NOT port map( A => n197, Z => n21);
   U22 : GTECH_NOT port map( A => B(29), Z => n22);
   U23 : GTECH_NOT port map( A => n285, Z => n23);
   U24 : GTECH_NOT port map( A => A(28), Z => n24);
   U25 : GTECH_NOT port map( A => n196, Z => n25);
   U26 : GTECH_NOT port map( A => A(27), Z => n26);
   U27 : GTECH_NOT port map( A => n214, Z => n27);
   U28 : GTECH_NOT port map( A => A(26), Z => n28);
   U29 : GTECH_NOT port map( A => n195, Z => n29);
   U30 : GTECH_NOT port map( A => B(25), Z => n30);
   U31 : GTECH_NOT port map( A => n284, Z => n31);
   U32 : GTECH_NOT port map( A => A(24), Z => n32);
   U33 : GTECH_NOT port map( A => n194, Z => n33);
   U34 : GTECH_NOT port map( A => A(23), Z => n34);
   U35 : GTECH_NOT port map( A => n171, Z => n35);
   U36 : GTECH_NOT port map( A => n175, Z => n36);
   U37 : GTECH_NOT port map( A => n182, Z => n37);
   U38 : GTECH_NOT port map( A => n268, Z => n38);
   U39 : GTECH_NOT port map( A => n276, Z => n39);
   U40 : GTECH_NOT port map( A => A(0), Z => n40);
   U41 : GTECH_NOT port map( A => n186, Z => n41);
   U42 : GTECH_NOT port map( A => A(7), Z => n42);
   U43 : GTECH_NOT port map( A => n244, Z => n43);
   U44 : GTECH_NOT port map( A => A(14), Z => n44);
   U45 : GTECH_NOT port map( A => n193, Z => n45);
   U46 : GTECH_NOT port map( A => n224, Z => n46);
   U47 : GTECH_NOT port map( A => A(22), Z => n47);
   U48 : GTECH_NOT port map( A => n187, Z => n48);
   U49 : GTECH_NOT port map( A => n282, Z => n49);
   U50 : GTECH_NOT port map( A => A(16), Z => n50);
   U51 : GTECH_NOT port map( A => n191, Z => n51);
   U52 : GTECH_NOT port map( A => n234, Z => n52);
   U53 : GTECH_NOT port map( A => A(18), Z => n53);
   U54 : GTECH_NOT port map( A => n192, Z => n54);
   U55 : GTECH_NOT port map( A => A(19), Z => n55);
   U56 : GTECH_NOT port map( A => n283, Z => n56);
   U57 : GTECH_NOT port map( A => A(20), Z => n57);
   U58 : GTECH_NOT port map( A => n188, Z => n58);
   U59 : GTECH_NOT port map( A => A(11), Z => n59);
   U60 : GTECH_NOT port map( A => n281, Z => n60);
   U61 : GTECH_NOT port map( A => A(12), Z => n61);
   U62 : GTECH_NOT port map( A => n189, Z => n62);
   U63 : GTECH_NOT port map( A => B(30), Z => n63);
   U64 : GTECH_NOT port map( A => n180, Z => n64);
   U65 : GTECH_NOT port map( A => n274, Z => n65);
   U66 : GTECH_NOT port map( A => B(2), Z => n66);
   U67 : GTECH_NOT port map( A => B(3), Z => n67);
   U68 : GTECH_NOT port map( A => n279, Z => n68);
   U69 : GTECH_NOT port map( A => A(4), Z => n69);
   U70 : GTECH_NOT port map( A => n264, Z => n70);
   U71 : GTECH_NOT port map( A => A(6), Z => n71);
   U72 : GTECH_NOT port map( A => n280, Z => n72);
   U73 : GTECH_NOT port map( A => A(8), Z => n73);
   U74 : GTECH_NOT port map( A => n254, Z => n74);
   U75 : GTECH_NOT port map( A => A(10), Z => n75);
   U76 : GTECH_NOT port map( A => n190, Z => n76);
   U77 : GTECH_NOT port map( A => A(15), Z => n77);
   U78 : GTECH_NOT port map( A => B(13), Z => n78);
   U79 : GTECH_NOT port map( A => B(17), Z => n79);
   U80 : GTECH_NOT port map( A => B(9), Z => n80);
   U81 : GTECH_NOT port map( A => B(21), Z => n81);
   U82 : GTECH_NAND2 port map( A => n17, B => n82, Z => LT);
   U83 : GTECH_NAND2 port map( A => n83, B => n84, Z => n82);
   U84 : GTECH_NAND2 port map( A => n85, B => n86, Z => n83);
   U85 : GTECH_NAND2 port map( A => n87, B => n19, Z => n85);
   U86 : GTECH_NOR2 port map( A => n21, B => n89, Z => n87);
   U87 : GTECH_NOR2 port map( A => n90, B => n91, Z => n89);
   U88 : GTECH_NAND2 port map( A => n1, B => n92, Z => n91);
   U89 : GTECH_NOR2 port map( A => n94, B => n95, Z => n93);
   U90 : GTECH_NAND2 port map( A => n25, B => n96, Z => n94);
   U91 : GTECH_NAND2 port map( A => n97, B => n98, Z => n96);
   U92 : GTECH_NOR2 port map( A => n2, B => n27, Z => n98);
   U93 : GTECH_NAND2 port map( A => n100, B => n101, Z => n99);
   U94 : GTECH_NOR2 port map( A => n29, B => n102, Z => n100);
   U95 : GTECH_NOR2 port map( A => n103, B => n104, Z => n102);
   U96 : GTECH_NAND2 port map( A => n3, B => n105, Z => n104);
   U97 : GTECH_NOR2 port map( A => n107, B => n108, Z => n106);
   U98 : GTECH_NAND2 port map( A => n33, B => n109, Z => n107);
   U99 : GTECH_NAND2 port map( A => n110, B => n111, Z => n109);
   U100 : GTECH_NOR2 port map( A => n4, B => n46, Z => n111);
   U101 : GTECH_NAND2 port map( A => n113, B => n114, Z => n112);
   U102 : GTECH_NOR2 port map( A => n45, B => n115, Z => n113);
   U103 : GTECH_NOR2 port map( A => n116, B => n117, Z => n115);
   U104 : GTECH_NAND2 port map( A => n5, B => n118, Z => n117);
   U105 : GTECH_NOR2 port map( A => n120, B => n121, Z => n119);
   U106 : GTECH_NAND2 port map( A => n54, B => n122, Z => n120);
   U107 : GTECH_NAND2 port map( A => n123, B => n124, Z => n122);
   U108 : GTECH_NOR2 port map( A => n6, B => n52, Z => n124);
   U109 : GTECH_NAND2 port map( A => n126, B => n127, Z => n125);
   U110 : GTECH_NOR2 port map( A => n51, B => n128, Z => n126);
   U111 : GTECH_NOR2 port map( A => n129, B => n130, Z => n128);
   U112 : GTECH_NAND2 port map( A => n7, B => n131, Z => n130);
   U113 : GTECH_NOR2 port map( A => n133, B => n134, Z => n132);
   U114 : GTECH_NAND2 port map( A => n76, B => n135, Z => n133);
   U115 : GTECH_NAND2 port map( A => n136, B => n137, Z => n135);
   U116 : GTECH_NOR2 port map( A => n8, B => n43, Z => n137);
   U117 : GTECH_NAND2 port map( A => n139, B => n140, Z => n138);
   U118 : GTECH_NOR2 port map( A => n62, B => n141, Z => n139);
   U119 : GTECH_NOR2 port map( A => n142, B => n143, Z => n141);
   U120 : GTECH_NAND2 port map( A => n9, B => n144, Z => n143);
   U121 : GTECH_NOR2 port map( A => n146, B => n147, Z => n145);
   U122 : GTECH_NAND2 port map( A => n58, B => n148, Z => n146);
   U123 : GTECH_NAND2 port map( A => n149, B => n150, Z => n148);
   U124 : GTECH_NOR2 port map( A => n10, B => n74, Z => n150);
   U125 : GTECH_NAND2 port map( A => n152, B => n153, Z => n151);
   U126 : GTECH_NOR2 port map( A => n48, B => n154, Z => n152);
   U127 : GTECH_NOR2 port map( A => n155, B => n156, Z => n154);
   U128 : GTECH_NAND2 port map( A => n11, B => n157, Z => n156);
   U129 : GTECH_NOR2 port map( A => n159, B => n160, Z => n158);
   U130 : GTECH_NAND2 port map( A => n41, B => n161, Z => n159);
   U131 : GTECH_NAND2 port map( A => n162, B => n163, Z => n161);
   U132 : GTECH_NOR2 port map( A => n12, B => n70, Z => n163);
   U133 : GTECH_NAND2 port map( A => n165, B => n166, Z => n164);
   U134 : GTECH_NOR2 port map( A => n13, B => n167, Z => n165);
   U135 : GTECH_NOR2 port map( A => n168, B => n169, Z => n167);
   U136 : GTECH_NAND2 port map( A => n35, B => n170, Z => n169);
   U137 : GTECH_NOR2 port map( A => n172, B => n173, Z => n171);
   U138 : GTECH_NAND2 port map( A => n174, B => n36, Z => n172);
   U139 : GTECH_NOR2 port map( A => n176, B => n177, Z => n175);
   U140 : GTECH_NAND2 port map( A => n178, B => n65, Z => n177);
   U141 : GTECH_NAND2 port map( A => n179, B => n64, Z => n178);
   U142 : GTECH_NOR2 port map( A => n181, B => n37, Z => n179);
   U143 : GTECH_NAND2 port map( A => n183, B => A(1), Z => n182);
   U144 : GTECH_NOR2 port map( A => B(1), B => n184, Z => n181);
   U145 : GTECH_NOR2 port map( A => A(1), B => n183, Z => n184);
   U146 : GTECH_NAND2 port map( A => B(0), B => n40, Z => n183);
   U147 : GTECH_NOR2 port map( A => n198, B => n200, Z => n199);
   U148 : GTECH_NOR2 port map( A => n201, B => n202, Z => n200);
   U149 : GTECH_NOR2 port map( A => n15, B => n88, Z => n202);
   U150 : GTECH_NAND2 port map( A => n203, B => n86, Z => n88);
   U151 : GTECH_NAND2 port map( A => B(30), B => n20, Z => n86);
   U152 : GTECH_NOR2 port map( A => n90, B => n205, Z => n204);
   U153 : GTECH_NOR2 port map( A => n206, B => n207, Z => n205);
   U154 : GTECH_NAND2 port map( A => n197, B => n23, Z => n207);
   U155 : GTECH_NAND2 port map( A => A(29), B => n22, Z => n197);
   U156 : GTECH_NOR2 port map( A => n95, B => n208, Z => n206);
   U157 : GTECH_NAND2 port map( A => n209, B => n97, Z => n208);
   U158 : GTECH_NAND2 port map( A => B(27), B => n26, Z => n97);
   U159 : GTECH_NAND2 port map( A => n210, B => n211, Z => n209);
   U160 : GTECH_NAND2 port map( A => n212, B => n101, Z => n211);
   U161 : GTECH_NOR2 port map( A => n213, B => n27, Z => n101);
   U162 : GTECH_NAND2 port map( A => B(26), B => n28, Z => n214);
   U163 : GTECH_NOR2 port map( A => n103, B => n215, Z => n212);
   U164 : GTECH_NOR2 port map( A => n216, B => n217, Z => n215);
   U165 : GTECH_NAND2 port map( A => n195, B => n31, Z => n217);
   U166 : GTECH_NAND2 port map( A => A(25), B => n30, Z => n195);
   U167 : GTECH_NOR2 port map( A => n108, B => n218, Z => n216);
   U168 : GTECH_NAND2 port map( A => n219, B => n110, Z => n218);
   U169 : GTECH_NAND2 port map( A => B(23), B => n34, Z => n110);
   U170 : GTECH_NAND2 port map( A => n220, B => n221, Z => n219);
   U171 : GTECH_NAND2 port map( A => n222, B => n114, Z => n221);
   U172 : GTECH_NOR2 port map( A => n223, B => n46, Z => n114);
   U173 : GTECH_NAND2 port map( A => B(22), B => n47, Z => n224);
   U174 : GTECH_NOR2 port map( A => n116, B => n225, Z => n222);
   U175 : GTECH_NOR2 port map( A => n226, B => n227, Z => n225);
   U176 : GTECH_NAND2 port map( A => n193, B => n56, Z => n227);
   U177 : GTECH_NAND2 port map( A => A(21), B => n81, Z => n193);
   U178 : GTECH_NOR2 port map( A => n121, B => n228, Z => n226);
   U179 : GTECH_NAND2 port map( A => n229, B => n123, Z => n228);
   U180 : GTECH_NAND2 port map( A => B(19), B => n55, Z => n123);
   U181 : GTECH_NAND2 port map( A => n230, B => n231, Z => n229);
   U182 : GTECH_NAND2 port map( A => n232, B => n127, Z => n231);
   U183 : GTECH_NOR2 port map( A => n233, B => n52, Z => n127);
   U184 : GTECH_NAND2 port map( A => B(18), B => n53, Z => n234);
   U185 : GTECH_NOR2 port map( A => n129, B => n235, Z => n232);
   U186 : GTECH_NOR2 port map( A => n236, B => n237, Z => n235);
   U187 : GTECH_NAND2 port map( A => n191, B => n49, Z => n237);
   U188 : GTECH_NAND2 port map( A => A(17), B => n79, Z => n191);
   U189 : GTECH_NOR2 port map( A => n134, B => n238, Z => n236);
   U190 : GTECH_NAND2 port map( A => n239, B => n136, Z => n238);
   U191 : GTECH_NAND2 port map( A => B(15), B => n77, Z => n136);
   U192 : GTECH_NAND2 port map( A => n240, B => n241, Z => n239);
   U193 : GTECH_NAND2 port map( A => n242, B => n140, Z => n241);
   U194 : GTECH_NOR2 port map( A => n243, B => n43, Z => n140);
   U195 : GTECH_NAND2 port map( A => B(14), B => n44, Z => n244);
   U196 : GTECH_NOR2 port map( A => n142, B => n245, Z => n242);
   U197 : GTECH_NOR2 port map( A => n246, B => n247, Z => n245);
   U198 : GTECH_NAND2 port map( A => n189, B => n60, Z => n247);
   U199 : GTECH_NAND2 port map( A => A(13), B => n78, Z => n189);
   U200 : GTECH_NOR2 port map( A => n147, B => n248, Z => n246);
   U201 : GTECH_NAND2 port map( A => n249, B => n149, Z => n248);
   U202 : GTECH_NAND2 port map( A => B(11), B => n59, Z => n149);
   U203 : GTECH_NAND2 port map( A => n250, B => n251, Z => n249);
   U204 : GTECH_NAND2 port map( A => n252, B => n153, Z => n251);
   U205 : GTECH_NOR2 port map( A => n253, B => n74, Z => n153);
   U206 : GTECH_NAND2 port map( A => B(10), B => n75, Z => n254);
   U207 : GTECH_NOR2 port map( A => n155, B => n255, Z => n252);
   U208 : GTECH_NOR2 port map( A => n256, B => n257, Z => n255);
   U209 : GTECH_NAND2 port map( A => n187, B => n72, Z => n257);
   U210 : GTECH_NAND2 port map( A => A(9), B => n80, Z => n187);
   U211 : GTECH_NOR2 port map( A => n160, B => n258, Z => n256);
   U212 : GTECH_NAND2 port map( A => n259, B => n162, Z => n258);
   U213 : GTECH_NAND2 port map( A => B(7), B => n42, Z => n162);
   U214 : GTECH_NAND2 port map( A => n260, B => n261, Z => n259);
   U215 : GTECH_NAND2 port map( A => n262, B => n166, Z => n261);
   U216 : GTECH_NOR2 port map( A => n263, B => n70, Z => n166);
   U217 : GTECH_NAND2 port map( A => B(6), B => n71, Z => n264);
   U218 : GTECH_NOR2 port map( A => n168, B => n265, Z => n262);
   U219 : GTECH_NOR2 port map( A => n266, B => n267, Z => n265);
   U220 : GTECH_NAND2 port map( A => n185, B => n68, Z => n267);
   U221 : GTECH_NAND2 port map( A => A(5), B => n16, Z => n185);
   U222 : GTECH_NOR2 port map( A => n173, B => n38, Z => n266);
   U223 : GTECH_NOR2 port map( A => n269, B => n176, Z => n268);
   U224 : GTECH_NOR2 port map( A => n67, B => A(3), Z => n176);
   U225 : GTECH_NOR2 port map( A => n270, B => n271, Z => n269);
   U226 : GTECH_NOR2 port map( A => n272, B => n180, Z => n271);
   U227 : GTECH_NAND2 port map( A => n273, B => n65, Z => n180);
   U228 : GTECH_NOR2 port map( A => n66, B => A(2), Z => n274);
   U229 : GTECH_NAND2 port map( A => n275, B => n39, Z => n272);
   U230 : GTECH_NOR2 port map( A => A(1), B => n277, Z => n276);
   U231 : GTECH_NAND2 port map( A => n278, B => B(1), Z => n275);
   U232 : GTECH_NAND2 port map( A => A(1), B => n277, Z => n278);
   U233 : GTECH_NOR2 port map( A => n40, B => B(0), Z => n277);
   U234 : GTECH_NAND2 port map( A => n273, B => n174, Z => n270);
   U235 : GTECH_NAND2 port map( A => A(3), B => n67, Z => n174);
   U236 : GTECH_NAND2 port map( A => A(2), B => n66, Z => n273);
   U237 : GTECH_NAND2 port map( A => n68, B => n170, Z => n173);
   U238 : GTECH_NAND2 port map( A => B(4), B => n69, Z => n170);
   U239 : GTECH_NOR2 port map( A => n69, B => B(4), Z => n279);
   U240 : GTECH_NOR2 port map( A => n16, B => A(5), Z => n168);
   U241 : GTECH_NOR2 port map( A => n263, B => n186, Z => n260);
   U242 : GTECH_NOR2 port map( A => n42, B => B(7), Z => n186);
   U243 : GTECH_NOR2 port map( A => n71, B => B(6), Z => n263);
   U244 : GTECH_NAND2 port map( A => n72, B => n157, Z => n160);
   U245 : GTECH_NAND2 port map( A => B(8), B => n73, Z => n157);
   U246 : GTECH_NOR2 port map( A => n73, B => B(8), Z => n280);
   U247 : GTECH_NOR2 port map( A => n80, B => A(9), Z => n155);
   U248 : GTECH_NOR2 port map( A => n253, B => n188, Z => n250);
   U249 : GTECH_NOR2 port map( A => n59, B => B(11), Z => n188);
   U250 : GTECH_NOR2 port map( A => n75, B => B(10), Z => n253);
   U251 : GTECH_NAND2 port map( A => n60, B => n144, Z => n147);
   U252 : GTECH_NAND2 port map( A => B(12), B => n61, Z => n144);
   U253 : GTECH_NOR2 port map( A => n61, B => B(12), Z => n281);
   U254 : GTECH_NOR2 port map( A => n78, B => A(13), Z => n142);
   U255 : GTECH_NOR2 port map( A => n243, B => n190, Z => n240);
   U256 : GTECH_NOR2 port map( A => n77, B => B(15), Z => n190);
   U257 : GTECH_NOR2 port map( A => n44, B => B(14), Z => n243);
   U258 : GTECH_NAND2 port map( A => n49, B => n131, Z => n134);
   U259 : GTECH_NAND2 port map( A => B(16), B => n50, Z => n131);
   U260 : GTECH_NOR2 port map( A => n50, B => B(16), Z => n282);
   U261 : GTECH_NOR2 port map( A => n79, B => A(17), Z => n129);
   U262 : GTECH_NOR2 port map( A => n233, B => n192, Z => n230);
   U263 : GTECH_NOR2 port map( A => n55, B => B(19), Z => n192);
   U264 : GTECH_NOR2 port map( A => n53, B => B(18), Z => n233);
   U265 : GTECH_NAND2 port map( A => n56, B => n118, Z => n121);
   U266 : GTECH_NAND2 port map( A => B(20), B => n57, Z => n118);
   U267 : GTECH_NOR2 port map( A => n57, B => B(20), Z => n283);
   U268 : GTECH_NOR2 port map( A => n81, B => A(21), Z => n116);
   U269 : GTECH_NOR2 port map( A => n223, B => n194, Z => n220);
   U270 : GTECH_NOR2 port map( A => n34, B => B(23), Z => n194);
   U271 : GTECH_NOR2 port map( A => n47, B => B(22), Z => n223);
   U272 : GTECH_NAND2 port map( A => n31, B => n105, Z => n108);
   U273 : GTECH_NAND2 port map( A => B(24), B => n32, Z => n105);
   U274 : GTECH_NOR2 port map( A => n32, B => B(24), Z => n284);
   U275 : GTECH_NOR2 port map( A => n30, B => A(25), Z => n103);
   U276 : GTECH_NOR2 port map( A => n213, B => n196, Z => n210);
   U277 : GTECH_NOR2 port map( A => n26, B => B(27), Z => n196);
   U278 : GTECH_NOR2 port map( A => n28, B => B(26), Z => n213);
   U279 : GTECH_NAND2 port map( A => n23, B => n92, Z => n95);
   U280 : GTECH_NAND2 port map( A => B(28), B => n24, Z => n92);
   U281 : GTECH_NOR2 port map( A => n24, B => B(28), Z => n285);
   U282 : GTECH_NOR2 port map( A => n22, B => A(29), Z => n90);
   U283 : GTECH_NAND2 port map( A => n84, B => n203, Z => n201);
   U284 : GTECH_NAND2 port map( A => A(30), B => n63, Z => n203);
   U285 : GTECH_NAND2 port map( A => B(31), B => n18, Z => n84);
   U286 : GTECH_NOR2 port map( A => n18, B => B(31), Z => n198);

end SYN_rpl;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_zpu_core.all;

entity zpu_core_DW01_inc_0 is

   port( A : in std_logic_vector (29 downto 0);  SUM : out std_logic_vector (29
         downto 0));

end zpu_core_DW01_inc_0;

architecture SYN_rpl of zpu_core_DW01_inc_0 is

   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   signal SUM_29_port, SUM_28_port, SUM_27_port, SUM_26_port, SUM_25_port, 
      SUM_24_port, SUM_23_port, SUM_22_port, SUM_21_port, SUM_20_port, 
      SUM_19_port, SUM_18_port, SUM_17_port, SUM_16_port, SUM_15_port, 
      SUM_14_port, SUM_13_port, SUM_12_port, SUM_11_port, SUM_10_port, 
      SUM_9_port, SUM_8_port, SUM_7_port, SUM_6_port, SUM_5_port, SUM_4_port, 
      SUM_3_port, SUM_2_port, SUM_1_port, n1, n2, n3, n4, n5, n6, n7, n8, n9, 
      n10, n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24
      , n25, n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, SUM_0_port, n37,
      n38, n39, n40, n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52
      , n53, n54, n55, n56, n57, n58, n59, n60, n61, n62, n63, n64, n65, n66, 
      n67, n68, n69, n70, n71, n72, n73, n74, n75, n76, n77, n78, n79, n80, n81
      , n82, n83, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94, n95, 
      n96, n97, n98, n99, n100, n101, n102, n103, n104, n105, n106, n107, n108,
      n109, n110, n111, n112, n113, n114, n115, n116, n117, n118, n119, n120, 
      n121, n122, n123, n124, n125, n126, n127, n128, n129, n130, n131, n132, 
      n133, n134, n135, n136, n137, n138, n139, n140, n141, n142, n143 : 
      std_logic;

begin
   SUM <= ( SUM_29_port, SUM_28_port, SUM_27_port, SUM_26_port, SUM_25_port, 
      SUM_24_port, SUM_23_port, SUM_22_port, SUM_21_port, SUM_20_port, 
      SUM_19_port, SUM_18_port, SUM_17_port, SUM_16_port, SUM_15_port, 
      SUM_14_port, SUM_13_port, SUM_12_port, SUM_11_port, SUM_10_port, 
      SUM_9_port, SUM_8_port, SUM_7_port, SUM_6_port, SUM_5_port, SUM_4_port, 
      SUM_3_port, SUM_2_port, SUM_1_port, SUM_0_port );
   
   U1 : GTECH_NOT port map( A => n71, Z => n1);
   U2 : GTECH_NOT port map( A => A(28), Z => n2);
   U3 : GTECH_NOT port map( A => n72, Z => n3);
   U4 : GTECH_NOT port map( A => A(27), Z => n4);
   U5 : GTECH_NOT port map( A => n77, Z => n5);
   U6 : GTECH_NOT port map( A => n82, Z => n6);
   U7 : GTECH_NOT port map( A => A(25), Z => n7);
   U8 : GTECH_NOT port map( A => n79, Z => n8);
   U9 : GTECH_NOT port map( A => n89, Z => n9);
   U10 : GTECH_NOT port map( A => A(23), Z => n10);
   U11 : GTECH_NOT port map( A => n56, Z => n11);
   U12 : GTECH_NOT port map( A => n59, Z => n12);
   U13 : GTECH_NOT port map( A => n50, Z => n13);
   U14 : GTECH_NOT port map( A => n53, Z => n14);
   U15 : GTECH_NOT port map( A => n139, Z => n15);
   U16 : GTECH_NOT port map( A => n47, Z => n16);
   U17 : GTECH_NOT port map( A => n133, Z => n17);
   U18 : GTECH_NOT port map( A => n130, Z => n18);
   U19 : GTECH_NOT port map( A => n126, Z => n19);
   U20 : GTECH_NOT port map( A => n123, Z => n20);
   U21 : GTECH_NOT port map( A => n119, Z => n21);
   U22 : GTECH_NOT port map( A => n116, Z => n22);
   U23 : GTECH_NOT port map( A => n112, Z => n23);
   U24 : GTECH_NOT port map( A => n109, Z => n24);
   U25 : GTECH_NOT port map( A => n103, Z => n25);
   U26 : GTECH_NOT port map( A => n100, Z => n26);
   U27 : GTECH_NOT port map( A => n96, Z => n27);
   U28 : GTECH_NOT port map( A => n93, Z => n28);
   U29 : GTECH_NOT port map( A => n86, Z => n29);
   U30 : GTECH_NOT port map( A => A(3), Z => n30);
   U31 : GTECH_NOT port map( A => n62, Z => n31);
   U32 : GTECH_NOT port map( A => A(5), Z => n32);
   U33 : GTECH_NOT port map( A => A(7), Z => n33);
   U34 : GTECH_NOT port map( A => A(9), Z => n34);
   U35 : GTECH_NOT port map( A => n65, Z => n35);
   U36 : GTECH_NOT port map( A => A(0), Z => SUM_0_port);
   U37 : GTECH_NOT port map( A => n68, Z => n37);
   U38 : GTECH_NOT port map( A => A(1), Z => n38);
   U39 : GTECH_NOT port map( A => A(13), Z => n39);
   U40 : GTECH_NOT port map( A => A(11), Z => n40);
   U41 : GTECH_NOT port map( A => A(17), Z => n41);
   U42 : GTECH_NOT port map( A => A(15), Z => n42);
   U43 : GTECH_NOT port map( A => A(19), Z => n43);
   U44 : GTECH_NOT port map( A => A(21), Z => n44);
   U45 : GTECH_NAND2 port map( A => n45, B => n46, Z => SUM_9_port);
   U46 : GTECH_NAND2 port map( A => A(9), B => n47, Z => n46);
   U47 : GTECH_NAND2 port map( A => n16, B => n34, Z => n45);
   U48 : GTECH_NAND2 port map( A => n13, B => n48, Z => SUM_8_port);
   U49 : GTECH_NAND2 port map( A => A(8), B => n49, Z => n48);
   U50 : GTECH_NOR2 port map( A => n49, B => A(8), Z => n50);
   U51 : GTECH_NAND2 port map( A => A(7), B => n14, Z => n49);
   U52 : GTECH_NAND2 port map( A => n51, B => n52, Z => SUM_7_port);
   U53 : GTECH_NAND2 port map( A => A(7), B => n53, Z => n52);
   U54 : GTECH_NAND2 port map( A => n14, B => n33, Z => n51);
   U55 : GTECH_NAND2 port map( A => n11, B => n54, Z => SUM_6_port);
   U56 : GTECH_NAND2 port map( A => A(6), B => n55, Z => n54);
   U57 : GTECH_NOR2 port map( A => n55, B => A(6), Z => n56);
   U58 : GTECH_NAND2 port map( A => A(5), B => n12, Z => n55);
   U59 : GTECH_NAND2 port map( A => n57, B => n58, Z => SUM_5_port);
   U60 : GTECH_NAND2 port map( A => A(5), B => n59, Z => n58);
   U61 : GTECH_NAND2 port map( A => n12, B => n32, Z => n57);
   U62 : GTECH_NAND2 port map( A => n31, B => n60, Z => SUM_4_port);
   U63 : GTECH_NAND2 port map( A => A(4), B => n61, Z => n60);
   U64 : GTECH_NOR2 port map( A => n61, B => A(4), Z => n62);
   U65 : GTECH_NAND2 port map( A => A(3), B => n35, Z => n61);
   U66 : GTECH_NAND2 port map( A => n63, B => n64, Z => SUM_3_port);
   U67 : GTECH_NAND2 port map( A => A(3), B => n65, Z => n64);
   U68 : GTECH_NAND2 port map( A => n35, B => n30, Z => n63);
   U69 : GTECH_NAND2 port map( A => n37, B => n66, Z => SUM_2_port);
   U70 : GTECH_NAND2 port map( A => A(2), B => n67, Z => n66);
   U71 : GTECH_NOR2 port map( A => n67, B => A(2), Z => n68);
   U72 : GTECH_NAND2 port map( A => A(1), B => A(0), Z => n67);
   U73 : GTECH_NAND2 port map( A => n1, B => n69, Z => SUM_29_port);
   U74 : GTECH_NAND2 port map( A => A(29), B => n70, Z => n69);
   U75 : GTECH_NOR2 port map( A => n70, B => A(29), Z => n71);
   U76 : GTECH_NAND2 port map( A => A(28), B => n72, Z => n70);
   U77 : GTECH_NAND2 port map( A => n73, B => n74, Z => SUM_28_port);
   U78 : GTECH_NAND2 port map( A => A(28), B => n3, Z => n74);
   U79 : GTECH_NAND2 port map( A => n72, B => n2, Z => n73);
   U80 : GTECH_NOR2 port map( A => n4, B => n75, Z => n72);
   U81 : GTECH_NAND2 port map( A => n5, B => n76, Z => SUM_27_port);
   U82 : GTECH_NAND2 port map( A => A(27), B => n75, Z => n76);
   U83 : GTECH_NOR2 port map( A => n75, B => A(27), Z => n77);
   U84 : GTECH_NAND2 port map( A => n78, B => A(26), Z => n75);
   U85 : GTECH_NOR2 port map( A => n79, B => n7, Z => n78);
   U86 : GTECH_NAND2 port map( A => n6, B => n80, Z => SUM_26_port);
   U87 : GTECH_NAND2 port map( A => A(26), B => n81, Z => n80);
   U88 : GTECH_NOR2 port map( A => n81, B => A(26), Z => n82);
   U89 : GTECH_NAND2 port map( A => A(25), B => n8, Z => n81);
   U90 : GTECH_NAND2 port map( A => n83, B => n84, Z => SUM_25_port);
   U91 : GTECH_NAND2 port map( A => A(25), B => n79, Z => n84);
   U92 : GTECH_NAND2 port map( A => n8, B => n7, Z => n83);
   U93 : GTECH_NAND2 port map( A => n85, B => A(24), Z => n79);
   U94 : GTECH_NOR2 port map( A => n86, B => n10, Z => n85);
   U95 : GTECH_NAND2 port map( A => n9, B => n87, Z => SUM_24_port);
   U96 : GTECH_NAND2 port map( A => A(24), B => n88, Z => n87);
   U97 : GTECH_NOR2 port map( A => n88, B => A(24), Z => n89);
   U98 : GTECH_NAND2 port map( A => A(23), B => n29, Z => n88);
   U99 : GTECH_NAND2 port map( A => n90, B => n91, Z => SUM_23_port);
   U100 : GTECH_NAND2 port map( A => A(23), B => n86, Z => n91);
   U101 : GTECH_NAND2 port map( A => n29, B => n10, Z => n90);
   U102 : GTECH_NAND2 port map( A => n92, B => A(22), Z => n86);
   U103 : GTECH_NOR2 port map( A => n93, B => n44, Z => n92);
   U104 : GTECH_NAND2 port map( A => n27, B => n94, Z => SUM_22_port);
   U105 : GTECH_NAND2 port map( A => A(22), B => n95, Z => n94);
   U106 : GTECH_NOR2 port map( A => n95, B => A(22), Z => n96);
   U107 : GTECH_NAND2 port map( A => A(21), B => n28, Z => n95);
   U108 : GTECH_NAND2 port map( A => n97, B => n98, Z => SUM_21_port);
   U109 : GTECH_NAND2 port map( A => A(21), B => n93, Z => n98);
   U110 : GTECH_NAND2 port map( A => n28, B => n44, Z => n97);
   U111 : GTECH_NAND2 port map( A => n99, B => A(20), Z => n93);
   U112 : GTECH_NOR2 port map( A => n100, B => n43, Z => n99);
   U113 : GTECH_NAND2 port map( A => n25, B => n101, Z => SUM_20_port);
   U114 : GTECH_NAND2 port map( A => A(20), B => n102, Z => n101);
   U115 : GTECH_NOR2 port map( A => n102, B => A(20), Z => n103);
   U116 : GTECH_NAND2 port map( A => A(19), B => n26, Z => n102);
   U117 : GTECH_NAND2 port map( A => n104, B => n105, Z => SUM_1_port);
   U118 : GTECH_NAND2 port map( A => A(1), B => SUM_0_port, Z => n105);
   U119 : GTECH_NAND2 port map( A => A(0), B => n38, Z => n104);
   U120 : GTECH_NAND2 port map( A => n106, B => n107, Z => SUM_19_port);
   U121 : GTECH_NAND2 port map( A => A(19), B => n100, Z => n107);
   U122 : GTECH_NAND2 port map( A => n26, B => n43, Z => n106);
   U123 : GTECH_NAND2 port map( A => n108, B => A(18), Z => n100);
   U124 : GTECH_NOR2 port map( A => n109, B => n41, Z => n108);
   U125 : GTECH_NAND2 port map( A => n23, B => n110, Z => SUM_18_port);
   U126 : GTECH_NAND2 port map( A => A(18), B => n111, Z => n110);
   U127 : GTECH_NOR2 port map( A => n111, B => A(18), Z => n112);
   U128 : GTECH_NAND2 port map( A => A(17), B => n24, Z => n111);
   U129 : GTECH_NAND2 port map( A => n113, B => n114, Z => SUM_17_port);
   U130 : GTECH_NAND2 port map( A => A(17), B => n109, Z => n114);
   U131 : GTECH_NAND2 port map( A => n24, B => n41, Z => n113);
   U132 : GTECH_NAND2 port map( A => n115, B => A(16), Z => n109);
   U133 : GTECH_NOR2 port map( A => n116, B => n42, Z => n115);
   U134 : GTECH_NAND2 port map( A => n21, B => n117, Z => SUM_16_port);
   U135 : GTECH_NAND2 port map( A => A(16), B => n118, Z => n117);
   U136 : GTECH_NOR2 port map( A => n118, B => A(16), Z => n119);
   U137 : GTECH_NAND2 port map( A => A(15), B => n22, Z => n118);
   U138 : GTECH_NAND2 port map( A => n120, B => n121, Z => SUM_15_port);
   U139 : GTECH_NAND2 port map( A => A(15), B => n116, Z => n121);
   U140 : GTECH_NAND2 port map( A => n22, B => n42, Z => n120);
   U141 : GTECH_NAND2 port map( A => n122, B => A(14), Z => n116);
   U142 : GTECH_NOR2 port map( A => n123, B => n39, Z => n122);
   U143 : GTECH_NAND2 port map( A => n19, B => n124, Z => SUM_14_port);
   U144 : GTECH_NAND2 port map( A => A(14), B => n125, Z => n124);
   U145 : GTECH_NOR2 port map( A => n125, B => A(14), Z => n126);
   U146 : GTECH_NAND2 port map( A => A(13), B => n20, Z => n125);
   U147 : GTECH_NAND2 port map( A => n127, B => n128, Z => SUM_13_port);
   U148 : GTECH_NAND2 port map( A => A(13), B => n123, Z => n128);
   U149 : GTECH_NAND2 port map( A => n20, B => n39, Z => n127);
   U150 : GTECH_NAND2 port map( A => n129, B => A(12), Z => n123);
   U151 : GTECH_NOR2 port map( A => n130, B => n40, Z => n129);
   U152 : GTECH_NAND2 port map( A => n17, B => n131, Z => SUM_12_port);
   U153 : GTECH_NAND2 port map( A => A(12), B => n132, Z => n131);
   U154 : GTECH_NOR2 port map( A => n132, B => A(12), Z => n133);
   U155 : GTECH_NAND2 port map( A => A(11), B => n18, Z => n132);
   U156 : GTECH_NAND2 port map( A => n134, B => n135, Z => SUM_11_port);
   U157 : GTECH_NAND2 port map( A => A(11), B => n130, Z => n135);
   U158 : GTECH_NAND2 port map( A => n18, B => n40, Z => n134);
   U159 : GTECH_NAND2 port map( A => n136, B => A(10), Z => n130);
   U160 : GTECH_NOR2 port map( A => n34, B => n47, Z => n136);
   U161 : GTECH_NAND2 port map( A => n15, B => n137, Z => SUM_10_port);
   U162 : GTECH_NAND2 port map( A => A(10), B => n138, Z => n137);
   U163 : GTECH_NOR2 port map( A => n138, B => A(10), Z => n139);
   U164 : GTECH_NAND2 port map( A => n16, B => A(9), Z => n138);
   U165 : GTECH_NAND2 port map( A => n140, B => A(8), Z => n47);
   U166 : GTECH_NOR2 port map( A => n53, B => n33, Z => n140);
   U167 : GTECH_NAND2 port map( A => n141, B => A(6), Z => n53);
   U168 : GTECH_NOR2 port map( A => n59, B => n32, Z => n141);
   U169 : GTECH_NAND2 port map( A => n142, B => A(4), Z => n59);
   U170 : GTECH_NOR2 port map( A => n65, B => n30, Z => n142);
   U171 : GTECH_NAND2 port map( A => n143, B => A(2), Z => n65);
   U172 : GTECH_NOR2 port map( A => SUM_0_port, B => n38, Z => n143);

end SYN_rpl;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_zpu_core.all;

entity zpu_core_DW01_add_7 is

   port( A, B : in std_logic_vector (29 downto 0);  CI : in std_logic;  SUM : 
         out std_logic_vector (29 downto 0);  CO : out std_logic);

end zpu_core_DW01_add_7;

architecture SYN_rpl of zpu_core_DW01_add_7 is

   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   signal SUM_29_port, SUM_28_port, SUM_27_port, SUM_26_port, SUM_25_port, 
      SUM_24_port, SUM_23_port, SUM_22_port, SUM_21_port, SUM_20_port, 
      SUM_19_port, SUM_18_port, SUM_17_port, SUM_16_port, SUM_15_port, 
      SUM_14_port, SUM_13_port, SUM_12_port, SUM_11_port, SUM_10_port, 
      SUM_9_port, SUM_8_port, SUM_7_port, SUM_6_port, SUM_5_port, SUM_4_port, 
      SUM_3_port, SUM_2_port, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12
      , n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, 
      n27, n28, n29, n30, n31, n32, SUM_1_port, n34, n35, n36, n37, n38, n39, 
      n40, n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54
      , n55, n56, n57, n58, n59, n60, n61, n62, n63, n64, n65, n66, n67, n68, 
      n69, n70, n71, n72, n73, n74, n75, n76, n77, n78, n79, n80, n81, n82, n83
      , n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94, n95, n96, n97, 
      n98, n99, n100, n101, n102, n103, n104, n105, n106, n107, n108, n109, 
      n110, n111, n112, n113, n114, n115, n116, n117, n118, n119, n120, n121, 
      n122, n123, n124, n125, n126, n127, n128, n129, n130, n131, n132, n133, 
      n134, n135, n136, n137, n138 : std_logic;

begin
   SUM <= ( SUM_29_port, SUM_28_port, SUM_27_port, SUM_26_port, SUM_25_port, 
      SUM_24_port, SUM_23_port, SUM_22_port, SUM_21_port, SUM_20_port, 
      SUM_19_port, SUM_18_port, SUM_17_port, SUM_16_port, SUM_15_port, 
      SUM_14_port, SUM_13_port, SUM_12_port, SUM_11_port, SUM_10_port, 
      SUM_9_port, SUM_8_port, SUM_7_port, SUM_6_port, SUM_5_port, SUM_4_port, 
      SUM_3_port, SUM_2_port, SUM_1_port, A(0) );
   
   U1 : GTECH_NOT port map( A => n68, Z => n1);
   U2 : GTECH_NOT port map( A => A(28), Z => n2);
   U3 : GTECH_NOT port map( A => n71, Z => n3);
   U4 : GTECH_NOT port map( A => n76, Z => n4);
   U5 : GTECH_NOT port map( A => A(26), Z => n5);
   U6 : GTECH_NOT port map( A => n73, Z => n6);
   U7 : GTECH_NOT port map( A => n83, Z => n7);
   U8 : GTECH_NOT port map( A => A(24), Z => n8);
   U9 : GTECH_NOT port map( A => n80, Z => n9);
   U10 : GTECH_NOT port map( A => n90, Z => n10);
   U11 : GTECH_NOT port map( A => n63, Z => n11);
   U12 : GTECH_NOT port map( A => n57, Z => n12);
   U13 : GTECH_NOT port map( A => n60, Z => n13);
   U14 : GTECH_NOT port map( A => n51, Z => n14);
   U15 : GTECH_NOT port map( A => n54, Z => n15);
   U16 : GTECH_NOT port map( A => n45, Z => n16);
   U17 : GTECH_NOT port map( A => n48, Z => n17);
   U18 : GTECH_NOT port map( A => n132, Z => n18);
   U19 : GTECH_NOT port map( A => n129, Z => n19);
   U20 : GTECH_NOT port map( A => n125, Z => n20);
   U21 : GTECH_NOT port map( A => n122, Z => n21);
   U22 : GTECH_NOT port map( A => n118, Z => n22);
   U23 : GTECH_NOT port map( A => n115, Z => n23);
   U24 : GTECH_NOT port map( A => n111, Z => n24);
   U25 : GTECH_NOT port map( A => n108, Z => n25);
   U26 : GTECH_NOT port map( A => n104, Z => n26);
   U27 : GTECH_NOT port map( A => n101, Z => n27);
   U28 : GTECH_NOT port map( A => n97, Z => n28);
   U29 : GTECH_NOT port map( A => n94, Z => n29);
   U30 : GTECH_NOT port map( A => n87, Z => n30);
   U31 : GTECH_NOT port map( A => A(10), Z => n31);
   U32 : GTECH_NOT port map( A => A(12), Z => n32);
   U33 : GTECH_NOT port map( A => A(1), Z => SUM_1_port);
   U34 : GTECH_NOT port map( A => A(2), Z => n34);
   U35 : GTECH_NOT port map( A => A(4), Z => n35);
   U36 : GTECH_NOT port map( A => A(6), Z => n36);
   U37 : GTECH_NOT port map( A => A(8), Z => n37);
   U38 : GTECH_NOT port map( A => A(18), Z => n38);
   U39 : GTECH_NOT port map( A => A(16), Z => n39);
   U40 : GTECH_NOT port map( A => A(14), Z => n40);
   U41 : GTECH_NOT port map( A => A(20), Z => n41);
   U42 : GTECH_NOT port map( A => A(22), Z => n42);
   U43 : GTECH_NAND2 port map( A => n16, B => n43, Z => SUM_9_port);
   U44 : GTECH_NAND2 port map( A => A(9), B => n44, Z => n43);
   U45 : GTECH_NOR2 port map( A => n44, B => A(9), Z => n45);
   U46 : GTECH_NAND2 port map( A => A(8), B => n17, Z => n44);
   U47 : GTECH_NAND2 port map( A => n46, B => n47, Z => SUM_8_port);
   U48 : GTECH_NAND2 port map( A => A(8), B => n48, Z => n47);
   U49 : GTECH_NAND2 port map( A => n17, B => n37, Z => n46);
   U50 : GTECH_NAND2 port map( A => n14, B => n49, Z => SUM_7_port);
   U51 : GTECH_NAND2 port map( A => A(7), B => n50, Z => n49);
   U52 : GTECH_NOR2 port map( A => n50, B => A(7), Z => n51);
   U53 : GTECH_NAND2 port map( A => A(6), B => n15, Z => n50);
   U54 : GTECH_NAND2 port map( A => n52, B => n53, Z => SUM_6_port);
   U55 : GTECH_NAND2 port map( A => A(6), B => n54, Z => n53);
   U56 : GTECH_NAND2 port map( A => n15, B => n36, Z => n52);
   U57 : GTECH_NAND2 port map( A => n12, B => n55, Z => SUM_5_port);
   U58 : GTECH_NAND2 port map( A => A(5), B => n56, Z => n55);
   U59 : GTECH_NOR2 port map( A => n56, B => A(5), Z => n57);
   U60 : GTECH_NAND2 port map( A => A(4), B => n13, Z => n56);
   U61 : GTECH_NAND2 port map( A => n58, B => n59, Z => SUM_4_port);
   U62 : GTECH_NAND2 port map( A => A(4), B => n60, Z => n59);
   U63 : GTECH_NAND2 port map( A => n13, B => n35, Z => n58);
   U64 : GTECH_NAND2 port map( A => n11, B => n61, Z => SUM_3_port);
   U65 : GTECH_NAND2 port map( A => A(3), B => n62, Z => n61);
   U66 : GTECH_NOR2 port map( A => n62, B => A(3), Z => n63);
   U67 : GTECH_NAND2 port map( A => A(2), B => A(1), Z => n62);
   U68 : GTECH_NAND2 port map( A => n64, B => n65, Z => SUM_2_port);
   U69 : GTECH_NAND2 port map( A => A(2), B => SUM_1_port, Z => n65);
   U70 : GTECH_NAND2 port map( A => A(1), B => n34, Z => n64);
   U71 : GTECH_NAND2 port map( A => n1, B => n66, Z => SUM_29_port);
   U72 : GTECH_NAND2 port map( A => A(29), B => n67, Z => n66);
   U73 : GTECH_NOR2 port map( A => n67, B => A(29), Z => n68);
   U74 : GTECH_NAND2 port map( A => A(28), B => n3, Z => n67);
   U75 : GTECH_NAND2 port map( A => n69, B => n70, Z => SUM_28_port);
   U76 : GTECH_NAND2 port map( A => A(28), B => n71, Z => n70);
   U77 : GTECH_NAND2 port map( A => n3, B => n2, Z => n69);
   U78 : GTECH_NAND2 port map( A => n72, B => A(27), Z => n71);
   U79 : GTECH_NOR2 port map( A => n73, B => n5, Z => n72);
   U80 : GTECH_NAND2 port map( A => n4, B => n74, Z => SUM_27_port);
   U81 : GTECH_NAND2 port map( A => A(27), B => n75, Z => n74);
   U82 : GTECH_NOR2 port map( A => n75, B => A(27), Z => n76);
   U83 : GTECH_NAND2 port map( A => A(26), B => n6, Z => n75);
   U84 : GTECH_NAND2 port map( A => n77, B => n78, Z => SUM_26_port);
   U85 : GTECH_NAND2 port map( A => A(26), B => n73, Z => n78);
   U86 : GTECH_NAND2 port map( A => n6, B => n5, Z => n77);
   U87 : GTECH_NAND2 port map( A => n79, B => A(25), Z => n73);
   U88 : GTECH_NOR2 port map( A => n80, B => n8, Z => n79);
   U89 : GTECH_NAND2 port map( A => n7, B => n81, Z => SUM_25_port);
   U90 : GTECH_NAND2 port map( A => A(25), B => n82, Z => n81);
   U91 : GTECH_NOR2 port map( A => n82, B => A(25), Z => n83);
   U92 : GTECH_NAND2 port map( A => A(24), B => n9, Z => n82);
   U93 : GTECH_NAND2 port map( A => n84, B => n85, Z => SUM_24_port);
   U94 : GTECH_NAND2 port map( A => A(24), B => n80, Z => n85);
   U95 : GTECH_NAND2 port map( A => n9, B => n8, Z => n84);
   U96 : GTECH_NAND2 port map( A => n86, B => A(23), Z => n80);
   U97 : GTECH_NOR2 port map( A => n87, B => n42, Z => n86);
   U98 : GTECH_NAND2 port map( A => n10, B => n88, Z => SUM_23_port);
   U99 : GTECH_NAND2 port map( A => A(23), B => n89, Z => n88);
   U100 : GTECH_NOR2 port map( A => n89, B => A(23), Z => n90);
   U101 : GTECH_NAND2 port map( A => A(22), B => n30, Z => n89);
   U102 : GTECH_NAND2 port map( A => n91, B => n92, Z => SUM_22_port);
   U103 : GTECH_NAND2 port map( A => A(22), B => n87, Z => n92);
   U104 : GTECH_NAND2 port map( A => n30, B => n42, Z => n91);
   U105 : GTECH_NAND2 port map( A => n93, B => A(21), Z => n87);
   U106 : GTECH_NOR2 port map( A => n94, B => n41, Z => n93);
   U107 : GTECH_NAND2 port map( A => n28, B => n95, Z => SUM_21_port);
   U108 : GTECH_NAND2 port map( A => A(21), B => n96, Z => n95);
   U109 : GTECH_NOR2 port map( A => n96, B => A(21), Z => n97);
   U110 : GTECH_NAND2 port map( A => A(20), B => n29, Z => n96);
   U111 : GTECH_NAND2 port map( A => n98, B => n99, Z => SUM_20_port);
   U112 : GTECH_NAND2 port map( A => A(20), B => n94, Z => n99);
   U113 : GTECH_NAND2 port map( A => n29, B => n41, Z => n98);
   U114 : GTECH_NAND2 port map( A => n100, B => A(19), Z => n94);
   U115 : GTECH_NOR2 port map( A => n101, B => n38, Z => n100);
   U116 : GTECH_NAND2 port map( A => n26, B => n102, Z => SUM_19_port);
   U117 : GTECH_NAND2 port map( A => A(19), B => n103, Z => n102);
   U118 : GTECH_NOR2 port map( A => n103, B => A(19), Z => n104);
   U119 : GTECH_NAND2 port map( A => A(18), B => n27, Z => n103);
   U120 : GTECH_NAND2 port map( A => n105, B => n106, Z => SUM_18_port);
   U121 : GTECH_NAND2 port map( A => A(18), B => n101, Z => n106);
   U122 : GTECH_NAND2 port map( A => n27, B => n38, Z => n105);
   U123 : GTECH_NAND2 port map( A => n107, B => A(17), Z => n101);
   U124 : GTECH_NOR2 port map( A => n108, B => n39, Z => n107);
   U125 : GTECH_NAND2 port map( A => n24, B => n109, Z => SUM_17_port);
   U126 : GTECH_NAND2 port map( A => A(17), B => n110, Z => n109);
   U127 : GTECH_NOR2 port map( A => n110, B => A(17), Z => n111);
   U128 : GTECH_NAND2 port map( A => A(16), B => n25, Z => n110);
   U129 : GTECH_NAND2 port map( A => n112, B => n113, Z => SUM_16_port);
   U130 : GTECH_NAND2 port map( A => A(16), B => n108, Z => n113);
   U131 : GTECH_NAND2 port map( A => n25, B => n39, Z => n112);
   U132 : GTECH_NAND2 port map( A => n114, B => A(15), Z => n108);
   U133 : GTECH_NOR2 port map( A => n115, B => n40, Z => n114);
   U134 : GTECH_NAND2 port map( A => n22, B => n116, Z => SUM_15_port);
   U135 : GTECH_NAND2 port map( A => A(15), B => n117, Z => n116);
   U136 : GTECH_NOR2 port map( A => n117, B => A(15), Z => n118);
   U137 : GTECH_NAND2 port map( A => A(14), B => n23, Z => n117);
   U138 : GTECH_NAND2 port map( A => n119, B => n120, Z => SUM_14_port);
   U139 : GTECH_NAND2 port map( A => A(14), B => n115, Z => n120);
   U140 : GTECH_NAND2 port map( A => n23, B => n40, Z => n119);
   U141 : GTECH_NAND2 port map( A => n121, B => A(13), Z => n115);
   U142 : GTECH_NOR2 port map( A => n122, B => n32, Z => n121);
   U143 : GTECH_NAND2 port map( A => n20, B => n123, Z => SUM_13_port);
   U144 : GTECH_NAND2 port map( A => A(13), B => n124, Z => n123);
   U145 : GTECH_NOR2 port map( A => n124, B => A(13), Z => n125);
   U146 : GTECH_NAND2 port map( A => A(12), B => n21, Z => n124);
   U147 : GTECH_NAND2 port map( A => n126, B => n127, Z => SUM_12_port);
   U148 : GTECH_NAND2 port map( A => A(12), B => n122, Z => n127);
   U149 : GTECH_NAND2 port map( A => n21, B => n32, Z => n126);
   U150 : GTECH_NAND2 port map( A => n128, B => A(11), Z => n122);
   U151 : GTECH_NOR2 port map( A => n129, B => n31, Z => n128);
   U152 : GTECH_NAND2 port map( A => n18, B => n130, Z => SUM_11_port);
   U153 : GTECH_NAND2 port map( A => A(11), B => n131, Z => n130);
   U154 : GTECH_NOR2 port map( A => n131, B => A(11), Z => n132);
   U155 : GTECH_NAND2 port map( A => A(10), B => n19, Z => n131);
   U156 : GTECH_NAND2 port map( A => n133, B => n134, Z => SUM_10_port);
   U157 : GTECH_NAND2 port map( A => A(10), B => n129, Z => n134);
   U158 : GTECH_NAND2 port map( A => n19, B => n31, Z => n133);
   U159 : GTECH_NAND2 port map( A => n135, B => A(9), Z => n129);
   U160 : GTECH_NOR2 port map( A => n48, B => n37, Z => n135);
   U161 : GTECH_NAND2 port map( A => n136, B => A(7), Z => n48);
   U162 : GTECH_NOR2 port map( A => n54, B => n36, Z => n136);
   U163 : GTECH_NAND2 port map( A => n137, B => A(5), Z => n54);
   U164 : GTECH_NOR2 port map( A => n60, B => n35, Z => n137);
   U165 : GTECH_NAND2 port map( A => n138, B => A(3), Z => n60);
   U166 : GTECH_NOR2 port map( A => SUM_1_port, B => n34, Z => n138);

end SYN_rpl;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_zpu_core.all;

entity zpu_core_DW01_dec_0 is

   port( A : in std_logic_vector (29 downto 0);  SUM : out std_logic_vector (29
         downto 0));

end zpu_core_DW01_dec_0;

architecture SYN_rpl of zpu_core_DW01_dec_0 is

   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   signal SUM_29_port, SUM_28_port, SUM_27_port, SUM_26_port, SUM_25_port, 
      SUM_24_port, SUM_23_port, SUM_22_port, SUM_21_port, SUM_20_port, 
      SUM_19_port, SUM_18_port, SUM_17_port, SUM_16_port, SUM_15_port, 
      SUM_14_port, SUM_13_port, SUM_12_port, SUM_11_port, SUM_10_port, 
      SUM_9_port, SUM_8_port, SUM_7_port, SUM_6_port, SUM_5_port, SUM_4_port, 
      SUM_3_port, SUM_2_port, SUM_1_port, n1, n2, n3, n4, n5, n6, n7, n8, n9, 
      n10, n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, 
      SUM_0_port, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, 
      n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47, n48, n49, n50
      , n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61, n62, n63, n64, 
      n65, n66, n67, n68, n69, n70, n71, n72, n73, n74, n75, n76, n77, n78, n79
      , n80, n81, n82, n83, n84, n85, n86, n87, n88 : std_logic;

begin
   SUM <= ( SUM_29_port, SUM_28_port, SUM_27_port, SUM_26_port, SUM_25_port, 
      SUM_24_port, SUM_23_port, SUM_22_port, SUM_21_port, SUM_20_port, 
      SUM_19_port, SUM_18_port, SUM_17_port, SUM_16_port, SUM_15_port, 
      SUM_14_port, SUM_13_port, SUM_12_port, SUM_11_port, SUM_10_port, 
      SUM_9_port, SUM_8_port, SUM_7_port, SUM_6_port, SUM_5_port, SUM_4_port, 
      SUM_3_port, SUM_2_port, SUM_1_port, SUM_0_port );
   
   U1 : GTECH_NOT port map( A => n50, Z => n1);
   U2 : GTECH_NOT port map( A => A(28), Z => n2);
   U3 : GTECH_NOT port map( A => n52, Z => n3);
   U4 : GTECH_NOT port map( A => n56, Z => n4);
   U5 : GTECH_NOT port map( A => A(25), Z => n5);
   U6 : GTECH_NOT port map( A => n58, Z => n6);
   U7 : GTECH_NOT port map( A => A(23), Z => n7);
   U8 : GTECH_NOT port map( A => n43, Z => n8);
   U9 : GTECH_NOT port map( A => n39, Z => n9);
   U10 : GTECH_NOT port map( A => n35, Z => n10);
   U11 : GTECH_NOT port map( A => n87, Z => n11);
   U12 : GTECH_NOT port map( A => n83, Z => n12);
   U13 : GTECH_NOT port map( A => n79, Z => n13);
   U14 : GTECH_NOT port map( A => n75, Z => n14);
   U15 : GTECH_NOT port map( A => n71, Z => n15);
   U16 : GTECH_NOT port map( A => n66, Z => n16);
   U17 : GTECH_NOT port map( A => n62, Z => n17);
   U18 : GTECH_NOT port map( A => A(3), Z => n18);
   U19 : GTECH_NOT port map( A => A(5), Z => n19);
   U20 : GTECH_NOT port map( A => A(7), Z => n20);
   U21 : GTECH_NOT port map( A => A(9), Z => n21);
   U22 : GTECH_NOT port map( A => n47, Z => n22);
   U23 : GTECH_NOT port map( A => A(0), Z => SUM_0_port);
   U24 : GTECH_NOT port map( A => A(1), Z => n24);
   U25 : GTECH_NOT port map( A => A(13), Z => n25);
   U26 : GTECH_NOT port map( A => A(11), Z => n26);
   U27 : GTECH_NOT port map( A => A(17), Z => n27);
   U28 : GTECH_NOT port map( A => A(15), Z => n28);
   U29 : GTECH_NOT port map( A => A(19), Z => n29);
   U30 : GTECH_NOT port map( A => A(21), Z => n30);
   U31 : GTECH_NAND2 port map( A => n31, B => n32, Z => SUM_9_port);
   U32 : GTECH_NAND2 port map( A => A(9), B => n10, Z => n32);
   U33 : GTECH_NAND2 port map( A => n10, B => n33, Z => SUM_8_port);
   U34 : GTECH_NAND2 port map( A => A(8), B => n34, Z => n33);
   U35 : GTECH_NAND2 port map( A => n34, B => n36, Z => SUM_7_port);
   U36 : GTECH_NAND2 port map( A => A(7), B => n9, Z => n36);
   U37 : GTECH_NAND2 port map( A => n9, B => n37, Z => SUM_6_port);
   U38 : GTECH_NAND2 port map( A => A(6), B => n38, Z => n37);
   U39 : GTECH_NAND2 port map( A => n38, B => n40, Z => SUM_5_port);
   U40 : GTECH_NAND2 port map( A => A(5), B => n8, Z => n40);
   U41 : GTECH_NAND2 port map( A => n8, B => n41, Z => SUM_4_port);
   U42 : GTECH_NAND2 port map( A => A(4), B => n42, Z => n41);
   U43 : GTECH_NAND2 port map( A => n42, B => n44, Z => SUM_3_port);
   U44 : GTECH_NAND2 port map( A => A(3), B => n22, Z => n44);
   U45 : GTECH_NAND2 port map( A => n22, B => n45, Z => SUM_2_port);
   U46 : GTECH_NAND2 port map( A => A(2), B => n46, Z => n45);
   U47 : GTECH_NAND2 port map( A => n1, B => n48, Z => SUM_29_port);
   U48 : GTECH_NAND2 port map( A => A(29), B => n49, Z => n48);
   U49 : GTECH_NOR2 port map( A => n49, B => A(29), Z => n50);
   U50 : GTECH_NAND2 port map( A => n49, B => n51, Z => SUM_28_port);
   U51 : GTECH_NAND2 port map( A => A(28), B => n3, Z => n51);
   U52 : GTECH_NAND2 port map( A => n52, B => n2, Z => n49);
   U53 : GTECH_NAND2 port map( A => n3, B => n53, Z => SUM_27_port);
   U54 : GTECH_NAND2 port map( A => A(27), B => n4, Z => n53);
   U55 : GTECH_NOR2 port map( A => n4, B => A(27), Z => n52);
   U56 : GTECH_NAND2 port map( A => n4, B => n54, Z => SUM_26_port);
   U57 : GTECH_NAND2 port map( A => A(26), B => n55, Z => n54);
   U58 : GTECH_NOR2 port map( A => n55, B => A(26), Z => n56);
   U59 : GTECH_NAND2 port map( A => n55, B => n57, Z => SUM_25_port);
   U60 : GTECH_NAND2 port map( A => A(25), B => n6, Z => n57);
   U61 : GTECH_NAND2 port map( A => n58, B => n5, Z => n55);
   U62 : GTECH_NAND2 port map( A => n6, B => n59, Z => SUM_24_port);
   U63 : GTECH_NAND2 port map( A => A(24), B => n60, Z => n59);
   U64 : GTECH_NOR2 port map( A => n60, B => A(24), Z => n58);
   U65 : GTECH_NAND2 port map( A => n60, B => n61, Z => SUM_23_port);
   U66 : GTECH_NAND2 port map( A => A(23), B => n17, Z => n61);
   U67 : GTECH_NAND2 port map( A => n62, B => n7, Z => n60);
   U68 : GTECH_NAND2 port map( A => n17, B => n63, Z => SUM_22_port);
   U69 : GTECH_NAND2 port map( A => A(22), B => n64, Z => n63);
   U70 : GTECH_NOR2 port map( A => n64, B => A(22), Z => n62);
   U71 : GTECH_NAND2 port map( A => n64, B => n65, Z => SUM_21_port);
   U72 : GTECH_NAND2 port map( A => A(21), B => n16, Z => n65);
   U73 : GTECH_NAND2 port map( A => n66, B => n30, Z => n64);
   U74 : GTECH_NAND2 port map( A => n16, B => n67, Z => SUM_20_port);
   U75 : GTECH_NAND2 port map( A => A(20), B => n68, Z => n67);
   U76 : GTECH_NOR2 port map( A => n68, B => A(20), Z => n66);
   U77 : GTECH_NAND2 port map( A => n46, B => n69, Z => SUM_1_port);
   U78 : GTECH_NAND2 port map( A => A(1), B => A(0), Z => n69);
   U79 : GTECH_NAND2 port map( A => n68, B => n70, Z => SUM_19_port);
   U80 : GTECH_NAND2 port map( A => A(19), B => n15, Z => n70);
   U81 : GTECH_NAND2 port map( A => n71, B => n29, Z => n68);
   U82 : GTECH_NAND2 port map( A => n15, B => n72, Z => SUM_18_port);
   U83 : GTECH_NAND2 port map( A => A(18), B => n73, Z => n72);
   U84 : GTECH_NOR2 port map( A => n73, B => A(18), Z => n71);
   U85 : GTECH_NAND2 port map( A => n73, B => n74, Z => SUM_17_port);
   U86 : GTECH_NAND2 port map( A => A(17), B => n14, Z => n74);
   U87 : GTECH_NAND2 port map( A => n75, B => n27, Z => n73);
   U88 : GTECH_NAND2 port map( A => n14, B => n76, Z => SUM_16_port);
   U89 : GTECH_NAND2 port map( A => A(16), B => n77, Z => n76);
   U90 : GTECH_NOR2 port map( A => n77, B => A(16), Z => n75);
   U91 : GTECH_NAND2 port map( A => n77, B => n78, Z => SUM_15_port);
   U92 : GTECH_NAND2 port map( A => A(15), B => n13, Z => n78);
   U93 : GTECH_NAND2 port map( A => n79, B => n28, Z => n77);
   U94 : GTECH_NAND2 port map( A => n13, B => n80, Z => SUM_14_port);
   U95 : GTECH_NAND2 port map( A => A(14), B => n81, Z => n80);
   U96 : GTECH_NOR2 port map( A => n81, B => A(14), Z => n79);
   U97 : GTECH_NAND2 port map( A => n81, B => n82, Z => SUM_13_port);
   U98 : GTECH_NAND2 port map( A => A(13), B => n12, Z => n82);
   U99 : GTECH_NAND2 port map( A => n83, B => n25, Z => n81);
   U100 : GTECH_NAND2 port map( A => n12, B => n84, Z => SUM_12_port);
   U101 : GTECH_NAND2 port map( A => A(12), B => n85, Z => n84);
   U102 : GTECH_NOR2 port map( A => n85, B => A(12), Z => n83);
   U103 : GTECH_NAND2 port map( A => n85, B => n86, Z => SUM_11_port);
   U104 : GTECH_NAND2 port map( A => A(11), B => n11, Z => n86);
   U105 : GTECH_NAND2 port map( A => n87, B => n26, Z => n85);
   U106 : GTECH_NAND2 port map( A => n11, B => n88, Z => SUM_10_port);
   U107 : GTECH_NAND2 port map( A => A(10), B => n31, Z => n88);
   U108 : GTECH_NOR2 port map( A => n31, B => A(10), Z => n87);
   U109 : GTECH_NAND2 port map( A => n35, B => n21, Z => n31);
   U110 : GTECH_NOR2 port map( A => n34, B => A(8), Z => n35);
   U111 : GTECH_NAND2 port map( A => n39, B => n20, Z => n34);
   U112 : GTECH_NOR2 port map( A => n38, B => A(6), Z => n39);
   U113 : GTECH_NAND2 port map( A => n43, B => n19, Z => n38);
   U114 : GTECH_NOR2 port map( A => n42, B => A(4), Z => n43);
   U115 : GTECH_NAND2 port map( A => n47, B => n18, Z => n42);
   U116 : GTECH_NOR2 port map( A => n46, B => A(2), Z => n47);
   U117 : GTECH_NAND2 port map( A => n24, B => SUM_0_port, Z => n46);

end SYN_rpl;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_zpu_core.all;

entity zpu_core_DW02_mult_0 is

   port( A, B : in std_logic_vector (31 downto 0);  TC : in std_logic;  PRODUCT
         : out std_logic_vector (63 downto 0));

end zpu_core_DW02_mult_0;

architecture SYN_csa of zpu_core_DW02_mult_0 is

   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   signal n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, 
      n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32
      , n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, 
      n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61
      , n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n73, n74, n75, 
      n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86, n87, n88, n89, n90
      , n91, n92, n93, n94, n95, n96, n97, n98, n99, n100, n101, n102, n103, 
      n104, n105, n106, n107, n108, n109, n110, n111, n112, n113, n114, n115, 
      n116, n117, n118, n119, n120, n121, n122, n123, n124, n125, n126, n127, 
      n128, n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, n139, 
      n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150, n151, 
      n152, n153, n154, n155, n156, n157, n158, n159, n160, n161, n162, n163, 
      n164, n165, n166, n167, n168, n169, n170, n171, n172, n173, n174, n175, 
      n176, n177, n178, n179, n180, n181, n182, n183, n184, n185, n186, n187, 
      n188, n189, n190, n191, n192, n193, n194, n195, n196, n197, n198, n199, 
      n200, n201, n202, n203, n204, n205, n206, n207, n208, n209, n210, n211, 
      n212, n213, n214, n215, n216, n217, n218, n219, n220, n221, n222, n223, 
      n224, n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235, 
      n236, n237, n238, n239, n240, n241, n242, n243, n244, n245, n246, n247, 
      n248, n249, n250, n251, n252, n253, n254, n255, n256, n257, n258, n259, 
      n260, n261, n262, n263, n264, n265, n266, n267, n268, n269, n270, n271, 
      n272, n273, n274, n275, n276, n277, n278, n279, n280, n281, n282, n283, 
      n284, n285, n286, n287, n288, n289, n290, n291, n292, n293, n294, n295, 
      n296, n297, n298, n299, n300, n301, n302, n303, n304, n305, n306, n307, 
      n308, n309, n310, n311, n312, n313, n314, n315, n316, n317, n318, n319, 
      n320, n321, n322, n323, n324, n325, n326, n327, n328, n329, n330, n331, 
      n332, n333, n334, n335, n336, n337, n338, n339, n340, n341, n342, n343, 
      n344, n345, n346, n347, n348, n349, n350, n351, n352, n353, n354, n355, 
      n356, n357, n358, n359, n360, n361, n362, n363, n364, n365, n366, n367, 
      n368, n369, n370, n371, n372, n373, n374, n375, n376, n377, n378, n379, 
      n380, n381, n382, n383, n384, n385, n386, n387, n388, n389, n390, n391, 
      n392, n393, n394, n395, n396, n397, n398, n399, n400, n401, n402, n403, 
      n404, n405, n406, n407, n408, n409, n410, n411, n412, n413, n414, n415, 
      n416, n417, n418, n419, n420, n421, n422, n423, n424, n425, n426, n427, 
      n428, n429, n430, n431, n432, n433, n434, n435, n436, n437, n438, n439, 
      n440, n441, n442, n443, n444, n445, n446, n447, n448, n449, n450, n451, 
      n452, n453, n454, n455, n456, n457, n458, n459, n460, n461, n462, n463, 
      n464, n465, n466, n467, n468, n469, n470, n471, n472, n473, n474, n475, 
      n476, n477, n478, n479, n480, n481, n482, n483, n484, n485, n486, n487, 
      n488, n489, n490, n491, n492, n493, n494, n495, n496, n497, n498, n499, 
      n500, n501, n502, n503, n504, n505, n506, n507, n508, n509, n510, n511, 
      n512, n513, n514, n515, n516, n517, n518, n519, n520, n521, n522, n523, 
      n524, n525, n526, n527, n528, n529, n530, n531, n532, n533, n534, n535, 
      n536, n537, n538, n539, n540, n541, n542, n543, n544, n545, n546, n547, 
      n548, n549, n550, n551, n552, n553, n554, n555, n556, n557, n558, n559, 
      n560, n561, n562, n563, n564, n565, n566, n567, n568, n569, n570, n571, 
      n572, n573, n574, n575, n576, n577, n578, n579, n580, n581, n582, n583, 
      n584, n585, n586, n587, n588, n589, n590, n591, n592, n593, n594, n595, 
      n596, n597, n598, n599, n600, n601, n602, n603, n604, n605, n606, n607, 
      n608, n609, n610, n611, n612, n613, n614, n615, n616, n617, n618, n619, 
      n620, n621, n622, n623, n624, n625, n626, n627, n628, n629, n630, n631, 
      n632, n633, n634, n635, n636, n637, n638, n639, n640, n641, n642, n643, 
      n644, n645, n646, n647, n648, n649, n650, n651, n652, n653, n654, n655, 
      n656, n657, n658, n659, n660, n661, n662, n663, n664, n665, n666, n667, 
      n668, n669, n670, n671, n672, n673, n674, n675, n676, n677, n678, n679, 
      n680, n681, n682, n683, n684, n685, n686, n687, n688, n689, n690, n691, 
      n692, n693, n694, n695, n696, n697, n698, n699, n700, n701, n702, n703, 
      n704, n705, n706, n707, n708, n709, n710, n711, n712, n713, n714, n715, 
      n716, n717, n718, n719, n720, n721, n722, n723, n724, n725, n726, n727, 
      n728, n729, n730, n731, n732, n733, n734, n735, n736, n737, n738, n739, 
      n740, n741, n742, n743, n744, n745, n746, n747, n748, n749, n750, n751, 
      n752, n753, n754, n755, n756, n757, n758, n759, n760, n761, n762, n763, 
      n764, n765, n766, n767, n768, n769, n770, n771, n772, n773, n774, n775, 
      n776, n777, n778, n779, n780, n781, n782, n783, n784, n785, n786, n787, 
      n788, n789, n790, n791, n792, n793, n794, n795, n796, n797, n798, n799, 
      n800, n801, n802, n803, n804, n805, n806, n807, n808, n809, n810, n811, 
      n812, n813, n814, n815, n816, n817, n818, n819, n820, n821, n822, n823, 
      n824, n825, n826, n827, n828, n829, n830, n831, n832, n833, n834, n835, 
      n836, n837, n838, n839, n840, n841, n842, n843, n844, n845, n846, n847, 
      n848, n849, n850, n851, n852, n853, n854, n855, n856, n857, n858, n859, 
      n860, n861, n862, n863, n864, n865, n866, n867, n868, n869, n870, n871, 
      n872, n873, n874, n875, n876, n877, n878, n879, n880, n881, n882, n883, 
      n884, n885, n886, n887, n888, n889, n890, n891, n892, n893, n894, n895, 
      n896, n897, n898, n899, n900, n901, n902, n903, n904, n905, n906, n907, 
      n908, n909, n910, n911, n912, n913, n914, n915, n916, n917, n918, n919, 
      n920, n921, n922, n923, n924, n925, n926, n927, n928, n929, n930, n931, 
      n932, n933, n934, n935, n936, n937, n938, n939, n940, n941, n942, n943, 
      n944, n945, n946, n947, n948, n949, n950, n951, n952, n953, n954, n955, 
      n956, n957, n958, n959, n960, n961, n962, n963, n964, n965, n966, n967, 
      n968, n969, n970, n971, n972, n973, n974, n975, n976, n977, n978, n979, 
      n980, n981, n982, n983, n984, n985, n986, n987, n988, n989, n990, n991, 
      n992, n993, n994, n995, n996, n997, n998, n999, n1000, n1001, n1002, 
      n1003, n1004, n1005, n1006, n1007, n1008, n1009, n1010, n1011, n1012, 
      n1013, n1014, n1015, n1016, n1017, n1018, n1019, n1020, n1021, n1022, 
      n1023, n1024, n1025, n1026, n1027, n1028, n1029, n1030, n1031, n1032, 
      n1033, n1034, n1035, n1036, n1037, n1038, n1039, n1040, n1041, n1042, 
      n1043, n1044, n1045, n1046, n1047, n1048, n1049, n1050, n1051, n1052, 
      n1053, n1054, n1055, n1056, n1057, n1058, n1059, n1060, n1061, n1062, 
      n1063, n1064, n1065, n1066, n1067, n1068, n1069, n1070, n1071, n1072, 
      n1073, n1074, n1075, n1076, n1077, n1078, n1079, n1080, n1081, n1082, 
      n1083, n1084, n1085, n1086, n1087, n1088, n1089, n1090, n1091, n1092, 
      n1093, n1094, n1095, n1096, n1097, n1098, n1099, n1100, n1101, n1102, 
      n1103, n1104, n1105, n1106, n1107, n1108, n1109, n1110, n1111, n1112, 
      n1113, n1114, n1115, n1116, n1117, n1118, n1119, n1120, n1121, n1122, 
      n1123, n1124, n1125, n1126, n1127, n1128, n1129, n1130, n1131, n1132, 
      n1133, n1134, n1135, n1136, n1137, n1138, n1139, n1140, n1141, n1142, 
      n1143, n1144, n1145, n1146, n1147, n1148, n1149, n1150, n1151, n1152, 
      n1153, n1154, n1155, n1156, n1157, n1158, n1159, n1160, n1161, n1162, 
      n1163, n1164, n1165, n1166, n1167, n1168, n1169, n1170, n1171, n1172, 
      n1173, n1174, n1175, n1176, n1177, n1178, n1179, n1180, n1181, n1182, 
      n1183, n1184, n1185, n1186, n1187, n1188, n1189, n1190, n1191, n1192, 
      n1193, n1194, n1195, n1196, n1197, n1198, n1199, n1200, n1201, n1202, 
      n1203, n1204, n1205, n1206, n1207, n1208, n1209, n1210, n1211, n1212, 
      n1213, n1214, n1215, n1216, n1217, n1218, n1219, n1220, n1221, n1222, 
      n1223, n1224, n1225, n1226, n1227, n1228, n1229, n1230, n1231, n1232, 
      n1233, n1234, n1235, n1236, n1237, n1238, n1239, n1240, n1241, n1242, 
      n1243, n1244, n1245, n1246, n1247, n1248, n1249, n1250, n1251, n1252, 
      n1253, n1254, n1255, n1256, n1257, n1258, n1259, n1260, n1261, n1262, 
      n1263, n1264, n1265, n1266, n1267, n1268, n1269, n1270, n1271, n1272, 
      n1273, n1274, n1275, n1276, n1277, n1278, n1279, n1280, n1281, n1282, 
      n1283, n1284, n1285, n1286, n1287, n1288, n1289, n1290, n1291, n1292, 
      n1293, n1294, n1295, n1296, n1297, n1298, n1299, n1300, n1301, n1302, 
      n1303, n1304, n1305, n1306, n1307, n1308, n1309, n1310, n1311, n1312, 
      n1313, n1314, n1315, n1316, n1317, n1318, n1319, n1320, n1321, n1322, 
      n1323, n1324, n1325, n1326, n1327, n1328, n1329, n1330, n1331, n1332, 
      n1333, n1334, n1335, n1336, n1337, n1338, n1339, n1340, n1341, n1342, 
      n1343, n1344, n1345, n1346, n1347, n1348, n1349, n1350, n1351, n1352, 
      n1353, n1354, n1355, n1356, n1357, n1358, n1359, n1360, n1361, n1362, 
      n1363, n1364, n1365, n1366, n1367, n1368, n1369, n1370, n1371, n1372, 
      n1373, n1374, n1375, n1376, n1377, n1378, n1379, n1380, n1381, n1382, 
      n1383, n1384, n1385, n1386, n1387, n1388, n1389, n1390, n1391, n1392, 
      n1393, n1394, n1395, n1396, n1397, n1398, n1399, n1400, n1401, n1402, 
      n1403, n1404, n1405, n1406, n1407, n1408, n1409, n1410, n1411, n1412, 
      n1413, n1414, n1415, n1416, n1417, n1418, n1419, n1420, n1421, n1422, 
      n1423, n1424, n1425, n1426, n1427, n1428, n1429, n1430, n1431, n1432, 
      n1433, n1434, n1435, n1436, n1437, n1438, n1439, n1440, n1441, n1442, 
      n1443, n1444, n1445, n1446, n1447, n1448, n1449, n1450, n1451, n1452, 
      n1453, n1454, n1455, n1456, n1457, n1458, n1459, n1460, n1461, n1462, 
      n1463, n1464, n1465, n1466, n1467, n1468, n1469, n1470, n1471, n1472, 
      n1473, n1474, n1475, n1476, n1477, n1478, n1479, n1480, n1481, n1482, 
      n1483, n1484, n1485, n1486, n1487, n1488, n1489, n1490, n1491, n1492, 
      n1493, n1494, n1495, n1496, n1497, n1498, n1499, n1500, n1501, n1502, 
      n1503, n1504, n1505, n1506, n1507, n1508, n1509, n1510, n1511, n1512, 
      n1513, n1514, n1515, n1516, n1517, n1518, n1519, n1520, n1521, n1522, 
      n1523, n1524, n1525, n1526, n1527, n1528, n1529, n1530, n1531, n1532, 
      n1533, n1534, n1535, n1536, n1537, n1538, n1539, n1540, n1541, n1542, 
      n1543, n1544, n1545, n1546, n1547, n1548, n1549, n1550, n1551, n1552, 
      n1553, n1554, n1555, n1556, n1557, n1558, n1559, n1560, n1561, n1562, 
      n1563, n1564, n1565, n1566, n1567, n1568, n1569, n1570, n1571, n1572, 
      n1573, n1574, n1575, n1576, n1577, n1578, n1579, n1580, n1581, n1582, 
      n1583, n1584, n1585, n1586, n1587, n1588, n1589, n1590, n1591, n1592, 
      n1593, n1594, n1595, n1596, n1597, n1598, n1599, n1600, n1601, n1602, 
      n1603, n1604, n1605, n1606, n1607, n1608, n1609, n1610, n1611, n1612, 
      n1613, n1614, n1615, n1616, n1617, n1618, n1619, n1620, n1621, n1622, 
      n1623, n1624, n1625, n1626, n1627, n1628, n1629, n1630, n1631, n1632, 
      n1633, n1634, n1635, n1636, n1637, n1638, n1639, n1640, n1641, n1642, 
      n1643, n1644, n1645, n1646, n1647, n1648, n1649, n1650, n1651, n1652, 
      n1653, n1654, n1655, n1656, n1657, n1658, n1659, n1660, n1661, n1662, 
      n1663, n1664, n1665, n1666, n1667, n1668, n1669, n1670, n1671, n1672, 
      n1673, n1674, n1675, n1676, n1677, n1678, n1679, n1680, n1681, n1682, 
      n1683, n1684, n1685, n1686, n1687, n1688, n1689, n1690, n1691, n1692, 
      n1693, n1694, n1695, n1696, n1697, n1698, n1699, n1700, n1701, n1702, 
      n1703, n1704, n1705, n1706, n1707, n1708, n1709, n1710, n1711, n1712, 
      n1713, n1714, n1715, n1716, n1717, n1718, n1719, n1720, n1721, n1722, 
      n1723, n1724, n1725, n1726, n1727, n1728, n1729, n1730, n1731, n1732, 
      n1733, n1734, n1735, n1736, n1737, n1738, n1739, n1740, n1741, n1742, 
      n1743, n1744, n1745, n1746, n1747, n1748, n1749, n1750, n1751, n1752, 
      n1753, n1754, n1755, n1756, n1757, n1758, n1759, n1760, n1761, n1762, 
      n1763, n1764, n1765, n1766, n1767, n1768, n1769, n1770, n1771, n1772, 
      n1773, n1774, n1775, n1776, n1777, n1778, n1779, n1780, n1781, n1782, 
      n1783, n1784, n1785, n1786, n1787, n1788, n1789, n1790, n1791, n1792, 
      n1793, n1794, n1795, n1796, n1797, n1798, n1799, n1800, n1801, n1802, 
      n1803, n1804, n1805, n1806, n1807, n1808, n1809, n1810, n1811, n1812, 
      n1813, n1814, n1815, n1816, n1817, n1818, n1819, n1820, n1821, n1822, 
      n1823, n1824, n1825, n1826, n1827, n1828, n1829, n1830, n1831, n1832, 
      n1833, n1834, n1835, n1836, n1837, n1838, n1839, n1840, n1841, n1842, 
      n1843, n1844, n1845, n1846, n1847, n1848, n1849, n1850, n1851, n1852, 
      n1853, n1854, n1855, n1856, n1857, n1858, n1859, n1860, n1861, n1862, 
      n1863, n1864, n1865, n1866, n1867, n1868, n1869, n1870, n1871, n1872, 
      n1873, n1874, n1875, n1876, n1877, n1878, n1879, n1880, n1881, n1882, 
      n1883, n1884, n1885, n1886, n1887, n1888, n1889, n1890, n1891, n1892, 
      n1893, n1894, n1895, n1896, n1897, n1898, n1899, n1900, n1901, n1902, 
      n1903, n1904, n1905, n1906, n1907, n1908, n1909, n1910, n1911, n1912, 
      n1913, n1914, n1915, n1916, n1917, n1918, n1919, n1920, n1921, n1922, 
      n1923, n1924, n1925, n1926, n1927, n1928, n1929, n1930, n1931, n1932, 
      n1933, n1934, n1935, n1936, n1937, n1938, n1939, n1940, n1941, n1942, 
      n1943, n1944, n1945, n1946, n1947, n1948, n1949, n1950, n1951, n1952, 
      n1953, n1954, n1955, n1956, n1957, n1958, n1959, n1960, n1961, n1962, 
      n1963, n1964, n1965, n1966, n1967, n1968, n1969, n1970, n1971, n1972, 
      n1973, n1974, n1975, n1976, n1977, n1978, n1979, n1980, n1981, n1982, 
      n1983, n1984, n1985, n1986, n1987, n1988, n1989, n1990, n1991, n1992, 
      n1993, n1994, n1995, n1996, n1997, n1998, n1999, n2000, n2001, n2002, 
      n2003, n2004, n2005, n2006, n2007, n2008, n2009, n2010, n2011, n2012, 
      n2013, n2014, n2015, n2016, n2017, n2018, n2019, n2020, n2021, n2022, 
      n2023, n2024, n2025, n2026, n2027, n2028, n2029, n2030, n2031, n2032, 
      n2033, n2034, n2035, n2036, n2037, n2038, n2039, n2040, n2041, n2042, 
      n2043, n2044, n2045, n2046, n2047, n2048, n2049, n2050, n2051, n2052, 
      n2053, n2054, n2055, n2056, n2057, n2058, n2059, n2060, n2061, n2062, 
      n2063, n2064, n2065, n2066, n2067, n2068, n2069, n2070, n2071, n2072, 
      n2073, n2074, n2075, n2076, n2077, n2078, n2079, n2080, n2081, n2082, 
      n2083, n2084, n2085, n2086, n2087, n2088, n2089, n2090, n2091, n2092, 
      n2093, n2094, n2095, n2096, n2097, n2098, n2099, n2100, n2101, n2102, 
      n2103, n2104, n2105, n2106, n2107, n2108, n2109, n2110, n2111, n2112, 
      n2113, n2114, n2115, n2116, n2117, n2118, n2119, n2120, n2121, n2122, 
      n2123, n2124, n2125, n2126, n2127, n2128, n2129, n2130, n2131, n2132, 
      n2133, n2134, n2135, n2136, n2137, n2138, n2139, n2140, n2141, n2142, 
      n2143, n2144, n2145, n2146, n2147, n2148, n2149, n2150, n2151, n2152, 
      n2153, n2154, n2155, n2156, n2157, n2158, n2159, n2160, n2161, n2162, 
      n2163, n2164, n2165, n2166, n2167, n2168, n2169, n2170, n2171, n2172, 
      n2173, n2174, n2175, n2176, n2177, n2178, n2179, n2180, n2181, n2182, 
      n2183, n2184, n2185, n2186, n2187, n2188, n2189, n2190, n2191, n2192, 
      n2193, n2194, n2195, n2196, n2197, n2198, n2199, n2200, n2201, n2202, 
      n2203, n2204, n2205, n2206, n2207, n2208, n2209, n2210, n2211, n2212, 
      n2213, n2214, n2215, n2216, n2217, n2218, n2219, n2220, n2221, n2222, 
      n2223, n2224, n2225, n2226, n2227, n2228, n2229, n2230, n2231, n2232, 
      n2233, n2234, n2235, n2236, n2237, n2238, n2239, n2240, n2241, n2242, 
      n2243, n2244, n2245, n2246, n2247, n2248, n2249, n2250, n2251, n2252, 
      n2253, n2254, n2255, n2256, n2257, n2258, n2259, n2260, n2261, n2262, 
      n2263, n2264, n2265, n2266, n2267, n2268, n2269, n2270, n2271, n2272, 
      n2273, n2274, n2275, n2276, n2277, n2278, n2279, n2280, n2281, n2282, 
      n2283, n2284, n2285, n2286, n2287, n2288, n2289, n2290, n2291, n2292, 
      n2293, n2294, n2295, n2296, n2297, n2298, n2299, n2300, n2301, n2302, 
      n2303, n2304, n2305, n2306, n2307, n2308, n2309, n2310, n2311, n2312, 
      n2313, n2314, n2315, n2316, n2317, n2318, n2319, n2320, n2321, n2322, 
      n2323, n2324, n2325, n2326, n2327, n2328, n2329, n2330, n2331, n2332, 
      n2333, n2334, n2335, n2336, n2337, n2338, n2339, n2340, n2341, n2342, 
      n2343, n2344, n2345, n2346, n2347, n2348, n2349, n2350, n2351, n2352, 
      n2353, n2354, n2355, n2356, n2357, n2358, n2359, n2360, n2361, n2362, 
      n2363, n2364, n2365, n2366, n2367, n2368, n2369, n2370, n2371, n2372, 
      n2373, n2374, n2375, n2376, n2377, n2378, n2379, n2380, n2381, n2382, 
      n2383, n2384, n2385, n2386, n2387, n2388, n2389, n2390, n2391, n2392, 
      n2393, n2394, n2395, n2396, n2397, n2398, n2399, n2400, n2401, n2402, 
      n2403, n2404, n2405, n2406, n2407, n2408, n2409, n2410, n2411, n2412, 
      n2413, n2414, n2415, n2416, n2417, n2418, n2419, n2420, n2421, n2422, 
      n2423, n2424, n2425, n2426, n2427, n2428, n2429, n2430, n2431, n2432, 
      n2433, n2434, n2435, n2436, n2437, n2438, n2439, n2440, n2441, n2442, 
      n2443, n2444, n2445, n2446, n2447, n2448, n2449, n2450, n2451, n2452, 
      n2453, n2454, n2455, n2456, n2457, n2458, n2459, n2460, n2461, n2462, 
      n2463, n2464, n2465, n2466, n2467, n2468, n2469, n2470, n2471, n2472, 
      n2473, n2474, n2475, n2476, n2477, n2478, n2479, n2480, n2481, n2482, 
      n2483, n2484, n2485, n2486, n2487, n2488, n2489, n2490, n2491, n2492, 
      n2493, n2494, n2495, n2496, n2497, n2498, n2499, n2500, n2501, n2502, 
      n2503, n2504, n2505, n2506, n2507, n2508, n2509, n2510, n2511, n2512, 
      n2513, n2514, n2515, n2516, n2517, n2518, n2519, n2520, n2521, n2522, 
      n2523, n2524, n2525, n2526, n2527, n2528, n2529, n2530, n2531, n2532, 
      n2533, n2534, n2535, n2536, n2537, n2538, n2539, n2540, n2541, n2542, 
      n2543, n2544, n2545, n2546, n2547, n2548, n2549, n2550, n2551, n2552, 
      n2553, n2554, n2555, n2556, n2557, n2558, n2559, n2560, n2561, n2562, 
      n2563, n2564, n2565, n2566, n2567, n2568, n2569, n2570, n2571, n2572, 
      n2573, n2574, n2575, n2576, n2577, n2578, n2579, n2580, n2581, n2582, 
      n2583, n2584, n2585, n2586, n2587, n2588, n2589, n2590, n2591, n2592, 
      n2593, n2594, n2595, n2596, n2597, n2598, n2599, n2600, n2601, n2602, 
      n2603, n2604, n2605, n2606, n2607, n2608, n2609, n2610, n2611, n2612, 
      n2613, n2614, n2615, n2616, n2617, n2618, n2619, n2620, n2621, n2622, 
      n2623, n2624, n2625, n2626, n2627, n2628, n2629, n2630, n2631, n2632, 
      n2633, n2634, n2635, n2636, n2637, n2638, n2639, n2640, n2641, n2642, 
      n2643, n2644, n2645, n2646, n2647, n2648, n2649, n2650, n2651, n2652, 
      n2653, n2654, n2655, n2656, n2657, n2658, n2659, n2660, n2661, n2662, 
      n2663, n2664, n2665, n2666, n2667, n2668, n2669, n2670, n2671, n2672, 
      n2673, n2674, n2675, n2676, n2677, n2678, n2679, n2680, n2681, n2682, 
      n2683, n2684, n2685, n2686, n2687, n2688, n2689, n2690, n2691, n2692, 
      n2693, n2694, n2695, n2696, n2697, n2698, n2699, n2700, n2701, n2702, 
      n2703, n2704, n2705, n2706, n2707, n2708, n2709, n2710, n2711, n2712, 
      n2713, n2714, n2715, n2716, n2717, n2718, n2719, n2720, n2721, n2722, 
      n2723, n2724, n2725, n2726, n2727, n2728, n2729, n2730, n2731, n2732, 
      n2733, n2734, n2735, n2736, n2737, n2738, n2739, n2740, n2741, n2742, 
      n2743, n2744, n2745, n2746, n2747, n2748, n2749, n2750, n2751, n2752, 
      n2753, n2754, n2755, n2756, n2757, n2758, n2759, n2760, n2761, n2762, 
      n2763, n2764, n2765, n2766, n2767, n2768, n2769, n2770, n2771, n2772, 
      n2773, n2774, n2775, n2776, n2777, n2778, n2779, n2780, n2781, n2782, 
      n2783, n2784, n2785, n2786, n2787, n2788, n2789, n2790, n2791, n2792, 
      n2793, n2794, n2795, n2796, n2797, n2798, n2799, n2800, n2801, n2802, 
      n2803, n2804, n2805, n2806, n2807, n2808, n2809, n2810, n2811, n2812, 
      n2813, n2814, n2815, n2816, n2817, n2818, n2819, n2820, n2821, n2822, 
      n2823, n2824, n2825, n2826, n2827, n2828, n2829, n2830, n2831, n2832, 
      n2833, n2834, n2835, n2836, n2837, n2838, n2839, n2840, n2841, n2842, 
      n2843, n2844, n2845, n2846, n2847, n2848, n2849, n2850, n2851, n2852, 
      n2853, n2854, n2855, n2856, n2857, n2858, n2859, n2860, n2861, n2862, 
      n2863, n2864, n2865, n2866, n2867, n2868, n2869, n2870, n2871, n2872, 
      n2873, n2874, n2875, n2876, n2877, n2878, n2879, n2880, n2881, n2882, 
      n2883, n2884, n2885, n2886, n2887, n2888, n2889, n2890, n2891, n2892, 
      n2893, n2894, n2895, n2896, n2897, n2898, n2899, n2900, n2901, n2902, 
      n2903, n2904, n2905, n2906, n2907, n2908, n2909, n2910, n2911, n2912, 
      n2913, n2914, n2915, n2916, n2917, n2918, n2919, n2920, n2921, n2922, 
      n2923, n2924, n2925, n2926, n2927, n2928, n2929, n2930, n2931, n2932, 
      n2933, n2934, n2935, n2936, n2937, n2938, n2939, n2940, n2941, n2942, 
      n2943, n2944, n2945, n2946, n2947, n2948, n2949, n2950, n2951, n2952, 
      n2953, n2954, n2955, n2956, n2957, n2958, n2959, n2960, n2961, n2962, 
      n2963, n2964, n2965, n2966, n2967, n2968, n2969, n2970, n2971, n2972, 
      n2973, n2974, n2975, n2976, n2977, n2978, n2979, n2980, n2981, n2982, 
      n2983, n2984, n2985, n2986, n2987, n2988, n2989, n2990, n2991, n2992, 
      n2993, n2994, n2995, n2996, n2997, n2998, n2999, n3000, n3001, n3002, 
      n3003, n3004, n3005, n3006, n3007, n3008, n3009, n3010, n3011, n3012, 
      n3013, n3014, n3015, n3016, n3017, n3018, n3019, n3020, n3021, n3022, 
      n3023, n3024, n3025, n3026, n3027, n3028, n3029, n3030, n3031, n3032, 
      n3033, n3034, n3035, n3036, n3037, n3038, n3039, n3040, n3041, n3042, 
      n3043, n3044, n3045, n3046, n3047, n3048, n3049, n3050, n3051, n3052, 
      n3053, n3054, n3055, n3056, n3057, n3058, n3059, n3060, n3061, n3062, 
      n3063, n3064, n3065, n3066, n3067, n3068, n3069, n3070, n3071, n3072, 
      n3073, n3074, n3075, n3076, n3077, n3078, n3079, n3080, n3081, n3082, 
      n3083, n3084, n3085, n3086, n3087, n3088, n3089, n3090, n3091, n3092, 
      n3093, n3094, n3095, n3096, n3097, n3098, n3099, n3100, n3101, n3102, 
      n3103, n3104, n3105, n3106, n3107, n3108, n3109, n3110, n3111, n3112, 
      n3113, n3114, n3115, n3116, n3117, n3118, n3119, n3120, n3121, n3122, 
      n3123, n3124, n3125, n3126, n3127, n3128, n3129, n3130, n3131, n3132, 
      n3133, n3134, n3135, n3136, n3137, n3138, n3139, n3140, n3141, n3142, 
      n3143, n3144, n3145, n3146, n3147, n3148, n3149, n3150, n3151, n3152, 
      n3153, n3154, n3155, n3156, n3157, n3158, n3159, n3160, n3161, n3162, 
      n3163, n3164, n3165, n3166, n3167, n3168, n3169, n3170, n3171, n3172, 
      n3173, n3174, n3175, n3176, n3177, n3178, n3179, n3180, n3181, n3182, 
      n3183, n3184, n3185, n3186, n3187, n3188, n3189, n3190, n3191, n3192, 
      n3193, n3194, n3195, n3196, n3197, n3198, n3199, n3200, n3201, n3202, 
      n3203, n3204, n3205, n3206, n3207, n3208, n3209, n3210, n3211, n3212, 
      n3213, n3214, n3215, n3216, n3217, n3218, n3219, n3220, n3221, n3222, 
      n3223, n3224, n3225, n3226, n3227, n3228, n3229, n3230, n3231, n3232, 
      n3233, n3234, n3235, n3236, n3237, n3238, n3239, n3240, n3241, n3242, 
      n3243, n3244, n3245, n3246, n3247, n3248, n3249, n3250, n3251, n3252, 
      n3253, n3254, n3255, n3256, n3257, n3258, n3259, n3260, n3261, n3262, 
      n3263, n3264, n3265, n3266, n3267, n3268, n3269, n3270, n3271, n3272, 
      n3273, n3274, n3275, n3276, n3277, n3278, n3279, n3280, n3281, n3282, 
      n3283, n3284, n3285, n3286, n3287, n3288, n3289, n3290, n3291, n3292, 
      n3293, n3294, n3295, n3296, n3297, n3298, n3299, n3300, n3301, n3302, 
      n3303, n3304, n3305, n3306, n3307, n3308, n3309, n3310, n3311, n3312, 
      n3313, n3314, n3315, n3316, n3317, n3318, n3319, n3320, n3321, n3322, 
      n3323, n3324, n3325, n3326, n3327, n3328, n3329, n3330, n3331, n3332, 
      n3333, n3334, n3335, n3336, n3337, n3338, n3339, n3340, n3341, n3342, 
      n3343, n3344, n3345, n3346, n3347, n3348, n3349, n3350, n3351, n3352, 
      n3353, n3354, n3355, n3356, n3357, n3358, n3359, n3360, n3361, n3362, 
      n3363, n3364, n3365, n3366, n3367, n3368, n3369, n3370, n3371, n3372, 
      n3373, n3374, n3375, n3376, n3377, n3378, n3379, n3380, n3381, n3382, 
      n3383, n3384, n3385, n3386, n3387, n3388, n3389, n3390, n3391, n3392, 
      n3393, n3394, n3395, n3396, n3397, n3398, n3399, n3400, n3401, n3402, 
      n3403, n3404, n3405, n3406, n3407, n3408, n3409, n3410, n3411, n3412, 
      n3413, n3414, n3415, n3416, n3417, n3418, n3419, n3420, n3421, n3422, 
      n3423, n3424, n3425, n3426, n3427, n3428, n3429, n3430, n3431, n3432, 
      n3433, n3434, n3435, n3436, n3437, n3438, n3439, n3440, n3441, n3442, 
      n3443, n3444, n3445, n3446, n3447, n3448, n3449, n3450, n3451, n3452, 
      n3453, n3454, n3455, n3456, n3457, n3458, n3459, n3460, n3461, n3462, 
      n3463, n3464, n3465, n3466, n3467, n3468, n3469, n3470, n3471, n3472, 
      n3473, n3474, n3475, n3476, n3477, n3478, n3479, n3480, n3481, n3482, 
      n3483, n3484, n3485, n3486, n3487, n3488, n3489, n3490, n3491, n3492, 
      n3493, n3494, n3495, n3496, n3497, n3498, n3499, n3500, n3501, n3502, 
      n3503, n3504, n3505, n3506, n3507, n3508, n3509, n3510, n3511, n3512, 
      n3513, n3514, n3515, n3516, n3517, n3518, n3519, n3520, n3521, n3522, 
      n3523, n3524, n3525, n3526, n3527, n3528, n3529, n3530, n3531, n3532, 
      n3533, n3534, n3535, n3536, n3537, n3538, n3539, n3540, n3541, n3542, 
      n3543, n3544, n3545, n3546, n3547, n3548, n3549, n3550, n3551, n3552, 
      n3553, n3554, n3555, n3556, n3557, n3558, n3559, n3560, n3561, n3562, 
      n3563, n3564, n3565, n3566, n3567, n3568, n3569, n3570, n3571, n3572, 
      n3573, n3574, n3575, n3576, n3577, n3578, n3579, n3580, n3581, n3582, 
      n3583, n3584, n3585, n3586, n3587, n3588, n3589, n3590, n3591, n3592, 
      n3593, n3594, n3595, n3596, n3597, n3598, n3599, n3600, n3601, n3602, 
      n3603, n3604, n3605, n3606, n3607, n3608, n3609, n3610, n3611, n3612, 
      n3613, n3614, n3615, n3616, n3617, n3618, n3619, n3620, n3621, n3622, 
      n3623, n3624, n3625, n3626, n3627, n3628, n3629, n3630, n3631, n3632, 
      n3633, n3634, n3635, n3636, n3637, n3638, n3639, n3640, n3641, n3642, 
      n3643, n3644, n3645, n3646, n3647, n3648, n3649, n3650, n3651, n3652, 
      n3653, n3654, n3655, n3656, n3657, n3658, n3659, n3660, n3661, n3662, 
      n3663, n3664, n3665, n3666, n3667, n3668, n3669, n3670, n3671, n3672, 
      n3673, n3674, n3675, n3676, n3677, n3678, n3679, n3680, n3681, n3682, 
      n3683, n3684, n3685, n3686, n3687, n3688, n3689, n3690, n3691, n3692, 
      n3693, n3694, n3695, n3696, n3697, n3698, n3699, n3700, n3701, n3702, 
      n3703, n3704, n3705, n3706, n3707, n3708, n3709, n3710, n3711, n3712, 
      n3713, n3714, n3715, n3716, n3717, n3718, n3719, n3720, n3721, n3722, 
      n3723, n3724, n3725, n3726, n3727, n3728, n3729, n3730, n3731, n3732, 
      n3733, n3734, n3735, n3736, n3737, n3738, n3739, n3740, n3741, n3742, 
      n3743, n3744, n3745, n3746, n3747, n3748, n3749, n3750, n3751, n3752, 
      n3753, n3754, n3755, n3756, n3757, n3758, n3759, n3760, n3761, n3762, 
      n3763, n3764, n3765, n3766, n3767, n3768, n3769, n3770, n3771, n3772, 
      n3773, n3774, n3775, n3776, n3777, n3778, n3779, n3780, n3781, n3782, 
      n3783, n3784, n3785, n3786, n3787, n3788, n3789, n3790, n3791, n3792, 
      n3793, n3794, n3795, n3796, n3797, n3798, n3799, n3800, n3801, n3802, 
      n3803, n3804, n3805, n3806, n3807, n3808, n3809, n3810, n3811, n3812, 
      n3813, n3814, n3815, n3816, n3817, n3818, n3819, n3820, n3821, n3822, 
      n3823, n3824, n3825, n3826, n3827, n3828, n3829, n3830, n3831, n3832, 
      n3833, n3834, n3835, n3836, n3837, n3838, n3839, n3840, n3841, n3842, 
      n3843, n3844, n3845, n3846, n3847, n3848, n3849, n3850, n3851, n3852, 
      n3853, n3854, n3855, n3856, n3857, n3858, n3859, n3860, n3861, n3862, 
      n3863, n3864, n3865, n3866, n3867, n3868, n3869, n3870, n3871, n3872, 
      n3873, n3874, n3875, n3876, n3877, n3878, n3879, n3880, n3881, n3882, 
      n3883, n3884, n3885, n3886, n3887, n3888, n3889, n3890, n3891, n3892, 
      n3893, n3894, n3895, n3896, n3897, n3898, n3899, n3900, n3901, n3902, 
      n3903, n3904, n3905, n3906, n3907, n3908, n3909, n3910, n3911, n3912, 
      n3913, n3914, n3915, n3916, n3917, n3918, n3919, n3920, n3921, n3922, 
      n3923, n3924, n3925, n3926, n3927, n3928, n3929, n3930, n3931, n3932, 
      n3933, n3934, n3935, n3936, n3937, n3938, n3939, n3940, n3941, n3942, 
      n3943, n3944, n3945, n3946, n3947, n3948, n3949, n3950, n3951, n3952, 
      n3953, n3954, n3955, n3956, n3957, n3958, n3959, n3960, n3961, n3962, 
      n3963, n3964, n3965, n3966, n3967, n3968, n3969, n3970, n3971, n3972, 
      n3973, n3974, n3975, n3976, n3977, n3978, n3979, n3980, n3981, n3982, 
      n3983, n3984, n3985, n3986, n3987, n3988, n3989, n3990, n3991, n3992, 
      n3993, n3994, n3995, n3996, n3997, n3998, n3999, n4000, n4001, n4002, 
      n4003, n4004, n4005, n4006, n4007, n4008, n4009, n4010, n4011, n4012, 
      n4013, n4014, n4015, n4016, n4017, n4018, n4019, n4020, n4021, n4022, 
      n4023, n4024, n4025, n4026, n4027, n4028, n4029, n4030, n4031, n4032, 
      n4033, n4034, n4035, n4036, n4037, n4038, n4039, n4040, n4041, n4042, 
      n4043, n4044, n4045, n4046, n4047, n4048, n4049, n4050, n4051, n4052, 
      n4053, n4054, n4055, n4056, n4057, n4058, n4059, n4060, n4061, n4062, 
      n4063, n4064, n4065, n4066, n4067, n4068, n4069, n4070, n4071, n4072, 
      n4073, n4074, n4075, n4076, n4077, n4078, n4079, n4080, n4081, n4082, 
      n4083, n4084, n4085, n4086, n4087, n4088, n4089, n4090, n4091, n4092, 
      n4093, n4094, n4095, n4096, n4097, n4098, n4099, n4100, n4101, n4102, 
      n4103, n4104, n4105, n4106, n4107, n4108, n4109, n4110, n4111, n4112, 
      n4113, n4114, n4115, n4116, n4117, n4118, n4119, n4120, n4121, n4122, 
      n4123, n4124, n4125, n4126, n4127, n4128, n4129, n4130, n4131, n4132, 
      n4133, n4134, n4135, n4136, n4137, n4138, n4139, n4140, n4141, n4142, 
      n4143, n4144, n4145, n4146, n4147, n4148, n4149, n4150, n4151, n4152, 
      n4153, n4154, n4155, n4156, n4157, n4158, n4159, n4160, n4161, n4162, 
      n4163, n4164, n4165, n4166, n4167, n4168, n4169, n4170, n4171, n4172, 
      n4173, n4174, n4175, n4176, n4177, n4178, n4179, n4180, n4181, n4182, 
      n4183, n4184, n4185, n4186, n4187, n4188, n4189, n4190, n4191, n4192, 
      n4193, n4194, n4195, n4196, n4197, n4198, n4199, n4200, n4201, n4202, 
      n4203, n4204, n4205, n4206, n4207, n4208, n4209, n4210, n4211, n4212, 
      n4213, n4214, n4215, n4216, n4217, n4218, n4219, n4220, n4221, n4222, 
      n4223, n4224, n4225, n4226, n4227, n4228, n4229, n4230, n4231, n4232, 
      n4233, n4234, n4235, n4236, n4237, n4238, n4239, n4240, n4241, n4242, 
      n4243, n4244, n4245, n4246, n4247, n4248, n4249, n4250, n4251, n4252, 
      n4253, n4254, n4255, n4256, n4257, n4258, n4259, n4260, n4261, n4262, 
      n4263, n4264, n4265, n4266, n4267, n4268, n4269, n4270, n4271, n4272, 
      n4273, n4274, n4275, n4276, n4277, n4278, n4279, n4280, n4281, n4282, 
      n4283, n4284, n4285, n4286, n4287, n4288, n4289, n4290, n4291, n4292, 
      n4293, n4294, n4295, n4296, n4297, n4298, n4299, n4300, n4301, n4302, 
      n4303, n4304, n4305, n4306, n4307, n4308, n4309, n4310, n4311, n4312, 
      n4313, n4314, n4315, n4316, n4317, n4318, n4319, n4320, n4321, n4322, 
      n4323, n4324, n4325, n4326, n4327, n4328, n4329, n4330, n4331, n4332, 
      n4333, n4334, n4335, n4336, n4337, n4338, n4339, n4340, n4341, n4342, 
      n4343, n4344, n4345, n4346, n4347, n4348, n4349, n4350, n4351, n4352, 
      n4353, n4354, n4355, n4356, n4357, n4358, n4359, n4360, n4361, n4362, 
      n4363, n4364, n4365, n4366, n4367, n4368, n4369, n4370, n4371, n4372, 
      n4373, n4374, n4375, n4376, n4377, n4378, n4379, n4380, n4381, n4382, 
      n4383, n4384, n4385, n4386, n4387, n4388, n4389, n4390, n4391, n4392, 
      n4393, n4394, n4395, n4396, n4397, n4398, n4399, n4400, n4401, n4402, 
      n4403, n4404, n4405, n4406, n4407, n4408, n4409, n4410, n4411, n4412, 
      n4413, n4414, n4415, n4416, n4417, n4418, n4419, n4420, n4421, n4422, 
      n4423, n4424, n4425, n4426, n4427, n4428, n4429, n4430, n4431, n4432, 
      n4433, n4434, n4435, n4436, n4437, n4438, n4439, n4440, n4441, n4442, 
      n4443, n4444, n4445, n4446, n4447, n4448, n4449, n4450, n4451, n4452, 
      n4453, n4454, n4455, n4456, n4457, n4458, n4459, n4460, n4461, n4462, 
      n4463, n4464, n4465, n4466, n4467, n4468, n4469, n4470, n4471, n4472, 
      n4473, n4474, n4475, n4476, n4477, n4478, n4479, n4480, n4481, n4482, 
      n4483, n4484, n4485, n4486, n4487, n4488, n4489, n4490, n4491, n4492, 
      n4493, n4494, n4495, n4496, n4497, n4498, n4499, n4500, n4501, n4502, 
      n4503, n4504, n4505, n4506, n4507, n4508, n4509, n4510, n4511, n4512, 
      n4513, n4514, n4515, n4516, n4517, n4518, n4519, n4520, n4521, n4522, 
      n4523, n4524, n4525, n4526, n4527, n4528, n4529, n4530, n4531, n4532, 
      n4533, n4534, n4535, n4536, n4537, n4538, n4539, n4540, n4541, n4542, 
      n4543, n4544, n4545, n4546, n4547, n4548, n4549, n4550, n4551, n4552, 
      n4553, n4554, n4555, n4556, n4557, n4558, n4559, n4560, n4561, n4562, 
      n4563, n4564, n4565, n4566, n4567, n4568, n4569, n4570, n4571, n4572, 
      n4573, n4574, n4575, n4576, n4577, n4578, n4579, n4580, n4581, n4582, 
      n4583, n4584, n4585, n4586, n4587, n4588, n4589, n4590, n4591, n4592, 
      n4593, n4594, n4595, n4596, n4597, n4598, n4599, n4600, n4601, n4602, 
      n4603, n4604, n4605, n4606, n4607, n4608, n4609, n4610, n4611, n4612, 
      n4613, n4614, n4615, n4616, n4617, n4618, n4619, n4620, n4621, n4622, 
      n4623, n4624, n4625, n4626, n4627, n4628, n4629, n4630, n4631, n4632, 
      n4633, n4634, n4635, n4636, n4637, n4638, n4639, n4640, n4641, n4642, 
      n4643, n4644, n4645, n4646, n4647, n4648, n4649, n4650, n4651, n4652, 
      n4653, n4654, n4655, n4656, n4657, n4658, n4659, n4660, n4661, n4662, 
      n4663, n4664, n4665, n4666, n4667, n4668, n4669, n4670, n4671, n4672, 
      n4673, n4674, n4675, n4676, n4677, n4678, n4679, n4680, n4681, n4682, 
      n4683, n4684, n4685, n4686, n4687, n4688, n4689, n4690, n4691, n4692, 
      n4693, n4694, n4695, n4696, n4697, n4698, n4699, n4700, n4701, n4702, 
      n4703, n4704, n4705, n4706, n4707, n4708, n4709, n4710, n4711, n4712, 
      n4713, n4714, n4715, n4716, n4717, n4718, n4719, n4720, n4721, n4722, 
      n4723, n4724, n4725, n4726, n4727, n4728, n4729, n4730, n4731, n4732, 
      n4733, n4734, n4735, n4736, n4737, n4738, n4739, n4740, n4741, n4742, 
      n4743, n4744, n4745, n4746, n4747, n4748, n4749, n4750, n4751, n4752, 
      n4753, n4754, n4755, n4756, n4757, n4758, n4759, n4760, n4761, n4762, 
      n4763, n4764, n4765, n4766, n4767, n4768, n4769, n4770, n4771, n4772, 
      n4773, n4774, n4775, n4776, n4777, n4778, n4779, n4780, n4781, n4782, 
      n4783, n4784, n4785, n4786, n4787, n4788, n4789, n4790, n4791, n4792, 
      n4793, n4794, n4795, n4796, n4797, n4798, n4799, n4800, n4801, n4802, 
      n4803, n4804, n4805, n4806, n4807, n4808, n4809, n4810, n4811, n4812, 
      n4813, n4814, n4815, n4816, n4817, n4818, n4819, n4820, n4821, n4822, 
      n4823, n4824, n4825, n4826, n4827, n4828, n4829, n4830, n4831, n4832, 
      n4833, n4834, n4835, n4836, n4837, n4838, n4839, n4840, n4841, n4842, 
      n4843, n4844, n4845, n4846, n4847, n4848, n4849, n4850, n4851, n4852, 
      n4853, n4854, n4855, n4856, n4857, n4858, n4859, n4860, n4861, n4862, 
      n4863, n4864, n4865, n4866, n4867, n4868, n4869, n4870, n4871, n4872, 
      n4873, n4874, n4875, n4876, n4877, n4878, n4879, n4880, n4881, n4882, 
      n4883, n4884, n4885, n4886, n4887, n4888, n4889, n4890, n4891, n4892, 
      n4893, n4894, n4895, n4896, n4897, n4898, n4899, n4900, n4901, n4902, 
      n4903, n4904, n4905, n4906, n4907, n4908, n4909, n4910, n4911, n4912, 
      n4913, n4914, n4915, n4916, n4917, n4918, n4919, n4920, n4921, n4922, 
      n4923, n4924, n4925, n4926, n4927, n4928, n4929, n4930, n4931, n4932, 
      n4933, n4934, n4935, n4936, n4937, n4938, n4939, n4940, n4941, n4942, 
      n4943, n4944, n4945, n4946, n4947, n4948, n4949, n4950, n4951, n4952, 
      n4953, n4954, n4955, n4956, n4957, n4958, n4959, n4960, n4961, n4962, 
      n4963, n4964, n4965, n4966, n4967, n4968, n4969, n4970, n4971, n4972, 
      n4973, n4974, n4975, n4976, n4977, n4978, n4979, n4980, n4981, n4982, 
      n4983, n4984, n4985, n4986, n4987, n4988, n4989, n4990, n4991, n4992, 
      n4993, n4994, n4995, n4996, n4997, n4998, n4999, n5000, n5001, n5002, 
      n5003, n5004, n5005, n5006, n5007, n5008, n5009, n5010, n5011, n5012, 
      n5013, n5014, n5015, n5016, n5017, n5018, n5019, n5020, n5021, n5022, 
      n5023, n5024, n5025, n5026, n5027, n5028, n5029, n5030, n5031, n5032, 
      n5033, n5034, n5035, n5036, n5037, n5038, n5039, n5040, n5041, n5042, 
      n5043, n5044, n5045, n5046, n5047, n5048, n5049, n5050, n5051, n5052, 
      n5053, n5054, n5055, n5056, n5057, n5058, n5059, n5060, n5061, n5062, 
      n5063, n5064, n5065, n5066, n5067, n5068, n5069, n5070, n5071, n5072, 
      n5073, n5074, n5075, n5076, n5077, n5078, n5079, n5080, n5081, n5082, 
      n5083, n5084, n5085, n5086, n5087, n5088, n5089, n5090, n5091, n5092, 
      n5093, n5094, n5095, n5096, n5097, n5098, n5099, n5100, n5101, n5102, 
      n5103, n5104, n5105, n5106, n5107, n5108, n5109, n5110, n5111, n5112, 
      n5113, n5114, n5115, n5116, n5117, n5118, n5119, n5120, n5121, n5122, 
      n5123, n5124, n5125, n5126, n5127, n5128, n5129, n5130, n5131, n5132, 
      n5133, n5134, n5135, n5136, n5137, n5138, n5139, n5140, n5141, n5142, 
      n5143, n5144, n5145, n5146, n5147, n5148, n5149, n5150, n5151, n5152, 
      n5153, n5154, n5155, n5156, n5157, n5158, n5159, n5160, n5161, n5162, 
      n5163, n5164, n5165, n5166, n5167, n5168, n5169, n5170, n5171, n5172, 
      n5173, n5174, n5175, n5176, n5177, n5178, n5179, n5180, n5181, n5182, 
      n5183, n5184, n5185, n5186, n5187, n5188, n5189, n5190, n5191, n5192, 
      n5193, n5194, n5195, n5196, n5197, n5198, n5199, n5200, n5201, n5202, 
      n5203, n5204, n5205, n5206, n5207, n5208, n5209, n5210, n5211, n5212, 
      n5213, n5214, n5215, n5216, n5217, n5218, n5219, n5220, n5221, n5222, 
      n5223, n5224, n5225, n5226, n5227, n5228, n5229, n5230, n5231, n5232, 
      n5233, n5234, n5235, n5236, n5237, n5238, n5239, n5240, n5241, n5242, 
      n5243, n5244, n5245, n5246, n5247, n5248, n5249, n5250, n5251, n5252, 
      n5253, n5254, n5255, n5256, n5257, n5258, n5259, n5260, n5261, n5262, 
      n5263, n5264, n5265, n5266, n5267, n5268, n5269, n5270, n5271, n5272, 
      n5273, n5274, n5275, n5276, n5277, n5278, n5279, n5280, n5281, n5282, 
      n5283, n5284, n5285, n5286, n5287, n5288, n5289, n5290, n5291, n5292, 
      n5293, n5294, n5295, n5296, n5297, n5298, n5299, n5300, n5301, n5302, 
      n5303, n5304, n5305, n5306, n5307, n5308, n5309, n5310, n5311, n5312, 
      n5313, n5314, n5315, n5316, n5317, n5318, n5319, n5320, n5321, n5322, 
      n5323, n5324, n5325, n5326, n5327, n5328, n5329, n5330, n5331, n5332, 
      n5333, n5334, n5335, n5336, n5337, n5338, n5339, n5340, n5341, n5342, 
      n5343, n5344, n5345, n5346, n5347, n5348, n5349, n5350, n5351, n5352, 
      n5353, n5354, n5355, n5356, n5357, n5358, n5359, n5360, n5361, n5362, 
      n5363, n5364, n5365, n5366, n5367, n5368, n5369, n5370, n5371, n5372, 
      n5373, n5374, n5375, n5376, n5377, n5378, n5379, n5380, n5381, n5382, 
      n5383, n5384, n5385, n5386, n5387, n5388, n5389, n5390, n5391, n5392, 
      n5393, n5394, n5395, n5396, n5397, n5398, n5399, n5400, n5401, n5402, 
      n5403, n5404, n5405, n5406, n5407, n5408, n5409, n5410, n5411, n5412, 
      n5413, n5414, n5415, n5416, n5417, n5418, n5419, n5420, n5421, n5422, 
      n5423, n5424, n5425, n5426, n5427, n5428, n5429, n5430, n5431, n5432, 
      n5433, n5434, n5435, n5436, n5437, n5438, n5439, n5440, n5441, n5442, 
      n5443, n5444, n5445, n5446, n5447, n5448, n5449, n5450, n5451, n5452, 
      n5453, n5454, n5455, n5456, n5457, n5458, n5459, n5460, n5461, n5462, 
      n5463, n5464, n5465, n5466, n5467, n5468, n5469, n5470, n5471, n5472, 
      n5473, n5474, n5475, n5476, n5477, n5478, n5479, n5480, n5481, n5482, 
      n5483, n5484, n5485, n5486, n5487, n5488, n5489, n5490, n5491, n5492, 
      n5493, n5494, n5495, n5496, n5497, n5498, n5499, n5500, n5501, n5502, 
      n5503, n5504, n5505, n5506, n5507, n5508, n5509, n5510, n5511, n5512, 
      n5513, n5514, n5515, n5516, n5517, n5518, n5519, n5520, n5521, n5522, 
      n5523, n5524, n5525, n5526, n5527, n5528, n5529, n5530, n5531, n5532, 
      n5533, n5534, n5535, n5536, n5537, n5538, n5539, n5540, n5541, n5542, 
      n5543, n5544, n5545, n5546, n5547, n5548, n5549, n5550, n5551, n5552, 
      n5553, n5554, n5555, n5556, n5557, n5558, n5559, n5560, n5561, n5562, 
      n5563, n5564, n5565, n5566, n5567, n5568, n5569, n5570, n5571, n5572, 
      n5573, n5574, n5575, n5576, n5577, n5578, n5579, n5580, n5581, n5582, 
      n5583, n5584, n5585, n5586, n5587, n5588, n5589, n5590, n5591, n5592, 
      n5593, n5594, n5595, n5596, n5597, n5598, n5599, n5600, n5601, n5602, 
      n5603, n5604, n5605, n5606, n5607, n5608, n5609, n5610, n5611, n5612, 
      n5613, n5614, n5615, n5616, n5617, n5618, n5619, n5620, n5621, n5622, 
      n5623, n5624, n5625, n5626, n5627, n5628, n5629, n5630, n5631, n5632, 
      n5633, n5634, n5635, n5636, n5637, n5638, n5639, n5640, n5641, n5642, 
      n5643, n5644, n5645, n5646, n5647, n5648, n5649, n5650, n5651, n5652, 
      n5653, n5654, n5655, n5656, n5657, n5658, n5659, n5660, n5661, n5662, 
      n5663, n5664, n5665, n5666, n5667, n5668, n5669, n5670, n5671, n5672, 
      n5673, n5674, n5675, n5676, n5677, n5678, n5679, n5680, n5681, n5682, 
      n5683, n5684, n5685, n5686, n5687, n5688, n5689, n5690, n5691, n5692, 
      n5693, n5694, n5695, n5696, n5697, n5698, n5699, n5700, n5701, n5702, 
      n5703, n5704, n5705, n5706, n5707, n5708, n5709, n5710, n5711, n5712, 
      n5713, n5714, n5715, n5716, n5717, n5718, n5719, n5720, n5721, n5722, 
      n5723, n5724, n5725, n5726, n5727, n5728, n5729, n5730, n5731, n5732, 
      n5733, n5734, n5735, n5736, n5737, n5738, n5739, n5740, n5741, n5742, 
      n5743, n5744, n5745, n5746, n5747, n5748, n5749, n5750, n5751, n5752, 
      n5753, n5754, n5755, n5756, n5757, n5758, n5759, n5760, n5761, n5762, 
      n5763, n5764, n5765, n5766, n5767, n5768, n5769, n5770, n5771, n5772, 
      n5773, n5774, n5775, n5776, n5777, n5778, n5779, n5780, n5781, n5782, 
      n5783, n5784, n5785, n5786, n5787, n5788, n5789, n5790, n5791, n5792, 
      n5793, n5794, n5795, n5796, n5797, n5798, n5799, n5800, n5801, n5802, 
      n5803, n5804, n5805, n5806, n5807, n5808, n5809, n5810, n5811, n5812, 
      n5813, n5814, n5815, n5816, n5817, n5818, n5819, n5820, n5821, n5822, 
      n5823, n5824, n5825, n5826, n5827, n5828, n5829, n5830, n5831, n5832, 
      n5833, n5834, n5835, n5836, n5837, n5838, n5839, n5840, n5841, n5842, 
      n5843, n5844, n5845, n5846, n5847, n5848, n5849, n5850, n5851, n5852, 
      n5853, n5854, n5855, n5856, n5857, n5858, n5859, n5860, n5861, n5862, 
      n5863, n5864, n5865, n5866, n5867, n5868, n5869, n5870, n5871, n5872, 
      n5873, n5874, n5875, n5876, n5877, n5878, n5879, n5880, n5881, n5882, 
      n5883, n5884, n5885, n5886, n5887, n5888, n5889, n5890, n5891, n5892, 
      n5893, n5894, n5895, n5896, n5897, n5898, n5899, n5900, n5901, n5902, 
      n5903, n5904, n5905, n5906, n5907, n5908, n5909, n5910, n5911, n5912, 
      n5913, n5914, n5915, n5916, n5917, n5918, n5919, n5920, n5921, n5922, 
      n5923, n5924, n5925, n5926, n5927, n5928, n5929, n5930, n5931, n5932, 
      n5933, n5934, n5935, n5936, n5937, n5938, n5939, n5940, n5941, n5942, 
      n5943, n5944, n5945, n5946, n5947, n5948, n5949, n5950, n5951, n5952, 
      n5953, n5954, n5955, n5956, n5957, n5958, n5959, n5960, n5961, n5962, 
      n5963, n5964, n5965, n5966, n5967, n5968, n5969, n5970, n5971, n5972, 
      n5973, n5974, n5975, n5976, n5977, n5978, n5979, n5980, n5981, n5982, 
      n5983, n5984, n5985, n5986, n5987, n5988, n5989, n5990, n5991, n5992, 
      n5993, n5994, n5995, n5996, n5997, n5998, n5999, n6000, n6001, n6002, 
      n6003, n6004, n6005, n6006, n6007, n6008, n6009, n6010, n6011, n6012, 
      n6013, n6014, n6015, n6016, n6017, n6018, n6019, n6020, n6021, n6022, 
      n6023, n6024, n6025, n6026, n6027, n6028, n6029, n6030, n6031, n6032, 
      n6033, n6034, n6035, n6036, n6037, n6038, n6039, n6040, n6041, n6042, 
      n6043, n6044, n6045, n6046, n6047, n6048, n6049, n6050, n6051, n6052, 
      n6053, n6054, n6055, n6056, n6057, n6058, n6059, n6060, n6061, n6062, 
      n6063, n6064, n6065, n6066, n6067, n6068, n6069, n6070, n6071, n6072, 
      n6073, n6074, n6075, n6076, n6077, n6078, n6079, n6080, n6081, n6082, 
      n6083, n6084, n6085, n6086, n6087, n6088, n6089, n6090, n6091, n6092, 
      n6093, n6094, n6095, n6096, n6097, n6098, n6099, n6100, n6101, n6102, 
      n6103, n6104, n6105, n6106, n6107, n6108, n6109, n6110, n6111, n6112, 
      n6113, n6114, n6115, n6116, n6117, n6118, n6119, n6120, n6121, n6122, 
      n6123, n6124, n6125, n6126, n6127, n6128, n6129, n6130, n6131, n6132, 
      n6133, n6134, n6135, n6136, n6137, n6138, n6139, n6140, n6141, n6142, 
      n6143, n6144, n6145, n6146, n6147, n6148, n6149, n6150, n6151, n6152, 
      n6153, n6154, n6155, n6156, n6157, n6158, n6159, n6160, n6161, n6162, 
      n6163, n6164, n6165, n6166, n6167, n6168, n6169, n6170, n6171, n6172, 
      n6173, n6174, n6175, n6176, n6177, n6178, n6179, n6180, n6181, n6182, 
      n6183, n6184, n6185, n6186, n6187, n6188, n6189, n6190, n6191, n6192, 
      n6193, n6194, n6195, n6196, n6197, n6198, n6199, n6200, n6201, n6202, 
      n6203, n6204, n6205, n6206, n6207, n6208, n6209, n6210, n6211, n6212, 
      n6213, n6214, n6215, n6216, n6217, n6218, n6219, n6220, n6221, n6222, 
      n6223, n6224, n6225, n6226, n6227, n6228, n6229, n6230, n6231, n6232, 
      n6233, n6234, n6235, n6236, n6237, n6238, n6239, n6240, n6241, n6242, 
      n6243, n6244, n6245, n6246, n6247, n6248, n6249, n6250, n6251, n6252, 
      n6253, n6254, n6255, n6256, n6257, n6258, n6259, n6260, n6261, n6262, 
      n6263, n6264, n6265, n6266, n6267, n6268, n6269, n6270, n6271, n6272, 
      n6273, n6274, n6275, n6276, n6277, n6278, n6279, n6280, n6281, n6282, 
      n6283, n6284, n6285, n6286, n6287, n6288, n6289, n6290, n6291, n6292, 
      n6293, n6294, n6295, n6296, n6297, n6298, n6299, n6300, n6301, n6302, 
      n6303, n6304, n6305, n6306, n6307, n6308, n6309, n6310, n6311, n6312, 
      n6313, n6314, n6315, n6316, n6317, n6318, n6319, n6320, n6321, n6322, 
      n6323, n6324, n6325, n6326, n6327, n6328, n6329, n6330, n6331, n6332, 
      n6333, n6334, n6335, n6336, n6337, n6338, n6339, n6340, n6341, n6342, 
      n6343, n6344, n6345, n6346, n6347, n6348, n6349, n6350, n6351, n6352, 
      n6353, n6354, n6355, n6356, n6357, n6358, n6359, n6360, n6361, n6362, 
      n6363, n6364, n6365, n6366, n6367, n6368, n6369, n6370, n6371, n6372, 
      n6373, n6374, n6375, n6376, n6377, n6378, n6379, n6380, n6381, n6382, 
      n6383, n6384, n6385, n6386, n6387, n6388, n6389, n6390, n6391, n6392, 
      n6393, n6394, n6395, n6396, n6397, n6398, n6399, n6400, n6401, n6402, 
      n6403, n6404, n6405, n6406, n6407, n6408, n6409, n6410, n6411, n6412, 
      n6413, n6414, n6415, n6416, n6417, n6418, n6419, n6420, n6421, n6422, 
      n6423, n6424, n6425, n6426, n6427, n6428, n6429, n6430, n6431, n6432, 
      n6433, n6434, n6435, n6436, n6437, n6438, n6439, n6440, n6441, n6442, 
      n6443, n6444, n6445, n6446, n6447, n6448, n6449, n6450, n6451, n6452, 
      n6453, n6454, n6455, n6456, n6457, n6458, n6459, n6460, n6461, n6462, 
      n6463, n6464, n6465, n6466, n6467, n6468, n6469, n6470, n6471, n6472, 
      n6473, n6474, n6475, n6476, n6477, n6478, n6479, n6480, n6481, n6482, 
      n6483, n6484, n6485, n6486, n6487, n6488, n6489, n6490, n6491, n6492, 
      n6493, n6494, n6495, n6496, n6497, n6498, n6499, n6500, n6501, n6502, 
      n6503, n6504, n6505, n6506, n6507, n6508, n6509, n6510, n6511, n6512, 
      n6513, n6514, n6515, n6516, n6517, n6518, n6519, n6520, n6521, n6522, 
      n6523, n6524, n6525, n6526, n6527, n6528, n6529, n6530, n6531, n6532, 
      n6533, n6534, n6535, n6536, n6537, n6538, n6539, n6540, n6541, n6542, 
      n6543, n6544, n6545, n6546, n6547, n6548, n6549, n6550, n6551, n6552, 
      n6553, n6554, n6555, n6556, n6557, n6558, n6559, n6560, n6561, n6562, 
      n6563, n6564, n6565, n6566, n6567, n6568, n6569, n6570, n6571, n6572, 
      n6573, n6574, n6575, n6576, n6577, n6578, n6579, n6580, n6581, n6582, 
      n6583, n6584, n6585, n6586, n6587, n6588, n6589, n6590, n6591, n6592, 
      n6593, n6594, n6595, n6596, n6597, n6598, n6599, n6600, n6601, n6602, 
      n6603, n6604, n6605, n6606, n6607, n6608, n6609, n6610, n6611, n6612, 
      n6613, n6614, n6615, n6616, n6617, n6618, n6619, n6620, n6621, n6622, 
      n6623, n6624, n6625, n6626, n6627, n6628, n6629, n6630, n6631, n6632, 
      n6633, n6634, n6635, n6636, n6637, n6638, n6639, n6640, n6641, n6642, 
      n6643, n6644, n6645, n6646, n6647, n6648, n6649, n6650, n6651, n6652, 
      n6653, n6654, n6655, n6656, n6657, n6658, n6659, n6660, n6661, n6662, 
      n6663, n6664, n6665, n6666, n6667, n6668, n6669, n6670, n6671, n6672, 
      n6673, n6674, n6675, n6676, n6677, n6678, n6679, n6680, n6681, n6682, 
      n6683, n6684, n6685, n6686, n6687, n6688, n6689, n6690, n6691, n6692, 
      n6693, n6694, n6695, n6696, n6697, n6698, n6699, n6700, n6701, n6702, 
      n6703, n6704, n6705, n6706, n6707, n6708, n6709, n6710, n6711, n6712, 
      n6713, n6714, n6715, n6716, n6717, n6718, n6719, n6720, n6721, n6722, 
      n6723, n6724, n6725, n6726, n6727, n6728, n6729, n6730, n6731, n6732, 
      n6733, n6734, n6735, n6736, n6737, n6738, n6739, n6740, n6741, n6742, 
      n6743, n6744, n6745, n6746, n6747, n6748, n6749, n6750, n6751, n6752, 
      n6753, n6754, n6755, n6756, n6757, n6758, n6759, n6760, n6761, n6762, 
      n6763, n6764, n6765, n6766, n6767, n6768, n6769, n6770, n6771, n6772, 
      n6773, n6774, n6775, n6776, n6777, n6778, n6779, n6780, n6781, n6782, 
      n6783, n6784, n6785, n6786, n6787, n6788, n6789, n6790, n6791, n6792, 
      n6793, n6794, n6795, n6796, n6797, n6798, n6799, n6800, n6801, n6802, 
      n6803, n6804, n6805, n6806, n6807, n6808, n6809, n6810, n6811, n6812, 
      n6813, n6814, n6815, n6816, n6817, n6818, n6819, n6820, n6821, n6822, 
      n6823, n6824, n6825, n6826, n6827, n6828, n6829, n6830, n6831, n6832, 
      n6833, n6834, n6835, n6836, n6837, n6838, n6839, n6840, n6841, n6842, 
      n6843, n6844, n6845, n6846, n6847, n6848, n6849, n6850, n6851, n6852, 
      n6853, n6854, n6855, n6856, n6857, n6858, n6859, n6860, n6861, n6862, 
      n6863, n6864, n6865, n6866, n6867, n6868, n6869, n6870, n6871, n6872, 
      n6873, n6874, n6875, n6876, n6877, n6878, n6879, n6880, n6881, n6882, 
      n6883, n6884, n6885, n6886, n6887, n6888, n6889, n6890, n6891, n6892, 
      n6893, n6894, n6895, n6896, n6897, n6898, n6899, n6900, n6901, n6902, 
      n6903, n6904, n6905, n6906, n6907, n6908, n6909, n6910, n6911, n6912, 
      n6913, n6914, n6915, n6916, n6917, n6918, n6919, n6920, n6921, n6922, 
      n6923, n6924, n6925, n6926, n6927, n6928, n6929, n6930, n6931, n6932, 
      n6933, n6934, n6935, n6936, n6937, n6938, n6939, n6940, n6941, n6942, 
      n6943, n6944, n6945, n6946, n6947, n6948, n6949, n6950, n6951, n6952, 
      n6953, n6954, n6955, n6956, n6957, n6958, n6959, n6960, n6961, n6962, 
      n6963, n6964, n6965, n6966, n6967, n6968, n6969, n6970, n6971, n6972, 
      n6973, n6974, n6975, n6976, n6977, n6978, n6979, n6980, n6981, n6982, 
      n6983, n6984, n6985, n6986, n6987, n6988, n6989, n6990, n6991, n6992, 
      n6993, n6994, n6995, n6996, n6997, n6998, n6999, n7000, n7001, n7002, 
      n7003, n7004, n7005, n7006, n7007, n7008, n7009, n7010, n7011, n7012, 
      n7013, n7014, n7015, n7016, n7017, n7018, n7019, n7020, n7021, n7022, 
      n7023, n7024, n7025, n7026, n7027, n7028, n7029, n7030, n7031, n7032, 
      n7033, n7034, n7035, n7036, n7037, n7038, n7039, n7040, n7041, n7042, 
      n7043, n7044, n7045, n7046, n7047, n7048, n7049, n7050, n7051, n7052, 
      n7053, n7054, n7055, n7056, n7057, n7058, n7059, n7060, n7061, n7062, 
      n7063, n7064, n7065, n7066, n7067, n7068, n7069, n7070, n7071, n7072, 
      n7073, n7074, n7075, n7076, n7077, n7078, n7079, n7080, n7081, n7082, 
      n7083, n7084, n7085, n7086, n7087, n7088, n7089, n7090, n7091, n7092, 
      n7093, n7094, n7095, n7096, n7097, n7098, n7099, n7100, n7101 : std_logic
      ;

begin
   
   U2 : GTECH_NOT port map( A => n1952, Z => n3);
   U3 : GTECH_NOT port map( A => n1936, Z => n4);
   U4 : GTECH_NOT port map( A => n6330, Z => n5);
   U5 : GTECH_NOT port map( A => n6452, Z => n6);
   U6 : GTECH_NOT port map( A => n6188, Z => n7);
   U7 : GTECH_NOT port map( A => n6183, Z => n8);
   U8 : GTECH_NOT port map( A => n6035, Z => n9);
   U9 : GTECH_NOT port map( A => n6030, Z => n10);
   U10 : GTECH_NOT port map( A => n5871, Z => n11);
   U11 : GTECH_NOT port map( A => n5866, Z => n12);
   U12 : GTECH_NOT port map( A => n5696, Z => n13);
   U13 : GTECH_NOT port map( A => n5691, Z => n14);
   U14 : GTECH_NOT port map( A => n5510, Z => n15);
   U15 : GTECH_NOT port map( A => n5505, Z => n16);
   U16 : GTECH_NOT port map( A => n5313, Z => n17);
   U17 : GTECH_NOT port map( A => n5308, Z => n18);
   U18 : GTECH_NOT port map( A => n5105, Z => n19);
   U19 : GTECH_NOT port map( A => n5100, Z => n20);
   U20 : GTECH_NOT port map( A => n4886, Z => n21);
   U21 : GTECH_NOT port map( A => n4873, Z => n22);
   U22 : GTECH_NOT port map( A => n4648, Z => n23);
   U23 : GTECH_NOT port map( A => n4643, Z => n24);
   U24 : GTECH_NOT port map( A => n4407, Z => n25);
   U25 : GTECH_NOT port map( A => n4402, Z => n26);
   U26 : GTECH_NOT port map( A => n4155, Z => n27);
   U27 : GTECH_NOT port map( A => n4150, Z => n28);
   U28 : GTECH_NOT port map( A => n3892, Z => n29);
   U29 : GTECH_NOT port map( A => n3887, Z => n30);
   U30 : GTECH_NOT port map( A => n3618, Z => n31);
   U31 : GTECH_NOT port map( A => n3613, Z => n32);
   U32 : GTECH_NOT port map( A => n3333, Z => n33);
   U33 : GTECH_NOT port map( A => n3328, Z => n34);
   U34 : GTECH_NOT port map( A => n3037, Z => n35);
   U35 : GTECH_NOT port map( A => n3032, Z => n36);
   U36 : GTECH_NOT port map( A => n2730, Z => n37);
   U37 : GTECH_NOT port map( A => n2725, Z => n38);
   U38 : GTECH_NOT port map( A => n2412, Z => n39);
   U39 : GTECH_NOT port map( A => n2407, Z => n40);
   U40 : GTECH_NOT port map( A => n2083, Z => n41);
   U41 : GTECH_NOT port map( A => n2403, Z => n42);
   U42 : GTECH_NOT port map( A => n6323, Z => n43);
   U43 : GTECH_NOT port map( A => n6458, Z => n44);
   U44 : GTECH_NOT port map( A => n6461, Z => n45);
   U45 : GTECH_NOT port map( A => n6572, Z => n46);
   U46 : GTECH_NOT port map( A => n6575, Z => n47);
   U47 : GTECH_NOT port map( A => n1928, Z => n48);
   U48 : GTECH_NOT port map( A => n1932, Z => n49);
   U49 : GTECH_NOT port map( A => n1942, Z => n50);
   U50 : GTECH_NOT port map( A => n6581, Z => n51);
   U51 : GTECH_NOT port map( A => n1944, Z => n52);
   U52 : GTECH_NOT port map( A => n1948, Z => n53);
   U53 : GTECH_NOT port map( A => n1958, Z => n54);
   U54 : GTECH_NOT port map( A => n6587, Z => n55);
   U55 : GTECH_NOT port map( A => n1960, Z => n56);
   U56 : GTECH_NOT port map( A => n1964, Z => n57);
   U57 : GTECH_NOT port map( A => n1969, Z => n58);
   U58 : GTECH_NOT port map( A => n1968, Z => n59);
   U59 : GTECH_NOT port map( A => n6639, Z => n60);
   U60 : GTECH_NOT port map( A => n6643, Z => n61);
   U61 : GTECH_NOT port map( A => n1953, Z => n62);
   U62 : GTECH_NOT port map( A => n6647, Z => n63);
   U63 : GTECH_NOT port map( A => n6651, Z => n64);
   U64 : GTECH_NOT port map( A => n6655, Z => n65);
   U65 : GTECH_NOT port map( A => n6659, Z => n66);
   U66 : GTECH_NOT port map( A => n1937, Z => n67);
   U67 : GTECH_NOT port map( A => n6663, Z => n68);
   U68 : GTECH_NOT port map( A => n6667, Z => n69);
   U69 : GTECH_NOT port map( A => n6671, Z => n70);
   U70 : GTECH_NOT port map( A => n6568, Z => n71);
   U71 : GTECH_NOT port map( A => n6457, Z => n72);
   U72 : GTECH_NOT port map( A => n6464, Z => n73);
   U73 : GTECH_NOT port map( A => n6448, Z => n74);
   U74 : GTECH_NOT port map( A => n6333, Z => n75);
   U75 : GTECH_NOT port map( A => n6317, Z => n76);
   U76 : GTECH_NOT port map( A => n6184, Z => n77);
   U77 : GTECH_NOT port map( A => n6191, Z => n78);
   U78 : GTECH_NOT port map( A => n6175, Z => n79);
   U79 : GTECH_NOT port map( A => n6032, Z => n80);
   U80 : GTECH_NOT port map( A => n6038, Z => n81);
   U81 : GTECH_NOT port map( A => n6022, Z => n82);
   U82 : GTECH_NOT port map( A => n5867, Z => n83);
   U83 : GTECH_NOT port map( A => n5874, Z => n84);
   U84 : GTECH_NOT port map( A => n5858, Z => n85);
   U85 : GTECH_NOT port map( A => n5693, Z => n86);
   U86 : GTECH_NOT port map( A => n5699, Z => n87);
   U87 : GTECH_NOT port map( A => n5683, Z => n88);
   U88 : GTECH_NOT port map( A => n5506, Z => n89);
   U89 : GTECH_NOT port map( A => n5513, Z => n90);
   U90 : GTECH_NOT port map( A => n5497, Z => n91);
   U91 : GTECH_NOT port map( A => n5310, Z => n92);
   U92 : GTECH_NOT port map( A => n5316, Z => n93);
   U93 : GTECH_NOT port map( A => n5300, Z => n94);
   U94 : GTECH_NOT port map( A => n5101, Z => n95);
   U95 : GTECH_NOT port map( A => n5108, Z => n96);
   U96 : GTECH_NOT port map( A => n5092, Z => n97);
   U97 : GTECH_NOT port map( A => n4875, Z => n98);
   U98 : GTECH_NOT port map( A => n4889, Z => n99);
   U99 : GTECH_NOT port map( A => n4865, Z => n100);
   U100 : GTECH_NOT port map( A => n4644, Z => n101);
   U101 : GTECH_NOT port map( A => n4651, Z => n102);
   U102 : GTECH_NOT port map( A => n4635, Z => n103);
   U103 : GTECH_NOT port map( A => n4404, Z => n104);
   U104 : GTECH_NOT port map( A => n4410, Z => n105);
   U105 : GTECH_NOT port map( A => n4394, Z => n106);
   U106 : GTECH_NOT port map( A => n4151, Z => n107);
   U107 : GTECH_NOT port map( A => n4158, Z => n108);
   U108 : GTECH_NOT port map( A => n4142, Z => n109);
   U109 : GTECH_NOT port map( A => n3889, Z => n110);
   U110 : GTECH_NOT port map( A => n3895, Z => n111);
   U111 : GTECH_NOT port map( A => n3879, Z => n112);
   U112 : GTECH_NOT port map( A => n3614, Z => n113);
   U113 : GTECH_NOT port map( A => n3621, Z => n114);
   U114 : GTECH_NOT port map( A => n3605, Z => n115);
   U115 : GTECH_NOT port map( A => n3330, Z => n116);
   U116 : GTECH_NOT port map( A => n3336, Z => n117);
   U117 : GTECH_NOT port map( A => n3320, Z => n118);
   U118 : GTECH_NOT port map( A => n3033, Z => n119);
   U119 : GTECH_NOT port map( A => n3040, Z => n120);
   U120 : GTECH_NOT port map( A => n3024, Z => n121);
   U121 : GTECH_NOT port map( A => n2727, Z => n122);
   U122 : GTECH_NOT port map( A => n2733, Z => n123);
   U123 : GTECH_NOT port map( A => n2717, Z => n124);
   U124 : GTECH_NOT port map( A => n2408, Z => n125);
   U125 : GTECH_NOT port map( A => n2415, Z => n126);
   U126 : GTECH_NOT port map( A => n2399, Z => n127);
   U127 : GTECH_NOT port map( A => n2086, Z => n128);
   U128 : GTECH_NOT port map( A => n2070, Z => n129);
   U129 : GTECH_NOT port map( A => n6632, Z => n130);
   U130 : GTECH_NOT port map( A => n6640, Z => n131);
   U131 : GTECH_NOT port map( A => n6818, Z => n132);
   U132 : GTECH_NOT port map( A => n6821, Z => n133);
   U133 : GTECH_NOT port map( A => n6648, Z => n134);
   U134 : GTECH_NOT port map( A => n6826, Z => n135);
   U135 : GTECH_NOT port map( A => n6829, Z => n136);
   U136 : GTECH_NOT port map( A => n6656, Z => n137);
   U137 : GTECH_NOT port map( A => n6834, Z => n138);
   U138 : GTECH_NOT port map( A => n6837, Z => n139);
   U139 : GTECH_NOT port map( A => n6664, Z => n140);
   U140 : GTECH_NOT port map( A => n6841, Z => n141);
   U141 : GTECH_NOT port map( A => n6756, Z => n142);
   U142 : GTECH_NOT port map( A => n6569, Z => n143);
   U143 : GTECH_NOT port map( A => n6674, Z => n144);
   U144 : GTECH_NOT port map( A => n6560, Z => n145);
   U145 : GTECH_NOT port map( A => n6450, Z => n146);
   U146 : GTECH_NOT port map( A => n6467, Z => n147);
   U147 : GTECH_NOT port map( A => n6440, Z => n148);
   U148 : GTECH_NOT port map( A => n6318, Z => n149);
   U149 : GTECH_NOT port map( A => n6336, Z => n150);
   U150 : GTECH_NOT port map( A => n6309, Z => n151);
   U151 : GTECH_NOT port map( A => n6177, Z => n152);
   U152 : GTECH_NOT port map( A => n6194, Z => n153);
   U153 : GTECH_NOT port map( A => n6167, Z => n154);
   U154 : GTECH_NOT port map( A => n6023, Z => n155);
   U155 : GTECH_NOT port map( A => n6041, Z => n156);
   U156 : GTECH_NOT port map( A => n6014, Z => n157);
   U157 : GTECH_NOT port map( A => n5860, Z => n158);
   U158 : GTECH_NOT port map( A => n5877, Z => n159);
   U159 : GTECH_NOT port map( A => n5850, Z => n160);
   U160 : GTECH_NOT port map( A => n5684, Z => n161);
   U161 : GTECH_NOT port map( A => n5702, Z => n162);
   U162 : GTECH_NOT port map( A => n5675, Z => n163);
   U163 : GTECH_NOT port map( A => n5499, Z => n164);
   U164 : GTECH_NOT port map( A => n5516, Z => n165);
   U165 : GTECH_NOT port map( A => n5489, Z => n166);
   U166 : GTECH_NOT port map( A => n5301, Z => n167);
   U167 : GTECH_NOT port map( A => n5319, Z => n168);
   U168 : GTECH_NOT port map( A => n5292, Z => n169);
   U169 : GTECH_NOT port map( A => n5094, Z => n170);
   U170 : GTECH_NOT port map( A => n5111, Z => n171);
   U171 : GTECH_NOT port map( A => n5084, Z => n172);
   U172 : GTECH_NOT port map( A => n4866, Z => n173);
   U173 : GTECH_NOT port map( A => n4892, Z => n174);
   U174 : GTECH_NOT port map( A => n4857, Z => n175);
   U175 : GTECH_NOT port map( A => n4637, Z => n176);
   U176 : GTECH_NOT port map( A => n4654, Z => n177);
   U177 : GTECH_NOT port map( A => n4627, Z => n178);
   U178 : GTECH_NOT port map( A => n4395, Z => n179);
   U179 : GTECH_NOT port map( A => n4413, Z => n180);
   U180 : GTECH_NOT port map( A => n4386, Z => n181);
   U181 : GTECH_NOT port map( A => n4144, Z => n182);
   U182 : GTECH_NOT port map( A => n4161, Z => n183);
   U183 : GTECH_NOT port map( A => n4134, Z => n184);
   U184 : GTECH_NOT port map( A => n3880, Z => n185);
   U185 : GTECH_NOT port map( A => n3898, Z => n186);
   U186 : GTECH_NOT port map( A => n3871, Z => n187);
   U187 : GTECH_NOT port map( A => n3607, Z => n188);
   U188 : GTECH_NOT port map( A => n3624, Z => n189);
   U189 : GTECH_NOT port map( A => n3597, Z => n190);
   U190 : GTECH_NOT port map( A => n3321, Z => n191);
   U191 : GTECH_NOT port map( A => n3339, Z => n192);
   U192 : GTECH_NOT port map( A => n3312, Z => n193);
   U193 : GTECH_NOT port map( A => n3026, Z => n194);
   U194 : GTECH_NOT port map( A => n3043, Z => n195);
   U195 : GTECH_NOT port map( A => n3016, Z => n196);
   U196 : GTECH_NOT port map( A => n2718, Z => n197);
   U197 : GTECH_NOT port map( A => n2736, Z => n198);
   U198 : GTECH_NOT port map( A => n2709, Z => n199);
   U199 : GTECH_NOT port map( A => n2401, Z => n200);
   U200 : GTECH_NOT port map( A => n2418, Z => n201);
   U201 : GTECH_NOT port map( A => n2391, Z => n202);
   U202 : GTECH_NOT port map( A => n2072, Z => n203);
   U203 : GTECH_NOT port map( A => n2088, Z => n204);
   U204 : GTECH_NOT port map( A => n2067, Z => n205);
   U205 : GTECH_NOT port map( A => n6809, Z => n206);
   U206 : GTECH_NOT port map( A => n6817, Z => n207);
   U207 : GTECH_NOT port map( A => n6951, Z => n208);
   U208 : GTECH_NOT port map( A => n6954, Z => n209);
   U209 : GTECH_NOT port map( A => n6825, Z => n210);
   U210 : GTECH_NOT port map( A => n6959, Z => n211);
   U211 : GTECH_NOT port map( A => n6962, Z => n212);
   U212 : GTECH_NOT port map( A => n6833, Z => n213);
   U213 : GTECH_NOT port map( A => n6966, Z => n214);
   U214 : GTECH_NOT port map( A => n6904, Z => n215);
   U215 : GTECH_NOT port map( A => n6757, Z => n216);
   U216 : GTECH_NOT port map( A => n6844, Z => n217);
   U217 : GTECH_NOT port map( A => n6748, Z => n218);
   U218 : GTECH_NOT port map( A => n6562, Z => n219);
   U219 : GTECH_NOT port map( A => n6677, Z => n220);
   U220 : GTECH_NOT port map( A => n6552, Z => n221);
   U221 : GTECH_NOT port map( A => n6441, Z => n222);
   U222 : GTECH_NOT port map( A => n6470, Z => n223);
   U223 : GTECH_NOT port map( A => n6432, Z => n224);
   U224 : GTECH_NOT port map( A => n6311, Z => n225);
   U225 : GTECH_NOT port map( A => n6339, Z => n226);
   U226 : GTECH_NOT port map( A => n6301, Z => n227);
   U227 : GTECH_NOT port map( A => n6168, Z => n228);
   U228 : GTECH_NOT port map( A => n6197, Z => n229);
   U229 : GTECH_NOT port map( A => n6159, Z => n230);
   U230 : GTECH_NOT port map( A => n6016, Z => n231);
   U231 : GTECH_NOT port map( A => n6044, Z => n232);
   U232 : GTECH_NOT port map( A => n6006, Z => n233);
   U233 : GTECH_NOT port map( A => n5851, Z => n234);
   U234 : GTECH_NOT port map( A => n5880, Z => n235);
   U235 : GTECH_NOT port map( A => n5842, Z => n236);
   U236 : GTECH_NOT port map( A => n5677, Z => n237);
   U237 : GTECH_NOT port map( A => n5705, Z => n238);
   U238 : GTECH_NOT port map( A => n5667, Z => n239);
   U239 : GTECH_NOT port map( A => n5490, Z => n240);
   U240 : GTECH_NOT port map( A => n5519, Z => n241);
   U241 : GTECH_NOT port map( A => n5481, Z => n242);
   U242 : GTECH_NOT port map( A => n5294, Z => n243);
   U243 : GTECH_NOT port map( A => n5322, Z => n244);
   U244 : GTECH_NOT port map( A => n5284, Z => n245);
   U245 : GTECH_NOT port map( A => n5085, Z => n246);
   U246 : GTECH_NOT port map( A => n5114, Z => n247);
   U247 : GTECH_NOT port map( A => n5076, Z => n248);
   U248 : GTECH_NOT port map( A => n4859, Z => n249);
   U249 : GTECH_NOT port map( A => n4895, Z => n250);
   U250 : GTECH_NOT port map( A => n4849, Z => n251);
   U251 : GTECH_NOT port map( A => n4628, Z => n252);
   U252 : GTECH_NOT port map( A => n4657, Z => n253);
   U253 : GTECH_NOT port map( A => n4619, Z => n254);
   U254 : GTECH_NOT port map( A => n4388, Z => n255);
   U255 : GTECH_NOT port map( A => n4416, Z => n256);
   U256 : GTECH_NOT port map( A => n4378, Z => n257);
   U257 : GTECH_NOT port map( A => n4135, Z => n258);
   U258 : GTECH_NOT port map( A => n4164, Z => n259);
   U259 : GTECH_NOT port map( A => n4126, Z => n260);
   U260 : GTECH_NOT port map( A => n3873, Z => n261);
   U261 : GTECH_NOT port map( A => n3901, Z => n262);
   U262 : GTECH_NOT port map( A => n3863, Z => n263);
   U263 : GTECH_NOT port map( A => n3598, Z => n264);
   U264 : GTECH_NOT port map( A => n3627, Z => n265);
   U265 : GTECH_NOT port map( A => n3589, Z => n266);
   U266 : GTECH_NOT port map( A => n3314, Z => n267);
   U267 : GTECH_NOT port map( A => n3342, Z => n268);
   U268 : GTECH_NOT port map( A => n3304, Z => n269);
   U269 : GTECH_NOT port map( A => n3017, Z => n270);
   U270 : GTECH_NOT port map( A => n3046, Z => n271);
   U271 : GTECH_NOT port map( A => n3008, Z => n272);
   U272 : GTECH_NOT port map( A => n2711, Z => n273);
   U273 : GTECH_NOT port map( A => n2739, Z => n274);
   U274 : GTECH_NOT port map( A => n2701, Z => n275);
   U275 : GTECH_NOT port map( A => n2392, Z => n276);
   U276 : GTECH_NOT port map( A => n2421, Z => n277);
   U277 : GTECH_NOT port map( A => n2383, Z => n278);
   U278 : GTECH_NOT port map( A => n2068, Z => n279);
   U279 : GTECH_NOT port map( A => n2091, Z => n280);
   U280 : GTECH_NOT port map( A => n2064, Z => n281);
   U281 : GTECH_NOT port map( A => n6942, Z => n282);
   U282 : GTECH_NOT port map( A => n7032, Z => n283);
   U283 : GTECH_NOT port map( A => n6950, Z => n284);
   U284 : GTECH_NOT port map( A => n7040, Z => n285);
   U285 : GTECH_NOT port map( A => n7043, Z => n286);
   U286 : GTECH_NOT port map( A => n6958, Z => n287);
   U287 : GTECH_NOT port map( A => n7047, Z => n288);
   U288 : GTECH_NOT port map( A => n7007, Z => n289);
   U289 : GTECH_NOT port map( A => n6905, Z => n290);
   U290 : GTECH_NOT port map( A => n6969, Z => n291);
   U291 : GTECH_NOT port map( A => n6896, Z => n292);
   U292 : GTECH_NOT port map( A => n6750, Z => n293);
   U293 : GTECH_NOT port map( A => n6847, Z => n294);
   U294 : GTECH_NOT port map( A => n6740, Z => n295);
   U295 : GTECH_NOT port map( A => n6553, Z => n296);
   U296 : GTECH_NOT port map( A => n6680, Z => n297);
   U297 : GTECH_NOT port map( A => n6544, Z => n298);
   U298 : GTECH_NOT port map( A => n6434, Z => n299);
   U299 : GTECH_NOT port map( A => n6473, Z => n300);
   U300 : GTECH_NOT port map( A => n6424, Z => n301);
   U301 : GTECH_NOT port map( A => n6302, Z => n302);
   U302 : GTECH_NOT port map( A => n6342, Z => n303);
   U303 : GTECH_NOT port map( A => n6293, Z => n304);
   U304 : GTECH_NOT port map( A => n6161, Z => n305);
   U305 : GTECH_NOT port map( A => n6200, Z => n306);
   U306 : GTECH_NOT port map( A => n6151, Z => n307);
   U307 : GTECH_NOT port map( A => n6007, Z => n308);
   U308 : GTECH_NOT port map( A => n6047, Z => n309);
   U309 : GTECH_NOT port map( A => n5998, Z => n310);
   U310 : GTECH_NOT port map( A => n5844, Z => n311);
   U311 : GTECH_NOT port map( A => n5883, Z => n312);
   U312 : GTECH_NOT port map( A => n5834, Z => n313);
   U313 : GTECH_NOT port map( A => n5668, Z => n314);
   U314 : GTECH_NOT port map( A => n5708, Z => n315);
   U315 : GTECH_NOT port map( A => n5659, Z => n316);
   U316 : GTECH_NOT port map( A => n5483, Z => n317);
   U317 : GTECH_NOT port map( A => n5522, Z => n318);
   U318 : GTECH_NOT port map( A => n5473, Z => n319);
   U319 : GTECH_NOT port map( A => n5285, Z => n320);
   U320 : GTECH_NOT port map( A => n5325, Z => n321);
   U321 : GTECH_NOT port map( A => n5276, Z => n322);
   U322 : GTECH_NOT port map( A => n5078, Z => n323);
   U323 : GTECH_NOT port map( A => n5117, Z => n324);
   U324 : GTECH_NOT port map( A => n5068, Z => n325);
   U325 : GTECH_NOT port map( A => n4850, Z => n326);
   U326 : GTECH_NOT port map( A => n4898, Z => n327);
   U327 : GTECH_NOT port map( A => n4841, Z => n328);
   U328 : GTECH_NOT port map( A => n4621, Z => n329);
   U329 : GTECH_NOT port map( A => n4660, Z => n330);
   U330 : GTECH_NOT port map( A => n4611, Z => n331);
   U331 : GTECH_NOT port map( A => n4379, Z => n332);
   U332 : GTECH_NOT port map( A => n4419, Z => n333);
   U333 : GTECH_NOT port map( A => n4370, Z => n334);
   U334 : GTECH_NOT port map( A => n4128, Z => n335);
   U335 : GTECH_NOT port map( A => n4167, Z => n336);
   U336 : GTECH_NOT port map( A => n4118, Z => n337);
   U337 : GTECH_NOT port map( A => n3864, Z => n338);
   U338 : GTECH_NOT port map( A => n3904, Z => n339);
   U339 : GTECH_NOT port map( A => n3855, Z => n340);
   U340 : GTECH_NOT port map( A => n3591, Z => n341);
   U341 : GTECH_NOT port map( A => n3630, Z => n342);
   U342 : GTECH_NOT port map( A => n3581, Z => n343);
   U343 : GTECH_NOT port map( A => n3305, Z => n344);
   U344 : GTECH_NOT port map( A => n3345, Z => n345);
   U345 : GTECH_NOT port map( A => n3296, Z => n346);
   U346 : GTECH_NOT port map( A => n3010, Z => n347);
   U347 : GTECH_NOT port map( A => n3049, Z => n348);
   U348 : GTECH_NOT port map( A => n3000, Z => n349);
   U349 : GTECH_NOT port map( A => n2702, Z => n350);
   U350 : GTECH_NOT port map( A => n2742, Z => n351);
   U351 : GTECH_NOT port map( A => n2693, Z => n352);
   U352 : GTECH_NOT port map( A => n2385, Z => n353);
   U353 : GTECH_NOT port map( A => n2424, Z => n354);
   U354 : GTECH_NOT port map( A => n2375, Z => n355);
   U355 : GTECH_NOT port map( A => n2066, Z => n356);
   U356 : GTECH_NOT port map( A => n2094, Z => n357);
   U357 : GTECH_NOT port map( A => n2061, Z => n358);
   U358 : GTECH_NOT port map( A => n7036, Z => n359);
   U359 : GTECH_NOT port map( A => n7008, Z => n360);
   U360 : GTECH_NOT port map( A => n7050, Z => n361);
   U361 : GTECH_NOT port map( A => n6999, Z => n362);
   U362 : GTECH_NOT port map( A => n6898, Z => n363);
   U363 : GTECH_NOT port map( A => n6972, Z => n364);
   U364 : GTECH_NOT port map( A => n6888, Z => n365);
   U365 : GTECH_NOT port map( A => n6741, Z => n366);
   U366 : GTECH_NOT port map( A => n6850, Z => n367);
   U367 : GTECH_NOT port map( A => n6732, Z => n368);
   U368 : GTECH_NOT port map( A => n6546, Z => n369);
   U369 : GTECH_NOT port map( A => n6683, Z => n370);
   U370 : GTECH_NOT port map( A => n6536, Z => n371);
   U371 : GTECH_NOT port map( A => n6425, Z => n372);
   U372 : GTECH_NOT port map( A => n6476, Z => n373);
   U373 : GTECH_NOT port map( A => n6416, Z => n374);
   U374 : GTECH_NOT port map( A => n6295, Z => n375);
   U375 : GTECH_NOT port map( A => n6345, Z => n376);
   U376 : GTECH_NOT port map( A => n6285, Z => n377);
   U377 : GTECH_NOT port map( A => n6152, Z => n378);
   U378 : GTECH_NOT port map( A => n6203, Z => n379);
   U379 : GTECH_NOT port map( A => n6143, Z => n380);
   U380 : GTECH_NOT port map( A => n6000, Z => n381);
   U381 : GTECH_NOT port map( A => n6050, Z => n382);
   U382 : GTECH_NOT port map( A => n5990, Z => n383);
   U383 : GTECH_NOT port map( A => n5835, Z => n384);
   U384 : GTECH_NOT port map( A => n5886, Z => n385);
   U385 : GTECH_NOT port map( A => n5826, Z => n386);
   U386 : GTECH_NOT port map( A => n5661, Z => n387);
   U387 : GTECH_NOT port map( A => n5711, Z => n388);
   U388 : GTECH_NOT port map( A => n5651, Z => n389);
   U389 : GTECH_NOT port map( A => n5474, Z => n390);
   U390 : GTECH_NOT port map( A => n5525, Z => n391);
   U391 : GTECH_NOT port map( A => n5465, Z => n392);
   U392 : GTECH_NOT port map( A => n5278, Z => n393);
   U393 : GTECH_NOT port map( A => n5328, Z => n394);
   U394 : GTECH_NOT port map( A => n5268, Z => n395);
   U395 : GTECH_NOT port map( A => n5069, Z => n396);
   U396 : GTECH_NOT port map( A => n5120, Z => n397);
   U397 : GTECH_NOT port map( A => n5060, Z => n398);
   U398 : GTECH_NOT port map( A => n4843, Z => n399);
   U399 : GTECH_NOT port map( A => n4901, Z => n400);
   U400 : GTECH_NOT port map( A => n4833, Z => n401);
   U401 : GTECH_NOT port map( A => n4612, Z => n402);
   U402 : GTECH_NOT port map( A => n4663, Z => n403);
   U403 : GTECH_NOT port map( A => n4603, Z => n404);
   U404 : GTECH_NOT port map( A => n4372, Z => n405);
   U405 : GTECH_NOT port map( A => n4422, Z => n406);
   U406 : GTECH_NOT port map( A => n4362, Z => n407);
   U407 : GTECH_NOT port map( A => n4119, Z => n408);
   U408 : GTECH_NOT port map( A => n4170, Z => n409);
   U409 : GTECH_NOT port map( A => n4110, Z => n410);
   U410 : GTECH_NOT port map( A => n3857, Z => n411);
   U411 : GTECH_NOT port map( A => n3907, Z => n412);
   U412 : GTECH_NOT port map( A => n3847, Z => n413);
   U413 : GTECH_NOT port map( A => n3582, Z => n414);
   U414 : GTECH_NOT port map( A => n3633, Z => n415);
   U415 : GTECH_NOT port map( A => n3573, Z => n416);
   U416 : GTECH_NOT port map( A => n3298, Z => n417);
   U417 : GTECH_NOT port map( A => n3348, Z => n418);
   U418 : GTECH_NOT port map( A => n3288, Z => n419);
   U419 : GTECH_NOT port map( A => n3001, Z => n420);
   U420 : GTECH_NOT port map( A => n3052, Z => n421);
   U421 : GTECH_NOT port map( A => n2992, Z => n422);
   U422 : GTECH_NOT port map( A => n2695, Z => n423);
   U423 : GTECH_NOT port map( A => n2745, Z => n424);
   U424 : GTECH_NOT port map( A => n2685, Z => n425);
   U425 : GTECH_NOT port map( A => n2376, Z => n426);
   U426 : GTECH_NOT port map( A => n2427, Z => n427);
   U427 : GTECH_NOT port map( A => n2367, Z => n428);
   U428 : GTECH_NOT port map( A => n2062, Z => n429);
   U429 : GTECH_NOT port map( A => n2097, Z => n430);
   U430 : GTECH_NOT port map( A => n2058, Z => n431);
   U431 : GTECH_NOT port map( A => n7039, Z => n432);
   U432 : GTECH_NOT port map( A => n7084, Z => n433);
   U433 : GTECH_NOT port map( A => n7090, Z => n434);
   U434 : GTECH_NOT port map( A => n7031, Z => n435);
   U435 : GTECH_NOT port map( A => n7081, Z => n436);
   U436 : GTECH_NOT port map( A => n7067, Z => n437);
   U437 : GTECH_NOT port map( A => B(5), Z => n438);
   U438 : GTECH_NOT port map( A => n2059, Z => n439);
   U439 : GTECH_NOT port map( A => n2368, Z => n440);
   U440 : GTECH_NOT port map( A => n2687, Z => n441);
   U441 : GTECH_NOT port map( A => n2993, Z => n442);
   U442 : GTECH_NOT port map( A => n3290, Z => n443);
   U443 : GTECH_NOT port map( A => n3574, Z => n444);
   U444 : GTECH_NOT port map( A => n3849, Z => n445);
   U445 : GTECH_NOT port map( A => n4111, Z => n446);
   U446 : GTECH_NOT port map( A => n4364, Z => n447);
   U447 : GTECH_NOT port map( A => n4604, Z => n448);
   U448 : GTECH_NOT port map( A => n4835, Z => n449);
   U449 : GTECH_NOT port map( A => n5061, Z => n450);
   U450 : GTECH_NOT port map( A => n5270, Z => n451);
   U451 : GTECH_NOT port map( A => n5466, Z => n452);
   U452 : GTECH_NOT port map( A => n5653, Z => n453);
   U453 : GTECH_NOT port map( A => n5827, Z => n454);
   U454 : GTECH_NOT port map( A => n5992, Z => n455);
   U455 : GTECH_NOT port map( A => n6144, Z => n456);
   U456 : GTECH_NOT port map( A => n6287, Z => n457);
   U457 : GTECH_NOT port map( A => n6417, Z => n458);
   U458 : GTECH_NOT port map( A => n6538, Z => n459);
   U459 : GTECH_NOT port map( A => n6733, Z => n460);
   U460 : GTECH_NOT port map( A => n6890, Z => n461);
   U461 : GTECH_NOT port map( A => n1974, Z => n462);
   U462 : GTECH_NOT port map( A => n6593, Z => n463);
   U463 : GTECH_NOT port map( A => n1976, Z => n464);
   U464 : GTECH_NOT port map( A => n6631, Z => n465);
   U465 : GTECH_NOT port map( A => n6635, Z => n466);
   U466 : GTECH_NOT port map( A => n6624, Z => n467);
   U467 : GTECH_NOT port map( A => n6810, Z => n468);
   U468 : GTECH_NOT port map( A => n6813, Z => n469);
   U469 : GTECH_NOT port map( A => n6801, Z => n470);
   U470 : GTECH_NOT port map( A => n6943, Z => n471);
   U471 : GTECH_NOT port map( A => n6946, Z => n472);
   U472 : GTECH_NOT port map( A => n6934, Z => n473);
   U473 : GTECH_NOT port map( A => n7028, Z => n474);
   U474 : GTECH_NOT port map( A => n7000, Z => n475);
   U475 : GTECH_NOT port map( A => n2060, Z => n476);
   U476 : GTECH_NOT port map( A => n2100, Z => n477);
   U477 : GTECH_NOT port map( A => n2056, Z => n478);
   U478 : GTECH_NOT port map( A => n2103, Z => n479);
   U479 : GTECH_NOT port map( A => n2054, Z => n480);
   U480 : GTECH_NOT port map( A => n2106, Z => n481);
   U481 : GTECH_NOT port map( A => n2050, Z => n482);
   U482 : GTECH_NOT port map( A => n2109, Z => n483);
   U483 : GTECH_NOT port map( A => n2048, Z => n484);
   U484 : GTECH_NOT port map( A => n2112, Z => n485);
   U485 : GTECH_NOT port map( A => n2044, Z => n486);
   U486 : GTECH_NOT port map( A => n2115, Z => n487);
   U487 : GTECH_NOT port map( A => n2042, Z => n488);
   U488 : GTECH_NOT port map( A => n2118, Z => n489);
   U489 : GTECH_NOT port map( A => n2038, Z => n490);
   U490 : GTECH_NOT port map( A => n2121, Z => n491);
   U491 : GTECH_NOT port map( A => n2036, Z => n492);
   U492 : GTECH_NOT port map( A => n2124, Z => n493);
   U493 : GTECH_NOT port map( A => n2032, Z => n494);
   U494 : GTECH_NOT port map( A => n2127, Z => n495);
   U495 : GTECH_NOT port map( A => n2030, Z => n496);
   U496 : GTECH_NOT port map( A => n2130, Z => n497);
   U497 : GTECH_NOT port map( A => n2026, Z => n498);
   U498 : GTECH_NOT port map( A => n2133, Z => n499);
   U499 : GTECH_NOT port map( A => n2024, Z => n500);
   U500 : GTECH_NOT port map( A => n2136, Z => n501);
   U501 : GTECH_NOT port map( A => n2020, Z => n502);
   U502 : GTECH_NOT port map( A => n2139, Z => n503);
   U503 : GTECH_NOT port map( A => n2018, Z => n504);
   U504 : GTECH_NOT port map( A => n2142, Z => n505);
   U505 : GTECH_NOT port map( A => n2014, Z => n506);
   U506 : GTECH_NOT port map( A => n2145, Z => n507);
   U507 : GTECH_NOT port map( A => n2012, Z => n508);
   U508 : GTECH_NOT port map( A => n2148, Z => n509);
   U509 : GTECH_NOT port map( A => n2008, Z => n510);
   U510 : GTECH_NOT port map( A => n2151, Z => n511);
   U511 : GTECH_NOT port map( A => n2006, Z => n512);
   U512 : GTECH_NOT port map( A => n2154, Z => n513);
   U513 : GTECH_NOT port map( A => n2002, Z => n514);
   U514 : GTECH_NOT port map( A => n2157, Z => n515);
   U515 : GTECH_NOT port map( A => n2000, Z => n516);
   U516 : GTECH_NOT port map( A => n2160, Z => n517);
   U517 : GTECH_NOT port map( A => n1996, Z => n518);
   U518 : GTECH_NOT port map( A => n2163, Z => n519);
   U519 : GTECH_NOT port map( A => n1994, Z => n520);
   U520 : GTECH_NOT port map( A => n2166, Z => n521);
   U521 : GTECH_NOT port map( A => n1990, Z => n522);
   U522 : GTECH_NOT port map( A => n2170, Z => n523);
   U523 : GTECH_NOT port map( A => n1988, Z => n524);
   U524 : GTECH_NOT port map( A => n1989, Z => n525);
   U525 : GTECH_NOT port map( A => n1992, Z => n526);
   U526 : GTECH_NOT port map( A => n1995, Z => n527);
   U527 : GTECH_NOT port map( A => n1998, Z => n528);
   U528 : GTECH_NOT port map( A => n2001, Z => n529);
   U529 : GTECH_NOT port map( A => n2004, Z => n530);
   U530 : GTECH_NOT port map( A => n2007, Z => n531);
   U531 : GTECH_NOT port map( A => n2010, Z => n532);
   U532 : GTECH_NOT port map( A => n2013, Z => n533);
   U533 : GTECH_NOT port map( A => n2016, Z => n534);
   U534 : GTECH_NOT port map( A => n2019, Z => n535);
   U535 : GTECH_NOT port map( A => n2022, Z => n536);
   U536 : GTECH_NOT port map( A => n2025, Z => n537);
   U537 : GTECH_NOT port map( A => n2028, Z => n538);
   U538 : GTECH_NOT port map( A => n2031, Z => n539);
   U539 : GTECH_NOT port map( A => n2034, Z => n540);
   U540 : GTECH_NOT port map( A => n2037, Z => n541);
   U541 : GTECH_NOT port map( A => n2040, Z => n542);
   U542 : GTECH_NOT port map( A => n2043, Z => n543);
   U543 : GTECH_NOT port map( A => n2046, Z => n544);
   U544 : GTECH_NOT port map( A => n2049, Z => n545);
   U545 : GTECH_NOT port map( A => n2052, Z => n546);
   U546 : GTECH_NOT port map( A => n2055, Z => n547);
   U547 : GTECH_NOT port map( A => n2369, Z => n548);
   U548 : GTECH_NOT port map( A => n2360, Z => n549);
   U549 : GTECH_NOT port map( A => n2353, Z => n550);
   U550 : GTECH_NOT port map( A => n2344, Z => n551);
   U551 : GTECH_NOT port map( A => n2337, Z => n552);
   U552 : GTECH_NOT port map( A => n2328, Z => n553);
   U553 : GTECH_NOT port map( A => n2321, Z => n554);
   U554 : GTECH_NOT port map( A => n2312, Z => n555);
   U555 : GTECH_NOT port map( A => n2305, Z => n556);
   U556 : GTECH_NOT port map( A => n2296, Z => n557);
   U557 : GTECH_NOT port map( A => n2289, Z => n558);
   U558 : GTECH_NOT port map( A => n2280, Z => n559);
   U559 : GTECH_NOT port map( A => n2273, Z => n560);
   U560 : GTECH_NOT port map( A => n2264, Z => n561);
   U561 : GTECH_NOT port map( A => n2257, Z => n562);
   U562 : GTECH_NOT port map( A => n2248, Z => n563);
   U563 : GTECH_NOT port map( A => n2241, Z => n564);
   U564 : GTECH_NOT port map( A => n2232, Z => n565);
   U565 : GTECH_NOT port map( A => n2225, Z => n566);
   U566 : GTECH_NOT port map( A => n2216, Z => n567);
   U567 : GTECH_NOT port map( A => n2209, Z => n568);
   U568 : GTECH_NOT port map( A => n2200, Z => n569);
   U569 : GTECH_NOT port map( A => n2193, Z => n570);
   U570 : GTECH_NOT port map( A => n2185, Z => n571);
   U571 : GTECH_NOT port map( A => n2499, Z => n572);
   U572 : GTECH_NOT port map( A => n2176, Z => n573);
   U573 : GTECH_NOT port map( A => n2496, Z => n574);
   U574 : GTECH_NOT port map( A => n2502, Z => n575);
   U575 : GTECH_NOT port map( A => B(29), Z => n576);
   U576 : GTECH_NOT port map( A => n2493, Z => n577);
   U577 : GTECH_NOT port map( A => n2191, Z => n578);
   U578 : GTECH_NOT port map( A => n2490, Z => n579);
   U579 : GTECH_NOT port map( A => n2199, Z => n580);
   U580 : GTECH_NOT port map( A => n2487, Z => n581);
   U581 : GTECH_NOT port map( A => n2207, Z => n582);
   U582 : GTECH_NOT port map( A => n2484, Z => n583);
   U583 : GTECH_NOT port map( A => n2215, Z => n584);
   U584 : GTECH_NOT port map( A => n2481, Z => n585);
   U585 : GTECH_NOT port map( A => n2223, Z => n586);
   U586 : GTECH_NOT port map( A => n2478, Z => n587);
   U587 : GTECH_NOT port map( A => n2231, Z => n588);
   U588 : GTECH_NOT port map( A => n2475, Z => n589);
   U589 : GTECH_NOT port map( A => n2239, Z => n590);
   U590 : GTECH_NOT port map( A => n2472, Z => n591);
   U591 : GTECH_NOT port map( A => n2247, Z => n592);
   U592 : GTECH_NOT port map( A => n2469, Z => n593);
   U593 : GTECH_NOT port map( A => n2255, Z => n594);
   U594 : GTECH_NOT port map( A => n2466, Z => n595);
   U595 : GTECH_NOT port map( A => n2263, Z => n596);
   U596 : GTECH_NOT port map( A => n2463, Z => n597);
   U597 : GTECH_NOT port map( A => n2271, Z => n598);
   U598 : GTECH_NOT port map( A => n2460, Z => n599);
   U599 : GTECH_NOT port map( A => n2279, Z => n600);
   U600 : GTECH_NOT port map( A => n2457, Z => n601);
   U601 : GTECH_NOT port map( A => n2287, Z => n602);
   U602 : GTECH_NOT port map( A => n2454, Z => n603);
   U603 : GTECH_NOT port map( A => n2295, Z => n604);
   U604 : GTECH_NOT port map( A => n2451, Z => n605);
   U605 : GTECH_NOT port map( A => n2303, Z => n606);
   U606 : GTECH_NOT port map( A => n2448, Z => n607);
   U607 : GTECH_NOT port map( A => n2311, Z => n608);
   U608 : GTECH_NOT port map( A => n2445, Z => n609);
   U609 : GTECH_NOT port map( A => n2319, Z => n610);
   U610 : GTECH_NOT port map( A => n2442, Z => n611);
   U611 : GTECH_NOT port map( A => n2327, Z => n612);
   U612 : GTECH_NOT port map( A => n2439, Z => n613);
   U613 : GTECH_NOT port map( A => n2335, Z => n614);
   U614 : GTECH_NOT port map( A => n2436, Z => n615);
   U615 : GTECH_NOT port map( A => n2343, Z => n616);
   U616 : GTECH_NOT port map( A => n2433, Z => n617);
   U617 : GTECH_NOT port map( A => n2351, Z => n618);
   U618 : GTECH_NOT port map( A => n2430, Z => n619);
   U619 : GTECH_NOT port map( A => n2359, Z => n620);
   U620 : GTECH_NOT port map( A => n2686, Z => n621);
   U621 : GTECH_NOT port map( A => n2679, Z => n622);
   U622 : GTECH_NOT port map( A => n2670, Z => n623);
   U623 : GTECH_NOT port map( A => n2663, Z => n624);
   U624 : GTECH_NOT port map( A => n2654, Z => n625);
   U625 : GTECH_NOT port map( A => n2647, Z => n626);
   U626 : GTECH_NOT port map( A => n2638, Z => n627);
   U627 : GTECH_NOT port map( A => n2631, Z => n628);
   U628 : GTECH_NOT port map( A => n2622, Z => n629);
   U629 : GTECH_NOT port map( A => n2615, Z => n630);
   U630 : GTECH_NOT port map( A => n2606, Z => n631);
   U631 : GTECH_NOT port map( A => n2599, Z => n632);
   U632 : GTECH_NOT port map( A => n2590, Z => n633);
   U633 : GTECH_NOT port map( A => n2583, Z => n634);
   U634 : GTECH_NOT port map( A => n2574, Z => n635);
   U635 : GTECH_NOT port map( A => n2567, Z => n636);
   U636 : GTECH_NOT port map( A => n2558, Z => n637);
   U637 : GTECH_NOT port map( A => n2551, Z => n638);
   U638 : GTECH_NOT port map( A => n2542, Z => n639);
   U639 : GTECH_NOT port map( A => n2535, Z => n640);
   U640 : GTECH_NOT port map( A => n2526, Z => n641);
   U641 : GTECH_NOT port map( A => n2519, Z => n642);
   U642 : GTECH_NOT port map( A => n2511, Z => n643);
   U643 : GTECH_NOT port map( A => n2814, Z => n644);
   U644 : GTECH_NOT port map( A => A(31), Z => n645);
   U645 : GTECH_NOT port map( A => n2071, Z => n646);
   U646 : GTECH_NOT port map( A => n2409, Z => n647);
   U647 : GTECH_NOT port map( A => n2069, Z => n648);
   U648 : GTECH_NOT port map( A => n2400, Z => n649);
   U649 : GTECH_NOT port map( A => n2726, Z => n650);
   U650 : GTECH_NOT port map( A => n2065, Z => n651);
   U651 : GTECH_NOT port map( A => n2393, Z => n652);
   U652 : GTECH_NOT port map( A => n2719, Z => n653);
   U653 : GTECH_NOT port map( A => n3034, Z => n654);
   U654 : GTECH_NOT port map( A => n2063, Z => n655);
   U655 : GTECH_NOT port map( A => n2384, Z => n656);
   U656 : GTECH_NOT port map( A => n2710, Z => n657);
   U657 : GTECH_NOT port map( A => n3025, Z => n658);
   U658 : GTECH_NOT port map( A => n3329, Z => n659);
   U659 : GTECH_NOT port map( A => n2377, Z => n660);
   U660 : GTECH_NOT port map( A => n2703, Z => n661);
   U661 : GTECH_NOT port map( A => n3018, Z => n662);
   U662 : GTECH_NOT port map( A => n3322, Z => n663);
   U663 : GTECH_NOT port map( A => n3615, Z => n664);
   U664 : GTECH_NOT port map( A => n2057, Z => n665);
   U665 : GTECH_NOT port map( A => n2694, Z => n666);
   U666 : GTECH_NOT port map( A => n3009, Z => n667);
   U667 : GTECH_NOT port map( A => n3313, Z => n668);
   U668 : GTECH_NOT port map( A => n3606, Z => n669);
   U669 : GTECH_NOT port map( A => n3888, Z => n670);
   U670 : GTECH_NOT port map( A => n2053, Z => n671);
   U671 : GTECH_NOT port map( A => n2361, Z => n672);
   U672 : GTECH_NOT port map( A => n3002, Z => n673);
   U673 : GTECH_NOT port map( A => n3306, Z => n674);
   U674 : GTECH_NOT port map( A => n3599, Z => n675);
   U675 : GTECH_NOT port map( A => n3881, Z => n676);
   U676 : GTECH_NOT port map( A => n4152, Z => n677);
   U677 : GTECH_NOT port map( A => n2051, Z => n678);
   U678 : GTECH_NOT port map( A => n2352, Z => n679);
   U679 : GTECH_NOT port map( A => n2748, Z => n680);
   U680 : GTECH_NOT port map( A => n2678, Z => n681);
   U681 : GTECH_NOT port map( A => n3297, Z => n682);
   U682 : GTECH_NOT port map( A => n3590, Z => n683);
   U683 : GTECH_NOT port map( A => n3872, Z => n684);
   U684 : GTECH_NOT port map( A => n4143, Z => n685);
   U685 : GTECH_NOT port map( A => n4403, Z => n686);
   U686 : GTECH_NOT port map( A => n2047, Z => n687);
   U687 : GTECH_NOT port map( A => n2345, Z => n688);
   U688 : GTECH_NOT port map( A => n2751, Z => n689);
   U689 : GTECH_NOT port map( A => n2671, Z => n690);
   U690 : GTECH_NOT port map( A => n2677, Z => n691);
   U691 : GTECH_NOT port map( A => n2994, Z => n692);
   U692 : GTECH_NOT port map( A => n3055, Z => n693);
   U693 : GTECH_NOT port map( A => n2986, Z => n694);
   U694 : GTECH_NOT port map( A => n3583, Z => n695);
   U695 : GTECH_NOT port map( A => n3865, Z => n696);
   U696 : GTECH_NOT port map( A => n4136, Z => n697);
   U697 : GTECH_NOT port map( A => n4396, Z => n698);
   U698 : GTECH_NOT port map( A => n4645, Z => n699);
   U699 : GTECH_NOT port map( A => n2045, Z => n700);
   U700 : GTECH_NOT port map( A => n2336, Z => n701);
   U701 : GTECH_NOT port map( A => n2754, Z => n702);
   U702 : GTECH_NOT port map( A => n2662, Z => n703);
   U703 : GTECH_NOT port map( A => n2669, Z => n704);
   U704 : GTECH_NOT port map( A => n2985, Z => n705);
   U705 : GTECH_NOT port map( A => n3058, Z => n706);
   U706 : GTECH_NOT port map( A => n2977, Z => n707);
   U707 : GTECH_NOT port map( A => n2984, Z => n708);
   U708 : GTECH_NOT port map( A => n3289, Z => n709);
   U709 : GTECH_NOT port map( A => n3351, Z => n710);
   U710 : GTECH_NOT port map( A => n3281, Z => n711);
   U711 : GTECH_NOT port map( A => n3856, Z => n712);
   U712 : GTECH_NOT port map( A => n4127, Z => n713);
   U713 : GTECH_NOT port map( A => n4387, Z => n714);
   U714 : GTECH_NOT port map( A => n4636, Z => n715);
   U715 : GTECH_NOT port map( A => n4874, Z => n716);
   U716 : GTECH_NOT port map( A => n2041, Z => n717);
   U717 : GTECH_NOT port map( A => n2329, Z => n718);
   U718 : GTECH_NOT port map( A => n2757, Z => n719);
   U719 : GTECH_NOT port map( A => n2655, Z => n720);
   U720 : GTECH_NOT port map( A => n2661, Z => n721);
   U721 : GTECH_NOT port map( A => n2978, Z => n722);
   U722 : GTECH_NOT port map( A => n3061, Z => n723);
   U723 : GTECH_NOT port map( A => n2970, Z => n724);
   U724 : GTECH_NOT port map( A => n2976, Z => n725);
   U725 : GTECH_NOT port map( A => n3282, Z => n726);
   U726 : GTECH_NOT port map( A => n3354, Z => n727);
   U727 : GTECH_NOT port map( A => n3274, Z => n728);
   U728 : GTECH_NOT port map( A => n3280, Z => n729);
   U729 : GTECH_NOT port map( A => n3575, Z => n730);
   U730 : GTECH_NOT port map( A => n3636, Z => n731);
   U731 : GTECH_NOT port map( A => n3567, Z => n732);
   U732 : GTECH_NOT port map( A => n4120, Z => n733);
   U733 : GTECH_NOT port map( A => n4380, Z => n734);
   U734 : GTECH_NOT port map( A => n4629, Z => n735);
   U735 : GTECH_NOT port map( A => n4867, Z => n736);
   U736 : GTECH_NOT port map( A => n5102, Z => n737);
   U737 : GTECH_NOT port map( A => n2039, Z => n738);
   U738 : GTECH_NOT port map( A => n2320, Z => n739);
   U739 : GTECH_NOT port map( A => n2760, Z => n740);
   U740 : GTECH_NOT port map( A => n2646, Z => n741);
   U741 : GTECH_NOT port map( A => n2653, Z => n742);
   U742 : GTECH_NOT port map( A => n2969, Z => n743);
   U743 : GTECH_NOT port map( A => n3064, Z => n744);
   U744 : GTECH_NOT port map( A => n2961, Z => n745);
   U745 : GTECH_NOT port map( A => n2968, Z => n746);
   U746 : GTECH_NOT port map( A => n3273, Z => n747);
   U747 : GTECH_NOT port map( A => n3357, Z => n748);
   U748 : GTECH_NOT port map( A => n3265, Z => n749);
   U749 : GTECH_NOT port map( A => n3272, Z => n750);
   U750 : GTECH_NOT port map( A => n3566, Z => n751);
   U751 : GTECH_NOT port map( A => n3639, Z => n752);
   U752 : GTECH_NOT port map( A => n3558, Z => n753);
   U753 : GTECH_NOT port map( A => n3565, Z => n754);
   U754 : GTECH_NOT port map( A => n3848, Z => n755);
   U755 : GTECH_NOT port map( A => n3910, Z => n756);
   U756 : GTECH_NOT port map( A => n3840, Z => n757);
   U757 : GTECH_NOT port map( A => n4371, Z => n758);
   U758 : GTECH_NOT port map( A => n4620, Z => n759);
   U759 : GTECH_NOT port map( A => n4858, Z => n760);
   U760 : GTECH_NOT port map( A => n5093, Z => n761);
   U761 : GTECH_NOT port map( A => n5309, Z => n762);
   U762 : GTECH_NOT port map( A => n2035, Z => n763);
   U763 : GTECH_NOT port map( A => n2313, Z => n764);
   U764 : GTECH_NOT port map( A => n2763, Z => n765);
   U765 : GTECH_NOT port map( A => n2639, Z => n766);
   U766 : GTECH_NOT port map( A => n2645, Z => n767);
   U767 : GTECH_NOT port map( A => n2962, Z => n768);
   U768 : GTECH_NOT port map( A => n3067, Z => n769);
   U769 : GTECH_NOT port map( A => n2954, Z => n770);
   U770 : GTECH_NOT port map( A => n2960, Z => n771);
   U771 : GTECH_NOT port map( A => n3266, Z => n772);
   U772 : GTECH_NOT port map( A => n3360, Z => n773);
   U773 : GTECH_NOT port map( A => n3258, Z => n774);
   U774 : GTECH_NOT port map( A => n3264, Z => n775);
   U775 : GTECH_NOT port map( A => n3559, Z => n776);
   U776 : GTECH_NOT port map( A => n3642, Z => n777);
   U777 : GTECH_NOT port map( A => n3551, Z => n778);
   U778 : GTECH_NOT port map( A => n3557, Z => n779);
   U779 : GTECH_NOT port map( A => n3841, Z => n780);
   U780 : GTECH_NOT port map( A => n3913, Z => n781);
   U781 : GTECH_NOT port map( A => n3833, Z => n782);
   U782 : GTECH_NOT port map( A => n3839, Z => n783);
   U783 : GTECH_NOT port map( A => n4112, Z => n784);
   U784 : GTECH_NOT port map( A => n4173, Z => n785);
   U785 : GTECH_NOT port map( A => n4104, Z => n786);
   U786 : GTECH_NOT port map( A => n4613, Z => n787);
   U787 : GTECH_NOT port map( A => n4851, Z => n788);
   U788 : GTECH_NOT port map( A => n5086, Z => n789);
   U789 : GTECH_NOT port map( A => n5302, Z => n790);
   U790 : GTECH_NOT port map( A => n5507, Z => n791);
   U791 : GTECH_NOT port map( A => n2033, Z => n792);
   U792 : GTECH_NOT port map( A => n2304, Z => n793);
   U793 : GTECH_NOT port map( A => n2766, Z => n794);
   U794 : GTECH_NOT port map( A => n2630, Z => n795);
   U795 : GTECH_NOT port map( A => n2637, Z => n796);
   U796 : GTECH_NOT port map( A => n2953, Z => n797);
   U797 : GTECH_NOT port map( A => n3070, Z => n798);
   U798 : GTECH_NOT port map( A => n2945, Z => n799);
   U799 : GTECH_NOT port map( A => n2952, Z => n800);
   U800 : GTECH_NOT port map( A => n3257, Z => n801);
   U801 : GTECH_NOT port map( A => n3363, Z => n802);
   U802 : GTECH_NOT port map( A => n3249, Z => n803);
   U803 : GTECH_NOT port map( A => n3256, Z => n804);
   U804 : GTECH_NOT port map( A => n3550, Z => n805);
   U805 : GTECH_NOT port map( A => n3645, Z => n806);
   U806 : GTECH_NOT port map( A => n3542, Z => n807);
   U807 : GTECH_NOT port map( A => n3549, Z => n808);
   U808 : GTECH_NOT port map( A => n3832, Z => n809);
   U809 : GTECH_NOT port map( A => n3916, Z => n810);
   U810 : GTECH_NOT port map( A => n3824, Z => n811);
   U811 : GTECH_NOT port map( A => n3831, Z => n812);
   U812 : GTECH_NOT port map( A => n4103, Z => n813);
   U813 : GTECH_NOT port map( A => n4176, Z => n814);
   U814 : GTECH_NOT port map( A => n4095, Z => n815);
   U815 : GTECH_NOT port map( A => n4102, Z => n816);
   U816 : GTECH_NOT port map( A => n4363, Z => n817);
   U817 : GTECH_NOT port map( A => n4425, Z => n818);
   U818 : GTECH_NOT port map( A => n4355, Z => n819);
   U819 : GTECH_NOT port map( A => n4842, Z => n820);
   U820 : GTECH_NOT port map( A => n5077, Z => n821);
   U821 : GTECH_NOT port map( A => n5293, Z => n822);
   U822 : GTECH_NOT port map( A => n5498, Z => n823);
   U823 : GTECH_NOT port map( A => n5692, Z => n824);
   U824 : GTECH_NOT port map( A => n2029, Z => n825);
   U825 : GTECH_NOT port map( A => n2297, Z => n826);
   U826 : GTECH_NOT port map( A => n2769, Z => n827);
   U827 : GTECH_NOT port map( A => n2623, Z => n828);
   U828 : GTECH_NOT port map( A => n2629, Z => n829);
   U829 : GTECH_NOT port map( A => n2946, Z => n830);
   U830 : GTECH_NOT port map( A => n3073, Z => n831);
   U831 : GTECH_NOT port map( A => n2938, Z => n832);
   U832 : GTECH_NOT port map( A => n2944, Z => n833);
   U833 : GTECH_NOT port map( A => n3250, Z => n834);
   U834 : GTECH_NOT port map( A => n3366, Z => n835);
   U835 : GTECH_NOT port map( A => n3242, Z => n836);
   U836 : GTECH_NOT port map( A => n3248, Z => n837);
   U837 : GTECH_NOT port map( A => n3543, Z => n838);
   U838 : GTECH_NOT port map( A => n3648, Z => n839);
   U839 : GTECH_NOT port map( A => n3535, Z => n840);
   U840 : GTECH_NOT port map( A => n3541, Z => n841);
   U841 : GTECH_NOT port map( A => n3825, Z => n842);
   U842 : GTECH_NOT port map( A => n3919, Z => n843);
   U843 : GTECH_NOT port map( A => n3817, Z => n844);
   U844 : GTECH_NOT port map( A => n3823, Z => n845);
   U845 : GTECH_NOT port map( A => n4096, Z => n846);
   U846 : GTECH_NOT port map( A => n4179, Z => n847);
   U847 : GTECH_NOT port map( A => n4088, Z => n848);
   U848 : GTECH_NOT port map( A => n4094, Z => n849);
   U849 : GTECH_NOT port map( A => n4356, Z => n850);
   U850 : GTECH_NOT port map( A => n4428, Z => n851);
   U851 : GTECH_NOT port map( A => n4348, Z => n852);
   U852 : GTECH_NOT port map( A => n4354, Z => n853);
   U853 : GTECH_NOT port map( A => n4605, Z => n854);
   U854 : GTECH_NOT port map( A => n4666, Z => n855);
   U855 : GTECH_NOT port map( A => n4597, Z => n856);
   U856 : GTECH_NOT port map( A => n5070, Z => n857);
   U857 : GTECH_NOT port map( A => n5286, Z => n858);
   U858 : GTECH_NOT port map( A => n5491, Z => n859);
   U859 : GTECH_NOT port map( A => n5685, Z => n860);
   U860 : GTECH_NOT port map( A => n5868, Z => n861);
   U861 : GTECH_NOT port map( A => n2023, Z => n862);
   U862 : GTECH_NOT port map( A => n2281, Z => n863);
   U863 : GTECH_NOT port map( A => n2775, Z => n864);
   U864 : GTECH_NOT port map( A => n2607, Z => n865);
   U865 : GTECH_NOT port map( A => n2772, Z => n866);
   U866 : GTECH_NOT port map( A => n2613, Z => n867);
   U867 : GTECH_NOT port map( A => n2621, Z => n868);
   U868 : GTECH_NOT port map( A => n2937, Z => n869);
   U869 : GTECH_NOT port map( A => n2930, Z => n870);
   U870 : GTECH_NOT port map( A => n3079, Z => n871);
   U871 : GTECH_NOT port map( A => n2922, Z => n872);
   U872 : GTECH_NOT port map( A => n3076, Z => n873);
   U873 : GTECH_NOT port map( A => n2928, Z => n874);
   U874 : GTECH_NOT port map( A => n2936, Z => n875);
   U875 : GTECH_NOT port map( A => n3241, Z => n876);
   U876 : GTECH_NOT port map( A => n3234, Z => n877);
   U877 : GTECH_NOT port map( A => n3372, Z => n878);
   U878 : GTECH_NOT port map( A => n3226, Z => n879);
   U879 : GTECH_NOT port map( A => n3369, Z => n880);
   U880 : GTECH_NOT port map( A => n3232, Z => n881);
   U881 : GTECH_NOT port map( A => n3240, Z => n882);
   U882 : GTECH_NOT port map( A => n3534, Z => n883);
   U883 : GTECH_NOT port map( A => n3527, Z => n884);
   U884 : GTECH_NOT port map( A => n3654, Z => n885);
   U885 : GTECH_NOT port map( A => n3519, Z => n886);
   U886 : GTECH_NOT port map( A => n3651, Z => n887);
   U887 : GTECH_NOT port map( A => n3525, Z => n888);
   U888 : GTECH_NOT port map( A => n3533, Z => n889);
   U889 : GTECH_NOT port map( A => n3816, Z => n890);
   U890 : GTECH_NOT port map( A => n3809, Z => n891);
   U891 : GTECH_NOT port map( A => n3925, Z => n892);
   U892 : GTECH_NOT port map( A => n3801, Z => n893);
   U893 : GTECH_NOT port map( A => n3922, Z => n894);
   U894 : GTECH_NOT port map( A => n3807, Z => n895);
   U895 : GTECH_NOT port map( A => n3815, Z => n896);
   U896 : GTECH_NOT port map( A => n4087, Z => n897);
   U897 : GTECH_NOT port map( A => n4080, Z => n898);
   U898 : GTECH_NOT port map( A => n4185, Z => n899);
   U899 : GTECH_NOT port map( A => n4072, Z => n900);
   U900 : GTECH_NOT port map( A => n4182, Z => n901);
   U901 : GTECH_NOT port map( A => n4078, Z => n902);
   U902 : GTECH_NOT port map( A => n4086, Z => n903);
   U903 : GTECH_NOT port map( A => n4347, Z => n904);
   U904 : GTECH_NOT port map( A => n4340, Z => n905);
   U905 : GTECH_NOT port map( A => n4434, Z => n906);
   U906 : GTECH_NOT port map( A => n4332, Z => n907);
   U907 : GTECH_NOT port map( A => n4431, Z => n908);
   U908 : GTECH_NOT port map( A => n4338, Z => n909);
   U909 : GTECH_NOT port map( A => n4346, Z => n910);
   U910 : GTECH_NOT port map( A => n4596, Z => n911);
   U911 : GTECH_NOT port map( A => n4589, Z => n912);
   U912 : GTECH_NOT port map( A => n4672, Z => n913);
   U913 : GTECH_NOT port map( A => n4581, Z => n914);
   U914 : GTECH_NOT port map( A => n4669, Z => n915);
   U915 : GTECH_NOT port map( A => n4587, Z => n916);
   U916 : GTECH_NOT port map( A => n4595, Z => n917);
   U917 : GTECH_NOT port map( A => n4834, Z => n918);
   U918 : GTECH_NOT port map( A => n4827, Z => n919);
   U919 : GTECH_NOT port map( A => n4907, Z => n920);
   U920 : GTECH_NOT port map( A => n4819, Z => n921);
   U921 : GTECH_NOT port map( A => n4904, Z => n922);
   U922 : GTECH_NOT port map( A => n4825, Z => n923);
   U923 : GTECH_NOT port map( A => n5062, Z => n924);
   U924 : GTECH_NOT port map( A => n5123, Z => n925);
   U925 : GTECH_NOT port map( A => n5054, Z => n926);
   U926 : GTECH_NOT port map( A => n5475, Z => n927);
   U927 : GTECH_NOT port map( A => n5669, Z => n928);
   U928 : GTECH_NOT port map( A => n5852, Z => n929);
   U929 : GTECH_NOT port map( A => n6024, Z => n930);
   U930 : GTECH_NOT port map( A => n6185, Z => n931);
   U931 : GTECH_NOT port map( A => n2017, Z => n932);
   U932 : GTECH_NOT port map( A => n2265, Z => n933);
   U933 : GTECH_NOT port map( A => n2781, Z => n934);
   U934 : GTECH_NOT port map( A => n2591, Z => n935);
   U935 : GTECH_NOT port map( A => n2778, Z => n936);
   U936 : GTECH_NOT port map( A => n2597, Z => n937);
   U937 : GTECH_NOT port map( A => n2605, Z => n938);
   U938 : GTECH_NOT port map( A => n2921, Z => n939);
   U939 : GTECH_NOT port map( A => n2914, Z => n940);
   U940 : GTECH_NOT port map( A => n3085, Z => n941);
   U941 : GTECH_NOT port map( A => n2906, Z => n942);
   U942 : GTECH_NOT port map( A => n3082, Z => n943);
   U943 : GTECH_NOT port map( A => n2912, Z => n944);
   U944 : GTECH_NOT port map( A => n2920, Z => n945);
   U945 : GTECH_NOT port map( A => n3225, Z => n946);
   U946 : GTECH_NOT port map( A => n3218, Z => n947);
   U947 : GTECH_NOT port map( A => n3378, Z => n948);
   U948 : GTECH_NOT port map( A => n3210, Z => n949);
   U949 : GTECH_NOT port map( A => n3375, Z => n950);
   U950 : GTECH_NOT port map( A => n3216, Z => n951);
   U951 : GTECH_NOT port map( A => n3224, Z => n952);
   U952 : GTECH_NOT port map( A => n3518, Z => n953);
   U953 : GTECH_NOT port map( A => n3511, Z => n954);
   U954 : GTECH_NOT port map( A => n3660, Z => n955);
   U955 : GTECH_NOT port map( A => n3503, Z => n956);
   U956 : GTECH_NOT port map( A => n3657, Z => n957);
   U957 : GTECH_NOT port map( A => n3509, Z => n958);
   U958 : GTECH_NOT port map( A => n3517, Z => n959);
   U959 : GTECH_NOT port map( A => n3800, Z => n960);
   U960 : GTECH_NOT port map( A => n3793, Z => n961);
   U961 : GTECH_NOT port map( A => n3931, Z => n962);
   U962 : GTECH_NOT port map( A => n3785, Z => n963);
   U963 : GTECH_NOT port map( A => n3928, Z => n964);
   U964 : GTECH_NOT port map( A => n3791, Z => n965);
   U965 : GTECH_NOT port map( A => n3799, Z => n966);
   U966 : GTECH_NOT port map( A => n4071, Z => n967);
   U967 : GTECH_NOT port map( A => n4064, Z => n968);
   U968 : GTECH_NOT port map( A => n4191, Z => n969);
   U969 : GTECH_NOT port map( A => n4056, Z => n970);
   U970 : GTECH_NOT port map( A => n4188, Z => n971);
   U971 : GTECH_NOT port map( A => n4062, Z => n972);
   U972 : GTECH_NOT port map( A => n4070, Z => n973);
   U973 : GTECH_NOT port map( A => n4331, Z => n974);
   U974 : GTECH_NOT port map( A => n4324, Z => n975);
   U975 : GTECH_NOT port map( A => n4440, Z => n976);
   U976 : GTECH_NOT port map( A => n4316, Z => n977);
   U977 : GTECH_NOT port map( A => n4437, Z => n978);
   U978 : GTECH_NOT port map( A => n4322, Z => n979);
   U979 : GTECH_NOT port map( A => n4330, Z => n980);
   U980 : GTECH_NOT port map( A => n4580, Z => n981);
   U981 : GTECH_NOT port map( A => n4573, Z => n982);
   U982 : GTECH_NOT port map( A => n4678, Z => n983);
   U983 : GTECH_NOT port map( A => n4565, Z => n984);
   U984 : GTECH_NOT port map( A => n4675, Z => n985);
   U985 : GTECH_NOT port map( A => n4571, Z => n986);
   U986 : GTECH_NOT port map( A => n4579, Z => n987);
   U987 : GTECH_NOT port map( A => n4818, Z => n988);
   U988 : GTECH_NOT port map( A => n4811, Z => n989);
   U989 : GTECH_NOT port map( A => n4913, Z => n990);
   U990 : GTECH_NOT port map( A => n4803, Z => n991);
   U991 : GTECH_NOT port map( A => n4910, Z => n992);
   U992 : GTECH_NOT port map( A => n4809, Z => n993);
   U993 : GTECH_NOT port map( A => n4817, Z => n994);
   U994 : GTECH_NOT port map( A => n5053, Z => n995);
   U995 : GTECH_NOT port map( A => n5046, Z => n996);
   U996 : GTECH_NOT port map( A => n5129, Z => n997);
   U997 : GTECH_NOT port map( A => n5038, Z => n998);
   U998 : GTECH_NOT port map( A => n5126, Z => n999);
   U999 : GTECH_NOT port map( A => n5044, Z => n1000);
   U1000 : GTECH_NOT port map( A => n5052, Z => n1001);
   U1001 : GTECH_NOT port map( A => n5269, Z => n1002);
   U1002 : GTECH_NOT port map( A => n5262, Z => n1003);
   U1003 : GTECH_NOT port map( A => n5334, Z => n1004);
   U1004 : GTECH_NOT port map( A => n5254, Z => n1005);
   U1005 : GTECH_NOT port map( A => n5331, Z => n1006);
   U1006 : GTECH_NOT port map( A => n5260, Z => n1007);
   U1007 : GTECH_NOT port map( A => n5467, Z => n1008);
   U1008 : GTECH_NOT port map( A => n5528, Z => n1009);
   U1009 : GTECH_NOT port map( A => n5459, Z => n1010);
   U1010 : GTECH_NOT port map( A => n5836, Z => n1011);
   U1011 : GTECH_NOT port map( A => n6008, Z => n1012);
   U1012 : GTECH_NOT port map( A => n6169, Z => n1013);
   U1013 : GTECH_NOT port map( A => n6319, Z => n1014);
   U1014 : GTECH_NOT port map( A => n2015, Z => n1015);
   U1015 : GTECH_NOT port map( A => n2256, Z => n1016);
   U1016 : GTECH_NOT port map( A => n2784, Z => n1017);
   U1017 : GTECH_NOT port map( A => n2582, Z => n1018);
   U1018 : GTECH_NOT port map( A => n2589, Z => n1019);
   U1019 : GTECH_NOT port map( A => n2905, Z => n1020);
   U1020 : GTECH_NOT port map( A => n3088, Z => n1021);
   U1021 : GTECH_NOT port map( A => n2897, Z => n1022);
   U1022 : GTECH_NOT port map( A => n2904, Z => n1023);
   U1023 : GTECH_NOT port map( A => n3209, Z => n1024);
   U1024 : GTECH_NOT port map( A => n3381, Z => n1025);
   U1025 : GTECH_NOT port map( A => n3201, Z => n1026);
   U1026 : GTECH_NOT port map( A => n3208, Z => n1027);
   U1027 : GTECH_NOT port map( A => n3502, Z => n1028);
   U1028 : GTECH_NOT port map( A => n3663, Z => n1029);
   U1029 : GTECH_NOT port map( A => n3494, Z => n1030);
   U1030 : GTECH_NOT port map( A => n3501, Z => n1031);
   U1031 : GTECH_NOT port map( A => n3784, Z => n1032);
   U1032 : GTECH_NOT port map( A => n3934, Z => n1033);
   U1033 : GTECH_NOT port map( A => n3776, Z => n1034);
   U1034 : GTECH_NOT port map( A => n3783, Z => n1035);
   U1035 : GTECH_NOT port map( A => n4055, Z => n1036);
   U1036 : GTECH_NOT port map( A => n4194, Z => n1037);
   U1037 : GTECH_NOT port map( A => n4047, Z => n1038);
   U1038 : GTECH_NOT port map( A => n4054, Z => n1039);
   U1039 : GTECH_NOT port map( A => n4315, Z => n1040);
   U1040 : GTECH_NOT port map( A => n4443, Z => n1041);
   U1041 : GTECH_NOT port map( A => n4307, Z => n1042);
   U1042 : GTECH_NOT port map( A => n4314, Z => n1043);
   U1043 : GTECH_NOT port map( A => n4564, Z => n1044);
   U1044 : GTECH_NOT port map( A => n4681, Z => n1045);
   U1045 : GTECH_NOT port map( A => n4556, Z => n1046);
   U1046 : GTECH_NOT port map( A => n4563, Z => n1047);
   U1047 : GTECH_NOT port map( A => n4802, Z => n1048);
   U1048 : GTECH_NOT port map( A => n4916, Z => n1049);
   U1049 : GTECH_NOT port map( A => n4794, Z => n1050);
   U1050 : GTECH_NOT port map( A => n4801, Z => n1051);
   U1051 : GTECH_NOT port map( A => n5037, Z => n1052);
   U1052 : GTECH_NOT port map( A => n5132, Z => n1053);
   U1053 : GTECH_NOT port map( A => n5029, Z => n1054);
   U1054 : GTECH_NOT port map( A => n5036, Z => n1055);
   U1055 : GTECH_NOT port map( A => n5253, Z => n1056);
   U1056 : GTECH_NOT port map( A => n5337, Z => n1057);
   U1057 : GTECH_NOT port map( A => n5245, Z => n1058);
   U1058 : GTECH_NOT port map( A => n5252, Z => n1059);
   U1059 : GTECH_NOT port map( A => n5458, Z => n1060);
   U1060 : GTECH_NOT port map( A => n5531, Z => n1061);
   U1061 : GTECH_NOT port map( A => n5450, Z => n1062);
   U1062 : GTECH_NOT port map( A => n5457, Z => n1063);
   U1063 : GTECH_NOT port map( A => n5652, Z => n1064);
   U1064 : GTECH_NOT port map( A => n5714, Z => n1065);
   U1065 : GTECH_NOT port map( A => n5644, Z => n1066);
   U1066 : GTECH_NOT port map( A => n5999, Z => n1067);
   U1067 : GTECH_NOT port map( A => n6160, Z => n1068);
   U1068 : GTECH_NOT port map( A => n6310, Z => n1069);
   U1069 : GTECH_NOT port map( A => n6449, Z => n1070);
   U1070 : GTECH_NOT port map( A => n2009, Z => n1071);
   U1071 : GTECH_NOT port map( A => n2240, Z => n1072);
   U1072 : GTECH_NOT port map( A => n2790, Z => n1073);
   U1073 : GTECH_NOT port map( A => n2566, Z => n1074);
   U1074 : GTECH_NOT port map( A => n2787, Z => n1075);
   U1075 : GTECH_NOT port map( A => n2573, Z => n1076);
   U1076 : GTECH_NOT port map( A => n2581, Z => n1077);
   U1077 : GTECH_NOT port map( A => n2898, Z => n1078);
   U1078 : GTECH_NOT port map( A => n2889, Z => n1079);
   U1079 : GTECH_NOT port map( A => n3094, Z => n1080);
   U1080 : GTECH_NOT port map( A => n2881, Z => n1081);
   U1081 : GTECH_NOT port map( A => n3091, Z => n1082);
   U1082 : GTECH_NOT port map( A => n2888, Z => n1083);
   U1083 : GTECH_NOT port map( A => n2896, Z => n1084);
   U1084 : GTECH_NOT port map( A => n3202, Z => n1085);
   U1085 : GTECH_NOT port map( A => n3193, Z => n1086);
   U1086 : GTECH_NOT port map( A => n3387, Z => n1087);
   U1087 : GTECH_NOT port map( A => n3185, Z => n1088);
   U1088 : GTECH_NOT port map( A => n3384, Z => n1089);
   U1089 : GTECH_NOT port map( A => n3192, Z => n1090);
   U1090 : GTECH_NOT port map( A => n3200, Z => n1091);
   U1091 : GTECH_NOT port map( A => n3495, Z => n1092);
   U1092 : GTECH_NOT port map( A => n3486, Z => n1093);
   U1093 : GTECH_NOT port map( A => n3669, Z => n1094);
   U1094 : GTECH_NOT port map( A => n3478, Z => n1095);
   U1095 : GTECH_NOT port map( A => n3666, Z => n1096);
   U1096 : GTECH_NOT port map( A => n3485, Z => n1097);
   U1097 : GTECH_NOT port map( A => n3493, Z => n1098);
   U1098 : GTECH_NOT port map( A => n3777, Z => n1099);
   U1099 : GTECH_NOT port map( A => n3768, Z => n1100);
   U1100 : GTECH_NOT port map( A => n3940, Z => n1101);
   U1101 : GTECH_NOT port map( A => n3760, Z => n1102);
   U1102 : GTECH_NOT port map( A => n3937, Z => n1103);
   U1103 : GTECH_NOT port map( A => n3767, Z => n1104);
   U1104 : GTECH_NOT port map( A => n3775, Z => n1105);
   U1105 : GTECH_NOT port map( A => n4048, Z => n1106);
   U1106 : GTECH_NOT port map( A => n4039, Z => n1107);
   U1107 : GTECH_NOT port map( A => n4200, Z => n1108);
   U1108 : GTECH_NOT port map( A => n4031, Z => n1109);
   U1109 : GTECH_NOT port map( A => n4197, Z => n1110);
   U1110 : GTECH_NOT port map( A => n4038, Z => n1111);
   U1111 : GTECH_NOT port map( A => n4046, Z => n1112);
   U1112 : GTECH_NOT port map( A => n4308, Z => n1113);
   U1113 : GTECH_NOT port map( A => n4299, Z => n1114);
   U1114 : GTECH_NOT port map( A => n4449, Z => n1115);
   U1115 : GTECH_NOT port map( A => n4291, Z => n1116);
   U1116 : GTECH_NOT port map( A => n4446, Z => n1117);
   U1117 : GTECH_NOT port map( A => n4298, Z => n1118);
   U1118 : GTECH_NOT port map( A => n4306, Z => n1119);
   U1119 : GTECH_NOT port map( A => n4557, Z => n1120);
   U1120 : GTECH_NOT port map( A => n4548, Z => n1121);
   U1121 : GTECH_NOT port map( A => n4687, Z => n1122);
   U1122 : GTECH_NOT port map( A => n4540, Z => n1123);
   U1123 : GTECH_NOT port map( A => n4684, Z => n1124);
   U1124 : GTECH_NOT port map( A => n4547, Z => n1125);
   U1125 : GTECH_NOT port map( A => n4555, Z => n1126);
   U1126 : GTECH_NOT port map( A => n4795, Z => n1127);
   U1127 : GTECH_NOT port map( A => n4786, Z => n1128);
   U1128 : GTECH_NOT port map( A => n4922, Z => n1129);
   U1129 : GTECH_NOT port map( A => n4778, Z => n1130);
   U1130 : GTECH_NOT port map( A => n4919, Z => n1131);
   U1131 : GTECH_NOT port map( A => n4785, Z => n1132);
   U1132 : GTECH_NOT port map( A => n4793, Z => n1133);
   U1133 : GTECH_NOT port map( A => n5030, Z => n1134);
   U1134 : GTECH_NOT port map( A => n5021, Z => n1135);
   U1135 : GTECH_NOT port map( A => n5138, Z => n1136);
   U1136 : GTECH_NOT port map( A => n5013, Z => n1137);
   U1137 : GTECH_NOT port map( A => n5135, Z => n1138);
   U1138 : GTECH_NOT port map( A => n5020, Z => n1139);
   U1139 : GTECH_NOT port map( A => n5028, Z => n1140);
   U1140 : GTECH_NOT port map( A => n5246, Z => n1141);
   U1141 : GTECH_NOT port map( A => n5237, Z => n1142);
   U1142 : GTECH_NOT port map( A => n5343, Z => n1143);
   U1143 : GTECH_NOT port map( A => n5229, Z => n1144);
   U1144 : GTECH_NOT port map( A => n5340, Z => n1145);
   U1145 : GTECH_NOT port map( A => n5236, Z => n1146);
   U1146 : GTECH_NOT port map( A => n5244, Z => n1147);
   U1147 : GTECH_NOT port map( A => n5451, Z => n1148);
   U1148 : GTECH_NOT port map( A => n5442, Z => n1149);
   U1149 : GTECH_NOT port map( A => n5537, Z => n1150);
   U1150 : GTECH_NOT port map( A => n5434, Z => n1151);
   U1151 : GTECH_NOT port map( A => n5534, Z => n1152);
   U1152 : GTECH_NOT port map( A => n5441, Z => n1153);
   U1153 : GTECH_NOT port map( A => n5449, Z => n1154);
   U1154 : GTECH_NOT port map( A => n5645, Z => n1155);
   U1155 : GTECH_NOT port map( A => n5636, Z => n1156);
   U1156 : GTECH_NOT port map( A => n5720, Z => n1157);
   U1157 : GTECH_NOT port map( A => n5628, Z => n1158);
   U1158 : GTECH_NOT port map( A => n5717, Z => n1159);
   U1159 : GTECH_NOT port map( A => n5635, Z => n1160);
   U1160 : GTECH_NOT port map( A => n5643, Z => n1161);
   U1161 : GTECH_NOT port map( A => n5828, Z => n1162);
   U1162 : GTECH_NOT port map( A => n5819, Z => n1163);
   U1163 : GTECH_NOT port map( A => n5892, Z => n1164);
   U1164 : GTECH_NOT port map( A => n5811, Z => n1165);
   U1165 : GTECH_NOT port map( A => n5889, Z => n1166);
   U1166 : GTECH_NOT port map( A => n5818, Z => n1167);
   U1167 : GTECH_NOT port map( A => n5991, Z => n1168);
   U1168 : GTECH_NOT port map( A => n6053, Z => n1169);
   U1169 : GTECH_NOT port map( A => n5983, Z => n1170);
   U1170 : GTECH_NOT port map( A => n6294, Z => n1171);
   U1171 : GTECH_NOT port map( A => n6433, Z => n1172);
   U1172 : GTECH_NOT port map( A => n6561, Z => n1173);
   U1173 : GTECH_NOT port map( A => n6668, Z => n1174);
   U1174 : GTECH_NOT port map( A => n2003, Z => n1175);
   U1175 : GTECH_NOT port map( A => n2224, Z => n1176);
   U1176 : GTECH_NOT port map( A => n2796, Z => n1177);
   U1177 : GTECH_NOT port map( A => n2550, Z => n1178);
   U1178 : GTECH_NOT port map( A => n2793, Z => n1179);
   U1179 : GTECH_NOT port map( A => n2557, Z => n1180);
   U1180 : GTECH_NOT port map( A => n2565, Z => n1181);
   U1181 : GTECH_NOT port map( A => n2882, Z => n1182);
   U1182 : GTECH_NOT port map( A => n2873, Z => n1183);
   U1183 : GTECH_NOT port map( A => n3100, Z => n1184);
   U1184 : GTECH_NOT port map( A => n2865, Z => n1185);
   U1185 : GTECH_NOT port map( A => n3097, Z => n1186);
   U1186 : GTECH_NOT port map( A => n2872, Z => n1187);
   U1187 : GTECH_NOT port map( A => n2880, Z => n1188);
   U1188 : GTECH_NOT port map( A => n3186, Z => n1189);
   U1189 : GTECH_NOT port map( A => n3177, Z => n1190);
   U1190 : GTECH_NOT port map( A => n3393, Z => n1191);
   U1191 : GTECH_NOT port map( A => n3169, Z => n1192);
   U1192 : GTECH_NOT port map( A => n3390, Z => n1193);
   U1193 : GTECH_NOT port map( A => n3176, Z => n1194);
   U1194 : GTECH_NOT port map( A => n3184, Z => n1195);
   U1195 : GTECH_NOT port map( A => n3479, Z => n1196);
   U1196 : GTECH_NOT port map( A => n3470, Z => n1197);
   U1197 : GTECH_NOT port map( A => n3675, Z => n1198);
   U1198 : GTECH_NOT port map( A => n3462, Z => n1199);
   U1199 : GTECH_NOT port map( A => n3672, Z => n1200);
   U1200 : GTECH_NOT port map( A => n3469, Z => n1201);
   U1201 : GTECH_NOT port map( A => n3477, Z => n1202);
   U1202 : GTECH_NOT port map( A => n3761, Z => n1203);
   U1203 : GTECH_NOT port map( A => n3752, Z => n1204);
   U1204 : GTECH_NOT port map( A => n3946, Z => n1205);
   U1205 : GTECH_NOT port map( A => n3744, Z => n1206);
   U1206 : GTECH_NOT port map( A => n3943, Z => n1207);
   U1207 : GTECH_NOT port map( A => n3751, Z => n1208);
   U1208 : GTECH_NOT port map( A => n3759, Z => n1209);
   U1209 : GTECH_NOT port map( A => n4032, Z => n1210);
   U1210 : GTECH_NOT port map( A => n4023, Z => n1211);
   U1211 : GTECH_NOT port map( A => n4206, Z => n1212);
   U1212 : GTECH_NOT port map( A => n4015, Z => n1213);
   U1213 : GTECH_NOT port map( A => n4203, Z => n1214);
   U1214 : GTECH_NOT port map( A => n4022, Z => n1215);
   U1215 : GTECH_NOT port map( A => n4030, Z => n1216);
   U1216 : GTECH_NOT port map( A => n4292, Z => n1217);
   U1217 : GTECH_NOT port map( A => n4283, Z => n1218);
   U1218 : GTECH_NOT port map( A => n4455, Z => n1219);
   U1219 : GTECH_NOT port map( A => n4275, Z => n1220);
   U1220 : GTECH_NOT port map( A => n4452, Z => n1221);
   U1221 : GTECH_NOT port map( A => n4282, Z => n1222);
   U1222 : GTECH_NOT port map( A => n4290, Z => n1223);
   U1223 : GTECH_NOT port map( A => n4541, Z => n1224);
   U1224 : GTECH_NOT port map( A => n4532, Z => n1225);
   U1225 : GTECH_NOT port map( A => n4693, Z => n1226);
   U1226 : GTECH_NOT port map( A => n4524, Z => n1227);
   U1227 : GTECH_NOT port map( A => n4690, Z => n1228);
   U1228 : GTECH_NOT port map( A => n4531, Z => n1229);
   U1229 : GTECH_NOT port map( A => n4539, Z => n1230);
   U1230 : GTECH_NOT port map( A => n4779, Z => n1231);
   U1231 : GTECH_NOT port map( A => n4770, Z => n1232);
   U1232 : GTECH_NOT port map( A => n4928, Z => n1233);
   U1233 : GTECH_NOT port map( A => n4762, Z => n1234);
   U1234 : GTECH_NOT port map( A => n4925, Z => n1235);
   U1235 : GTECH_NOT port map( A => n4769, Z => n1236);
   U1236 : GTECH_NOT port map( A => n4777, Z => n1237);
   U1237 : GTECH_NOT port map( A => n5014, Z => n1238);
   U1238 : GTECH_NOT port map( A => n5005, Z => n1239);
   U1239 : GTECH_NOT port map( A => n5144, Z => n1240);
   U1240 : GTECH_NOT port map( A => n4997, Z => n1241);
   U1241 : GTECH_NOT port map( A => n5141, Z => n1242);
   U1242 : GTECH_NOT port map( A => n5004, Z => n1243);
   U1243 : GTECH_NOT port map( A => n5012, Z => n1244);
   U1244 : GTECH_NOT port map( A => n5230, Z => n1245);
   U1245 : GTECH_NOT port map( A => n5221, Z => n1246);
   U1246 : GTECH_NOT port map( A => n5349, Z => n1247);
   U1247 : GTECH_NOT port map( A => n5213, Z => n1248);
   U1248 : GTECH_NOT port map( A => n5346, Z => n1249);
   U1249 : GTECH_NOT port map( A => n5220, Z => n1250);
   U1250 : GTECH_NOT port map( A => n5228, Z => n1251);
   U1251 : GTECH_NOT port map( A => n5435, Z => n1252);
   U1252 : GTECH_NOT port map( A => n5426, Z => n1253);
   U1253 : GTECH_NOT port map( A => n5543, Z => n1254);
   U1254 : GTECH_NOT port map( A => n5418, Z => n1255);
   U1255 : GTECH_NOT port map( A => n5540, Z => n1256);
   U1256 : GTECH_NOT port map( A => n5425, Z => n1257);
   U1257 : GTECH_NOT port map( A => n5433, Z => n1258);
   U1258 : GTECH_NOT port map( A => n5629, Z => n1259);
   U1259 : GTECH_NOT port map( A => n5620, Z => n1260);
   U1260 : GTECH_NOT port map( A => n5726, Z => n1261);
   U1261 : GTECH_NOT port map( A => n5612, Z => n1262);
   U1262 : GTECH_NOT port map( A => n5723, Z => n1263);
   U1263 : GTECH_NOT port map( A => n5619, Z => n1264);
   U1264 : GTECH_NOT port map( A => n5627, Z => n1265);
   U1265 : GTECH_NOT port map( A => n5812, Z => n1266);
   U1266 : GTECH_NOT port map( A => n5803, Z => n1267);
   U1267 : GTECH_NOT port map( A => n5898, Z => n1268);
   U1268 : GTECH_NOT port map( A => n5795, Z => n1269);
   U1269 : GTECH_NOT port map( A => n5895, Z => n1270);
   U1270 : GTECH_NOT port map( A => n5802, Z => n1271);
   U1271 : GTECH_NOT port map( A => n5810, Z => n1272);
   U1272 : GTECH_NOT port map( A => n5984, Z => n1273);
   U1273 : GTECH_NOT port map( A => n5975, Z => n1274);
   U1274 : GTECH_NOT port map( A => n6059, Z => n1275);
   U1275 : GTECH_NOT port map( A => n5967, Z => n1276);
   U1276 : GTECH_NOT port map( A => n6056, Z => n1277);
   U1277 : GTECH_NOT port map( A => n5974, Z => n1278);
   U1278 : GTECH_NOT port map( A => n5982, Z => n1279);
   U1279 : GTECH_NOT port map( A => n6145, Z => n1280);
   U1280 : GTECH_NOT port map( A => n6136, Z => n1281);
   U1281 : GTECH_NOT port map( A => n6209, Z => n1282);
   U1282 : GTECH_NOT port map( A => n6128, Z => n1283);
   U1283 : GTECH_NOT port map( A => n6206, Z => n1284);
   U1284 : GTECH_NOT port map( A => n6135, Z => n1285);
   U1285 : GTECH_NOT port map( A => n6286, Z => n1286);
   U1286 : GTECH_NOT port map( A => n6348, Z => n1287);
   U1287 : GTECH_NOT port map( A => n6278, Z => n1288);
   U1288 : GTECH_NOT port map( A => n6545, Z => n1289);
   U1289 : GTECH_NOT port map( A => n6652, Z => n1290);
   U1290 : GTECH_NOT port map( A => n6749, Z => n1291);
   U1291 : GTECH_NOT port map( A => n6838, Z => n1292);
   U1292 : GTECH_NOT port map( A => n1997, Z => n1293);
   U1293 : GTECH_NOT port map( A => n2208, Z => n1294);
   U1294 : GTECH_NOT port map( A => n2802, Z => n1295);
   U1295 : GTECH_NOT port map( A => n2534, Z => n1296);
   U1296 : GTECH_NOT port map( A => n2799, Z => n1297);
   U1297 : GTECH_NOT port map( A => n2541, Z => n1298);
   U1298 : GTECH_NOT port map( A => n2549, Z => n1299);
   U1299 : GTECH_NOT port map( A => n2866, Z => n1300);
   U1300 : GTECH_NOT port map( A => n2857, Z => n1301);
   U1301 : GTECH_NOT port map( A => n3106, Z => n1302);
   U1302 : GTECH_NOT port map( A => n2849, Z => n1303);
   U1303 : GTECH_NOT port map( A => n3103, Z => n1304);
   U1304 : GTECH_NOT port map( A => n2856, Z => n1305);
   U1305 : GTECH_NOT port map( A => n2864, Z => n1306);
   U1306 : GTECH_NOT port map( A => n3170, Z => n1307);
   U1307 : GTECH_NOT port map( A => n3161, Z => n1308);
   U1308 : GTECH_NOT port map( A => n3399, Z => n1309);
   U1309 : GTECH_NOT port map( A => n3153, Z => n1310);
   U1310 : GTECH_NOT port map( A => n3396, Z => n1311);
   U1311 : GTECH_NOT port map( A => n3160, Z => n1312);
   U1312 : GTECH_NOT port map( A => n3168, Z => n1313);
   U1313 : GTECH_NOT port map( A => n3463, Z => n1314);
   U1314 : GTECH_NOT port map( A => n3454, Z => n1315);
   U1315 : GTECH_NOT port map( A => n3681, Z => n1316);
   U1316 : GTECH_NOT port map( A => n3446, Z => n1317);
   U1317 : GTECH_NOT port map( A => n3678, Z => n1318);
   U1318 : GTECH_NOT port map( A => n3453, Z => n1319);
   U1319 : GTECH_NOT port map( A => n3461, Z => n1320);
   U1320 : GTECH_NOT port map( A => n3745, Z => n1321);
   U1321 : GTECH_NOT port map( A => n3736, Z => n1322);
   U1322 : GTECH_NOT port map( A => n3952, Z => n1323);
   U1323 : GTECH_NOT port map( A => n3728, Z => n1324);
   U1324 : GTECH_NOT port map( A => n3949, Z => n1325);
   U1325 : GTECH_NOT port map( A => n3735, Z => n1326);
   U1326 : GTECH_NOT port map( A => n3743, Z => n1327);
   U1327 : GTECH_NOT port map( A => n4016, Z => n1328);
   U1328 : GTECH_NOT port map( A => n4007, Z => n1329);
   U1329 : GTECH_NOT port map( A => n4212, Z => n1330);
   U1330 : GTECH_NOT port map( A => n3999, Z => n1331);
   U1331 : GTECH_NOT port map( A => n4209, Z => n1332);
   U1332 : GTECH_NOT port map( A => n4006, Z => n1333);
   U1333 : GTECH_NOT port map( A => n4014, Z => n1334);
   U1334 : GTECH_NOT port map( A => n4276, Z => n1335);
   U1335 : GTECH_NOT port map( A => n4267, Z => n1336);
   U1336 : GTECH_NOT port map( A => n4461, Z => n1337);
   U1337 : GTECH_NOT port map( A => n4259, Z => n1338);
   U1338 : GTECH_NOT port map( A => n4458, Z => n1339);
   U1339 : GTECH_NOT port map( A => n4266, Z => n1340);
   U1340 : GTECH_NOT port map( A => n4274, Z => n1341);
   U1341 : GTECH_NOT port map( A => n4525, Z => n1342);
   U1342 : GTECH_NOT port map( A => n4516, Z => n1343);
   U1343 : GTECH_NOT port map( A => n4699, Z => n1344);
   U1344 : GTECH_NOT port map( A => n4508, Z => n1345);
   U1345 : GTECH_NOT port map( A => n4696, Z => n1346);
   U1346 : GTECH_NOT port map( A => n4515, Z => n1347);
   U1347 : GTECH_NOT port map( A => n4523, Z => n1348);
   U1348 : GTECH_NOT port map( A => n4763, Z => n1349);
   U1349 : GTECH_NOT port map( A => n4754, Z => n1350);
   U1350 : GTECH_NOT port map( A => n4934, Z => n1351);
   U1351 : GTECH_NOT port map( A => n4746, Z => n1352);
   U1352 : GTECH_NOT port map( A => n4931, Z => n1353);
   U1353 : GTECH_NOT port map( A => n4753, Z => n1354);
   U1354 : GTECH_NOT port map( A => n4761, Z => n1355);
   U1355 : GTECH_NOT port map( A => n4998, Z => n1356);
   U1356 : GTECH_NOT port map( A => n4989, Z => n1357);
   U1357 : GTECH_NOT port map( A => n5150, Z => n1358);
   U1358 : GTECH_NOT port map( A => n4981, Z => n1359);
   U1359 : GTECH_NOT port map( A => n5147, Z => n1360);
   U1360 : GTECH_NOT port map( A => n4988, Z => n1361);
   U1361 : GTECH_NOT port map( A => n4996, Z => n1362);
   U1362 : GTECH_NOT port map( A => n5214, Z => n1363);
   U1363 : GTECH_NOT port map( A => n5205, Z => n1364);
   U1364 : GTECH_NOT port map( A => n5355, Z => n1365);
   U1365 : GTECH_NOT port map( A => n5197, Z => n1366);
   U1366 : GTECH_NOT port map( A => n5352, Z => n1367);
   U1367 : GTECH_NOT port map( A => n5204, Z => n1368);
   U1368 : GTECH_NOT port map( A => n5212, Z => n1369);
   U1369 : GTECH_NOT port map( A => n5419, Z => n1370);
   U1370 : GTECH_NOT port map( A => n5410, Z => n1371);
   U1371 : GTECH_NOT port map( A => n5549, Z => n1372);
   U1372 : GTECH_NOT port map( A => n5402, Z => n1373);
   U1373 : GTECH_NOT port map( A => n5546, Z => n1374);
   U1374 : GTECH_NOT port map( A => n5409, Z => n1375);
   U1375 : GTECH_NOT port map( A => n5417, Z => n1376);
   U1376 : GTECH_NOT port map( A => n5613, Z => n1377);
   U1377 : GTECH_NOT port map( A => n5604, Z => n1378);
   U1378 : GTECH_NOT port map( A => n5732, Z => n1379);
   U1379 : GTECH_NOT port map( A => n5596, Z => n1380);
   U1380 : GTECH_NOT port map( A => n5729, Z => n1381);
   U1381 : GTECH_NOT port map( A => n5603, Z => n1382);
   U1382 : GTECH_NOT port map( A => n5611, Z => n1383);
   U1383 : GTECH_NOT port map( A => n5796, Z => n1384);
   U1384 : GTECH_NOT port map( A => n5787, Z => n1385);
   U1385 : GTECH_NOT port map( A => n5904, Z => n1386);
   U1386 : GTECH_NOT port map( A => n5779, Z => n1387);
   U1387 : GTECH_NOT port map( A => n5901, Z => n1388);
   U1388 : GTECH_NOT port map( A => n5786, Z => n1389);
   U1389 : GTECH_NOT port map( A => n5794, Z => n1390);
   U1390 : GTECH_NOT port map( A => n5968, Z => n1391);
   U1391 : GTECH_NOT port map( A => n5959, Z => n1392);
   U1392 : GTECH_NOT port map( A => n6065, Z => n1393);
   U1393 : GTECH_NOT port map( A => n5951, Z => n1394);
   U1394 : GTECH_NOT port map( A => n6062, Z => n1395);
   U1395 : GTECH_NOT port map( A => n5958, Z => n1396);
   U1396 : GTECH_NOT port map( A => n5966, Z => n1397);
   U1397 : GTECH_NOT port map( A => n6129, Z => n1398);
   U1398 : GTECH_NOT port map( A => n6120, Z => n1399);
   U1399 : GTECH_NOT port map( A => n6215, Z => n1400);
   U1400 : GTECH_NOT port map( A => n6112, Z => n1401);
   U1401 : GTECH_NOT port map( A => n6212, Z => n1402);
   U1402 : GTECH_NOT port map( A => n6119, Z => n1403);
   U1403 : GTECH_NOT port map( A => n6127, Z => n1404);
   U1404 : GTECH_NOT port map( A => n6279, Z => n1405);
   U1405 : GTECH_NOT port map( A => n6270, Z => n1406);
   U1406 : GTECH_NOT port map( A => n6354, Z => n1407);
   U1407 : GTECH_NOT port map( A => n6262, Z => n1408);
   U1408 : GTECH_NOT port map( A => n6351, Z => n1409);
   U1409 : GTECH_NOT port map( A => n6269, Z => n1410);
   U1410 : GTECH_NOT port map( A => n6277, Z => n1411);
   U1411 : GTECH_NOT port map( A => n6418, Z => n1412);
   U1412 : GTECH_NOT port map( A => n6409, Z => n1413);
   U1413 : GTECH_NOT port map( A => n6482, Z => n1414);
   U1414 : GTECH_NOT port map( A => n6401, Z => n1415);
   U1415 : GTECH_NOT port map( A => n1980, Z => n1416);
   U1416 : GTECH_NOT port map( A => n6479, Z => n1417);
   U1417 : GTECH_NOT port map( A => n6408, Z => n1418);
   U1418 : GTECH_NOT port map( A => n6537, Z => n1419);
   U1419 : GTECH_NOT port map( A => n6686, Z => n1420);
   U1420 : GTECH_NOT port map( A => n6529, Z => n1421);
   U1421 : GTECH_NOT port map( A => n6636, Z => n1422);
   U1422 : GTECH_NOT port map( A => n6822, Z => n1423);
   U1423 : GTECH_NOT port map( A => n6897, Z => n1424);
   U1424 : GTECH_NOT port map( A => n6963, Z => n1425);
   U1425 : GTECH_NOT port map( A => n1924, Z => n1426);
   U1426 : GTECH_NOT port map( A => n2811, Z => n1427);
   U1427 : GTECH_NOT port map( A => n2817, Z => n1428);
   U1428 : GTECH_NOT port map( A => n2808, Z => n1429);
   U1429 : GTECH_NOT port map( A => n2517, Z => n1430);
   U1430 : GTECH_NOT port map( A => n2805, Z => n1431);
   U1431 : GTECH_NOT port map( A => n2525, Z => n1432);
   U1432 : GTECH_NOT port map( A => n2533, Z => n1433);
   U1433 : GTECH_NOT port map( A => n2850, Z => n1434);
   U1434 : GTECH_NOT port map( A => n2841, Z => n1435);
   U1435 : GTECH_NOT port map( A => n2834, Z => n1436);
   U1436 : GTECH_NOT port map( A => n3115, Z => n1437);
   U1437 : GTECH_NOT port map( A => n3121, Z => n1438);
   U1438 : GTECH_NOT port map( A => n3112, Z => n1439);
   U1439 : GTECH_NOT port map( A => n2832, Z => n1440);
   U1440 : GTECH_NOT port map( A => n3109, Z => n1441);
   U1441 : GTECH_NOT port map( A => n2840, Z => n1442);
   U1442 : GTECH_NOT port map( A => n2848, Z => n1443);
   U1443 : GTECH_NOT port map( A => n3154, Z => n1444);
   U1444 : GTECH_NOT port map( A => n3145, Z => n1445);
   U1445 : GTECH_NOT port map( A => n3138, Z => n1446);
   U1446 : GTECH_NOT port map( A => n3408, Z => n1447);
   U1447 : GTECH_NOT port map( A => n3414, Z => n1448);
   U1448 : GTECH_NOT port map( A => n3405, Z => n1449);
   U1449 : GTECH_NOT port map( A => n3136, Z => n1450);
   U1450 : GTECH_NOT port map( A => n3402, Z => n1451);
   U1451 : GTECH_NOT port map( A => n3144, Z => n1452);
   U1452 : GTECH_NOT port map( A => n3152, Z => n1453);
   U1453 : GTECH_NOT port map( A => n3447, Z => n1454);
   U1454 : GTECH_NOT port map( A => n3438, Z => n1455);
   U1455 : GTECH_NOT port map( A => n3431, Z => n1456);
   U1456 : GTECH_NOT port map( A => n3690, Z => n1457);
   U1457 : GTECH_NOT port map( A => n3696, Z => n1458);
   U1458 : GTECH_NOT port map( A => n3687, Z => n1459);
   U1459 : GTECH_NOT port map( A => n3429, Z => n1460);
   U1460 : GTECH_NOT port map( A => n3684, Z => n1461);
   U1461 : GTECH_NOT port map( A => n3437, Z => n1462);
   U1462 : GTECH_NOT port map( A => n3445, Z => n1463);
   U1463 : GTECH_NOT port map( A => n3729, Z => n1464);
   U1464 : GTECH_NOT port map( A => n3720, Z => n1465);
   U1465 : GTECH_NOT port map( A => n3713, Z => n1466);
   U1466 : GTECH_NOT port map( A => n3961, Z => n1467);
   U1467 : GTECH_NOT port map( A => n3967, Z => n1468);
   U1468 : GTECH_NOT port map( A => n3958, Z => n1469);
   U1469 : GTECH_NOT port map( A => n3711, Z => n1470);
   U1470 : GTECH_NOT port map( A => n3955, Z => n1471);
   U1471 : GTECH_NOT port map( A => n3719, Z => n1472);
   U1472 : GTECH_NOT port map( A => n3727, Z => n1473);
   U1473 : GTECH_NOT port map( A => n4000, Z => n1474);
   U1474 : GTECH_NOT port map( A => n3991, Z => n1475);
   U1475 : GTECH_NOT port map( A => n3984, Z => n1476);
   U1476 : GTECH_NOT port map( A => n4221, Z => n1477);
   U1477 : GTECH_NOT port map( A => n4227, Z => n1478);
   U1478 : GTECH_NOT port map( A => n4218, Z => n1479);
   U1479 : GTECH_NOT port map( A => n3982, Z => n1480);
   U1480 : GTECH_NOT port map( A => n4215, Z => n1481);
   U1481 : GTECH_NOT port map( A => n3990, Z => n1482);
   U1482 : GTECH_NOT port map( A => n3998, Z => n1483);
   U1483 : GTECH_NOT port map( A => n4260, Z => n1484);
   U1484 : GTECH_NOT port map( A => n4251, Z => n1485);
   U1485 : GTECH_NOT port map( A => n4244, Z => n1486);
   U1486 : GTECH_NOT port map( A => n4470, Z => n1487);
   U1487 : GTECH_NOT port map( A => n4476, Z => n1488);
   U1488 : GTECH_NOT port map( A => n4467, Z => n1489);
   U1489 : GTECH_NOT port map( A => n4242, Z => n1490);
   U1490 : GTECH_NOT port map( A => n4464, Z => n1491);
   U1491 : GTECH_NOT port map( A => n4250, Z => n1492);
   U1492 : GTECH_NOT port map( A => n4258, Z => n1493);
   U1493 : GTECH_NOT port map( A => n4509, Z => n1494);
   U1494 : GTECH_NOT port map( A => n4500, Z => n1495);
   U1495 : GTECH_NOT port map( A => n4493, Z => n1496);
   U1496 : GTECH_NOT port map( A => n4708, Z => n1497);
   U1497 : GTECH_NOT port map( A => n4714, Z => n1498);
   U1498 : GTECH_NOT port map( A => n4705, Z => n1499);
   U1499 : GTECH_NOT port map( A => n4491, Z => n1500);
   U1500 : GTECH_NOT port map( A => n4702, Z => n1501);
   U1501 : GTECH_NOT port map( A => n4499, Z => n1502);
   U1502 : GTECH_NOT port map( A => n4507, Z => n1503);
   U1503 : GTECH_NOT port map( A => n4747, Z => n1504);
   U1504 : GTECH_NOT port map( A => n4738, Z => n1505);
   U1505 : GTECH_NOT port map( A => n4731, Z => n1506);
   U1506 : GTECH_NOT port map( A => n4943, Z => n1507);
   U1507 : GTECH_NOT port map( A => n4949, Z => n1508);
   U1508 : GTECH_NOT port map( A => n4940, Z => n1509);
   U1509 : GTECH_NOT port map( A => n4729, Z => n1510);
   U1510 : GTECH_NOT port map( A => n4937, Z => n1511);
   U1511 : GTECH_NOT port map( A => n4737, Z => n1512);
   U1512 : GTECH_NOT port map( A => n4745, Z => n1513);
   U1513 : GTECH_NOT port map( A => n4982, Z => n1514);
   U1514 : GTECH_NOT port map( A => n4973, Z => n1515);
   U1515 : GTECH_NOT port map( A => n4966, Z => n1516);
   U1516 : GTECH_NOT port map( A => n5159, Z => n1517);
   U1517 : GTECH_NOT port map( A => n5165, Z => n1518);
   U1518 : GTECH_NOT port map( A => n5156, Z => n1519);
   U1519 : GTECH_NOT port map( A => n4964, Z => n1520);
   U1520 : GTECH_NOT port map( A => n5153, Z => n1521);
   U1521 : GTECH_NOT port map( A => n4972, Z => n1522);
   U1522 : GTECH_NOT port map( A => n4980, Z => n1523);
   U1523 : GTECH_NOT port map( A => n5198, Z => n1524);
   U1524 : GTECH_NOT port map( A => n5189, Z => n1525);
   U1525 : GTECH_NOT port map( A => n5182, Z => n1526);
   U1526 : GTECH_NOT port map( A => n5364, Z => n1527);
   U1527 : GTECH_NOT port map( A => n5370, Z => n1528);
   U1528 : GTECH_NOT port map( A => n5361, Z => n1529);
   U1529 : GTECH_NOT port map( A => n5180, Z => n1530);
   U1530 : GTECH_NOT port map( A => n5358, Z => n1531);
   U1531 : GTECH_NOT port map( A => n5188, Z => n1532);
   U1532 : GTECH_NOT port map( A => n5196, Z => n1533);
   U1533 : GTECH_NOT port map( A => n5403, Z => n1534);
   U1534 : GTECH_NOT port map( A => n5394, Z => n1535);
   U1535 : GTECH_NOT port map( A => n5387, Z => n1536);
   U1536 : GTECH_NOT port map( A => n5558, Z => n1537);
   U1537 : GTECH_NOT port map( A => n5564, Z => n1538);
   U1538 : GTECH_NOT port map( A => n5555, Z => n1539);
   U1539 : GTECH_NOT port map( A => n5385, Z => n1540);
   U1540 : GTECH_NOT port map( A => n5552, Z => n1541);
   U1541 : GTECH_NOT port map( A => n5393, Z => n1542);
   U1542 : GTECH_NOT port map( A => n5401, Z => n1543);
   U1543 : GTECH_NOT port map( A => n5597, Z => n1544);
   U1544 : GTECH_NOT port map( A => n5588, Z => n1545);
   U1545 : GTECH_NOT port map( A => n5581, Z => n1546);
   U1546 : GTECH_NOT port map( A => n5741, Z => n1547);
   U1547 : GTECH_NOT port map( A => n5747, Z => n1548);
   U1548 : GTECH_NOT port map( A => n5738, Z => n1549);
   U1549 : GTECH_NOT port map( A => n5579, Z => n1550);
   U1550 : GTECH_NOT port map( A => n5735, Z => n1551);
   U1551 : GTECH_NOT port map( A => n5587, Z => n1552);
   U1552 : GTECH_NOT port map( A => n5595, Z => n1553);
   U1553 : GTECH_NOT port map( A => n5780, Z => n1554);
   U1554 : GTECH_NOT port map( A => n5771, Z => n1555);
   U1555 : GTECH_NOT port map( A => n5764, Z => n1556);
   U1556 : GTECH_NOT port map( A => n5913, Z => n1557);
   U1557 : GTECH_NOT port map( A => n5919, Z => n1558);
   U1558 : GTECH_NOT port map( A => n5910, Z => n1559);
   U1559 : GTECH_NOT port map( A => n5762, Z => n1560);
   U1560 : GTECH_NOT port map( A => n5907, Z => n1561);
   U1561 : GTECH_NOT port map( A => n5770, Z => n1562);
   U1562 : GTECH_NOT port map( A => n5778, Z => n1563);
   U1563 : GTECH_NOT port map( A => n5952, Z => n1564);
   U1564 : GTECH_NOT port map( A => n5943, Z => n1565);
   U1565 : GTECH_NOT port map( A => n5936, Z => n1566);
   U1566 : GTECH_NOT port map( A => n6074, Z => n1567);
   U1567 : GTECH_NOT port map( A => n6080, Z => n1568);
   U1568 : GTECH_NOT port map( A => n6071, Z => n1569);
   U1569 : GTECH_NOT port map( A => n5934, Z => n1570);
   U1570 : GTECH_NOT port map( A => n6068, Z => n1571);
   U1571 : GTECH_NOT port map( A => n5942, Z => n1572);
   U1572 : GTECH_NOT port map( A => n5950, Z => n1573);
   U1573 : GTECH_NOT port map( A => n6113, Z => n1574);
   U1574 : GTECH_NOT port map( A => n6104, Z => n1575);
   U1575 : GTECH_NOT port map( A => n6097, Z => n1576);
   U1576 : GTECH_NOT port map( A => n6224, Z => n1577);
   U1577 : GTECH_NOT port map( A => n6230, Z => n1578);
   U1578 : GTECH_NOT port map( A => n6221, Z => n1579);
   U1579 : GTECH_NOT port map( A => n6095, Z => n1580);
   U1580 : GTECH_NOT port map( A => n6218, Z => n1581);
   U1581 : GTECH_NOT port map( A => n6103, Z => n1582);
   U1582 : GTECH_NOT port map( A => n6111, Z => n1583);
   U1583 : GTECH_NOT port map( A => n6263, Z => n1584);
   U1584 : GTECH_NOT port map( A => n6254, Z => n1585);
   U1585 : GTECH_NOT port map( A => n6247, Z => n1586);
   U1586 : GTECH_NOT port map( A => n6363, Z => n1587);
   U1587 : GTECH_NOT port map( A => n6369, Z => n1588);
   U1588 : GTECH_NOT port map( A => n6360, Z => n1589);
   U1589 : GTECH_NOT port map( A => n6245, Z => n1590);
   U1590 : GTECH_NOT port map( A => n6357, Z => n1591);
   U1591 : GTECH_NOT port map( A => n6253, Z => n1592);
   U1592 : GTECH_NOT port map( A => n6261, Z => n1593);
   U1593 : GTECH_NOT port map( A => n6402, Z => n1594);
   U1594 : GTECH_NOT port map( A => n6393, Z => n1595);
   U1595 : GTECH_NOT port map( A => n6386, Z => n1596);
   U1596 : GTECH_NOT port map( A => n6491, Z => n1597);
   U1597 : GTECH_NOT port map( A => n6497, Z => n1598);
   U1598 : GTECH_NOT port map( A => n6488, Z => n1599);
   U1599 : GTECH_NOT port map( A => n6384, Z => n1600);
   U1600 : GTECH_NOT port map( A => n6485, Z => n1601);
   U1601 : GTECH_NOT port map( A => n6392, Z => n1602);
   U1602 : GTECH_NOT port map( A => n6400, Z => n1603);
   U1603 : GTECH_NOT port map( A => n6530, Z => n1604);
   U1604 : GTECH_NOT port map( A => n6521, Z => n1605);
   U1605 : GTECH_NOT port map( A => n6514, Z => n1606);
   U1606 : GTECH_NOT port map( A => n6695, Z => n1607);
   U1607 : GTECH_NOT port map( A => n6701, Z => n1608);
   U1608 : GTECH_NOT port map( A => n2075, Z => n1609);
   U1609 : GTECH_NOT port map( A => n2079, Z => n1610);
   U1610 : GTECH_NOT port map( A => n4878, Z => n1611);
   U1611 : GTECH_NOT port map( A => n6608, Z => n1612);
   U1612 : GTECH_NOT port map( A => n2076, Z => n1613);
   U1613 : GTECH_NOT port map( A => n6615, Z => n1614);
   U1614 : GTECH_NOT port map( A => n6619, Z => n1615);
   U1615 : GTECH_NOT port map( A => n6623, Z => n1616);
   U1616 : GTECH_NOT port map( A => n6627, Z => n1617);
   U1617 : GTECH_NOT port map( A => n6612, Z => n1618);
   U1618 : GTECH_NOT port map( A => n6692, Z => n1619);
   U1619 : GTECH_NOT port map( A => n6512, Z => n1620);
   U1620 : GTECH_NOT port map( A => n6689, Z => n1621);
   U1621 : GTECH_NOT port map( A => n6520, Z => n1622);
   U1622 : GTECH_NOT port map( A => n6528, Z => n1623);
   U1623 : GTECH_NOT port map( A => n6734, Z => n1624);
   U1624 : GTECH_NOT port map( A => n6725, Z => n1625);
   U1625 : GTECH_NOT port map( A => n6718, Z => n1626);
   U1626 : GTECH_NOT port map( A => n6859, Z => n1627);
   U1627 : GTECH_NOT port map( A => n6865, Z => n1628);
   U1628 : GTECH_NOT port map( A => n6616, Z => n1629);
   U1629 : GTECH_NOT port map( A => n6794, Z => n1630);
   U1630 : GTECH_NOT port map( A => n6802, Z => n1631);
   U1631 : GTECH_NOT port map( A => n6805, Z => n1632);
   U1632 : GTECH_NOT port map( A => n6798, Z => n1633);
   U1633 : GTECH_NOT port map( A => n6856, Z => n1634);
   U1634 : GTECH_NOT port map( A => n6716, Z => n1635);
   U1635 : GTECH_NOT port map( A => n6853, Z => n1636);
   U1636 : GTECH_NOT port map( A => n6724, Z => n1637);
   U1637 : GTECH_NOT port map( A => n6889, Z => n1638);
   U1638 : GTECH_NOT port map( A => n6882, Z => n1639);
   U1639 : GTECH_NOT port map( A => n6978, Z => n1640);
   U1640 : GTECH_NOT port map( A => n6984, Z => n1641);
   U1641 : GTECH_NOT port map( A => n6935, Z => n1642);
   U1642 : GTECH_NOT port map( A => n6939, Z => n1643);
   U1643 : GTECH_NOT port map( A => n6975, Z => n1644);
   U1644 : GTECH_NOT port map( A => n6880, Z => n1645);
   U1645 : GTECH_NOT port map( A => n7001, Z => n1646);
   U1646 : GTECH_NOT port map( A => n7053, Z => n1647);
   U1647 : GTECH_NOT port map( A => n7059, Z => n1648);
   U1648 : GTECH_NOT port map( A => A(0), Z => n1649);
   U1649 : GTECH_NOT port map( A => n2173, Z => n1650);
   U1650 : GTECH_NOT port map( A => n2826, Z => n1651);
   U1651 : GTECH_NOT port map( A => n3118, Z => n1652);
   U1652 : GTECH_NOT port map( A => n3130, Z => n1653);
   U1653 : GTECH_NOT port map( A => n3411, Z => n1654);
   U1654 : GTECH_NOT port map( A => n3423, Z => n1655);
   U1655 : GTECH_NOT port map( A => n3693, Z => n1656);
   U1656 : GTECH_NOT port map( A => n3705, Z => n1657);
   U1657 : GTECH_NOT port map( A => n3964, Z => n1658);
   U1658 : GTECH_NOT port map( A => n3976, Z => n1659);
   U1659 : GTECH_NOT port map( A => n4224, Z => n1660);
   U1660 : GTECH_NOT port map( A => n4236, Z => n1661);
   U1661 : GTECH_NOT port map( A => n4473, Z => n1662);
   U1662 : GTECH_NOT port map( A => n4485, Z => n1663);
   U1663 : GTECH_NOT port map( A => n4711, Z => n1664);
   U1664 : GTECH_NOT port map( A => n4723, Z => n1665);
   U1665 : GTECH_NOT port map( A => n4946, Z => n1666);
   U1666 : GTECH_NOT port map( A => n4958, Z => n1667);
   U1667 : GTECH_NOT port map( A => n5162, Z => n1668);
   U1668 : GTECH_NOT port map( A => n5174, Z => n1669);
   U1669 : GTECH_NOT port map( A => n5367, Z => n1670);
   U1670 : GTECH_NOT port map( A => n5379, Z => n1671);
   U1671 : GTECH_NOT port map( A => n5561, Z => n1672);
   U1672 : GTECH_NOT port map( A => n5573, Z => n1673);
   U1673 : GTECH_NOT port map( A => n5744, Z => n1674);
   U1674 : GTECH_NOT port map( A => n5756, Z => n1675);
   U1675 : GTECH_NOT port map( A => n5916, Z => n1676);
   U1676 : GTECH_NOT port map( A => n5928, Z => n1677);
   U1677 : GTECH_NOT port map( A => n6077, Z => n1678);
   U1678 : GTECH_NOT port map( A => n6089, Z => n1679);
   U1679 : GTECH_NOT port map( A => n6227, Z => n1680);
   U1680 : GTECH_NOT port map( A => n6239, Z => n1681);
   U1681 : GTECH_NOT port map( A => n6366, Z => n1682);
   U1682 : GTECH_NOT port map( A => n6378, Z => n1683);
   U1683 : GTECH_NOT port map( A => n6494, Z => n1684);
   U1684 : GTECH_NOT port map( A => n6506, Z => n1685);
   U1685 : GTECH_NOT port map( A => n6698, Z => n1686);
   U1686 : GTECH_NOT port map( A => n6607, Z => n1687);
   U1687 : GTECH_NOT port map( A => n6790, Z => n1688);
   U1688 : GTECH_NOT port map( A => n6710, Z => n1689);
   U1689 : GTECH_NOT port map( A => n6862, Z => n1690);
   U1690 : GTECH_NOT port map( A => n6793, Z => n1691);
   U1691 : GTECH_NOT port map( A => n6931, Z => n1692);
   U1692 : GTECH_NOT port map( A => n6874, Z => n1693);
   U1693 : GTECH_NOT port map( A => n6981, Z => n1694);
   U1694 : GTECH_NOT port map( A => n6993, Z => n1695);
   U1695 : GTECH_NOT port map( A => n7056, Z => n1696);
   U1696 : GTECH_NOT port map( A => n7068, Z => n1697);
   U1697 : GTECH_NOT port map( A => n7087, Z => n1698);
   U1698 : GTECH_NOT port map( A => n4879, Z => n1699);
   U1699 : GTECH_NOT port map( A => n4882, Z => n1700);
   U1700 : GTECH_NOT port map( A => n6604, Z => n1701);
   U1701 : GTECH_NOT port map( A => n7097, Z => n1702);
   U1702 : GTECH_NOT port map( A => n7094, Z => n1703);
   U1703 : GTECH_NOT port map( A => n6603, Z => n1704);
   U1704 : GTECH_NOT port map( A => B(30), Z => n1705);
   U1705 : GTECH_NOT port map( A => n1986, Z => n1706);
   U1706 : GTECH_NOT port map( A => n2184, Z => n1707);
   U1707 : GTECH_NOT port map( A => B(28), Z => n1708);
   U1708 : GTECH_NOT port map( A => n1991, Z => n1709);
   U1709 : GTECH_NOT port map( A => n2825, Z => n1710);
   U1710 : GTECH_NOT port map( A => B(26), Z => n1711);
   U1711 : GTECH_NOT port map( A => n2201, Z => n1712);
   U1712 : GTECH_NOT port map( A => n2518, Z => n1713);
   U1713 : GTECH_NOT port map( A => A(1), Z => n1714);
   U1714 : GTECH_NOT port map( A => n6611, Z => n1715);
   U1715 : GTECH_NOT port map( A => B(1), Z => n1716);
   U1716 : GTECH_NOT port map( A => n5859, Z => n1717);
   U1717 : GTECH_NOT port map( A => n6176, Z => n1718);
   U1718 : GTECH_NOT port map( A => n6570, Z => n1719);
   U1719 : GTECH_NOT port map( A => n6620, Z => n1720);
   U1720 : GTECH_NOT port map( A => n6628, Z => n1721);
   U1721 : GTECH_NOT port map( A => n6644, Z => n1722);
   U1722 : GTECH_NOT port map( A => n6660, Z => n1723);
   U1723 : GTECH_NOT port map( A => n2510, Z => n1724);
   U1724 : GTECH_NOT port map( A => n3129, Z => n1725);
   U1725 : GTECH_NOT port map( A => n3422, Z => n1726);
   U1726 : GTECH_NOT port map( A => n3704, Z => n1727);
   U1727 : GTECH_NOT port map( A => n3975, Z => n1728);
   U1728 : GTECH_NOT port map( A => n4235, Z => n1729);
   U1729 : GTECH_NOT port map( A => n4484, Z => n1730);
   U1730 : GTECH_NOT port map( A => n4722, Z => n1731);
   U1731 : GTECH_NOT port map( A => n4957, Z => n1732);
   U1732 : GTECH_NOT port map( A => n5173, Z => n1733);
   U1733 : GTECH_NOT port map( A => n5378, Z => n1734);
   U1734 : GTECH_NOT port map( A => n5572, Z => n1735);
   U1735 : GTECH_NOT port map( A => n5755, Z => n1736);
   U1736 : GTECH_NOT port map( A => n5927, Z => n1737);
   U1737 : GTECH_NOT port map( A => n6088, Z => n1738);
   U1738 : GTECH_NOT port map( A => n6238, Z => n1739);
   U1739 : GTECH_NOT port map( A => n6377, Z => n1740);
   U1740 : GTECH_NOT port map( A => n6505, Z => n1741);
   U1741 : GTECH_NOT port map( A => n6709, Z => n1742);
   U1742 : GTECH_NOT port map( A => n6797, Z => n1743);
   U1743 : GTECH_NOT port map( A => n6873, Z => n1744);
   U1744 : GTECH_NOT port map( A => n6938, Z => n1745);
   U1745 : GTECH_NOT port map( A => n6992, Z => n1746);
   U1746 : GTECH_NOT port map( A => n7035, Z => n1747);
   U1747 : GTECH_NOT port map( A => A(2), Z => n1748);
   U1748 : GTECH_NOT port map( A => n7100, Z => n1749);
   U1749 : GTECH_NOT port map( A => B(2), Z => n1750);
   U1750 : GTECH_NOT port map( A => n5676, Z => n1751);
   U1751 : GTECH_NOT port map( A => n6015, Z => n1752);
   U1752 : GTECH_NOT port map( A => n6442, Z => n1753);
   U1753 : GTECH_NOT port map( A => n6758, Z => n1754);
   U1754 : GTECH_NOT port map( A => n6806, Z => n1755);
   U1755 : GTECH_NOT port map( A => n6814, Z => n1756);
   U1756 : GTECH_NOT port map( A => n6830, Z => n1757);
   U1757 : GTECH_NOT port map( A => n2192, Z => n1758);
   U1758 : GTECH_NOT port map( A => n2833, Z => n1759);
   U1759 : GTECH_NOT port map( A => n3137, Z => n1760);
   U1760 : GTECH_NOT port map( A => n3430, Z => n1761);
   U1761 : GTECH_NOT port map( A => n3712, Z => n1762);
   U1762 : GTECH_NOT port map( A => n3983, Z => n1763);
   U1763 : GTECH_NOT port map( A => n4243, Z => n1764);
   U1764 : GTECH_NOT port map( A => n4492, Z => n1765);
   U1765 : GTECH_NOT port map( A => n4730, Z => n1766);
   U1766 : GTECH_NOT port map( A => n4965, Z => n1767);
   U1767 : GTECH_NOT port map( A => n5181, Z => n1768);
   U1768 : GTECH_NOT port map( A => n5386, Z => n1769);
   U1769 : GTECH_NOT port map( A => n5580, Z => n1770);
   U1770 : GTECH_NOT port map( A => n5763, Z => n1771);
   U1771 : GTECH_NOT port map( A => n5935, Z => n1772);
   U1772 : GTECH_NOT port map( A => n6096, Z => n1773);
   U1773 : GTECH_NOT port map( A => n6246, Z => n1774);
   U1774 : GTECH_NOT port map( A => n6385, Z => n1775);
   U1775 : GTECH_NOT port map( A => n4883, Z => n1776);
   U1776 : GTECH_NOT port map( A => n6513, Z => n1777);
   U1777 : GTECH_NOT port map( A => n6717, Z => n1778);
   U1778 : GTECH_NOT port map( A => n6881, Z => n1779);
   U1779 : GTECH_NOT port map( A => n6947, Z => n1780);
   U1780 : GTECH_NOT port map( A => n7044, Z => n1781);
   U1781 : GTECH_NOT port map( A => B(3), Z => n1782);
   U1782 : GTECH_NOT port map( A => n5482, Z => n1783);
   U1783 : GTECH_NOT port map( A => n5843, Z => n1784);
   U1784 : GTECH_NOT port map( A => n6303, Z => n1785);
   U1785 : GTECH_NOT port map( A => n6554, Z => n1786);
   U1786 : GTECH_NOT port map( A => n6906, Z => n1787);
   U1787 : GTECH_NOT port map( A => n6955, Z => n1788);
   U1788 : GTECH_NOT port map( A => n1993, Z => n1789);
   U1789 : GTECH_NOT port map( A => n2527, Z => n1790);
   U1790 : GTECH_NOT port map( A => n2842, Z => n1791);
   U1791 : GTECH_NOT port map( A => n3146, Z => n1792);
   U1792 : GTECH_NOT port map( A => n3439, Z => n1793);
   U1793 : GTECH_NOT port map( A => n3721, Z => n1794);
   U1794 : GTECH_NOT port map( A => n3992, Z => n1795);
   U1795 : GTECH_NOT port map( A => n4252, Z => n1796);
   U1796 : GTECH_NOT port map( A => n4501, Z => n1797);
   U1797 : GTECH_NOT port map( A => n4739, Z => n1798);
   U1798 : GTECH_NOT port map( A => n4974, Z => n1799);
   U1799 : GTECH_NOT port map( A => n5190, Z => n1800);
   U1800 : GTECH_NOT port map( A => n5395, Z => n1801);
   U1801 : GTECH_NOT port map( A => n5589, Z => n1802);
   U1802 : GTECH_NOT port map( A => n5772, Z => n1803);
   U1803 : GTECH_NOT port map( A => n5944, Z => n1804);
   U1804 : GTECH_NOT port map( A => n6105, Z => n1805);
   U1805 : GTECH_NOT port map( A => n6255, Z => n1806);
   U1806 : GTECH_NOT port map( A => n6394, Z => n1807);
   U1807 : GTECH_NOT port map( A => n2080, Z => n1808);
   U1808 : GTECH_NOT port map( A => n6522, Z => n1809);
   U1809 : GTECH_NOT port map( A => n6726, Z => n1810);
   U1810 : GTECH_NOT port map( A => n7009, Z => n1811);
   U1811 : GTECH_NOT port map( A => B(4), Z => n1812);
   U1812 : GTECH_NOT port map( A => n5277, Z => n1813);
   U1813 : GTECH_NOT port map( A => n5660, Z => n1814);
   U1814 : GTECH_NOT port map( A => n6153, Z => n1815);
   U1815 : GTECH_NOT port map( A => n6426, Z => n1816);
   U1816 : GTECH_NOT port map( A => n6742, Z => n1817);
   U1817 : GTECH_NOT port map( A => n1999, Z => n1818);
   U1818 : GTECH_NOT port map( A => n2217, Z => n1819);
   U1819 : GTECH_NOT port map( A => n2543, Z => n1820);
   U1820 : GTECH_NOT port map( A => n2858, Z => n1821);
   U1821 : GTECH_NOT port map( A => n3162, Z => n1822);
   U1822 : GTECH_NOT port map( A => n3455, Z => n1823);
   U1823 : GTECH_NOT port map( A => n3737, Z => n1824);
   U1824 : GTECH_NOT port map( A => n4008, Z => n1825);
   U1825 : GTECH_NOT port map( A => n4268, Z => n1826);
   U1826 : GTECH_NOT port map( A => n4517, Z => n1827);
   U1827 : GTECH_NOT port map( A => n4755, Z => n1828);
   U1828 : GTECH_NOT port map( A => n4990, Z => n1829);
   U1829 : GTECH_NOT port map( A => n5206, Z => n1830);
   U1830 : GTECH_NOT port map( A => n5411, Z => n1831);
   U1831 : GTECH_NOT port map( A => n5605, Z => n1832);
   U1832 : GTECH_NOT port map( A => n5788, Z => n1833);
   U1833 : GTECH_NOT port map( A => n5960, Z => n1834);
   U1834 : GTECH_NOT port map( A => n6121, Z => n1835);
   U1835 : GTECH_NOT port map( A => n6271, Z => n1836);
   U1836 : GTECH_NOT port map( A => n6410, Z => n1837);
   U1837 : GTECH_NOT port map( A => n1973, Z => n1838);
   U1838 : GTECH_NOT port map( A => B(6), Z => n1839);
   U1839 : GTECH_NOT port map( A => n4826, Z => n1840);
   U1840 : GTECH_NOT port map( A => n5261, Z => n1841);
   U1841 : GTECH_NOT port map( A => n5820, Z => n1842);
   U1842 : GTECH_NOT port map( A => n6137, Z => n1843);
   U1843 : GTECH_NOT port map( A => n2005, Z => n1844);
   U1844 : GTECH_NOT port map( A => n2233, Z => n1845);
   U1845 : GTECH_NOT port map( A => n2559, Z => n1846);
   U1846 : GTECH_NOT port map( A => n2874, Z => n1847);
   U1847 : GTECH_NOT port map( A => n3178, Z => n1848);
   U1848 : GTECH_NOT port map( A => n3471, Z => n1849);
   U1849 : GTECH_NOT port map( A => n3753, Z => n1850);
   U1850 : GTECH_NOT port map( A => n4024, Z => n1851);
   U1851 : GTECH_NOT port map( A => n4284, Z => n1852);
   U1852 : GTECH_NOT port map( A => n4533, Z => n1853);
   U1853 : GTECH_NOT port map( A => n4771, Z => n1854);
   U1854 : GTECH_NOT port map( A => n5006, Z => n1855);
   U1855 : GTECH_NOT port map( A => n5222, Z => n1856);
   U1856 : GTECH_NOT port map( A => n5427, Z => n1857);
   U1857 : GTECH_NOT port map( A => n5621, Z => n1858);
   U1858 : GTECH_NOT port map( A => n5804, Z => n1859);
   U1859 : GTECH_NOT port map( A => n5976, Z => n1860);
   U1860 : GTECH_NOT port map( A => n1957, Z => n1861);
   U1861 : GTECH_NOT port map( A => B(8), Z => n1862);
   U1862 : GTECH_NOT port map( A => n4339, Z => n1863);
   U1863 : GTECH_NOT port map( A => n4810, Z => n1864);
   U1864 : GTECH_NOT port map( A => n5443, Z => n1865);
   U1865 : GTECH_NOT port map( A => n2011, Z => n1866);
   U1866 : GTECH_NOT port map( A => n2249, Z => n1867);
   U1867 : GTECH_NOT port map( A => n2575, Z => n1868);
   U1868 : GTECH_NOT port map( A => n2890, Z => n1869);
   U1869 : GTECH_NOT port map( A => n3194, Z => n1870);
   U1870 : GTECH_NOT port map( A => n3487, Z => n1871);
   U1871 : GTECH_NOT port map( A => n3769, Z => n1872);
   U1872 : GTECH_NOT port map( A => n4040, Z => n1873);
   U1873 : GTECH_NOT port map( A => n4300, Z => n1874);
   U1874 : GTECH_NOT port map( A => n4549, Z => n1875);
   U1875 : GTECH_NOT port map( A => n4787, Z => n1876);
   U1876 : GTECH_NOT port map( A => n5022, Z => n1877);
   U1877 : GTECH_NOT port map( A => n5238, Z => n1878);
   U1878 : GTECH_NOT port map( A => n5637, Z => n1879);
   U1879 : GTECH_NOT port map( A => n1941, Z => n1880);
   U1880 : GTECH_NOT port map( A => B(10), Z => n1881);
   U1881 : GTECH_NOT port map( A => n3808, Z => n1882);
   U1882 : GTECH_NOT port map( A => n4323, Z => n1883);
   U1883 : GTECH_NOT port map( A => n2027, Z => n1884);
   U1884 : GTECH_NOT port map( A => n2288, Z => n1885);
   U1885 : GTECH_NOT port map( A => n2614, Z => n1886);
   U1886 : GTECH_NOT port map( A => n2929, Z => n1887);
   U1887 : GTECH_NOT port map( A => n3233, Z => n1888);
   U1888 : GTECH_NOT port map( A => n3526, Z => n1889);
   U1889 : GTECH_NOT port map( A => n4079, Z => n1890);
   U1890 : GTECH_NOT port map( A => n4588, Z => n1891);
   U1891 : GTECH_NOT port map( A => n6031, Z => n1892);
   U1892 : GTECH_NOT port map( A => B(15), Z => n1893);
   U1893 : GTECH_NOT port map( A => n2913, Z => n1894);
   U1894 : GTECH_NOT port map( A => n2021, Z => n1895);
   U1895 : GTECH_NOT port map( A => n2272, Z => n1896);
   U1896 : GTECH_NOT port map( A => n2598, Z => n1897);
   U1897 : GTECH_NOT port map( A => n3217, Z => n1898);
   U1898 : GTECH_NOT port map( A => n3510, Z => n1899);
   U1899 : GTECH_NOT port map( A => n3792, Z => n1900);
   U1900 : GTECH_NOT port map( A => n4063, Z => n1901);
   U1901 : GTECH_NOT port map( A => n4572, Z => n1902);
   U1902 : GTECH_NOT port map( A => n5045, Z => n1903);
   U1903 : GTECH_NOT port map( A => n6327, Z => n1904);
   U1904 : GTECH_NOT port map( A => B(13), Z => n1905);
   U1905 : GTECH_NOT port map( A => B(12), Z => n1906);
   U1906 : GTECH_NOT port map( A => B(11), Z => n1907);
   U1907 : GTECH_NOT port map( A => B(20), Z => n1908);
   U1908 : GTECH_NOT port map( A => B(19), Z => n1909);
   U1909 : GTECH_NOT port map( A => B(18), Z => n1910);
   U1910 : GTECH_NOT port map( A => B(17), Z => n1911);
   U1911 : GTECH_NOT port map( A => B(16), Z => n1912);
   U1912 : GTECH_NOT port map( A => B(9), Z => n1913);
   U1913 : GTECH_NOT port map( A => B(22), Z => n1914);
   U1914 : GTECH_NOT port map( A => B(21), Z => n1915);
   U1915 : GTECH_NOT port map( A => B(14), Z => n1916);
   U1916 : GTECH_NOT port map( A => B(7), Z => n1917);
   U1917 : GTECH_NOT port map( A => B(0), Z => n1918);
   U1918 : GTECH_NOT port map( A => B(23), Z => n1919);
   U1919 : GTECH_NOT port map( A => B(24), Z => n1920);
   U1920 : GTECH_NOT port map( A => B(25), Z => n1921);
   U1921 : GTECH_NOT port map( A => B(27), Z => n1922);
   U1922 : GTECH_NAND2 port map( A => n1923, B => n1426, Z => PRODUCT(1));
   U1923 : GTECH_NOR2 port map( A => n1925, B => n1926, Z => n1924);
   U1924 : GTECH_NAND2 port map( A => n1926, B => n1925, Z => n1923);
   U1925 : GTECH_NOR2 port map( A => n1716, B => n1649, Z => n1926);
   U1926 : GTECH_NOR2 port map( A => n1918, B => n1649, Z => PRODUCT(0));
   U1927 : GTECH_NOR2 port map( A => n1927, B => n48, Z => PRODUCT(11));
   U1928 : GTECH_NAND2 port map( A => n1929, B => n1930, Z => n1928);
   U1929 : GTECH_NOR2 port map( A => n1930, B => n1929, Z => n1927);
   U1930 : GTECH_NAND2 port map( A => n1931, B => n49, Z => n1930);
   U1931 : GTECH_NOR2 port map( A => n1933, B => n1934, Z => n1932);
   U1932 : GTECH_NAND2 port map( A => n1934, B => n1933, Z => n1931);
   U1933 : GTECH_NAND2 port map( A => n1935, B => n4, Z => PRODUCT(10));
   U1934 : GTECH_NOR2 port map( A => n1937, B => n1938, Z => n1936);
   U1935 : GTECH_NAND2 port map( A => n1938, B => n1937, Z => n1935);
   U1936 : GTECH_NAND2 port map( A => n1939, B => n1940, Z => n1938);
   U1937 : GTECH_NAND2 port map( A => n1880, B => n50, Z => n1940);
   U1938 : GTECH_NAND2 port map( A => n1942, B => n1941, Z => n1939);
   U1939 : GTECH_NOR2 port map( A => n1943, B => n52, Z => PRODUCT(9));
   U1940 : GTECH_NAND2 port map( A => n1945, B => n1946, Z => n1944);
   U1941 : GTECH_NOR2 port map( A => n1946, B => n1945, Z => n1943);
   U1942 : GTECH_NAND2 port map( A => n1947, B => n53, Z => n1946);
   U1943 : GTECH_NOR2 port map( A => n1949, B => n1950, Z => n1948);
   U1944 : GTECH_NAND2 port map( A => n1950, B => n1949, Z => n1947);
   U1945 : GTECH_NAND2 port map( A => n1951, B => n3, Z => PRODUCT(8));
   U1946 : GTECH_NOR2 port map( A => n1953, B => n1954, Z => n1952);
   U1947 : GTECH_NAND2 port map( A => n1954, B => n1953, Z => n1951);
   U1948 : GTECH_NAND2 port map( A => n1955, B => n1956, Z => n1954);
   U1949 : GTECH_NAND2 port map( A => n1861, B => n54, Z => n1956);
   U1950 : GTECH_NAND2 port map( A => n1958, B => n1957, Z => n1955);
   U1951 : GTECH_NOR2 port map( A => n1959, B => n56, Z => PRODUCT(7));
   U1952 : GTECH_NAND2 port map( A => n1961, B => n1962, Z => n1960);
   U1953 : GTECH_NOR2 port map( A => n1962, B => n1961, Z => n1959);
   U1954 : GTECH_NAND2 port map( A => n1963, B => n57, Z => n1962);
   U1955 : GTECH_NOR2 port map( A => n1965, B => n1966, Z => n1964);
   U1956 : GTECH_NAND2 port map( A => n1966, B => n1965, Z => n1963);
   U1957 : GTECH_NAND2 port map( A => n1967, B => n59, Z => PRODUCT(6));
   U1958 : GTECH_NOR2 port map( A => n1969, B => n1970, Z => n1968);
   U1959 : GTECH_NAND2 port map( A => n1970, B => n1969, Z => n1967);
   U1960 : GTECH_NAND2 port map( A => n1971, B => n1972, Z => n1970);
   U1961 : GTECH_NAND2 port map( A => n1838, B => n462, Z => n1972);
   U1962 : GTECH_NAND2 port map( A => n1974, B => n1973, Z => n1971);
   U1963 : GTECH_NOR2 port map( A => n1975, B => n464, Z => PRODUCT(5));
   U1964 : GTECH_NAND2 port map( A => n1977, B => n1978, Z => n1976);
   U1965 : GTECH_NOR2 port map( A => n1978, B => n1977, Z => n1975);
   U1966 : GTECH_NAND2 port map( A => n1979, B => n1416, Z => n1978);
   U1967 : GTECH_NOR2 port map( A => n1981, B => n1982, Z => n1980);
   U1968 : GTECH_NAND2 port map( A => n1982, B => n1981, Z => n1979);
   U1969 : GTECH_NAND2 port map( A => n2073, B => n2074, Z => PRODUCT(4));
   U1970 : GTECH_NAND2 port map( A => n1613, B => n1609, Z => n2074);
   U1971 : GTECH_NAND2 port map( A => n2075, B => n2076, Z => n2073);
   U1972 : GTECH_NAND2 port map( A => n2077, B => n2078, Z => n2075);
   U1973 : GTECH_NAND2 port map( A => n1808, B => n2079, Z => n2078);
   U1974 : GTECH_NAND2 port map( A => n1610, B => n2080, Z => n2077);
   U1975 : GTECH_NOR2 port map( A => n41, B => n2081, Z => PRODUCT(31));
   U1976 : GTECH_NOR2 port map( A => n1984, B => n2082, Z => n2081);
   U1977 : GTECH_NAND2 port map( A => n2082, B => n1984, Z => n2083);
   U1978 : GTECH_NAND2 port map( A => n128, B => n2084, Z => n1984);
   U1979 : GTECH_NAND2 port map( A => n203, B => n2085, Z => n2084);
   U1980 : GTECH_NOR2 port map( A => n2085, B => n203, Z => n2086);
   U1981 : GTECH_NOR2 port map( A => n2087, B => n204, Z => n2072);
   U1982 : GTECH_NAND2 port map( A => n279, B => n2089, Z => n2088);
   U1983 : GTECH_NOR2 port map( A => n2089, B => n279, Z => n2087);
   U1984 : GTECH_NOR2 port map( A => n2090, B => n280, Z => n2068);
   U1985 : GTECH_NAND2 port map( A => n356, B => n2092, Z => n2091);
   U1986 : GTECH_NOR2 port map( A => n2092, B => n356, Z => n2090);
   U1987 : GTECH_NOR2 port map( A => n2093, B => n357, Z => n2066);
   U1988 : GTECH_NAND2 port map( A => n429, B => n2095, Z => n2094);
   U1989 : GTECH_NOR2 port map( A => n2095, B => n429, Z => n2093);
   U1990 : GTECH_NOR2 port map( A => n2096, B => n430, Z => n2062);
   U1991 : GTECH_NAND2 port map( A => n476, B => n2098, Z => n2097);
   U1992 : GTECH_NOR2 port map( A => n2098, B => n476, Z => n2096);
   U1993 : GTECH_NOR2 port map( A => n2099, B => n477, Z => n2060);
   U1994 : GTECH_NAND2 port map( A => n478, B => n2101, Z => n2100);
   U1995 : GTECH_NOR2 port map( A => n2101, B => n478, Z => n2099);
   U1996 : GTECH_NOR2 port map( A => n2102, B => n479, Z => n2056);
   U1997 : GTECH_NAND2 port map( A => n480, B => n2104, Z => n2103);
   U1998 : GTECH_NOR2 port map( A => n2104, B => n480, Z => n2102);
   U1999 : GTECH_NOR2 port map( A => n2105, B => n481, Z => n2054);
   U2000 : GTECH_NAND2 port map( A => n482, B => n2107, Z => n2106);
   U2001 : GTECH_NOR2 port map( A => n2107, B => n482, Z => n2105);
   U2002 : GTECH_NOR2 port map( A => n2108, B => n483, Z => n2050);
   U2003 : GTECH_NAND2 port map( A => n484, B => n2110, Z => n2109);
   U2004 : GTECH_NOR2 port map( A => n2110, B => n484, Z => n2108);
   U2005 : GTECH_NOR2 port map( A => n2111, B => n485, Z => n2048);
   U2006 : GTECH_NAND2 port map( A => n486, B => n2113, Z => n2112);
   U2007 : GTECH_NOR2 port map( A => n2113, B => n486, Z => n2111);
   U2008 : GTECH_NOR2 port map( A => n2114, B => n487, Z => n2044);
   U2009 : GTECH_NAND2 port map( A => n488, B => n2116, Z => n2115);
   U2010 : GTECH_NOR2 port map( A => n2116, B => n488, Z => n2114);
   U2011 : GTECH_NOR2 port map( A => n2117, B => n489, Z => n2042);
   U2012 : GTECH_NAND2 port map( A => n490, B => n2119, Z => n2118);
   U2013 : GTECH_NOR2 port map( A => n2119, B => n490, Z => n2117);
   U2014 : GTECH_NOR2 port map( A => n2120, B => n491, Z => n2038);
   U2015 : GTECH_NAND2 port map( A => n492, B => n2122, Z => n2121);
   U2016 : GTECH_NOR2 port map( A => n2122, B => n492, Z => n2120);
   U2017 : GTECH_NOR2 port map( A => n2123, B => n493, Z => n2036);
   U2018 : GTECH_NAND2 port map( A => n494, B => n2125, Z => n2124);
   U2019 : GTECH_NOR2 port map( A => n2125, B => n494, Z => n2123);
   U2020 : GTECH_NOR2 port map( A => n2126, B => n495, Z => n2032);
   U2021 : GTECH_NAND2 port map( A => n496, B => n2128, Z => n2127);
   U2022 : GTECH_NOR2 port map( A => n2128, B => n496, Z => n2126);
   U2023 : GTECH_NOR2 port map( A => n2129, B => n497, Z => n2030);
   U2024 : GTECH_NAND2 port map( A => n498, B => n2131, Z => n2130);
   U2025 : GTECH_NOR2 port map( A => n2131, B => n498, Z => n2129);
   U2026 : GTECH_NOR2 port map( A => n2132, B => n499, Z => n2026);
   U2027 : GTECH_NAND2 port map( A => n500, B => n2134, Z => n2133);
   U2028 : GTECH_NOR2 port map( A => n2134, B => n500, Z => n2132);
   U2029 : GTECH_NOR2 port map( A => n2135, B => n501, Z => n2024);
   U2030 : GTECH_NAND2 port map( A => n502, B => n2137, Z => n2136);
   U2031 : GTECH_NOR2 port map( A => n2137, B => n502, Z => n2135);
   U2032 : GTECH_NOR2 port map( A => n2138, B => n503, Z => n2020);
   U2033 : GTECH_NAND2 port map( A => n504, B => n2140, Z => n2139);
   U2034 : GTECH_NOR2 port map( A => n2140, B => n504, Z => n2138);
   U2035 : GTECH_NOR2 port map( A => n2141, B => n505, Z => n2018);
   U2036 : GTECH_NAND2 port map( A => n506, B => n2143, Z => n2142);
   U2037 : GTECH_NOR2 port map( A => n2143, B => n506, Z => n2141);
   U2038 : GTECH_NOR2 port map( A => n2144, B => n507, Z => n2014);
   U2039 : GTECH_NAND2 port map( A => n508, B => n2146, Z => n2145);
   U2040 : GTECH_NOR2 port map( A => n2146, B => n508, Z => n2144);
   U2041 : GTECH_NOR2 port map( A => n2147, B => n509, Z => n2012);
   U2042 : GTECH_NAND2 port map( A => n510, B => n2149, Z => n2148);
   U2043 : GTECH_NOR2 port map( A => n2149, B => n510, Z => n2147);
   U2044 : GTECH_NOR2 port map( A => n2150, B => n511, Z => n2008);
   U2045 : GTECH_NAND2 port map( A => n512, B => n2152, Z => n2151);
   U2046 : GTECH_NOR2 port map( A => n2152, B => n512, Z => n2150);
   U2047 : GTECH_NOR2 port map( A => n2153, B => n513, Z => n2006);
   U2048 : GTECH_NAND2 port map( A => n514, B => n2155, Z => n2154);
   U2049 : GTECH_NOR2 port map( A => n2155, B => n514, Z => n2153);
   U2050 : GTECH_NOR2 port map( A => n2156, B => n515, Z => n2002);
   U2051 : GTECH_NAND2 port map( A => n516, B => n2158, Z => n2157);
   U2052 : GTECH_NOR2 port map( A => n2158, B => n516, Z => n2156);
   U2053 : GTECH_NOR2 port map( A => n2159, B => n517, Z => n2000);
   U2054 : GTECH_NAND2 port map( A => n518, B => n2161, Z => n2160);
   U2055 : GTECH_NOR2 port map( A => n2161, B => n518, Z => n2159);
   U2056 : GTECH_NOR2 port map( A => n2162, B => n519, Z => n1996);
   U2057 : GTECH_NAND2 port map( A => n520, B => n2164, Z => n2163);
   U2058 : GTECH_NOR2 port map( A => n2164, B => n520, Z => n2162);
   U2059 : GTECH_NOR2 port map( A => n2165, B => n521, Z => n1994);
   U2060 : GTECH_NAND2 port map( A => n522, B => n2167, Z => n2166);
   U2061 : GTECH_NOR2 port map( A => n2167, B => n522, Z => n2165);
   U2062 : GTECH_NOR2 port map( A => n523, B => n2168, Z => n1990);
   U2063 : GTECH_NOR2 port map( A => n1987, B => n2169, Z => n2168);
   U2064 : GTECH_NAND2 port map( A => n2169, B => n1987, Z => n2170);
   U2065 : GTECH_NOR2 port map( A => n2171, B => n2172, Z => n1987);
   U2066 : GTECH_NOR2 port map( A => n1986, B => n1650, Z => n2172);
   U2067 : GTECH_NOR2 port map( A => n2173, B => n1706, Z => n2171);
   U2068 : GTECH_NAND2 port map( A => B(30), B => A(1), Z => n1986);
   U2069 : GTECH_NAND2 port map( A => B(31), B => A(0), Z => n2173);
   U2070 : GTECH_NAND2 port map( A => n2174, B => n2175, Z => n2169);
   U2071 : GTECH_NAND2 port map( A => n573, B => n524, Z => n2175);
   U2072 : GTECH_NAND2 port map( A => n1988, B => n2176, Z => n2174);
   U2073 : GTECH_NAND2 port map( A => n2177, B => n2178, Z => n2176);
   U2074 : GTECH_NOR2 port map( A => n1649, B => n1705, Z => n2177);
   U2075 : GTECH_NOR2 port map( A => n576, B => n1748, Z => n1988);
   U2076 : GTECH_NOR2 port map( A => n2179, B => n2180, Z => n2167);
   U2077 : GTECH_NOR2 port map( A => n1991, B => n525, Z => n2180);
   U2078 : GTECH_NOR2 port map( A => n1989, B => n1709, Z => n2179);
   U2079 : GTECH_NAND2 port map( A => B(28), B => A(3), Z => n1991);
   U2080 : GTECH_NAND2 port map( A => n2181, B => n2182, Z => n1989);
   U2081 : GTECH_NAND2 port map( A => n575, B => n2183, Z => n2182);
   U2082 : GTECH_NAND2 port map( A => n571, B => n1707, Z => n2183);
   U2083 : GTECH_NAND2 port map( A => n2184, B => n2185, Z => n2181);
   U2084 : GTECH_NOR2 port map( A => n2186, B => n2187, Z => n2164);
   U2085 : GTECH_NOR2 port map( A => n1993, B => n526, Z => n2187);
   U2086 : GTECH_NOR2 port map( A => n1992, B => n1789, Z => n2186);
   U2087 : GTECH_NAND2 port map( A => B(27), B => A(4), Z => n1993);
   U2088 : GTECH_NAND2 port map( A => n2188, B => n2189, Z => n1992);
   U2089 : GTECH_NAND2 port map( A => n2190, B => n2191, Z => n2189);
   U2090 : GTECH_NAND2 port map( A => n570, B => n2192, Z => n2190);
   U2091 : GTECH_NAND2 port map( A => n1758, B => n2193, Z => n2188);
   U2092 : GTECH_NOR2 port map( A => n2194, B => n2195, Z => n2161);
   U2093 : GTECH_NOR2 port map( A => n1997, B => n527, Z => n2195);
   U2094 : GTECH_NOR2 port map( A => n1995, B => n1293, Z => n2194);
   U2095 : GTECH_NAND2 port map( A => B(26), B => A(5), Z => n1997);
   U2096 : GTECH_NAND2 port map( A => n2196, B => n2197, Z => n1995);
   U2097 : GTECH_NAND2 port map( A => n2198, B => n2199, Z => n2197);
   U2098 : GTECH_NAND2 port map( A => n2200, B => n2201, Z => n2198);
   U2099 : GTECH_NAND2 port map( A => n1712, B => n569, Z => n2196);
   U2100 : GTECH_NOR2 port map( A => n2202, B => n2203, Z => n2158);
   U2101 : GTECH_NOR2 port map( A => n1999, B => n528, Z => n2203);
   U2102 : GTECH_NOR2 port map( A => n1998, B => n1818, Z => n2202);
   U2103 : GTECH_NAND2 port map( A => B(25), B => A(6), Z => n1999);
   U2104 : GTECH_NAND2 port map( A => n2204, B => n2205, Z => n1998);
   U2105 : GTECH_NAND2 port map( A => n2206, B => n2207, Z => n2205);
   U2106 : GTECH_NAND2 port map( A => n568, B => n2208, Z => n2206);
   U2107 : GTECH_NAND2 port map( A => n1294, B => n2209, Z => n2204);
   U2108 : GTECH_NOR2 port map( A => n2210, B => n2211, Z => n2155);
   U2109 : GTECH_NOR2 port map( A => n2003, B => n529, Z => n2211);
   U2110 : GTECH_NOR2 port map( A => n2001, B => n1175, Z => n2210);
   U2111 : GTECH_NAND2 port map( A => B(24), B => A(7), Z => n2003);
   U2112 : GTECH_NAND2 port map( A => n2212, B => n2213, Z => n2001);
   U2113 : GTECH_NAND2 port map( A => n2214, B => n2215, Z => n2213);
   U2114 : GTECH_NAND2 port map( A => n2216, B => n2217, Z => n2214);
   U2115 : GTECH_NAND2 port map( A => n1819, B => n567, Z => n2212);
   U2116 : GTECH_NOR2 port map( A => n2218, B => n2219, Z => n2152);
   U2117 : GTECH_NOR2 port map( A => n2005, B => n530, Z => n2219);
   U2118 : GTECH_NOR2 port map( A => n2004, B => n1844, Z => n2218);
   U2119 : GTECH_NAND2 port map( A => B(23), B => A(8), Z => n2005);
   U2120 : GTECH_NAND2 port map( A => n2220, B => n2221, Z => n2004);
   U2121 : GTECH_NAND2 port map( A => n2222, B => n2223, Z => n2221);
   U2122 : GTECH_NAND2 port map( A => n566, B => n2224, Z => n2222);
   U2123 : GTECH_NAND2 port map( A => n1176, B => n2225, Z => n2220);
   U2124 : GTECH_NOR2 port map( A => n2226, B => n2227, Z => n2149);
   U2125 : GTECH_NOR2 port map( A => n2009, B => n531, Z => n2227);
   U2126 : GTECH_NOR2 port map( A => n2007, B => n1071, Z => n2226);
   U2127 : GTECH_NAND2 port map( A => B(22), B => A(9), Z => n2009);
   U2128 : GTECH_NAND2 port map( A => n2228, B => n2229, Z => n2007);
   U2129 : GTECH_NAND2 port map( A => n2230, B => n2231, Z => n2229);
   U2130 : GTECH_NAND2 port map( A => n2232, B => n2233, Z => n2230);
   U2131 : GTECH_NAND2 port map( A => n1845, B => n565, Z => n2228);
   U2132 : GTECH_NOR2 port map( A => n2234, B => n2235, Z => n2146);
   U2133 : GTECH_NOR2 port map( A => n2011, B => n532, Z => n2235);
   U2134 : GTECH_NOR2 port map( A => n2010, B => n1866, Z => n2234);
   U2135 : GTECH_NAND2 port map( A => B(21), B => A(10), Z => n2011);
   U2136 : GTECH_NAND2 port map( A => n2236, B => n2237, Z => n2010);
   U2137 : GTECH_NAND2 port map( A => n2238, B => n2239, Z => n2237);
   U2138 : GTECH_NAND2 port map( A => n564, B => n2240, Z => n2238);
   U2139 : GTECH_NAND2 port map( A => n1072, B => n2241, Z => n2236);
   U2140 : GTECH_NOR2 port map( A => n2242, B => n2243, Z => n2143);
   U2141 : GTECH_NOR2 port map( A => n2015, B => n533, Z => n2243);
   U2142 : GTECH_NOR2 port map( A => n2013, B => n1015, Z => n2242);
   U2143 : GTECH_NAND2 port map( A => B(20), B => A(11), Z => n2015);
   U2144 : GTECH_NAND2 port map( A => n2244, B => n2245, Z => n2013);
   U2145 : GTECH_NAND2 port map( A => n2246, B => n2247, Z => n2245);
   U2146 : GTECH_NAND2 port map( A => n2248, B => n2249, Z => n2246);
   U2147 : GTECH_NAND2 port map( A => n1867, B => n563, Z => n2244);
   U2148 : GTECH_NOR2 port map( A => n2250, B => n2251, Z => n2140);
   U2149 : GTECH_NOR2 port map( A => n2017, B => n534, Z => n2251);
   U2150 : GTECH_NOR2 port map( A => n2016, B => n932, Z => n2250);
   U2151 : GTECH_NAND2 port map( A => B(19), B => A(12), Z => n2017);
   U2152 : GTECH_NAND2 port map( A => n2252, B => n2253, Z => n2016);
   U2153 : GTECH_NAND2 port map( A => n2254, B => n2255, Z => n2253);
   U2154 : GTECH_NAND2 port map( A => n562, B => n2256, Z => n2254);
   U2155 : GTECH_NAND2 port map( A => n1016, B => n2257, Z => n2252);
   U2156 : GTECH_NOR2 port map( A => n2258, B => n2259, Z => n2137);
   U2157 : GTECH_NOR2 port map( A => n2021, B => n535, Z => n2259);
   U2158 : GTECH_NOR2 port map( A => n2019, B => n1895, Z => n2258);
   U2159 : GTECH_NAND2 port map( A => B(18), B => A(13), Z => n2021);
   U2160 : GTECH_NAND2 port map( A => n2260, B => n2261, Z => n2019);
   U2161 : GTECH_NAND2 port map( A => n2262, B => n2263, Z => n2261);
   U2162 : GTECH_NAND2 port map( A => n2264, B => n2265, Z => n2262);
   U2163 : GTECH_NAND2 port map( A => n933, B => n561, Z => n2260);
   U2164 : GTECH_NOR2 port map( A => n2266, B => n2267, Z => n2134);
   U2165 : GTECH_NOR2 port map( A => n2023, B => n536, Z => n2267);
   U2166 : GTECH_NOR2 port map( A => n2022, B => n862, Z => n2266);
   U2167 : GTECH_NAND2 port map( A => B(17), B => A(14), Z => n2023);
   U2168 : GTECH_NAND2 port map( A => n2268, B => n2269, Z => n2022);
   U2169 : GTECH_NAND2 port map( A => n2270, B => n2271, Z => n2269);
   U2170 : GTECH_NAND2 port map( A => n560, B => n2272, Z => n2270);
   U2171 : GTECH_NAND2 port map( A => n1896, B => n2273, Z => n2268);
   U2172 : GTECH_NOR2 port map( A => n2274, B => n2275, Z => n2131);
   U2173 : GTECH_NOR2 port map( A => n2027, B => n537, Z => n2275);
   U2174 : GTECH_NOR2 port map( A => n2025, B => n1884, Z => n2274);
   U2175 : GTECH_NAND2 port map( A => B(16), B => A(15), Z => n2027);
   U2176 : GTECH_NAND2 port map( A => n2276, B => n2277, Z => n2025);
   U2177 : GTECH_NAND2 port map( A => n2278, B => n2279, Z => n2277);
   U2178 : GTECH_NAND2 port map( A => n2280, B => n2281, Z => n2278);
   U2179 : GTECH_NAND2 port map( A => n863, B => n559, Z => n2276);
   U2180 : GTECH_NOR2 port map( A => n2282, B => n2283, Z => n2128);
   U2181 : GTECH_NOR2 port map( A => n2029, B => n538, Z => n2283);
   U2182 : GTECH_NOR2 port map( A => n2028, B => n825, Z => n2282);
   U2183 : GTECH_NAND2 port map( A => B(15), B => A(16), Z => n2029);
   U2184 : GTECH_NAND2 port map( A => n2284, B => n2285, Z => n2028);
   U2185 : GTECH_NAND2 port map( A => n2286, B => n2287, Z => n2285);
   U2186 : GTECH_NAND2 port map( A => n558, B => n2288, Z => n2286);
   U2187 : GTECH_NAND2 port map( A => n1885, B => n2289, Z => n2284);
   U2188 : GTECH_NOR2 port map( A => n2290, B => n2291, Z => n2125);
   U2189 : GTECH_NOR2 port map( A => n2033, B => n539, Z => n2291);
   U2190 : GTECH_NOR2 port map( A => n2031, B => n792, Z => n2290);
   U2191 : GTECH_NAND2 port map( A => B(14), B => A(17), Z => n2033);
   U2192 : GTECH_NAND2 port map( A => n2292, B => n2293, Z => n2031);
   U2193 : GTECH_NAND2 port map( A => n2294, B => n2295, Z => n2293);
   U2194 : GTECH_NAND2 port map( A => n2296, B => n2297, Z => n2294);
   U2195 : GTECH_NAND2 port map( A => n826, B => n557, Z => n2292);
   U2196 : GTECH_NOR2 port map( A => n2298, B => n2299, Z => n2122);
   U2197 : GTECH_NOR2 port map( A => n2035, B => n540, Z => n2299);
   U2198 : GTECH_NOR2 port map( A => n2034, B => n763, Z => n2298);
   U2199 : GTECH_NAND2 port map( A => B(13), B => A(18), Z => n2035);
   U2200 : GTECH_NAND2 port map( A => n2300, B => n2301, Z => n2034);
   U2201 : GTECH_NAND2 port map( A => n2302, B => n2303, Z => n2301);
   U2202 : GTECH_NAND2 port map( A => n556, B => n2304, Z => n2302);
   U2203 : GTECH_NAND2 port map( A => n793, B => n2305, Z => n2300);
   U2204 : GTECH_NOR2 port map( A => n2306, B => n2307, Z => n2119);
   U2205 : GTECH_NOR2 port map( A => n2039, B => n541, Z => n2307);
   U2206 : GTECH_NOR2 port map( A => n2037, B => n738, Z => n2306);
   U2207 : GTECH_NAND2 port map( A => B(12), B => A(19), Z => n2039);
   U2208 : GTECH_NAND2 port map( A => n2308, B => n2309, Z => n2037);
   U2209 : GTECH_NAND2 port map( A => n2310, B => n2311, Z => n2309);
   U2210 : GTECH_NAND2 port map( A => n2312, B => n2313, Z => n2310);
   U2211 : GTECH_NAND2 port map( A => n764, B => n555, Z => n2308);
   U2212 : GTECH_NOR2 port map( A => n2314, B => n2315, Z => n2116);
   U2213 : GTECH_NOR2 port map( A => n2041, B => n542, Z => n2315);
   U2214 : GTECH_NOR2 port map( A => n2040, B => n717, Z => n2314);
   U2215 : GTECH_NAND2 port map( A => B(11), B => A(20), Z => n2041);
   U2216 : GTECH_NAND2 port map( A => n2316, B => n2317, Z => n2040);
   U2217 : GTECH_NAND2 port map( A => n2318, B => n2319, Z => n2317);
   U2218 : GTECH_NAND2 port map( A => n554, B => n2320, Z => n2318);
   U2219 : GTECH_NAND2 port map( A => n739, B => n2321, Z => n2316);
   U2220 : GTECH_NOR2 port map( A => n2322, B => n2323, Z => n2113);
   U2221 : GTECH_NOR2 port map( A => n2045, B => n543, Z => n2323);
   U2222 : GTECH_NOR2 port map( A => n2043, B => n700, Z => n2322);
   U2223 : GTECH_NAND2 port map( A => B(10), B => A(21), Z => n2045);
   U2224 : GTECH_NAND2 port map( A => n2324, B => n2325, Z => n2043);
   U2225 : GTECH_NAND2 port map( A => n2326, B => n2327, Z => n2325);
   U2226 : GTECH_NAND2 port map( A => n2328, B => n2329, Z => n2326);
   U2227 : GTECH_NAND2 port map( A => n718, B => n553, Z => n2324);
   U2228 : GTECH_NOR2 port map( A => n2330, B => n2331, Z => n2110);
   U2229 : GTECH_NOR2 port map( A => n2047, B => n544, Z => n2331);
   U2230 : GTECH_NOR2 port map( A => n2046, B => n687, Z => n2330);
   U2231 : GTECH_NAND2 port map( A => B(9), B => A(22), Z => n2047);
   U2232 : GTECH_NAND2 port map( A => n2332, B => n2333, Z => n2046);
   U2233 : GTECH_NAND2 port map( A => n2334, B => n2335, Z => n2333);
   U2234 : GTECH_NAND2 port map( A => n552, B => n2336, Z => n2334);
   U2235 : GTECH_NAND2 port map( A => n701, B => n2337, Z => n2332);
   U2236 : GTECH_NOR2 port map( A => n2338, B => n2339, Z => n2107);
   U2237 : GTECH_NOR2 port map( A => n2051, B => n545, Z => n2339);
   U2238 : GTECH_NOR2 port map( A => n2049, B => n678, Z => n2338);
   U2239 : GTECH_NAND2 port map( A => B(8), B => A(23), Z => n2051);
   U2240 : GTECH_NAND2 port map( A => n2340, B => n2341, Z => n2049);
   U2241 : GTECH_NAND2 port map( A => n2342, B => n2343, Z => n2341);
   U2242 : GTECH_NAND2 port map( A => n2344, B => n2345, Z => n2342);
   U2243 : GTECH_NAND2 port map( A => n688, B => n551, Z => n2340);
   U2244 : GTECH_NOR2 port map( A => n2346, B => n2347, Z => n2104);
   U2245 : GTECH_NOR2 port map( A => n2053, B => n546, Z => n2347);
   U2246 : GTECH_NOR2 port map( A => n2052, B => n671, Z => n2346);
   U2247 : GTECH_NAND2 port map( A => B(7), B => A(24), Z => n2053);
   U2248 : GTECH_NAND2 port map( A => n2348, B => n2349, Z => n2052);
   U2249 : GTECH_NAND2 port map( A => n2350, B => n2351, Z => n2349);
   U2250 : GTECH_NAND2 port map( A => n550, B => n2352, Z => n2350);
   U2251 : GTECH_NAND2 port map( A => n679, B => n2353, Z => n2348);
   U2252 : GTECH_NOR2 port map( A => n2354, B => n2355, Z => n2101);
   U2253 : GTECH_NOR2 port map( A => n2057, B => n547, Z => n2355);
   U2254 : GTECH_NOR2 port map( A => n2055, B => n665, Z => n2354);
   U2255 : GTECH_NAND2 port map( A => B(6), B => A(25), Z => n2057);
   U2256 : GTECH_NAND2 port map( A => n2356, B => n2357, Z => n2055);
   U2257 : GTECH_NAND2 port map( A => n2358, B => n2359, Z => n2357);
   U2258 : GTECH_NAND2 port map( A => n2360, B => n2361, Z => n2358);
   U2259 : GTECH_NAND2 port map( A => n672, B => n549, Z => n2356);
   U2260 : GTECH_NOR2 port map( A => n2362, B => n2363, Z => n2098);
   U2261 : GTECH_NOR2 port map( A => n2059, B => n431, Z => n2363);
   U2262 : GTECH_NOR2 port map( A => n2058, B => n439, Z => n2362);
   U2263 : GTECH_NAND2 port map( A => B(5), B => A(26), Z => n2059);
   U2264 : GTECH_NAND2 port map( A => n2364, B => n2365, Z => n2058);
   U2265 : GTECH_NAND2 port map( A => n2366, B => n2367, Z => n2365);
   U2266 : GTECH_NAND2 port map( A => n548, B => n2368, Z => n2366);
   U2267 : GTECH_NAND2 port map( A => n440, B => n2369, Z => n2364);
   U2268 : GTECH_NOR2 port map( A => n2370, B => n2371, Z => n2095);
   U2269 : GTECH_NOR2 port map( A => n2063, B => n358, Z => n2371);
   U2270 : GTECH_NOR2 port map( A => n2061, B => n655, Z => n2370);
   U2271 : GTECH_NAND2 port map( A => B(4), B => A(27), Z => n2063);
   U2272 : GTECH_NAND2 port map( A => n2372, B => n2373, Z => n2061);
   U2273 : GTECH_NAND2 port map( A => n2374, B => n2375, Z => n2373);
   U2274 : GTECH_NAND2 port map( A => n2376, B => n2377, Z => n2374);
   U2275 : GTECH_NAND2 port map( A => n660, B => n426, Z => n2372);
   U2276 : GTECH_NOR2 port map( A => n2378, B => n2379, Z => n2092);
   U2277 : GTECH_NOR2 port map( A => n2065, B => n281, Z => n2379);
   U2278 : GTECH_NOR2 port map( A => n2064, B => n651, Z => n2378);
   U2279 : GTECH_NAND2 port map( A => B(3), B => A(28), Z => n2065);
   U2280 : GTECH_NAND2 port map( A => n2380, B => n2381, Z => n2064);
   U2281 : GTECH_NAND2 port map( A => n2382, B => n2383, Z => n2381);
   U2282 : GTECH_NAND2 port map( A => n353, B => n2384, Z => n2382);
   U2283 : GTECH_NAND2 port map( A => n656, B => n2385, Z => n2380);
   U2284 : GTECH_NOR2 port map( A => n2386, B => n2387, Z => n2089);
   U2285 : GTECH_NOR2 port map( A => n2069, B => n205, Z => n2387);
   U2286 : GTECH_NOR2 port map( A => n2067, B => n648, Z => n2386);
   U2287 : GTECH_NAND2 port map( A => B(2), B => A(29), Z => n2069);
   U2288 : GTECH_NAND2 port map( A => n2388, B => n2389, Z => n2067);
   U2289 : GTECH_NAND2 port map( A => n2390, B => n2391, Z => n2389);
   U2290 : GTECH_NAND2 port map( A => n2392, B => n2393, Z => n2390);
   U2291 : GTECH_NAND2 port map( A => n652, B => n276, Z => n2388);
   U2292 : GTECH_NOR2 port map( A => n2394, B => n2395, Z => n2085);
   U2293 : GTECH_NOR2 port map( A => n2071, B => n129, Z => n2395);
   U2294 : GTECH_NOR2 port map( A => n2070, B => n646, Z => n2394);
   U2295 : GTECH_NAND2 port map( A => A(30), B => B(1), Z => n2071);
   U2296 : GTECH_NAND2 port map( A => n2396, B => n2397, Z => n2070);
   U2297 : GTECH_NAND2 port map( A => n2398, B => n2399, Z => n2397);
   U2298 : GTECH_NAND2 port map( A => n200, B => n2400, Z => n2398);
   U2299 : GTECH_NAND2 port map( A => n649, B => n2401, Z => n2396);
   U2300 : GTECH_NOR2 port map( A => n2402, B => n42, Z => n2082);
   U2301 : GTECH_NAND2 port map( A => n1985, B => n1983, Z => n2403);
   U2302 : GTECH_NOR2 port map( A => n1983, B => n1985, Z => n2402);
   U2303 : GTECH_NOR2 port map( A => n645, B => n1918, Z => n1985);
   U2304 : GTECH_NAND2 port map( A => n2404, B => n2405, Z => n1983);
   U2305 : GTECH_NAND2 port map( A => n2406, B => n2407, Z => n2405);
   U2306 : GTECH_NAND2 port map( A => n2408, B => n2409, Z => n2406);
   U2307 : GTECH_NAND2 port map( A => n647, B => n125, Z => n2404);
   U2308 : GTECH_NAND2 port map( A => n2410, B => n2411, Z => PRODUCT(30));
   U2309 : GTECH_NAND2 port map( A => n2408, B => n39, Z => n2411);
   U2310 : GTECH_NAND2 port map( A => n2412, B => n125, Z => n2410);
   U2311 : GTECH_NAND2 port map( A => n2413, B => n2414, Z => n2408);
   U2312 : GTECH_NAND2 port map( A => n2401, B => n126, Z => n2414);
   U2313 : GTECH_NAND2 port map( A => n2415, B => n200, Z => n2413);
   U2314 : GTECH_NAND2 port map( A => n2416, B => n2417, Z => n2401);
   U2315 : GTECH_NAND2 port map( A => n2392, B => n201, Z => n2417);
   U2316 : GTECH_NAND2 port map( A => n2418, B => n276, Z => n2416);
   U2317 : GTECH_NAND2 port map( A => n2419, B => n2420, Z => n2392);
   U2318 : GTECH_NAND2 port map( A => n2385, B => n277, Z => n2420);
   U2319 : GTECH_NAND2 port map( A => n2421, B => n353, Z => n2419);
   U2320 : GTECH_NAND2 port map( A => n2422, B => n2423, Z => n2385);
   U2321 : GTECH_NAND2 port map( A => n2376, B => n354, Z => n2423);
   U2322 : GTECH_NAND2 port map( A => n2424, B => n426, Z => n2422);
   U2323 : GTECH_NAND2 port map( A => n2425, B => n2426, Z => n2376);
   U2324 : GTECH_NAND2 port map( A => n2369, B => n427, Z => n2426);
   U2325 : GTECH_NAND2 port map( A => n2427, B => n548, Z => n2425);
   U2326 : GTECH_NAND2 port map( A => n2428, B => n2429, Z => n2369);
   U2327 : GTECH_NAND2 port map( A => n2360, B => n619, Z => n2429);
   U2328 : GTECH_NAND2 port map( A => n2430, B => n549, Z => n2428);
   U2329 : GTECH_NAND2 port map( A => n2431, B => n2432, Z => n2360);
   U2330 : GTECH_NAND2 port map( A => n2353, B => n617, Z => n2432);
   U2331 : GTECH_NAND2 port map( A => n2433, B => n550, Z => n2431);
   U2332 : GTECH_NAND2 port map( A => n2434, B => n2435, Z => n2353);
   U2333 : GTECH_NAND2 port map( A => n2344, B => n615, Z => n2435);
   U2334 : GTECH_NAND2 port map( A => n2436, B => n551, Z => n2434);
   U2335 : GTECH_NAND2 port map( A => n2437, B => n2438, Z => n2344);
   U2336 : GTECH_NAND2 port map( A => n2337, B => n613, Z => n2438);
   U2337 : GTECH_NAND2 port map( A => n2439, B => n552, Z => n2437);
   U2338 : GTECH_NAND2 port map( A => n2440, B => n2441, Z => n2337);
   U2339 : GTECH_NAND2 port map( A => n2328, B => n611, Z => n2441);
   U2340 : GTECH_NAND2 port map( A => n2442, B => n553, Z => n2440);
   U2341 : GTECH_NAND2 port map( A => n2443, B => n2444, Z => n2328);
   U2342 : GTECH_NAND2 port map( A => n2321, B => n609, Z => n2444);
   U2343 : GTECH_NAND2 port map( A => n2445, B => n554, Z => n2443);
   U2344 : GTECH_NAND2 port map( A => n2446, B => n2447, Z => n2321);
   U2345 : GTECH_NAND2 port map( A => n2312, B => n607, Z => n2447);
   U2346 : GTECH_NAND2 port map( A => n2448, B => n555, Z => n2446);
   U2347 : GTECH_NAND2 port map( A => n2449, B => n2450, Z => n2312);
   U2348 : GTECH_NAND2 port map( A => n2305, B => n605, Z => n2450);
   U2349 : GTECH_NAND2 port map( A => n2451, B => n556, Z => n2449);
   U2350 : GTECH_NAND2 port map( A => n2452, B => n2453, Z => n2305);
   U2351 : GTECH_NAND2 port map( A => n2296, B => n603, Z => n2453);
   U2352 : GTECH_NAND2 port map( A => n2454, B => n557, Z => n2452);
   U2353 : GTECH_NAND2 port map( A => n2455, B => n2456, Z => n2296);
   U2354 : GTECH_NAND2 port map( A => n2289, B => n601, Z => n2456);
   U2355 : GTECH_NAND2 port map( A => n2457, B => n558, Z => n2455);
   U2356 : GTECH_NAND2 port map( A => n2458, B => n2459, Z => n2289);
   U2357 : GTECH_NAND2 port map( A => n2280, B => n599, Z => n2459);
   U2358 : GTECH_NAND2 port map( A => n2460, B => n559, Z => n2458);
   U2359 : GTECH_NAND2 port map( A => n2461, B => n2462, Z => n2280);
   U2360 : GTECH_NAND2 port map( A => n2273, B => n597, Z => n2462);
   U2361 : GTECH_NAND2 port map( A => n2463, B => n560, Z => n2461);
   U2362 : GTECH_NAND2 port map( A => n2464, B => n2465, Z => n2273);
   U2363 : GTECH_NAND2 port map( A => n2264, B => n595, Z => n2465);
   U2364 : GTECH_NAND2 port map( A => n2466, B => n561, Z => n2464);
   U2365 : GTECH_NAND2 port map( A => n2467, B => n2468, Z => n2264);
   U2366 : GTECH_NAND2 port map( A => n2257, B => n593, Z => n2468);
   U2367 : GTECH_NAND2 port map( A => n2469, B => n562, Z => n2467);
   U2368 : GTECH_NAND2 port map( A => n2470, B => n2471, Z => n2257);
   U2369 : GTECH_NAND2 port map( A => n2248, B => n591, Z => n2471);
   U2370 : GTECH_NAND2 port map( A => n2472, B => n563, Z => n2470);
   U2371 : GTECH_NAND2 port map( A => n2473, B => n2474, Z => n2248);
   U2372 : GTECH_NAND2 port map( A => n2241, B => n589, Z => n2474);
   U2373 : GTECH_NAND2 port map( A => n2475, B => n564, Z => n2473);
   U2374 : GTECH_NAND2 port map( A => n2476, B => n2477, Z => n2241);
   U2375 : GTECH_NAND2 port map( A => n2232, B => n587, Z => n2477);
   U2376 : GTECH_NAND2 port map( A => n2478, B => n565, Z => n2476);
   U2377 : GTECH_NAND2 port map( A => n2479, B => n2480, Z => n2232);
   U2378 : GTECH_NAND2 port map( A => n2225, B => n585, Z => n2480);
   U2379 : GTECH_NAND2 port map( A => n2481, B => n566, Z => n2479);
   U2380 : GTECH_NAND2 port map( A => n2482, B => n2483, Z => n2225);
   U2381 : GTECH_NAND2 port map( A => n2216, B => n583, Z => n2483);
   U2382 : GTECH_NAND2 port map( A => n2484, B => n567, Z => n2482);
   U2383 : GTECH_NAND2 port map( A => n2485, B => n2486, Z => n2216);
   U2384 : GTECH_NAND2 port map( A => n2209, B => n581, Z => n2486);
   U2385 : GTECH_NAND2 port map( A => n2487, B => n568, Z => n2485);
   U2386 : GTECH_NAND2 port map( A => n2488, B => n2489, Z => n2209);
   U2387 : GTECH_NAND2 port map( A => n2200, B => n579, Z => n2489);
   U2388 : GTECH_NAND2 port map( A => n2490, B => n569, Z => n2488);
   U2389 : GTECH_NAND2 port map( A => n2491, B => n2492, Z => n2200);
   U2390 : GTECH_NAND2 port map( A => n2193, B => n577, Z => n2492);
   U2391 : GTECH_NAND2 port map( A => n2493, B => n570, Z => n2491);
   U2392 : GTECH_NAND2 port map( A => n2494, B => n2495, Z => n2193);
   U2393 : GTECH_NAND2 port map( A => n2185, B => n574, Z => n2495);
   U2394 : GTECH_NAND2 port map( A => n2496, B => n571, Z => n2494);
   U2395 : GTECH_NAND2 port map( A => n572, B => n2497, Z => n2185);
   U2396 : GTECH_NAND2 port map( A => n2178, B => n2498, Z => n2497);
   U2397 : GTECH_NOR2 port map( A => n2498, B => n2178, Z => n2499);
   U2398 : GTECH_NOR2 port map( A => n576, B => n1714, Z => n2178);
   U2399 : GTECH_NAND2 port map( A => B(30), B => A(0), Z => n2498);
   U2400 : GTECH_NAND2 port map( A => n2500, B => n2501, Z => n2496);
   U2401 : GTECH_NAND2 port map( A => n575, B => n1707, Z => n2501);
   U2402 : GTECH_NAND2 port map( A => n2184, B => n2502, Z => n2500);
   U2403 : GTECH_NAND2 port map( A => n2503, B => n2504, Z => n2502);
   U2404 : GTECH_NOR2 port map( A => n1649, B => n576, Z => n2503);
   U2405 : GTECH_NOR2 port map( A => n1708, B => n1748, Z => n2184);
   U2406 : GTECH_NAND2 port map( A => n2505, B => n2506, Z => n2493);
   U2407 : GTECH_NAND2 port map( A => n1758, B => n2191, Z => n2506);
   U2408 : GTECH_NAND2 port map( A => n578, B => n2192, Z => n2505);
   U2409 : GTECH_NAND2 port map( A => B(27), B => A(3), Z => n2192);
   U2410 : GTECH_NAND2 port map( A => n2507, B => n2508, Z => n2191);
   U2411 : GTECH_NAND2 port map( A => n1428, B => n2509, Z => n2508);
   U2412 : GTECH_NAND2 port map( A => n643, B => n1724, Z => n2509);
   U2413 : GTECH_NAND2 port map( A => n2510, B => n2511, Z => n2507);
   U2414 : GTECH_NAND2 port map( A => n2512, B => n2513, Z => n2490);
   U2415 : GTECH_NAND2 port map( A => n1712, B => n2199, Z => n2513);
   U2416 : GTECH_NAND2 port map( A => n580, B => n2201, Z => n2512);
   U2417 : GTECH_NAND2 port map( A => B(26), B => A(4), Z => n2201);
   U2418 : GTECH_NAND2 port map( A => n2514, B => n2515, Z => n2199);
   U2419 : GTECH_NAND2 port map( A => n2516, B => n2517, Z => n2515);
   U2420 : GTECH_NAND2 port map( A => n642, B => n2518, Z => n2516);
   U2421 : GTECH_NAND2 port map( A => n1713, B => n2519, Z => n2514);
   U2422 : GTECH_NAND2 port map( A => n2520, B => n2521, Z => n2487);
   U2423 : GTECH_NAND2 port map( A => n1294, B => n2207, Z => n2521);
   U2424 : GTECH_NAND2 port map( A => n582, B => n2208, Z => n2520);
   U2425 : GTECH_NAND2 port map( A => B(25), B => A(5), Z => n2208);
   U2426 : GTECH_NAND2 port map( A => n2522, B => n2523, Z => n2207);
   U2427 : GTECH_NAND2 port map( A => n2524, B => n2525, Z => n2523);
   U2428 : GTECH_NAND2 port map( A => n2526, B => n2527, Z => n2524);
   U2429 : GTECH_NAND2 port map( A => n1790, B => n641, Z => n2522);
   U2430 : GTECH_NAND2 port map( A => n2528, B => n2529, Z => n2484);
   U2431 : GTECH_NAND2 port map( A => n1819, B => n2215, Z => n2529);
   U2432 : GTECH_NAND2 port map( A => n584, B => n2217, Z => n2528);
   U2433 : GTECH_NAND2 port map( A => B(24), B => A(6), Z => n2217);
   U2434 : GTECH_NAND2 port map( A => n2530, B => n2531, Z => n2215);
   U2435 : GTECH_NAND2 port map( A => n2532, B => n2533, Z => n2531);
   U2436 : GTECH_NAND2 port map( A => n640, B => n2534, Z => n2532);
   U2437 : GTECH_NAND2 port map( A => n1296, B => n2535, Z => n2530);
   U2438 : GTECH_NAND2 port map( A => n2536, B => n2537, Z => n2481);
   U2439 : GTECH_NAND2 port map( A => n1176, B => n2223, Z => n2537);
   U2440 : GTECH_NAND2 port map( A => n586, B => n2224, Z => n2536);
   U2441 : GTECH_NAND2 port map( A => B(23), B => A(7), Z => n2224);
   U2442 : GTECH_NAND2 port map( A => n2538, B => n2539, Z => n2223);
   U2443 : GTECH_NAND2 port map( A => n2540, B => n2541, Z => n2539);
   U2444 : GTECH_NAND2 port map( A => n2542, B => n2543, Z => n2540);
   U2445 : GTECH_NAND2 port map( A => n1820, B => n639, Z => n2538);
   U2446 : GTECH_NAND2 port map( A => n2544, B => n2545, Z => n2478);
   U2447 : GTECH_NAND2 port map( A => n1845, B => n2231, Z => n2545);
   U2448 : GTECH_NAND2 port map( A => n588, B => n2233, Z => n2544);
   U2449 : GTECH_NAND2 port map( A => B(22), B => A(8), Z => n2233);
   U2450 : GTECH_NAND2 port map( A => n2546, B => n2547, Z => n2231);
   U2451 : GTECH_NAND2 port map( A => n2548, B => n2549, Z => n2547);
   U2452 : GTECH_NAND2 port map( A => n638, B => n2550, Z => n2548);
   U2453 : GTECH_NAND2 port map( A => n1178, B => n2551, Z => n2546);
   U2454 : GTECH_NAND2 port map( A => n2552, B => n2553, Z => n2475);
   U2455 : GTECH_NAND2 port map( A => n1072, B => n2239, Z => n2553);
   U2456 : GTECH_NAND2 port map( A => n590, B => n2240, Z => n2552);
   U2457 : GTECH_NAND2 port map( A => B(21), B => A(9), Z => n2240);
   U2458 : GTECH_NAND2 port map( A => n2554, B => n2555, Z => n2239);
   U2459 : GTECH_NAND2 port map( A => n2556, B => n2557, Z => n2555);
   U2460 : GTECH_NAND2 port map( A => n2558, B => n2559, Z => n2556);
   U2461 : GTECH_NAND2 port map( A => n1846, B => n637, Z => n2554);
   U2462 : GTECH_NAND2 port map( A => n2560, B => n2561, Z => n2472);
   U2463 : GTECH_NAND2 port map( A => n1867, B => n2247, Z => n2561);
   U2464 : GTECH_NAND2 port map( A => n592, B => n2249, Z => n2560);
   U2465 : GTECH_NAND2 port map( A => B(20), B => A(10), Z => n2249);
   U2466 : GTECH_NAND2 port map( A => n2562, B => n2563, Z => n2247);
   U2467 : GTECH_NAND2 port map( A => n2564, B => n2565, Z => n2563);
   U2468 : GTECH_NAND2 port map( A => n636, B => n2566, Z => n2564);
   U2469 : GTECH_NAND2 port map( A => n1074, B => n2567, Z => n2562);
   U2470 : GTECH_NAND2 port map( A => n2568, B => n2569, Z => n2469);
   U2471 : GTECH_NAND2 port map( A => n1016, B => n2255, Z => n2569);
   U2472 : GTECH_NAND2 port map( A => n594, B => n2256, Z => n2568);
   U2473 : GTECH_NAND2 port map( A => B(19), B => A(11), Z => n2256);
   U2474 : GTECH_NAND2 port map( A => n2570, B => n2571, Z => n2255);
   U2475 : GTECH_NAND2 port map( A => n2572, B => n2573, Z => n2571);
   U2476 : GTECH_NAND2 port map( A => n2574, B => n2575, Z => n2572);
   U2477 : GTECH_NAND2 port map( A => n1868, B => n635, Z => n2570);
   U2478 : GTECH_NAND2 port map( A => n2576, B => n2577, Z => n2466);
   U2479 : GTECH_NAND2 port map( A => n933, B => n2263, Z => n2577);
   U2480 : GTECH_NAND2 port map( A => n596, B => n2265, Z => n2576);
   U2481 : GTECH_NAND2 port map( A => B(18), B => A(12), Z => n2265);
   U2482 : GTECH_NAND2 port map( A => n2578, B => n2579, Z => n2263);
   U2483 : GTECH_NAND2 port map( A => n2580, B => n2581, Z => n2579);
   U2484 : GTECH_NAND2 port map( A => n634, B => n2582, Z => n2580);
   U2485 : GTECH_NAND2 port map( A => n1018, B => n2583, Z => n2578);
   U2486 : GTECH_NAND2 port map( A => n2584, B => n2585, Z => n2463);
   U2487 : GTECH_NAND2 port map( A => n1896, B => n2271, Z => n2585);
   U2488 : GTECH_NAND2 port map( A => n598, B => n2272, Z => n2584);
   U2489 : GTECH_NAND2 port map( A => B(17), B => A(13), Z => n2272);
   U2490 : GTECH_NAND2 port map( A => n2586, B => n2587, Z => n2271);
   U2491 : GTECH_NAND2 port map( A => n2588, B => n2589, Z => n2587);
   U2492 : GTECH_NAND2 port map( A => n2590, B => n2591, Z => n2588);
   U2493 : GTECH_NAND2 port map( A => n935, B => n633, Z => n2586);
   U2494 : GTECH_NAND2 port map( A => n2592, B => n2593, Z => n2460);
   U2495 : GTECH_NAND2 port map( A => n863, B => n2279, Z => n2593);
   U2496 : GTECH_NAND2 port map( A => n600, B => n2281, Z => n2592);
   U2497 : GTECH_NAND2 port map( A => B(16), B => A(14), Z => n2281);
   U2498 : GTECH_NAND2 port map( A => n2594, B => n2595, Z => n2279);
   U2499 : GTECH_NAND2 port map( A => n2596, B => n2597, Z => n2595);
   U2500 : GTECH_NAND2 port map( A => n632, B => n2598, Z => n2596);
   U2501 : GTECH_NAND2 port map( A => n1897, B => n2599, Z => n2594);
   U2502 : GTECH_NAND2 port map( A => n2600, B => n2601, Z => n2457);
   U2503 : GTECH_NAND2 port map( A => n1885, B => n2287, Z => n2601);
   U2504 : GTECH_NAND2 port map( A => n602, B => n2288, Z => n2600);
   U2505 : GTECH_NAND2 port map( A => B(15), B => A(15), Z => n2288);
   U2506 : GTECH_NAND2 port map( A => n2602, B => n2603, Z => n2287);
   U2507 : GTECH_NAND2 port map( A => n2604, B => n2605, Z => n2603);
   U2508 : GTECH_NAND2 port map( A => n2606, B => n2607, Z => n2604);
   U2509 : GTECH_NAND2 port map( A => n865, B => n631, Z => n2602);
   U2510 : GTECH_NAND2 port map( A => n2608, B => n2609, Z => n2454);
   U2511 : GTECH_NAND2 port map( A => n826, B => n2295, Z => n2609);
   U2512 : GTECH_NAND2 port map( A => n604, B => n2297, Z => n2608);
   U2513 : GTECH_NAND2 port map( A => B(14), B => A(16), Z => n2297);
   U2514 : GTECH_NAND2 port map( A => n2610, B => n2611, Z => n2295);
   U2515 : GTECH_NAND2 port map( A => n2612, B => n2613, Z => n2611);
   U2516 : GTECH_NAND2 port map( A => n630, B => n2614, Z => n2612);
   U2517 : GTECH_NAND2 port map( A => n1886, B => n2615, Z => n2610);
   U2518 : GTECH_NAND2 port map( A => n2616, B => n2617, Z => n2451);
   U2519 : GTECH_NAND2 port map( A => n793, B => n2303, Z => n2617);
   U2520 : GTECH_NAND2 port map( A => n606, B => n2304, Z => n2616);
   U2521 : GTECH_NAND2 port map( A => B(13), B => A(17), Z => n2304);
   U2522 : GTECH_NAND2 port map( A => n2618, B => n2619, Z => n2303);
   U2523 : GTECH_NAND2 port map( A => n2620, B => n2621, Z => n2619);
   U2524 : GTECH_NAND2 port map( A => n2622, B => n2623, Z => n2620);
   U2525 : GTECH_NAND2 port map( A => n828, B => n629, Z => n2618);
   U2526 : GTECH_NAND2 port map( A => n2624, B => n2625, Z => n2448);
   U2527 : GTECH_NAND2 port map( A => n764, B => n2311, Z => n2625);
   U2528 : GTECH_NAND2 port map( A => n608, B => n2313, Z => n2624);
   U2529 : GTECH_NAND2 port map( A => B(12), B => A(18), Z => n2313);
   U2530 : GTECH_NAND2 port map( A => n2626, B => n2627, Z => n2311);
   U2531 : GTECH_NAND2 port map( A => n2628, B => n2629, Z => n2627);
   U2532 : GTECH_NAND2 port map( A => n628, B => n2630, Z => n2628);
   U2533 : GTECH_NAND2 port map( A => n795, B => n2631, Z => n2626);
   U2534 : GTECH_NAND2 port map( A => n2632, B => n2633, Z => n2445);
   U2535 : GTECH_NAND2 port map( A => n739, B => n2319, Z => n2633);
   U2536 : GTECH_NAND2 port map( A => n610, B => n2320, Z => n2632);
   U2537 : GTECH_NAND2 port map( A => B(11), B => A(19), Z => n2320);
   U2538 : GTECH_NAND2 port map( A => n2634, B => n2635, Z => n2319);
   U2539 : GTECH_NAND2 port map( A => n2636, B => n2637, Z => n2635);
   U2540 : GTECH_NAND2 port map( A => n2638, B => n2639, Z => n2636);
   U2541 : GTECH_NAND2 port map( A => n766, B => n627, Z => n2634);
   U2542 : GTECH_NAND2 port map( A => n2640, B => n2641, Z => n2442);
   U2543 : GTECH_NAND2 port map( A => n718, B => n2327, Z => n2641);
   U2544 : GTECH_NAND2 port map( A => n612, B => n2329, Z => n2640);
   U2545 : GTECH_NAND2 port map( A => B(10), B => A(20), Z => n2329);
   U2546 : GTECH_NAND2 port map( A => n2642, B => n2643, Z => n2327);
   U2547 : GTECH_NAND2 port map( A => n2644, B => n2645, Z => n2643);
   U2548 : GTECH_NAND2 port map( A => n626, B => n2646, Z => n2644);
   U2549 : GTECH_NAND2 port map( A => n741, B => n2647, Z => n2642);
   U2550 : GTECH_NAND2 port map( A => n2648, B => n2649, Z => n2439);
   U2551 : GTECH_NAND2 port map( A => n701, B => n2335, Z => n2649);
   U2552 : GTECH_NAND2 port map( A => n614, B => n2336, Z => n2648);
   U2553 : GTECH_NAND2 port map( A => B(9), B => A(21), Z => n2336);
   U2554 : GTECH_NAND2 port map( A => n2650, B => n2651, Z => n2335);
   U2555 : GTECH_NAND2 port map( A => n2652, B => n2653, Z => n2651);
   U2556 : GTECH_NAND2 port map( A => n2654, B => n2655, Z => n2652);
   U2557 : GTECH_NAND2 port map( A => n720, B => n625, Z => n2650);
   U2558 : GTECH_NAND2 port map( A => n2656, B => n2657, Z => n2436);
   U2559 : GTECH_NAND2 port map( A => n688, B => n2343, Z => n2657);
   U2560 : GTECH_NAND2 port map( A => n616, B => n2345, Z => n2656);
   U2561 : GTECH_NAND2 port map( A => B(8), B => A(22), Z => n2345);
   U2562 : GTECH_NAND2 port map( A => n2658, B => n2659, Z => n2343);
   U2563 : GTECH_NAND2 port map( A => n2660, B => n2661, Z => n2659);
   U2564 : GTECH_NAND2 port map( A => n624, B => n2662, Z => n2660);
   U2565 : GTECH_NAND2 port map( A => n703, B => n2663, Z => n2658);
   U2566 : GTECH_NAND2 port map( A => n2664, B => n2665, Z => n2433);
   U2567 : GTECH_NAND2 port map( A => n679, B => n2351, Z => n2665);
   U2568 : GTECH_NAND2 port map( A => n618, B => n2352, Z => n2664);
   U2569 : GTECH_NAND2 port map( A => B(7), B => A(23), Z => n2352);
   U2570 : GTECH_NAND2 port map( A => n2666, B => n2667, Z => n2351);
   U2571 : GTECH_NAND2 port map( A => n2668, B => n2669, Z => n2667);
   U2572 : GTECH_NAND2 port map( A => n2670, B => n2671, Z => n2668);
   U2573 : GTECH_NAND2 port map( A => n690, B => n623, Z => n2666);
   U2574 : GTECH_NAND2 port map( A => n2672, B => n2673, Z => n2430);
   U2575 : GTECH_NAND2 port map( A => n672, B => n2359, Z => n2673);
   U2576 : GTECH_NAND2 port map( A => n620, B => n2361, Z => n2672);
   U2577 : GTECH_NAND2 port map( A => B(6), B => A(24), Z => n2361);
   U2578 : GTECH_NAND2 port map( A => n2674, B => n2675, Z => n2359);
   U2579 : GTECH_NAND2 port map( A => n2676, B => n2677, Z => n2675);
   U2580 : GTECH_NAND2 port map( A => n622, B => n2678, Z => n2676);
   U2581 : GTECH_NAND2 port map( A => n681, B => n2679, Z => n2674);
   U2582 : GTECH_NAND2 port map( A => n2680, B => n2681, Z => n2427);
   U2583 : GTECH_NAND2 port map( A => n440, B => n2367, Z => n2681);
   U2584 : GTECH_NAND2 port map( A => n428, B => n2368, Z => n2680);
   U2585 : GTECH_NAND2 port map( A => B(5), B => A(25), Z => n2368);
   U2586 : GTECH_NAND2 port map( A => n2682, B => n2683, Z => n2367);
   U2587 : GTECH_NAND2 port map( A => n2684, B => n2685, Z => n2683);
   U2588 : GTECH_NAND2 port map( A => n2686, B => n2687, Z => n2684);
   U2589 : GTECH_NAND2 port map( A => n441, B => n621, Z => n2682);
   U2590 : GTECH_NAND2 port map( A => n2688, B => n2689, Z => n2424);
   U2591 : GTECH_NAND2 port map( A => n660, B => n2375, Z => n2689);
   U2592 : GTECH_NAND2 port map( A => n355, B => n2377, Z => n2688);
   U2593 : GTECH_NAND2 port map( A => B(4), B => A(26), Z => n2377);
   U2594 : GTECH_NAND2 port map( A => n2690, B => n2691, Z => n2375);
   U2595 : GTECH_NAND2 port map( A => n2692, B => n2693, Z => n2691);
   U2596 : GTECH_NAND2 port map( A => n423, B => n2694, Z => n2692);
   U2597 : GTECH_NAND2 port map( A => n666, B => n2695, Z => n2690);
   U2598 : GTECH_NAND2 port map( A => n2696, B => n2697, Z => n2421);
   U2599 : GTECH_NAND2 port map( A => n656, B => n2383, Z => n2697);
   U2600 : GTECH_NAND2 port map( A => n278, B => n2384, Z => n2696);
   U2601 : GTECH_NAND2 port map( A => B(3), B => A(27), Z => n2384);
   U2602 : GTECH_NAND2 port map( A => n2698, B => n2699, Z => n2383);
   U2603 : GTECH_NAND2 port map( A => n2700, B => n2701, Z => n2699);
   U2604 : GTECH_NAND2 port map( A => n2702, B => n2703, Z => n2700);
   U2605 : GTECH_NAND2 port map( A => n661, B => n350, Z => n2698);
   U2606 : GTECH_NAND2 port map( A => n2704, B => n2705, Z => n2418);
   U2607 : GTECH_NAND2 port map( A => n652, B => n2391, Z => n2705);
   U2608 : GTECH_NAND2 port map( A => n202, B => n2393, Z => n2704);
   U2609 : GTECH_NAND2 port map( A => B(2), B => A(28), Z => n2393);
   U2610 : GTECH_NAND2 port map( A => n2706, B => n2707, Z => n2391);
   U2611 : GTECH_NAND2 port map( A => n2708, B => n2709, Z => n2707);
   U2612 : GTECH_NAND2 port map( A => n273, B => n2710, Z => n2708);
   U2613 : GTECH_NAND2 port map( A => n657, B => n2711, Z => n2706);
   U2614 : GTECH_NAND2 port map( A => n2712, B => n2713, Z => n2415);
   U2615 : GTECH_NAND2 port map( A => n649, B => n2399, Z => n2713);
   U2616 : GTECH_NAND2 port map( A => n127, B => n2400, Z => n2712);
   U2617 : GTECH_NAND2 port map( A => A(29), B => B(1), Z => n2400);
   U2618 : GTECH_NAND2 port map( A => n2714, B => n2715, Z => n2399);
   U2619 : GTECH_NAND2 port map( A => n2716, B => n2717, Z => n2715);
   U2620 : GTECH_NAND2 port map( A => n2718, B => n2719, Z => n2716);
   U2621 : GTECH_NAND2 port map( A => n653, B => n197, Z => n2714);
   U2622 : GTECH_NAND2 port map( A => n2720, B => n2721, Z => n2412);
   U2623 : GTECH_NAND2 port map( A => n647, B => n2407, Z => n2721);
   U2624 : GTECH_NAND2 port map( A => n40, B => n2409, Z => n2720);
   U2625 : GTECH_NAND2 port map( A => A(30), B => B(0), Z => n2409);
   U2626 : GTECH_NAND2 port map( A => n2722, B => n2723, Z => n2407);
   U2627 : GTECH_NAND2 port map( A => n2724, B => n2725, Z => n2723);
   U2628 : GTECH_NAND2 port map( A => n122, B => n2726, Z => n2724);
   U2629 : GTECH_NAND2 port map( A => n650, B => n2727, Z => n2722);
   U2630 : GTECH_NOR2 port map( A => n2728, B => n2729, Z => PRODUCT(29));
   U2631 : GTECH_NOR2 port map( A => n2727, B => n37, Z => n2729);
   U2632 : GTECH_NOR2 port map( A => n2730, B => n122, Z => n2728);
   U2633 : GTECH_NAND2 port map( A => n2731, B => n2732, Z => n2727);
   U2634 : GTECH_NAND2 port map( A => n2718, B => n123, Z => n2732);
   U2635 : GTECH_NAND2 port map( A => n2733, B => n197, Z => n2731);
   U2636 : GTECH_NAND2 port map( A => n2734, B => n2735, Z => n2718);
   U2637 : GTECH_NAND2 port map( A => n2711, B => n198, Z => n2735);
   U2638 : GTECH_NAND2 port map( A => n2736, B => n273, Z => n2734);
   U2639 : GTECH_NAND2 port map( A => n2737, B => n2738, Z => n2711);
   U2640 : GTECH_NAND2 port map( A => n2702, B => n274, Z => n2738);
   U2641 : GTECH_NAND2 port map( A => n2739, B => n350, Z => n2737);
   U2642 : GTECH_NAND2 port map( A => n2740, B => n2741, Z => n2702);
   U2643 : GTECH_NAND2 port map( A => n2695, B => n351, Z => n2741);
   U2644 : GTECH_NAND2 port map( A => n2742, B => n423, Z => n2740);
   U2645 : GTECH_NAND2 port map( A => n2743, B => n2744, Z => n2695);
   U2646 : GTECH_NAND2 port map( A => n2686, B => n424, Z => n2744);
   U2647 : GTECH_NAND2 port map( A => n2745, B => n621, Z => n2743);
   U2648 : GTECH_NAND2 port map( A => n2746, B => n2747, Z => n2686);
   U2649 : GTECH_NAND2 port map( A => n2679, B => n680, Z => n2747);
   U2650 : GTECH_NAND2 port map( A => n2748, B => n622, Z => n2746);
   U2651 : GTECH_NAND2 port map( A => n2749, B => n2750, Z => n2679);
   U2652 : GTECH_NAND2 port map( A => n2670, B => n689, Z => n2750);
   U2653 : GTECH_NAND2 port map( A => n2751, B => n623, Z => n2749);
   U2654 : GTECH_NAND2 port map( A => n2752, B => n2753, Z => n2670);
   U2655 : GTECH_NAND2 port map( A => n2663, B => n702, Z => n2753);
   U2656 : GTECH_NAND2 port map( A => n2754, B => n624, Z => n2752);
   U2657 : GTECH_NAND2 port map( A => n2755, B => n2756, Z => n2663);
   U2658 : GTECH_NAND2 port map( A => n2654, B => n719, Z => n2756);
   U2659 : GTECH_NAND2 port map( A => n2757, B => n625, Z => n2755);
   U2660 : GTECH_NAND2 port map( A => n2758, B => n2759, Z => n2654);
   U2661 : GTECH_NAND2 port map( A => n2647, B => n740, Z => n2759);
   U2662 : GTECH_NAND2 port map( A => n2760, B => n626, Z => n2758);
   U2663 : GTECH_NAND2 port map( A => n2761, B => n2762, Z => n2647);
   U2664 : GTECH_NAND2 port map( A => n2638, B => n765, Z => n2762);
   U2665 : GTECH_NAND2 port map( A => n2763, B => n627, Z => n2761);
   U2666 : GTECH_NAND2 port map( A => n2764, B => n2765, Z => n2638);
   U2667 : GTECH_NAND2 port map( A => n2631, B => n794, Z => n2765);
   U2668 : GTECH_NAND2 port map( A => n2766, B => n628, Z => n2764);
   U2669 : GTECH_NAND2 port map( A => n2767, B => n2768, Z => n2631);
   U2670 : GTECH_NAND2 port map( A => n2622, B => n827, Z => n2768);
   U2671 : GTECH_NAND2 port map( A => n2769, B => n629, Z => n2767);
   U2672 : GTECH_NAND2 port map( A => n2770, B => n2771, Z => n2622);
   U2673 : GTECH_NAND2 port map( A => n2615, B => n866, Z => n2771);
   U2674 : GTECH_NAND2 port map( A => n2772, B => n630, Z => n2770);
   U2675 : GTECH_NAND2 port map( A => n2773, B => n2774, Z => n2615);
   U2676 : GTECH_NAND2 port map( A => n2606, B => n864, Z => n2774);
   U2677 : GTECH_NAND2 port map( A => n2775, B => n631, Z => n2773);
   U2678 : GTECH_NAND2 port map( A => n2776, B => n2777, Z => n2606);
   U2679 : GTECH_NAND2 port map( A => n2599, B => n936, Z => n2777);
   U2680 : GTECH_NAND2 port map( A => n2778, B => n632, Z => n2776);
   U2681 : GTECH_NAND2 port map( A => n2779, B => n2780, Z => n2599);
   U2682 : GTECH_NAND2 port map( A => n2590, B => n934, Z => n2780);
   U2683 : GTECH_NAND2 port map( A => n2781, B => n633, Z => n2779);
   U2684 : GTECH_NAND2 port map( A => n2782, B => n2783, Z => n2590);
   U2685 : GTECH_NAND2 port map( A => n2583, B => n1017, Z => n2783);
   U2686 : GTECH_NAND2 port map( A => n2784, B => n634, Z => n2782);
   U2687 : GTECH_NAND2 port map( A => n2785, B => n2786, Z => n2583);
   U2688 : GTECH_NAND2 port map( A => n2574, B => n1075, Z => n2786);
   U2689 : GTECH_NAND2 port map( A => n2787, B => n635, Z => n2785);
   U2690 : GTECH_NAND2 port map( A => n2788, B => n2789, Z => n2574);
   U2691 : GTECH_NAND2 port map( A => n2567, B => n1073, Z => n2789);
   U2692 : GTECH_NAND2 port map( A => n2790, B => n636, Z => n2788);
   U2693 : GTECH_NAND2 port map( A => n2791, B => n2792, Z => n2567);
   U2694 : GTECH_NAND2 port map( A => n2558, B => n1179, Z => n2792);
   U2695 : GTECH_NAND2 port map( A => n2793, B => n637, Z => n2791);
   U2696 : GTECH_NAND2 port map( A => n2794, B => n2795, Z => n2558);
   U2697 : GTECH_NAND2 port map( A => n2551, B => n1177, Z => n2795);
   U2698 : GTECH_NAND2 port map( A => n2796, B => n638, Z => n2794);
   U2699 : GTECH_NAND2 port map( A => n2797, B => n2798, Z => n2551);
   U2700 : GTECH_NAND2 port map( A => n2542, B => n1297, Z => n2798);
   U2701 : GTECH_NAND2 port map( A => n2799, B => n639, Z => n2797);
   U2702 : GTECH_NAND2 port map( A => n2800, B => n2801, Z => n2542);
   U2703 : GTECH_NAND2 port map( A => n2535, B => n1295, Z => n2801);
   U2704 : GTECH_NAND2 port map( A => n2802, B => n640, Z => n2800);
   U2705 : GTECH_NAND2 port map( A => n2803, B => n2804, Z => n2535);
   U2706 : GTECH_NAND2 port map( A => n2526, B => n1431, Z => n2804);
   U2707 : GTECH_NAND2 port map( A => n2805, B => n641, Z => n2803);
   U2708 : GTECH_NAND2 port map( A => n2806, B => n2807, Z => n2526);
   U2709 : GTECH_NAND2 port map( A => n2519, B => n1429, Z => n2807);
   U2710 : GTECH_NAND2 port map( A => n2808, B => n642, Z => n2806);
   U2711 : GTECH_NAND2 port map( A => n2809, B => n2810, Z => n2519);
   U2712 : GTECH_NAND2 port map( A => n2511, B => n1427, Z => n2810);
   U2713 : GTECH_NAND2 port map( A => n2811, B => n643, Z => n2809);
   U2714 : GTECH_NAND2 port map( A => n644, B => n2812, Z => n2511);
   U2715 : GTECH_NAND2 port map( A => n2504, B => n2813, Z => n2812);
   U2716 : GTECH_NOR2 port map( A => n2813, B => n2504, Z => n2814);
   U2717 : GTECH_NOR2 port map( A => n1708, B => n1714, Z => n2504);
   U2718 : GTECH_NAND2 port map( A => B(29), B => A(0), Z => n2813);
   U2719 : GTECH_NAND2 port map( A => n2815, B => n2816, Z => n2811);
   U2720 : GTECH_NAND2 port map( A => n1428, B => n1724, Z => n2816);
   U2721 : GTECH_NAND2 port map( A => n2510, B => n2817, Z => n2815);
   U2722 : GTECH_NAND2 port map( A => n2818, B => n2819, Z => n2817);
   U2723 : GTECH_NOR2 port map( A => n1649, B => n1708, Z => n2818);
   U2724 : GTECH_NOR2 port map( A => n1922, B => n1748, Z => n2510);
   U2725 : GTECH_NAND2 port map( A => n2820, B => n2821, Z => n2808);
   U2726 : GTECH_NAND2 port map( A => n1713, B => n2517, Z => n2821);
   U2727 : GTECH_NAND2 port map( A => n1430, B => n2518, Z => n2820);
   U2728 : GTECH_NAND2 port map( A => B(26), B => A(3), Z => n2518);
   U2729 : GTECH_NAND2 port map( A => n2822, B => n2823, Z => n2517);
   U2730 : GTECH_NAND2 port map( A => n1438, B => n2824, Z => n2823);
   U2731 : GTECH_NAND2 port map( A => n1651, B => n1710, Z => n2824);
   U2732 : GTECH_NAND2 port map( A => n2825, B => n2826, Z => n2822);
   U2733 : GTECH_NAND2 port map( A => n2827, B => n2828, Z => n2805);
   U2734 : GTECH_NAND2 port map( A => n1790, B => n2525, Z => n2828);
   U2735 : GTECH_NAND2 port map( A => n1432, B => n2527, Z => n2827);
   U2736 : GTECH_NAND2 port map( A => B(25), B => A(4), Z => n2527);
   U2737 : GTECH_NAND2 port map( A => n2829, B => n2830, Z => n2525);
   U2738 : GTECH_NAND2 port map( A => n2831, B => n2832, Z => n2830);
   U2739 : GTECH_NAND2 port map( A => n1436, B => n2833, Z => n2831);
   U2740 : GTECH_NAND2 port map( A => n1759, B => n2834, Z => n2829);
   U2741 : GTECH_NAND2 port map( A => n2835, B => n2836, Z => n2802);
   U2742 : GTECH_NAND2 port map( A => n1296, B => n2533, Z => n2836);
   U2743 : GTECH_NAND2 port map( A => n1433, B => n2534, Z => n2835);
   U2744 : GTECH_NAND2 port map( A => B(24), B => A(5), Z => n2534);
   U2745 : GTECH_NAND2 port map( A => n2837, B => n2838, Z => n2533);
   U2746 : GTECH_NAND2 port map( A => n2839, B => n2840, Z => n2838);
   U2747 : GTECH_NAND2 port map( A => n2841, B => n2842, Z => n2839);
   U2748 : GTECH_NAND2 port map( A => n1791, B => n1435, Z => n2837);
   U2749 : GTECH_NAND2 port map( A => n2843, B => n2844, Z => n2799);
   U2750 : GTECH_NAND2 port map( A => n1820, B => n2541, Z => n2844);
   U2751 : GTECH_NAND2 port map( A => n1298, B => n2543, Z => n2843);
   U2752 : GTECH_NAND2 port map( A => B(23), B => A(6), Z => n2543);
   U2753 : GTECH_NAND2 port map( A => n2845, B => n2846, Z => n2541);
   U2754 : GTECH_NAND2 port map( A => n2847, B => n2848, Z => n2846);
   U2755 : GTECH_NAND2 port map( A => n1434, B => n2849, Z => n2847);
   U2756 : GTECH_NAND2 port map( A => n1303, B => n2850, Z => n2845);
   U2757 : GTECH_NAND2 port map( A => n2851, B => n2852, Z => n2796);
   U2758 : GTECH_NAND2 port map( A => n1178, B => n2549, Z => n2852);
   U2759 : GTECH_NAND2 port map( A => n1299, B => n2550, Z => n2851);
   U2760 : GTECH_NAND2 port map( A => B(22), B => A(7), Z => n2550);
   U2761 : GTECH_NAND2 port map( A => n2853, B => n2854, Z => n2549);
   U2762 : GTECH_NAND2 port map( A => n2855, B => n2856, Z => n2854);
   U2763 : GTECH_NAND2 port map( A => n2857, B => n2858, Z => n2855);
   U2764 : GTECH_NAND2 port map( A => n1821, B => n1301, Z => n2853);
   U2765 : GTECH_NAND2 port map( A => n2859, B => n2860, Z => n2793);
   U2766 : GTECH_NAND2 port map( A => n1846, B => n2557, Z => n2860);
   U2767 : GTECH_NAND2 port map( A => n1180, B => n2559, Z => n2859);
   U2768 : GTECH_NAND2 port map( A => B(21), B => A(8), Z => n2559);
   U2769 : GTECH_NAND2 port map( A => n2861, B => n2862, Z => n2557);
   U2770 : GTECH_NAND2 port map( A => n2863, B => n2864, Z => n2862);
   U2771 : GTECH_NAND2 port map( A => n1300, B => n2865, Z => n2863);
   U2772 : GTECH_NAND2 port map( A => n1185, B => n2866, Z => n2861);
   U2773 : GTECH_NAND2 port map( A => n2867, B => n2868, Z => n2790);
   U2774 : GTECH_NAND2 port map( A => n1074, B => n2565, Z => n2868);
   U2775 : GTECH_NAND2 port map( A => n1181, B => n2566, Z => n2867);
   U2776 : GTECH_NAND2 port map( A => B(20), B => A(9), Z => n2566);
   U2777 : GTECH_NAND2 port map( A => n2869, B => n2870, Z => n2565);
   U2778 : GTECH_NAND2 port map( A => n2871, B => n2872, Z => n2870);
   U2779 : GTECH_NAND2 port map( A => n2873, B => n2874, Z => n2871);
   U2780 : GTECH_NAND2 port map( A => n1847, B => n1183, Z => n2869);
   U2781 : GTECH_NAND2 port map( A => n2875, B => n2876, Z => n2787);
   U2782 : GTECH_NAND2 port map( A => n1868, B => n2573, Z => n2876);
   U2783 : GTECH_NAND2 port map( A => n1076, B => n2575, Z => n2875);
   U2784 : GTECH_NAND2 port map( A => B(19), B => A(10), Z => n2575);
   U2785 : GTECH_NAND2 port map( A => n2877, B => n2878, Z => n2573);
   U2786 : GTECH_NAND2 port map( A => n2879, B => n2880, Z => n2878);
   U2787 : GTECH_NAND2 port map( A => n1182, B => n2881, Z => n2879);
   U2788 : GTECH_NAND2 port map( A => n1081, B => n2882, Z => n2877);
   U2789 : GTECH_NAND2 port map( A => n2883, B => n2884, Z => n2784);
   U2790 : GTECH_NAND2 port map( A => n1018, B => n2581, Z => n2884);
   U2791 : GTECH_NAND2 port map( A => n1077, B => n2582, Z => n2883);
   U2792 : GTECH_NAND2 port map( A => B(18), B => A(11), Z => n2582);
   U2793 : GTECH_NAND2 port map( A => n2885, B => n2886, Z => n2581);
   U2794 : GTECH_NAND2 port map( A => n2887, B => n2888, Z => n2886);
   U2795 : GTECH_NAND2 port map( A => n2889, B => n2890, Z => n2887);
   U2796 : GTECH_NAND2 port map( A => n1869, B => n1079, Z => n2885);
   U2797 : GTECH_NAND2 port map( A => n2891, B => n2892, Z => n2781);
   U2798 : GTECH_NAND2 port map( A => n935, B => n2589, Z => n2892);
   U2799 : GTECH_NAND2 port map( A => n1019, B => n2591, Z => n2891);
   U2800 : GTECH_NAND2 port map( A => B(17), B => A(12), Z => n2591);
   U2801 : GTECH_NAND2 port map( A => n2893, B => n2894, Z => n2589);
   U2802 : GTECH_NAND2 port map( A => n2895, B => n2896, Z => n2894);
   U2803 : GTECH_NAND2 port map( A => n1078, B => n2897, Z => n2895);
   U2804 : GTECH_NAND2 port map( A => n1022, B => n2898, Z => n2893);
   U2805 : GTECH_NAND2 port map( A => n2899, B => n2900, Z => n2778);
   U2806 : GTECH_NAND2 port map( A => n1897, B => n2597, Z => n2900);
   U2807 : GTECH_NAND2 port map( A => n937, B => n2598, Z => n2899);
   U2808 : GTECH_NAND2 port map( A => B(16), B => A(13), Z => n2598);
   U2809 : GTECH_NAND2 port map( A => n2901, B => n2902, Z => n2597);
   U2810 : GTECH_NAND2 port map( A => n2903, B => n2904, Z => n2902);
   U2811 : GTECH_NAND2 port map( A => n2905, B => n2906, Z => n2903);
   U2812 : GTECH_NAND2 port map( A => n942, B => n1020, Z => n2901);
   U2813 : GTECH_NAND2 port map( A => n2907, B => n2908, Z => n2775);
   U2814 : GTECH_NAND2 port map( A => n865, B => n2605, Z => n2908);
   U2815 : GTECH_NAND2 port map( A => n938, B => n2607, Z => n2907);
   U2816 : GTECH_NAND2 port map( A => B(15), B => A(14), Z => n2607);
   U2817 : GTECH_NAND2 port map( A => n2909, B => n2910, Z => n2605);
   U2818 : GTECH_NAND2 port map( A => n2911, B => n2912, Z => n2910);
   U2819 : GTECH_NAND2 port map( A => n940, B => n2913, Z => n2911);
   U2820 : GTECH_NAND2 port map( A => n1894, B => n2914, Z => n2909);
   U2821 : GTECH_NAND2 port map( A => n2915, B => n2916, Z => n2772);
   U2822 : GTECH_NAND2 port map( A => n1886, B => n2613, Z => n2916);
   U2823 : GTECH_NAND2 port map( A => n867, B => n2614, Z => n2915);
   U2824 : GTECH_NAND2 port map( A => B(14), B => A(15), Z => n2614);
   U2825 : GTECH_NAND2 port map( A => n2917, B => n2918, Z => n2613);
   U2826 : GTECH_NAND2 port map( A => n2919, B => n2920, Z => n2918);
   U2827 : GTECH_NAND2 port map( A => n2921, B => n2922, Z => n2919);
   U2828 : GTECH_NAND2 port map( A => n872, B => n939, Z => n2917);
   U2829 : GTECH_NAND2 port map( A => n2923, B => n2924, Z => n2769);
   U2830 : GTECH_NAND2 port map( A => n828, B => n2621, Z => n2924);
   U2831 : GTECH_NAND2 port map( A => n868, B => n2623, Z => n2923);
   U2832 : GTECH_NAND2 port map( A => B(13), B => A(16), Z => n2623);
   U2833 : GTECH_NAND2 port map( A => n2925, B => n2926, Z => n2621);
   U2834 : GTECH_NAND2 port map( A => n2927, B => n2928, Z => n2926);
   U2835 : GTECH_NAND2 port map( A => n870, B => n2929, Z => n2927);
   U2836 : GTECH_NAND2 port map( A => n1887, B => n2930, Z => n2925);
   U2837 : GTECH_NAND2 port map( A => n2931, B => n2932, Z => n2766);
   U2838 : GTECH_NAND2 port map( A => n795, B => n2629, Z => n2932);
   U2839 : GTECH_NAND2 port map( A => n829, B => n2630, Z => n2931);
   U2840 : GTECH_NAND2 port map( A => B(12), B => A(17), Z => n2630);
   U2841 : GTECH_NAND2 port map( A => n2933, B => n2934, Z => n2629);
   U2842 : GTECH_NAND2 port map( A => n2935, B => n2936, Z => n2934);
   U2843 : GTECH_NAND2 port map( A => n2937, B => n2938, Z => n2935);
   U2844 : GTECH_NAND2 port map( A => n832, B => n869, Z => n2933);
   U2845 : GTECH_NAND2 port map( A => n2939, B => n2940, Z => n2763);
   U2846 : GTECH_NAND2 port map( A => n766, B => n2637, Z => n2940);
   U2847 : GTECH_NAND2 port map( A => n796, B => n2639, Z => n2939);
   U2848 : GTECH_NAND2 port map( A => B(11), B => A(18), Z => n2639);
   U2849 : GTECH_NAND2 port map( A => n2941, B => n2942, Z => n2637);
   U2850 : GTECH_NAND2 port map( A => n2943, B => n2944, Z => n2942);
   U2851 : GTECH_NAND2 port map( A => n830, B => n2945, Z => n2943);
   U2852 : GTECH_NAND2 port map( A => n799, B => n2946, Z => n2941);
   U2853 : GTECH_NAND2 port map( A => n2947, B => n2948, Z => n2760);
   U2854 : GTECH_NAND2 port map( A => n741, B => n2645, Z => n2948);
   U2855 : GTECH_NAND2 port map( A => n767, B => n2646, Z => n2947);
   U2856 : GTECH_NAND2 port map( A => B(10), B => A(19), Z => n2646);
   U2857 : GTECH_NAND2 port map( A => n2949, B => n2950, Z => n2645);
   U2858 : GTECH_NAND2 port map( A => n2951, B => n2952, Z => n2950);
   U2859 : GTECH_NAND2 port map( A => n2953, B => n2954, Z => n2951);
   U2860 : GTECH_NAND2 port map( A => n770, B => n797, Z => n2949);
   U2861 : GTECH_NAND2 port map( A => n2955, B => n2956, Z => n2757);
   U2862 : GTECH_NAND2 port map( A => n720, B => n2653, Z => n2956);
   U2863 : GTECH_NAND2 port map( A => n742, B => n2655, Z => n2955);
   U2864 : GTECH_NAND2 port map( A => B(9), B => A(20), Z => n2655);
   U2865 : GTECH_NAND2 port map( A => n2957, B => n2958, Z => n2653);
   U2866 : GTECH_NAND2 port map( A => n2959, B => n2960, Z => n2958);
   U2867 : GTECH_NAND2 port map( A => n768, B => n2961, Z => n2959);
   U2868 : GTECH_NAND2 port map( A => n745, B => n2962, Z => n2957);
   U2869 : GTECH_NAND2 port map( A => n2963, B => n2964, Z => n2754);
   U2870 : GTECH_NAND2 port map( A => n703, B => n2661, Z => n2964);
   U2871 : GTECH_NAND2 port map( A => n721, B => n2662, Z => n2963);
   U2872 : GTECH_NAND2 port map( A => B(8), B => A(21), Z => n2662);
   U2873 : GTECH_NAND2 port map( A => n2965, B => n2966, Z => n2661);
   U2874 : GTECH_NAND2 port map( A => n2967, B => n2968, Z => n2966);
   U2875 : GTECH_NAND2 port map( A => n2969, B => n2970, Z => n2967);
   U2876 : GTECH_NAND2 port map( A => n724, B => n743, Z => n2965);
   U2877 : GTECH_NAND2 port map( A => n2971, B => n2972, Z => n2751);
   U2878 : GTECH_NAND2 port map( A => n690, B => n2669, Z => n2972);
   U2879 : GTECH_NAND2 port map( A => n704, B => n2671, Z => n2971);
   U2880 : GTECH_NAND2 port map( A => B(7), B => A(22), Z => n2671);
   U2881 : GTECH_NAND2 port map( A => n2973, B => n2974, Z => n2669);
   U2882 : GTECH_NAND2 port map( A => n2975, B => n2976, Z => n2974);
   U2883 : GTECH_NAND2 port map( A => n722, B => n2977, Z => n2975);
   U2884 : GTECH_NAND2 port map( A => n707, B => n2978, Z => n2973);
   U2885 : GTECH_NAND2 port map( A => n2979, B => n2980, Z => n2748);
   U2886 : GTECH_NAND2 port map( A => n681, B => n2677, Z => n2980);
   U2887 : GTECH_NAND2 port map( A => n691, B => n2678, Z => n2979);
   U2888 : GTECH_NAND2 port map( A => B(6), B => A(23), Z => n2678);
   U2889 : GTECH_NAND2 port map( A => n2981, B => n2982, Z => n2677);
   U2890 : GTECH_NAND2 port map( A => n2983, B => n2984, Z => n2982);
   U2891 : GTECH_NAND2 port map( A => n2985, B => n2986, Z => n2983);
   U2892 : GTECH_NAND2 port map( A => n694, B => n705, Z => n2981);
   U2893 : GTECH_NAND2 port map( A => n2987, B => n2988, Z => n2745);
   U2894 : GTECH_NAND2 port map( A => n441, B => n2685, Z => n2988);
   U2895 : GTECH_NAND2 port map( A => n425, B => n2687, Z => n2987);
   U2896 : GTECH_NAND2 port map( A => B(5), B => A(24), Z => n2687);
   U2897 : GTECH_NAND2 port map( A => n2989, B => n2990, Z => n2685);
   U2898 : GTECH_NAND2 port map( A => n2991, B => n2992, Z => n2990);
   U2899 : GTECH_NAND2 port map( A => n692, B => n2993, Z => n2991);
   U2900 : GTECH_NAND2 port map( A => n442, B => n2994, Z => n2989);
   U2901 : GTECH_NAND2 port map( A => n2995, B => n2996, Z => n2742);
   U2902 : GTECH_NAND2 port map( A => n666, B => n2693, Z => n2996);
   U2903 : GTECH_NAND2 port map( A => n352, B => n2694, Z => n2995);
   U2904 : GTECH_NAND2 port map( A => B(4), B => A(25), Z => n2694);
   U2905 : GTECH_NAND2 port map( A => n2997, B => n2998, Z => n2693);
   U2906 : GTECH_NAND2 port map( A => n2999, B => n3000, Z => n2998);
   U2907 : GTECH_NAND2 port map( A => n3001, B => n3002, Z => n2999);
   U2908 : GTECH_NAND2 port map( A => n673, B => n420, Z => n2997);
   U2909 : GTECH_NAND2 port map( A => n3003, B => n3004, Z => n2739);
   U2910 : GTECH_NAND2 port map( A => n661, B => n2701, Z => n3004);
   U2911 : GTECH_NAND2 port map( A => n275, B => n2703, Z => n3003);
   U2912 : GTECH_NAND2 port map( A => B(3), B => A(26), Z => n2703);
   U2913 : GTECH_NAND2 port map( A => n3005, B => n3006, Z => n2701);
   U2914 : GTECH_NAND2 port map( A => n3007, B => n3008, Z => n3006);
   U2915 : GTECH_NAND2 port map( A => n347, B => n3009, Z => n3007);
   U2916 : GTECH_NAND2 port map( A => n667, B => n3010, Z => n3005);
   U2917 : GTECH_NAND2 port map( A => n3011, B => n3012, Z => n2736);
   U2918 : GTECH_NAND2 port map( A => n657, B => n2709, Z => n3012);
   U2919 : GTECH_NAND2 port map( A => n199, B => n2710, Z => n3011);
   U2920 : GTECH_NAND2 port map( A => B(2), B => A(27), Z => n2710);
   U2921 : GTECH_NAND2 port map( A => n3013, B => n3014, Z => n2709);
   U2922 : GTECH_NAND2 port map( A => n3015, B => n3016, Z => n3014);
   U2923 : GTECH_NAND2 port map( A => n3017, B => n3018, Z => n3015);
   U2924 : GTECH_NAND2 port map( A => n662, B => n270, Z => n3013);
   U2925 : GTECH_NAND2 port map( A => n3019, B => n3020, Z => n2733);
   U2926 : GTECH_NAND2 port map( A => n653, B => n2717, Z => n3020);
   U2927 : GTECH_NAND2 port map( A => n124, B => n2719, Z => n3019);
   U2928 : GTECH_NAND2 port map( A => A(28), B => B(1), Z => n2719);
   U2929 : GTECH_NAND2 port map( A => n3021, B => n3022, Z => n2717);
   U2930 : GTECH_NAND2 port map( A => n3023, B => n3024, Z => n3022);
   U2931 : GTECH_NAND2 port map( A => n194, B => n3025, Z => n3023);
   U2932 : GTECH_NAND2 port map( A => n658, B => n3026, Z => n3021);
   U2933 : GTECH_NAND2 port map( A => n3027, B => n3028, Z => n2730);
   U2934 : GTECH_NAND2 port map( A => n650, B => n2725, Z => n3028);
   U2935 : GTECH_NAND2 port map( A => n38, B => n2726, Z => n3027);
   U2936 : GTECH_NAND2 port map( A => A(29), B => B(0), Z => n2726);
   U2937 : GTECH_NAND2 port map( A => n3029, B => n3030, Z => n2725);
   U2938 : GTECH_NAND2 port map( A => n3031, B => n3032, Z => n3030);
   U2939 : GTECH_NAND2 port map( A => n3033, B => n3034, Z => n3031);
   U2940 : GTECH_NAND2 port map( A => n654, B => n119, Z => n3029);
   U2941 : GTECH_NAND2 port map( A => n3035, B => n3036, Z => PRODUCT(28));
   U2942 : GTECH_NAND2 port map( A => n3033, B => n35, Z => n3036);
   U2943 : GTECH_NAND2 port map( A => n3037, B => n119, Z => n3035);
   U2944 : GTECH_NAND2 port map( A => n3038, B => n3039, Z => n3033);
   U2945 : GTECH_NAND2 port map( A => n3026, B => n120, Z => n3039);
   U2946 : GTECH_NAND2 port map( A => n3040, B => n194, Z => n3038);
   U2947 : GTECH_NAND2 port map( A => n3041, B => n3042, Z => n3026);
   U2948 : GTECH_NAND2 port map( A => n3017, B => n195, Z => n3042);
   U2949 : GTECH_NAND2 port map( A => n3043, B => n270, Z => n3041);
   U2950 : GTECH_NAND2 port map( A => n3044, B => n3045, Z => n3017);
   U2951 : GTECH_NAND2 port map( A => n3010, B => n271, Z => n3045);
   U2952 : GTECH_NAND2 port map( A => n3046, B => n347, Z => n3044);
   U2953 : GTECH_NAND2 port map( A => n3047, B => n3048, Z => n3010);
   U2954 : GTECH_NAND2 port map( A => n3001, B => n348, Z => n3048);
   U2955 : GTECH_NAND2 port map( A => n3049, B => n420, Z => n3047);
   U2956 : GTECH_NAND2 port map( A => n3050, B => n3051, Z => n3001);
   U2957 : GTECH_NAND2 port map( A => n2994, B => n421, Z => n3051);
   U2958 : GTECH_NAND2 port map( A => n3052, B => n692, Z => n3050);
   U2959 : GTECH_NAND2 port map( A => n3053, B => n3054, Z => n2994);
   U2960 : GTECH_NAND2 port map( A => n2985, B => n693, Z => n3054);
   U2961 : GTECH_NAND2 port map( A => n3055, B => n705, Z => n3053);
   U2962 : GTECH_NAND2 port map( A => n3056, B => n3057, Z => n2985);
   U2963 : GTECH_NAND2 port map( A => n2978, B => n706, Z => n3057);
   U2964 : GTECH_NAND2 port map( A => n3058, B => n722, Z => n3056);
   U2965 : GTECH_NAND2 port map( A => n3059, B => n3060, Z => n2978);
   U2966 : GTECH_NAND2 port map( A => n2969, B => n723, Z => n3060);
   U2967 : GTECH_NAND2 port map( A => n3061, B => n743, Z => n3059);
   U2968 : GTECH_NAND2 port map( A => n3062, B => n3063, Z => n2969);
   U2969 : GTECH_NAND2 port map( A => n2962, B => n744, Z => n3063);
   U2970 : GTECH_NAND2 port map( A => n3064, B => n768, Z => n3062);
   U2971 : GTECH_NAND2 port map( A => n3065, B => n3066, Z => n2962);
   U2972 : GTECH_NAND2 port map( A => n2953, B => n769, Z => n3066);
   U2973 : GTECH_NAND2 port map( A => n3067, B => n797, Z => n3065);
   U2974 : GTECH_NAND2 port map( A => n3068, B => n3069, Z => n2953);
   U2975 : GTECH_NAND2 port map( A => n2946, B => n798, Z => n3069);
   U2976 : GTECH_NAND2 port map( A => n3070, B => n830, Z => n3068);
   U2977 : GTECH_NAND2 port map( A => n3071, B => n3072, Z => n2946);
   U2978 : GTECH_NAND2 port map( A => n2937, B => n831, Z => n3072);
   U2979 : GTECH_NAND2 port map( A => n3073, B => n869, Z => n3071);
   U2980 : GTECH_NAND2 port map( A => n3074, B => n3075, Z => n2937);
   U2981 : GTECH_NAND2 port map( A => n2930, B => n873, Z => n3075);
   U2982 : GTECH_NAND2 port map( A => n3076, B => n870, Z => n3074);
   U2983 : GTECH_NAND2 port map( A => n3077, B => n3078, Z => n2930);
   U2984 : GTECH_NAND2 port map( A => n2921, B => n871, Z => n3078);
   U2985 : GTECH_NAND2 port map( A => n3079, B => n939, Z => n3077);
   U2986 : GTECH_NAND2 port map( A => n3080, B => n3081, Z => n2921);
   U2987 : GTECH_NAND2 port map( A => n2914, B => n943, Z => n3081);
   U2988 : GTECH_NAND2 port map( A => n3082, B => n940, Z => n3080);
   U2989 : GTECH_NAND2 port map( A => n3083, B => n3084, Z => n2914);
   U2990 : GTECH_NAND2 port map( A => n2905, B => n941, Z => n3084);
   U2991 : GTECH_NAND2 port map( A => n3085, B => n1020, Z => n3083);
   U2992 : GTECH_NAND2 port map( A => n3086, B => n3087, Z => n2905);
   U2993 : GTECH_NAND2 port map( A => n2898, B => n1021, Z => n3087);
   U2994 : GTECH_NAND2 port map( A => n3088, B => n1078, Z => n3086);
   U2995 : GTECH_NAND2 port map( A => n3089, B => n3090, Z => n2898);
   U2996 : GTECH_NAND2 port map( A => n2889, B => n1082, Z => n3090);
   U2997 : GTECH_NAND2 port map( A => n3091, B => n1079, Z => n3089);
   U2998 : GTECH_NAND2 port map( A => n3092, B => n3093, Z => n2889);
   U2999 : GTECH_NAND2 port map( A => n2882, B => n1080, Z => n3093);
   U3000 : GTECH_NAND2 port map( A => n3094, B => n1182, Z => n3092);
   U3001 : GTECH_NAND2 port map( A => n3095, B => n3096, Z => n2882);
   U3002 : GTECH_NAND2 port map( A => n2873, B => n1186, Z => n3096);
   U3003 : GTECH_NAND2 port map( A => n3097, B => n1183, Z => n3095);
   U3004 : GTECH_NAND2 port map( A => n3098, B => n3099, Z => n2873);
   U3005 : GTECH_NAND2 port map( A => n2866, B => n1184, Z => n3099);
   U3006 : GTECH_NAND2 port map( A => n3100, B => n1300, Z => n3098);
   U3007 : GTECH_NAND2 port map( A => n3101, B => n3102, Z => n2866);
   U3008 : GTECH_NAND2 port map( A => n2857, B => n1304, Z => n3102);
   U3009 : GTECH_NAND2 port map( A => n3103, B => n1301, Z => n3101);
   U3010 : GTECH_NAND2 port map( A => n3104, B => n3105, Z => n2857);
   U3011 : GTECH_NAND2 port map( A => n2850, B => n1302, Z => n3105);
   U3012 : GTECH_NAND2 port map( A => n3106, B => n1434, Z => n3104);
   U3013 : GTECH_NAND2 port map( A => n3107, B => n3108, Z => n2850);
   U3014 : GTECH_NAND2 port map( A => n2841, B => n1441, Z => n3108);
   U3015 : GTECH_NAND2 port map( A => n3109, B => n1435, Z => n3107);
   U3016 : GTECH_NAND2 port map( A => n3110, B => n3111, Z => n2841);
   U3017 : GTECH_NAND2 port map( A => n2834, B => n1439, Z => n3111);
   U3018 : GTECH_NAND2 port map( A => n3112, B => n1436, Z => n3110);
   U3019 : GTECH_NAND2 port map( A => n3113, B => n3114, Z => n2834);
   U3020 : GTECH_NAND2 port map( A => n2826, B => n1437, Z => n3114);
   U3021 : GTECH_NAND2 port map( A => n3115, B => n1651, Z => n3113);
   U3022 : GTECH_NAND2 port map( A => n1652, B => n3116, Z => n2826);
   U3023 : GTECH_NAND2 port map( A => n2819, B => n3117, Z => n3116);
   U3024 : GTECH_NOR2 port map( A => n3117, B => n2819, Z => n3118);
   U3025 : GTECH_NOR2 port map( A => n1922, B => n1714, Z => n2819);
   U3026 : GTECH_NAND2 port map( A => B(28), B => A(0), Z => n3117);
   U3027 : GTECH_NAND2 port map( A => n3119, B => n3120, Z => n3115);
   U3028 : GTECH_NAND2 port map( A => n1438, B => n1710, Z => n3120);
   U3029 : GTECH_NAND2 port map( A => n2825, B => n3121, Z => n3119);
   U3030 : GTECH_NAND2 port map( A => n3122, B => n3123, Z => n3121);
   U3031 : GTECH_NOR2 port map( A => n1649, B => n1922, Z => n3122);
   U3032 : GTECH_NOR2 port map( A => n1711, B => n1748, Z => n2825);
   U3033 : GTECH_NAND2 port map( A => n3124, B => n3125, Z => n3112);
   U3034 : GTECH_NAND2 port map( A => n1759, B => n2832, Z => n3125);
   U3035 : GTECH_NAND2 port map( A => n1440, B => n2833, Z => n3124);
   U3036 : GTECH_NAND2 port map( A => B(25), B => A(3), Z => n2833);
   U3037 : GTECH_NAND2 port map( A => n3126, B => n3127, Z => n2832);
   U3038 : GTECH_NAND2 port map( A => n1448, B => n3128, Z => n3127);
   U3039 : GTECH_NAND2 port map( A => n1653, B => n1725, Z => n3128);
   U3040 : GTECH_NAND2 port map( A => n3129, B => n3130, Z => n3126);
   U3041 : GTECH_NAND2 port map( A => n3131, B => n3132, Z => n3109);
   U3042 : GTECH_NAND2 port map( A => n1791, B => n2840, Z => n3132);
   U3043 : GTECH_NAND2 port map( A => n1442, B => n2842, Z => n3131);
   U3044 : GTECH_NAND2 port map( A => B(24), B => A(4), Z => n2842);
   U3045 : GTECH_NAND2 port map( A => n3133, B => n3134, Z => n2840);
   U3046 : GTECH_NAND2 port map( A => n3135, B => n3136, Z => n3134);
   U3047 : GTECH_NAND2 port map( A => n1446, B => n3137, Z => n3135);
   U3048 : GTECH_NAND2 port map( A => n1760, B => n3138, Z => n3133);
   U3049 : GTECH_NAND2 port map( A => n3139, B => n3140, Z => n3106);
   U3050 : GTECH_NAND2 port map( A => n1303, B => n2848, Z => n3140);
   U3051 : GTECH_NAND2 port map( A => n1443, B => n2849, Z => n3139);
   U3052 : GTECH_NAND2 port map( A => B(23), B => A(5), Z => n2849);
   U3053 : GTECH_NAND2 port map( A => n3141, B => n3142, Z => n2848);
   U3054 : GTECH_NAND2 port map( A => n3143, B => n3144, Z => n3142);
   U3055 : GTECH_NAND2 port map( A => n3145, B => n3146, Z => n3143);
   U3056 : GTECH_NAND2 port map( A => n1792, B => n1445, Z => n3141);
   U3057 : GTECH_NAND2 port map( A => n3147, B => n3148, Z => n3103);
   U3058 : GTECH_NAND2 port map( A => n1821, B => n2856, Z => n3148);
   U3059 : GTECH_NAND2 port map( A => n1305, B => n2858, Z => n3147);
   U3060 : GTECH_NAND2 port map( A => B(22), B => A(6), Z => n2858);
   U3061 : GTECH_NAND2 port map( A => n3149, B => n3150, Z => n2856);
   U3062 : GTECH_NAND2 port map( A => n3151, B => n3152, Z => n3150);
   U3063 : GTECH_NAND2 port map( A => n1444, B => n3153, Z => n3151);
   U3064 : GTECH_NAND2 port map( A => n1310, B => n3154, Z => n3149);
   U3065 : GTECH_NAND2 port map( A => n3155, B => n3156, Z => n3100);
   U3066 : GTECH_NAND2 port map( A => n1185, B => n2864, Z => n3156);
   U3067 : GTECH_NAND2 port map( A => n1306, B => n2865, Z => n3155);
   U3068 : GTECH_NAND2 port map( A => B(21), B => A(7), Z => n2865);
   U3069 : GTECH_NAND2 port map( A => n3157, B => n3158, Z => n2864);
   U3070 : GTECH_NAND2 port map( A => n3159, B => n3160, Z => n3158);
   U3071 : GTECH_NAND2 port map( A => n3161, B => n3162, Z => n3159);
   U3072 : GTECH_NAND2 port map( A => n1822, B => n1308, Z => n3157);
   U3073 : GTECH_NAND2 port map( A => n3163, B => n3164, Z => n3097);
   U3074 : GTECH_NAND2 port map( A => n1847, B => n2872, Z => n3164);
   U3075 : GTECH_NAND2 port map( A => n1187, B => n2874, Z => n3163);
   U3076 : GTECH_NAND2 port map( A => B(20), B => A(8), Z => n2874);
   U3077 : GTECH_NAND2 port map( A => n3165, B => n3166, Z => n2872);
   U3078 : GTECH_NAND2 port map( A => n3167, B => n3168, Z => n3166);
   U3079 : GTECH_NAND2 port map( A => n1307, B => n3169, Z => n3167);
   U3080 : GTECH_NAND2 port map( A => n1192, B => n3170, Z => n3165);
   U3081 : GTECH_NAND2 port map( A => n3171, B => n3172, Z => n3094);
   U3082 : GTECH_NAND2 port map( A => n1081, B => n2880, Z => n3172);
   U3083 : GTECH_NAND2 port map( A => n1188, B => n2881, Z => n3171);
   U3084 : GTECH_NAND2 port map( A => B(19), B => A(9), Z => n2881);
   U3085 : GTECH_NAND2 port map( A => n3173, B => n3174, Z => n2880);
   U3086 : GTECH_NAND2 port map( A => n3175, B => n3176, Z => n3174);
   U3087 : GTECH_NAND2 port map( A => n3177, B => n3178, Z => n3175);
   U3088 : GTECH_NAND2 port map( A => n1848, B => n1190, Z => n3173);
   U3089 : GTECH_NAND2 port map( A => n3179, B => n3180, Z => n3091);
   U3090 : GTECH_NAND2 port map( A => n1869, B => n2888, Z => n3180);
   U3091 : GTECH_NAND2 port map( A => n1083, B => n2890, Z => n3179);
   U3092 : GTECH_NAND2 port map( A => B(18), B => A(10), Z => n2890);
   U3093 : GTECH_NAND2 port map( A => n3181, B => n3182, Z => n2888);
   U3094 : GTECH_NAND2 port map( A => n3183, B => n3184, Z => n3182);
   U3095 : GTECH_NAND2 port map( A => n1189, B => n3185, Z => n3183);
   U3096 : GTECH_NAND2 port map( A => n1088, B => n3186, Z => n3181);
   U3097 : GTECH_NAND2 port map( A => n3187, B => n3188, Z => n3088);
   U3098 : GTECH_NAND2 port map( A => n1022, B => n2896, Z => n3188);
   U3099 : GTECH_NAND2 port map( A => n1084, B => n2897, Z => n3187);
   U3100 : GTECH_NAND2 port map( A => B(17), B => A(11), Z => n2897);
   U3101 : GTECH_NAND2 port map( A => n3189, B => n3190, Z => n2896);
   U3102 : GTECH_NAND2 port map( A => n3191, B => n3192, Z => n3190);
   U3103 : GTECH_NAND2 port map( A => n3193, B => n3194, Z => n3191);
   U3104 : GTECH_NAND2 port map( A => n1870, B => n1086, Z => n3189);
   U3105 : GTECH_NAND2 port map( A => n3195, B => n3196, Z => n3085);
   U3106 : GTECH_NAND2 port map( A => n942, B => n2904, Z => n3196);
   U3107 : GTECH_NAND2 port map( A => n1023, B => n2906, Z => n3195);
   U3108 : GTECH_NAND2 port map( A => B(16), B => A(12), Z => n2906);
   U3109 : GTECH_NAND2 port map( A => n3197, B => n3198, Z => n2904);
   U3110 : GTECH_NAND2 port map( A => n3199, B => n3200, Z => n3198);
   U3111 : GTECH_NAND2 port map( A => n1085, B => n3201, Z => n3199);
   U3112 : GTECH_NAND2 port map( A => n1026, B => n3202, Z => n3197);
   U3113 : GTECH_NAND2 port map( A => n3203, B => n3204, Z => n3082);
   U3114 : GTECH_NAND2 port map( A => n1894, B => n2912, Z => n3204);
   U3115 : GTECH_NAND2 port map( A => n944, B => n2913, Z => n3203);
   U3116 : GTECH_NAND2 port map( A => B(15), B => A(13), Z => n2913);
   U3117 : GTECH_NAND2 port map( A => n3205, B => n3206, Z => n2912);
   U3118 : GTECH_NAND2 port map( A => n3207, B => n3208, Z => n3206);
   U3119 : GTECH_NAND2 port map( A => n3209, B => n3210, Z => n3207);
   U3120 : GTECH_NAND2 port map( A => n949, B => n1024, Z => n3205);
   U3121 : GTECH_NAND2 port map( A => n3211, B => n3212, Z => n3079);
   U3122 : GTECH_NAND2 port map( A => n872, B => n2920, Z => n3212);
   U3123 : GTECH_NAND2 port map( A => n945, B => n2922, Z => n3211);
   U3124 : GTECH_NAND2 port map( A => B(14), B => A(14), Z => n2922);
   U3125 : GTECH_NAND2 port map( A => n3213, B => n3214, Z => n2920);
   U3126 : GTECH_NAND2 port map( A => n3215, B => n3216, Z => n3214);
   U3127 : GTECH_NAND2 port map( A => n947, B => n3217, Z => n3215);
   U3128 : GTECH_NAND2 port map( A => n1898, B => n3218, Z => n3213);
   U3129 : GTECH_NAND2 port map( A => n3219, B => n3220, Z => n3076);
   U3130 : GTECH_NAND2 port map( A => n1887, B => n2928, Z => n3220);
   U3131 : GTECH_NAND2 port map( A => n874, B => n2929, Z => n3219);
   U3132 : GTECH_NAND2 port map( A => B(13), B => A(15), Z => n2929);
   U3133 : GTECH_NAND2 port map( A => n3221, B => n3222, Z => n2928);
   U3134 : GTECH_NAND2 port map( A => n3223, B => n3224, Z => n3222);
   U3135 : GTECH_NAND2 port map( A => n3225, B => n3226, Z => n3223);
   U3136 : GTECH_NAND2 port map( A => n879, B => n946, Z => n3221);
   U3137 : GTECH_NAND2 port map( A => n3227, B => n3228, Z => n3073);
   U3138 : GTECH_NAND2 port map( A => n832, B => n2936, Z => n3228);
   U3139 : GTECH_NAND2 port map( A => n875, B => n2938, Z => n3227);
   U3140 : GTECH_NAND2 port map( A => B(12), B => A(16), Z => n2938);
   U3141 : GTECH_NAND2 port map( A => n3229, B => n3230, Z => n2936);
   U3142 : GTECH_NAND2 port map( A => n3231, B => n3232, Z => n3230);
   U3143 : GTECH_NAND2 port map( A => n877, B => n3233, Z => n3231);
   U3144 : GTECH_NAND2 port map( A => n1888, B => n3234, Z => n3229);
   U3145 : GTECH_NAND2 port map( A => n3235, B => n3236, Z => n3070);
   U3146 : GTECH_NAND2 port map( A => n799, B => n2944, Z => n3236);
   U3147 : GTECH_NAND2 port map( A => n833, B => n2945, Z => n3235);
   U3148 : GTECH_NAND2 port map( A => B(11), B => A(17), Z => n2945);
   U3149 : GTECH_NAND2 port map( A => n3237, B => n3238, Z => n2944);
   U3150 : GTECH_NAND2 port map( A => n3239, B => n3240, Z => n3238);
   U3151 : GTECH_NAND2 port map( A => n3241, B => n3242, Z => n3239);
   U3152 : GTECH_NAND2 port map( A => n836, B => n876, Z => n3237);
   U3153 : GTECH_NAND2 port map( A => n3243, B => n3244, Z => n3067);
   U3154 : GTECH_NAND2 port map( A => n770, B => n2952, Z => n3244);
   U3155 : GTECH_NAND2 port map( A => n800, B => n2954, Z => n3243);
   U3156 : GTECH_NAND2 port map( A => B(10), B => A(18), Z => n2954);
   U3157 : GTECH_NAND2 port map( A => n3245, B => n3246, Z => n2952);
   U3158 : GTECH_NAND2 port map( A => n3247, B => n3248, Z => n3246);
   U3159 : GTECH_NAND2 port map( A => n834, B => n3249, Z => n3247);
   U3160 : GTECH_NAND2 port map( A => n803, B => n3250, Z => n3245);
   U3161 : GTECH_NAND2 port map( A => n3251, B => n3252, Z => n3064);
   U3162 : GTECH_NAND2 port map( A => n745, B => n2960, Z => n3252);
   U3163 : GTECH_NAND2 port map( A => n771, B => n2961, Z => n3251);
   U3164 : GTECH_NAND2 port map( A => B(9), B => A(19), Z => n2961);
   U3165 : GTECH_NAND2 port map( A => n3253, B => n3254, Z => n2960);
   U3166 : GTECH_NAND2 port map( A => n3255, B => n3256, Z => n3254);
   U3167 : GTECH_NAND2 port map( A => n3257, B => n3258, Z => n3255);
   U3168 : GTECH_NAND2 port map( A => n774, B => n801, Z => n3253);
   U3169 : GTECH_NAND2 port map( A => n3259, B => n3260, Z => n3061);
   U3170 : GTECH_NAND2 port map( A => n724, B => n2968, Z => n3260);
   U3171 : GTECH_NAND2 port map( A => n746, B => n2970, Z => n3259);
   U3172 : GTECH_NAND2 port map( A => B(8), B => A(20), Z => n2970);
   U3173 : GTECH_NAND2 port map( A => n3261, B => n3262, Z => n2968);
   U3174 : GTECH_NAND2 port map( A => n3263, B => n3264, Z => n3262);
   U3175 : GTECH_NAND2 port map( A => n772, B => n3265, Z => n3263);
   U3176 : GTECH_NAND2 port map( A => n749, B => n3266, Z => n3261);
   U3177 : GTECH_NAND2 port map( A => n3267, B => n3268, Z => n3058);
   U3178 : GTECH_NAND2 port map( A => n707, B => n2976, Z => n3268);
   U3179 : GTECH_NAND2 port map( A => n725, B => n2977, Z => n3267);
   U3180 : GTECH_NAND2 port map( A => B(7), B => A(21), Z => n2977);
   U3181 : GTECH_NAND2 port map( A => n3269, B => n3270, Z => n2976);
   U3182 : GTECH_NAND2 port map( A => n3271, B => n3272, Z => n3270);
   U3183 : GTECH_NAND2 port map( A => n3273, B => n3274, Z => n3271);
   U3184 : GTECH_NAND2 port map( A => n728, B => n747, Z => n3269);
   U3185 : GTECH_NAND2 port map( A => n3275, B => n3276, Z => n3055);
   U3186 : GTECH_NAND2 port map( A => n694, B => n2984, Z => n3276);
   U3187 : GTECH_NAND2 port map( A => n708, B => n2986, Z => n3275);
   U3188 : GTECH_NAND2 port map( A => B(6), B => A(22), Z => n2986);
   U3189 : GTECH_NAND2 port map( A => n3277, B => n3278, Z => n2984);
   U3190 : GTECH_NAND2 port map( A => n3279, B => n3280, Z => n3278);
   U3191 : GTECH_NAND2 port map( A => n726, B => n3281, Z => n3279);
   U3192 : GTECH_NAND2 port map( A => n711, B => n3282, Z => n3277);
   U3193 : GTECH_NAND2 port map( A => n3283, B => n3284, Z => n3052);
   U3194 : GTECH_NAND2 port map( A => n442, B => n2992, Z => n3284);
   U3195 : GTECH_NAND2 port map( A => n422, B => n2993, Z => n3283);
   U3196 : GTECH_NAND2 port map( A => B(5), B => A(23), Z => n2993);
   U3197 : GTECH_NAND2 port map( A => n3285, B => n3286, Z => n2992);
   U3198 : GTECH_NAND2 port map( A => n3287, B => n3288, Z => n3286);
   U3199 : GTECH_NAND2 port map( A => n3289, B => n3290, Z => n3287);
   U3200 : GTECH_NAND2 port map( A => n443, B => n709, Z => n3285);
   U3201 : GTECH_NAND2 port map( A => n3291, B => n3292, Z => n3049);
   U3202 : GTECH_NAND2 port map( A => n673, B => n3000, Z => n3292);
   U3203 : GTECH_NAND2 port map( A => n349, B => n3002, Z => n3291);
   U3204 : GTECH_NAND2 port map( A => B(4), B => A(24), Z => n3002);
   U3205 : GTECH_NAND2 port map( A => n3293, B => n3294, Z => n3000);
   U3206 : GTECH_NAND2 port map( A => n3295, B => n3296, Z => n3294);
   U3207 : GTECH_NAND2 port map( A => n417, B => n3297, Z => n3295);
   U3208 : GTECH_NAND2 port map( A => n682, B => n3298, Z => n3293);
   U3209 : GTECH_NAND2 port map( A => n3299, B => n3300, Z => n3046);
   U3210 : GTECH_NAND2 port map( A => n667, B => n3008, Z => n3300);
   U3211 : GTECH_NAND2 port map( A => n272, B => n3009, Z => n3299);
   U3212 : GTECH_NAND2 port map( A => B(3), B => A(25), Z => n3009);
   U3213 : GTECH_NAND2 port map( A => n3301, B => n3302, Z => n3008);
   U3214 : GTECH_NAND2 port map( A => n3303, B => n3304, Z => n3302);
   U3215 : GTECH_NAND2 port map( A => n3305, B => n3306, Z => n3303);
   U3216 : GTECH_NAND2 port map( A => n674, B => n344, Z => n3301);
   U3217 : GTECH_NAND2 port map( A => n3307, B => n3308, Z => n3043);
   U3218 : GTECH_NAND2 port map( A => n662, B => n3016, Z => n3308);
   U3219 : GTECH_NAND2 port map( A => n196, B => n3018, Z => n3307);
   U3220 : GTECH_NAND2 port map( A => B(2), B => A(26), Z => n3018);
   U3221 : GTECH_NAND2 port map( A => n3309, B => n3310, Z => n3016);
   U3222 : GTECH_NAND2 port map( A => n3311, B => n3312, Z => n3310);
   U3223 : GTECH_NAND2 port map( A => n267, B => n3313, Z => n3311);
   U3224 : GTECH_NAND2 port map( A => n668, B => n3314, Z => n3309);
   U3225 : GTECH_NAND2 port map( A => n3315, B => n3316, Z => n3040);
   U3226 : GTECH_NAND2 port map( A => n658, B => n3024, Z => n3316);
   U3227 : GTECH_NAND2 port map( A => n121, B => n3025, Z => n3315);
   U3228 : GTECH_NAND2 port map( A => A(27), B => B(1), Z => n3025);
   U3229 : GTECH_NAND2 port map( A => n3317, B => n3318, Z => n3024);
   U3230 : GTECH_NAND2 port map( A => n3319, B => n3320, Z => n3318);
   U3231 : GTECH_NAND2 port map( A => n3321, B => n3322, Z => n3319);
   U3232 : GTECH_NAND2 port map( A => n663, B => n191, Z => n3317);
   U3233 : GTECH_NAND2 port map( A => n3323, B => n3324, Z => n3037);
   U3234 : GTECH_NAND2 port map( A => n654, B => n3032, Z => n3324);
   U3235 : GTECH_NAND2 port map( A => n36, B => n3034, Z => n3323);
   U3236 : GTECH_NAND2 port map( A => A(28), B => B(0), Z => n3034);
   U3237 : GTECH_NAND2 port map( A => n3325, B => n3326, Z => n3032);
   U3238 : GTECH_NAND2 port map( A => n3327, B => n3328, Z => n3326);
   U3239 : GTECH_NAND2 port map( A => n116, B => n3329, Z => n3327);
   U3240 : GTECH_NAND2 port map( A => n659, B => n3330, Z => n3325);
   U3241 : GTECH_NOR2 port map( A => n3331, B => n3332, Z => PRODUCT(27));
   U3242 : GTECH_NOR2 port map( A => n3330, B => n33, Z => n3332);
   U3243 : GTECH_NOR2 port map( A => n3333, B => n116, Z => n3331);
   U3244 : GTECH_NAND2 port map( A => n3334, B => n3335, Z => n3330);
   U3245 : GTECH_NAND2 port map( A => n3321, B => n117, Z => n3335);
   U3246 : GTECH_NAND2 port map( A => n3336, B => n191, Z => n3334);
   U3247 : GTECH_NAND2 port map( A => n3337, B => n3338, Z => n3321);
   U3248 : GTECH_NAND2 port map( A => n3314, B => n192, Z => n3338);
   U3249 : GTECH_NAND2 port map( A => n3339, B => n267, Z => n3337);
   U3250 : GTECH_NAND2 port map( A => n3340, B => n3341, Z => n3314);
   U3251 : GTECH_NAND2 port map( A => n3305, B => n268, Z => n3341);
   U3252 : GTECH_NAND2 port map( A => n3342, B => n344, Z => n3340);
   U3253 : GTECH_NAND2 port map( A => n3343, B => n3344, Z => n3305);
   U3254 : GTECH_NAND2 port map( A => n3298, B => n345, Z => n3344);
   U3255 : GTECH_NAND2 port map( A => n3345, B => n417, Z => n3343);
   U3256 : GTECH_NAND2 port map( A => n3346, B => n3347, Z => n3298);
   U3257 : GTECH_NAND2 port map( A => n3289, B => n418, Z => n3347);
   U3258 : GTECH_NAND2 port map( A => n3348, B => n709, Z => n3346);
   U3259 : GTECH_NAND2 port map( A => n3349, B => n3350, Z => n3289);
   U3260 : GTECH_NAND2 port map( A => n3282, B => n710, Z => n3350);
   U3261 : GTECH_NAND2 port map( A => n3351, B => n726, Z => n3349);
   U3262 : GTECH_NAND2 port map( A => n3352, B => n3353, Z => n3282);
   U3263 : GTECH_NAND2 port map( A => n3273, B => n727, Z => n3353);
   U3264 : GTECH_NAND2 port map( A => n3354, B => n747, Z => n3352);
   U3265 : GTECH_NAND2 port map( A => n3355, B => n3356, Z => n3273);
   U3266 : GTECH_NAND2 port map( A => n3266, B => n748, Z => n3356);
   U3267 : GTECH_NAND2 port map( A => n3357, B => n772, Z => n3355);
   U3268 : GTECH_NAND2 port map( A => n3358, B => n3359, Z => n3266);
   U3269 : GTECH_NAND2 port map( A => n3257, B => n773, Z => n3359);
   U3270 : GTECH_NAND2 port map( A => n3360, B => n801, Z => n3358);
   U3271 : GTECH_NAND2 port map( A => n3361, B => n3362, Z => n3257);
   U3272 : GTECH_NAND2 port map( A => n3250, B => n802, Z => n3362);
   U3273 : GTECH_NAND2 port map( A => n3363, B => n834, Z => n3361);
   U3274 : GTECH_NAND2 port map( A => n3364, B => n3365, Z => n3250);
   U3275 : GTECH_NAND2 port map( A => n3241, B => n835, Z => n3365);
   U3276 : GTECH_NAND2 port map( A => n3366, B => n876, Z => n3364);
   U3277 : GTECH_NAND2 port map( A => n3367, B => n3368, Z => n3241);
   U3278 : GTECH_NAND2 port map( A => n3234, B => n880, Z => n3368);
   U3279 : GTECH_NAND2 port map( A => n3369, B => n877, Z => n3367);
   U3280 : GTECH_NAND2 port map( A => n3370, B => n3371, Z => n3234);
   U3281 : GTECH_NAND2 port map( A => n3225, B => n878, Z => n3371);
   U3282 : GTECH_NAND2 port map( A => n3372, B => n946, Z => n3370);
   U3283 : GTECH_NAND2 port map( A => n3373, B => n3374, Z => n3225);
   U3284 : GTECH_NAND2 port map( A => n3218, B => n950, Z => n3374);
   U3285 : GTECH_NAND2 port map( A => n3375, B => n947, Z => n3373);
   U3286 : GTECH_NAND2 port map( A => n3376, B => n3377, Z => n3218);
   U3287 : GTECH_NAND2 port map( A => n3209, B => n948, Z => n3377);
   U3288 : GTECH_NAND2 port map( A => n3378, B => n1024, Z => n3376);
   U3289 : GTECH_NAND2 port map( A => n3379, B => n3380, Z => n3209);
   U3290 : GTECH_NAND2 port map( A => n3202, B => n1025, Z => n3380);
   U3291 : GTECH_NAND2 port map( A => n3381, B => n1085, Z => n3379);
   U3292 : GTECH_NAND2 port map( A => n3382, B => n3383, Z => n3202);
   U3293 : GTECH_NAND2 port map( A => n3193, B => n1089, Z => n3383);
   U3294 : GTECH_NAND2 port map( A => n3384, B => n1086, Z => n3382);
   U3295 : GTECH_NAND2 port map( A => n3385, B => n3386, Z => n3193);
   U3296 : GTECH_NAND2 port map( A => n3186, B => n1087, Z => n3386);
   U3297 : GTECH_NAND2 port map( A => n3387, B => n1189, Z => n3385);
   U3298 : GTECH_NAND2 port map( A => n3388, B => n3389, Z => n3186);
   U3299 : GTECH_NAND2 port map( A => n3177, B => n1193, Z => n3389);
   U3300 : GTECH_NAND2 port map( A => n3390, B => n1190, Z => n3388);
   U3301 : GTECH_NAND2 port map( A => n3391, B => n3392, Z => n3177);
   U3302 : GTECH_NAND2 port map( A => n3170, B => n1191, Z => n3392);
   U3303 : GTECH_NAND2 port map( A => n3393, B => n1307, Z => n3391);
   U3304 : GTECH_NAND2 port map( A => n3394, B => n3395, Z => n3170);
   U3305 : GTECH_NAND2 port map( A => n3161, B => n1311, Z => n3395);
   U3306 : GTECH_NAND2 port map( A => n3396, B => n1308, Z => n3394);
   U3307 : GTECH_NAND2 port map( A => n3397, B => n3398, Z => n3161);
   U3308 : GTECH_NAND2 port map( A => n3154, B => n1309, Z => n3398);
   U3309 : GTECH_NAND2 port map( A => n3399, B => n1444, Z => n3397);
   U3310 : GTECH_NAND2 port map( A => n3400, B => n3401, Z => n3154);
   U3311 : GTECH_NAND2 port map( A => n3145, B => n1451, Z => n3401);
   U3312 : GTECH_NAND2 port map( A => n3402, B => n1445, Z => n3400);
   U3313 : GTECH_NAND2 port map( A => n3403, B => n3404, Z => n3145);
   U3314 : GTECH_NAND2 port map( A => n3138, B => n1449, Z => n3404);
   U3315 : GTECH_NAND2 port map( A => n3405, B => n1446, Z => n3403);
   U3316 : GTECH_NAND2 port map( A => n3406, B => n3407, Z => n3138);
   U3317 : GTECH_NAND2 port map( A => n3130, B => n1447, Z => n3407);
   U3318 : GTECH_NAND2 port map( A => n3408, B => n1653, Z => n3406);
   U3319 : GTECH_NAND2 port map( A => n1654, B => n3409, Z => n3130);
   U3320 : GTECH_NAND2 port map( A => n3123, B => n3410, Z => n3409);
   U3321 : GTECH_NOR2 port map( A => n3410, B => n3123, Z => n3411);
   U3322 : GTECH_NOR2 port map( A => n1711, B => n1714, Z => n3123);
   U3323 : GTECH_NAND2 port map( A => B(27), B => A(0), Z => n3410);
   U3324 : GTECH_NAND2 port map( A => n3412, B => n3413, Z => n3408);
   U3325 : GTECH_NAND2 port map( A => n1448, B => n1725, Z => n3413);
   U3326 : GTECH_NAND2 port map( A => n3129, B => n3414, Z => n3412);
   U3327 : GTECH_NAND2 port map( A => n3415, B => n3416, Z => n3414);
   U3328 : GTECH_NOR2 port map( A => n1649, B => n1711, Z => n3415);
   U3329 : GTECH_NOR2 port map( A => n1921, B => n1748, Z => n3129);
   U3330 : GTECH_NAND2 port map( A => n3417, B => n3418, Z => n3405);
   U3331 : GTECH_NAND2 port map( A => n1760, B => n3136, Z => n3418);
   U3332 : GTECH_NAND2 port map( A => n1450, B => n3137, Z => n3417);
   U3333 : GTECH_NAND2 port map( A => B(24), B => A(3), Z => n3137);
   U3334 : GTECH_NAND2 port map( A => n3419, B => n3420, Z => n3136);
   U3335 : GTECH_NAND2 port map( A => n1458, B => n3421, Z => n3420);
   U3336 : GTECH_NAND2 port map( A => n1655, B => n1726, Z => n3421);
   U3337 : GTECH_NAND2 port map( A => n3422, B => n3423, Z => n3419);
   U3338 : GTECH_NAND2 port map( A => n3424, B => n3425, Z => n3402);
   U3339 : GTECH_NAND2 port map( A => n1792, B => n3144, Z => n3425);
   U3340 : GTECH_NAND2 port map( A => n1452, B => n3146, Z => n3424);
   U3341 : GTECH_NAND2 port map( A => B(23), B => A(4), Z => n3146);
   U3342 : GTECH_NAND2 port map( A => n3426, B => n3427, Z => n3144);
   U3343 : GTECH_NAND2 port map( A => n3428, B => n3429, Z => n3427);
   U3344 : GTECH_NAND2 port map( A => n1456, B => n3430, Z => n3428);
   U3345 : GTECH_NAND2 port map( A => n1761, B => n3431, Z => n3426);
   U3346 : GTECH_NAND2 port map( A => n3432, B => n3433, Z => n3399);
   U3347 : GTECH_NAND2 port map( A => n1310, B => n3152, Z => n3433);
   U3348 : GTECH_NAND2 port map( A => n1453, B => n3153, Z => n3432);
   U3349 : GTECH_NAND2 port map( A => B(22), B => A(5), Z => n3153);
   U3350 : GTECH_NAND2 port map( A => n3434, B => n3435, Z => n3152);
   U3351 : GTECH_NAND2 port map( A => n3436, B => n3437, Z => n3435);
   U3352 : GTECH_NAND2 port map( A => n3438, B => n3439, Z => n3436);
   U3353 : GTECH_NAND2 port map( A => n1793, B => n1455, Z => n3434);
   U3354 : GTECH_NAND2 port map( A => n3440, B => n3441, Z => n3396);
   U3355 : GTECH_NAND2 port map( A => n1822, B => n3160, Z => n3441);
   U3356 : GTECH_NAND2 port map( A => n1312, B => n3162, Z => n3440);
   U3357 : GTECH_NAND2 port map( A => B(21), B => A(6), Z => n3162);
   U3358 : GTECH_NAND2 port map( A => n3442, B => n3443, Z => n3160);
   U3359 : GTECH_NAND2 port map( A => n3444, B => n3445, Z => n3443);
   U3360 : GTECH_NAND2 port map( A => n1454, B => n3446, Z => n3444);
   U3361 : GTECH_NAND2 port map( A => n1317, B => n3447, Z => n3442);
   U3362 : GTECH_NAND2 port map( A => n3448, B => n3449, Z => n3393);
   U3363 : GTECH_NAND2 port map( A => n1192, B => n3168, Z => n3449);
   U3364 : GTECH_NAND2 port map( A => n1313, B => n3169, Z => n3448);
   U3365 : GTECH_NAND2 port map( A => B(20), B => A(7), Z => n3169);
   U3366 : GTECH_NAND2 port map( A => n3450, B => n3451, Z => n3168);
   U3367 : GTECH_NAND2 port map( A => n3452, B => n3453, Z => n3451);
   U3368 : GTECH_NAND2 port map( A => n3454, B => n3455, Z => n3452);
   U3369 : GTECH_NAND2 port map( A => n1823, B => n1315, Z => n3450);
   U3370 : GTECH_NAND2 port map( A => n3456, B => n3457, Z => n3390);
   U3371 : GTECH_NAND2 port map( A => n1848, B => n3176, Z => n3457);
   U3372 : GTECH_NAND2 port map( A => n1194, B => n3178, Z => n3456);
   U3373 : GTECH_NAND2 port map( A => B(19), B => A(8), Z => n3178);
   U3374 : GTECH_NAND2 port map( A => n3458, B => n3459, Z => n3176);
   U3375 : GTECH_NAND2 port map( A => n3460, B => n3461, Z => n3459);
   U3376 : GTECH_NAND2 port map( A => n1314, B => n3462, Z => n3460);
   U3377 : GTECH_NAND2 port map( A => n1199, B => n3463, Z => n3458);
   U3378 : GTECH_NAND2 port map( A => n3464, B => n3465, Z => n3387);
   U3379 : GTECH_NAND2 port map( A => n1088, B => n3184, Z => n3465);
   U3380 : GTECH_NAND2 port map( A => n1195, B => n3185, Z => n3464);
   U3381 : GTECH_NAND2 port map( A => B(18), B => A(9), Z => n3185);
   U3382 : GTECH_NAND2 port map( A => n3466, B => n3467, Z => n3184);
   U3383 : GTECH_NAND2 port map( A => n3468, B => n3469, Z => n3467);
   U3384 : GTECH_NAND2 port map( A => n3470, B => n3471, Z => n3468);
   U3385 : GTECH_NAND2 port map( A => n1849, B => n1197, Z => n3466);
   U3386 : GTECH_NAND2 port map( A => n3472, B => n3473, Z => n3384);
   U3387 : GTECH_NAND2 port map( A => n1870, B => n3192, Z => n3473);
   U3388 : GTECH_NAND2 port map( A => n1090, B => n3194, Z => n3472);
   U3389 : GTECH_NAND2 port map( A => B(17), B => A(10), Z => n3194);
   U3390 : GTECH_NAND2 port map( A => n3474, B => n3475, Z => n3192);
   U3391 : GTECH_NAND2 port map( A => n3476, B => n3477, Z => n3475);
   U3392 : GTECH_NAND2 port map( A => n1196, B => n3478, Z => n3476);
   U3393 : GTECH_NAND2 port map( A => n1095, B => n3479, Z => n3474);
   U3394 : GTECH_NAND2 port map( A => n3480, B => n3481, Z => n3381);
   U3395 : GTECH_NAND2 port map( A => n1026, B => n3200, Z => n3481);
   U3396 : GTECH_NAND2 port map( A => n1091, B => n3201, Z => n3480);
   U3397 : GTECH_NAND2 port map( A => B(16), B => A(11), Z => n3201);
   U3398 : GTECH_NAND2 port map( A => n3482, B => n3483, Z => n3200);
   U3399 : GTECH_NAND2 port map( A => n3484, B => n3485, Z => n3483);
   U3400 : GTECH_NAND2 port map( A => n3486, B => n3487, Z => n3484);
   U3401 : GTECH_NAND2 port map( A => n1871, B => n1093, Z => n3482);
   U3402 : GTECH_NAND2 port map( A => n3488, B => n3489, Z => n3378);
   U3403 : GTECH_NAND2 port map( A => n949, B => n3208, Z => n3489);
   U3404 : GTECH_NAND2 port map( A => n1027, B => n3210, Z => n3488);
   U3405 : GTECH_NAND2 port map( A => B(15), B => A(12), Z => n3210);
   U3406 : GTECH_NAND2 port map( A => n3490, B => n3491, Z => n3208);
   U3407 : GTECH_NAND2 port map( A => n3492, B => n3493, Z => n3491);
   U3408 : GTECH_NAND2 port map( A => n1092, B => n3494, Z => n3492);
   U3409 : GTECH_NAND2 port map( A => n1030, B => n3495, Z => n3490);
   U3410 : GTECH_NAND2 port map( A => n3496, B => n3497, Z => n3375);
   U3411 : GTECH_NAND2 port map( A => n1898, B => n3216, Z => n3497);
   U3412 : GTECH_NAND2 port map( A => n951, B => n3217, Z => n3496);
   U3413 : GTECH_NAND2 port map( A => B(14), B => A(13), Z => n3217);
   U3414 : GTECH_NAND2 port map( A => n3498, B => n3499, Z => n3216);
   U3415 : GTECH_NAND2 port map( A => n3500, B => n3501, Z => n3499);
   U3416 : GTECH_NAND2 port map( A => n3502, B => n3503, Z => n3500);
   U3417 : GTECH_NAND2 port map( A => n956, B => n1028, Z => n3498);
   U3418 : GTECH_NAND2 port map( A => n3504, B => n3505, Z => n3372);
   U3419 : GTECH_NAND2 port map( A => n879, B => n3224, Z => n3505);
   U3420 : GTECH_NAND2 port map( A => n952, B => n3226, Z => n3504);
   U3421 : GTECH_NAND2 port map( A => B(13), B => A(14), Z => n3226);
   U3422 : GTECH_NAND2 port map( A => n3506, B => n3507, Z => n3224);
   U3423 : GTECH_NAND2 port map( A => n3508, B => n3509, Z => n3507);
   U3424 : GTECH_NAND2 port map( A => n954, B => n3510, Z => n3508);
   U3425 : GTECH_NAND2 port map( A => n1899, B => n3511, Z => n3506);
   U3426 : GTECH_NAND2 port map( A => n3512, B => n3513, Z => n3369);
   U3427 : GTECH_NAND2 port map( A => n1888, B => n3232, Z => n3513);
   U3428 : GTECH_NAND2 port map( A => n881, B => n3233, Z => n3512);
   U3429 : GTECH_NAND2 port map( A => B(12), B => A(15), Z => n3233);
   U3430 : GTECH_NAND2 port map( A => n3514, B => n3515, Z => n3232);
   U3431 : GTECH_NAND2 port map( A => n3516, B => n3517, Z => n3515);
   U3432 : GTECH_NAND2 port map( A => n3518, B => n3519, Z => n3516);
   U3433 : GTECH_NAND2 port map( A => n886, B => n953, Z => n3514);
   U3434 : GTECH_NAND2 port map( A => n3520, B => n3521, Z => n3366);
   U3435 : GTECH_NAND2 port map( A => n836, B => n3240, Z => n3521);
   U3436 : GTECH_NAND2 port map( A => n882, B => n3242, Z => n3520);
   U3437 : GTECH_NAND2 port map( A => B(11), B => A(16), Z => n3242);
   U3438 : GTECH_NAND2 port map( A => n3522, B => n3523, Z => n3240);
   U3439 : GTECH_NAND2 port map( A => n3524, B => n3525, Z => n3523);
   U3440 : GTECH_NAND2 port map( A => n884, B => n3526, Z => n3524);
   U3441 : GTECH_NAND2 port map( A => n1889, B => n3527, Z => n3522);
   U3442 : GTECH_NAND2 port map( A => n3528, B => n3529, Z => n3363);
   U3443 : GTECH_NAND2 port map( A => n803, B => n3248, Z => n3529);
   U3444 : GTECH_NAND2 port map( A => n837, B => n3249, Z => n3528);
   U3445 : GTECH_NAND2 port map( A => B(10), B => A(17), Z => n3249);
   U3446 : GTECH_NAND2 port map( A => n3530, B => n3531, Z => n3248);
   U3447 : GTECH_NAND2 port map( A => n3532, B => n3533, Z => n3531);
   U3448 : GTECH_NAND2 port map( A => n3534, B => n3535, Z => n3532);
   U3449 : GTECH_NAND2 port map( A => n840, B => n883, Z => n3530);
   U3450 : GTECH_NAND2 port map( A => n3536, B => n3537, Z => n3360);
   U3451 : GTECH_NAND2 port map( A => n774, B => n3256, Z => n3537);
   U3452 : GTECH_NAND2 port map( A => n804, B => n3258, Z => n3536);
   U3453 : GTECH_NAND2 port map( A => B(9), B => A(18), Z => n3258);
   U3454 : GTECH_NAND2 port map( A => n3538, B => n3539, Z => n3256);
   U3455 : GTECH_NAND2 port map( A => n3540, B => n3541, Z => n3539);
   U3456 : GTECH_NAND2 port map( A => n838, B => n3542, Z => n3540);
   U3457 : GTECH_NAND2 port map( A => n807, B => n3543, Z => n3538);
   U3458 : GTECH_NAND2 port map( A => n3544, B => n3545, Z => n3357);
   U3459 : GTECH_NAND2 port map( A => n749, B => n3264, Z => n3545);
   U3460 : GTECH_NAND2 port map( A => n775, B => n3265, Z => n3544);
   U3461 : GTECH_NAND2 port map( A => B(8), B => A(19), Z => n3265);
   U3462 : GTECH_NAND2 port map( A => n3546, B => n3547, Z => n3264);
   U3463 : GTECH_NAND2 port map( A => n3548, B => n3549, Z => n3547);
   U3464 : GTECH_NAND2 port map( A => n3550, B => n3551, Z => n3548);
   U3465 : GTECH_NAND2 port map( A => n778, B => n805, Z => n3546);
   U3466 : GTECH_NAND2 port map( A => n3552, B => n3553, Z => n3354);
   U3467 : GTECH_NAND2 port map( A => n728, B => n3272, Z => n3553);
   U3468 : GTECH_NAND2 port map( A => n750, B => n3274, Z => n3552);
   U3469 : GTECH_NAND2 port map( A => B(7), B => A(20), Z => n3274);
   U3470 : GTECH_NAND2 port map( A => n3554, B => n3555, Z => n3272);
   U3471 : GTECH_NAND2 port map( A => n3556, B => n3557, Z => n3555);
   U3472 : GTECH_NAND2 port map( A => n776, B => n3558, Z => n3556);
   U3473 : GTECH_NAND2 port map( A => n753, B => n3559, Z => n3554);
   U3474 : GTECH_NAND2 port map( A => n3560, B => n3561, Z => n3351);
   U3475 : GTECH_NAND2 port map( A => n711, B => n3280, Z => n3561);
   U3476 : GTECH_NAND2 port map( A => n729, B => n3281, Z => n3560);
   U3477 : GTECH_NAND2 port map( A => B(6), B => A(21), Z => n3281);
   U3478 : GTECH_NAND2 port map( A => n3562, B => n3563, Z => n3280);
   U3479 : GTECH_NAND2 port map( A => n3564, B => n3565, Z => n3563);
   U3480 : GTECH_NAND2 port map( A => n3566, B => n3567, Z => n3564);
   U3481 : GTECH_NAND2 port map( A => n732, B => n751, Z => n3562);
   U3482 : GTECH_NAND2 port map( A => n3568, B => n3569, Z => n3348);
   U3483 : GTECH_NAND2 port map( A => n443, B => n3288, Z => n3569);
   U3484 : GTECH_NAND2 port map( A => n419, B => n3290, Z => n3568);
   U3485 : GTECH_NAND2 port map( A => B(5), B => A(22), Z => n3290);
   U3486 : GTECH_NAND2 port map( A => n3570, B => n3571, Z => n3288);
   U3487 : GTECH_NAND2 port map( A => n3572, B => n3573, Z => n3571);
   U3488 : GTECH_NAND2 port map( A => n730, B => n3574, Z => n3572);
   U3489 : GTECH_NAND2 port map( A => n444, B => n3575, Z => n3570);
   U3490 : GTECH_NAND2 port map( A => n3576, B => n3577, Z => n3345);
   U3491 : GTECH_NAND2 port map( A => n682, B => n3296, Z => n3577);
   U3492 : GTECH_NAND2 port map( A => n346, B => n3297, Z => n3576);
   U3493 : GTECH_NAND2 port map( A => B(4), B => A(23), Z => n3297);
   U3494 : GTECH_NAND2 port map( A => n3578, B => n3579, Z => n3296);
   U3495 : GTECH_NAND2 port map( A => n3580, B => n3581, Z => n3579);
   U3496 : GTECH_NAND2 port map( A => n3582, B => n3583, Z => n3580);
   U3497 : GTECH_NAND2 port map( A => n695, B => n414, Z => n3578);
   U3498 : GTECH_NAND2 port map( A => n3584, B => n3585, Z => n3342);
   U3499 : GTECH_NAND2 port map( A => n674, B => n3304, Z => n3585);
   U3500 : GTECH_NAND2 port map( A => n269, B => n3306, Z => n3584);
   U3501 : GTECH_NAND2 port map( A => B(3), B => A(24), Z => n3306);
   U3502 : GTECH_NAND2 port map( A => n3586, B => n3587, Z => n3304);
   U3503 : GTECH_NAND2 port map( A => n3588, B => n3589, Z => n3587);
   U3504 : GTECH_NAND2 port map( A => n341, B => n3590, Z => n3588);
   U3505 : GTECH_NAND2 port map( A => n683, B => n3591, Z => n3586);
   U3506 : GTECH_NAND2 port map( A => n3592, B => n3593, Z => n3339);
   U3507 : GTECH_NAND2 port map( A => n668, B => n3312, Z => n3593);
   U3508 : GTECH_NAND2 port map( A => n193, B => n3313, Z => n3592);
   U3509 : GTECH_NAND2 port map( A => B(2), B => A(25), Z => n3313);
   U3510 : GTECH_NAND2 port map( A => n3594, B => n3595, Z => n3312);
   U3511 : GTECH_NAND2 port map( A => n3596, B => n3597, Z => n3595);
   U3512 : GTECH_NAND2 port map( A => n3598, B => n3599, Z => n3596);
   U3513 : GTECH_NAND2 port map( A => n675, B => n264, Z => n3594);
   U3514 : GTECH_NAND2 port map( A => n3600, B => n3601, Z => n3336);
   U3515 : GTECH_NAND2 port map( A => n663, B => n3320, Z => n3601);
   U3516 : GTECH_NAND2 port map( A => n118, B => n3322, Z => n3600);
   U3517 : GTECH_NAND2 port map( A => A(26), B => B(1), Z => n3322);
   U3518 : GTECH_NAND2 port map( A => n3602, B => n3603, Z => n3320);
   U3519 : GTECH_NAND2 port map( A => n3604, B => n3605, Z => n3603);
   U3520 : GTECH_NAND2 port map( A => n188, B => n3606, Z => n3604);
   U3521 : GTECH_NAND2 port map( A => n669, B => n3607, Z => n3602);
   U3522 : GTECH_NAND2 port map( A => n3608, B => n3609, Z => n3333);
   U3523 : GTECH_NAND2 port map( A => n659, B => n3328, Z => n3609);
   U3524 : GTECH_NAND2 port map( A => n34, B => n3329, Z => n3608);
   U3525 : GTECH_NAND2 port map( A => A(27), B => B(0), Z => n3329);
   U3526 : GTECH_NAND2 port map( A => n3610, B => n3611, Z => n3328);
   U3527 : GTECH_NAND2 port map( A => n3612, B => n3613, Z => n3611);
   U3528 : GTECH_NAND2 port map( A => n3614, B => n3615, Z => n3612);
   U3529 : GTECH_NAND2 port map( A => n664, B => n113, Z => n3610);
   U3530 : GTECH_NAND2 port map( A => n3616, B => n3617, Z => PRODUCT(26));
   U3531 : GTECH_NAND2 port map( A => n3614, B => n31, Z => n3617);
   U3532 : GTECH_NAND2 port map( A => n3618, B => n113, Z => n3616);
   U3533 : GTECH_NAND2 port map( A => n3619, B => n3620, Z => n3614);
   U3534 : GTECH_NAND2 port map( A => n3607, B => n114, Z => n3620);
   U3535 : GTECH_NAND2 port map( A => n3621, B => n188, Z => n3619);
   U3536 : GTECH_NAND2 port map( A => n3622, B => n3623, Z => n3607);
   U3537 : GTECH_NAND2 port map( A => n3598, B => n189, Z => n3623);
   U3538 : GTECH_NAND2 port map( A => n3624, B => n264, Z => n3622);
   U3539 : GTECH_NAND2 port map( A => n3625, B => n3626, Z => n3598);
   U3540 : GTECH_NAND2 port map( A => n3591, B => n265, Z => n3626);
   U3541 : GTECH_NAND2 port map( A => n3627, B => n341, Z => n3625);
   U3542 : GTECH_NAND2 port map( A => n3628, B => n3629, Z => n3591);
   U3543 : GTECH_NAND2 port map( A => n3582, B => n342, Z => n3629);
   U3544 : GTECH_NAND2 port map( A => n3630, B => n414, Z => n3628);
   U3545 : GTECH_NAND2 port map( A => n3631, B => n3632, Z => n3582);
   U3546 : GTECH_NAND2 port map( A => n3575, B => n415, Z => n3632);
   U3547 : GTECH_NAND2 port map( A => n3633, B => n730, Z => n3631);
   U3548 : GTECH_NAND2 port map( A => n3634, B => n3635, Z => n3575);
   U3549 : GTECH_NAND2 port map( A => n3566, B => n731, Z => n3635);
   U3550 : GTECH_NAND2 port map( A => n3636, B => n751, Z => n3634);
   U3551 : GTECH_NAND2 port map( A => n3637, B => n3638, Z => n3566);
   U3552 : GTECH_NAND2 port map( A => n3559, B => n752, Z => n3638);
   U3553 : GTECH_NAND2 port map( A => n3639, B => n776, Z => n3637);
   U3554 : GTECH_NAND2 port map( A => n3640, B => n3641, Z => n3559);
   U3555 : GTECH_NAND2 port map( A => n3550, B => n777, Z => n3641);
   U3556 : GTECH_NAND2 port map( A => n3642, B => n805, Z => n3640);
   U3557 : GTECH_NAND2 port map( A => n3643, B => n3644, Z => n3550);
   U3558 : GTECH_NAND2 port map( A => n3543, B => n806, Z => n3644);
   U3559 : GTECH_NAND2 port map( A => n3645, B => n838, Z => n3643);
   U3560 : GTECH_NAND2 port map( A => n3646, B => n3647, Z => n3543);
   U3561 : GTECH_NAND2 port map( A => n3534, B => n839, Z => n3647);
   U3562 : GTECH_NAND2 port map( A => n3648, B => n883, Z => n3646);
   U3563 : GTECH_NAND2 port map( A => n3649, B => n3650, Z => n3534);
   U3564 : GTECH_NAND2 port map( A => n3527, B => n887, Z => n3650);
   U3565 : GTECH_NAND2 port map( A => n3651, B => n884, Z => n3649);
   U3566 : GTECH_NAND2 port map( A => n3652, B => n3653, Z => n3527);
   U3567 : GTECH_NAND2 port map( A => n3518, B => n885, Z => n3653);
   U3568 : GTECH_NAND2 port map( A => n3654, B => n953, Z => n3652);
   U3569 : GTECH_NAND2 port map( A => n3655, B => n3656, Z => n3518);
   U3570 : GTECH_NAND2 port map( A => n3511, B => n957, Z => n3656);
   U3571 : GTECH_NAND2 port map( A => n3657, B => n954, Z => n3655);
   U3572 : GTECH_NAND2 port map( A => n3658, B => n3659, Z => n3511);
   U3573 : GTECH_NAND2 port map( A => n3502, B => n955, Z => n3659);
   U3574 : GTECH_NAND2 port map( A => n3660, B => n1028, Z => n3658);
   U3575 : GTECH_NAND2 port map( A => n3661, B => n3662, Z => n3502);
   U3576 : GTECH_NAND2 port map( A => n3495, B => n1029, Z => n3662);
   U3577 : GTECH_NAND2 port map( A => n3663, B => n1092, Z => n3661);
   U3578 : GTECH_NAND2 port map( A => n3664, B => n3665, Z => n3495);
   U3579 : GTECH_NAND2 port map( A => n3486, B => n1096, Z => n3665);
   U3580 : GTECH_NAND2 port map( A => n3666, B => n1093, Z => n3664);
   U3581 : GTECH_NAND2 port map( A => n3667, B => n3668, Z => n3486);
   U3582 : GTECH_NAND2 port map( A => n3479, B => n1094, Z => n3668);
   U3583 : GTECH_NAND2 port map( A => n3669, B => n1196, Z => n3667);
   U3584 : GTECH_NAND2 port map( A => n3670, B => n3671, Z => n3479);
   U3585 : GTECH_NAND2 port map( A => n3470, B => n1200, Z => n3671);
   U3586 : GTECH_NAND2 port map( A => n3672, B => n1197, Z => n3670);
   U3587 : GTECH_NAND2 port map( A => n3673, B => n3674, Z => n3470);
   U3588 : GTECH_NAND2 port map( A => n3463, B => n1198, Z => n3674);
   U3589 : GTECH_NAND2 port map( A => n3675, B => n1314, Z => n3673);
   U3590 : GTECH_NAND2 port map( A => n3676, B => n3677, Z => n3463);
   U3591 : GTECH_NAND2 port map( A => n3454, B => n1318, Z => n3677);
   U3592 : GTECH_NAND2 port map( A => n3678, B => n1315, Z => n3676);
   U3593 : GTECH_NAND2 port map( A => n3679, B => n3680, Z => n3454);
   U3594 : GTECH_NAND2 port map( A => n3447, B => n1316, Z => n3680);
   U3595 : GTECH_NAND2 port map( A => n3681, B => n1454, Z => n3679);
   U3596 : GTECH_NAND2 port map( A => n3682, B => n3683, Z => n3447);
   U3597 : GTECH_NAND2 port map( A => n3438, B => n1461, Z => n3683);
   U3598 : GTECH_NAND2 port map( A => n3684, B => n1455, Z => n3682);
   U3599 : GTECH_NAND2 port map( A => n3685, B => n3686, Z => n3438);
   U3600 : GTECH_NAND2 port map( A => n3431, B => n1459, Z => n3686);
   U3601 : GTECH_NAND2 port map( A => n3687, B => n1456, Z => n3685);
   U3602 : GTECH_NAND2 port map( A => n3688, B => n3689, Z => n3431);
   U3603 : GTECH_NAND2 port map( A => n3423, B => n1457, Z => n3689);
   U3604 : GTECH_NAND2 port map( A => n3690, B => n1655, Z => n3688);
   U3605 : GTECH_NAND2 port map( A => n1656, B => n3691, Z => n3423);
   U3606 : GTECH_NAND2 port map( A => n3416, B => n3692, Z => n3691);
   U3607 : GTECH_NOR2 port map( A => n3692, B => n3416, Z => n3693);
   U3608 : GTECH_NOR2 port map( A => n1921, B => n1714, Z => n3416);
   U3609 : GTECH_NAND2 port map( A => B(26), B => A(0), Z => n3692);
   U3610 : GTECH_NAND2 port map( A => n3694, B => n3695, Z => n3690);
   U3611 : GTECH_NAND2 port map( A => n1458, B => n1726, Z => n3695);
   U3612 : GTECH_NAND2 port map( A => n3422, B => n3696, Z => n3694);
   U3613 : GTECH_NAND2 port map( A => n3697, B => n3698, Z => n3696);
   U3614 : GTECH_NOR2 port map( A => n1649, B => n1921, Z => n3697);
   U3615 : GTECH_NOR2 port map( A => n1920, B => n1748, Z => n3422);
   U3616 : GTECH_NAND2 port map( A => n3699, B => n3700, Z => n3687);
   U3617 : GTECH_NAND2 port map( A => n1761, B => n3429, Z => n3700);
   U3618 : GTECH_NAND2 port map( A => n1460, B => n3430, Z => n3699);
   U3619 : GTECH_NAND2 port map( A => B(23), B => A(3), Z => n3430);
   U3620 : GTECH_NAND2 port map( A => n3701, B => n3702, Z => n3429);
   U3621 : GTECH_NAND2 port map( A => n1468, B => n3703, Z => n3702);
   U3622 : GTECH_NAND2 port map( A => n1657, B => n1727, Z => n3703);
   U3623 : GTECH_NAND2 port map( A => n3704, B => n3705, Z => n3701);
   U3624 : GTECH_NAND2 port map( A => n3706, B => n3707, Z => n3684);
   U3625 : GTECH_NAND2 port map( A => n1793, B => n3437, Z => n3707);
   U3626 : GTECH_NAND2 port map( A => n1462, B => n3439, Z => n3706);
   U3627 : GTECH_NAND2 port map( A => B(22), B => A(4), Z => n3439);
   U3628 : GTECH_NAND2 port map( A => n3708, B => n3709, Z => n3437);
   U3629 : GTECH_NAND2 port map( A => n3710, B => n3711, Z => n3709);
   U3630 : GTECH_NAND2 port map( A => n1466, B => n3712, Z => n3710);
   U3631 : GTECH_NAND2 port map( A => n1762, B => n3713, Z => n3708);
   U3632 : GTECH_NAND2 port map( A => n3714, B => n3715, Z => n3681);
   U3633 : GTECH_NAND2 port map( A => n1317, B => n3445, Z => n3715);
   U3634 : GTECH_NAND2 port map( A => n1463, B => n3446, Z => n3714);
   U3635 : GTECH_NAND2 port map( A => B(21), B => A(5), Z => n3446);
   U3636 : GTECH_NAND2 port map( A => n3716, B => n3717, Z => n3445);
   U3637 : GTECH_NAND2 port map( A => n3718, B => n3719, Z => n3717);
   U3638 : GTECH_NAND2 port map( A => n3720, B => n3721, Z => n3718);
   U3639 : GTECH_NAND2 port map( A => n1794, B => n1465, Z => n3716);
   U3640 : GTECH_NAND2 port map( A => n3722, B => n3723, Z => n3678);
   U3641 : GTECH_NAND2 port map( A => n1823, B => n3453, Z => n3723);
   U3642 : GTECH_NAND2 port map( A => n1319, B => n3455, Z => n3722);
   U3643 : GTECH_NAND2 port map( A => B(20), B => A(6), Z => n3455);
   U3644 : GTECH_NAND2 port map( A => n3724, B => n3725, Z => n3453);
   U3645 : GTECH_NAND2 port map( A => n3726, B => n3727, Z => n3725);
   U3646 : GTECH_NAND2 port map( A => n1464, B => n3728, Z => n3726);
   U3647 : GTECH_NAND2 port map( A => n1324, B => n3729, Z => n3724);
   U3648 : GTECH_NAND2 port map( A => n3730, B => n3731, Z => n3675);
   U3649 : GTECH_NAND2 port map( A => n1199, B => n3461, Z => n3731);
   U3650 : GTECH_NAND2 port map( A => n1320, B => n3462, Z => n3730);
   U3651 : GTECH_NAND2 port map( A => B(19), B => A(7), Z => n3462);
   U3652 : GTECH_NAND2 port map( A => n3732, B => n3733, Z => n3461);
   U3653 : GTECH_NAND2 port map( A => n3734, B => n3735, Z => n3733);
   U3654 : GTECH_NAND2 port map( A => n3736, B => n3737, Z => n3734);
   U3655 : GTECH_NAND2 port map( A => n1824, B => n1322, Z => n3732);
   U3656 : GTECH_NAND2 port map( A => n3738, B => n3739, Z => n3672);
   U3657 : GTECH_NAND2 port map( A => n1849, B => n3469, Z => n3739);
   U3658 : GTECH_NAND2 port map( A => n1201, B => n3471, Z => n3738);
   U3659 : GTECH_NAND2 port map( A => B(18), B => A(8), Z => n3471);
   U3660 : GTECH_NAND2 port map( A => n3740, B => n3741, Z => n3469);
   U3661 : GTECH_NAND2 port map( A => n3742, B => n3743, Z => n3741);
   U3662 : GTECH_NAND2 port map( A => n1321, B => n3744, Z => n3742);
   U3663 : GTECH_NAND2 port map( A => n1206, B => n3745, Z => n3740);
   U3664 : GTECH_NAND2 port map( A => n3746, B => n3747, Z => n3669);
   U3665 : GTECH_NAND2 port map( A => n1095, B => n3477, Z => n3747);
   U3666 : GTECH_NAND2 port map( A => n1202, B => n3478, Z => n3746);
   U3667 : GTECH_NAND2 port map( A => B(17), B => A(9), Z => n3478);
   U3668 : GTECH_NAND2 port map( A => n3748, B => n3749, Z => n3477);
   U3669 : GTECH_NAND2 port map( A => n3750, B => n3751, Z => n3749);
   U3670 : GTECH_NAND2 port map( A => n3752, B => n3753, Z => n3750);
   U3671 : GTECH_NAND2 port map( A => n1850, B => n1204, Z => n3748);
   U3672 : GTECH_NAND2 port map( A => n3754, B => n3755, Z => n3666);
   U3673 : GTECH_NAND2 port map( A => n1871, B => n3485, Z => n3755);
   U3674 : GTECH_NAND2 port map( A => n1097, B => n3487, Z => n3754);
   U3675 : GTECH_NAND2 port map( A => B(16), B => A(10), Z => n3487);
   U3676 : GTECH_NAND2 port map( A => n3756, B => n3757, Z => n3485);
   U3677 : GTECH_NAND2 port map( A => n3758, B => n3759, Z => n3757);
   U3678 : GTECH_NAND2 port map( A => n1203, B => n3760, Z => n3758);
   U3679 : GTECH_NAND2 port map( A => n1102, B => n3761, Z => n3756);
   U3680 : GTECH_NAND2 port map( A => n3762, B => n3763, Z => n3663);
   U3681 : GTECH_NAND2 port map( A => n1030, B => n3493, Z => n3763);
   U3682 : GTECH_NAND2 port map( A => n1098, B => n3494, Z => n3762);
   U3683 : GTECH_NAND2 port map( A => B(15), B => A(11), Z => n3494);
   U3684 : GTECH_NAND2 port map( A => n3764, B => n3765, Z => n3493);
   U3685 : GTECH_NAND2 port map( A => n3766, B => n3767, Z => n3765);
   U3686 : GTECH_NAND2 port map( A => n3768, B => n3769, Z => n3766);
   U3687 : GTECH_NAND2 port map( A => n1872, B => n1100, Z => n3764);
   U3688 : GTECH_NAND2 port map( A => n3770, B => n3771, Z => n3660);
   U3689 : GTECH_NAND2 port map( A => n956, B => n3501, Z => n3771);
   U3690 : GTECH_NAND2 port map( A => n1031, B => n3503, Z => n3770);
   U3691 : GTECH_NAND2 port map( A => B(14), B => A(12), Z => n3503);
   U3692 : GTECH_NAND2 port map( A => n3772, B => n3773, Z => n3501);
   U3693 : GTECH_NAND2 port map( A => n3774, B => n3775, Z => n3773);
   U3694 : GTECH_NAND2 port map( A => n1099, B => n3776, Z => n3774);
   U3695 : GTECH_NAND2 port map( A => n1034, B => n3777, Z => n3772);
   U3696 : GTECH_NAND2 port map( A => n3778, B => n3779, Z => n3657);
   U3697 : GTECH_NAND2 port map( A => n1899, B => n3509, Z => n3779);
   U3698 : GTECH_NAND2 port map( A => n958, B => n3510, Z => n3778);
   U3699 : GTECH_NAND2 port map( A => B(13), B => A(13), Z => n3510);
   U3700 : GTECH_NAND2 port map( A => n3780, B => n3781, Z => n3509);
   U3701 : GTECH_NAND2 port map( A => n3782, B => n3783, Z => n3781);
   U3702 : GTECH_NAND2 port map( A => n3784, B => n3785, Z => n3782);
   U3703 : GTECH_NAND2 port map( A => n963, B => n1032, Z => n3780);
   U3704 : GTECH_NAND2 port map( A => n3786, B => n3787, Z => n3654);
   U3705 : GTECH_NAND2 port map( A => n886, B => n3517, Z => n3787);
   U3706 : GTECH_NAND2 port map( A => n959, B => n3519, Z => n3786);
   U3707 : GTECH_NAND2 port map( A => B(12), B => A(14), Z => n3519);
   U3708 : GTECH_NAND2 port map( A => n3788, B => n3789, Z => n3517);
   U3709 : GTECH_NAND2 port map( A => n3790, B => n3791, Z => n3789);
   U3710 : GTECH_NAND2 port map( A => n961, B => n3792, Z => n3790);
   U3711 : GTECH_NAND2 port map( A => n1900, B => n3793, Z => n3788);
   U3712 : GTECH_NAND2 port map( A => n3794, B => n3795, Z => n3651);
   U3713 : GTECH_NAND2 port map( A => n1889, B => n3525, Z => n3795);
   U3714 : GTECH_NAND2 port map( A => n888, B => n3526, Z => n3794);
   U3715 : GTECH_NAND2 port map( A => B(11), B => A(15), Z => n3526);
   U3716 : GTECH_NAND2 port map( A => n3796, B => n3797, Z => n3525);
   U3717 : GTECH_NAND2 port map( A => n3798, B => n3799, Z => n3797);
   U3718 : GTECH_NAND2 port map( A => n3800, B => n3801, Z => n3798);
   U3719 : GTECH_NAND2 port map( A => n893, B => n960, Z => n3796);
   U3720 : GTECH_NAND2 port map( A => n3802, B => n3803, Z => n3648);
   U3721 : GTECH_NAND2 port map( A => n840, B => n3533, Z => n3803);
   U3722 : GTECH_NAND2 port map( A => n889, B => n3535, Z => n3802);
   U3723 : GTECH_NAND2 port map( A => B(10), B => A(16), Z => n3535);
   U3724 : GTECH_NAND2 port map( A => n3804, B => n3805, Z => n3533);
   U3725 : GTECH_NAND2 port map( A => n3806, B => n3807, Z => n3805);
   U3726 : GTECH_NAND2 port map( A => n891, B => n3808, Z => n3806);
   U3727 : GTECH_NAND2 port map( A => n1882, B => n3809, Z => n3804);
   U3728 : GTECH_NAND2 port map( A => n3810, B => n3811, Z => n3645);
   U3729 : GTECH_NAND2 port map( A => n807, B => n3541, Z => n3811);
   U3730 : GTECH_NAND2 port map( A => n841, B => n3542, Z => n3810);
   U3731 : GTECH_NAND2 port map( A => B(9), B => A(17), Z => n3542);
   U3732 : GTECH_NAND2 port map( A => n3812, B => n3813, Z => n3541);
   U3733 : GTECH_NAND2 port map( A => n3814, B => n3815, Z => n3813);
   U3734 : GTECH_NAND2 port map( A => n3816, B => n3817, Z => n3814);
   U3735 : GTECH_NAND2 port map( A => n844, B => n890, Z => n3812);
   U3736 : GTECH_NAND2 port map( A => n3818, B => n3819, Z => n3642);
   U3737 : GTECH_NAND2 port map( A => n778, B => n3549, Z => n3819);
   U3738 : GTECH_NAND2 port map( A => n808, B => n3551, Z => n3818);
   U3739 : GTECH_NAND2 port map( A => B(8), B => A(18), Z => n3551);
   U3740 : GTECH_NAND2 port map( A => n3820, B => n3821, Z => n3549);
   U3741 : GTECH_NAND2 port map( A => n3822, B => n3823, Z => n3821);
   U3742 : GTECH_NAND2 port map( A => n842, B => n3824, Z => n3822);
   U3743 : GTECH_NAND2 port map( A => n811, B => n3825, Z => n3820);
   U3744 : GTECH_NAND2 port map( A => n3826, B => n3827, Z => n3639);
   U3745 : GTECH_NAND2 port map( A => n753, B => n3557, Z => n3827);
   U3746 : GTECH_NAND2 port map( A => n779, B => n3558, Z => n3826);
   U3747 : GTECH_NAND2 port map( A => B(7), B => A(19), Z => n3558);
   U3748 : GTECH_NAND2 port map( A => n3828, B => n3829, Z => n3557);
   U3749 : GTECH_NAND2 port map( A => n3830, B => n3831, Z => n3829);
   U3750 : GTECH_NAND2 port map( A => n3832, B => n3833, Z => n3830);
   U3751 : GTECH_NAND2 port map( A => n782, B => n809, Z => n3828);
   U3752 : GTECH_NAND2 port map( A => n3834, B => n3835, Z => n3636);
   U3753 : GTECH_NAND2 port map( A => n732, B => n3565, Z => n3835);
   U3754 : GTECH_NAND2 port map( A => n754, B => n3567, Z => n3834);
   U3755 : GTECH_NAND2 port map( A => B(6), B => A(20), Z => n3567);
   U3756 : GTECH_NAND2 port map( A => n3836, B => n3837, Z => n3565);
   U3757 : GTECH_NAND2 port map( A => n3838, B => n3839, Z => n3837);
   U3758 : GTECH_NAND2 port map( A => n780, B => n3840, Z => n3838);
   U3759 : GTECH_NAND2 port map( A => n757, B => n3841, Z => n3836);
   U3760 : GTECH_NAND2 port map( A => n3842, B => n3843, Z => n3633);
   U3761 : GTECH_NAND2 port map( A => n444, B => n3573, Z => n3843);
   U3762 : GTECH_NAND2 port map( A => n416, B => n3574, Z => n3842);
   U3763 : GTECH_NAND2 port map( A => B(5), B => A(21), Z => n3574);
   U3764 : GTECH_NAND2 port map( A => n3844, B => n3845, Z => n3573);
   U3765 : GTECH_NAND2 port map( A => n3846, B => n3847, Z => n3845);
   U3766 : GTECH_NAND2 port map( A => n3848, B => n3849, Z => n3846);
   U3767 : GTECH_NAND2 port map( A => n445, B => n755, Z => n3844);
   U3768 : GTECH_NAND2 port map( A => n3850, B => n3851, Z => n3630);
   U3769 : GTECH_NAND2 port map( A => n695, B => n3581, Z => n3851);
   U3770 : GTECH_NAND2 port map( A => n343, B => n3583, Z => n3850);
   U3771 : GTECH_NAND2 port map( A => B(4), B => A(22), Z => n3583);
   U3772 : GTECH_NAND2 port map( A => n3852, B => n3853, Z => n3581);
   U3773 : GTECH_NAND2 port map( A => n3854, B => n3855, Z => n3853);
   U3774 : GTECH_NAND2 port map( A => n411, B => n3856, Z => n3854);
   U3775 : GTECH_NAND2 port map( A => n712, B => n3857, Z => n3852);
   U3776 : GTECH_NAND2 port map( A => n3858, B => n3859, Z => n3627);
   U3777 : GTECH_NAND2 port map( A => n683, B => n3589, Z => n3859);
   U3778 : GTECH_NAND2 port map( A => n266, B => n3590, Z => n3858);
   U3779 : GTECH_NAND2 port map( A => B(3), B => A(23), Z => n3590);
   U3780 : GTECH_NAND2 port map( A => n3860, B => n3861, Z => n3589);
   U3781 : GTECH_NAND2 port map( A => n3862, B => n3863, Z => n3861);
   U3782 : GTECH_NAND2 port map( A => n3864, B => n3865, Z => n3862);
   U3783 : GTECH_NAND2 port map( A => n696, B => n338, Z => n3860);
   U3784 : GTECH_NAND2 port map( A => n3866, B => n3867, Z => n3624);
   U3785 : GTECH_NAND2 port map( A => n675, B => n3597, Z => n3867);
   U3786 : GTECH_NAND2 port map( A => n190, B => n3599, Z => n3866);
   U3787 : GTECH_NAND2 port map( A => B(2), B => A(24), Z => n3599);
   U3788 : GTECH_NAND2 port map( A => n3868, B => n3869, Z => n3597);
   U3789 : GTECH_NAND2 port map( A => n3870, B => n3871, Z => n3869);
   U3790 : GTECH_NAND2 port map( A => n261, B => n3872, Z => n3870);
   U3791 : GTECH_NAND2 port map( A => n684, B => n3873, Z => n3868);
   U3792 : GTECH_NAND2 port map( A => n3874, B => n3875, Z => n3621);
   U3793 : GTECH_NAND2 port map( A => n669, B => n3605, Z => n3875);
   U3794 : GTECH_NAND2 port map( A => n115, B => n3606, Z => n3874);
   U3795 : GTECH_NAND2 port map( A => A(25), B => B(1), Z => n3606);
   U3796 : GTECH_NAND2 port map( A => n3876, B => n3877, Z => n3605);
   U3797 : GTECH_NAND2 port map( A => n3878, B => n3879, Z => n3877);
   U3798 : GTECH_NAND2 port map( A => n3880, B => n3881, Z => n3878);
   U3799 : GTECH_NAND2 port map( A => n676, B => n185, Z => n3876);
   U3800 : GTECH_NAND2 port map( A => n3882, B => n3883, Z => n3618);
   U3801 : GTECH_NAND2 port map( A => n664, B => n3613, Z => n3883);
   U3802 : GTECH_NAND2 port map( A => n32, B => n3615, Z => n3882);
   U3803 : GTECH_NAND2 port map( A => A(26), B => B(0), Z => n3615);
   U3804 : GTECH_NAND2 port map( A => n3884, B => n3885, Z => n3613);
   U3805 : GTECH_NAND2 port map( A => n3886, B => n3887, Z => n3885);
   U3806 : GTECH_NAND2 port map( A => n110, B => n3888, Z => n3886);
   U3807 : GTECH_NAND2 port map( A => n670, B => n3889, Z => n3884);
   U3808 : GTECH_NOR2 port map( A => n3890, B => n3891, Z => PRODUCT(25));
   U3809 : GTECH_NOR2 port map( A => n3889, B => n29, Z => n3891);
   U3810 : GTECH_NOR2 port map( A => n3892, B => n110, Z => n3890);
   U3811 : GTECH_NAND2 port map( A => n3893, B => n3894, Z => n3889);
   U3812 : GTECH_NAND2 port map( A => n3880, B => n111, Z => n3894);
   U3813 : GTECH_NAND2 port map( A => n3895, B => n185, Z => n3893);
   U3814 : GTECH_NAND2 port map( A => n3896, B => n3897, Z => n3880);
   U3815 : GTECH_NAND2 port map( A => n3873, B => n186, Z => n3897);
   U3816 : GTECH_NAND2 port map( A => n3898, B => n261, Z => n3896);
   U3817 : GTECH_NAND2 port map( A => n3899, B => n3900, Z => n3873);
   U3818 : GTECH_NAND2 port map( A => n3864, B => n262, Z => n3900);
   U3819 : GTECH_NAND2 port map( A => n3901, B => n338, Z => n3899);
   U3820 : GTECH_NAND2 port map( A => n3902, B => n3903, Z => n3864);
   U3821 : GTECH_NAND2 port map( A => n3857, B => n339, Z => n3903);
   U3822 : GTECH_NAND2 port map( A => n3904, B => n411, Z => n3902);
   U3823 : GTECH_NAND2 port map( A => n3905, B => n3906, Z => n3857);
   U3824 : GTECH_NAND2 port map( A => n3848, B => n412, Z => n3906);
   U3825 : GTECH_NAND2 port map( A => n3907, B => n755, Z => n3905);
   U3826 : GTECH_NAND2 port map( A => n3908, B => n3909, Z => n3848);
   U3827 : GTECH_NAND2 port map( A => n3841, B => n756, Z => n3909);
   U3828 : GTECH_NAND2 port map( A => n3910, B => n780, Z => n3908);
   U3829 : GTECH_NAND2 port map( A => n3911, B => n3912, Z => n3841);
   U3830 : GTECH_NAND2 port map( A => n3832, B => n781, Z => n3912);
   U3831 : GTECH_NAND2 port map( A => n3913, B => n809, Z => n3911);
   U3832 : GTECH_NAND2 port map( A => n3914, B => n3915, Z => n3832);
   U3833 : GTECH_NAND2 port map( A => n3825, B => n810, Z => n3915);
   U3834 : GTECH_NAND2 port map( A => n3916, B => n842, Z => n3914);
   U3835 : GTECH_NAND2 port map( A => n3917, B => n3918, Z => n3825);
   U3836 : GTECH_NAND2 port map( A => n3816, B => n843, Z => n3918);
   U3837 : GTECH_NAND2 port map( A => n3919, B => n890, Z => n3917);
   U3838 : GTECH_NAND2 port map( A => n3920, B => n3921, Z => n3816);
   U3839 : GTECH_NAND2 port map( A => n3809, B => n894, Z => n3921);
   U3840 : GTECH_NAND2 port map( A => n3922, B => n891, Z => n3920);
   U3841 : GTECH_NAND2 port map( A => n3923, B => n3924, Z => n3809);
   U3842 : GTECH_NAND2 port map( A => n3800, B => n892, Z => n3924);
   U3843 : GTECH_NAND2 port map( A => n3925, B => n960, Z => n3923);
   U3844 : GTECH_NAND2 port map( A => n3926, B => n3927, Z => n3800);
   U3845 : GTECH_NAND2 port map( A => n3793, B => n964, Z => n3927);
   U3846 : GTECH_NAND2 port map( A => n3928, B => n961, Z => n3926);
   U3847 : GTECH_NAND2 port map( A => n3929, B => n3930, Z => n3793);
   U3848 : GTECH_NAND2 port map( A => n3784, B => n962, Z => n3930);
   U3849 : GTECH_NAND2 port map( A => n3931, B => n1032, Z => n3929);
   U3850 : GTECH_NAND2 port map( A => n3932, B => n3933, Z => n3784);
   U3851 : GTECH_NAND2 port map( A => n3777, B => n1033, Z => n3933);
   U3852 : GTECH_NAND2 port map( A => n3934, B => n1099, Z => n3932);
   U3853 : GTECH_NAND2 port map( A => n3935, B => n3936, Z => n3777);
   U3854 : GTECH_NAND2 port map( A => n3768, B => n1103, Z => n3936);
   U3855 : GTECH_NAND2 port map( A => n3937, B => n1100, Z => n3935);
   U3856 : GTECH_NAND2 port map( A => n3938, B => n3939, Z => n3768);
   U3857 : GTECH_NAND2 port map( A => n3761, B => n1101, Z => n3939);
   U3858 : GTECH_NAND2 port map( A => n3940, B => n1203, Z => n3938);
   U3859 : GTECH_NAND2 port map( A => n3941, B => n3942, Z => n3761);
   U3860 : GTECH_NAND2 port map( A => n3752, B => n1207, Z => n3942);
   U3861 : GTECH_NAND2 port map( A => n3943, B => n1204, Z => n3941);
   U3862 : GTECH_NAND2 port map( A => n3944, B => n3945, Z => n3752);
   U3863 : GTECH_NAND2 port map( A => n3745, B => n1205, Z => n3945);
   U3864 : GTECH_NAND2 port map( A => n3946, B => n1321, Z => n3944);
   U3865 : GTECH_NAND2 port map( A => n3947, B => n3948, Z => n3745);
   U3866 : GTECH_NAND2 port map( A => n3736, B => n1325, Z => n3948);
   U3867 : GTECH_NAND2 port map( A => n3949, B => n1322, Z => n3947);
   U3868 : GTECH_NAND2 port map( A => n3950, B => n3951, Z => n3736);
   U3869 : GTECH_NAND2 port map( A => n3729, B => n1323, Z => n3951);
   U3870 : GTECH_NAND2 port map( A => n3952, B => n1464, Z => n3950);
   U3871 : GTECH_NAND2 port map( A => n3953, B => n3954, Z => n3729);
   U3872 : GTECH_NAND2 port map( A => n3720, B => n1471, Z => n3954);
   U3873 : GTECH_NAND2 port map( A => n3955, B => n1465, Z => n3953);
   U3874 : GTECH_NAND2 port map( A => n3956, B => n3957, Z => n3720);
   U3875 : GTECH_NAND2 port map( A => n3713, B => n1469, Z => n3957);
   U3876 : GTECH_NAND2 port map( A => n3958, B => n1466, Z => n3956);
   U3877 : GTECH_NAND2 port map( A => n3959, B => n3960, Z => n3713);
   U3878 : GTECH_NAND2 port map( A => n3705, B => n1467, Z => n3960);
   U3879 : GTECH_NAND2 port map( A => n3961, B => n1657, Z => n3959);
   U3880 : GTECH_NAND2 port map( A => n1658, B => n3962, Z => n3705);
   U3881 : GTECH_NAND2 port map( A => n3698, B => n3963, Z => n3962);
   U3882 : GTECH_NOR2 port map( A => n3963, B => n3698, Z => n3964);
   U3883 : GTECH_NOR2 port map( A => n1920, B => n1714, Z => n3698);
   U3884 : GTECH_NAND2 port map( A => B(25), B => A(0), Z => n3963);
   U3885 : GTECH_NAND2 port map( A => n3965, B => n3966, Z => n3961);
   U3886 : GTECH_NAND2 port map( A => n1468, B => n1727, Z => n3966);
   U3887 : GTECH_NAND2 port map( A => n3704, B => n3967, Z => n3965);
   U3888 : GTECH_NAND2 port map( A => n3968, B => n3969, Z => n3967);
   U3889 : GTECH_NOR2 port map( A => n1649, B => n1920, Z => n3968);
   U3890 : GTECH_NOR2 port map( A => n1919, B => n1748, Z => n3704);
   U3891 : GTECH_NAND2 port map( A => n3970, B => n3971, Z => n3958);
   U3892 : GTECH_NAND2 port map( A => n1762, B => n3711, Z => n3971);
   U3893 : GTECH_NAND2 port map( A => n1470, B => n3712, Z => n3970);
   U3894 : GTECH_NAND2 port map( A => B(22), B => A(3), Z => n3712);
   U3895 : GTECH_NAND2 port map( A => n3972, B => n3973, Z => n3711);
   U3896 : GTECH_NAND2 port map( A => n1478, B => n3974, Z => n3973);
   U3897 : GTECH_NAND2 port map( A => n1659, B => n1728, Z => n3974);
   U3898 : GTECH_NAND2 port map( A => n3975, B => n3976, Z => n3972);
   U3899 : GTECH_NAND2 port map( A => n3977, B => n3978, Z => n3955);
   U3900 : GTECH_NAND2 port map( A => n1794, B => n3719, Z => n3978);
   U3901 : GTECH_NAND2 port map( A => n1472, B => n3721, Z => n3977);
   U3902 : GTECH_NAND2 port map( A => B(21), B => A(4), Z => n3721);
   U3903 : GTECH_NAND2 port map( A => n3979, B => n3980, Z => n3719);
   U3904 : GTECH_NAND2 port map( A => n3981, B => n3982, Z => n3980);
   U3905 : GTECH_NAND2 port map( A => n1476, B => n3983, Z => n3981);
   U3906 : GTECH_NAND2 port map( A => n1763, B => n3984, Z => n3979);
   U3907 : GTECH_NAND2 port map( A => n3985, B => n3986, Z => n3952);
   U3908 : GTECH_NAND2 port map( A => n1324, B => n3727, Z => n3986);
   U3909 : GTECH_NAND2 port map( A => n1473, B => n3728, Z => n3985);
   U3910 : GTECH_NAND2 port map( A => B(20), B => A(5), Z => n3728);
   U3911 : GTECH_NAND2 port map( A => n3987, B => n3988, Z => n3727);
   U3912 : GTECH_NAND2 port map( A => n3989, B => n3990, Z => n3988);
   U3913 : GTECH_NAND2 port map( A => n3991, B => n3992, Z => n3989);
   U3914 : GTECH_NAND2 port map( A => n1795, B => n1475, Z => n3987);
   U3915 : GTECH_NAND2 port map( A => n3993, B => n3994, Z => n3949);
   U3916 : GTECH_NAND2 port map( A => n1824, B => n3735, Z => n3994);
   U3917 : GTECH_NAND2 port map( A => n1326, B => n3737, Z => n3993);
   U3918 : GTECH_NAND2 port map( A => B(19), B => A(6), Z => n3737);
   U3919 : GTECH_NAND2 port map( A => n3995, B => n3996, Z => n3735);
   U3920 : GTECH_NAND2 port map( A => n3997, B => n3998, Z => n3996);
   U3921 : GTECH_NAND2 port map( A => n1474, B => n3999, Z => n3997);
   U3922 : GTECH_NAND2 port map( A => n1331, B => n4000, Z => n3995);
   U3923 : GTECH_NAND2 port map( A => n4001, B => n4002, Z => n3946);
   U3924 : GTECH_NAND2 port map( A => n1206, B => n3743, Z => n4002);
   U3925 : GTECH_NAND2 port map( A => n1327, B => n3744, Z => n4001);
   U3926 : GTECH_NAND2 port map( A => B(18), B => A(7), Z => n3744);
   U3927 : GTECH_NAND2 port map( A => n4003, B => n4004, Z => n3743);
   U3928 : GTECH_NAND2 port map( A => n4005, B => n4006, Z => n4004);
   U3929 : GTECH_NAND2 port map( A => n4007, B => n4008, Z => n4005);
   U3930 : GTECH_NAND2 port map( A => n1825, B => n1329, Z => n4003);
   U3931 : GTECH_NAND2 port map( A => n4009, B => n4010, Z => n3943);
   U3932 : GTECH_NAND2 port map( A => n1850, B => n3751, Z => n4010);
   U3933 : GTECH_NAND2 port map( A => n1208, B => n3753, Z => n4009);
   U3934 : GTECH_NAND2 port map( A => B(17), B => A(8), Z => n3753);
   U3935 : GTECH_NAND2 port map( A => n4011, B => n4012, Z => n3751);
   U3936 : GTECH_NAND2 port map( A => n4013, B => n4014, Z => n4012);
   U3937 : GTECH_NAND2 port map( A => n1328, B => n4015, Z => n4013);
   U3938 : GTECH_NAND2 port map( A => n1213, B => n4016, Z => n4011);
   U3939 : GTECH_NAND2 port map( A => n4017, B => n4018, Z => n3940);
   U3940 : GTECH_NAND2 port map( A => n1102, B => n3759, Z => n4018);
   U3941 : GTECH_NAND2 port map( A => n1209, B => n3760, Z => n4017);
   U3942 : GTECH_NAND2 port map( A => B(16), B => A(9), Z => n3760);
   U3943 : GTECH_NAND2 port map( A => n4019, B => n4020, Z => n3759);
   U3944 : GTECH_NAND2 port map( A => n4021, B => n4022, Z => n4020);
   U3945 : GTECH_NAND2 port map( A => n4023, B => n4024, Z => n4021);
   U3946 : GTECH_NAND2 port map( A => n1851, B => n1211, Z => n4019);
   U3947 : GTECH_NAND2 port map( A => n4025, B => n4026, Z => n3937);
   U3948 : GTECH_NAND2 port map( A => n1872, B => n3767, Z => n4026);
   U3949 : GTECH_NAND2 port map( A => n1104, B => n3769, Z => n4025);
   U3950 : GTECH_NAND2 port map( A => B(15), B => A(10), Z => n3769);
   U3951 : GTECH_NAND2 port map( A => n4027, B => n4028, Z => n3767);
   U3952 : GTECH_NAND2 port map( A => n4029, B => n4030, Z => n4028);
   U3953 : GTECH_NAND2 port map( A => n1210, B => n4031, Z => n4029);
   U3954 : GTECH_NAND2 port map( A => n1109, B => n4032, Z => n4027);
   U3955 : GTECH_NAND2 port map( A => n4033, B => n4034, Z => n3934);
   U3956 : GTECH_NAND2 port map( A => n1034, B => n3775, Z => n4034);
   U3957 : GTECH_NAND2 port map( A => n1105, B => n3776, Z => n4033);
   U3958 : GTECH_NAND2 port map( A => B(14), B => A(11), Z => n3776);
   U3959 : GTECH_NAND2 port map( A => n4035, B => n4036, Z => n3775);
   U3960 : GTECH_NAND2 port map( A => n4037, B => n4038, Z => n4036);
   U3961 : GTECH_NAND2 port map( A => n4039, B => n4040, Z => n4037);
   U3962 : GTECH_NAND2 port map( A => n1873, B => n1107, Z => n4035);
   U3963 : GTECH_NAND2 port map( A => n4041, B => n4042, Z => n3931);
   U3964 : GTECH_NAND2 port map( A => n963, B => n3783, Z => n4042);
   U3965 : GTECH_NAND2 port map( A => n1035, B => n3785, Z => n4041);
   U3966 : GTECH_NAND2 port map( A => B(13), B => A(12), Z => n3785);
   U3967 : GTECH_NAND2 port map( A => n4043, B => n4044, Z => n3783);
   U3968 : GTECH_NAND2 port map( A => n4045, B => n4046, Z => n4044);
   U3969 : GTECH_NAND2 port map( A => n1106, B => n4047, Z => n4045);
   U3970 : GTECH_NAND2 port map( A => n1038, B => n4048, Z => n4043);
   U3971 : GTECH_NAND2 port map( A => n4049, B => n4050, Z => n3928);
   U3972 : GTECH_NAND2 port map( A => n1900, B => n3791, Z => n4050);
   U3973 : GTECH_NAND2 port map( A => n965, B => n3792, Z => n4049);
   U3974 : GTECH_NAND2 port map( A => B(12), B => A(13), Z => n3792);
   U3975 : GTECH_NAND2 port map( A => n4051, B => n4052, Z => n3791);
   U3976 : GTECH_NAND2 port map( A => n4053, B => n4054, Z => n4052);
   U3977 : GTECH_NAND2 port map( A => n4055, B => n4056, Z => n4053);
   U3978 : GTECH_NAND2 port map( A => n970, B => n1036, Z => n4051);
   U3979 : GTECH_NAND2 port map( A => n4057, B => n4058, Z => n3925);
   U3980 : GTECH_NAND2 port map( A => n893, B => n3799, Z => n4058);
   U3981 : GTECH_NAND2 port map( A => n966, B => n3801, Z => n4057);
   U3982 : GTECH_NAND2 port map( A => B(11), B => A(14), Z => n3801);
   U3983 : GTECH_NAND2 port map( A => n4059, B => n4060, Z => n3799);
   U3984 : GTECH_NAND2 port map( A => n4061, B => n4062, Z => n4060);
   U3985 : GTECH_NAND2 port map( A => n968, B => n4063, Z => n4061);
   U3986 : GTECH_NAND2 port map( A => n1901, B => n4064, Z => n4059);
   U3987 : GTECH_NAND2 port map( A => n4065, B => n4066, Z => n3922);
   U3988 : GTECH_NAND2 port map( A => n1882, B => n3807, Z => n4066);
   U3989 : GTECH_NAND2 port map( A => n895, B => n3808, Z => n4065);
   U3990 : GTECH_NAND2 port map( A => B(10), B => A(15), Z => n3808);
   U3991 : GTECH_NAND2 port map( A => n4067, B => n4068, Z => n3807);
   U3992 : GTECH_NAND2 port map( A => n4069, B => n4070, Z => n4068);
   U3993 : GTECH_NAND2 port map( A => n4071, B => n4072, Z => n4069);
   U3994 : GTECH_NAND2 port map( A => n900, B => n967, Z => n4067);
   U3995 : GTECH_NAND2 port map( A => n4073, B => n4074, Z => n3919);
   U3996 : GTECH_NAND2 port map( A => n844, B => n3815, Z => n4074);
   U3997 : GTECH_NAND2 port map( A => n896, B => n3817, Z => n4073);
   U3998 : GTECH_NAND2 port map( A => B(9), B => A(16), Z => n3817);
   U3999 : GTECH_NAND2 port map( A => n4075, B => n4076, Z => n3815);
   U4000 : GTECH_NAND2 port map( A => n4077, B => n4078, Z => n4076);
   U4001 : GTECH_NAND2 port map( A => n898, B => n4079, Z => n4077);
   U4002 : GTECH_NAND2 port map( A => n1890, B => n4080, Z => n4075);
   U4003 : GTECH_NAND2 port map( A => n4081, B => n4082, Z => n3916);
   U4004 : GTECH_NAND2 port map( A => n811, B => n3823, Z => n4082);
   U4005 : GTECH_NAND2 port map( A => n845, B => n3824, Z => n4081);
   U4006 : GTECH_NAND2 port map( A => B(8), B => A(17), Z => n3824);
   U4007 : GTECH_NAND2 port map( A => n4083, B => n4084, Z => n3823);
   U4008 : GTECH_NAND2 port map( A => n4085, B => n4086, Z => n4084);
   U4009 : GTECH_NAND2 port map( A => n4087, B => n4088, Z => n4085);
   U4010 : GTECH_NAND2 port map( A => n848, B => n897, Z => n4083);
   U4011 : GTECH_NAND2 port map( A => n4089, B => n4090, Z => n3913);
   U4012 : GTECH_NAND2 port map( A => n782, B => n3831, Z => n4090);
   U4013 : GTECH_NAND2 port map( A => n812, B => n3833, Z => n4089);
   U4014 : GTECH_NAND2 port map( A => B(7), B => A(18), Z => n3833);
   U4015 : GTECH_NAND2 port map( A => n4091, B => n4092, Z => n3831);
   U4016 : GTECH_NAND2 port map( A => n4093, B => n4094, Z => n4092);
   U4017 : GTECH_NAND2 port map( A => n846, B => n4095, Z => n4093);
   U4018 : GTECH_NAND2 port map( A => n815, B => n4096, Z => n4091);
   U4019 : GTECH_NAND2 port map( A => n4097, B => n4098, Z => n3910);
   U4020 : GTECH_NAND2 port map( A => n757, B => n3839, Z => n4098);
   U4021 : GTECH_NAND2 port map( A => n783, B => n3840, Z => n4097);
   U4022 : GTECH_NAND2 port map( A => B(6), B => A(19), Z => n3840);
   U4023 : GTECH_NAND2 port map( A => n4099, B => n4100, Z => n3839);
   U4024 : GTECH_NAND2 port map( A => n4101, B => n4102, Z => n4100);
   U4025 : GTECH_NAND2 port map( A => n4103, B => n4104, Z => n4101);
   U4026 : GTECH_NAND2 port map( A => n786, B => n813, Z => n4099);
   U4027 : GTECH_NAND2 port map( A => n4105, B => n4106, Z => n3907);
   U4028 : GTECH_NAND2 port map( A => n445, B => n3847, Z => n4106);
   U4029 : GTECH_NAND2 port map( A => n413, B => n3849, Z => n4105);
   U4030 : GTECH_NAND2 port map( A => B(5), B => A(20), Z => n3849);
   U4031 : GTECH_NAND2 port map( A => n4107, B => n4108, Z => n3847);
   U4032 : GTECH_NAND2 port map( A => n4109, B => n4110, Z => n4108);
   U4033 : GTECH_NAND2 port map( A => n784, B => n4111, Z => n4109);
   U4034 : GTECH_NAND2 port map( A => n446, B => n4112, Z => n4107);
   U4035 : GTECH_NAND2 port map( A => n4113, B => n4114, Z => n3904);
   U4036 : GTECH_NAND2 port map( A => n712, B => n3855, Z => n4114);
   U4037 : GTECH_NAND2 port map( A => n340, B => n3856, Z => n4113);
   U4038 : GTECH_NAND2 port map( A => B(4), B => A(21), Z => n3856);
   U4039 : GTECH_NAND2 port map( A => n4115, B => n4116, Z => n3855);
   U4040 : GTECH_NAND2 port map( A => n4117, B => n4118, Z => n4116);
   U4041 : GTECH_NAND2 port map( A => n4119, B => n4120, Z => n4117);
   U4042 : GTECH_NAND2 port map( A => n733, B => n408, Z => n4115);
   U4043 : GTECH_NAND2 port map( A => n4121, B => n4122, Z => n3901);
   U4044 : GTECH_NAND2 port map( A => n696, B => n3863, Z => n4122);
   U4045 : GTECH_NAND2 port map( A => n263, B => n3865, Z => n4121);
   U4046 : GTECH_NAND2 port map( A => B(3), B => A(22), Z => n3865);
   U4047 : GTECH_NAND2 port map( A => n4123, B => n4124, Z => n3863);
   U4048 : GTECH_NAND2 port map( A => n4125, B => n4126, Z => n4124);
   U4049 : GTECH_NAND2 port map( A => n335, B => n4127, Z => n4125);
   U4050 : GTECH_NAND2 port map( A => n713, B => n4128, Z => n4123);
   U4051 : GTECH_NAND2 port map( A => n4129, B => n4130, Z => n3898);
   U4052 : GTECH_NAND2 port map( A => n684, B => n3871, Z => n4130);
   U4053 : GTECH_NAND2 port map( A => n187, B => n3872, Z => n4129);
   U4054 : GTECH_NAND2 port map( A => B(2), B => A(23), Z => n3872);
   U4055 : GTECH_NAND2 port map( A => n4131, B => n4132, Z => n3871);
   U4056 : GTECH_NAND2 port map( A => n4133, B => n4134, Z => n4132);
   U4057 : GTECH_NAND2 port map( A => n4135, B => n4136, Z => n4133);
   U4058 : GTECH_NAND2 port map( A => n697, B => n258, Z => n4131);
   U4059 : GTECH_NAND2 port map( A => n4137, B => n4138, Z => n3895);
   U4060 : GTECH_NAND2 port map( A => n676, B => n3879, Z => n4138);
   U4061 : GTECH_NAND2 port map( A => n112, B => n3881, Z => n4137);
   U4062 : GTECH_NAND2 port map( A => A(24), B => B(1), Z => n3881);
   U4063 : GTECH_NAND2 port map( A => n4139, B => n4140, Z => n3879);
   U4064 : GTECH_NAND2 port map( A => n4141, B => n4142, Z => n4140);
   U4065 : GTECH_NAND2 port map( A => n182, B => n4143, Z => n4141);
   U4066 : GTECH_NAND2 port map( A => n685, B => n4144, Z => n4139);
   U4067 : GTECH_NAND2 port map( A => n4145, B => n4146, Z => n3892);
   U4068 : GTECH_NAND2 port map( A => n670, B => n3887, Z => n4146);
   U4069 : GTECH_NAND2 port map( A => n30, B => n3888, Z => n4145);
   U4070 : GTECH_NAND2 port map( A => A(25), B => B(0), Z => n3888);
   U4071 : GTECH_NAND2 port map( A => n4147, B => n4148, Z => n3887);
   U4072 : GTECH_NAND2 port map( A => n4149, B => n4150, Z => n4148);
   U4073 : GTECH_NAND2 port map( A => n4151, B => n4152, Z => n4149);
   U4074 : GTECH_NAND2 port map( A => n677, B => n107, Z => n4147);
   U4075 : GTECH_NAND2 port map( A => n4153, B => n4154, Z => PRODUCT(24));
   U4076 : GTECH_NAND2 port map( A => n4151, B => n27, Z => n4154);
   U4077 : GTECH_NAND2 port map( A => n4155, B => n107, Z => n4153);
   U4078 : GTECH_NAND2 port map( A => n4156, B => n4157, Z => n4151);
   U4079 : GTECH_NAND2 port map( A => n4144, B => n108, Z => n4157);
   U4080 : GTECH_NAND2 port map( A => n4158, B => n182, Z => n4156);
   U4081 : GTECH_NAND2 port map( A => n4159, B => n4160, Z => n4144);
   U4082 : GTECH_NAND2 port map( A => n4135, B => n183, Z => n4160);
   U4083 : GTECH_NAND2 port map( A => n4161, B => n258, Z => n4159);
   U4084 : GTECH_NAND2 port map( A => n4162, B => n4163, Z => n4135);
   U4085 : GTECH_NAND2 port map( A => n4128, B => n259, Z => n4163);
   U4086 : GTECH_NAND2 port map( A => n4164, B => n335, Z => n4162);
   U4087 : GTECH_NAND2 port map( A => n4165, B => n4166, Z => n4128);
   U4088 : GTECH_NAND2 port map( A => n4119, B => n336, Z => n4166);
   U4089 : GTECH_NAND2 port map( A => n4167, B => n408, Z => n4165);
   U4090 : GTECH_NAND2 port map( A => n4168, B => n4169, Z => n4119);
   U4091 : GTECH_NAND2 port map( A => n4112, B => n409, Z => n4169);
   U4092 : GTECH_NAND2 port map( A => n4170, B => n784, Z => n4168);
   U4093 : GTECH_NAND2 port map( A => n4171, B => n4172, Z => n4112);
   U4094 : GTECH_NAND2 port map( A => n4103, B => n785, Z => n4172);
   U4095 : GTECH_NAND2 port map( A => n4173, B => n813, Z => n4171);
   U4096 : GTECH_NAND2 port map( A => n4174, B => n4175, Z => n4103);
   U4097 : GTECH_NAND2 port map( A => n4096, B => n814, Z => n4175);
   U4098 : GTECH_NAND2 port map( A => n4176, B => n846, Z => n4174);
   U4099 : GTECH_NAND2 port map( A => n4177, B => n4178, Z => n4096);
   U4100 : GTECH_NAND2 port map( A => n4087, B => n847, Z => n4178);
   U4101 : GTECH_NAND2 port map( A => n4179, B => n897, Z => n4177);
   U4102 : GTECH_NAND2 port map( A => n4180, B => n4181, Z => n4087);
   U4103 : GTECH_NAND2 port map( A => n4080, B => n901, Z => n4181);
   U4104 : GTECH_NAND2 port map( A => n4182, B => n898, Z => n4180);
   U4105 : GTECH_NAND2 port map( A => n4183, B => n4184, Z => n4080);
   U4106 : GTECH_NAND2 port map( A => n4071, B => n899, Z => n4184);
   U4107 : GTECH_NAND2 port map( A => n4185, B => n967, Z => n4183);
   U4108 : GTECH_NAND2 port map( A => n4186, B => n4187, Z => n4071);
   U4109 : GTECH_NAND2 port map( A => n4064, B => n971, Z => n4187);
   U4110 : GTECH_NAND2 port map( A => n4188, B => n968, Z => n4186);
   U4111 : GTECH_NAND2 port map( A => n4189, B => n4190, Z => n4064);
   U4112 : GTECH_NAND2 port map( A => n4055, B => n969, Z => n4190);
   U4113 : GTECH_NAND2 port map( A => n4191, B => n1036, Z => n4189);
   U4114 : GTECH_NAND2 port map( A => n4192, B => n4193, Z => n4055);
   U4115 : GTECH_NAND2 port map( A => n4048, B => n1037, Z => n4193);
   U4116 : GTECH_NAND2 port map( A => n4194, B => n1106, Z => n4192);
   U4117 : GTECH_NAND2 port map( A => n4195, B => n4196, Z => n4048);
   U4118 : GTECH_NAND2 port map( A => n4039, B => n1110, Z => n4196);
   U4119 : GTECH_NAND2 port map( A => n4197, B => n1107, Z => n4195);
   U4120 : GTECH_NAND2 port map( A => n4198, B => n4199, Z => n4039);
   U4121 : GTECH_NAND2 port map( A => n4032, B => n1108, Z => n4199);
   U4122 : GTECH_NAND2 port map( A => n4200, B => n1210, Z => n4198);
   U4123 : GTECH_NAND2 port map( A => n4201, B => n4202, Z => n4032);
   U4124 : GTECH_NAND2 port map( A => n4023, B => n1214, Z => n4202);
   U4125 : GTECH_NAND2 port map( A => n4203, B => n1211, Z => n4201);
   U4126 : GTECH_NAND2 port map( A => n4204, B => n4205, Z => n4023);
   U4127 : GTECH_NAND2 port map( A => n4016, B => n1212, Z => n4205);
   U4128 : GTECH_NAND2 port map( A => n4206, B => n1328, Z => n4204);
   U4129 : GTECH_NAND2 port map( A => n4207, B => n4208, Z => n4016);
   U4130 : GTECH_NAND2 port map( A => n4007, B => n1332, Z => n4208);
   U4131 : GTECH_NAND2 port map( A => n4209, B => n1329, Z => n4207);
   U4132 : GTECH_NAND2 port map( A => n4210, B => n4211, Z => n4007);
   U4133 : GTECH_NAND2 port map( A => n4000, B => n1330, Z => n4211);
   U4134 : GTECH_NAND2 port map( A => n4212, B => n1474, Z => n4210);
   U4135 : GTECH_NAND2 port map( A => n4213, B => n4214, Z => n4000);
   U4136 : GTECH_NAND2 port map( A => n3991, B => n1481, Z => n4214);
   U4137 : GTECH_NAND2 port map( A => n4215, B => n1475, Z => n4213);
   U4138 : GTECH_NAND2 port map( A => n4216, B => n4217, Z => n3991);
   U4139 : GTECH_NAND2 port map( A => n3984, B => n1479, Z => n4217);
   U4140 : GTECH_NAND2 port map( A => n4218, B => n1476, Z => n4216);
   U4141 : GTECH_NAND2 port map( A => n4219, B => n4220, Z => n3984);
   U4142 : GTECH_NAND2 port map( A => n3976, B => n1477, Z => n4220);
   U4143 : GTECH_NAND2 port map( A => n4221, B => n1659, Z => n4219);
   U4144 : GTECH_NAND2 port map( A => n1660, B => n4222, Z => n3976);
   U4145 : GTECH_NAND2 port map( A => n3969, B => n4223, Z => n4222);
   U4146 : GTECH_NOR2 port map( A => n4223, B => n3969, Z => n4224);
   U4147 : GTECH_NOR2 port map( A => n1919, B => n1714, Z => n3969);
   U4148 : GTECH_NAND2 port map( A => B(24), B => A(0), Z => n4223);
   U4149 : GTECH_NAND2 port map( A => n4225, B => n4226, Z => n4221);
   U4150 : GTECH_NAND2 port map( A => n1478, B => n1728, Z => n4226);
   U4151 : GTECH_NAND2 port map( A => n3975, B => n4227, Z => n4225);
   U4152 : GTECH_NAND2 port map( A => n4228, B => n4229, Z => n4227);
   U4153 : GTECH_NOR2 port map( A => n1649, B => n1919, Z => n4228);
   U4154 : GTECH_NOR2 port map( A => n1914, B => n1748, Z => n3975);
   U4155 : GTECH_NAND2 port map( A => n4230, B => n4231, Z => n4218);
   U4156 : GTECH_NAND2 port map( A => n1763, B => n3982, Z => n4231);
   U4157 : GTECH_NAND2 port map( A => n1480, B => n3983, Z => n4230);
   U4158 : GTECH_NAND2 port map( A => B(21), B => A(3), Z => n3983);
   U4159 : GTECH_NAND2 port map( A => n4232, B => n4233, Z => n3982);
   U4160 : GTECH_NAND2 port map( A => n1488, B => n4234, Z => n4233);
   U4161 : GTECH_NAND2 port map( A => n1661, B => n1729, Z => n4234);
   U4162 : GTECH_NAND2 port map( A => n4235, B => n4236, Z => n4232);
   U4163 : GTECH_NAND2 port map( A => n4237, B => n4238, Z => n4215);
   U4164 : GTECH_NAND2 port map( A => n1795, B => n3990, Z => n4238);
   U4165 : GTECH_NAND2 port map( A => n1482, B => n3992, Z => n4237);
   U4166 : GTECH_NAND2 port map( A => B(20), B => A(4), Z => n3992);
   U4167 : GTECH_NAND2 port map( A => n4239, B => n4240, Z => n3990);
   U4168 : GTECH_NAND2 port map( A => n4241, B => n4242, Z => n4240);
   U4169 : GTECH_NAND2 port map( A => n1486, B => n4243, Z => n4241);
   U4170 : GTECH_NAND2 port map( A => n1764, B => n4244, Z => n4239);
   U4171 : GTECH_NAND2 port map( A => n4245, B => n4246, Z => n4212);
   U4172 : GTECH_NAND2 port map( A => n1331, B => n3998, Z => n4246);
   U4173 : GTECH_NAND2 port map( A => n1483, B => n3999, Z => n4245);
   U4174 : GTECH_NAND2 port map( A => B(19), B => A(5), Z => n3999);
   U4175 : GTECH_NAND2 port map( A => n4247, B => n4248, Z => n3998);
   U4176 : GTECH_NAND2 port map( A => n4249, B => n4250, Z => n4248);
   U4177 : GTECH_NAND2 port map( A => n4251, B => n4252, Z => n4249);
   U4178 : GTECH_NAND2 port map( A => n1796, B => n1485, Z => n4247);
   U4179 : GTECH_NAND2 port map( A => n4253, B => n4254, Z => n4209);
   U4180 : GTECH_NAND2 port map( A => n1825, B => n4006, Z => n4254);
   U4181 : GTECH_NAND2 port map( A => n1333, B => n4008, Z => n4253);
   U4182 : GTECH_NAND2 port map( A => B(18), B => A(6), Z => n4008);
   U4183 : GTECH_NAND2 port map( A => n4255, B => n4256, Z => n4006);
   U4184 : GTECH_NAND2 port map( A => n4257, B => n4258, Z => n4256);
   U4185 : GTECH_NAND2 port map( A => n1484, B => n4259, Z => n4257);
   U4186 : GTECH_NAND2 port map( A => n1338, B => n4260, Z => n4255);
   U4187 : GTECH_NAND2 port map( A => n4261, B => n4262, Z => n4206);
   U4188 : GTECH_NAND2 port map( A => n1213, B => n4014, Z => n4262);
   U4189 : GTECH_NAND2 port map( A => n1334, B => n4015, Z => n4261);
   U4190 : GTECH_NAND2 port map( A => B(17), B => A(7), Z => n4015);
   U4191 : GTECH_NAND2 port map( A => n4263, B => n4264, Z => n4014);
   U4192 : GTECH_NAND2 port map( A => n4265, B => n4266, Z => n4264);
   U4193 : GTECH_NAND2 port map( A => n4267, B => n4268, Z => n4265);
   U4194 : GTECH_NAND2 port map( A => n1826, B => n1336, Z => n4263);
   U4195 : GTECH_NAND2 port map( A => n4269, B => n4270, Z => n4203);
   U4196 : GTECH_NAND2 port map( A => n1851, B => n4022, Z => n4270);
   U4197 : GTECH_NAND2 port map( A => n1215, B => n4024, Z => n4269);
   U4198 : GTECH_NAND2 port map( A => B(16), B => A(8), Z => n4024);
   U4199 : GTECH_NAND2 port map( A => n4271, B => n4272, Z => n4022);
   U4200 : GTECH_NAND2 port map( A => n4273, B => n4274, Z => n4272);
   U4201 : GTECH_NAND2 port map( A => n1335, B => n4275, Z => n4273);
   U4202 : GTECH_NAND2 port map( A => n1220, B => n4276, Z => n4271);
   U4203 : GTECH_NAND2 port map( A => n4277, B => n4278, Z => n4200);
   U4204 : GTECH_NAND2 port map( A => n1109, B => n4030, Z => n4278);
   U4205 : GTECH_NAND2 port map( A => n1216, B => n4031, Z => n4277);
   U4206 : GTECH_NAND2 port map( A => B(15), B => A(9), Z => n4031);
   U4207 : GTECH_NAND2 port map( A => n4279, B => n4280, Z => n4030);
   U4208 : GTECH_NAND2 port map( A => n4281, B => n4282, Z => n4280);
   U4209 : GTECH_NAND2 port map( A => n4283, B => n4284, Z => n4281);
   U4210 : GTECH_NAND2 port map( A => n1852, B => n1218, Z => n4279);
   U4211 : GTECH_NAND2 port map( A => n4285, B => n4286, Z => n4197);
   U4212 : GTECH_NAND2 port map( A => n1873, B => n4038, Z => n4286);
   U4213 : GTECH_NAND2 port map( A => n1111, B => n4040, Z => n4285);
   U4214 : GTECH_NAND2 port map( A => B(14), B => A(10), Z => n4040);
   U4215 : GTECH_NAND2 port map( A => n4287, B => n4288, Z => n4038);
   U4216 : GTECH_NAND2 port map( A => n4289, B => n4290, Z => n4288);
   U4217 : GTECH_NAND2 port map( A => n1217, B => n4291, Z => n4289);
   U4218 : GTECH_NAND2 port map( A => n1116, B => n4292, Z => n4287);
   U4219 : GTECH_NAND2 port map( A => n4293, B => n4294, Z => n4194);
   U4220 : GTECH_NAND2 port map( A => n1038, B => n4046, Z => n4294);
   U4221 : GTECH_NAND2 port map( A => n1112, B => n4047, Z => n4293);
   U4222 : GTECH_NAND2 port map( A => B(13), B => A(11), Z => n4047);
   U4223 : GTECH_NAND2 port map( A => n4295, B => n4296, Z => n4046);
   U4224 : GTECH_NAND2 port map( A => n4297, B => n4298, Z => n4296);
   U4225 : GTECH_NAND2 port map( A => n4299, B => n4300, Z => n4297);
   U4226 : GTECH_NAND2 port map( A => n1874, B => n1114, Z => n4295);
   U4227 : GTECH_NAND2 port map( A => n4301, B => n4302, Z => n4191);
   U4228 : GTECH_NAND2 port map( A => n970, B => n4054, Z => n4302);
   U4229 : GTECH_NAND2 port map( A => n1039, B => n4056, Z => n4301);
   U4230 : GTECH_NAND2 port map( A => B(12), B => A(12), Z => n4056);
   U4231 : GTECH_NAND2 port map( A => n4303, B => n4304, Z => n4054);
   U4232 : GTECH_NAND2 port map( A => n4305, B => n4306, Z => n4304);
   U4233 : GTECH_NAND2 port map( A => n1113, B => n4307, Z => n4305);
   U4234 : GTECH_NAND2 port map( A => n1042, B => n4308, Z => n4303);
   U4235 : GTECH_NAND2 port map( A => n4309, B => n4310, Z => n4188);
   U4236 : GTECH_NAND2 port map( A => n1901, B => n4062, Z => n4310);
   U4237 : GTECH_NAND2 port map( A => n972, B => n4063, Z => n4309);
   U4238 : GTECH_NAND2 port map( A => B(11), B => A(13), Z => n4063);
   U4239 : GTECH_NAND2 port map( A => n4311, B => n4312, Z => n4062);
   U4240 : GTECH_NAND2 port map( A => n4313, B => n4314, Z => n4312);
   U4241 : GTECH_NAND2 port map( A => n4315, B => n4316, Z => n4313);
   U4242 : GTECH_NAND2 port map( A => n977, B => n1040, Z => n4311);
   U4243 : GTECH_NAND2 port map( A => n4317, B => n4318, Z => n4185);
   U4244 : GTECH_NAND2 port map( A => n900, B => n4070, Z => n4318);
   U4245 : GTECH_NAND2 port map( A => n973, B => n4072, Z => n4317);
   U4246 : GTECH_NAND2 port map( A => B(10), B => A(14), Z => n4072);
   U4247 : GTECH_NAND2 port map( A => n4319, B => n4320, Z => n4070);
   U4248 : GTECH_NAND2 port map( A => n4321, B => n4322, Z => n4320);
   U4249 : GTECH_NAND2 port map( A => n975, B => n4323, Z => n4321);
   U4250 : GTECH_NAND2 port map( A => n1883, B => n4324, Z => n4319);
   U4251 : GTECH_NAND2 port map( A => n4325, B => n4326, Z => n4182);
   U4252 : GTECH_NAND2 port map( A => n1890, B => n4078, Z => n4326);
   U4253 : GTECH_NAND2 port map( A => n902, B => n4079, Z => n4325);
   U4254 : GTECH_NAND2 port map( A => B(9), B => A(15), Z => n4079);
   U4255 : GTECH_NAND2 port map( A => n4327, B => n4328, Z => n4078);
   U4256 : GTECH_NAND2 port map( A => n4329, B => n4330, Z => n4328);
   U4257 : GTECH_NAND2 port map( A => n4331, B => n4332, Z => n4329);
   U4258 : GTECH_NAND2 port map( A => n907, B => n974, Z => n4327);
   U4259 : GTECH_NAND2 port map( A => n4333, B => n4334, Z => n4179);
   U4260 : GTECH_NAND2 port map( A => n848, B => n4086, Z => n4334);
   U4261 : GTECH_NAND2 port map( A => n903, B => n4088, Z => n4333);
   U4262 : GTECH_NAND2 port map( A => B(8), B => A(16), Z => n4088);
   U4263 : GTECH_NAND2 port map( A => n4335, B => n4336, Z => n4086);
   U4264 : GTECH_NAND2 port map( A => n4337, B => n4338, Z => n4336);
   U4265 : GTECH_NAND2 port map( A => n905, B => n4339, Z => n4337);
   U4266 : GTECH_NAND2 port map( A => n1863, B => n4340, Z => n4335);
   U4267 : GTECH_NAND2 port map( A => n4341, B => n4342, Z => n4176);
   U4268 : GTECH_NAND2 port map( A => n815, B => n4094, Z => n4342);
   U4269 : GTECH_NAND2 port map( A => n849, B => n4095, Z => n4341);
   U4270 : GTECH_NAND2 port map( A => B(7), B => A(17), Z => n4095);
   U4271 : GTECH_NAND2 port map( A => n4343, B => n4344, Z => n4094);
   U4272 : GTECH_NAND2 port map( A => n4345, B => n4346, Z => n4344);
   U4273 : GTECH_NAND2 port map( A => n4347, B => n4348, Z => n4345);
   U4274 : GTECH_NAND2 port map( A => n852, B => n904, Z => n4343);
   U4275 : GTECH_NAND2 port map( A => n4349, B => n4350, Z => n4173);
   U4276 : GTECH_NAND2 port map( A => n786, B => n4102, Z => n4350);
   U4277 : GTECH_NAND2 port map( A => n816, B => n4104, Z => n4349);
   U4278 : GTECH_NAND2 port map( A => B(6), B => A(18), Z => n4104);
   U4279 : GTECH_NAND2 port map( A => n4351, B => n4352, Z => n4102);
   U4280 : GTECH_NAND2 port map( A => n4353, B => n4354, Z => n4352);
   U4281 : GTECH_NAND2 port map( A => n850, B => n4355, Z => n4353);
   U4282 : GTECH_NAND2 port map( A => n819, B => n4356, Z => n4351);
   U4283 : GTECH_NAND2 port map( A => n4357, B => n4358, Z => n4170);
   U4284 : GTECH_NAND2 port map( A => n446, B => n4110, Z => n4358);
   U4285 : GTECH_NAND2 port map( A => n410, B => n4111, Z => n4357);
   U4286 : GTECH_NAND2 port map( A => B(5), B => A(19), Z => n4111);
   U4287 : GTECH_NAND2 port map( A => n4359, B => n4360, Z => n4110);
   U4288 : GTECH_NAND2 port map( A => n4361, B => n4362, Z => n4360);
   U4289 : GTECH_NAND2 port map( A => n4363, B => n4364, Z => n4361);
   U4290 : GTECH_NAND2 port map( A => n447, B => n817, Z => n4359);
   U4291 : GTECH_NAND2 port map( A => n4365, B => n4366, Z => n4167);
   U4292 : GTECH_NAND2 port map( A => n733, B => n4118, Z => n4366);
   U4293 : GTECH_NAND2 port map( A => n337, B => n4120, Z => n4365);
   U4294 : GTECH_NAND2 port map( A => B(4), B => A(20), Z => n4120);
   U4295 : GTECH_NAND2 port map( A => n4367, B => n4368, Z => n4118);
   U4296 : GTECH_NAND2 port map( A => n4369, B => n4370, Z => n4368);
   U4297 : GTECH_NAND2 port map( A => n405, B => n4371, Z => n4369);
   U4298 : GTECH_NAND2 port map( A => n758, B => n4372, Z => n4367);
   U4299 : GTECH_NAND2 port map( A => n4373, B => n4374, Z => n4164);
   U4300 : GTECH_NAND2 port map( A => n713, B => n4126, Z => n4374);
   U4301 : GTECH_NAND2 port map( A => n260, B => n4127, Z => n4373);
   U4302 : GTECH_NAND2 port map( A => B(3), B => A(21), Z => n4127);
   U4303 : GTECH_NAND2 port map( A => n4375, B => n4376, Z => n4126);
   U4304 : GTECH_NAND2 port map( A => n4377, B => n4378, Z => n4376);
   U4305 : GTECH_NAND2 port map( A => n4379, B => n4380, Z => n4377);
   U4306 : GTECH_NAND2 port map( A => n734, B => n332, Z => n4375);
   U4307 : GTECH_NAND2 port map( A => n4381, B => n4382, Z => n4161);
   U4308 : GTECH_NAND2 port map( A => n697, B => n4134, Z => n4382);
   U4309 : GTECH_NAND2 port map( A => n184, B => n4136, Z => n4381);
   U4310 : GTECH_NAND2 port map( A => B(2), B => A(22), Z => n4136);
   U4311 : GTECH_NAND2 port map( A => n4383, B => n4384, Z => n4134);
   U4312 : GTECH_NAND2 port map( A => n4385, B => n4386, Z => n4384);
   U4313 : GTECH_NAND2 port map( A => n255, B => n4387, Z => n4385);
   U4314 : GTECH_NAND2 port map( A => n714, B => n4388, Z => n4383);
   U4315 : GTECH_NAND2 port map( A => n4389, B => n4390, Z => n4158);
   U4316 : GTECH_NAND2 port map( A => n685, B => n4142, Z => n4390);
   U4317 : GTECH_NAND2 port map( A => n109, B => n4143, Z => n4389);
   U4318 : GTECH_NAND2 port map( A => A(23), B => B(1), Z => n4143);
   U4319 : GTECH_NAND2 port map( A => n4391, B => n4392, Z => n4142);
   U4320 : GTECH_NAND2 port map( A => n4393, B => n4394, Z => n4392);
   U4321 : GTECH_NAND2 port map( A => n4395, B => n4396, Z => n4393);
   U4322 : GTECH_NAND2 port map( A => n698, B => n179, Z => n4391);
   U4323 : GTECH_NAND2 port map( A => n4397, B => n4398, Z => n4155);
   U4324 : GTECH_NAND2 port map( A => n677, B => n4150, Z => n4398);
   U4325 : GTECH_NAND2 port map( A => n28, B => n4152, Z => n4397);
   U4326 : GTECH_NAND2 port map( A => A(24), B => B(0), Z => n4152);
   U4327 : GTECH_NAND2 port map( A => n4399, B => n4400, Z => n4150);
   U4328 : GTECH_NAND2 port map( A => n4401, B => n4402, Z => n4400);
   U4329 : GTECH_NAND2 port map( A => n104, B => n4403, Z => n4401);
   U4330 : GTECH_NAND2 port map( A => n686, B => n4404, Z => n4399);
   U4331 : GTECH_NOR2 port map( A => n4405, B => n4406, Z => PRODUCT(23));
   U4332 : GTECH_NOR2 port map( A => n4404, B => n25, Z => n4406);
   U4333 : GTECH_NOR2 port map( A => n4407, B => n104, Z => n4405);
   U4334 : GTECH_NAND2 port map( A => n4408, B => n4409, Z => n4404);
   U4335 : GTECH_NAND2 port map( A => n4395, B => n105, Z => n4409);
   U4336 : GTECH_NAND2 port map( A => n4410, B => n179, Z => n4408);
   U4337 : GTECH_NAND2 port map( A => n4411, B => n4412, Z => n4395);
   U4338 : GTECH_NAND2 port map( A => n4388, B => n180, Z => n4412);
   U4339 : GTECH_NAND2 port map( A => n4413, B => n255, Z => n4411);
   U4340 : GTECH_NAND2 port map( A => n4414, B => n4415, Z => n4388);
   U4341 : GTECH_NAND2 port map( A => n4379, B => n256, Z => n4415);
   U4342 : GTECH_NAND2 port map( A => n4416, B => n332, Z => n4414);
   U4343 : GTECH_NAND2 port map( A => n4417, B => n4418, Z => n4379);
   U4344 : GTECH_NAND2 port map( A => n4372, B => n333, Z => n4418);
   U4345 : GTECH_NAND2 port map( A => n4419, B => n405, Z => n4417);
   U4346 : GTECH_NAND2 port map( A => n4420, B => n4421, Z => n4372);
   U4347 : GTECH_NAND2 port map( A => n4363, B => n406, Z => n4421);
   U4348 : GTECH_NAND2 port map( A => n4422, B => n817, Z => n4420);
   U4349 : GTECH_NAND2 port map( A => n4423, B => n4424, Z => n4363);
   U4350 : GTECH_NAND2 port map( A => n4356, B => n818, Z => n4424);
   U4351 : GTECH_NAND2 port map( A => n4425, B => n850, Z => n4423);
   U4352 : GTECH_NAND2 port map( A => n4426, B => n4427, Z => n4356);
   U4353 : GTECH_NAND2 port map( A => n4347, B => n851, Z => n4427);
   U4354 : GTECH_NAND2 port map( A => n4428, B => n904, Z => n4426);
   U4355 : GTECH_NAND2 port map( A => n4429, B => n4430, Z => n4347);
   U4356 : GTECH_NAND2 port map( A => n4340, B => n908, Z => n4430);
   U4357 : GTECH_NAND2 port map( A => n4431, B => n905, Z => n4429);
   U4358 : GTECH_NAND2 port map( A => n4432, B => n4433, Z => n4340);
   U4359 : GTECH_NAND2 port map( A => n4331, B => n906, Z => n4433);
   U4360 : GTECH_NAND2 port map( A => n4434, B => n974, Z => n4432);
   U4361 : GTECH_NAND2 port map( A => n4435, B => n4436, Z => n4331);
   U4362 : GTECH_NAND2 port map( A => n4324, B => n978, Z => n4436);
   U4363 : GTECH_NAND2 port map( A => n4437, B => n975, Z => n4435);
   U4364 : GTECH_NAND2 port map( A => n4438, B => n4439, Z => n4324);
   U4365 : GTECH_NAND2 port map( A => n4315, B => n976, Z => n4439);
   U4366 : GTECH_NAND2 port map( A => n4440, B => n1040, Z => n4438);
   U4367 : GTECH_NAND2 port map( A => n4441, B => n4442, Z => n4315);
   U4368 : GTECH_NAND2 port map( A => n4308, B => n1041, Z => n4442);
   U4369 : GTECH_NAND2 port map( A => n4443, B => n1113, Z => n4441);
   U4370 : GTECH_NAND2 port map( A => n4444, B => n4445, Z => n4308);
   U4371 : GTECH_NAND2 port map( A => n4299, B => n1117, Z => n4445);
   U4372 : GTECH_NAND2 port map( A => n4446, B => n1114, Z => n4444);
   U4373 : GTECH_NAND2 port map( A => n4447, B => n4448, Z => n4299);
   U4374 : GTECH_NAND2 port map( A => n4292, B => n1115, Z => n4448);
   U4375 : GTECH_NAND2 port map( A => n4449, B => n1217, Z => n4447);
   U4376 : GTECH_NAND2 port map( A => n4450, B => n4451, Z => n4292);
   U4377 : GTECH_NAND2 port map( A => n4283, B => n1221, Z => n4451);
   U4378 : GTECH_NAND2 port map( A => n4452, B => n1218, Z => n4450);
   U4379 : GTECH_NAND2 port map( A => n4453, B => n4454, Z => n4283);
   U4380 : GTECH_NAND2 port map( A => n4276, B => n1219, Z => n4454);
   U4381 : GTECH_NAND2 port map( A => n4455, B => n1335, Z => n4453);
   U4382 : GTECH_NAND2 port map( A => n4456, B => n4457, Z => n4276);
   U4383 : GTECH_NAND2 port map( A => n4267, B => n1339, Z => n4457);
   U4384 : GTECH_NAND2 port map( A => n4458, B => n1336, Z => n4456);
   U4385 : GTECH_NAND2 port map( A => n4459, B => n4460, Z => n4267);
   U4386 : GTECH_NAND2 port map( A => n4260, B => n1337, Z => n4460);
   U4387 : GTECH_NAND2 port map( A => n4461, B => n1484, Z => n4459);
   U4388 : GTECH_NAND2 port map( A => n4462, B => n4463, Z => n4260);
   U4389 : GTECH_NAND2 port map( A => n4251, B => n1491, Z => n4463);
   U4390 : GTECH_NAND2 port map( A => n4464, B => n1485, Z => n4462);
   U4391 : GTECH_NAND2 port map( A => n4465, B => n4466, Z => n4251);
   U4392 : GTECH_NAND2 port map( A => n4244, B => n1489, Z => n4466);
   U4393 : GTECH_NAND2 port map( A => n4467, B => n1486, Z => n4465);
   U4394 : GTECH_NAND2 port map( A => n4468, B => n4469, Z => n4244);
   U4395 : GTECH_NAND2 port map( A => n4236, B => n1487, Z => n4469);
   U4396 : GTECH_NAND2 port map( A => n4470, B => n1661, Z => n4468);
   U4397 : GTECH_NAND2 port map( A => n1662, B => n4471, Z => n4236);
   U4398 : GTECH_NAND2 port map( A => n4229, B => n4472, Z => n4471);
   U4399 : GTECH_NOR2 port map( A => n4472, B => n4229, Z => n4473);
   U4400 : GTECH_NOR2 port map( A => n1914, B => n1714, Z => n4229);
   U4401 : GTECH_NAND2 port map( A => B(23), B => A(0), Z => n4472);
   U4402 : GTECH_NAND2 port map( A => n4474, B => n4475, Z => n4470);
   U4403 : GTECH_NAND2 port map( A => n1488, B => n1729, Z => n4475);
   U4404 : GTECH_NAND2 port map( A => n4235, B => n4476, Z => n4474);
   U4405 : GTECH_NAND2 port map( A => n4477, B => n4478, Z => n4476);
   U4406 : GTECH_NOR2 port map( A => n1649, B => n1914, Z => n4477);
   U4407 : GTECH_NOR2 port map( A => n1915, B => n1748, Z => n4235);
   U4408 : GTECH_NAND2 port map( A => n4479, B => n4480, Z => n4467);
   U4409 : GTECH_NAND2 port map( A => n1764, B => n4242, Z => n4480);
   U4410 : GTECH_NAND2 port map( A => n1490, B => n4243, Z => n4479);
   U4411 : GTECH_NAND2 port map( A => B(20), B => A(3), Z => n4243);
   U4412 : GTECH_NAND2 port map( A => n4481, B => n4482, Z => n4242);
   U4413 : GTECH_NAND2 port map( A => n1498, B => n4483, Z => n4482);
   U4414 : GTECH_NAND2 port map( A => n1663, B => n1730, Z => n4483);
   U4415 : GTECH_NAND2 port map( A => n4484, B => n4485, Z => n4481);
   U4416 : GTECH_NAND2 port map( A => n4486, B => n4487, Z => n4464);
   U4417 : GTECH_NAND2 port map( A => n1796, B => n4250, Z => n4487);
   U4418 : GTECH_NAND2 port map( A => n1492, B => n4252, Z => n4486);
   U4419 : GTECH_NAND2 port map( A => B(19), B => A(4), Z => n4252);
   U4420 : GTECH_NAND2 port map( A => n4488, B => n4489, Z => n4250);
   U4421 : GTECH_NAND2 port map( A => n4490, B => n4491, Z => n4489);
   U4422 : GTECH_NAND2 port map( A => n1496, B => n4492, Z => n4490);
   U4423 : GTECH_NAND2 port map( A => n1765, B => n4493, Z => n4488);
   U4424 : GTECH_NAND2 port map( A => n4494, B => n4495, Z => n4461);
   U4425 : GTECH_NAND2 port map( A => n1338, B => n4258, Z => n4495);
   U4426 : GTECH_NAND2 port map( A => n1493, B => n4259, Z => n4494);
   U4427 : GTECH_NAND2 port map( A => B(18), B => A(5), Z => n4259);
   U4428 : GTECH_NAND2 port map( A => n4496, B => n4497, Z => n4258);
   U4429 : GTECH_NAND2 port map( A => n4498, B => n4499, Z => n4497);
   U4430 : GTECH_NAND2 port map( A => n4500, B => n4501, Z => n4498);
   U4431 : GTECH_NAND2 port map( A => n1797, B => n1495, Z => n4496);
   U4432 : GTECH_NAND2 port map( A => n4502, B => n4503, Z => n4458);
   U4433 : GTECH_NAND2 port map( A => n1826, B => n4266, Z => n4503);
   U4434 : GTECH_NAND2 port map( A => n1340, B => n4268, Z => n4502);
   U4435 : GTECH_NAND2 port map( A => B(17), B => A(6), Z => n4268);
   U4436 : GTECH_NAND2 port map( A => n4504, B => n4505, Z => n4266);
   U4437 : GTECH_NAND2 port map( A => n4506, B => n4507, Z => n4505);
   U4438 : GTECH_NAND2 port map( A => n1494, B => n4508, Z => n4506);
   U4439 : GTECH_NAND2 port map( A => n1345, B => n4509, Z => n4504);
   U4440 : GTECH_NAND2 port map( A => n4510, B => n4511, Z => n4455);
   U4441 : GTECH_NAND2 port map( A => n1220, B => n4274, Z => n4511);
   U4442 : GTECH_NAND2 port map( A => n1341, B => n4275, Z => n4510);
   U4443 : GTECH_NAND2 port map( A => B(16), B => A(7), Z => n4275);
   U4444 : GTECH_NAND2 port map( A => n4512, B => n4513, Z => n4274);
   U4445 : GTECH_NAND2 port map( A => n4514, B => n4515, Z => n4513);
   U4446 : GTECH_NAND2 port map( A => n4516, B => n4517, Z => n4514);
   U4447 : GTECH_NAND2 port map( A => n1827, B => n1343, Z => n4512);
   U4448 : GTECH_NAND2 port map( A => n4518, B => n4519, Z => n4452);
   U4449 : GTECH_NAND2 port map( A => n1852, B => n4282, Z => n4519);
   U4450 : GTECH_NAND2 port map( A => n1222, B => n4284, Z => n4518);
   U4451 : GTECH_NAND2 port map( A => B(15), B => A(8), Z => n4284);
   U4452 : GTECH_NAND2 port map( A => n4520, B => n4521, Z => n4282);
   U4453 : GTECH_NAND2 port map( A => n4522, B => n4523, Z => n4521);
   U4454 : GTECH_NAND2 port map( A => n1342, B => n4524, Z => n4522);
   U4455 : GTECH_NAND2 port map( A => n1227, B => n4525, Z => n4520);
   U4456 : GTECH_NAND2 port map( A => n4526, B => n4527, Z => n4449);
   U4457 : GTECH_NAND2 port map( A => n1116, B => n4290, Z => n4527);
   U4458 : GTECH_NAND2 port map( A => n1223, B => n4291, Z => n4526);
   U4459 : GTECH_NAND2 port map( A => B(14), B => A(9), Z => n4291);
   U4460 : GTECH_NAND2 port map( A => n4528, B => n4529, Z => n4290);
   U4461 : GTECH_NAND2 port map( A => n4530, B => n4531, Z => n4529);
   U4462 : GTECH_NAND2 port map( A => n4532, B => n4533, Z => n4530);
   U4463 : GTECH_NAND2 port map( A => n1853, B => n1225, Z => n4528);
   U4464 : GTECH_NAND2 port map( A => n4534, B => n4535, Z => n4446);
   U4465 : GTECH_NAND2 port map( A => n1874, B => n4298, Z => n4535);
   U4466 : GTECH_NAND2 port map( A => n1118, B => n4300, Z => n4534);
   U4467 : GTECH_NAND2 port map( A => B(13), B => A(10), Z => n4300);
   U4468 : GTECH_NAND2 port map( A => n4536, B => n4537, Z => n4298);
   U4469 : GTECH_NAND2 port map( A => n4538, B => n4539, Z => n4537);
   U4470 : GTECH_NAND2 port map( A => n1224, B => n4540, Z => n4538);
   U4471 : GTECH_NAND2 port map( A => n1123, B => n4541, Z => n4536);
   U4472 : GTECH_NAND2 port map( A => n4542, B => n4543, Z => n4443);
   U4473 : GTECH_NAND2 port map( A => n1042, B => n4306, Z => n4543);
   U4474 : GTECH_NAND2 port map( A => n1119, B => n4307, Z => n4542);
   U4475 : GTECH_NAND2 port map( A => B(12), B => A(11), Z => n4307);
   U4476 : GTECH_NAND2 port map( A => n4544, B => n4545, Z => n4306);
   U4477 : GTECH_NAND2 port map( A => n4546, B => n4547, Z => n4545);
   U4478 : GTECH_NAND2 port map( A => n4548, B => n4549, Z => n4546);
   U4479 : GTECH_NAND2 port map( A => n1875, B => n1121, Z => n4544);
   U4480 : GTECH_NAND2 port map( A => n4550, B => n4551, Z => n4440);
   U4481 : GTECH_NAND2 port map( A => n977, B => n4314, Z => n4551);
   U4482 : GTECH_NAND2 port map( A => n1043, B => n4316, Z => n4550);
   U4483 : GTECH_NAND2 port map( A => B(11), B => A(12), Z => n4316);
   U4484 : GTECH_NAND2 port map( A => n4552, B => n4553, Z => n4314);
   U4485 : GTECH_NAND2 port map( A => n4554, B => n4555, Z => n4553);
   U4486 : GTECH_NAND2 port map( A => n1120, B => n4556, Z => n4554);
   U4487 : GTECH_NAND2 port map( A => n1046, B => n4557, Z => n4552);
   U4488 : GTECH_NAND2 port map( A => n4558, B => n4559, Z => n4437);
   U4489 : GTECH_NAND2 port map( A => n1883, B => n4322, Z => n4559);
   U4490 : GTECH_NAND2 port map( A => n979, B => n4323, Z => n4558);
   U4491 : GTECH_NAND2 port map( A => B(10), B => A(13), Z => n4323);
   U4492 : GTECH_NAND2 port map( A => n4560, B => n4561, Z => n4322);
   U4493 : GTECH_NAND2 port map( A => n4562, B => n4563, Z => n4561);
   U4494 : GTECH_NAND2 port map( A => n4564, B => n4565, Z => n4562);
   U4495 : GTECH_NAND2 port map( A => n984, B => n1044, Z => n4560);
   U4496 : GTECH_NAND2 port map( A => n4566, B => n4567, Z => n4434);
   U4497 : GTECH_NAND2 port map( A => n907, B => n4330, Z => n4567);
   U4498 : GTECH_NAND2 port map( A => n980, B => n4332, Z => n4566);
   U4499 : GTECH_NAND2 port map( A => B(9), B => A(14), Z => n4332);
   U4500 : GTECH_NAND2 port map( A => n4568, B => n4569, Z => n4330);
   U4501 : GTECH_NAND2 port map( A => n4570, B => n4571, Z => n4569);
   U4502 : GTECH_NAND2 port map( A => n982, B => n4572, Z => n4570);
   U4503 : GTECH_NAND2 port map( A => n1902, B => n4573, Z => n4568);
   U4504 : GTECH_NAND2 port map( A => n4574, B => n4575, Z => n4431);
   U4505 : GTECH_NAND2 port map( A => n1863, B => n4338, Z => n4575);
   U4506 : GTECH_NAND2 port map( A => n909, B => n4339, Z => n4574);
   U4507 : GTECH_NAND2 port map( A => B(8), B => A(15), Z => n4339);
   U4508 : GTECH_NAND2 port map( A => n4576, B => n4577, Z => n4338);
   U4509 : GTECH_NAND2 port map( A => n4578, B => n4579, Z => n4577);
   U4510 : GTECH_NAND2 port map( A => n4580, B => n4581, Z => n4578);
   U4511 : GTECH_NAND2 port map( A => n914, B => n981, Z => n4576);
   U4512 : GTECH_NAND2 port map( A => n4582, B => n4583, Z => n4428);
   U4513 : GTECH_NAND2 port map( A => n852, B => n4346, Z => n4583);
   U4514 : GTECH_NAND2 port map( A => n910, B => n4348, Z => n4582);
   U4515 : GTECH_NAND2 port map( A => B(7), B => A(16), Z => n4348);
   U4516 : GTECH_NAND2 port map( A => n4584, B => n4585, Z => n4346);
   U4517 : GTECH_NAND2 port map( A => n4586, B => n4587, Z => n4585);
   U4518 : GTECH_NAND2 port map( A => n912, B => n4588, Z => n4586);
   U4519 : GTECH_NAND2 port map( A => n1891, B => n4589, Z => n4584);
   U4520 : GTECH_NAND2 port map( A => n4590, B => n4591, Z => n4425);
   U4521 : GTECH_NAND2 port map( A => n819, B => n4354, Z => n4591);
   U4522 : GTECH_NAND2 port map( A => n853, B => n4355, Z => n4590);
   U4523 : GTECH_NAND2 port map( A => B(6), B => A(17), Z => n4355);
   U4524 : GTECH_NAND2 port map( A => n4592, B => n4593, Z => n4354);
   U4525 : GTECH_NAND2 port map( A => n4594, B => n4595, Z => n4593);
   U4526 : GTECH_NAND2 port map( A => n4596, B => n4597, Z => n4594);
   U4527 : GTECH_NAND2 port map( A => n856, B => n911, Z => n4592);
   U4528 : GTECH_NAND2 port map( A => n4598, B => n4599, Z => n4422);
   U4529 : GTECH_NAND2 port map( A => n447, B => n4362, Z => n4599);
   U4530 : GTECH_NAND2 port map( A => n407, B => n4364, Z => n4598);
   U4531 : GTECH_NAND2 port map( A => B(5), B => A(18), Z => n4364);
   U4532 : GTECH_NAND2 port map( A => n4600, B => n4601, Z => n4362);
   U4533 : GTECH_NAND2 port map( A => n4602, B => n4603, Z => n4601);
   U4534 : GTECH_NAND2 port map( A => n854, B => n4604, Z => n4602);
   U4535 : GTECH_NAND2 port map( A => n448, B => n4605, Z => n4600);
   U4536 : GTECH_NAND2 port map( A => n4606, B => n4607, Z => n4419);
   U4537 : GTECH_NAND2 port map( A => n758, B => n4370, Z => n4607);
   U4538 : GTECH_NAND2 port map( A => n334, B => n4371, Z => n4606);
   U4539 : GTECH_NAND2 port map( A => B(4), B => A(19), Z => n4371);
   U4540 : GTECH_NAND2 port map( A => n4608, B => n4609, Z => n4370);
   U4541 : GTECH_NAND2 port map( A => n4610, B => n4611, Z => n4609);
   U4542 : GTECH_NAND2 port map( A => n4612, B => n4613, Z => n4610);
   U4543 : GTECH_NAND2 port map( A => n787, B => n402, Z => n4608);
   U4544 : GTECH_NAND2 port map( A => n4614, B => n4615, Z => n4416);
   U4545 : GTECH_NAND2 port map( A => n734, B => n4378, Z => n4615);
   U4546 : GTECH_NAND2 port map( A => n257, B => n4380, Z => n4614);
   U4547 : GTECH_NAND2 port map( A => B(3), B => A(20), Z => n4380);
   U4548 : GTECH_NAND2 port map( A => n4616, B => n4617, Z => n4378);
   U4549 : GTECH_NAND2 port map( A => n4618, B => n4619, Z => n4617);
   U4550 : GTECH_NAND2 port map( A => n329, B => n4620, Z => n4618);
   U4551 : GTECH_NAND2 port map( A => n759, B => n4621, Z => n4616);
   U4552 : GTECH_NAND2 port map( A => n4622, B => n4623, Z => n4413);
   U4553 : GTECH_NAND2 port map( A => n714, B => n4386, Z => n4623);
   U4554 : GTECH_NAND2 port map( A => n181, B => n4387, Z => n4622);
   U4555 : GTECH_NAND2 port map( A => B(2), B => A(21), Z => n4387);
   U4556 : GTECH_NAND2 port map( A => n4624, B => n4625, Z => n4386);
   U4557 : GTECH_NAND2 port map( A => n4626, B => n4627, Z => n4625);
   U4558 : GTECH_NAND2 port map( A => n4628, B => n4629, Z => n4626);
   U4559 : GTECH_NAND2 port map( A => n735, B => n252, Z => n4624);
   U4560 : GTECH_NAND2 port map( A => n4630, B => n4631, Z => n4410);
   U4561 : GTECH_NAND2 port map( A => n698, B => n4394, Z => n4631);
   U4562 : GTECH_NAND2 port map( A => n106, B => n4396, Z => n4630);
   U4563 : GTECH_NAND2 port map( A => A(22), B => B(1), Z => n4396);
   U4564 : GTECH_NAND2 port map( A => n4632, B => n4633, Z => n4394);
   U4565 : GTECH_NAND2 port map( A => n4634, B => n4635, Z => n4633);
   U4566 : GTECH_NAND2 port map( A => n176, B => n4636, Z => n4634);
   U4567 : GTECH_NAND2 port map( A => n715, B => n4637, Z => n4632);
   U4568 : GTECH_NAND2 port map( A => n4638, B => n4639, Z => n4407);
   U4569 : GTECH_NAND2 port map( A => n686, B => n4402, Z => n4639);
   U4570 : GTECH_NAND2 port map( A => n26, B => n4403, Z => n4638);
   U4571 : GTECH_NAND2 port map( A => A(23), B => B(0), Z => n4403);
   U4572 : GTECH_NAND2 port map( A => n4640, B => n4641, Z => n4402);
   U4573 : GTECH_NAND2 port map( A => n4642, B => n4643, Z => n4641);
   U4574 : GTECH_NAND2 port map( A => n4644, B => n4645, Z => n4642);
   U4575 : GTECH_NAND2 port map( A => n699, B => n101, Z => n4640);
   U4576 : GTECH_NAND2 port map( A => n4646, B => n4647, Z => PRODUCT(22));
   U4577 : GTECH_NAND2 port map( A => n4644, B => n23, Z => n4647);
   U4578 : GTECH_NAND2 port map( A => n4648, B => n101, Z => n4646);
   U4579 : GTECH_NAND2 port map( A => n4649, B => n4650, Z => n4644);
   U4580 : GTECH_NAND2 port map( A => n4637, B => n102, Z => n4650);
   U4581 : GTECH_NAND2 port map( A => n4651, B => n176, Z => n4649);
   U4582 : GTECH_NAND2 port map( A => n4652, B => n4653, Z => n4637);
   U4583 : GTECH_NAND2 port map( A => n4628, B => n177, Z => n4653);
   U4584 : GTECH_NAND2 port map( A => n4654, B => n252, Z => n4652);
   U4585 : GTECH_NAND2 port map( A => n4655, B => n4656, Z => n4628);
   U4586 : GTECH_NAND2 port map( A => n4621, B => n253, Z => n4656);
   U4587 : GTECH_NAND2 port map( A => n4657, B => n329, Z => n4655);
   U4588 : GTECH_NAND2 port map( A => n4658, B => n4659, Z => n4621);
   U4589 : GTECH_NAND2 port map( A => n4612, B => n330, Z => n4659);
   U4590 : GTECH_NAND2 port map( A => n4660, B => n402, Z => n4658);
   U4591 : GTECH_NAND2 port map( A => n4661, B => n4662, Z => n4612);
   U4592 : GTECH_NAND2 port map( A => n4605, B => n403, Z => n4662);
   U4593 : GTECH_NAND2 port map( A => n4663, B => n854, Z => n4661);
   U4594 : GTECH_NAND2 port map( A => n4664, B => n4665, Z => n4605);
   U4595 : GTECH_NAND2 port map( A => n4596, B => n855, Z => n4665);
   U4596 : GTECH_NAND2 port map( A => n4666, B => n911, Z => n4664);
   U4597 : GTECH_NAND2 port map( A => n4667, B => n4668, Z => n4596);
   U4598 : GTECH_NAND2 port map( A => n4589, B => n915, Z => n4668);
   U4599 : GTECH_NAND2 port map( A => n4669, B => n912, Z => n4667);
   U4600 : GTECH_NAND2 port map( A => n4670, B => n4671, Z => n4589);
   U4601 : GTECH_NAND2 port map( A => n4580, B => n913, Z => n4671);
   U4602 : GTECH_NAND2 port map( A => n4672, B => n981, Z => n4670);
   U4603 : GTECH_NAND2 port map( A => n4673, B => n4674, Z => n4580);
   U4604 : GTECH_NAND2 port map( A => n4573, B => n985, Z => n4674);
   U4605 : GTECH_NAND2 port map( A => n4675, B => n982, Z => n4673);
   U4606 : GTECH_NAND2 port map( A => n4676, B => n4677, Z => n4573);
   U4607 : GTECH_NAND2 port map( A => n4564, B => n983, Z => n4677);
   U4608 : GTECH_NAND2 port map( A => n4678, B => n1044, Z => n4676);
   U4609 : GTECH_NAND2 port map( A => n4679, B => n4680, Z => n4564);
   U4610 : GTECH_NAND2 port map( A => n4557, B => n1045, Z => n4680);
   U4611 : GTECH_NAND2 port map( A => n4681, B => n1120, Z => n4679);
   U4612 : GTECH_NAND2 port map( A => n4682, B => n4683, Z => n4557);
   U4613 : GTECH_NAND2 port map( A => n4548, B => n1124, Z => n4683);
   U4614 : GTECH_NAND2 port map( A => n4684, B => n1121, Z => n4682);
   U4615 : GTECH_NAND2 port map( A => n4685, B => n4686, Z => n4548);
   U4616 : GTECH_NAND2 port map( A => n4541, B => n1122, Z => n4686);
   U4617 : GTECH_NAND2 port map( A => n4687, B => n1224, Z => n4685);
   U4618 : GTECH_NAND2 port map( A => n4688, B => n4689, Z => n4541);
   U4619 : GTECH_NAND2 port map( A => n4532, B => n1228, Z => n4689);
   U4620 : GTECH_NAND2 port map( A => n4690, B => n1225, Z => n4688);
   U4621 : GTECH_NAND2 port map( A => n4691, B => n4692, Z => n4532);
   U4622 : GTECH_NAND2 port map( A => n4525, B => n1226, Z => n4692);
   U4623 : GTECH_NAND2 port map( A => n4693, B => n1342, Z => n4691);
   U4624 : GTECH_NAND2 port map( A => n4694, B => n4695, Z => n4525);
   U4625 : GTECH_NAND2 port map( A => n4516, B => n1346, Z => n4695);
   U4626 : GTECH_NAND2 port map( A => n4696, B => n1343, Z => n4694);
   U4627 : GTECH_NAND2 port map( A => n4697, B => n4698, Z => n4516);
   U4628 : GTECH_NAND2 port map( A => n4509, B => n1344, Z => n4698);
   U4629 : GTECH_NAND2 port map( A => n4699, B => n1494, Z => n4697);
   U4630 : GTECH_NAND2 port map( A => n4700, B => n4701, Z => n4509);
   U4631 : GTECH_NAND2 port map( A => n4500, B => n1501, Z => n4701);
   U4632 : GTECH_NAND2 port map( A => n4702, B => n1495, Z => n4700);
   U4633 : GTECH_NAND2 port map( A => n4703, B => n4704, Z => n4500);
   U4634 : GTECH_NAND2 port map( A => n4493, B => n1499, Z => n4704);
   U4635 : GTECH_NAND2 port map( A => n4705, B => n1496, Z => n4703);
   U4636 : GTECH_NAND2 port map( A => n4706, B => n4707, Z => n4493);
   U4637 : GTECH_NAND2 port map( A => n4485, B => n1497, Z => n4707);
   U4638 : GTECH_NAND2 port map( A => n4708, B => n1663, Z => n4706);
   U4639 : GTECH_NAND2 port map( A => n1664, B => n4709, Z => n4485);
   U4640 : GTECH_NAND2 port map( A => n4478, B => n4710, Z => n4709);
   U4641 : GTECH_NOR2 port map( A => n4710, B => n4478, Z => n4711);
   U4642 : GTECH_NOR2 port map( A => n1915, B => n1714, Z => n4478);
   U4643 : GTECH_NAND2 port map( A => B(22), B => A(0), Z => n4710);
   U4644 : GTECH_NAND2 port map( A => n4712, B => n4713, Z => n4708);
   U4645 : GTECH_NAND2 port map( A => n1498, B => n1730, Z => n4713);
   U4646 : GTECH_NAND2 port map( A => n4484, B => n4714, Z => n4712);
   U4647 : GTECH_NAND2 port map( A => n4715, B => n4716, Z => n4714);
   U4648 : GTECH_NOR2 port map( A => n1649, B => n1915, Z => n4715);
   U4649 : GTECH_NOR2 port map( A => n1908, B => n1748, Z => n4484);
   U4650 : GTECH_NAND2 port map( A => n4717, B => n4718, Z => n4705);
   U4651 : GTECH_NAND2 port map( A => n1765, B => n4491, Z => n4718);
   U4652 : GTECH_NAND2 port map( A => n1500, B => n4492, Z => n4717);
   U4653 : GTECH_NAND2 port map( A => B(19), B => A(3), Z => n4492);
   U4654 : GTECH_NAND2 port map( A => n4719, B => n4720, Z => n4491);
   U4655 : GTECH_NAND2 port map( A => n1508, B => n4721, Z => n4720);
   U4656 : GTECH_NAND2 port map( A => n1665, B => n1731, Z => n4721);
   U4657 : GTECH_NAND2 port map( A => n4722, B => n4723, Z => n4719);
   U4658 : GTECH_NAND2 port map( A => n4724, B => n4725, Z => n4702);
   U4659 : GTECH_NAND2 port map( A => n1797, B => n4499, Z => n4725);
   U4660 : GTECH_NAND2 port map( A => n1502, B => n4501, Z => n4724);
   U4661 : GTECH_NAND2 port map( A => B(18), B => A(4), Z => n4501);
   U4662 : GTECH_NAND2 port map( A => n4726, B => n4727, Z => n4499);
   U4663 : GTECH_NAND2 port map( A => n4728, B => n4729, Z => n4727);
   U4664 : GTECH_NAND2 port map( A => n1506, B => n4730, Z => n4728);
   U4665 : GTECH_NAND2 port map( A => n1766, B => n4731, Z => n4726);
   U4666 : GTECH_NAND2 port map( A => n4732, B => n4733, Z => n4699);
   U4667 : GTECH_NAND2 port map( A => n1345, B => n4507, Z => n4733);
   U4668 : GTECH_NAND2 port map( A => n1503, B => n4508, Z => n4732);
   U4669 : GTECH_NAND2 port map( A => B(17), B => A(5), Z => n4508);
   U4670 : GTECH_NAND2 port map( A => n4734, B => n4735, Z => n4507);
   U4671 : GTECH_NAND2 port map( A => n4736, B => n4737, Z => n4735);
   U4672 : GTECH_NAND2 port map( A => n4738, B => n4739, Z => n4736);
   U4673 : GTECH_NAND2 port map( A => n1798, B => n1505, Z => n4734);
   U4674 : GTECH_NAND2 port map( A => n4740, B => n4741, Z => n4696);
   U4675 : GTECH_NAND2 port map( A => n1827, B => n4515, Z => n4741);
   U4676 : GTECH_NAND2 port map( A => n1347, B => n4517, Z => n4740);
   U4677 : GTECH_NAND2 port map( A => B(16), B => A(6), Z => n4517);
   U4678 : GTECH_NAND2 port map( A => n4742, B => n4743, Z => n4515);
   U4679 : GTECH_NAND2 port map( A => n4744, B => n4745, Z => n4743);
   U4680 : GTECH_NAND2 port map( A => n1504, B => n4746, Z => n4744);
   U4681 : GTECH_NAND2 port map( A => n1352, B => n4747, Z => n4742);
   U4682 : GTECH_NAND2 port map( A => n4748, B => n4749, Z => n4693);
   U4683 : GTECH_NAND2 port map( A => n1227, B => n4523, Z => n4749);
   U4684 : GTECH_NAND2 port map( A => n1348, B => n4524, Z => n4748);
   U4685 : GTECH_NAND2 port map( A => B(15), B => A(7), Z => n4524);
   U4686 : GTECH_NAND2 port map( A => n4750, B => n4751, Z => n4523);
   U4687 : GTECH_NAND2 port map( A => n4752, B => n4753, Z => n4751);
   U4688 : GTECH_NAND2 port map( A => n4754, B => n4755, Z => n4752);
   U4689 : GTECH_NAND2 port map( A => n1828, B => n1350, Z => n4750);
   U4690 : GTECH_NAND2 port map( A => n4756, B => n4757, Z => n4690);
   U4691 : GTECH_NAND2 port map( A => n1853, B => n4531, Z => n4757);
   U4692 : GTECH_NAND2 port map( A => n1229, B => n4533, Z => n4756);
   U4693 : GTECH_NAND2 port map( A => B(14), B => A(8), Z => n4533);
   U4694 : GTECH_NAND2 port map( A => n4758, B => n4759, Z => n4531);
   U4695 : GTECH_NAND2 port map( A => n4760, B => n4761, Z => n4759);
   U4696 : GTECH_NAND2 port map( A => n1349, B => n4762, Z => n4760);
   U4697 : GTECH_NAND2 port map( A => n1234, B => n4763, Z => n4758);
   U4698 : GTECH_NAND2 port map( A => n4764, B => n4765, Z => n4687);
   U4699 : GTECH_NAND2 port map( A => n1123, B => n4539, Z => n4765);
   U4700 : GTECH_NAND2 port map( A => n1230, B => n4540, Z => n4764);
   U4701 : GTECH_NAND2 port map( A => B(13), B => A(9), Z => n4540);
   U4702 : GTECH_NAND2 port map( A => n4766, B => n4767, Z => n4539);
   U4703 : GTECH_NAND2 port map( A => n4768, B => n4769, Z => n4767);
   U4704 : GTECH_NAND2 port map( A => n4770, B => n4771, Z => n4768);
   U4705 : GTECH_NAND2 port map( A => n1854, B => n1232, Z => n4766);
   U4706 : GTECH_NAND2 port map( A => n4772, B => n4773, Z => n4684);
   U4707 : GTECH_NAND2 port map( A => n1875, B => n4547, Z => n4773);
   U4708 : GTECH_NAND2 port map( A => n1125, B => n4549, Z => n4772);
   U4709 : GTECH_NAND2 port map( A => B(12), B => A(10), Z => n4549);
   U4710 : GTECH_NAND2 port map( A => n4774, B => n4775, Z => n4547);
   U4711 : GTECH_NAND2 port map( A => n4776, B => n4777, Z => n4775);
   U4712 : GTECH_NAND2 port map( A => n1231, B => n4778, Z => n4776);
   U4713 : GTECH_NAND2 port map( A => n1130, B => n4779, Z => n4774);
   U4714 : GTECH_NAND2 port map( A => n4780, B => n4781, Z => n4681);
   U4715 : GTECH_NAND2 port map( A => n1046, B => n4555, Z => n4781);
   U4716 : GTECH_NAND2 port map( A => n1126, B => n4556, Z => n4780);
   U4717 : GTECH_NAND2 port map( A => B(11), B => A(11), Z => n4556);
   U4718 : GTECH_NAND2 port map( A => n4782, B => n4783, Z => n4555);
   U4719 : GTECH_NAND2 port map( A => n4784, B => n4785, Z => n4783);
   U4720 : GTECH_NAND2 port map( A => n4786, B => n4787, Z => n4784);
   U4721 : GTECH_NAND2 port map( A => n1876, B => n1128, Z => n4782);
   U4722 : GTECH_NAND2 port map( A => n4788, B => n4789, Z => n4678);
   U4723 : GTECH_NAND2 port map( A => n984, B => n4563, Z => n4789);
   U4724 : GTECH_NAND2 port map( A => n1047, B => n4565, Z => n4788);
   U4725 : GTECH_NAND2 port map( A => B(10), B => A(12), Z => n4565);
   U4726 : GTECH_NAND2 port map( A => n4790, B => n4791, Z => n4563);
   U4727 : GTECH_NAND2 port map( A => n4792, B => n4793, Z => n4791);
   U4728 : GTECH_NAND2 port map( A => n1127, B => n4794, Z => n4792);
   U4729 : GTECH_NAND2 port map( A => n1050, B => n4795, Z => n4790);
   U4730 : GTECH_NAND2 port map( A => n4796, B => n4797, Z => n4675);
   U4731 : GTECH_NAND2 port map( A => n1902, B => n4571, Z => n4797);
   U4732 : GTECH_NAND2 port map( A => n986, B => n4572, Z => n4796);
   U4733 : GTECH_NAND2 port map( A => B(9), B => A(13), Z => n4572);
   U4734 : GTECH_NAND2 port map( A => n4798, B => n4799, Z => n4571);
   U4735 : GTECH_NAND2 port map( A => n4800, B => n4801, Z => n4799);
   U4736 : GTECH_NAND2 port map( A => n4802, B => n4803, Z => n4800);
   U4737 : GTECH_NAND2 port map( A => n991, B => n1048, Z => n4798);
   U4738 : GTECH_NAND2 port map( A => n4804, B => n4805, Z => n4672);
   U4739 : GTECH_NAND2 port map( A => n914, B => n4579, Z => n4805);
   U4740 : GTECH_NAND2 port map( A => n987, B => n4581, Z => n4804);
   U4741 : GTECH_NAND2 port map( A => B(8), B => A(14), Z => n4581);
   U4742 : GTECH_NAND2 port map( A => n4806, B => n4807, Z => n4579);
   U4743 : GTECH_NAND2 port map( A => n4808, B => n4809, Z => n4807);
   U4744 : GTECH_NAND2 port map( A => n989, B => n4810, Z => n4808);
   U4745 : GTECH_NAND2 port map( A => n1864, B => n4811, Z => n4806);
   U4746 : GTECH_NAND2 port map( A => n4812, B => n4813, Z => n4669);
   U4747 : GTECH_NAND2 port map( A => n1891, B => n4587, Z => n4813);
   U4748 : GTECH_NAND2 port map( A => n916, B => n4588, Z => n4812);
   U4749 : GTECH_NAND2 port map( A => B(7), B => A(15), Z => n4588);
   U4750 : GTECH_NAND2 port map( A => n4814, B => n4815, Z => n4587);
   U4751 : GTECH_NAND2 port map( A => n4816, B => n4817, Z => n4815);
   U4752 : GTECH_NAND2 port map( A => n4818, B => n4819, Z => n4816);
   U4753 : GTECH_NAND2 port map( A => n921, B => n988, Z => n4814);
   U4754 : GTECH_NAND2 port map( A => n4820, B => n4821, Z => n4666);
   U4755 : GTECH_NAND2 port map( A => n856, B => n4595, Z => n4821);
   U4756 : GTECH_NAND2 port map( A => n917, B => n4597, Z => n4820);
   U4757 : GTECH_NAND2 port map( A => B(6), B => A(16), Z => n4597);
   U4758 : GTECH_NAND2 port map( A => n4822, B => n4823, Z => n4595);
   U4759 : GTECH_NAND2 port map( A => n4824, B => n4825, Z => n4823);
   U4760 : GTECH_NAND2 port map( A => n919, B => n4826, Z => n4824);
   U4761 : GTECH_NAND2 port map( A => n1840, B => n4827, Z => n4822);
   U4762 : GTECH_NAND2 port map( A => n4828, B => n4829, Z => n4663);
   U4763 : GTECH_NAND2 port map( A => n448, B => n4603, Z => n4829);
   U4764 : GTECH_NAND2 port map( A => n404, B => n4604, Z => n4828);
   U4765 : GTECH_NAND2 port map( A => B(5), B => A(17), Z => n4604);
   U4766 : GTECH_NAND2 port map( A => n4830, B => n4831, Z => n4603);
   U4767 : GTECH_NAND2 port map( A => n4832, B => n4833, Z => n4831);
   U4768 : GTECH_NAND2 port map( A => n4834, B => n4835, Z => n4832);
   U4769 : GTECH_NAND2 port map( A => n449, B => n918, Z => n4830);
   U4770 : GTECH_NAND2 port map( A => n4836, B => n4837, Z => n4660);
   U4771 : GTECH_NAND2 port map( A => n787, B => n4611, Z => n4837);
   U4772 : GTECH_NAND2 port map( A => n331, B => n4613, Z => n4836);
   U4773 : GTECH_NAND2 port map( A => B(4), B => A(18), Z => n4613);
   U4774 : GTECH_NAND2 port map( A => n4838, B => n4839, Z => n4611);
   U4775 : GTECH_NAND2 port map( A => n4840, B => n4841, Z => n4839);
   U4776 : GTECH_NAND2 port map( A => n399, B => n4842, Z => n4840);
   U4777 : GTECH_NAND2 port map( A => n820, B => n4843, Z => n4838);
   U4778 : GTECH_NAND2 port map( A => n4844, B => n4845, Z => n4657);
   U4779 : GTECH_NAND2 port map( A => n759, B => n4619, Z => n4845);
   U4780 : GTECH_NAND2 port map( A => n254, B => n4620, Z => n4844);
   U4781 : GTECH_NAND2 port map( A => B(3), B => A(19), Z => n4620);
   U4782 : GTECH_NAND2 port map( A => n4846, B => n4847, Z => n4619);
   U4783 : GTECH_NAND2 port map( A => n4848, B => n4849, Z => n4847);
   U4784 : GTECH_NAND2 port map( A => n4850, B => n4851, Z => n4848);
   U4785 : GTECH_NAND2 port map( A => n788, B => n326, Z => n4846);
   U4786 : GTECH_NAND2 port map( A => n4852, B => n4853, Z => n4654);
   U4787 : GTECH_NAND2 port map( A => n735, B => n4627, Z => n4853);
   U4788 : GTECH_NAND2 port map( A => n178, B => n4629, Z => n4852);
   U4789 : GTECH_NAND2 port map( A => B(2), B => A(20), Z => n4629);
   U4790 : GTECH_NAND2 port map( A => n4854, B => n4855, Z => n4627);
   U4791 : GTECH_NAND2 port map( A => n4856, B => n4857, Z => n4855);
   U4792 : GTECH_NAND2 port map( A => n249, B => n4858, Z => n4856);
   U4793 : GTECH_NAND2 port map( A => n760, B => n4859, Z => n4854);
   U4794 : GTECH_NAND2 port map( A => n4860, B => n4861, Z => n4651);
   U4795 : GTECH_NAND2 port map( A => n715, B => n4635, Z => n4861);
   U4796 : GTECH_NAND2 port map( A => n103, B => n4636, Z => n4860);
   U4797 : GTECH_NAND2 port map( A => A(21), B => B(1), Z => n4636);
   U4798 : GTECH_NAND2 port map( A => n4862, B => n4863, Z => n4635);
   U4799 : GTECH_NAND2 port map( A => n4864, B => n4865, Z => n4863);
   U4800 : GTECH_NAND2 port map( A => n4866, B => n4867, Z => n4864);
   U4801 : GTECH_NAND2 port map( A => n736, B => n173, Z => n4862);
   U4802 : GTECH_NAND2 port map( A => n4868, B => n4869, Z => n4648);
   U4803 : GTECH_NAND2 port map( A => n699, B => n4643, Z => n4869);
   U4804 : GTECH_NAND2 port map( A => n24, B => n4645, Z => n4868);
   U4805 : GTECH_NAND2 port map( A => A(22), B => B(0), Z => n4645);
   U4806 : GTECH_NAND2 port map( A => n4870, B => n4871, Z => n4643);
   U4807 : GTECH_NAND2 port map( A => n4872, B => n4873, Z => n4871);
   U4808 : GTECH_NAND2 port map( A => n98, B => n4874, Z => n4872);
   U4809 : GTECH_NAND2 port map( A => n716, B => n4875, Z => n4870);
   U4810 : GTECH_NOR2 port map( A => n4876, B => n4877, Z => PRODUCT(3));
   U4811 : GTECH_NOR2 port map( A => n4878, B => n1699, Z => n4877);
   U4812 : GTECH_NOR2 port map( A => n4879, B => n1611, Z => n4876);
   U4813 : GTECH_NAND2 port map( A => n4880, B => n4881, Z => n4879);
   U4814 : GTECH_NAND2 port map( A => n1776, B => n4882, Z => n4881);
   U4815 : GTECH_NAND2 port map( A => n1700, B => n4883, Z => n4880);
   U4816 : GTECH_NOR2 port map( A => n4884, B => n4885, Z => PRODUCT(21));
   U4817 : GTECH_NOR2 port map( A => n4875, B => n21, Z => n4885);
   U4818 : GTECH_NOR2 port map( A => n4886, B => n98, Z => n4884);
   U4819 : GTECH_NAND2 port map( A => n4887, B => n4888, Z => n4875);
   U4820 : GTECH_NAND2 port map( A => n4866, B => n99, Z => n4888);
   U4821 : GTECH_NAND2 port map( A => n4889, B => n173, Z => n4887);
   U4822 : GTECH_NAND2 port map( A => n4890, B => n4891, Z => n4866);
   U4823 : GTECH_NAND2 port map( A => n4859, B => n174, Z => n4891);
   U4824 : GTECH_NAND2 port map( A => n4892, B => n249, Z => n4890);
   U4825 : GTECH_NAND2 port map( A => n4893, B => n4894, Z => n4859);
   U4826 : GTECH_NAND2 port map( A => n4850, B => n250, Z => n4894);
   U4827 : GTECH_NAND2 port map( A => n4895, B => n326, Z => n4893);
   U4828 : GTECH_NAND2 port map( A => n4896, B => n4897, Z => n4850);
   U4829 : GTECH_NAND2 port map( A => n4843, B => n327, Z => n4897);
   U4830 : GTECH_NAND2 port map( A => n4898, B => n399, Z => n4896);
   U4831 : GTECH_NAND2 port map( A => n4899, B => n4900, Z => n4843);
   U4832 : GTECH_NAND2 port map( A => n4834, B => n400, Z => n4900);
   U4833 : GTECH_NAND2 port map( A => n4901, B => n918, Z => n4899);
   U4834 : GTECH_NAND2 port map( A => n4902, B => n4903, Z => n4834);
   U4835 : GTECH_NAND2 port map( A => n4827, B => n922, Z => n4903);
   U4836 : GTECH_NAND2 port map( A => n4904, B => n919, Z => n4902);
   U4837 : GTECH_NAND2 port map( A => n4905, B => n4906, Z => n4827);
   U4838 : GTECH_NAND2 port map( A => n4818, B => n920, Z => n4906);
   U4839 : GTECH_NAND2 port map( A => n4907, B => n988, Z => n4905);
   U4840 : GTECH_NAND2 port map( A => n4908, B => n4909, Z => n4818);
   U4841 : GTECH_NAND2 port map( A => n4811, B => n992, Z => n4909);
   U4842 : GTECH_NAND2 port map( A => n4910, B => n989, Z => n4908);
   U4843 : GTECH_NAND2 port map( A => n4911, B => n4912, Z => n4811);
   U4844 : GTECH_NAND2 port map( A => n4802, B => n990, Z => n4912);
   U4845 : GTECH_NAND2 port map( A => n4913, B => n1048, Z => n4911);
   U4846 : GTECH_NAND2 port map( A => n4914, B => n4915, Z => n4802);
   U4847 : GTECH_NAND2 port map( A => n4795, B => n1049, Z => n4915);
   U4848 : GTECH_NAND2 port map( A => n4916, B => n1127, Z => n4914);
   U4849 : GTECH_NAND2 port map( A => n4917, B => n4918, Z => n4795);
   U4850 : GTECH_NAND2 port map( A => n4786, B => n1131, Z => n4918);
   U4851 : GTECH_NAND2 port map( A => n4919, B => n1128, Z => n4917);
   U4852 : GTECH_NAND2 port map( A => n4920, B => n4921, Z => n4786);
   U4853 : GTECH_NAND2 port map( A => n4779, B => n1129, Z => n4921);
   U4854 : GTECH_NAND2 port map( A => n4922, B => n1231, Z => n4920);
   U4855 : GTECH_NAND2 port map( A => n4923, B => n4924, Z => n4779);
   U4856 : GTECH_NAND2 port map( A => n4770, B => n1235, Z => n4924);
   U4857 : GTECH_NAND2 port map( A => n4925, B => n1232, Z => n4923);
   U4858 : GTECH_NAND2 port map( A => n4926, B => n4927, Z => n4770);
   U4859 : GTECH_NAND2 port map( A => n4763, B => n1233, Z => n4927);
   U4860 : GTECH_NAND2 port map( A => n4928, B => n1349, Z => n4926);
   U4861 : GTECH_NAND2 port map( A => n4929, B => n4930, Z => n4763);
   U4862 : GTECH_NAND2 port map( A => n4754, B => n1353, Z => n4930);
   U4863 : GTECH_NAND2 port map( A => n4931, B => n1350, Z => n4929);
   U4864 : GTECH_NAND2 port map( A => n4932, B => n4933, Z => n4754);
   U4865 : GTECH_NAND2 port map( A => n4747, B => n1351, Z => n4933);
   U4866 : GTECH_NAND2 port map( A => n4934, B => n1504, Z => n4932);
   U4867 : GTECH_NAND2 port map( A => n4935, B => n4936, Z => n4747);
   U4868 : GTECH_NAND2 port map( A => n4738, B => n1511, Z => n4936);
   U4869 : GTECH_NAND2 port map( A => n4937, B => n1505, Z => n4935);
   U4870 : GTECH_NAND2 port map( A => n4938, B => n4939, Z => n4738);
   U4871 : GTECH_NAND2 port map( A => n4731, B => n1509, Z => n4939);
   U4872 : GTECH_NAND2 port map( A => n4940, B => n1506, Z => n4938);
   U4873 : GTECH_NAND2 port map( A => n4941, B => n4942, Z => n4731);
   U4874 : GTECH_NAND2 port map( A => n4723, B => n1507, Z => n4942);
   U4875 : GTECH_NAND2 port map( A => n4943, B => n1665, Z => n4941);
   U4876 : GTECH_NAND2 port map( A => n1666, B => n4944, Z => n4723);
   U4877 : GTECH_NAND2 port map( A => n4716, B => n4945, Z => n4944);
   U4878 : GTECH_NOR2 port map( A => n4945, B => n4716, Z => n4946);
   U4879 : GTECH_NOR2 port map( A => n1908, B => n1714, Z => n4716);
   U4880 : GTECH_NAND2 port map( A => B(21), B => A(0), Z => n4945);
   U4881 : GTECH_NAND2 port map( A => n4947, B => n4948, Z => n4943);
   U4882 : GTECH_NAND2 port map( A => n1508, B => n1731, Z => n4948);
   U4883 : GTECH_NAND2 port map( A => n4722, B => n4949, Z => n4947);
   U4884 : GTECH_NAND2 port map( A => n4950, B => n4951, Z => n4949);
   U4885 : GTECH_NOR2 port map( A => n1649, B => n1908, Z => n4950);
   U4886 : GTECH_NOR2 port map( A => n1909, B => n1748, Z => n4722);
   U4887 : GTECH_NAND2 port map( A => n4952, B => n4953, Z => n4940);
   U4888 : GTECH_NAND2 port map( A => n1766, B => n4729, Z => n4953);
   U4889 : GTECH_NAND2 port map( A => n1510, B => n4730, Z => n4952);
   U4890 : GTECH_NAND2 port map( A => B(18), B => A(3), Z => n4730);
   U4891 : GTECH_NAND2 port map( A => n4954, B => n4955, Z => n4729);
   U4892 : GTECH_NAND2 port map( A => n1518, B => n4956, Z => n4955);
   U4893 : GTECH_NAND2 port map( A => n1667, B => n1732, Z => n4956);
   U4894 : GTECH_NAND2 port map( A => n4957, B => n4958, Z => n4954);
   U4895 : GTECH_NAND2 port map( A => n4959, B => n4960, Z => n4937);
   U4896 : GTECH_NAND2 port map( A => n1798, B => n4737, Z => n4960);
   U4897 : GTECH_NAND2 port map( A => n1512, B => n4739, Z => n4959);
   U4898 : GTECH_NAND2 port map( A => B(17), B => A(4), Z => n4739);
   U4899 : GTECH_NAND2 port map( A => n4961, B => n4962, Z => n4737);
   U4900 : GTECH_NAND2 port map( A => n4963, B => n4964, Z => n4962);
   U4901 : GTECH_NAND2 port map( A => n1516, B => n4965, Z => n4963);
   U4902 : GTECH_NAND2 port map( A => n1767, B => n4966, Z => n4961);
   U4903 : GTECH_NAND2 port map( A => n4967, B => n4968, Z => n4934);
   U4904 : GTECH_NAND2 port map( A => n1352, B => n4745, Z => n4968);
   U4905 : GTECH_NAND2 port map( A => n1513, B => n4746, Z => n4967);
   U4906 : GTECH_NAND2 port map( A => B(16), B => A(5), Z => n4746);
   U4907 : GTECH_NAND2 port map( A => n4969, B => n4970, Z => n4745);
   U4908 : GTECH_NAND2 port map( A => n4971, B => n4972, Z => n4970);
   U4909 : GTECH_NAND2 port map( A => n4973, B => n4974, Z => n4971);
   U4910 : GTECH_NAND2 port map( A => n1799, B => n1515, Z => n4969);
   U4911 : GTECH_NAND2 port map( A => n4975, B => n4976, Z => n4931);
   U4912 : GTECH_NAND2 port map( A => n1828, B => n4753, Z => n4976);
   U4913 : GTECH_NAND2 port map( A => n1354, B => n4755, Z => n4975);
   U4914 : GTECH_NAND2 port map( A => B(15), B => A(6), Z => n4755);
   U4915 : GTECH_NAND2 port map( A => n4977, B => n4978, Z => n4753);
   U4916 : GTECH_NAND2 port map( A => n4979, B => n4980, Z => n4978);
   U4917 : GTECH_NAND2 port map( A => n1514, B => n4981, Z => n4979);
   U4918 : GTECH_NAND2 port map( A => n1359, B => n4982, Z => n4977);
   U4919 : GTECH_NAND2 port map( A => n4983, B => n4984, Z => n4928);
   U4920 : GTECH_NAND2 port map( A => n1234, B => n4761, Z => n4984);
   U4921 : GTECH_NAND2 port map( A => n1355, B => n4762, Z => n4983);
   U4922 : GTECH_NAND2 port map( A => B(14), B => A(7), Z => n4762);
   U4923 : GTECH_NAND2 port map( A => n4985, B => n4986, Z => n4761);
   U4924 : GTECH_NAND2 port map( A => n4987, B => n4988, Z => n4986);
   U4925 : GTECH_NAND2 port map( A => n4989, B => n4990, Z => n4987);
   U4926 : GTECH_NAND2 port map( A => n1829, B => n1357, Z => n4985);
   U4927 : GTECH_NAND2 port map( A => n4991, B => n4992, Z => n4925);
   U4928 : GTECH_NAND2 port map( A => n1854, B => n4769, Z => n4992);
   U4929 : GTECH_NAND2 port map( A => n1236, B => n4771, Z => n4991);
   U4930 : GTECH_NAND2 port map( A => B(13), B => A(8), Z => n4771);
   U4931 : GTECH_NAND2 port map( A => n4993, B => n4994, Z => n4769);
   U4932 : GTECH_NAND2 port map( A => n4995, B => n4996, Z => n4994);
   U4933 : GTECH_NAND2 port map( A => n1356, B => n4997, Z => n4995);
   U4934 : GTECH_NAND2 port map( A => n1241, B => n4998, Z => n4993);
   U4935 : GTECH_NAND2 port map( A => n4999, B => n5000, Z => n4922);
   U4936 : GTECH_NAND2 port map( A => n1130, B => n4777, Z => n5000);
   U4937 : GTECH_NAND2 port map( A => n1237, B => n4778, Z => n4999);
   U4938 : GTECH_NAND2 port map( A => B(12), B => A(9), Z => n4778);
   U4939 : GTECH_NAND2 port map( A => n5001, B => n5002, Z => n4777);
   U4940 : GTECH_NAND2 port map( A => n5003, B => n5004, Z => n5002);
   U4941 : GTECH_NAND2 port map( A => n5005, B => n5006, Z => n5003);
   U4942 : GTECH_NAND2 port map( A => n1855, B => n1239, Z => n5001);
   U4943 : GTECH_NAND2 port map( A => n5007, B => n5008, Z => n4919);
   U4944 : GTECH_NAND2 port map( A => n1876, B => n4785, Z => n5008);
   U4945 : GTECH_NAND2 port map( A => n1132, B => n4787, Z => n5007);
   U4946 : GTECH_NAND2 port map( A => B(11), B => A(10), Z => n4787);
   U4947 : GTECH_NAND2 port map( A => n5009, B => n5010, Z => n4785);
   U4948 : GTECH_NAND2 port map( A => n5011, B => n5012, Z => n5010);
   U4949 : GTECH_NAND2 port map( A => n1238, B => n5013, Z => n5011);
   U4950 : GTECH_NAND2 port map( A => n1137, B => n5014, Z => n5009);
   U4951 : GTECH_NAND2 port map( A => n5015, B => n5016, Z => n4916);
   U4952 : GTECH_NAND2 port map( A => n1050, B => n4793, Z => n5016);
   U4953 : GTECH_NAND2 port map( A => n1133, B => n4794, Z => n5015);
   U4954 : GTECH_NAND2 port map( A => B(10), B => A(11), Z => n4794);
   U4955 : GTECH_NAND2 port map( A => n5017, B => n5018, Z => n4793);
   U4956 : GTECH_NAND2 port map( A => n5019, B => n5020, Z => n5018);
   U4957 : GTECH_NAND2 port map( A => n5021, B => n5022, Z => n5019);
   U4958 : GTECH_NAND2 port map( A => n1877, B => n1135, Z => n5017);
   U4959 : GTECH_NAND2 port map( A => n5023, B => n5024, Z => n4913);
   U4960 : GTECH_NAND2 port map( A => n991, B => n4801, Z => n5024);
   U4961 : GTECH_NAND2 port map( A => n1051, B => n4803, Z => n5023);
   U4962 : GTECH_NAND2 port map( A => B(9), B => A(12), Z => n4803);
   U4963 : GTECH_NAND2 port map( A => n5025, B => n5026, Z => n4801);
   U4964 : GTECH_NAND2 port map( A => n5027, B => n5028, Z => n5026);
   U4965 : GTECH_NAND2 port map( A => n1134, B => n5029, Z => n5027);
   U4966 : GTECH_NAND2 port map( A => n1054, B => n5030, Z => n5025);
   U4967 : GTECH_NAND2 port map( A => n5031, B => n5032, Z => n4910);
   U4968 : GTECH_NAND2 port map( A => n1864, B => n4809, Z => n5032);
   U4969 : GTECH_NAND2 port map( A => n993, B => n4810, Z => n5031);
   U4970 : GTECH_NAND2 port map( A => B(8), B => A(13), Z => n4810);
   U4971 : GTECH_NAND2 port map( A => n5033, B => n5034, Z => n4809);
   U4972 : GTECH_NAND2 port map( A => n5035, B => n5036, Z => n5034);
   U4973 : GTECH_NAND2 port map( A => n5037, B => n5038, Z => n5035);
   U4974 : GTECH_NAND2 port map( A => n998, B => n1052, Z => n5033);
   U4975 : GTECH_NAND2 port map( A => n5039, B => n5040, Z => n4907);
   U4976 : GTECH_NAND2 port map( A => n921, B => n4817, Z => n5040);
   U4977 : GTECH_NAND2 port map( A => n994, B => n4819, Z => n5039);
   U4978 : GTECH_NAND2 port map( A => B(7), B => A(14), Z => n4819);
   U4979 : GTECH_NAND2 port map( A => n5041, B => n5042, Z => n4817);
   U4980 : GTECH_NAND2 port map( A => n5043, B => n5044, Z => n5042);
   U4981 : GTECH_NAND2 port map( A => n996, B => n5045, Z => n5043);
   U4982 : GTECH_NAND2 port map( A => n1903, B => n5046, Z => n5041);
   U4983 : GTECH_NAND2 port map( A => n5047, B => n5048, Z => n4904);
   U4984 : GTECH_NAND2 port map( A => n1840, B => n4825, Z => n5048);
   U4985 : GTECH_NAND2 port map( A => n923, B => n4826, Z => n5047);
   U4986 : GTECH_NAND2 port map( A => B(6), B => A(15), Z => n4826);
   U4987 : GTECH_NAND2 port map( A => n5049, B => n5050, Z => n4825);
   U4988 : GTECH_NAND2 port map( A => n5051, B => n5052, Z => n5050);
   U4989 : GTECH_NAND2 port map( A => n5053, B => n5054, Z => n5051);
   U4990 : GTECH_NAND2 port map( A => n926, B => n995, Z => n5049);
   U4991 : GTECH_NAND2 port map( A => n5055, B => n5056, Z => n4901);
   U4992 : GTECH_NAND2 port map( A => n449, B => n4833, Z => n5056);
   U4993 : GTECH_NAND2 port map( A => n401, B => n4835, Z => n5055);
   U4994 : GTECH_NAND2 port map( A => B(5), B => A(16), Z => n4835);
   U4995 : GTECH_NAND2 port map( A => n5057, B => n5058, Z => n4833);
   U4996 : GTECH_NAND2 port map( A => n5059, B => n5060, Z => n5058);
   U4997 : GTECH_NAND2 port map( A => n924, B => n5061, Z => n5059);
   U4998 : GTECH_NAND2 port map( A => n450, B => n5062, Z => n5057);
   U4999 : GTECH_NAND2 port map( A => n5063, B => n5064, Z => n4898);
   U5000 : GTECH_NAND2 port map( A => n820, B => n4841, Z => n5064);
   U5001 : GTECH_NAND2 port map( A => n328, B => n4842, Z => n5063);
   U5002 : GTECH_NAND2 port map( A => B(4), B => A(17), Z => n4842);
   U5003 : GTECH_NAND2 port map( A => n5065, B => n5066, Z => n4841);
   U5004 : GTECH_NAND2 port map( A => n5067, B => n5068, Z => n5066);
   U5005 : GTECH_NAND2 port map( A => n5069, B => n5070, Z => n5067);
   U5006 : GTECH_NAND2 port map( A => n857, B => n396, Z => n5065);
   U5007 : GTECH_NAND2 port map( A => n5071, B => n5072, Z => n4895);
   U5008 : GTECH_NAND2 port map( A => n788, B => n4849, Z => n5072);
   U5009 : GTECH_NAND2 port map( A => n251, B => n4851, Z => n5071);
   U5010 : GTECH_NAND2 port map( A => B(3), B => A(18), Z => n4851);
   U5011 : GTECH_NAND2 port map( A => n5073, B => n5074, Z => n4849);
   U5012 : GTECH_NAND2 port map( A => n5075, B => n5076, Z => n5074);
   U5013 : GTECH_NAND2 port map( A => n323, B => n5077, Z => n5075);
   U5014 : GTECH_NAND2 port map( A => n821, B => n5078, Z => n5073);
   U5015 : GTECH_NAND2 port map( A => n5079, B => n5080, Z => n4892);
   U5016 : GTECH_NAND2 port map( A => n760, B => n4857, Z => n5080);
   U5017 : GTECH_NAND2 port map( A => n175, B => n4858, Z => n5079);
   U5018 : GTECH_NAND2 port map( A => B(2), B => A(19), Z => n4858);
   U5019 : GTECH_NAND2 port map( A => n5081, B => n5082, Z => n4857);
   U5020 : GTECH_NAND2 port map( A => n5083, B => n5084, Z => n5082);
   U5021 : GTECH_NAND2 port map( A => n5085, B => n5086, Z => n5083);
   U5022 : GTECH_NAND2 port map( A => n789, B => n246, Z => n5081);
   U5023 : GTECH_NAND2 port map( A => n5087, B => n5088, Z => n4889);
   U5024 : GTECH_NAND2 port map( A => n736, B => n4865, Z => n5088);
   U5025 : GTECH_NAND2 port map( A => n100, B => n4867, Z => n5087);
   U5026 : GTECH_NAND2 port map( A => A(20), B => B(1), Z => n4867);
   U5027 : GTECH_NAND2 port map( A => n5089, B => n5090, Z => n4865);
   U5028 : GTECH_NAND2 port map( A => n5091, B => n5092, Z => n5090);
   U5029 : GTECH_NAND2 port map( A => n170, B => n5093, Z => n5091);
   U5030 : GTECH_NAND2 port map( A => n761, B => n5094, Z => n5089);
   U5031 : GTECH_NAND2 port map( A => n5095, B => n5096, Z => n4886);
   U5032 : GTECH_NAND2 port map( A => n716, B => n4873, Z => n5096);
   U5033 : GTECH_NAND2 port map( A => n22, B => n4874, Z => n5095);
   U5034 : GTECH_NAND2 port map( A => A(21), B => B(0), Z => n4874);
   U5035 : GTECH_NAND2 port map( A => n5097, B => n5098, Z => n4873);
   U5036 : GTECH_NAND2 port map( A => n5099, B => n5100, Z => n5098);
   U5037 : GTECH_NAND2 port map( A => n5101, B => n5102, Z => n5099);
   U5038 : GTECH_NAND2 port map( A => n737, B => n95, Z => n5097);
   U5039 : GTECH_NAND2 port map( A => n5103, B => n5104, Z => PRODUCT(20));
   U5040 : GTECH_NAND2 port map( A => n5101, B => n19, Z => n5104);
   U5041 : GTECH_NAND2 port map( A => n5105, B => n95, Z => n5103);
   U5042 : GTECH_NAND2 port map( A => n5106, B => n5107, Z => n5101);
   U5043 : GTECH_NAND2 port map( A => n5094, B => n96, Z => n5107);
   U5044 : GTECH_NAND2 port map( A => n5108, B => n170, Z => n5106);
   U5045 : GTECH_NAND2 port map( A => n5109, B => n5110, Z => n5094);
   U5046 : GTECH_NAND2 port map( A => n5085, B => n171, Z => n5110);
   U5047 : GTECH_NAND2 port map( A => n5111, B => n246, Z => n5109);
   U5048 : GTECH_NAND2 port map( A => n5112, B => n5113, Z => n5085);
   U5049 : GTECH_NAND2 port map( A => n5078, B => n247, Z => n5113);
   U5050 : GTECH_NAND2 port map( A => n5114, B => n323, Z => n5112);
   U5051 : GTECH_NAND2 port map( A => n5115, B => n5116, Z => n5078);
   U5052 : GTECH_NAND2 port map( A => n5069, B => n324, Z => n5116);
   U5053 : GTECH_NAND2 port map( A => n5117, B => n396, Z => n5115);
   U5054 : GTECH_NAND2 port map( A => n5118, B => n5119, Z => n5069);
   U5055 : GTECH_NAND2 port map( A => n5062, B => n397, Z => n5119);
   U5056 : GTECH_NAND2 port map( A => n5120, B => n924, Z => n5118);
   U5057 : GTECH_NAND2 port map( A => n5121, B => n5122, Z => n5062);
   U5058 : GTECH_NAND2 port map( A => n5053, B => n925, Z => n5122);
   U5059 : GTECH_NAND2 port map( A => n5123, B => n995, Z => n5121);
   U5060 : GTECH_NAND2 port map( A => n5124, B => n5125, Z => n5053);
   U5061 : GTECH_NAND2 port map( A => n5046, B => n999, Z => n5125);
   U5062 : GTECH_NAND2 port map( A => n5126, B => n996, Z => n5124);
   U5063 : GTECH_NAND2 port map( A => n5127, B => n5128, Z => n5046);
   U5064 : GTECH_NAND2 port map( A => n5037, B => n997, Z => n5128);
   U5065 : GTECH_NAND2 port map( A => n5129, B => n1052, Z => n5127);
   U5066 : GTECH_NAND2 port map( A => n5130, B => n5131, Z => n5037);
   U5067 : GTECH_NAND2 port map( A => n5030, B => n1053, Z => n5131);
   U5068 : GTECH_NAND2 port map( A => n5132, B => n1134, Z => n5130);
   U5069 : GTECH_NAND2 port map( A => n5133, B => n5134, Z => n5030);
   U5070 : GTECH_NAND2 port map( A => n5021, B => n1138, Z => n5134);
   U5071 : GTECH_NAND2 port map( A => n5135, B => n1135, Z => n5133);
   U5072 : GTECH_NAND2 port map( A => n5136, B => n5137, Z => n5021);
   U5073 : GTECH_NAND2 port map( A => n5014, B => n1136, Z => n5137);
   U5074 : GTECH_NAND2 port map( A => n5138, B => n1238, Z => n5136);
   U5075 : GTECH_NAND2 port map( A => n5139, B => n5140, Z => n5014);
   U5076 : GTECH_NAND2 port map( A => n5005, B => n1242, Z => n5140);
   U5077 : GTECH_NAND2 port map( A => n5141, B => n1239, Z => n5139);
   U5078 : GTECH_NAND2 port map( A => n5142, B => n5143, Z => n5005);
   U5079 : GTECH_NAND2 port map( A => n4998, B => n1240, Z => n5143);
   U5080 : GTECH_NAND2 port map( A => n5144, B => n1356, Z => n5142);
   U5081 : GTECH_NAND2 port map( A => n5145, B => n5146, Z => n4998);
   U5082 : GTECH_NAND2 port map( A => n4989, B => n1360, Z => n5146);
   U5083 : GTECH_NAND2 port map( A => n5147, B => n1357, Z => n5145);
   U5084 : GTECH_NAND2 port map( A => n5148, B => n5149, Z => n4989);
   U5085 : GTECH_NAND2 port map( A => n4982, B => n1358, Z => n5149);
   U5086 : GTECH_NAND2 port map( A => n5150, B => n1514, Z => n5148);
   U5087 : GTECH_NAND2 port map( A => n5151, B => n5152, Z => n4982);
   U5088 : GTECH_NAND2 port map( A => n4973, B => n1521, Z => n5152);
   U5089 : GTECH_NAND2 port map( A => n5153, B => n1515, Z => n5151);
   U5090 : GTECH_NAND2 port map( A => n5154, B => n5155, Z => n4973);
   U5091 : GTECH_NAND2 port map( A => n4966, B => n1519, Z => n5155);
   U5092 : GTECH_NAND2 port map( A => n5156, B => n1516, Z => n5154);
   U5093 : GTECH_NAND2 port map( A => n5157, B => n5158, Z => n4966);
   U5094 : GTECH_NAND2 port map( A => n4958, B => n1517, Z => n5158);
   U5095 : GTECH_NAND2 port map( A => n5159, B => n1667, Z => n5157);
   U5096 : GTECH_NAND2 port map( A => n1668, B => n5160, Z => n4958);
   U5097 : GTECH_NAND2 port map( A => n4951, B => n5161, Z => n5160);
   U5098 : GTECH_NOR2 port map( A => n5161, B => n4951, Z => n5162);
   U5099 : GTECH_NOR2 port map( A => n1909, B => n1714, Z => n4951);
   U5100 : GTECH_NAND2 port map( A => B(20), B => A(0), Z => n5161);
   U5101 : GTECH_NAND2 port map( A => n5163, B => n5164, Z => n5159);
   U5102 : GTECH_NAND2 port map( A => n1518, B => n1732, Z => n5164);
   U5103 : GTECH_NAND2 port map( A => n4957, B => n5165, Z => n5163);
   U5104 : GTECH_NAND2 port map( A => n5166, B => n5167, Z => n5165);
   U5105 : GTECH_NOR2 port map( A => n1649, B => n1909, Z => n5166);
   U5106 : GTECH_NOR2 port map( A => n1910, B => n1748, Z => n4957);
   U5107 : GTECH_NAND2 port map( A => n5168, B => n5169, Z => n5156);
   U5108 : GTECH_NAND2 port map( A => n1767, B => n4964, Z => n5169);
   U5109 : GTECH_NAND2 port map( A => n1520, B => n4965, Z => n5168);
   U5110 : GTECH_NAND2 port map( A => B(17), B => A(3), Z => n4965);
   U5111 : GTECH_NAND2 port map( A => n5170, B => n5171, Z => n4964);
   U5112 : GTECH_NAND2 port map( A => n1528, B => n5172, Z => n5171);
   U5113 : GTECH_NAND2 port map( A => n1669, B => n1733, Z => n5172);
   U5114 : GTECH_NAND2 port map( A => n5173, B => n5174, Z => n5170);
   U5115 : GTECH_NAND2 port map( A => n5175, B => n5176, Z => n5153);
   U5116 : GTECH_NAND2 port map( A => n1799, B => n4972, Z => n5176);
   U5117 : GTECH_NAND2 port map( A => n1522, B => n4974, Z => n5175);
   U5118 : GTECH_NAND2 port map( A => B(16), B => A(4), Z => n4974);
   U5119 : GTECH_NAND2 port map( A => n5177, B => n5178, Z => n4972);
   U5120 : GTECH_NAND2 port map( A => n5179, B => n5180, Z => n5178);
   U5121 : GTECH_NAND2 port map( A => n1526, B => n5181, Z => n5179);
   U5122 : GTECH_NAND2 port map( A => n1768, B => n5182, Z => n5177);
   U5123 : GTECH_NAND2 port map( A => n5183, B => n5184, Z => n5150);
   U5124 : GTECH_NAND2 port map( A => n1359, B => n4980, Z => n5184);
   U5125 : GTECH_NAND2 port map( A => n1523, B => n4981, Z => n5183);
   U5126 : GTECH_NAND2 port map( A => B(15), B => A(5), Z => n4981);
   U5127 : GTECH_NAND2 port map( A => n5185, B => n5186, Z => n4980);
   U5128 : GTECH_NAND2 port map( A => n5187, B => n5188, Z => n5186);
   U5129 : GTECH_NAND2 port map( A => n5189, B => n5190, Z => n5187);
   U5130 : GTECH_NAND2 port map( A => n1800, B => n1525, Z => n5185);
   U5131 : GTECH_NAND2 port map( A => n5191, B => n5192, Z => n5147);
   U5132 : GTECH_NAND2 port map( A => n1829, B => n4988, Z => n5192);
   U5133 : GTECH_NAND2 port map( A => n1361, B => n4990, Z => n5191);
   U5134 : GTECH_NAND2 port map( A => B(14), B => A(6), Z => n4990);
   U5135 : GTECH_NAND2 port map( A => n5193, B => n5194, Z => n4988);
   U5136 : GTECH_NAND2 port map( A => n5195, B => n5196, Z => n5194);
   U5137 : GTECH_NAND2 port map( A => n1524, B => n5197, Z => n5195);
   U5138 : GTECH_NAND2 port map( A => n1366, B => n5198, Z => n5193);
   U5139 : GTECH_NAND2 port map( A => n5199, B => n5200, Z => n5144);
   U5140 : GTECH_NAND2 port map( A => n1241, B => n4996, Z => n5200);
   U5141 : GTECH_NAND2 port map( A => n1362, B => n4997, Z => n5199);
   U5142 : GTECH_NAND2 port map( A => B(13), B => A(7), Z => n4997);
   U5143 : GTECH_NAND2 port map( A => n5201, B => n5202, Z => n4996);
   U5144 : GTECH_NAND2 port map( A => n5203, B => n5204, Z => n5202);
   U5145 : GTECH_NAND2 port map( A => n5205, B => n5206, Z => n5203);
   U5146 : GTECH_NAND2 port map( A => n1830, B => n1364, Z => n5201);
   U5147 : GTECH_NAND2 port map( A => n5207, B => n5208, Z => n5141);
   U5148 : GTECH_NAND2 port map( A => n1855, B => n5004, Z => n5208);
   U5149 : GTECH_NAND2 port map( A => n1243, B => n5006, Z => n5207);
   U5150 : GTECH_NAND2 port map( A => B(12), B => A(8), Z => n5006);
   U5151 : GTECH_NAND2 port map( A => n5209, B => n5210, Z => n5004);
   U5152 : GTECH_NAND2 port map( A => n5211, B => n5212, Z => n5210);
   U5153 : GTECH_NAND2 port map( A => n1363, B => n5213, Z => n5211);
   U5154 : GTECH_NAND2 port map( A => n1248, B => n5214, Z => n5209);
   U5155 : GTECH_NAND2 port map( A => n5215, B => n5216, Z => n5138);
   U5156 : GTECH_NAND2 port map( A => n1137, B => n5012, Z => n5216);
   U5157 : GTECH_NAND2 port map( A => n1244, B => n5013, Z => n5215);
   U5158 : GTECH_NAND2 port map( A => B(11), B => A(9), Z => n5013);
   U5159 : GTECH_NAND2 port map( A => n5217, B => n5218, Z => n5012);
   U5160 : GTECH_NAND2 port map( A => n5219, B => n5220, Z => n5218);
   U5161 : GTECH_NAND2 port map( A => n5221, B => n5222, Z => n5219);
   U5162 : GTECH_NAND2 port map( A => n1856, B => n1246, Z => n5217);
   U5163 : GTECH_NAND2 port map( A => n5223, B => n5224, Z => n5135);
   U5164 : GTECH_NAND2 port map( A => n1877, B => n5020, Z => n5224);
   U5165 : GTECH_NAND2 port map( A => n1139, B => n5022, Z => n5223);
   U5166 : GTECH_NAND2 port map( A => B(10), B => A(10), Z => n5022);
   U5167 : GTECH_NAND2 port map( A => n5225, B => n5226, Z => n5020);
   U5168 : GTECH_NAND2 port map( A => n5227, B => n5228, Z => n5226);
   U5169 : GTECH_NAND2 port map( A => n1245, B => n5229, Z => n5227);
   U5170 : GTECH_NAND2 port map( A => n1144, B => n5230, Z => n5225);
   U5171 : GTECH_NAND2 port map( A => n5231, B => n5232, Z => n5132);
   U5172 : GTECH_NAND2 port map( A => n1054, B => n5028, Z => n5232);
   U5173 : GTECH_NAND2 port map( A => n1140, B => n5029, Z => n5231);
   U5174 : GTECH_NAND2 port map( A => B(9), B => A(11), Z => n5029);
   U5175 : GTECH_NAND2 port map( A => n5233, B => n5234, Z => n5028);
   U5176 : GTECH_NAND2 port map( A => n5235, B => n5236, Z => n5234);
   U5177 : GTECH_NAND2 port map( A => n5237, B => n5238, Z => n5235);
   U5178 : GTECH_NAND2 port map( A => n1878, B => n1142, Z => n5233);
   U5179 : GTECH_NAND2 port map( A => n5239, B => n5240, Z => n5129);
   U5180 : GTECH_NAND2 port map( A => n998, B => n5036, Z => n5240);
   U5181 : GTECH_NAND2 port map( A => n1055, B => n5038, Z => n5239);
   U5182 : GTECH_NAND2 port map( A => B(8), B => A(12), Z => n5038);
   U5183 : GTECH_NAND2 port map( A => n5241, B => n5242, Z => n5036);
   U5184 : GTECH_NAND2 port map( A => n5243, B => n5244, Z => n5242);
   U5185 : GTECH_NAND2 port map( A => n1141, B => n5245, Z => n5243);
   U5186 : GTECH_NAND2 port map( A => n1058, B => n5246, Z => n5241);
   U5187 : GTECH_NAND2 port map( A => n5247, B => n5248, Z => n5126);
   U5188 : GTECH_NAND2 port map( A => n1903, B => n5044, Z => n5248);
   U5189 : GTECH_NAND2 port map( A => n1000, B => n5045, Z => n5247);
   U5190 : GTECH_NAND2 port map( A => B(7), B => A(13), Z => n5045);
   U5191 : GTECH_NAND2 port map( A => n5249, B => n5250, Z => n5044);
   U5192 : GTECH_NAND2 port map( A => n5251, B => n5252, Z => n5250);
   U5193 : GTECH_NAND2 port map( A => n5253, B => n5254, Z => n5251);
   U5194 : GTECH_NAND2 port map( A => n1005, B => n1056, Z => n5249);
   U5195 : GTECH_NAND2 port map( A => n5255, B => n5256, Z => n5123);
   U5196 : GTECH_NAND2 port map( A => n926, B => n5052, Z => n5256);
   U5197 : GTECH_NAND2 port map( A => n1001, B => n5054, Z => n5255);
   U5198 : GTECH_NAND2 port map( A => B(6), B => A(14), Z => n5054);
   U5199 : GTECH_NAND2 port map( A => n5257, B => n5258, Z => n5052);
   U5200 : GTECH_NAND2 port map( A => n5259, B => n5260, Z => n5258);
   U5201 : GTECH_NAND2 port map( A => n1003, B => n5261, Z => n5259);
   U5202 : GTECH_NAND2 port map( A => n1841, B => n5262, Z => n5257);
   U5203 : GTECH_NAND2 port map( A => n5263, B => n5264, Z => n5120);
   U5204 : GTECH_NAND2 port map( A => n450, B => n5060, Z => n5264);
   U5205 : GTECH_NAND2 port map( A => n398, B => n5061, Z => n5263);
   U5206 : GTECH_NAND2 port map( A => B(5), B => A(15), Z => n5061);
   U5207 : GTECH_NAND2 port map( A => n5265, B => n5266, Z => n5060);
   U5208 : GTECH_NAND2 port map( A => n5267, B => n5268, Z => n5266);
   U5209 : GTECH_NAND2 port map( A => n5269, B => n5270, Z => n5267);
   U5210 : GTECH_NAND2 port map( A => n451, B => n1002, Z => n5265);
   U5211 : GTECH_NAND2 port map( A => n5271, B => n5272, Z => n5117);
   U5212 : GTECH_NAND2 port map( A => n857, B => n5068, Z => n5272);
   U5213 : GTECH_NAND2 port map( A => n325, B => n5070, Z => n5271);
   U5214 : GTECH_NAND2 port map( A => B(4), B => A(16), Z => n5070);
   U5215 : GTECH_NAND2 port map( A => n5273, B => n5274, Z => n5068);
   U5216 : GTECH_NAND2 port map( A => n5275, B => n5276, Z => n5274);
   U5217 : GTECH_NAND2 port map( A => n393, B => n5277, Z => n5275);
   U5218 : GTECH_NAND2 port map( A => n1813, B => n5278, Z => n5273);
   U5219 : GTECH_NAND2 port map( A => n5279, B => n5280, Z => n5114);
   U5220 : GTECH_NAND2 port map( A => n821, B => n5076, Z => n5280);
   U5221 : GTECH_NAND2 port map( A => n248, B => n5077, Z => n5279);
   U5222 : GTECH_NAND2 port map( A => B(3), B => A(17), Z => n5077);
   U5223 : GTECH_NAND2 port map( A => n5281, B => n5282, Z => n5076);
   U5224 : GTECH_NAND2 port map( A => n5283, B => n5284, Z => n5282);
   U5225 : GTECH_NAND2 port map( A => n5285, B => n5286, Z => n5283);
   U5226 : GTECH_NAND2 port map( A => n858, B => n320, Z => n5281);
   U5227 : GTECH_NAND2 port map( A => n5287, B => n5288, Z => n5111);
   U5228 : GTECH_NAND2 port map( A => n789, B => n5084, Z => n5288);
   U5229 : GTECH_NAND2 port map( A => n172, B => n5086, Z => n5287);
   U5230 : GTECH_NAND2 port map( A => B(2), B => A(18), Z => n5086);
   U5231 : GTECH_NAND2 port map( A => n5289, B => n5290, Z => n5084);
   U5232 : GTECH_NAND2 port map( A => n5291, B => n5292, Z => n5290);
   U5233 : GTECH_NAND2 port map( A => n243, B => n5293, Z => n5291);
   U5234 : GTECH_NAND2 port map( A => n822, B => n5294, Z => n5289);
   U5235 : GTECH_NAND2 port map( A => n5295, B => n5296, Z => n5108);
   U5236 : GTECH_NAND2 port map( A => n761, B => n5092, Z => n5296);
   U5237 : GTECH_NAND2 port map( A => n97, B => n5093, Z => n5295);
   U5238 : GTECH_NAND2 port map( A => A(19), B => B(1), Z => n5093);
   U5239 : GTECH_NAND2 port map( A => n5297, B => n5298, Z => n5092);
   U5240 : GTECH_NAND2 port map( A => n5299, B => n5300, Z => n5298);
   U5241 : GTECH_NAND2 port map( A => n5301, B => n5302, Z => n5299);
   U5242 : GTECH_NAND2 port map( A => n790, B => n167, Z => n5297);
   U5243 : GTECH_NAND2 port map( A => n5303, B => n5304, Z => n5105);
   U5244 : GTECH_NAND2 port map( A => n737, B => n5100, Z => n5304);
   U5245 : GTECH_NAND2 port map( A => n20, B => n5102, Z => n5303);
   U5246 : GTECH_NAND2 port map( A => A(20), B => B(0), Z => n5102);
   U5247 : GTECH_NAND2 port map( A => n5305, B => n5306, Z => n5100);
   U5248 : GTECH_NAND2 port map( A => n5307, B => n5308, Z => n5306);
   U5249 : GTECH_NAND2 port map( A => n92, B => n5309, Z => n5307);
   U5250 : GTECH_NAND2 port map( A => n762, B => n5310, Z => n5305);
   U5251 : GTECH_NOR2 port map( A => n5311, B => n5312, Z => PRODUCT(19));
   U5252 : GTECH_NOR2 port map( A => n5310, B => n17, Z => n5312);
   U5253 : GTECH_NOR2 port map( A => n5313, B => n92, Z => n5311);
   U5254 : GTECH_NAND2 port map( A => n5314, B => n5315, Z => n5310);
   U5255 : GTECH_NAND2 port map( A => n5301, B => n93, Z => n5315);
   U5256 : GTECH_NAND2 port map( A => n5316, B => n167, Z => n5314);
   U5257 : GTECH_NAND2 port map( A => n5317, B => n5318, Z => n5301);
   U5258 : GTECH_NAND2 port map( A => n5294, B => n168, Z => n5318);
   U5259 : GTECH_NAND2 port map( A => n5319, B => n243, Z => n5317);
   U5260 : GTECH_NAND2 port map( A => n5320, B => n5321, Z => n5294);
   U5261 : GTECH_NAND2 port map( A => n5285, B => n244, Z => n5321);
   U5262 : GTECH_NAND2 port map( A => n5322, B => n320, Z => n5320);
   U5263 : GTECH_NAND2 port map( A => n5323, B => n5324, Z => n5285);
   U5264 : GTECH_NAND2 port map( A => n5278, B => n321, Z => n5324);
   U5265 : GTECH_NAND2 port map( A => n5325, B => n393, Z => n5323);
   U5266 : GTECH_NAND2 port map( A => n5326, B => n5327, Z => n5278);
   U5267 : GTECH_NAND2 port map( A => n5269, B => n394, Z => n5327);
   U5268 : GTECH_NAND2 port map( A => n5328, B => n1002, Z => n5326);
   U5269 : GTECH_NAND2 port map( A => n5329, B => n5330, Z => n5269);
   U5270 : GTECH_NAND2 port map( A => n5262, B => n1006, Z => n5330);
   U5271 : GTECH_NAND2 port map( A => n5331, B => n1003, Z => n5329);
   U5272 : GTECH_NAND2 port map( A => n5332, B => n5333, Z => n5262);
   U5273 : GTECH_NAND2 port map( A => n5253, B => n1004, Z => n5333);
   U5274 : GTECH_NAND2 port map( A => n5334, B => n1056, Z => n5332);
   U5275 : GTECH_NAND2 port map( A => n5335, B => n5336, Z => n5253);
   U5276 : GTECH_NAND2 port map( A => n5246, B => n1057, Z => n5336);
   U5277 : GTECH_NAND2 port map( A => n5337, B => n1141, Z => n5335);
   U5278 : GTECH_NAND2 port map( A => n5338, B => n5339, Z => n5246);
   U5279 : GTECH_NAND2 port map( A => n5237, B => n1145, Z => n5339);
   U5280 : GTECH_NAND2 port map( A => n5340, B => n1142, Z => n5338);
   U5281 : GTECH_NAND2 port map( A => n5341, B => n5342, Z => n5237);
   U5282 : GTECH_NAND2 port map( A => n5230, B => n1143, Z => n5342);
   U5283 : GTECH_NAND2 port map( A => n5343, B => n1245, Z => n5341);
   U5284 : GTECH_NAND2 port map( A => n5344, B => n5345, Z => n5230);
   U5285 : GTECH_NAND2 port map( A => n5221, B => n1249, Z => n5345);
   U5286 : GTECH_NAND2 port map( A => n5346, B => n1246, Z => n5344);
   U5287 : GTECH_NAND2 port map( A => n5347, B => n5348, Z => n5221);
   U5288 : GTECH_NAND2 port map( A => n5214, B => n1247, Z => n5348);
   U5289 : GTECH_NAND2 port map( A => n5349, B => n1363, Z => n5347);
   U5290 : GTECH_NAND2 port map( A => n5350, B => n5351, Z => n5214);
   U5291 : GTECH_NAND2 port map( A => n5205, B => n1367, Z => n5351);
   U5292 : GTECH_NAND2 port map( A => n5352, B => n1364, Z => n5350);
   U5293 : GTECH_NAND2 port map( A => n5353, B => n5354, Z => n5205);
   U5294 : GTECH_NAND2 port map( A => n5198, B => n1365, Z => n5354);
   U5295 : GTECH_NAND2 port map( A => n5355, B => n1524, Z => n5353);
   U5296 : GTECH_NAND2 port map( A => n5356, B => n5357, Z => n5198);
   U5297 : GTECH_NAND2 port map( A => n5189, B => n1531, Z => n5357);
   U5298 : GTECH_NAND2 port map( A => n5358, B => n1525, Z => n5356);
   U5299 : GTECH_NAND2 port map( A => n5359, B => n5360, Z => n5189);
   U5300 : GTECH_NAND2 port map( A => n5182, B => n1529, Z => n5360);
   U5301 : GTECH_NAND2 port map( A => n5361, B => n1526, Z => n5359);
   U5302 : GTECH_NAND2 port map( A => n5362, B => n5363, Z => n5182);
   U5303 : GTECH_NAND2 port map( A => n5174, B => n1527, Z => n5363);
   U5304 : GTECH_NAND2 port map( A => n5364, B => n1669, Z => n5362);
   U5305 : GTECH_NAND2 port map( A => n1670, B => n5365, Z => n5174);
   U5306 : GTECH_NAND2 port map( A => n5167, B => n5366, Z => n5365);
   U5307 : GTECH_NOR2 port map( A => n5366, B => n5167, Z => n5367);
   U5308 : GTECH_NOR2 port map( A => n1910, B => n1714, Z => n5167);
   U5309 : GTECH_NAND2 port map( A => B(19), B => A(0), Z => n5366);
   U5310 : GTECH_NAND2 port map( A => n5368, B => n5369, Z => n5364);
   U5311 : GTECH_NAND2 port map( A => n1528, B => n1733, Z => n5369);
   U5312 : GTECH_NAND2 port map( A => n5173, B => n5370, Z => n5368);
   U5313 : GTECH_NAND2 port map( A => n5371, B => n5372, Z => n5370);
   U5314 : GTECH_NOR2 port map( A => n1649, B => n1910, Z => n5371);
   U5315 : GTECH_NOR2 port map( A => n1911, B => n1748, Z => n5173);
   U5316 : GTECH_NAND2 port map( A => n5373, B => n5374, Z => n5361);
   U5317 : GTECH_NAND2 port map( A => n1768, B => n5180, Z => n5374);
   U5318 : GTECH_NAND2 port map( A => n1530, B => n5181, Z => n5373);
   U5319 : GTECH_NAND2 port map( A => B(16), B => A(3), Z => n5181);
   U5320 : GTECH_NAND2 port map( A => n5375, B => n5376, Z => n5180);
   U5321 : GTECH_NAND2 port map( A => n1538, B => n5377, Z => n5376);
   U5322 : GTECH_NAND2 port map( A => n1671, B => n1734, Z => n5377);
   U5323 : GTECH_NAND2 port map( A => n5378, B => n5379, Z => n5375);
   U5324 : GTECH_NAND2 port map( A => n5380, B => n5381, Z => n5358);
   U5325 : GTECH_NAND2 port map( A => n1800, B => n5188, Z => n5381);
   U5326 : GTECH_NAND2 port map( A => n1532, B => n5190, Z => n5380);
   U5327 : GTECH_NAND2 port map( A => B(15), B => A(4), Z => n5190);
   U5328 : GTECH_NAND2 port map( A => n5382, B => n5383, Z => n5188);
   U5329 : GTECH_NAND2 port map( A => n5384, B => n5385, Z => n5383);
   U5330 : GTECH_NAND2 port map( A => n1536, B => n5386, Z => n5384);
   U5331 : GTECH_NAND2 port map( A => n1769, B => n5387, Z => n5382);
   U5332 : GTECH_NAND2 port map( A => n5388, B => n5389, Z => n5355);
   U5333 : GTECH_NAND2 port map( A => n1366, B => n5196, Z => n5389);
   U5334 : GTECH_NAND2 port map( A => n1533, B => n5197, Z => n5388);
   U5335 : GTECH_NAND2 port map( A => B(14), B => A(5), Z => n5197);
   U5336 : GTECH_NAND2 port map( A => n5390, B => n5391, Z => n5196);
   U5337 : GTECH_NAND2 port map( A => n5392, B => n5393, Z => n5391);
   U5338 : GTECH_NAND2 port map( A => n5394, B => n5395, Z => n5392);
   U5339 : GTECH_NAND2 port map( A => n1801, B => n1535, Z => n5390);
   U5340 : GTECH_NAND2 port map( A => n5396, B => n5397, Z => n5352);
   U5341 : GTECH_NAND2 port map( A => n1830, B => n5204, Z => n5397);
   U5342 : GTECH_NAND2 port map( A => n1368, B => n5206, Z => n5396);
   U5343 : GTECH_NAND2 port map( A => B(13), B => A(6), Z => n5206);
   U5344 : GTECH_NAND2 port map( A => n5398, B => n5399, Z => n5204);
   U5345 : GTECH_NAND2 port map( A => n5400, B => n5401, Z => n5399);
   U5346 : GTECH_NAND2 port map( A => n1534, B => n5402, Z => n5400);
   U5347 : GTECH_NAND2 port map( A => n1373, B => n5403, Z => n5398);
   U5348 : GTECH_NAND2 port map( A => n5404, B => n5405, Z => n5349);
   U5349 : GTECH_NAND2 port map( A => n1248, B => n5212, Z => n5405);
   U5350 : GTECH_NAND2 port map( A => n1369, B => n5213, Z => n5404);
   U5351 : GTECH_NAND2 port map( A => B(12), B => A(7), Z => n5213);
   U5352 : GTECH_NAND2 port map( A => n5406, B => n5407, Z => n5212);
   U5353 : GTECH_NAND2 port map( A => n5408, B => n5409, Z => n5407);
   U5354 : GTECH_NAND2 port map( A => n5410, B => n5411, Z => n5408);
   U5355 : GTECH_NAND2 port map( A => n1831, B => n1371, Z => n5406);
   U5356 : GTECH_NAND2 port map( A => n5412, B => n5413, Z => n5346);
   U5357 : GTECH_NAND2 port map( A => n1856, B => n5220, Z => n5413);
   U5358 : GTECH_NAND2 port map( A => n1250, B => n5222, Z => n5412);
   U5359 : GTECH_NAND2 port map( A => B(11), B => A(8), Z => n5222);
   U5360 : GTECH_NAND2 port map( A => n5414, B => n5415, Z => n5220);
   U5361 : GTECH_NAND2 port map( A => n5416, B => n5417, Z => n5415);
   U5362 : GTECH_NAND2 port map( A => n1370, B => n5418, Z => n5416);
   U5363 : GTECH_NAND2 port map( A => n1255, B => n5419, Z => n5414);
   U5364 : GTECH_NAND2 port map( A => n5420, B => n5421, Z => n5343);
   U5365 : GTECH_NAND2 port map( A => n1144, B => n5228, Z => n5421);
   U5366 : GTECH_NAND2 port map( A => n1251, B => n5229, Z => n5420);
   U5367 : GTECH_NAND2 port map( A => B(10), B => A(9), Z => n5229);
   U5368 : GTECH_NAND2 port map( A => n5422, B => n5423, Z => n5228);
   U5369 : GTECH_NAND2 port map( A => n5424, B => n5425, Z => n5423);
   U5370 : GTECH_NAND2 port map( A => n5426, B => n5427, Z => n5424);
   U5371 : GTECH_NAND2 port map( A => n1857, B => n1253, Z => n5422);
   U5372 : GTECH_NAND2 port map( A => n5428, B => n5429, Z => n5340);
   U5373 : GTECH_NAND2 port map( A => n1878, B => n5236, Z => n5429);
   U5374 : GTECH_NAND2 port map( A => n1146, B => n5238, Z => n5428);
   U5375 : GTECH_NAND2 port map( A => B(9), B => A(10), Z => n5238);
   U5376 : GTECH_NAND2 port map( A => n5430, B => n5431, Z => n5236);
   U5377 : GTECH_NAND2 port map( A => n5432, B => n5433, Z => n5431);
   U5378 : GTECH_NAND2 port map( A => n1252, B => n5434, Z => n5432);
   U5379 : GTECH_NAND2 port map( A => n1151, B => n5435, Z => n5430);
   U5380 : GTECH_NAND2 port map( A => n5436, B => n5437, Z => n5337);
   U5381 : GTECH_NAND2 port map( A => n1058, B => n5244, Z => n5437);
   U5382 : GTECH_NAND2 port map( A => n1147, B => n5245, Z => n5436);
   U5383 : GTECH_NAND2 port map( A => B(8), B => A(11), Z => n5245);
   U5384 : GTECH_NAND2 port map( A => n5438, B => n5439, Z => n5244);
   U5385 : GTECH_NAND2 port map( A => n5440, B => n5441, Z => n5439);
   U5386 : GTECH_NAND2 port map( A => n5442, B => n5443, Z => n5440);
   U5387 : GTECH_NAND2 port map( A => n1865, B => n1149, Z => n5438);
   U5388 : GTECH_NAND2 port map( A => n5444, B => n5445, Z => n5334);
   U5389 : GTECH_NAND2 port map( A => n1005, B => n5252, Z => n5445);
   U5390 : GTECH_NAND2 port map( A => n1059, B => n5254, Z => n5444);
   U5391 : GTECH_NAND2 port map( A => B(7), B => A(12), Z => n5254);
   U5392 : GTECH_NAND2 port map( A => n5446, B => n5447, Z => n5252);
   U5393 : GTECH_NAND2 port map( A => n5448, B => n5449, Z => n5447);
   U5394 : GTECH_NAND2 port map( A => n1148, B => n5450, Z => n5448);
   U5395 : GTECH_NAND2 port map( A => n1062, B => n5451, Z => n5446);
   U5396 : GTECH_NAND2 port map( A => n5452, B => n5453, Z => n5331);
   U5397 : GTECH_NAND2 port map( A => n1841, B => n5260, Z => n5453);
   U5398 : GTECH_NAND2 port map( A => n1007, B => n5261, Z => n5452);
   U5399 : GTECH_NAND2 port map( A => B(6), B => A(13), Z => n5261);
   U5400 : GTECH_NAND2 port map( A => n5454, B => n5455, Z => n5260);
   U5401 : GTECH_NAND2 port map( A => n5456, B => n5457, Z => n5455);
   U5402 : GTECH_NAND2 port map( A => n5458, B => n5459, Z => n5456);
   U5403 : GTECH_NAND2 port map( A => n1010, B => n1060, Z => n5454);
   U5404 : GTECH_NAND2 port map( A => n5460, B => n5461, Z => n5328);
   U5405 : GTECH_NAND2 port map( A => n451, B => n5268, Z => n5461);
   U5406 : GTECH_NAND2 port map( A => n395, B => n5270, Z => n5460);
   U5407 : GTECH_NAND2 port map( A => B(5), B => A(14), Z => n5270);
   U5408 : GTECH_NAND2 port map( A => n5462, B => n5463, Z => n5268);
   U5409 : GTECH_NAND2 port map( A => n5464, B => n5465, Z => n5463);
   U5410 : GTECH_NAND2 port map( A => n1008, B => n5466, Z => n5464);
   U5411 : GTECH_NAND2 port map( A => n452, B => n5467, Z => n5462);
   U5412 : GTECH_NAND2 port map( A => n5468, B => n5469, Z => n5325);
   U5413 : GTECH_NAND2 port map( A => n1813, B => n5276, Z => n5469);
   U5414 : GTECH_NAND2 port map( A => n322, B => n5277, Z => n5468);
   U5415 : GTECH_NAND2 port map( A => B(4), B => A(15), Z => n5277);
   U5416 : GTECH_NAND2 port map( A => n5470, B => n5471, Z => n5276);
   U5417 : GTECH_NAND2 port map( A => n5472, B => n5473, Z => n5471);
   U5418 : GTECH_NAND2 port map( A => n5474, B => n5475, Z => n5472);
   U5419 : GTECH_NAND2 port map( A => n927, B => n390, Z => n5470);
   U5420 : GTECH_NAND2 port map( A => n5476, B => n5477, Z => n5322);
   U5421 : GTECH_NAND2 port map( A => n858, B => n5284, Z => n5477);
   U5422 : GTECH_NAND2 port map( A => n245, B => n5286, Z => n5476);
   U5423 : GTECH_NAND2 port map( A => B(3), B => A(16), Z => n5286);
   U5424 : GTECH_NAND2 port map( A => n5478, B => n5479, Z => n5284);
   U5425 : GTECH_NAND2 port map( A => n5480, B => n5481, Z => n5479);
   U5426 : GTECH_NAND2 port map( A => n317, B => n5482, Z => n5480);
   U5427 : GTECH_NAND2 port map( A => n1783, B => n5483, Z => n5478);
   U5428 : GTECH_NAND2 port map( A => n5484, B => n5485, Z => n5319);
   U5429 : GTECH_NAND2 port map( A => n822, B => n5292, Z => n5485);
   U5430 : GTECH_NAND2 port map( A => n169, B => n5293, Z => n5484);
   U5431 : GTECH_NAND2 port map( A => B(2), B => A(17), Z => n5293);
   U5432 : GTECH_NAND2 port map( A => n5486, B => n5487, Z => n5292);
   U5433 : GTECH_NAND2 port map( A => n5488, B => n5489, Z => n5487);
   U5434 : GTECH_NAND2 port map( A => n5490, B => n5491, Z => n5488);
   U5435 : GTECH_NAND2 port map( A => n859, B => n240, Z => n5486);
   U5436 : GTECH_NAND2 port map( A => n5492, B => n5493, Z => n5316);
   U5437 : GTECH_NAND2 port map( A => n790, B => n5300, Z => n5493);
   U5438 : GTECH_NAND2 port map( A => n94, B => n5302, Z => n5492);
   U5439 : GTECH_NAND2 port map( A => A(18), B => B(1), Z => n5302);
   U5440 : GTECH_NAND2 port map( A => n5494, B => n5495, Z => n5300);
   U5441 : GTECH_NAND2 port map( A => n5496, B => n5497, Z => n5495);
   U5442 : GTECH_NAND2 port map( A => n164, B => n5498, Z => n5496);
   U5443 : GTECH_NAND2 port map( A => n823, B => n5499, Z => n5494);
   U5444 : GTECH_NAND2 port map( A => n5500, B => n5501, Z => n5313);
   U5445 : GTECH_NAND2 port map( A => n762, B => n5308, Z => n5501);
   U5446 : GTECH_NAND2 port map( A => n18, B => n5309, Z => n5500);
   U5447 : GTECH_NAND2 port map( A => A(19), B => B(0), Z => n5309);
   U5448 : GTECH_NAND2 port map( A => n5502, B => n5503, Z => n5308);
   U5449 : GTECH_NAND2 port map( A => n5504, B => n5505, Z => n5503);
   U5450 : GTECH_NAND2 port map( A => n5506, B => n5507, Z => n5504);
   U5451 : GTECH_NAND2 port map( A => n791, B => n89, Z => n5502);
   U5452 : GTECH_NAND2 port map( A => n5508, B => n5509, Z => PRODUCT(18));
   U5453 : GTECH_NAND2 port map( A => n5506, B => n15, Z => n5509);
   U5454 : GTECH_NAND2 port map( A => n5510, B => n89, Z => n5508);
   U5455 : GTECH_NAND2 port map( A => n5511, B => n5512, Z => n5506);
   U5456 : GTECH_NAND2 port map( A => n5499, B => n90, Z => n5512);
   U5457 : GTECH_NAND2 port map( A => n5513, B => n164, Z => n5511);
   U5458 : GTECH_NAND2 port map( A => n5514, B => n5515, Z => n5499);
   U5459 : GTECH_NAND2 port map( A => n5490, B => n165, Z => n5515);
   U5460 : GTECH_NAND2 port map( A => n5516, B => n240, Z => n5514);
   U5461 : GTECH_NAND2 port map( A => n5517, B => n5518, Z => n5490);
   U5462 : GTECH_NAND2 port map( A => n5483, B => n241, Z => n5518);
   U5463 : GTECH_NAND2 port map( A => n5519, B => n317, Z => n5517);
   U5464 : GTECH_NAND2 port map( A => n5520, B => n5521, Z => n5483);
   U5465 : GTECH_NAND2 port map( A => n5474, B => n318, Z => n5521);
   U5466 : GTECH_NAND2 port map( A => n5522, B => n390, Z => n5520);
   U5467 : GTECH_NAND2 port map( A => n5523, B => n5524, Z => n5474);
   U5468 : GTECH_NAND2 port map( A => n5467, B => n391, Z => n5524);
   U5469 : GTECH_NAND2 port map( A => n5525, B => n1008, Z => n5523);
   U5470 : GTECH_NAND2 port map( A => n5526, B => n5527, Z => n5467);
   U5471 : GTECH_NAND2 port map( A => n5458, B => n1009, Z => n5527);
   U5472 : GTECH_NAND2 port map( A => n5528, B => n1060, Z => n5526);
   U5473 : GTECH_NAND2 port map( A => n5529, B => n5530, Z => n5458);
   U5474 : GTECH_NAND2 port map( A => n5451, B => n1061, Z => n5530);
   U5475 : GTECH_NAND2 port map( A => n5531, B => n1148, Z => n5529);
   U5476 : GTECH_NAND2 port map( A => n5532, B => n5533, Z => n5451);
   U5477 : GTECH_NAND2 port map( A => n5442, B => n1152, Z => n5533);
   U5478 : GTECH_NAND2 port map( A => n5534, B => n1149, Z => n5532);
   U5479 : GTECH_NAND2 port map( A => n5535, B => n5536, Z => n5442);
   U5480 : GTECH_NAND2 port map( A => n5435, B => n1150, Z => n5536);
   U5481 : GTECH_NAND2 port map( A => n5537, B => n1252, Z => n5535);
   U5482 : GTECH_NAND2 port map( A => n5538, B => n5539, Z => n5435);
   U5483 : GTECH_NAND2 port map( A => n5426, B => n1256, Z => n5539);
   U5484 : GTECH_NAND2 port map( A => n5540, B => n1253, Z => n5538);
   U5485 : GTECH_NAND2 port map( A => n5541, B => n5542, Z => n5426);
   U5486 : GTECH_NAND2 port map( A => n5419, B => n1254, Z => n5542);
   U5487 : GTECH_NAND2 port map( A => n5543, B => n1370, Z => n5541);
   U5488 : GTECH_NAND2 port map( A => n5544, B => n5545, Z => n5419);
   U5489 : GTECH_NAND2 port map( A => n5410, B => n1374, Z => n5545);
   U5490 : GTECH_NAND2 port map( A => n5546, B => n1371, Z => n5544);
   U5491 : GTECH_NAND2 port map( A => n5547, B => n5548, Z => n5410);
   U5492 : GTECH_NAND2 port map( A => n5403, B => n1372, Z => n5548);
   U5493 : GTECH_NAND2 port map( A => n5549, B => n1534, Z => n5547);
   U5494 : GTECH_NAND2 port map( A => n5550, B => n5551, Z => n5403);
   U5495 : GTECH_NAND2 port map( A => n5394, B => n1541, Z => n5551);
   U5496 : GTECH_NAND2 port map( A => n5552, B => n1535, Z => n5550);
   U5497 : GTECH_NAND2 port map( A => n5553, B => n5554, Z => n5394);
   U5498 : GTECH_NAND2 port map( A => n5387, B => n1539, Z => n5554);
   U5499 : GTECH_NAND2 port map( A => n5555, B => n1536, Z => n5553);
   U5500 : GTECH_NAND2 port map( A => n5556, B => n5557, Z => n5387);
   U5501 : GTECH_NAND2 port map( A => n5379, B => n1537, Z => n5557);
   U5502 : GTECH_NAND2 port map( A => n5558, B => n1671, Z => n5556);
   U5503 : GTECH_NAND2 port map( A => n1672, B => n5559, Z => n5379);
   U5504 : GTECH_NAND2 port map( A => n5372, B => n5560, Z => n5559);
   U5505 : GTECH_NOR2 port map( A => n5560, B => n5372, Z => n5561);
   U5506 : GTECH_NOR2 port map( A => n1911, B => n1714, Z => n5372);
   U5507 : GTECH_NAND2 port map( A => B(18), B => A(0), Z => n5560);
   U5508 : GTECH_NAND2 port map( A => n5562, B => n5563, Z => n5558);
   U5509 : GTECH_NAND2 port map( A => n1538, B => n1734, Z => n5563);
   U5510 : GTECH_NAND2 port map( A => n5378, B => n5564, Z => n5562);
   U5511 : GTECH_NAND2 port map( A => n5565, B => n5566, Z => n5564);
   U5512 : GTECH_NOR2 port map( A => n1649, B => n1911, Z => n5565);
   U5513 : GTECH_NOR2 port map( A => n1912, B => n1748, Z => n5378);
   U5514 : GTECH_NAND2 port map( A => n5567, B => n5568, Z => n5555);
   U5515 : GTECH_NAND2 port map( A => n1769, B => n5385, Z => n5568);
   U5516 : GTECH_NAND2 port map( A => n1540, B => n5386, Z => n5567);
   U5517 : GTECH_NAND2 port map( A => B(15), B => A(3), Z => n5386);
   U5518 : GTECH_NAND2 port map( A => n5569, B => n5570, Z => n5385);
   U5519 : GTECH_NAND2 port map( A => n1548, B => n5571, Z => n5570);
   U5520 : GTECH_NAND2 port map( A => n1673, B => n1735, Z => n5571);
   U5521 : GTECH_NAND2 port map( A => n5572, B => n5573, Z => n5569);
   U5522 : GTECH_NAND2 port map( A => n5574, B => n5575, Z => n5552);
   U5523 : GTECH_NAND2 port map( A => n1801, B => n5393, Z => n5575);
   U5524 : GTECH_NAND2 port map( A => n1542, B => n5395, Z => n5574);
   U5525 : GTECH_NAND2 port map( A => B(14), B => A(4), Z => n5395);
   U5526 : GTECH_NAND2 port map( A => n5576, B => n5577, Z => n5393);
   U5527 : GTECH_NAND2 port map( A => n5578, B => n5579, Z => n5577);
   U5528 : GTECH_NAND2 port map( A => n1546, B => n5580, Z => n5578);
   U5529 : GTECH_NAND2 port map( A => n1770, B => n5581, Z => n5576);
   U5530 : GTECH_NAND2 port map( A => n5582, B => n5583, Z => n5549);
   U5531 : GTECH_NAND2 port map( A => n1373, B => n5401, Z => n5583);
   U5532 : GTECH_NAND2 port map( A => n1543, B => n5402, Z => n5582);
   U5533 : GTECH_NAND2 port map( A => B(13), B => A(5), Z => n5402);
   U5534 : GTECH_NAND2 port map( A => n5584, B => n5585, Z => n5401);
   U5535 : GTECH_NAND2 port map( A => n5586, B => n5587, Z => n5585);
   U5536 : GTECH_NAND2 port map( A => n5588, B => n5589, Z => n5586);
   U5537 : GTECH_NAND2 port map( A => n1802, B => n1545, Z => n5584);
   U5538 : GTECH_NAND2 port map( A => n5590, B => n5591, Z => n5546);
   U5539 : GTECH_NAND2 port map( A => n1831, B => n5409, Z => n5591);
   U5540 : GTECH_NAND2 port map( A => n1375, B => n5411, Z => n5590);
   U5541 : GTECH_NAND2 port map( A => B(12), B => A(6), Z => n5411);
   U5542 : GTECH_NAND2 port map( A => n5592, B => n5593, Z => n5409);
   U5543 : GTECH_NAND2 port map( A => n5594, B => n5595, Z => n5593);
   U5544 : GTECH_NAND2 port map( A => n1544, B => n5596, Z => n5594);
   U5545 : GTECH_NAND2 port map( A => n1380, B => n5597, Z => n5592);
   U5546 : GTECH_NAND2 port map( A => n5598, B => n5599, Z => n5543);
   U5547 : GTECH_NAND2 port map( A => n1255, B => n5417, Z => n5599);
   U5548 : GTECH_NAND2 port map( A => n1376, B => n5418, Z => n5598);
   U5549 : GTECH_NAND2 port map( A => B(11), B => A(7), Z => n5418);
   U5550 : GTECH_NAND2 port map( A => n5600, B => n5601, Z => n5417);
   U5551 : GTECH_NAND2 port map( A => n5602, B => n5603, Z => n5601);
   U5552 : GTECH_NAND2 port map( A => n5604, B => n5605, Z => n5602);
   U5553 : GTECH_NAND2 port map( A => n1832, B => n1378, Z => n5600);
   U5554 : GTECH_NAND2 port map( A => n5606, B => n5607, Z => n5540);
   U5555 : GTECH_NAND2 port map( A => n1857, B => n5425, Z => n5607);
   U5556 : GTECH_NAND2 port map( A => n1257, B => n5427, Z => n5606);
   U5557 : GTECH_NAND2 port map( A => B(10), B => A(8), Z => n5427);
   U5558 : GTECH_NAND2 port map( A => n5608, B => n5609, Z => n5425);
   U5559 : GTECH_NAND2 port map( A => n5610, B => n5611, Z => n5609);
   U5560 : GTECH_NAND2 port map( A => n1377, B => n5612, Z => n5610);
   U5561 : GTECH_NAND2 port map( A => n1262, B => n5613, Z => n5608);
   U5562 : GTECH_NAND2 port map( A => n5614, B => n5615, Z => n5537);
   U5563 : GTECH_NAND2 port map( A => n1151, B => n5433, Z => n5615);
   U5564 : GTECH_NAND2 port map( A => n1258, B => n5434, Z => n5614);
   U5565 : GTECH_NAND2 port map( A => B(9), B => A(9), Z => n5434);
   U5566 : GTECH_NAND2 port map( A => n5616, B => n5617, Z => n5433);
   U5567 : GTECH_NAND2 port map( A => n5618, B => n5619, Z => n5617);
   U5568 : GTECH_NAND2 port map( A => n5620, B => n5621, Z => n5618);
   U5569 : GTECH_NAND2 port map( A => n1858, B => n1260, Z => n5616);
   U5570 : GTECH_NAND2 port map( A => n5622, B => n5623, Z => n5534);
   U5571 : GTECH_NAND2 port map( A => n1865, B => n5441, Z => n5623);
   U5572 : GTECH_NAND2 port map( A => n1153, B => n5443, Z => n5622);
   U5573 : GTECH_NAND2 port map( A => B(8), B => A(10), Z => n5443);
   U5574 : GTECH_NAND2 port map( A => n5624, B => n5625, Z => n5441);
   U5575 : GTECH_NAND2 port map( A => n5626, B => n5627, Z => n5625);
   U5576 : GTECH_NAND2 port map( A => n1259, B => n5628, Z => n5626);
   U5577 : GTECH_NAND2 port map( A => n1158, B => n5629, Z => n5624);
   U5578 : GTECH_NAND2 port map( A => n5630, B => n5631, Z => n5531);
   U5579 : GTECH_NAND2 port map( A => n1062, B => n5449, Z => n5631);
   U5580 : GTECH_NAND2 port map( A => n1154, B => n5450, Z => n5630);
   U5581 : GTECH_NAND2 port map( A => B(7), B => A(11), Z => n5450);
   U5582 : GTECH_NAND2 port map( A => n5632, B => n5633, Z => n5449);
   U5583 : GTECH_NAND2 port map( A => n5634, B => n5635, Z => n5633);
   U5584 : GTECH_NAND2 port map( A => n5636, B => n5637, Z => n5634);
   U5585 : GTECH_NAND2 port map( A => n1879, B => n1156, Z => n5632);
   U5586 : GTECH_NAND2 port map( A => n5638, B => n5639, Z => n5528);
   U5587 : GTECH_NAND2 port map( A => n1010, B => n5457, Z => n5639);
   U5588 : GTECH_NAND2 port map( A => n1063, B => n5459, Z => n5638);
   U5589 : GTECH_NAND2 port map( A => B(6), B => A(12), Z => n5459);
   U5590 : GTECH_NAND2 port map( A => n5640, B => n5641, Z => n5457);
   U5591 : GTECH_NAND2 port map( A => n5642, B => n5643, Z => n5641);
   U5592 : GTECH_NAND2 port map( A => n1155, B => n5644, Z => n5642);
   U5593 : GTECH_NAND2 port map( A => n1066, B => n5645, Z => n5640);
   U5594 : GTECH_NAND2 port map( A => n5646, B => n5647, Z => n5525);
   U5595 : GTECH_NAND2 port map( A => n452, B => n5465, Z => n5647);
   U5596 : GTECH_NAND2 port map( A => n392, B => n5466, Z => n5646);
   U5597 : GTECH_NAND2 port map( A => B(5), B => A(13), Z => n5466);
   U5598 : GTECH_NAND2 port map( A => n5648, B => n5649, Z => n5465);
   U5599 : GTECH_NAND2 port map( A => n5650, B => n5651, Z => n5649);
   U5600 : GTECH_NAND2 port map( A => n5652, B => n5653, Z => n5650);
   U5601 : GTECH_NAND2 port map( A => n453, B => n1064, Z => n5648);
   U5602 : GTECH_NAND2 port map( A => n5654, B => n5655, Z => n5522);
   U5603 : GTECH_NAND2 port map( A => n927, B => n5473, Z => n5655);
   U5604 : GTECH_NAND2 port map( A => n319, B => n5475, Z => n5654);
   U5605 : GTECH_NAND2 port map( A => B(4), B => A(14), Z => n5475);
   U5606 : GTECH_NAND2 port map( A => n5656, B => n5657, Z => n5473);
   U5607 : GTECH_NAND2 port map( A => n5658, B => n5659, Z => n5657);
   U5608 : GTECH_NAND2 port map( A => n387, B => n5660, Z => n5658);
   U5609 : GTECH_NAND2 port map( A => n1814, B => n5661, Z => n5656);
   U5610 : GTECH_NAND2 port map( A => n5662, B => n5663, Z => n5519);
   U5611 : GTECH_NAND2 port map( A => n1783, B => n5481, Z => n5663);
   U5612 : GTECH_NAND2 port map( A => n242, B => n5482, Z => n5662);
   U5613 : GTECH_NAND2 port map( A => B(3), B => A(15), Z => n5482);
   U5614 : GTECH_NAND2 port map( A => n5664, B => n5665, Z => n5481);
   U5615 : GTECH_NAND2 port map( A => n5666, B => n5667, Z => n5665);
   U5616 : GTECH_NAND2 port map( A => n5668, B => n5669, Z => n5666);
   U5617 : GTECH_NAND2 port map( A => n928, B => n314, Z => n5664);
   U5618 : GTECH_NAND2 port map( A => n5670, B => n5671, Z => n5516);
   U5619 : GTECH_NAND2 port map( A => n859, B => n5489, Z => n5671);
   U5620 : GTECH_NAND2 port map( A => n166, B => n5491, Z => n5670);
   U5621 : GTECH_NAND2 port map( A => B(2), B => A(16), Z => n5491);
   U5622 : GTECH_NAND2 port map( A => n5672, B => n5673, Z => n5489);
   U5623 : GTECH_NAND2 port map( A => n5674, B => n5675, Z => n5673);
   U5624 : GTECH_NAND2 port map( A => n237, B => n5676, Z => n5674);
   U5625 : GTECH_NAND2 port map( A => n1751, B => n5677, Z => n5672);
   U5626 : GTECH_NAND2 port map( A => n5678, B => n5679, Z => n5513);
   U5627 : GTECH_NAND2 port map( A => n823, B => n5497, Z => n5679);
   U5628 : GTECH_NAND2 port map( A => n91, B => n5498, Z => n5678);
   U5629 : GTECH_NAND2 port map( A => A(17), B => B(1), Z => n5498);
   U5630 : GTECH_NAND2 port map( A => n5680, B => n5681, Z => n5497);
   U5631 : GTECH_NAND2 port map( A => n5682, B => n5683, Z => n5681);
   U5632 : GTECH_NAND2 port map( A => n5684, B => n5685, Z => n5682);
   U5633 : GTECH_NAND2 port map( A => n860, B => n161, Z => n5680);
   U5634 : GTECH_NAND2 port map( A => n5686, B => n5687, Z => n5510);
   U5635 : GTECH_NAND2 port map( A => n791, B => n5505, Z => n5687);
   U5636 : GTECH_NAND2 port map( A => n16, B => n5507, Z => n5686);
   U5637 : GTECH_NAND2 port map( A => A(18), B => B(0), Z => n5507);
   U5638 : GTECH_NAND2 port map( A => n5688, B => n5689, Z => n5505);
   U5639 : GTECH_NAND2 port map( A => n5690, B => n5691, Z => n5689);
   U5640 : GTECH_NAND2 port map( A => n86, B => n5692, Z => n5690);
   U5641 : GTECH_NAND2 port map( A => n824, B => n5693, Z => n5688);
   U5642 : GTECH_NOR2 port map( A => n5694, B => n5695, Z => PRODUCT(17));
   U5643 : GTECH_NOR2 port map( A => n5693, B => n13, Z => n5695);
   U5644 : GTECH_NOR2 port map( A => n5696, B => n86, Z => n5694);
   U5645 : GTECH_NAND2 port map( A => n5697, B => n5698, Z => n5693);
   U5646 : GTECH_NAND2 port map( A => n5684, B => n87, Z => n5698);
   U5647 : GTECH_NAND2 port map( A => n5699, B => n161, Z => n5697);
   U5648 : GTECH_NAND2 port map( A => n5700, B => n5701, Z => n5684);
   U5649 : GTECH_NAND2 port map( A => n5677, B => n162, Z => n5701);
   U5650 : GTECH_NAND2 port map( A => n5702, B => n237, Z => n5700);
   U5651 : GTECH_NAND2 port map( A => n5703, B => n5704, Z => n5677);
   U5652 : GTECH_NAND2 port map( A => n5668, B => n238, Z => n5704);
   U5653 : GTECH_NAND2 port map( A => n5705, B => n314, Z => n5703);
   U5654 : GTECH_NAND2 port map( A => n5706, B => n5707, Z => n5668);
   U5655 : GTECH_NAND2 port map( A => n5661, B => n315, Z => n5707);
   U5656 : GTECH_NAND2 port map( A => n5708, B => n387, Z => n5706);
   U5657 : GTECH_NAND2 port map( A => n5709, B => n5710, Z => n5661);
   U5658 : GTECH_NAND2 port map( A => n5652, B => n388, Z => n5710);
   U5659 : GTECH_NAND2 port map( A => n5711, B => n1064, Z => n5709);
   U5660 : GTECH_NAND2 port map( A => n5712, B => n5713, Z => n5652);
   U5661 : GTECH_NAND2 port map( A => n5645, B => n1065, Z => n5713);
   U5662 : GTECH_NAND2 port map( A => n5714, B => n1155, Z => n5712);
   U5663 : GTECH_NAND2 port map( A => n5715, B => n5716, Z => n5645);
   U5664 : GTECH_NAND2 port map( A => n5636, B => n1159, Z => n5716);
   U5665 : GTECH_NAND2 port map( A => n5717, B => n1156, Z => n5715);
   U5666 : GTECH_NAND2 port map( A => n5718, B => n5719, Z => n5636);
   U5667 : GTECH_NAND2 port map( A => n5629, B => n1157, Z => n5719);
   U5668 : GTECH_NAND2 port map( A => n5720, B => n1259, Z => n5718);
   U5669 : GTECH_NAND2 port map( A => n5721, B => n5722, Z => n5629);
   U5670 : GTECH_NAND2 port map( A => n5620, B => n1263, Z => n5722);
   U5671 : GTECH_NAND2 port map( A => n5723, B => n1260, Z => n5721);
   U5672 : GTECH_NAND2 port map( A => n5724, B => n5725, Z => n5620);
   U5673 : GTECH_NAND2 port map( A => n5613, B => n1261, Z => n5725);
   U5674 : GTECH_NAND2 port map( A => n5726, B => n1377, Z => n5724);
   U5675 : GTECH_NAND2 port map( A => n5727, B => n5728, Z => n5613);
   U5676 : GTECH_NAND2 port map( A => n5604, B => n1381, Z => n5728);
   U5677 : GTECH_NAND2 port map( A => n5729, B => n1378, Z => n5727);
   U5678 : GTECH_NAND2 port map( A => n5730, B => n5731, Z => n5604);
   U5679 : GTECH_NAND2 port map( A => n5597, B => n1379, Z => n5731);
   U5680 : GTECH_NAND2 port map( A => n5732, B => n1544, Z => n5730);
   U5681 : GTECH_NAND2 port map( A => n5733, B => n5734, Z => n5597);
   U5682 : GTECH_NAND2 port map( A => n5588, B => n1551, Z => n5734);
   U5683 : GTECH_NAND2 port map( A => n5735, B => n1545, Z => n5733);
   U5684 : GTECH_NAND2 port map( A => n5736, B => n5737, Z => n5588);
   U5685 : GTECH_NAND2 port map( A => n5581, B => n1549, Z => n5737);
   U5686 : GTECH_NAND2 port map( A => n5738, B => n1546, Z => n5736);
   U5687 : GTECH_NAND2 port map( A => n5739, B => n5740, Z => n5581);
   U5688 : GTECH_NAND2 port map( A => n5573, B => n1547, Z => n5740);
   U5689 : GTECH_NAND2 port map( A => n5741, B => n1673, Z => n5739);
   U5690 : GTECH_NAND2 port map( A => n1674, B => n5742, Z => n5573);
   U5691 : GTECH_NAND2 port map( A => n5566, B => n5743, Z => n5742);
   U5692 : GTECH_NOR2 port map( A => n5743, B => n5566, Z => n5744);
   U5693 : GTECH_NOR2 port map( A => n1912, B => n1714, Z => n5566);
   U5694 : GTECH_NAND2 port map( A => B(17), B => A(0), Z => n5743);
   U5695 : GTECH_NAND2 port map( A => n5745, B => n5746, Z => n5741);
   U5696 : GTECH_NAND2 port map( A => n1548, B => n1735, Z => n5746);
   U5697 : GTECH_NAND2 port map( A => n5572, B => n5747, Z => n5745);
   U5698 : GTECH_NAND2 port map( A => n5748, B => n5749, Z => n5747);
   U5699 : GTECH_NOR2 port map( A => n1649, B => n1912, Z => n5748);
   U5700 : GTECH_NOR2 port map( A => n1893, B => n1748, Z => n5572);
   U5701 : GTECH_NAND2 port map( A => n5750, B => n5751, Z => n5738);
   U5702 : GTECH_NAND2 port map( A => n1770, B => n5579, Z => n5751);
   U5703 : GTECH_NAND2 port map( A => n1550, B => n5580, Z => n5750);
   U5704 : GTECH_NAND2 port map( A => B(14), B => A(3), Z => n5580);
   U5705 : GTECH_NAND2 port map( A => n5752, B => n5753, Z => n5579);
   U5706 : GTECH_NAND2 port map( A => n1558, B => n5754, Z => n5753);
   U5707 : GTECH_NAND2 port map( A => n1675, B => n1736, Z => n5754);
   U5708 : GTECH_NAND2 port map( A => n5755, B => n5756, Z => n5752);
   U5709 : GTECH_NAND2 port map( A => n5757, B => n5758, Z => n5735);
   U5710 : GTECH_NAND2 port map( A => n1802, B => n5587, Z => n5758);
   U5711 : GTECH_NAND2 port map( A => n1552, B => n5589, Z => n5757);
   U5712 : GTECH_NAND2 port map( A => B(13), B => A(4), Z => n5589);
   U5713 : GTECH_NAND2 port map( A => n5759, B => n5760, Z => n5587);
   U5714 : GTECH_NAND2 port map( A => n5761, B => n5762, Z => n5760);
   U5715 : GTECH_NAND2 port map( A => n1556, B => n5763, Z => n5761);
   U5716 : GTECH_NAND2 port map( A => n1771, B => n5764, Z => n5759);
   U5717 : GTECH_NAND2 port map( A => n5765, B => n5766, Z => n5732);
   U5718 : GTECH_NAND2 port map( A => n1380, B => n5595, Z => n5766);
   U5719 : GTECH_NAND2 port map( A => n1553, B => n5596, Z => n5765);
   U5720 : GTECH_NAND2 port map( A => B(12), B => A(5), Z => n5596);
   U5721 : GTECH_NAND2 port map( A => n5767, B => n5768, Z => n5595);
   U5722 : GTECH_NAND2 port map( A => n5769, B => n5770, Z => n5768);
   U5723 : GTECH_NAND2 port map( A => n5771, B => n5772, Z => n5769);
   U5724 : GTECH_NAND2 port map( A => n1803, B => n1555, Z => n5767);
   U5725 : GTECH_NAND2 port map( A => n5773, B => n5774, Z => n5729);
   U5726 : GTECH_NAND2 port map( A => n1832, B => n5603, Z => n5774);
   U5727 : GTECH_NAND2 port map( A => n1382, B => n5605, Z => n5773);
   U5728 : GTECH_NAND2 port map( A => B(11), B => A(6), Z => n5605);
   U5729 : GTECH_NAND2 port map( A => n5775, B => n5776, Z => n5603);
   U5730 : GTECH_NAND2 port map( A => n5777, B => n5778, Z => n5776);
   U5731 : GTECH_NAND2 port map( A => n1554, B => n5779, Z => n5777);
   U5732 : GTECH_NAND2 port map( A => n1387, B => n5780, Z => n5775);
   U5733 : GTECH_NAND2 port map( A => n5781, B => n5782, Z => n5726);
   U5734 : GTECH_NAND2 port map( A => n1262, B => n5611, Z => n5782);
   U5735 : GTECH_NAND2 port map( A => n1383, B => n5612, Z => n5781);
   U5736 : GTECH_NAND2 port map( A => B(10), B => A(7), Z => n5612);
   U5737 : GTECH_NAND2 port map( A => n5783, B => n5784, Z => n5611);
   U5738 : GTECH_NAND2 port map( A => n5785, B => n5786, Z => n5784);
   U5739 : GTECH_NAND2 port map( A => n5787, B => n5788, Z => n5785);
   U5740 : GTECH_NAND2 port map( A => n1833, B => n1385, Z => n5783);
   U5741 : GTECH_NAND2 port map( A => n5789, B => n5790, Z => n5723);
   U5742 : GTECH_NAND2 port map( A => n1858, B => n5619, Z => n5790);
   U5743 : GTECH_NAND2 port map( A => n1264, B => n5621, Z => n5789);
   U5744 : GTECH_NAND2 port map( A => B(9), B => A(8), Z => n5621);
   U5745 : GTECH_NAND2 port map( A => n5791, B => n5792, Z => n5619);
   U5746 : GTECH_NAND2 port map( A => n5793, B => n5794, Z => n5792);
   U5747 : GTECH_NAND2 port map( A => n1384, B => n5795, Z => n5793);
   U5748 : GTECH_NAND2 port map( A => n1269, B => n5796, Z => n5791);
   U5749 : GTECH_NAND2 port map( A => n5797, B => n5798, Z => n5720);
   U5750 : GTECH_NAND2 port map( A => n1158, B => n5627, Z => n5798);
   U5751 : GTECH_NAND2 port map( A => n1265, B => n5628, Z => n5797);
   U5752 : GTECH_NAND2 port map( A => B(8), B => A(9), Z => n5628);
   U5753 : GTECH_NAND2 port map( A => n5799, B => n5800, Z => n5627);
   U5754 : GTECH_NAND2 port map( A => n5801, B => n5802, Z => n5800);
   U5755 : GTECH_NAND2 port map( A => n5803, B => n5804, Z => n5801);
   U5756 : GTECH_NAND2 port map( A => n1859, B => n1267, Z => n5799);
   U5757 : GTECH_NAND2 port map( A => n5805, B => n5806, Z => n5717);
   U5758 : GTECH_NAND2 port map( A => n1879, B => n5635, Z => n5806);
   U5759 : GTECH_NAND2 port map( A => n1160, B => n5637, Z => n5805);
   U5760 : GTECH_NAND2 port map( A => B(7), B => A(10), Z => n5637);
   U5761 : GTECH_NAND2 port map( A => n5807, B => n5808, Z => n5635);
   U5762 : GTECH_NAND2 port map( A => n5809, B => n5810, Z => n5808);
   U5763 : GTECH_NAND2 port map( A => n1266, B => n5811, Z => n5809);
   U5764 : GTECH_NAND2 port map( A => n1165, B => n5812, Z => n5807);
   U5765 : GTECH_NAND2 port map( A => n5813, B => n5814, Z => n5714);
   U5766 : GTECH_NAND2 port map( A => n1066, B => n5643, Z => n5814);
   U5767 : GTECH_NAND2 port map( A => n1161, B => n5644, Z => n5813);
   U5768 : GTECH_NAND2 port map( A => B(6), B => A(11), Z => n5644);
   U5769 : GTECH_NAND2 port map( A => n5815, B => n5816, Z => n5643);
   U5770 : GTECH_NAND2 port map( A => n5817, B => n5818, Z => n5816);
   U5771 : GTECH_NAND2 port map( A => n5819, B => n5820, Z => n5817);
   U5772 : GTECH_NAND2 port map( A => n1842, B => n1163, Z => n5815);
   U5773 : GTECH_NAND2 port map( A => n5821, B => n5822, Z => n5711);
   U5774 : GTECH_NAND2 port map( A => n453, B => n5651, Z => n5822);
   U5775 : GTECH_NAND2 port map( A => n389, B => n5653, Z => n5821);
   U5776 : GTECH_NAND2 port map( A => B(5), B => A(12), Z => n5653);
   U5777 : GTECH_NAND2 port map( A => n5823, B => n5824, Z => n5651);
   U5778 : GTECH_NAND2 port map( A => n5825, B => n5826, Z => n5824);
   U5779 : GTECH_NAND2 port map( A => n1162, B => n5827, Z => n5825);
   U5780 : GTECH_NAND2 port map( A => n454, B => n5828, Z => n5823);
   U5781 : GTECH_NAND2 port map( A => n5829, B => n5830, Z => n5708);
   U5782 : GTECH_NAND2 port map( A => n1814, B => n5659, Z => n5830);
   U5783 : GTECH_NAND2 port map( A => n316, B => n5660, Z => n5829);
   U5784 : GTECH_NAND2 port map( A => B(4), B => A(13), Z => n5660);
   U5785 : GTECH_NAND2 port map( A => n5831, B => n5832, Z => n5659);
   U5786 : GTECH_NAND2 port map( A => n5833, B => n5834, Z => n5832);
   U5787 : GTECH_NAND2 port map( A => n5835, B => n5836, Z => n5833);
   U5788 : GTECH_NAND2 port map( A => n1011, B => n384, Z => n5831);
   U5789 : GTECH_NAND2 port map( A => n5837, B => n5838, Z => n5705);
   U5790 : GTECH_NAND2 port map( A => n928, B => n5667, Z => n5838);
   U5791 : GTECH_NAND2 port map( A => n239, B => n5669, Z => n5837);
   U5792 : GTECH_NAND2 port map( A => B(3), B => A(14), Z => n5669);
   U5793 : GTECH_NAND2 port map( A => n5839, B => n5840, Z => n5667);
   U5794 : GTECH_NAND2 port map( A => n5841, B => n5842, Z => n5840);
   U5795 : GTECH_NAND2 port map( A => n311, B => n5843, Z => n5841);
   U5796 : GTECH_NAND2 port map( A => n1784, B => n5844, Z => n5839);
   U5797 : GTECH_NAND2 port map( A => n5845, B => n5846, Z => n5702);
   U5798 : GTECH_NAND2 port map( A => n1751, B => n5675, Z => n5846);
   U5799 : GTECH_NAND2 port map( A => n163, B => n5676, Z => n5845);
   U5800 : GTECH_NAND2 port map( A => B(2), B => A(15), Z => n5676);
   U5801 : GTECH_NAND2 port map( A => n5847, B => n5848, Z => n5675);
   U5802 : GTECH_NAND2 port map( A => n5849, B => n5850, Z => n5848);
   U5803 : GTECH_NAND2 port map( A => n5851, B => n5852, Z => n5849);
   U5804 : GTECH_NAND2 port map( A => n929, B => n234, Z => n5847);
   U5805 : GTECH_NAND2 port map( A => n5853, B => n5854, Z => n5699);
   U5806 : GTECH_NAND2 port map( A => n860, B => n5683, Z => n5854);
   U5807 : GTECH_NAND2 port map( A => n88, B => n5685, Z => n5853);
   U5808 : GTECH_NAND2 port map( A => A(16), B => B(1), Z => n5685);
   U5809 : GTECH_NAND2 port map( A => n5855, B => n5856, Z => n5683);
   U5810 : GTECH_NAND2 port map( A => n5857, B => n5858, Z => n5856);
   U5811 : GTECH_NAND2 port map( A => n158, B => n5859, Z => n5857);
   U5812 : GTECH_NAND2 port map( A => n1717, B => n5860, Z => n5855);
   U5813 : GTECH_NAND2 port map( A => n5861, B => n5862, Z => n5696);
   U5814 : GTECH_NAND2 port map( A => n824, B => n5691, Z => n5862);
   U5815 : GTECH_NAND2 port map( A => n14, B => n5692, Z => n5861);
   U5816 : GTECH_NAND2 port map( A => A(17), B => B(0), Z => n5692);
   U5817 : GTECH_NAND2 port map( A => n5863, B => n5864, Z => n5691);
   U5818 : GTECH_NAND2 port map( A => n5865, B => n5866, Z => n5864);
   U5819 : GTECH_NAND2 port map( A => n5867, B => n5868, Z => n5865);
   U5820 : GTECH_NAND2 port map( A => n861, B => n83, Z => n5863);
   U5821 : GTECH_NAND2 port map( A => n5869, B => n5870, Z => PRODUCT(16));
   U5822 : GTECH_NAND2 port map( A => n5867, B => n11, Z => n5870);
   U5823 : GTECH_NAND2 port map( A => n5871, B => n83, Z => n5869);
   U5824 : GTECH_NAND2 port map( A => n5872, B => n5873, Z => n5867);
   U5825 : GTECH_NAND2 port map( A => n5860, B => n84, Z => n5873);
   U5826 : GTECH_NAND2 port map( A => n5874, B => n158, Z => n5872);
   U5827 : GTECH_NAND2 port map( A => n5875, B => n5876, Z => n5860);
   U5828 : GTECH_NAND2 port map( A => n5851, B => n159, Z => n5876);
   U5829 : GTECH_NAND2 port map( A => n5877, B => n234, Z => n5875);
   U5830 : GTECH_NAND2 port map( A => n5878, B => n5879, Z => n5851);
   U5831 : GTECH_NAND2 port map( A => n5844, B => n235, Z => n5879);
   U5832 : GTECH_NAND2 port map( A => n5880, B => n311, Z => n5878);
   U5833 : GTECH_NAND2 port map( A => n5881, B => n5882, Z => n5844);
   U5834 : GTECH_NAND2 port map( A => n5835, B => n312, Z => n5882);
   U5835 : GTECH_NAND2 port map( A => n5883, B => n384, Z => n5881);
   U5836 : GTECH_NAND2 port map( A => n5884, B => n5885, Z => n5835);
   U5837 : GTECH_NAND2 port map( A => n5828, B => n385, Z => n5885);
   U5838 : GTECH_NAND2 port map( A => n5886, B => n1162, Z => n5884);
   U5839 : GTECH_NAND2 port map( A => n5887, B => n5888, Z => n5828);
   U5840 : GTECH_NAND2 port map( A => n5819, B => n1166, Z => n5888);
   U5841 : GTECH_NAND2 port map( A => n5889, B => n1163, Z => n5887);
   U5842 : GTECH_NAND2 port map( A => n5890, B => n5891, Z => n5819);
   U5843 : GTECH_NAND2 port map( A => n5812, B => n1164, Z => n5891);
   U5844 : GTECH_NAND2 port map( A => n5892, B => n1266, Z => n5890);
   U5845 : GTECH_NAND2 port map( A => n5893, B => n5894, Z => n5812);
   U5846 : GTECH_NAND2 port map( A => n5803, B => n1270, Z => n5894);
   U5847 : GTECH_NAND2 port map( A => n5895, B => n1267, Z => n5893);
   U5848 : GTECH_NAND2 port map( A => n5896, B => n5897, Z => n5803);
   U5849 : GTECH_NAND2 port map( A => n5796, B => n1268, Z => n5897);
   U5850 : GTECH_NAND2 port map( A => n5898, B => n1384, Z => n5896);
   U5851 : GTECH_NAND2 port map( A => n5899, B => n5900, Z => n5796);
   U5852 : GTECH_NAND2 port map( A => n5787, B => n1388, Z => n5900);
   U5853 : GTECH_NAND2 port map( A => n5901, B => n1385, Z => n5899);
   U5854 : GTECH_NAND2 port map( A => n5902, B => n5903, Z => n5787);
   U5855 : GTECH_NAND2 port map( A => n5780, B => n1386, Z => n5903);
   U5856 : GTECH_NAND2 port map( A => n5904, B => n1554, Z => n5902);
   U5857 : GTECH_NAND2 port map( A => n5905, B => n5906, Z => n5780);
   U5858 : GTECH_NAND2 port map( A => n5771, B => n1561, Z => n5906);
   U5859 : GTECH_NAND2 port map( A => n5907, B => n1555, Z => n5905);
   U5860 : GTECH_NAND2 port map( A => n5908, B => n5909, Z => n5771);
   U5861 : GTECH_NAND2 port map( A => n5764, B => n1559, Z => n5909);
   U5862 : GTECH_NAND2 port map( A => n5910, B => n1556, Z => n5908);
   U5863 : GTECH_NAND2 port map( A => n5911, B => n5912, Z => n5764);
   U5864 : GTECH_NAND2 port map( A => n5756, B => n1557, Z => n5912);
   U5865 : GTECH_NAND2 port map( A => n5913, B => n1675, Z => n5911);
   U5866 : GTECH_NAND2 port map( A => n1676, B => n5914, Z => n5756);
   U5867 : GTECH_NAND2 port map( A => n5749, B => n5915, Z => n5914);
   U5868 : GTECH_NOR2 port map( A => n5915, B => n5749, Z => n5916);
   U5869 : GTECH_NOR2 port map( A => n1893, B => n1714, Z => n5749);
   U5870 : GTECH_NAND2 port map( A => B(16), B => A(0), Z => n5915);
   U5871 : GTECH_NAND2 port map( A => n5917, B => n5918, Z => n5913);
   U5872 : GTECH_NAND2 port map( A => n1558, B => n1736, Z => n5918);
   U5873 : GTECH_NAND2 port map( A => n5755, B => n5919, Z => n5917);
   U5874 : GTECH_NAND2 port map( A => n5920, B => n5921, Z => n5919);
   U5875 : GTECH_NOR2 port map( A => n1649, B => n1893, Z => n5920);
   U5876 : GTECH_NOR2 port map( A => n1916, B => n1748, Z => n5755);
   U5877 : GTECH_NAND2 port map( A => n5922, B => n5923, Z => n5910);
   U5878 : GTECH_NAND2 port map( A => n1771, B => n5762, Z => n5923);
   U5879 : GTECH_NAND2 port map( A => n1560, B => n5763, Z => n5922);
   U5880 : GTECH_NAND2 port map( A => B(13), B => A(3), Z => n5763);
   U5881 : GTECH_NAND2 port map( A => n5924, B => n5925, Z => n5762);
   U5882 : GTECH_NAND2 port map( A => n1568, B => n5926, Z => n5925);
   U5883 : GTECH_NAND2 port map( A => n1677, B => n1737, Z => n5926);
   U5884 : GTECH_NAND2 port map( A => n5927, B => n5928, Z => n5924);
   U5885 : GTECH_NAND2 port map( A => n5929, B => n5930, Z => n5907);
   U5886 : GTECH_NAND2 port map( A => n1803, B => n5770, Z => n5930);
   U5887 : GTECH_NAND2 port map( A => n1562, B => n5772, Z => n5929);
   U5888 : GTECH_NAND2 port map( A => B(12), B => A(4), Z => n5772);
   U5889 : GTECH_NAND2 port map( A => n5931, B => n5932, Z => n5770);
   U5890 : GTECH_NAND2 port map( A => n5933, B => n5934, Z => n5932);
   U5891 : GTECH_NAND2 port map( A => n1566, B => n5935, Z => n5933);
   U5892 : GTECH_NAND2 port map( A => n1772, B => n5936, Z => n5931);
   U5893 : GTECH_NAND2 port map( A => n5937, B => n5938, Z => n5904);
   U5894 : GTECH_NAND2 port map( A => n1387, B => n5778, Z => n5938);
   U5895 : GTECH_NAND2 port map( A => n1563, B => n5779, Z => n5937);
   U5896 : GTECH_NAND2 port map( A => B(11), B => A(5), Z => n5779);
   U5897 : GTECH_NAND2 port map( A => n5939, B => n5940, Z => n5778);
   U5898 : GTECH_NAND2 port map( A => n5941, B => n5942, Z => n5940);
   U5899 : GTECH_NAND2 port map( A => n5943, B => n5944, Z => n5941);
   U5900 : GTECH_NAND2 port map( A => n1804, B => n1565, Z => n5939);
   U5901 : GTECH_NAND2 port map( A => n5945, B => n5946, Z => n5901);
   U5902 : GTECH_NAND2 port map( A => n1833, B => n5786, Z => n5946);
   U5903 : GTECH_NAND2 port map( A => n1389, B => n5788, Z => n5945);
   U5904 : GTECH_NAND2 port map( A => B(10), B => A(6), Z => n5788);
   U5905 : GTECH_NAND2 port map( A => n5947, B => n5948, Z => n5786);
   U5906 : GTECH_NAND2 port map( A => n5949, B => n5950, Z => n5948);
   U5907 : GTECH_NAND2 port map( A => n1564, B => n5951, Z => n5949);
   U5908 : GTECH_NAND2 port map( A => n1394, B => n5952, Z => n5947);
   U5909 : GTECH_NAND2 port map( A => n5953, B => n5954, Z => n5898);
   U5910 : GTECH_NAND2 port map( A => n1269, B => n5794, Z => n5954);
   U5911 : GTECH_NAND2 port map( A => n1390, B => n5795, Z => n5953);
   U5912 : GTECH_NAND2 port map( A => B(9), B => A(7), Z => n5795);
   U5913 : GTECH_NAND2 port map( A => n5955, B => n5956, Z => n5794);
   U5914 : GTECH_NAND2 port map( A => n5957, B => n5958, Z => n5956);
   U5915 : GTECH_NAND2 port map( A => n5959, B => n5960, Z => n5957);
   U5916 : GTECH_NAND2 port map( A => n1834, B => n1392, Z => n5955);
   U5917 : GTECH_NAND2 port map( A => n5961, B => n5962, Z => n5895);
   U5918 : GTECH_NAND2 port map( A => n1859, B => n5802, Z => n5962);
   U5919 : GTECH_NAND2 port map( A => n1271, B => n5804, Z => n5961);
   U5920 : GTECH_NAND2 port map( A => B(8), B => A(8), Z => n5804);
   U5921 : GTECH_NAND2 port map( A => n5963, B => n5964, Z => n5802);
   U5922 : GTECH_NAND2 port map( A => n5965, B => n5966, Z => n5964);
   U5923 : GTECH_NAND2 port map( A => n1391, B => n5967, Z => n5965);
   U5924 : GTECH_NAND2 port map( A => n1276, B => n5968, Z => n5963);
   U5925 : GTECH_NAND2 port map( A => n5969, B => n5970, Z => n5892);
   U5926 : GTECH_NAND2 port map( A => n1165, B => n5810, Z => n5970);
   U5927 : GTECH_NAND2 port map( A => n1272, B => n5811, Z => n5969);
   U5928 : GTECH_NAND2 port map( A => B(7), B => A(9), Z => n5811);
   U5929 : GTECH_NAND2 port map( A => n5971, B => n5972, Z => n5810);
   U5930 : GTECH_NAND2 port map( A => n5973, B => n5974, Z => n5972);
   U5931 : GTECH_NAND2 port map( A => n5975, B => n5976, Z => n5973);
   U5932 : GTECH_NAND2 port map( A => n1860, B => n1274, Z => n5971);
   U5933 : GTECH_NAND2 port map( A => n5977, B => n5978, Z => n5889);
   U5934 : GTECH_NAND2 port map( A => n1842, B => n5818, Z => n5978);
   U5935 : GTECH_NAND2 port map( A => n1167, B => n5820, Z => n5977);
   U5936 : GTECH_NAND2 port map( A => B(6), B => A(10), Z => n5820);
   U5937 : GTECH_NAND2 port map( A => n5979, B => n5980, Z => n5818);
   U5938 : GTECH_NAND2 port map( A => n5981, B => n5982, Z => n5980);
   U5939 : GTECH_NAND2 port map( A => n1273, B => n5983, Z => n5981);
   U5940 : GTECH_NAND2 port map( A => n1170, B => n5984, Z => n5979);
   U5941 : GTECH_NAND2 port map( A => n5985, B => n5986, Z => n5886);
   U5942 : GTECH_NAND2 port map( A => n454, B => n5826, Z => n5986);
   U5943 : GTECH_NAND2 port map( A => n386, B => n5827, Z => n5985);
   U5944 : GTECH_NAND2 port map( A => B(5), B => A(11), Z => n5827);
   U5945 : GTECH_NAND2 port map( A => n5987, B => n5988, Z => n5826);
   U5946 : GTECH_NAND2 port map( A => n5989, B => n5990, Z => n5988);
   U5947 : GTECH_NAND2 port map( A => n5991, B => n5992, Z => n5989);
   U5948 : GTECH_NAND2 port map( A => n455, B => n1168, Z => n5987);
   U5949 : GTECH_NAND2 port map( A => n5993, B => n5994, Z => n5883);
   U5950 : GTECH_NAND2 port map( A => n1011, B => n5834, Z => n5994);
   U5951 : GTECH_NAND2 port map( A => n313, B => n5836, Z => n5993);
   U5952 : GTECH_NAND2 port map( A => B(4), B => A(12), Z => n5836);
   U5953 : GTECH_NAND2 port map( A => n5995, B => n5996, Z => n5834);
   U5954 : GTECH_NAND2 port map( A => n5997, B => n5998, Z => n5996);
   U5955 : GTECH_NAND2 port map( A => n381, B => n5999, Z => n5997);
   U5956 : GTECH_NAND2 port map( A => n1067, B => n6000, Z => n5995);
   U5957 : GTECH_NAND2 port map( A => n6001, B => n6002, Z => n5880);
   U5958 : GTECH_NAND2 port map( A => n1784, B => n5842, Z => n6002);
   U5959 : GTECH_NAND2 port map( A => n236, B => n5843, Z => n6001);
   U5960 : GTECH_NAND2 port map( A => B(3), B => A(13), Z => n5843);
   U5961 : GTECH_NAND2 port map( A => n6003, B => n6004, Z => n5842);
   U5962 : GTECH_NAND2 port map( A => n6005, B => n6006, Z => n6004);
   U5963 : GTECH_NAND2 port map( A => n6007, B => n6008, Z => n6005);
   U5964 : GTECH_NAND2 port map( A => n1012, B => n308, Z => n6003);
   U5965 : GTECH_NAND2 port map( A => n6009, B => n6010, Z => n5877);
   U5966 : GTECH_NAND2 port map( A => n929, B => n5850, Z => n6010);
   U5967 : GTECH_NAND2 port map( A => n160, B => n5852, Z => n6009);
   U5968 : GTECH_NAND2 port map( A => B(2), B => A(14), Z => n5852);
   U5969 : GTECH_NAND2 port map( A => n6011, B => n6012, Z => n5850);
   U5970 : GTECH_NAND2 port map( A => n6013, B => n6014, Z => n6012);
   U5971 : GTECH_NAND2 port map( A => n231, B => n6015, Z => n6013);
   U5972 : GTECH_NAND2 port map( A => n1752, B => n6016, Z => n6011);
   U5973 : GTECH_NAND2 port map( A => n6017, B => n6018, Z => n5874);
   U5974 : GTECH_NAND2 port map( A => n1717, B => n5858, Z => n6018);
   U5975 : GTECH_NAND2 port map( A => n85, B => n5859, Z => n6017);
   U5976 : GTECH_NAND2 port map( A => A(15), B => B(1), Z => n5859);
   U5977 : GTECH_NAND2 port map( A => n6019, B => n6020, Z => n5858);
   U5978 : GTECH_NAND2 port map( A => n6021, B => n6022, Z => n6020);
   U5979 : GTECH_NAND2 port map( A => n6023, B => n6024, Z => n6021);
   U5980 : GTECH_NAND2 port map( A => n930, B => n155, Z => n6019);
   U5981 : GTECH_NAND2 port map( A => n6025, B => n6026, Z => n5871);
   U5982 : GTECH_NAND2 port map( A => n861, B => n5866, Z => n6026);
   U5983 : GTECH_NAND2 port map( A => n12, B => n5868, Z => n6025);
   U5984 : GTECH_NAND2 port map( A => A(16), B => B(0), Z => n5868);
   U5985 : GTECH_NAND2 port map( A => n6027, B => n6028, Z => n5866);
   U5986 : GTECH_NAND2 port map( A => n6029, B => n6030, Z => n6028);
   U5987 : GTECH_NAND2 port map( A => n80, B => n6031, Z => n6029);
   U5988 : GTECH_NAND2 port map( A => n1892, B => n6032, Z => n6027);
   U5989 : GTECH_NOR2 port map( A => n6033, B => n6034, Z => PRODUCT(15));
   U5990 : GTECH_NOR2 port map( A => n6032, B => n9, Z => n6034);
   U5991 : GTECH_NOR2 port map( A => n6035, B => n80, Z => n6033);
   U5992 : GTECH_NAND2 port map( A => n6036, B => n6037, Z => n6032);
   U5993 : GTECH_NAND2 port map( A => n6023, B => n81, Z => n6037);
   U5994 : GTECH_NAND2 port map( A => n6038, B => n155, Z => n6036);
   U5995 : GTECH_NAND2 port map( A => n6039, B => n6040, Z => n6023);
   U5996 : GTECH_NAND2 port map( A => n6016, B => n156, Z => n6040);
   U5997 : GTECH_NAND2 port map( A => n6041, B => n231, Z => n6039);
   U5998 : GTECH_NAND2 port map( A => n6042, B => n6043, Z => n6016);
   U5999 : GTECH_NAND2 port map( A => n6007, B => n232, Z => n6043);
   U6000 : GTECH_NAND2 port map( A => n6044, B => n308, Z => n6042);
   U6001 : GTECH_NAND2 port map( A => n6045, B => n6046, Z => n6007);
   U6002 : GTECH_NAND2 port map( A => n6000, B => n309, Z => n6046);
   U6003 : GTECH_NAND2 port map( A => n6047, B => n381, Z => n6045);
   U6004 : GTECH_NAND2 port map( A => n6048, B => n6049, Z => n6000);
   U6005 : GTECH_NAND2 port map( A => n5991, B => n382, Z => n6049);
   U6006 : GTECH_NAND2 port map( A => n6050, B => n1168, Z => n6048);
   U6007 : GTECH_NAND2 port map( A => n6051, B => n6052, Z => n5991);
   U6008 : GTECH_NAND2 port map( A => n5984, B => n1169, Z => n6052);
   U6009 : GTECH_NAND2 port map( A => n6053, B => n1273, Z => n6051);
   U6010 : GTECH_NAND2 port map( A => n6054, B => n6055, Z => n5984);
   U6011 : GTECH_NAND2 port map( A => n5975, B => n1277, Z => n6055);
   U6012 : GTECH_NAND2 port map( A => n6056, B => n1274, Z => n6054);
   U6013 : GTECH_NAND2 port map( A => n6057, B => n6058, Z => n5975);
   U6014 : GTECH_NAND2 port map( A => n5968, B => n1275, Z => n6058);
   U6015 : GTECH_NAND2 port map( A => n6059, B => n1391, Z => n6057);
   U6016 : GTECH_NAND2 port map( A => n6060, B => n6061, Z => n5968);
   U6017 : GTECH_NAND2 port map( A => n5959, B => n1395, Z => n6061);
   U6018 : GTECH_NAND2 port map( A => n6062, B => n1392, Z => n6060);
   U6019 : GTECH_NAND2 port map( A => n6063, B => n6064, Z => n5959);
   U6020 : GTECH_NAND2 port map( A => n5952, B => n1393, Z => n6064);
   U6021 : GTECH_NAND2 port map( A => n6065, B => n1564, Z => n6063);
   U6022 : GTECH_NAND2 port map( A => n6066, B => n6067, Z => n5952);
   U6023 : GTECH_NAND2 port map( A => n5943, B => n1571, Z => n6067);
   U6024 : GTECH_NAND2 port map( A => n6068, B => n1565, Z => n6066);
   U6025 : GTECH_NAND2 port map( A => n6069, B => n6070, Z => n5943);
   U6026 : GTECH_NAND2 port map( A => n5936, B => n1569, Z => n6070);
   U6027 : GTECH_NAND2 port map( A => n6071, B => n1566, Z => n6069);
   U6028 : GTECH_NAND2 port map( A => n6072, B => n6073, Z => n5936);
   U6029 : GTECH_NAND2 port map( A => n5928, B => n1567, Z => n6073);
   U6030 : GTECH_NAND2 port map( A => n6074, B => n1677, Z => n6072);
   U6031 : GTECH_NAND2 port map( A => n1678, B => n6075, Z => n5928);
   U6032 : GTECH_NAND2 port map( A => n5921, B => n6076, Z => n6075);
   U6033 : GTECH_NOR2 port map( A => n6076, B => n5921, Z => n6077);
   U6034 : GTECH_NOR2 port map( A => n1916, B => n1714, Z => n5921);
   U6035 : GTECH_NAND2 port map( A => B(15), B => A(0), Z => n6076);
   U6036 : GTECH_NAND2 port map( A => n6078, B => n6079, Z => n6074);
   U6037 : GTECH_NAND2 port map( A => n1568, B => n1737, Z => n6079);
   U6038 : GTECH_NAND2 port map( A => n5927, B => n6080, Z => n6078);
   U6039 : GTECH_NAND2 port map( A => n6081, B => n6082, Z => n6080);
   U6040 : GTECH_NOR2 port map( A => n1649, B => n1916, Z => n6081);
   U6041 : GTECH_NOR2 port map( A => n1905, B => n1748, Z => n5927);
   U6042 : GTECH_NAND2 port map( A => n6083, B => n6084, Z => n6071);
   U6043 : GTECH_NAND2 port map( A => n1772, B => n5934, Z => n6084);
   U6044 : GTECH_NAND2 port map( A => n1570, B => n5935, Z => n6083);
   U6045 : GTECH_NAND2 port map( A => B(12), B => A(3), Z => n5935);
   U6046 : GTECH_NAND2 port map( A => n6085, B => n6086, Z => n5934);
   U6047 : GTECH_NAND2 port map( A => n1578, B => n6087, Z => n6086);
   U6048 : GTECH_NAND2 port map( A => n1679, B => n1738, Z => n6087);
   U6049 : GTECH_NAND2 port map( A => n6088, B => n6089, Z => n6085);
   U6050 : GTECH_NAND2 port map( A => n6090, B => n6091, Z => n6068);
   U6051 : GTECH_NAND2 port map( A => n1804, B => n5942, Z => n6091);
   U6052 : GTECH_NAND2 port map( A => n1572, B => n5944, Z => n6090);
   U6053 : GTECH_NAND2 port map( A => B(11), B => A(4), Z => n5944);
   U6054 : GTECH_NAND2 port map( A => n6092, B => n6093, Z => n5942);
   U6055 : GTECH_NAND2 port map( A => n6094, B => n6095, Z => n6093);
   U6056 : GTECH_NAND2 port map( A => n1576, B => n6096, Z => n6094);
   U6057 : GTECH_NAND2 port map( A => n1773, B => n6097, Z => n6092);
   U6058 : GTECH_NAND2 port map( A => n6098, B => n6099, Z => n6065);
   U6059 : GTECH_NAND2 port map( A => n1394, B => n5950, Z => n6099);
   U6060 : GTECH_NAND2 port map( A => n1573, B => n5951, Z => n6098);
   U6061 : GTECH_NAND2 port map( A => B(10), B => A(5), Z => n5951);
   U6062 : GTECH_NAND2 port map( A => n6100, B => n6101, Z => n5950);
   U6063 : GTECH_NAND2 port map( A => n6102, B => n6103, Z => n6101);
   U6064 : GTECH_NAND2 port map( A => n6104, B => n6105, Z => n6102);
   U6065 : GTECH_NAND2 port map( A => n1805, B => n1575, Z => n6100);
   U6066 : GTECH_NAND2 port map( A => n6106, B => n6107, Z => n6062);
   U6067 : GTECH_NAND2 port map( A => n1834, B => n5958, Z => n6107);
   U6068 : GTECH_NAND2 port map( A => n1396, B => n5960, Z => n6106);
   U6069 : GTECH_NAND2 port map( A => B(9), B => A(6), Z => n5960);
   U6070 : GTECH_NAND2 port map( A => n6108, B => n6109, Z => n5958);
   U6071 : GTECH_NAND2 port map( A => n6110, B => n6111, Z => n6109);
   U6072 : GTECH_NAND2 port map( A => n1574, B => n6112, Z => n6110);
   U6073 : GTECH_NAND2 port map( A => n1401, B => n6113, Z => n6108);
   U6074 : GTECH_NAND2 port map( A => n6114, B => n6115, Z => n6059);
   U6075 : GTECH_NAND2 port map( A => n1276, B => n5966, Z => n6115);
   U6076 : GTECH_NAND2 port map( A => n1397, B => n5967, Z => n6114);
   U6077 : GTECH_NAND2 port map( A => B(8), B => A(7), Z => n5967);
   U6078 : GTECH_NAND2 port map( A => n6116, B => n6117, Z => n5966);
   U6079 : GTECH_NAND2 port map( A => n6118, B => n6119, Z => n6117);
   U6080 : GTECH_NAND2 port map( A => n6120, B => n6121, Z => n6118);
   U6081 : GTECH_NAND2 port map( A => n1835, B => n1399, Z => n6116);
   U6082 : GTECH_NAND2 port map( A => n6122, B => n6123, Z => n6056);
   U6083 : GTECH_NAND2 port map( A => n1860, B => n5974, Z => n6123);
   U6084 : GTECH_NAND2 port map( A => n1278, B => n5976, Z => n6122);
   U6085 : GTECH_NAND2 port map( A => B(7), B => A(8), Z => n5976);
   U6086 : GTECH_NAND2 port map( A => n6124, B => n6125, Z => n5974);
   U6087 : GTECH_NAND2 port map( A => n6126, B => n6127, Z => n6125);
   U6088 : GTECH_NAND2 port map( A => n1398, B => n6128, Z => n6126);
   U6089 : GTECH_NAND2 port map( A => n1283, B => n6129, Z => n6124);
   U6090 : GTECH_NAND2 port map( A => n6130, B => n6131, Z => n6053);
   U6091 : GTECH_NAND2 port map( A => n1170, B => n5982, Z => n6131);
   U6092 : GTECH_NAND2 port map( A => n1279, B => n5983, Z => n6130);
   U6093 : GTECH_NAND2 port map( A => B(6), B => A(9), Z => n5983);
   U6094 : GTECH_NAND2 port map( A => n6132, B => n6133, Z => n5982);
   U6095 : GTECH_NAND2 port map( A => n6134, B => n6135, Z => n6133);
   U6096 : GTECH_NAND2 port map( A => n6136, B => n6137, Z => n6134);
   U6097 : GTECH_NAND2 port map( A => n1843, B => n1281, Z => n6132);
   U6098 : GTECH_NAND2 port map( A => n6138, B => n6139, Z => n6050);
   U6099 : GTECH_NAND2 port map( A => n455, B => n5990, Z => n6139);
   U6100 : GTECH_NAND2 port map( A => n383, B => n5992, Z => n6138);
   U6101 : GTECH_NAND2 port map( A => B(5), B => A(10), Z => n5992);
   U6102 : GTECH_NAND2 port map( A => n6140, B => n6141, Z => n5990);
   U6103 : GTECH_NAND2 port map( A => n6142, B => n6143, Z => n6141);
   U6104 : GTECH_NAND2 port map( A => n1280, B => n6144, Z => n6142);
   U6105 : GTECH_NAND2 port map( A => n456, B => n6145, Z => n6140);
   U6106 : GTECH_NAND2 port map( A => n6146, B => n6147, Z => n6047);
   U6107 : GTECH_NAND2 port map( A => n1067, B => n5998, Z => n6147);
   U6108 : GTECH_NAND2 port map( A => n310, B => n5999, Z => n6146);
   U6109 : GTECH_NAND2 port map( A => B(4), B => A(11), Z => n5999);
   U6110 : GTECH_NAND2 port map( A => n6148, B => n6149, Z => n5998);
   U6111 : GTECH_NAND2 port map( A => n6150, B => n6151, Z => n6149);
   U6112 : GTECH_NAND2 port map( A => n6152, B => n6153, Z => n6150);
   U6113 : GTECH_NAND2 port map( A => n1815, B => n378, Z => n6148);
   U6114 : GTECH_NAND2 port map( A => n6154, B => n6155, Z => n6044);
   U6115 : GTECH_NAND2 port map( A => n1012, B => n6006, Z => n6155);
   U6116 : GTECH_NAND2 port map( A => n233, B => n6008, Z => n6154);
   U6117 : GTECH_NAND2 port map( A => B(3), B => A(12), Z => n6008);
   U6118 : GTECH_NAND2 port map( A => n6156, B => n6157, Z => n6006);
   U6119 : GTECH_NAND2 port map( A => n6158, B => n6159, Z => n6157);
   U6120 : GTECH_NAND2 port map( A => n305, B => n6160, Z => n6158);
   U6121 : GTECH_NAND2 port map( A => n1068, B => n6161, Z => n6156);
   U6122 : GTECH_NAND2 port map( A => n6162, B => n6163, Z => n6041);
   U6123 : GTECH_NAND2 port map( A => n1752, B => n6014, Z => n6163);
   U6124 : GTECH_NAND2 port map( A => n157, B => n6015, Z => n6162);
   U6125 : GTECH_NAND2 port map( A => B(2), B => A(13), Z => n6015);
   U6126 : GTECH_NAND2 port map( A => n6164, B => n6165, Z => n6014);
   U6127 : GTECH_NAND2 port map( A => n6166, B => n6167, Z => n6165);
   U6128 : GTECH_NAND2 port map( A => n6168, B => n6169, Z => n6166);
   U6129 : GTECH_NAND2 port map( A => n1013, B => n228, Z => n6164);
   U6130 : GTECH_NAND2 port map( A => n6170, B => n6171, Z => n6038);
   U6131 : GTECH_NAND2 port map( A => n930, B => n6022, Z => n6171);
   U6132 : GTECH_NAND2 port map( A => n82, B => n6024, Z => n6170);
   U6133 : GTECH_NAND2 port map( A => A(14), B => B(1), Z => n6024);
   U6134 : GTECH_NAND2 port map( A => n6172, B => n6173, Z => n6022);
   U6135 : GTECH_NAND2 port map( A => n6174, B => n6175, Z => n6173);
   U6136 : GTECH_NAND2 port map( A => n152, B => n6176, Z => n6174);
   U6137 : GTECH_NAND2 port map( A => n1718, B => n6177, Z => n6172);
   U6138 : GTECH_NAND2 port map( A => n6178, B => n6179, Z => n6035);
   U6139 : GTECH_NAND2 port map( A => n1892, B => n6030, Z => n6179);
   U6140 : GTECH_NAND2 port map( A => n10, B => n6031, Z => n6178);
   U6141 : GTECH_NAND2 port map( A => A(15), B => B(0), Z => n6031);
   U6142 : GTECH_NAND2 port map( A => n6180, B => n6181, Z => n6030);
   U6143 : GTECH_NAND2 port map( A => n6182, B => n6183, Z => n6181);
   U6144 : GTECH_NAND2 port map( A => n6184, B => n6185, Z => n6182);
   U6145 : GTECH_NAND2 port map( A => n931, B => n77, Z => n6180);
   U6146 : GTECH_NAND2 port map( A => n6186, B => n6187, Z => PRODUCT(14));
   U6147 : GTECH_NAND2 port map( A => n6184, B => n7, Z => n6187);
   U6148 : GTECH_NAND2 port map( A => n6188, B => n77, Z => n6186);
   U6149 : GTECH_NAND2 port map( A => n6189, B => n6190, Z => n6184);
   U6150 : GTECH_NAND2 port map( A => n6177, B => n78, Z => n6190);
   U6151 : GTECH_NAND2 port map( A => n6191, B => n152, Z => n6189);
   U6152 : GTECH_NAND2 port map( A => n6192, B => n6193, Z => n6177);
   U6153 : GTECH_NAND2 port map( A => n6168, B => n153, Z => n6193);
   U6154 : GTECH_NAND2 port map( A => n6194, B => n228, Z => n6192);
   U6155 : GTECH_NAND2 port map( A => n6195, B => n6196, Z => n6168);
   U6156 : GTECH_NAND2 port map( A => n6161, B => n229, Z => n6196);
   U6157 : GTECH_NAND2 port map( A => n6197, B => n305, Z => n6195);
   U6158 : GTECH_NAND2 port map( A => n6198, B => n6199, Z => n6161);
   U6159 : GTECH_NAND2 port map( A => n6152, B => n306, Z => n6199);
   U6160 : GTECH_NAND2 port map( A => n6200, B => n378, Z => n6198);
   U6161 : GTECH_NAND2 port map( A => n6201, B => n6202, Z => n6152);
   U6162 : GTECH_NAND2 port map( A => n6145, B => n379, Z => n6202);
   U6163 : GTECH_NAND2 port map( A => n6203, B => n1280, Z => n6201);
   U6164 : GTECH_NAND2 port map( A => n6204, B => n6205, Z => n6145);
   U6165 : GTECH_NAND2 port map( A => n6136, B => n1284, Z => n6205);
   U6166 : GTECH_NAND2 port map( A => n6206, B => n1281, Z => n6204);
   U6167 : GTECH_NAND2 port map( A => n6207, B => n6208, Z => n6136);
   U6168 : GTECH_NAND2 port map( A => n6129, B => n1282, Z => n6208);
   U6169 : GTECH_NAND2 port map( A => n6209, B => n1398, Z => n6207);
   U6170 : GTECH_NAND2 port map( A => n6210, B => n6211, Z => n6129);
   U6171 : GTECH_NAND2 port map( A => n6120, B => n1402, Z => n6211);
   U6172 : GTECH_NAND2 port map( A => n6212, B => n1399, Z => n6210);
   U6173 : GTECH_NAND2 port map( A => n6213, B => n6214, Z => n6120);
   U6174 : GTECH_NAND2 port map( A => n6113, B => n1400, Z => n6214);
   U6175 : GTECH_NAND2 port map( A => n6215, B => n1574, Z => n6213);
   U6176 : GTECH_NAND2 port map( A => n6216, B => n6217, Z => n6113);
   U6177 : GTECH_NAND2 port map( A => n6104, B => n1581, Z => n6217);
   U6178 : GTECH_NAND2 port map( A => n6218, B => n1575, Z => n6216);
   U6179 : GTECH_NAND2 port map( A => n6219, B => n6220, Z => n6104);
   U6180 : GTECH_NAND2 port map( A => n6097, B => n1579, Z => n6220);
   U6181 : GTECH_NAND2 port map( A => n6221, B => n1576, Z => n6219);
   U6182 : GTECH_NAND2 port map( A => n6222, B => n6223, Z => n6097);
   U6183 : GTECH_NAND2 port map( A => n6089, B => n1577, Z => n6223);
   U6184 : GTECH_NAND2 port map( A => n6224, B => n1679, Z => n6222);
   U6185 : GTECH_NAND2 port map( A => n1680, B => n6225, Z => n6089);
   U6186 : GTECH_NAND2 port map( A => n6082, B => n6226, Z => n6225);
   U6187 : GTECH_NOR2 port map( A => n6226, B => n6082, Z => n6227);
   U6188 : GTECH_NOR2 port map( A => n1905, B => n1714, Z => n6082);
   U6189 : GTECH_NAND2 port map( A => B(14), B => A(0), Z => n6226);
   U6190 : GTECH_NAND2 port map( A => n6228, B => n6229, Z => n6224);
   U6191 : GTECH_NAND2 port map( A => n1578, B => n1738, Z => n6229);
   U6192 : GTECH_NAND2 port map( A => n6088, B => n6230, Z => n6228);
   U6193 : GTECH_NAND2 port map( A => n6231, B => n6232, Z => n6230);
   U6194 : GTECH_NOR2 port map( A => n1649, B => n1905, Z => n6231);
   U6195 : GTECH_NOR2 port map( A => n1906, B => n1748, Z => n6088);
   U6196 : GTECH_NAND2 port map( A => n6233, B => n6234, Z => n6221);
   U6197 : GTECH_NAND2 port map( A => n1773, B => n6095, Z => n6234);
   U6198 : GTECH_NAND2 port map( A => n1580, B => n6096, Z => n6233);
   U6199 : GTECH_NAND2 port map( A => B(11), B => A(3), Z => n6096);
   U6200 : GTECH_NAND2 port map( A => n6235, B => n6236, Z => n6095);
   U6201 : GTECH_NAND2 port map( A => n1588, B => n6237, Z => n6236);
   U6202 : GTECH_NAND2 port map( A => n1681, B => n1739, Z => n6237);
   U6203 : GTECH_NAND2 port map( A => n6238, B => n6239, Z => n6235);
   U6204 : GTECH_NAND2 port map( A => n6240, B => n6241, Z => n6218);
   U6205 : GTECH_NAND2 port map( A => n1805, B => n6103, Z => n6241);
   U6206 : GTECH_NAND2 port map( A => n1582, B => n6105, Z => n6240);
   U6207 : GTECH_NAND2 port map( A => B(10), B => A(4), Z => n6105);
   U6208 : GTECH_NAND2 port map( A => n6242, B => n6243, Z => n6103);
   U6209 : GTECH_NAND2 port map( A => n6244, B => n6245, Z => n6243);
   U6210 : GTECH_NAND2 port map( A => n1586, B => n6246, Z => n6244);
   U6211 : GTECH_NAND2 port map( A => n1774, B => n6247, Z => n6242);
   U6212 : GTECH_NAND2 port map( A => n6248, B => n6249, Z => n6215);
   U6213 : GTECH_NAND2 port map( A => n1401, B => n6111, Z => n6249);
   U6214 : GTECH_NAND2 port map( A => n1583, B => n6112, Z => n6248);
   U6215 : GTECH_NAND2 port map( A => B(9), B => A(5), Z => n6112);
   U6216 : GTECH_NAND2 port map( A => n6250, B => n6251, Z => n6111);
   U6217 : GTECH_NAND2 port map( A => n6252, B => n6253, Z => n6251);
   U6218 : GTECH_NAND2 port map( A => n6254, B => n6255, Z => n6252);
   U6219 : GTECH_NAND2 port map( A => n1806, B => n1585, Z => n6250);
   U6220 : GTECH_NAND2 port map( A => n6256, B => n6257, Z => n6212);
   U6221 : GTECH_NAND2 port map( A => n1835, B => n6119, Z => n6257);
   U6222 : GTECH_NAND2 port map( A => n1403, B => n6121, Z => n6256);
   U6223 : GTECH_NAND2 port map( A => B(8), B => A(6), Z => n6121);
   U6224 : GTECH_NAND2 port map( A => n6258, B => n6259, Z => n6119);
   U6225 : GTECH_NAND2 port map( A => n6260, B => n6261, Z => n6259);
   U6226 : GTECH_NAND2 port map( A => n1584, B => n6262, Z => n6260);
   U6227 : GTECH_NAND2 port map( A => n1408, B => n6263, Z => n6258);
   U6228 : GTECH_NAND2 port map( A => n6264, B => n6265, Z => n6209);
   U6229 : GTECH_NAND2 port map( A => n1283, B => n6127, Z => n6265);
   U6230 : GTECH_NAND2 port map( A => n1404, B => n6128, Z => n6264);
   U6231 : GTECH_NAND2 port map( A => B(7), B => A(7), Z => n6128);
   U6232 : GTECH_NAND2 port map( A => n6266, B => n6267, Z => n6127);
   U6233 : GTECH_NAND2 port map( A => n6268, B => n6269, Z => n6267);
   U6234 : GTECH_NAND2 port map( A => n6270, B => n6271, Z => n6268);
   U6235 : GTECH_NAND2 port map( A => n1836, B => n1406, Z => n6266);
   U6236 : GTECH_NAND2 port map( A => n6272, B => n6273, Z => n6206);
   U6237 : GTECH_NAND2 port map( A => n1843, B => n6135, Z => n6273);
   U6238 : GTECH_NAND2 port map( A => n1285, B => n6137, Z => n6272);
   U6239 : GTECH_NAND2 port map( A => B(6), B => A(8), Z => n6137);
   U6240 : GTECH_NAND2 port map( A => n6274, B => n6275, Z => n6135);
   U6241 : GTECH_NAND2 port map( A => n6276, B => n6277, Z => n6275);
   U6242 : GTECH_NAND2 port map( A => n1405, B => n6278, Z => n6276);
   U6243 : GTECH_NAND2 port map( A => n1288, B => n6279, Z => n6274);
   U6244 : GTECH_NAND2 port map( A => n6280, B => n6281, Z => n6203);
   U6245 : GTECH_NAND2 port map( A => n456, B => n6143, Z => n6281);
   U6246 : GTECH_NAND2 port map( A => n380, B => n6144, Z => n6280);
   U6247 : GTECH_NAND2 port map( A => B(5), B => A(9), Z => n6144);
   U6248 : GTECH_NAND2 port map( A => n6282, B => n6283, Z => n6143);
   U6249 : GTECH_NAND2 port map( A => n6284, B => n6285, Z => n6283);
   U6250 : GTECH_NAND2 port map( A => n6286, B => n6287, Z => n6284);
   U6251 : GTECH_NAND2 port map( A => n457, B => n1286, Z => n6282);
   U6252 : GTECH_NAND2 port map( A => n6288, B => n6289, Z => n6200);
   U6253 : GTECH_NAND2 port map( A => n1815, B => n6151, Z => n6289);
   U6254 : GTECH_NAND2 port map( A => n307, B => n6153, Z => n6288);
   U6255 : GTECH_NAND2 port map( A => B(4), B => A(10), Z => n6153);
   U6256 : GTECH_NAND2 port map( A => n6290, B => n6291, Z => n6151);
   U6257 : GTECH_NAND2 port map( A => n6292, B => n6293, Z => n6291);
   U6258 : GTECH_NAND2 port map( A => n375, B => n6294, Z => n6292);
   U6259 : GTECH_NAND2 port map( A => n1171, B => n6295, Z => n6290);
   U6260 : GTECH_NAND2 port map( A => n6296, B => n6297, Z => n6197);
   U6261 : GTECH_NAND2 port map( A => n1068, B => n6159, Z => n6297);
   U6262 : GTECH_NAND2 port map( A => n230, B => n6160, Z => n6296);
   U6263 : GTECH_NAND2 port map( A => B(3), B => A(11), Z => n6160);
   U6264 : GTECH_NAND2 port map( A => n6298, B => n6299, Z => n6159);
   U6265 : GTECH_NAND2 port map( A => n6300, B => n6301, Z => n6299);
   U6266 : GTECH_NAND2 port map( A => n6302, B => n6303, Z => n6300);
   U6267 : GTECH_NAND2 port map( A => n1785, B => n302, Z => n6298);
   U6268 : GTECH_NAND2 port map( A => n6304, B => n6305, Z => n6194);
   U6269 : GTECH_NAND2 port map( A => n1013, B => n6167, Z => n6305);
   U6270 : GTECH_NAND2 port map( A => n154, B => n6169, Z => n6304);
   U6271 : GTECH_NAND2 port map( A => B(2), B => A(12), Z => n6169);
   U6272 : GTECH_NAND2 port map( A => n6306, B => n6307, Z => n6167);
   U6273 : GTECH_NAND2 port map( A => n6308, B => n6309, Z => n6307);
   U6274 : GTECH_NAND2 port map( A => n225, B => n6310, Z => n6308);
   U6275 : GTECH_NAND2 port map( A => n1069, B => n6311, Z => n6306);
   U6276 : GTECH_NAND2 port map( A => n6312, B => n6313, Z => n6191);
   U6277 : GTECH_NAND2 port map( A => n1718, B => n6175, Z => n6313);
   U6278 : GTECH_NAND2 port map( A => n79, B => n6176, Z => n6312);
   U6279 : GTECH_NAND2 port map( A => A(13), B => B(1), Z => n6176);
   U6280 : GTECH_NAND2 port map( A => n6314, B => n6315, Z => n6175);
   U6281 : GTECH_NAND2 port map( A => n6316, B => n6317, Z => n6315);
   U6282 : GTECH_NAND2 port map( A => n6318, B => n6319, Z => n6316);
   U6283 : GTECH_NAND2 port map( A => n1014, B => n149, Z => n6314);
   U6284 : GTECH_NAND2 port map( A => n6320, B => n6321, Z => n6188);
   U6285 : GTECH_NAND2 port map( A => n931, B => n6183, Z => n6321);
   U6286 : GTECH_NAND2 port map( A => n8, B => n6185, Z => n6320);
   U6287 : GTECH_NAND2 port map( A => A(14), B => B(0), Z => n6185);
   U6288 : GTECH_NAND2 port map( A => n6322, B => n43, Z => n6183);
   U6289 : GTECH_NOR2 port map( A => n6324, B => n6325, Z => n6323);
   U6290 : GTECH_NOR2 port map( A => n6326, B => n1904, Z => n6324);
   U6291 : GTECH_NAND2 port map( A => n1904, B => n6326, Z => n6322);
   U6292 : GTECH_NOR2 port map( A => n5, B => n6328, Z => PRODUCT(13));
   U6293 : GTECH_NOR2 port map( A => n6326, B => n6329, Z => n6328);
   U6294 : GTECH_NAND2 port map( A => n6329, B => n6326, Z => n6330);
   U6295 : GTECH_NAND2 port map( A => n6331, B => n6332, Z => n6326);
   U6296 : GTECH_NAND2 port map( A => n6318, B => n75, Z => n6332);
   U6297 : GTECH_NAND2 port map( A => n6333, B => n149, Z => n6331);
   U6298 : GTECH_NAND2 port map( A => n6334, B => n6335, Z => n6318);
   U6299 : GTECH_NAND2 port map( A => n6311, B => n150, Z => n6335);
   U6300 : GTECH_NAND2 port map( A => n6336, B => n225, Z => n6334);
   U6301 : GTECH_NAND2 port map( A => n6337, B => n6338, Z => n6311);
   U6302 : GTECH_NAND2 port map( A => n6302, B => n226, Z => n6338);
   U6303 : GTECH_NAND2 port map( A => n6339, B => n302, Z => n6337);
   U6304 : GTECH_NAND2 port map( A => n6340, B => n6341, Z => n6302);
   U6305 : GTECH_NAND2 port map( A => n6295, B => n303, Z => n6341);
   U6306 : GTECH_NAND2 port map( A => n6342, B => n375, Z => n6340);
   U6307 : GTECH_NAND2 port map( A => n6343, B => n6344, Z => n6295);
   U6308 : GTECH_NAND2 port map( A => n6286, B => n376, Z => n6344);
   U6309 : GTECH_NAND2 port map( A => n6345, B => n1286, Z => n6343);
   U6310 : GTECH_NAND2 port map( A => n6346, B => n6347, Z => n6286);
   U6311 : GTECH_NAND2 port map( A => n6279, B => n1287, Z => n6347);
   U6312 : GTECH_NAND2 port map( A => n6348, B => n1405, Z => n6346);
   U6313 : GTECH_NAND2 port map( A => n6349, B => n6350, Z => n6279);
   U6314 : GTECH_NAND2 port map( A => n6270, B => n1409, Z => n6350);
   U6315 : GTECH_NAND2 port map( A => n6351, B => n1406, Z => n6349);
   U6316 : GTECH_NAND2 port map( A => n6352, B => n6353, Z => n6270);
   U6317 : GTECH_NAND2 port map( A => n6263, B => n1407, Z => n6353);
   U6318 : GTECH_NAND2 port map( A => n6354, B => n1584, Z => n6352);
   U6319 : GTECH_NAND2 port map( A => n6355, B => n6356, Z => n6263);
   U6320 : GTECH_NAND2 port map( A => n6254, B => n1591, Z => n6356);
   U6321 : GTECH_NAND2 port map( A => n6357, B => n1585, Z => n6355);
   U6322 : GTECH_NAND2 port map( A => n6358, B => n6359, Z => n6254);
   U6323 : GTECH_NAND2 port map( A => n6247, B => n1589, Z => n6359);
   U6324 : GTECH_NAND2 port map( A => n6360, B => n1586, Z => n6358);
   U6325 : GTECH_NAND2 port map( A => n6361, B => n6362, Z => n6247);
   U6326 : GTECH_NAND2 port map( A => n6239, B => n1587, Z => n6362);
   U6327 : GTECH_NAND2 port map( A => n6363, B => n1681, Z => n6361);
   U6328 : GTECH_NAND2 port map( A => n1682, B => n6364, Z => n6239);
   U6329 : GTECH_NAND2 port map( A => n6232, B => n6365, Z => n6364);
   U6330 : GTECH_NOR2 port map( A => n6365, B => n6232, Z => n6366);
   U6331 : GTECH_NOR2 port map( A => n1906, B => n1714, Z => n6232);
   U6332 : GTECH_NAND2 port map( A => B(13), B => A(0), Z => n6365);
   U6333 : GTECH_NAND2 port map( A => n6367, B => n6368, Z => n6363);
   U6334 : GTECH_NAND2 port map( A => n1588, B => n1739, Z => n6368);
   U6335 : GTECH_NAND2 port map( A => n6238, B => n6369, Z => n6367);
   U6336 : GTECH_NAND2 port map( A => n6370, B => n6371, Z => n6369);
   U6337 : GTECH_NOR2 port map( A => n1649, B => n1906, Z => n6370);
   U6338 : GTECH_NOR2 port map( A => n1907, B => n1748, Z => n6238);
   U6339 : GTECH_NAND2 port map( A => n6372, B => n6373, Z => n6360);
   U6340 : GTECH_NAND2 port map( A => n1774, B => n6245, Z => n6373);
   U6341 : GTECH_NAND2 port map( A => n1590, B => n6246, Z => n6372);
   U6342 : GTECH_NAND2 port map( A => B(10), B => A(3), Z => n6246);
   U6343 : GTECH_NAND2 port map( A => n6374, B => n6375, Z => n6245);
   U6344 : GTECH_NAND2 port map( A => n1598, B => n6376, Z => n6375);
   U6345 : GTECH_NAND2 port map( A => n1683, B => n1740, Z => n6376);
   U6346 : GTECH_NAND2 port map( A => n6377, B => n6378, Z => n6374);
   U6347 : GTECH_NAND2 port map( A => n6379, B => n6380, Z => n6357);
   U6348 : GTECH_NAND2 port map( A => n1806, B => n6253, Z => n6380);
   U6349 : GTECH_NAND2 port map( A => n1592, B => n6255, Z => n6379);
   U6350 : GTECH_NAND2 port map( A => B(9), B => A(4), Z => n6255);
   U6351 : GTECH_NAND2 port map( A => n6381, B => n6382, Z => n6253);
   U6352 : GTECH_NAND2 port map( A => n6383, B => n6384, Z => n6382);
   U6353 : GTECH_NAND2 port map( A => n1596, B => n6385, Z => n6383);
   U6354 : GTECH_NAND2 port map( A => n1775, B => n6386, Z => n6381);
   U6355 : GTECH_NAND2 port map( A => n6387, B => n6388, Z => n6354);
   U6356 : GTECH_NAND2 port map( A => n1408, B => n6261, Z => n6388);
   U6357 : GTECH_NAND2 port map( A => n1593, B => n6262, Z => n6387);
   U6358 : GTECH_NAND2 port map( A => B(8), B => A(5), Z => n6262);
   U6359 : GTECH_NAND2 port map( A => n6389, B => n6390, Z => n6261);
   U6360 : GTECH_NAND2 port map( A => n6391, B => n6392, Z => n6390);
   U6361 : GTECH_NAND2 port map( A => n6393, B => n6394, Z => n6391);
   U6362 : GTECH_NAND2 port map( A => n1807, B => n1595, Z => n6389);
   U6363 : GTECH_NAND2 port map( A => n6395, B => n6396, Z => n6351);
   U6364 : GTECH_NAND2 port map( A => n1836, B => n6269, Z => n6396);
   U6365 : GTECH_NAND2 port map( A => n1410, B => n6271, Z => n6395);
   U6366 : GTECH_NAND2 port map( A => B(7), B => A(6), Z => n6271);
   U6367 : GTECH_NAND2 port map( A => n6397, B => n6398, Z => n6269);
   U6368 : GTECH_NAND2 port map( A => n6399, B => n6400, Z => n6398);
   U6369 : GTECH_NAND2 port map( A => n1594, B => n6401, Z => n6399);
   U6370 : GTECH_NAND2 port map( A => n1415, B => n6402, Z => n6397);
   U6371 : GTECH_NAND2 port map( A => n6403, B => n6404, Z => n6348);
   U6372 : GTECH_NAND2 port map( A => n1288, B => n6277, Z => n6404);
   U6373 : GTECH_NAND2 port map( A => n1411, B => n6278, Z => n6403);
   U6374 : GTECH_NAND2 port map( A => B(6), B => A(7), Z => n6278);
   U6375 : GTECH_NAND2 port map( A => n6405, B => n6406, Z => n6277);
   U6376 : GTECH_NAND2 port map( A => n6407, B => n6408, Z => n6406);
   U6377 : GTECH_NAND2 port map( A => n6409, B => n6410, Z => n6407);
   U6378 : GTECH_NAND2 port map( A => n1837, B => n1413, Z => n6405);
   U6379 : GTECH_NAND2 port map( A => n6411, B => n6412, Z => n6345);
   U6380 : GTECH_NAND2 port map( A => n457, B => n6285, Z => n6412);
   U6381 : GTECH_NAND2 port map( A => n377, B => n6287, Z => n6411);
   U6382 : GTECH_NAND2 port map( A => B(5), B => A(8), Z => n6287);
   U6383 : GTECH_NAND2 port map( A => n6413, B => n6414, Z => n6285);
   U6384 : GTECH_NAND2 port map( A => n6415, B => n6416, Z => n6414);
   U6385 : GTECH_NAND2 port map( A => n1412, B => n6417, Z => n6415);
   U6386 : GTECH_NAND2 port map( A => n458, B => n6418, Z => n6413);
   U6387 : GTECH_NAND2 port map( A => n6419, B => n6420, Z => n6342);
   U6388 : GTECH_NAND2 port map( A => n1171, B => n6293, Z => n6420);
   U6389 : GTECH_NAND2 port map( A => n304, B => n6294, Z => n6419);
   U6390 : GTECH_NAND2 port map( A => B(4), B => A(9), Z => n6294);
   U6391 : GTECH_NAND2 port map( A => n6421, B => n6422, Z => n6293);
   U6392 : GTECH_NAND2 port map( A => n6423, B => n6424, Z => n6422);
   U6393 : GTECH_NAND2 port map( A => n6425, B => n6426, Z => n6423);
   U6394 : GTECH_NAND2 port map( A => n1816, B => n372, Z => n6421);
   U6395 : GTECH_NAND2 port map( A => n6427, B => n6428, Z => n6339);
   U6396 : GTECH_NAND2 port map( A => n1785, B => n6301, Z => n6428);
   U6397 : GTECH_NAND2 port map( A => n227, B => n6303, Z => n6427);
   U6398 : GTECH_NAND2 port map( A => B(3), B => A(10), Z => n6303);
   U6399 : GTECH_NAND2 port map( A => n6429, B => n6430, Z => n6301);
   U6400 : GTECH_NAND2 port map( A => n6431, B => n6432, Z => n6430);
   U6401 : GTECH_NAND2 port map( A => n299, B => n6433, Z => n6431);
   U6402 : GTECH_NAND2 port map( A => n1172, B => n6434, Z => n6429);
   U6403 : GTECH_NAND2 port map( A => n6435, B => n6436, Z => n6336);
   U6404 : GTECH_NAND2 port map( A => n1069, B => n6309, Z => n6436);
   U6405 : GTECH_NAND2 port map( A => n151, B => n6310, Z => n6435);
   U6406 : GTECH_NAND2 port map( A => B(2), B => A(11), Z => n6310);
   U6407 : GTECH_NAND2 port map( A => n6437, B => n6438, Z => n6309);
   U6408 : GTECH_NAND2 port map( A => n6439, B => n6440, Z => n6438);
   U6409 : GTECH_NAND2 port map( A => n6441, B => n6442, Z => n6439);
   U6410 : GTECH_NAND2 port map( A => n1753, B => n222, Z => n6437);
   U6411 : GTECH_NAND2 port map( A => n6443, B => n6444, Z => n6333);
   U6412 : GTECH_NAND2 port map( A => n1014, B => n6317, Z => n6444);
   U6413 : GTECH_NAND2 port map( A => n76, B => n6319, Z => n6443);
   U6414 : GTECH_NAND2 port map( A => A(12), B => B(1), Z => n6319);
   U6415 : GTECH_NAND2 port map( A => n6445, B => n6446, Z => n6317);
   U6416 : GTECH_NAND2 port map( A => n6447, B => n6448, Z => n6446);
   U6417 : GTECH_NAND2 port map( A => n146, B => n6449, Z => n6447);
   U6418 : GTECH_NAND2 port map( A => n1070, B => n6450, Z => n6445);
   U6419 : GTECH_NOR2 port map( A => n6, B => n6451, Z => n6329);
   U6420 : GTECH_NOR2 port map( A => n6327, B => n6325, Z => n6451);
   U6421 : GTECH_NAND2 port map( A => n6325, B => n6327, Z => n6452);
   U6422 : GTECH_NAND2 port map( A => A(13), B => B(0), Z => n6327);
   U6423 : GTECH_NOR2 port map( A => n6453, B => n6454, Z => n6325);
   U6424 : GTECH_NOR2 port map( A => n6455, B => n6456, Z => n6454);
   U6425 : GTECH_NOR2 port map( A => n44, B => n6457, Z => n6456);
   U6426 : GTECH_NOR2 port map( A => n72, B => n6458, Z => n6453);
   U6427 : GTECH_NAND2 port map( A => n6459, B => n6460, Z => PRODUCT(12));
   U6428 : GTECH_NAND2 port map( A => n72, B => n45, Z => n6460);
   U6429 : GTECH_NAND2 port map( A => n6461, B => n6457, Z => n6459);
   U6430 : GTECH_NOR2 port map( A => n6462, B => n6463, Z => n6457);
   U6431 : GTECH_NOR2 port map( A => n146, B => n6464, Z => n6463);
   U6432 : GTECH_NOR2 port map( A => n73, B => n6450, Z => n6462);
   U6433 : GTECH_NAND2 port map( A => n6465, B => n6466, Z => n6450);
   U6434 : GTECH_NAND2 port map( A => n6441, B => n147, Z => n6466);
   U6435 : GTECH_NAND2 port map( A => n6467, B => n222, Z => n6465);
   U6436 : GTECH_NAND2 port map( A => n6468, B => n6469, Z => n6441);
   U6437 : GTECH_NAND2 port map( A => n6434, B => n223, Z => n6469);
   U6438 : GTECH_NAND2 port map( A => n6470, B => n299, Z => n6468);
   U6439 : GTECH_NAND2 port map( A => n6471, B => n6472, Z => n6434);
   U6440 : GTECH_NAND2 port map( A => n6425, B => n300, Z => n6472);
   U6441 : GTECH_NAND2 port map( A => n6473, B => n372, Z => n6471);
   U6442 : GTECH_NAND2 port map( A => n6474, B => n6475, Z => n6425);
   U6443 : GTECH_NAND2 port map( A => n6418, B => n373, Z => n6475);
   U6444 : GTECH_NAND2 port map( A => n6476, B => n1412, Z => n6474);
   U6445 : GTECH_NAND2 port map( A => n6477, B => n6478, Z => n6418);
   U6446 : GTECH_NAND2 port map( A => n6409, B => n1417, Z => n6478);
   U6447 : GTECH_NAND2 port map( A => n6479, B => n1413, Z => n6477);
   U6448 : GTECH_NAND2 port map( A => n6480, B => n6481, Z => n6409);
   U6449 : GTECH_NAND2 port map( A => n6402, B => n1414, Z => n6481);
   U6450 : GTECH_NAND2 port map( A => n6482, B => n1594, Z => n6480);
   U6451 : GTECH_NAND2 port map( A => n6483, B => n6484, Z => n6402);
   U6452 : GTECH_NAND2 port map( A => n6393, B => n1601, Z => n6484);
   U6453 : GTECH_NAND2 port map( A => n6485, B => n1595, Z => n6483);
   U6454 : GTECH_NAND2 port map( A => n6486, B => n6487, Z => n6393);
   U6455 : GTECH_NAND2 port map( A => n6386, B => n1599, Z => n6487);
   U6456 : GTECH_NAND2 port map( A => n6488, B => n1596, Z => n6486);
   U6457 : GTECH_NAND2 port map( A => n6489, B => n6490, Z => n6386);
   U6458 : GTECH_NAND2 port map( A => n6378, B => n1597, Z => n6490);
   U6459 : GTECH_NAND2 port map( A => n6491, B => n1683, Z => n6489);
   U6460 : GTECH_NAND2 port map( A => n1684, B => n6492, Z => n6378);
   U6461 : GTECH_NAND2 port map( A => n6371, B => n6493, Z => n6492);
   U6462 : GTECH_NOR2 port map( A => n6493, B => n6371, Z => n6494);
   U6463 : GTECH_NOR2 port map( A => n1907, B => n1714, Z => n6371);
   U6464 : GTECH_NAND2 port map( A => B(12), B => A(0), Z => n6493);
   U6465 : GTECH_NAND2 port map( A => n6495, B => n6496, Z => n6491);
   U6466 : GTECH_NAND2 port map( A => n1598, B => n1740, Z => n6496);
   U6467 : GTECH_NAND2 port map( A => n6377, B => n6497, Z => n6495);
   U6468 : GTECH_NAND2 port map( A => n6498, B => n6499, Z => n6497);
   U6469 : GTECH_NOR2 port map( A => n1649, B => n1907, Z => n6498);
   U6470 : GTECH_NOR2 port map( A => n1881, B => n1748, Z => n6377);
   U6471 : GTECH_NAND2 port map( A => n6500, B => n6501, Z => n6488);
   U6472 : GTECH_NAND2 port map( A => n1775, B => n6384, Z => n6501);
   U6473 : GTECH_NAND2 port map( A => n1600, B => n6385, Z => n6500);
   U6474 : GTECH_NAND2 port map( A => B(9), B => A(3), Z => n6385);
   U6475 : GTECH_NAND2 port map( A => n6502, B => n6503, Z => n6384);
   U6476 : GTECH_NAND2 port map( A => n1608, B => n6504, Z => n6503);
   U6477 : GTECH_NAND2 port map( A => n1685, B => n1741, Z => n6504);
   U6478 : GTECH_NAND2 port map( A => n6505, B => n6506, Z => n6502);
   U6479 : GTECH_NAND2 port map( A => n6507, B => n6508, Z => n6485);
   U6480 : GTECH_NAND2 port map( A => n1807, B => n6392, Z => n6508);
   U6481 : GTECH_NAND2 port map( A => n1602, B => n6394, Z => n6507);
   U6482 : GTECH_NAND2 port map( A => B(8), B => A(4), Z => n6394);
   U6483 : GTECH_NAND2 port map( A => n6509, B => n6510, Z => n6392);
   U6484 : GTECH_NAND2 port map( A => n6511, B => n6512, Z => n6510);
   U6485 : GTECH_NAND2 port map( A => n1606, B => n6513, Z => n6511);
   U6486 : GTECH_NAND2 port map( A => n1777, B => n6514, Z => n6509);
   U6487 : GTECH_NAND2 port map( A => n6515, B => n6516, Z => n6482);
   U6488 : GTECH_NAND2 port map( A => n1415, B => n6400, Z => n6516);
   U6489 : GTECH_NAND2 port map( A => n1603, B => n6401, Z => n6515);
   U6490 : GTECH_NAND2 port map( A => B(7), B => A(5), Z => n6401);
   U6491 : GTECH_NAND2 port map( A => n6517, B => n6518, Z => n6400);
   U6492 : GTECH_NAND2 port map( A => n6519, B => n6520, Z => n6518);
   U6493 : GTECH_NAND2 port map( A => n6521, B => n6522, Z => n6519);
   U6494 : GTECH_NAND2 port map( A => n1809, B => n1605, Z => n6517);
   U6495 : GTECH_NAND2 port map( A => n6523, B => n6524, Z => n6479);
   U6496 : GTECH_NAND2 port map( A => n1837, B => n6408, Z => n6524);
   U6497 : GTECH_NAND2 port map( A => n1418, B => n6410, Z => n6523);
   U6498 : GTECH_NAND2 port map( A => B(6), B => A(6), Z => n6410);
   U6499 : GTECH_NAND2 port map( A => n6525, B => n6526, Z => n6408);
   U6500 : GTECH_NAND2 port map( A => n6527, B => n6528, Z => n6526);
   U6501 : GTECH_NAND2 port map( A => n1604, B => n6529, Z => n6527);
   U6502 : GTECH_NAND2 port map( A => n1421, B => n6530, Z => n6525);
   U6503 : GTECH_NAND2 port map( A => n6531, B => n6532, Z => n6476);
   U6504 : GTECH_NAND2 port map( A => n458, B => n6416, Z => n6532);
   U6505 : GTECH_NAND2 port map( A => n374, B => n6417, Z => n6531);
   U6506 : GTECH_NAND2 port map( A => B(5), B => A(7), Z => n6417);
   U6507 : GTECH_NAND2 port map( A => n6533, B => n6534, Z => n6416);
   U6508 : GTECH_NAND2 port map( A => n6535, B => n6536, Z => n6534);
   U6509 : GTECH_NAND2 port map( A => n6537, B => n6538, Z => n6535);
   U6510 : GTECH_NAND2 port map( A => n459, B => n1419, Z => n6533);
   U6511 : GTECH_NAND2 port map( A => n6539, B => n6540, Z => n6473);
   U6512 : GTECH_NAND2 port map( A => n1816, B => n6424, Z => n6540);
   U6513 : GTECH_NAND2 port map( A => n301, B => n6426, Z => n6539);
   U6514 : GTECH_NAND2 port map( A => B(4), B => A(8), Z => n6426);
   U6515 : GTECH_NAND2 port map( A => n6541, B => n6542, Z => n6424);
   U6516 : GTECH_NAND2 port map( A => n6543, B => n6544, Z => n6542);
   U6517 : GTECH_NAND2 port map( A => n369, B => n6545, Z => n6543);
   U6518 : GTECH_NAND2 port map( A => n1289, B => n6546, Z => n6541);
   U6519 : GTECH_NAND2 port map( A => n6547, B => n6548, Z => n6470);
   U6520 : GTECH_NAND2 port map( A => n1172, B => n6432, Z => n6548);
   U6521 : GTECH_NAND2 port map( A => n224, B => n6433, Z => n6547);
   U6522 : GTECH_NAND2 port map( A => B(3), B => A(9), Z => n6433);
   U6523 : GTECH_NAND2 port map( A => n6549, B => n6550, Z => n6432);
   U6524 : GTECH_NAND2 port map( A => n6551, B => n6552, Z => n6550);
   U6525 : GTECH_NAND2 port map( A => n6553, B => n6554, Z => n6551);
   U6526 : GTECH_NAND2 port map( A => n1786, B => n296, Z => n6549);
   U6527 : GTECH_NAND2 port map( A => n6555, B => n6556, Z => n6467);
   U6528 : GTECH_NAND2 port map( A => n1753, B => n6440, Z => n6556);
   U6529 : GTECH_NAND2 port map( A => n148, B => n6442, Z => n6555);
   U6530 : GTECH_NAND2 port map( A => B(2), B => A(10), Z => n6442);
   U6531 : GTECH_NAND2 port map( A => n6557, B => n6558, Z => n6440);
   U6532 : GTECH_NAND2 port map( A => n6559, B => n6560, Z => n6558);
   U6533 : GTECH_NAND2 port map( A => n219, B => n6561, Z => n6559);
   U6534 : GTECH_NAND2 port map( A => n1173, B => n6562, Z => n6557);
   U6535 : GTECH_NAND2 port map( A => n6563, B => n6564, Z => n6464);
   U6536 : GTECH_NAND2 port map( A => n1070, B => n6448, Z => n6564);
   U6537 : GTECH_NAND2 port map( A => n74, B => n6449, Z => n6563);
   U6538 : GTECH_NAND2 port map( A => A(11), B => B(1), Z => n6449);
   U6539 : GTECH_NAND2 port map( A => n6565, B => n6566, Z => n6448);
   U6540 : GTECH_NAND2 port map( A => n6567, B => n6568, Z => n6566);
   U6541 : GTECH_NAND2 port map( A => n6569, B => n6570, Z => n6567);
   U6542 : GTECH_NAND2 port map( A => n1719, B => n143, Z => n6565);
   U6543 : GTECH_NAND2 port map( A => n6571, B => n46, Z => n6461);
   U6544 : GTECH_NOR2 port map( A => n6455, B => n6458, Z => n6572);
   U6545 : GTECH_NAND2 port map( A => n6458, B => n6455, Z => n6571);
   U6546 : GTECH_NAND2 port map( A => A(12), B => B(0), Z => n6455);
   U6547 : GTECH_NOR2 port map( A => n6573, B => n6574, Z => n6458);
   U6548 : GTECH_NOR2 port map( A => n1933, B => n47, Z => n6574);
   U6549 : GTECH_NAND2 port map( A => n1934, B => n1929, Z => n6575);
   U6550 : GTECH_NAND2 port map( A => A(11), B => B(0), Z => n1933);
   U6551 : GTECH_NOR2 port map( A => n1929, B => n1934, Z => n6573);
   U6552 : GTECH_NOR2 port map( A => n6576, B => n6577, Z => n1934);
   U6553 : GTECH_NOR2 port map( A => n1941, B => n6578, Z => n6577);
   U6554 : GTECH_NOR2 port map( A => n50, B => n1937, Z => n6578);
   U6555 : GTECH_NAND2 port map( A => A(10), B => B(0), Z => n1941);
   U6556 : GTECH_NOR2 port map( A => n67, B => n1942, Z => n6576);
   U6557 : GTECH_NOR2 port map( A => n6579, B => n6580, Z => n1942);
   U6558 : GTECH_NOR2 port map( A => n1949, B => n51, Z => n6580);
   U6559 : GTECH_NAND2 port map( A => n1950, B => n1945, Z => n6581);
   U6560 : GTECH_NAND2 port map( A => A(9), B => B(0), Z => n1949);
   U6561 : GTECH_NOR2 port map( A => n1945, B => n1950, Z => n6579);
   U6562 : GTECH_NOR2 port map( A => n6582, B => n6583, Z => n1950);
   U6563 : GTECH_NOR2 port map( A => n1957, B => n6584, Z => n6583);
   U6564 : GTECH_NOR2 port map( A => n54, B => n1953, Z => n6584);
   U6565 : GTECH_NAND2 port map( A => A(8), B => B(0), Z => n1957);
   U6566 : GTECH_NOR2 port map( A => n62, B => n1958, Z => n6582);
   U6567 : GTECH_NOR2 port map( A => n6585, B => n6586, Z => n1958);
   U6568 : GTECH_NOR2 port map( A => n1965, B => n55, Z => n6586);
   U6569 : GTECH_NAND2 port map( A => n1966, B => n1961, Z => n6587);
   U6570 : GTECH_NAND2 port map( A => A(7), B => B(0), Z => n1965);
   U6571 : GTECH_NOR2 port map( A => n1961, B => n1966, Z => n6585);
   U6572 : GTECH_NOR2 port map( A => n6588, B => n6589, Z => n1966);
   U6573 : GTECH_NOR2 port map( A => n1973, B => n6590, Z => n6589);
   U6574 : GTECH_NOR2 port map( A => n462, B => n1969, Z => n6590);
   U6575 : GTECH_NAND2 port map( A => A(6), B => B(0), Z => n1973);
   U6576 : GTECH_NOR2 port map( A => n58, B => n1974, Z => n6588);
   U6577 : GTECH_NOR2 port map( A => n6591, B => n6592, Z => n1974);
   U6578 : GTECH_NOR2 port map( A => n1981, B => n463, Z => n6592);
   U6579 : GTECH_NAND2 port map( A => n1982, B => n1977, Z => n6593);
   U6580 : GTECH_NAND2 port map( A => A(5), B => B(0), Z => n1981);
   U6581 : GTECH_NOR2 port map( A => n1977, B => n1982, Z => n6591);
   U6582 : GTECH_NOR2 port map( A => n6594, B => n6595, Z => n1982);
   U6583 : GTECH_NOR2 port map( A => n2080, B => n6596, Z => n6595);
   U6584 : GTECH_NOR2 port map( A => n2079, B => n2076, Z => n6596);
   U6585 : GTECH_NAND2 port map( A => A(4), B => B(0), Z => n2080);
   U6586 : GTECH_NOR2 port map( A => n1613, B => n1610, Z => n6594);
   U6587 : GTECH_NAND2 port map( A => n6597, B => n6598, Z => n2079);
   U6588 : GTECH_NAND2 port map( A => n6599, B => n4882, Z => n6598);
   U6589 : GTECH_NAND2 port map( A => n6600, B => n6601, Z => n4882);
   U6590 : GTECH_NAND2 port map( A => n1749, B => n6602, Z => n6601);
   U6591 : GTECH_NAND2 port map( A => n1701, B => n1704, Z => n6602);
   U6592 : GTECH_NAND2 port map( A => n6603, B => n6604, Z => n6600);
   U6593 : GTECH_NAND2 port map( A => n1611, B => n4883, Z => n6599);
   U6594 : GTECH_NAND2 port map( A => n1776, B => n4878, Z => n6597);
   U6595 : GTECH_NAND2 port map( A => n6605, B => n6606, Z => n4878);
   U6596 : GTECH_NAND2 port map( A => n6607, B => n1612, Z => n6606);
   U6597 : GTECH_NAND2 port map( A => n6608, B => n1687, Z => n6605);
   U6598 : GTECH_NAND2 port map( A => n6609, B => n6610, Z => n6608);
   U6599 : GTECH_NAND2 port map( A => n1618, B => n1715, Z => n6610);
   U6600 : GTECH_NAND2 port map( A => n6611, B => n6612, Z => n6609);
   U6601 : GTECH_NAND2 port map( A => A(3), B => B(0), Z => n4883);
   U6602 : GTECH_NOR2 port map( A => n6613, B => n6614, Z => n2076);
   U6603 : GTECH_NOR2 port map( A => n1629, B => n6615, Z => n6614);
   U6604 : GTECH_NOR2 port map( A => n1614, B => n6616, Z => n6613);
   U6605 : GTECH_NAND2 port map( A => n6617, B => n6618, Z => n6615);
   U6606 : GTECH_NAND2 port map( A => n1720, B => n6619, Z => n6618);
   U6607 : GTECH_NAND2 port map( A => n1615, B => n6620, Z => n6617);
   U6608 : GTECH_NOR2 port map( A => n6621, B => n6622, Z => n1977);
   U6609 : GTECH_NOR2 port map( A => n467, B => n6623, Z => n6622);
   U6610 : GTECH_NOR2 port map( A => n1616, B => n6624, Z => n6621);
   U6611 : GTECH_NAND2 port map( A => n6625, B => n6626, Z => n6623);
   U6612 : GTECH_NAND2 port map( A => n1721, B => n6627, Z => n6626);
   U6613 : GTECH_NAND2 port map( A => n1617, B => n6628, Z => n6625);
   U6614 : GTECH_NOR2 port map( A => n6629, B => n6630, Z => n1969);
   U6615 : GTECH_NOR2 port map( A => n130, B => n6631, Z => n6630);
   U6616 : GTECH_NOR2 port map( A => n465, B => n6632, Z => n6629);
   U6617 : GTECH_NAND2 port map( A => n6633, B => n6634, Z => n6631);
   U6618 : GTECH_NAND2 port map( A => n1422, B => n6635, Z => n6634);
   U6619 : GTECH_NAND2 port map( A => n466, B => n6636, Z => n6633);
   U6620 : GTECH_NOR2 port map( A => n6637, B => n6638, Z => n1961);
   U6621 : GTECH_NOR2 port map( A => n131, B => n6639, Z => n6638);
   U6622 : GTECH_NOR2 port map( A => n60, B => n6640, Z => n6637);
   U6623 : GTECH_NAND2 port map( A => n6641, B => n6642, Z => n6639);
   U6624 : GTECH_NAND2 port map( A => n1722, B => n6643, Z => n6642);
   U6625 : GTECH_NAND2 port map( A => n61, B => n6644, Z => n6641);
   U6626 : GTECH_NOR2 port map( A => n6645, B => n6646, Z => n1953);
   U6627 : GTECH_NOR2 port map( A => n134, B => n6647, Z => n6646);
   U6628 : GTECH_NOR2 port map( A => n63, B => n6648, Z => n6645);
   U6629 : GTECH_NAND2 port map( A => n6649, B => n6650, Z => n6647);
   U6630 : GTECH_NAND2 port map( A => n1290, B => n6651, Z => n6650);
   U6631 : GTECH_NAND2 port map( A => n64, B => n6652, Z => n6649);
   U6632 : GTECH_NOR2 port map( A => n6653, B => n6654, Z => n1945);
   U6633 : GTECH_NOR2 port map( A => n137, B => n6655, Z => n6654);
   U6634 : GTECH_NOR2 port map( A => n65, B => n6656, Z => n6653);
   U6635 : GTECH_NAND2 port map( A => n6657, B => n6658, Z => n6655);
   U6636 : GTECH_NAND2 port map( A => n1723, B => n6659, Z => n6658);
   U6637 : GTECH_NAND2 port map( A => n66, B => n6660, Z => n6657);
   U6638 : GTECH_NOR2 port map( A => n6661, B => n6662, Z => n1937);
   U6639 : GTECH_NOR2 port map( A => n140, B => n6663, Z => n6662);
   U6640 : GTECH_NOR2 port map( A => n68, B => n6664, Z => n6661);
   U6641 : GTECH_NAND2 port map( A => n6665, B => n6666, Z => n6663);
   U6642 : GTECH_NAND2 port map( A => n1174, B => n6667, Z => n6666);
   U6643 : GTECH_NAND2 port map( A => n69, B => n6668, Z => n6665);
   U6644 : GTECH_NOR2 port map( A => n6669, B => n6670, Z => n1929);
   U6645 : GTECH_NOR2 port map( A => n143, B => n6671, Z => n6670);
   U6646 : GTECH_NOR2 port map( A => n70, B => n6569, Z => n6669);
   U6647 : GTECH_NAND2 port map( A => n6672, B => n6673, Z => n6569);
   U6648 : GTECH_NAND2 port map( A => n6562, B => n144, Z => n6673);
   U6649 : GTECH_NAND2 port map( A => n6674, B => n219, Z => n6672);
   U6650 : GTECH_NAND2 port map( A => n6675, B => n6676, Z => n6562);
   U6651 : GTECH_NAND2 port map( A => n6553, B => n220, Z => n6676);
   U6652 : GTECH_NAND2 port map( A => n6677, B => n296, Z => n6675);
   U6653 : GTECH_NAND2 port map( A => n6678, B => n6679, Z => n6553);
   U6654 : GTECH_NAND2 port map( A => n6546, B => n297, Z => n6679);
   U6655 : GTECH_NAND2 port map( A => n6680, B => n369, Z => n6678);
   U6656 : GTECH_NAND2 port map( A => n6681, B => n6682, Z => n6546);
   U6657 : GTECH_NAND2 port map( A => n6537, B => n370, Z => n6682);
   U6658 : GTECH_NAND2 port map( A => n6683, B => n1419, Z => n6681);
   U6659 : GTECH_NAND2 port map( A => n6684, B => n6685, Z => n6537);
   U6660 : GTECH_NAND2 port map( A => n6530, B => n1420, Z => n6685);
   U6661 : GTECH_NAND2 port map( A => n6686, B => n1604, Z => n6684);
   U6662 : GTECH_NAND2 port map( A => n6687, B => n6688, Z => n6530);
   U6663 : GTECH_NAND2 port map( A => n6521, B => n1621, Z => n6688);
   U6664 : GTECH_NAND2 port map( A => n6689, B => n1605, Z => n6687);
   U6665 : GTECH_NAND2 port map( A => n6690, B => n6691, Z => n6521);
   U6666 : GTECH_NAND2 port map( A => n6514, B => n1619, Z => n6691);
   U6667 : GTECH_NAND2 port map( A => n6692, B => n1606, Z => n6690);
   U6668 : GTECH_NAND2 port map( A => n6693, B => n6694, Z => n6514);
   U6669 : GTECH_NAND2 port map( A => n6506, B => n1607, Z => n6694);
   U6670 : GTECH_NAND2 port map( A => n6695, B => n1685, Z => n6693);
   U6671 : GTECH_NAND2 port map( A => n1686, B => n6696, Z => n6506);
   U6672 : GTECH_NAND2 port map( A => n6499, B => n6697, Z => n6696);
   U6673 : GTECH_NOR2 port map( A => n6697, B => n6499, Z => n6698);
   U6674 : GTECH_NOR2 port map( A => n1881, B => n1714, Z => n6499);
   U6675 : GTECH_NAND2 port map( A => B(11), B => A(0), Z => n6697);
   U6676 : GTECH_NAND2 port map( A => n6699, B => n6700, Z => n6695);
   U6677 : GTECH_NAND2 port map( A => n1608, B => n1741, Z => n6700);
   U6678 : GTECH_NAND2 port map( A => n6505, B => n6701, Z => n6699);
   U6679 : GTECH_NAND2 port map( A => n6702, B => n6703, Z => n6701);
   U6680 : GTECH_NOR2 port map( A => n1649, B => n1881, Z => n6702);
   U6681 : GTECH_NOR2 port map( A => n1913, B => n1748, Z => n6505);
   U6682 : GTECH_NAND2 port map( A => n6704, B => n6705, Z => n6692);
   U6683 : GTECH_NAND2 port map( A => n1777, B => n6512, Z => n6705);
   U6684 : GTECH_NAND2 port map( A => n1620, B => n6513, Z => n6704);
   U6685 : GTECH_NAND2 port map( A => B(8), B => A(3), Z => n6513);
   U6686 : GTECH_NAND2 port map( A => n6706, B => n6707, Z => n6512);
   U6687 : GTECH_NAND2 port map( A => n1628, B => n6708, Z => n6707);
   U6688 : GTECH_NAND2 port map( A => n1689, B => n1742, Z => n6708);
   U6689 : GTECH_NAND2 port map( A => n6709, B => n6710, Z => n6706);
   U6690 : GTECH_NAND2 port map( A => n6711, B => n6712, Z => n6689);
   U6691 : GTECH_NAND2 port map( A => n1809, B => n6520, Z => n6712);
   U6692 : GTECH_NAND2 port map( A => n1622, B => n6522, Z => n6711);
   U6693 : GTECH_NAND2 port map( A => B(7), B => A(4), Z => n6522);
   U6694 : GTECH_NAND2 port map( A => n6713, B => n6714, Z => n6520);
   U6695 : GTECH_NAND2 port map( A => n6715, B => n6716, Z => n6714);
   U6696 : GTECH_NAND2 port map( A => n1626, B => n6717, Z => n6715);
   U6697 : GTECH_NAND2 port map( A => n1778, B => n6718, Z => n6713);
   U6698 : GTECH_NAND2 port map( A => n6719, B => n6720, Z => n6686);
   U6699 : GTECH_NAND2 port map( A => n1421, B => n6528, Z => n6720);
   U6700 : GTECH_NAND2 port map( A => n1623, B => n6529, Z => n6719);
   U6701 : GTECH_NAND2 port map( A => B(6), B => A(5), Z => n6529);
   U6702 : GTECH_NAND2 port map( A => n6721, B => n6722, Z => n6528);
   U6703 : GTECH_NAND2 port map( A => n6723, B => n6724, Z => n6722);
   U6704 : GTECH_NAND2 port map( A => n6725, B => n6726, Z => n6723);
   U6705 : GTECH_NAND2 port map( A => n1810, B => n1625, Z => n6721);
   U6706 : GTECH_NAND2 port map( A => n6727, B => n6728, Z => n6683);
   U6707 : GTECH_NAND2 port map( A => n459, B => n6536, Z => n6728);
   U6708 : GTECH_NAND2 port map( A => n371, B => n6538, Z => n6727);
   U6709 : GTECH_NAND2 port map( A => B(5), B => A(6), Z => n6538);
   U6710 : GTECH_NAND2 port map( A => n6729, B => n6730, Z => n6536);
   U6711 : GTECH_NAND2 port map( A => n6731, B => n6732, Z => n6730);
   U6712 : GTECH_NAND2 port map( A => n1624, B => n6733, Z => n6731);
   U6713 : GTECH_NAND2 port map( A => n460, B => n6734, Z => n6729);
   U6714 : GTECH_NAND2 port map( A => n6735, B => n6736, Z => n6680);
   U6715 : GTECH_NAND2 port map( A => n1289, B => n6544, Z => n6736);
   U6716 : GTECH_NAND2 port map( A => n298, B => n6545, Z => n6735);
   U6717 : GTECH_NAND2 port map( A => B(4), B => A(7), Z => n6545);
   U6718 : GTECH_NAND2 port map( A => n6737, B => n6738, Z => n6544);
   U6719 : GTECH_NAND2 port map( A => n6739, B => n6740, Z => n6738);
   U6720 : GTECH_NAND2 port map( A => n6741, B => n6742, Z => n6739);
   U6721 : GTECH_NAND2 port map( A => n1817, B => n366, Z => n6737);
   U6722 : GTECH_NAND2 port map( A => n6743, B => n6744, Z => n6677);
   U6723 : GTECH_NAND2 port map( A => n1786, B => n6552, Z => n6744);
   U6724 : GTECH_NAND2 port map( A => n221, B => n6554, Z => n6743);
   U6725 : GTECH_NAND2 port map( A => B(3), B => A(8), Z => n6554);
   U6726 : GTECH_NAND2 port map( A => n6745, B => n6746, Z => n6552);
   U6727 : GTECH_NAND2 port map( A => n6747, B => n6748, Z => n6746);
   U6728 : GTECH_NAND2 port map( A => n293, B => n6749, Z => n6747);
   U6729 : GTECH_NAND2 port map( A => n1291, B => n6750, Z => n6745);
   U6730 : GTECH_NAND2 port map( A => n6751, B => n6752, Z => n6674);
   U6731 : GTECH_NAND2 port map( A => n1173, B => n6560, Z => n6752);
   U6732 : GTECH_NAND2 port map( A => n145, B => n6561, Z => n6751);
   U6733 : GTECH_NAND2 port map( A => B(2), B => A(9), Z => n6561);
   U6734 : GTECH_NAND2 port map( A => n6753, B => n6754, Z => n6560);
   U6735 : GTECH_NAND2 port map( A => n6755, B => n6756, Z => n6754);
   U6736 : GTECH_NAND2 port map( A => n6757, B => n6758, Z => n6755);
   U6737 : GTECH_NAND2 port map( A => n1754, B => n216, Z => n6753);
   U6738 : GTECH_NAND2 port map( A => n6759, B => n6760, Z => n6671);
   U6739 : GTECH_NAND2 port map( A => n1719, B => n6568, Z => n6760);
   U6740 : GTECH_NAND2 port map( A => n71, B => n6570, Z => n6759);
   U6741 : GTECH_NAND2 port map( A => A(10), B => B(1), Z => n6570);
   U6742 : GTECH_NAND2 port map( A => n6761, B => n6762, Z => n6568);
   U6743 : GTECH_NAND2 port map( A => n6763, B => n6667, Z => n6762);
   U6744 : GTECH_NAND2 port map( A => n6764, B => n6765, Z => n6667);
   U6745 : GTECH_NAND2 port map( A => n6766, B => n6659, Z => n6765);
   U6746 : GTECH_NAND2 port map( A => n6767, B => n6768, Z => n6659);
   U6747 : GTECH_NAND2 port map( A => n6769, B => n6651, Z => n6768);
   U6748 : GTECH_NAND2 port map( A => n6770, B => n6771, Z => n6651);
   U6749 : GTECH_NAND2 port map( A => n6772, B => n6643, Z => n6771);
   U6750 : GTECH_NAND2 port map( A => n6773, B => n6774, Z => n6643);
   U6751 : GTECH_NAND2 port map( A => n6775, B => n6635, Z => n6774);
   U6752 : GTECH_NAND2 port map( A => n6776, B => n6777, Z => n6635);
   U6753 : GTECH_NAND2 port map( A => n6778, B => n6627, Z => n6777);
   U6754 : GTECH_NAND2 port map( A => n6779, B => n6780, Z => n6627);
   U6755 : GTECH_NAND2 port map( A => n6781, B => n6619, Z => n6780);
   U6756 : GTECH_NAND2 port map( A => n6782, B => n6783, Z => n6619);
   U6757 : GTECH_NAND2 port map( A => n1618, B => n6784, Z => n6783);
   U6758 : GTECH_NAND2 port map( A => n1687, B => n1715, Z => n6784);
   U6759 : GTECH_NAND2 port map( A => n6785, B => n6786, Z => n6612);
   U6760 : GTECH_NOR2 port map( A => n1649, B => n1750, Z => n6785);
   U6761 : GTECH_NAND2 port map( A => n6611, B => n6607, Z => n6782);
   U6762 : GTECH_NAND2 port map( A => n1688, B => n6787, Z => n6607);
   U6763 : GTECH_NAND2 port map( A => n6788, B => n6789, Z => n6787);
   U6764 : GTECH_NOR2 port map( A => n6789, B => n6788, Z => n6790);
   U6765 : GTECH_NAND2 port map( A => B(3), B => A(0), Z => n6789);
   U6766 : GTECH_NOR2 port map( A => n1748, B => n1716, Z => n6611);
   U6767 : GTECH_NAND2 port map( A => n1629, B => n6620, Z => n6781);
   U6768 : GTECH_NAND2 port map( A => n1720, B => n6616, Z => n6779);
   U6769 : GTECH_NAND2 port map( A => n6791, B => n6792, Z => n6616);
   U6770 : GTECH_NAND2 port map( A => n6793, B => n1630, Z => n6792);
   U6771 : GTECH_NAND2 port map( A => n6794, B => n1691, Z => n6791);
   U6772 : GTECH_NAND2 port map( A => n6795, B => n6796, Z => n6794);
   U6773 : GTECH_NAND2 port map( A => n1633, B => n1743, Z => n6796);
   U6774 : GTECH_NAND2 port map( A => n6797, B => n6798, Z => n6795);
   U6775 : GTECH_NAND2 port map( A => A(3), B => B(1), Z => n6620);
   U6776 : GTECH_NAND2 port map( A => n6624, B => n6628, Z => n6778);
   U6777 : GTECH_NAND2 port map( A => n1721, B => n467, Z => n6776);
   U6778 : GTECH_NAND2 port map( A => n6799, B => n6800, Z => n6624);
   U6779 : GTECH_NAND2 port map( A => n6801, B => n1631, Z => n6800);
   U6780 : GTECH_NAND2 port map( A => n6802, B => n470, Z => n6799);
   U6781 : GTECH_NAND2 port map( A => n6803, B => n6804, Z => n6802);
   U6782 : GTECH_NAND2 port map( A => n1755, B => n6805, Z => n6804);
   U6783 : GTECH_NAND2 port map( A => n1632, B => n6806, Z => n6803);
   U6784 : GTECH_NAND2 port map( A => A(4), B => B(1), Z => n6628);
   U6785 : GTECH_NAND2 port map( A => n130, B => n6636, Z => n6775);
   U6786 : GTECH_NAND2 port map( A => n1422, B => n6632, Z => n6773);
   U6787 : GTECH_NAND2 port map( A => n6807, B => n6808, Z => n6632);
   U6788 : GTECH_NAND2 port map( A => n6809, B => n468, Z => n6808);
   U6789 : GTECH_NAND2 port map( A => n6810, B => n206, Z => n6807);
   U6790 : GTECH_NAND2 port map( A => n6811, B => n6812, Z => n6810);
   U6791 : GTECH_NAND2 port map( A => n1756, B => n6813, Z => n6812);
   U6792 : GTECH_NAND2 port map( A => n469, B => n6814, Z => n6811);
   U6793 : GTECH_NAND2 port map( A => A(5), B => B(1), Z => n6636);
   U6794 : GTECH_NAND2 port map( A => n6640, B => n6644, Z => n6772);
   U6795 : GTECH_NAND2 port map( A => n1722, B => n131, Z => n6770);
   U6796 : GTECH_NAND2 port map( A => n6815, B => n6816, Z => n6640);
   U6797 : GTECH_NAND2 port map( A => n6817, B => n132, Z => n6816);
   U6798 : GTECH_NAND2 port map( A => n6818, B => n207, Z => n6815);
   U6799 : GTECH_NAND2 port map( A => n6819, B => n6820, Z => n6818);
   U6800 : GTECH_NAND2 port map( A => n1423, B => n6821, Z => n6820);
   U6801 : GTECH_NAND2 port map( A => n133, B => n6822, Z => n6819);
   U6802 : GTECH_NAND2 port map( A => A(6), B => B(1), Z => n6644);
   U6803 : GTECH_NAND2 port map( A => n134, B => n6652, Z => n6769);
   U6804 : GTECH_NAND2 port map( A => n1290, B => n6648, Z => n6767);
   U6805 : GTECH_NAND2 port map( A => n6823, B => n6824, Z => n6648);
   U6806 : GTECH_NAND2 port map( A => n6825, B => n135, Z => n6824);
   U6807 : GTECH_NAND2 port map( A => n6826, B => n210, Z => n6823);
   U6808 : GTECH_NAND2 port map( A => n6827, B => n6828, Z => n6826);
   U6809 : GTECH_NAND2 port map( A => n1757, B => n6829, Z => n6828);
   U6810 : GTECH_NAND2 port map( A => n136, B => n6830, Z => n6827);
   U6811 : GTECH_NAND2 port map( A => A(7), B => B(1), Z => n6652);
   U6812 : GTECH_NAND2 port map( A => n6656, B => n6660, Z => n6766);
   U6813 : GTECH_NAND2 port map( A => n1723, B => n137, Z => n6764);
   U6814 : GTECH_NAND2 port map( A => n6831, B => n6832, Z => n6656);
   U6815 : GTECH_NAND2 port map( A => n6833, B => n138, Z => n6832);
   U6816 : GTECH_NAND2 port map( A => n6834, B => n213, Z => n6831);
   U6817 : GTECH_NAND2 port map( A => n6835, B => n6836, Z => n6834);
   U6818 : GTECH_NAND2 port map( A => n1292, B => n6837, Z => n6836);
   U6819 : GTECH_NAND2 port map( A => n139, B => n6838, Z => n6835);
   U6820 : GTECH_NAND2 port map( A => A(8), B => B(1), Z => n6660);
   U6821 : GTECH_NAND2 port map( A => n140, B => n6668, Z => n6763);
   U6822 : GTECH_NAND2 port map( A => n1174, B => n6664, Z => n6761);
   U6823 : GTECH_NAND2 port map( A => n6839, B => n6840, Z => n6664);
   U6824 : GTECH_NAND2 port map( A => n6757, B => n141, Z => n6840);
   U6825 : GTECH_NAND2 port map( A => n6841, B => n216, Z => n6839);
   U6826 : GTECH_NAND2 port map( A => n6842, B => n6843, Z => n6757);
   U6827 : GTECH_NAND2 port map( A => n6750, B => n217, Z => n6843);
   U6828 : GTECH_NAND2 port map( A => n6844, B => n293, Z => n6842);
   U6829 : GTECH_NAND2 port map( A => n6845, B => n6846, Z => n6750);
   U6830 : GTECH_NAND2 port map( A => n6741, B => n294, Z => n6846);
   U6831 : GTECH_NAND2 port map( A => n6847, B => n366, Z => n6845);
   U6832 : GTECH_NAND2 port map( A => n6848, B => n6849, Z => n6741);
   U6833 : GTECH_NAND2 port map( A => n6734, B => n367, Z => n6849);
   U6834 : GTECH_NAND2 port map( A => n6850, B => n1624, Z => n6848);
   U6835 : GTECH_NAND2 port map( A => n6851, B => n6852, Z => n6734);
   U6836 : GTECH_NAND2 port map( A => n6725, B => n1636, Z => n6852);
   U6837 : GTECH_NAND2 port map( A => n6853, B => n1625, Z => n6851);
   U6838 : GTECH_NAND2 port map( A => n6854, B => n6855, Z => n6725);
   U6839 : GTECH_NAND2 port map( A => n6718, B => n1634, Z => n6855);
   U6840 : GTECH_NAND2 port map( A => n6856, B => n1626, Z => n6854);
   U6841 : GTECH_NAND2 port map( A => n6857, B => n6858, Z => n6718);
   U6842 : GTECH_NAND2 port map( A => n6710, B => n1627, Z => n6858);
   U6843 : GTECH_NAND2 port map( A => n6859, B => n1689, Z => n6857);
   U6844 : GTECH_NAND2 port map( A => n1690, B => n6860, Z => n6710);
   U6845 : GTECH_NAND2 port map( A => n6703, B => n6861, Z => n6860);
   U6846 : GTECH_NOR2 port map( A => n6861, B => n6703, Z => n6862);
   U6847 : GTECH_NOR2 port map( A => n1913, B => n1714, Z => n6703);
   U6848 : GTECH_NAND2 port map( A => B(10), B => A(0), Z => n6861);
   U6849 : GTECH_NAND2 port map( A => n6863, B => n6864, Z => n6859);
   U6850 : GTECH_NAND2 port map( A => n1628, B => n1742, Z => n6864);
   U6851 : GTECH_NAND2 port map( A => n6709, B => n6865, Z => n6863);
   U6852 : GTECH_NAND2 port map( A => n6866, B => n6867, Z => n6865);
   U6853 : GTECH_NOR2 port map( A => n1649, B => n1913, Z => n6866);
   U6854 : GTECH_NOR2 port map( A => n1862, B => n1748, Z => n6709);
   U6855 : GTECH_NAND2 port map( A => n6868, B => n6869, Z => n6856);
   U6856 : GTECH_NAND2 port map( A => n1778, B => n6716, Z => n6869);
   U6857 : GTECH_NAND2 port map( A => n1635, B => n6717, Z => n6868);
   U6858 : GTECH_NAND2 port map( A => B(7), B => A(3), Z => n6717);
   U6859 : GTECH_NAND2 port map( A => n6870, B => n6871, Z => n6716);
   U6860 : GTECH_NAND2 port map( A => n1641, B => n6872, Z => n6871);
   U6861 : GTECH_NAND2 port map( A => n1693, B => n1744, Z => n6872);
   U6862 : GTECH_NAND2 port map( A => n6873, B => n6874, Z => n6870);
   U6863 : GTECH_NAND2 port map( A => n6875, B => n6876, Z => n6853);
   U6864 : GTECH_NAND2 port map( A => n1810, B => n6724, Z => n6876);
   U6865 : GTECH_NAND2 port map( A => n1637, B => n6726, Z => n6875);
   U6866 : GTECH_NAND2 port map( A => B(6), B => A(4), Z => n6726);
   U6867 : GTECH_NAND2 port map( A => n6877, B => n6878, Z => n6724);
   U6868 : GTECH_NAND2 port map( A => n6879, B => n6880, Z => n6878);
   U6869 : GTECH_NAND2 port map( A => n1639, B => n6881, Z => n6879);
   U6870 : GTECH_NAND2 port map( A => n1779, B => n6882, Z => n6877);
   U6871 : GTECH_NAND2 port map( A => n6883, B => n6884, Z => n6850);
   U6872 : GTECH_NAND2 port map( A => n460, B => n6732, Z => n6884);
   U6873 : GTECH_NAND2 port map( A => n368, B => n6733, Z => n6883);
   U6874 : GTECH_NAND2 port map( A => B(5), B => A(5), Z => n6733);
   U6875 : GTECH_NAND2 port map( A => n6885, B => n6886, Z => n6732);
   U6876 : GTECH_NAND2 port map( A => n6887, B => n6888, Z => n6886);
   U6877 : GTECH_NAND2 port map( A => n6889, B => n6890, Z => n6887);
   U6878 : GTECH_NAND2 port map( A => n461, B => n1638, Z => n6885);
   U6879 : GTECH_NAND2 port map( A => n6891, B => n6892, Z => n6847);
   U6880 : GTECH_NAND2 port map( A => n1817, B => n6740, Z => n6892);
   U6881 : GTECH_NAND2 port map( A => n295, B => n6742, Z => n6891);
   U6882 : GTECH_NAND2 port map( A => B(4), B => A(6), Z => n6742);
   U6883 : GTECH_NAND2 port map( A => n6893, B => n6894, Z => n6740);
   U6884 : GTECH_NAND2 port map( A => n6895, B => n6896, Z => n6894);
   U6885 : GTECH_NAND2 port map( A => n363, B => n6897, Z => n6895);
   U6886 : GTECH_NAND2 port map( A => n1424, B => n6898, Z => n6893);
   U6887 : GTECH_NAND2 port map( A => n6899, B => n6900, Z => n6844);
   U6888 : GTECH_NAND2 port map( A => n1291, B => n6748, Z => n6900);
   U6889 : GTECH_NAND2 port map( A => n218, B => n6749, Z => n6899);
   U6890 : GTECH_NAND2 port map( A => B(3), B => A(7), Z => n6749);
   U6891 : GTECH_NAND2 port map( A => n6901, B => n6902, Z => n6748);
   U6892 : GTECH_NAND2 port map( A => n6903, B => n6904, Z => n6902);
   U6893 : GTECH_NAND2 port map( A => n6905, B => n6906, Z => n6903);
   U6894 : GTECH_NAND2 port map( A => n1787, B => n290, Z => n6901);
   U6895 : GTECH_NAND2 port map( A => n6907, B => n6908, Z => n6841);
   U6896 : GTECH_NAND2 port map( A => n1754, B => n6756, Z => n6908);
   U6897 : GTECH_NAND2 port map( A => n142, B => n6758, Z => n6907);
   U6898 : GTECH_NAND2 port map( A => B(2), B => A(8), Z => n6758);
   U6899 : GTECH_NAND2 port map( A => n6909, B => n6910, Z => n6756);
   U6900 : GTECH_NAND2 port map( A => n6911, B => n6837, Z => n6910);
   U6901 : GTECH_NAND2 port map( A => n6912, B => n6913, Z => n6837);
   U6902 : GTECH_NAND2 port map( A => n6914, B => n6829, Z => n6913);
   U6903 : GTECH_NAND2 port map( A => n6915, B => n6916, Z => n6829);
   U6904 : GTECH_NAND2 port map( A => n6917, B => n6821, Z => n6916);
   U6905 : GTECH_NAND2 port map( A => n6918, B => n6919, Z => n6821);
   U6906 : GTECH_NAND2 port map( A => n6920, B => n6813, Z => n6919);
   U6907 : GTECH_NAND2 port map( A => n6921, B => n6922, Z => n6813);
   U6908 : GTECH_NAND2 port map( A => n6923, B => n6805, Z => n6922);
   U6909 : GTECH_NAND2 port map( A => n6924, B => n6925, Z => n6805);
   U6910 : GTECH_NAND2 port map( A => n1633, B => n6926, Z => n6925);
   U6911 : GTECH_NAND2 port map( A => n1691, B => n1743, Z => n6926);
   U6912 : GTECH_NAND2 port map( A => n6927, B => n6788, Z => n6798);
   U6913 : GTECH_NOR2 port map( A => n1750, B => n1714, Z => n6788);
   U6914 : GTECH_NOR2 port map( A => n1649, B => n1782, Z => n6927);
   U6915 : GTECH_NAND2 port map( A => n6797, B => n6793, Z => n6924);
   U6916 : GTECH_NAND2 port map( A => n1692, B => n6928, Z => n6793);
   U6917 : GTECH_NAND2 port map( A => n6929, B => n6930, Z => n6928);
   U6918 : GTECH_NOR2 port map( A => n6930, B => n6929, Z => n6931);
   U6919 : GTECH_NAND2 port map( A => B(4), B => A(0), Z => n6930);
   U6920 : GTECH_NOR2 port map( A => n1750, B => n1748, Z => n6797);
   U6921 : GTECH_NAND2 port map( A => n470, B => n6806, Z => n6923);
   U6922 : GTECH_NAND2 port map( A => n1755, B => n6801, Z => n6921);
   U6923 : GTECH_NAND2 port map( A => n6932, B => n6933, Z => n6801);
   U6924 : GTECH_NAND2 port map( A => n6934, B => n1642, Z => n6933);
   U6925 : GTECH_NAND2 port map( A => n6935, B => n473, Z => n6932);
   U6926 : GTECH_NAND2 port map( A => n6936, B => n6937, Z => n6935);
   U6927 : GTECH_NAND2 port map( A => n1643, B => n1745, Z => n6937);
   U6928 : GTECH_NAND2 port map( A => n6938, B => n6939, Z => n6936);
   U6929 : GTECH_NAND2 port map( A => B(2), B => A(3), Z => n6806);
   U6930 : GTECH_NAND2 port map( A => n6809, B => n6814, Z => n6920);
   U6931 : GTECH_NAND2 port map( A => n1756, B => n206, Z => n6918);
   U6932 : GTECH_NAND2 port map( A => n6940, B => n6941, Z => n6809);
   U6933 : GTECH_NAND2 port map( A => n6942, B => n471, Z => n6941);
   U6934 : GTECH_NAND2 port map( A => n6943, B => n282, Z => n6940);
   U6935 : GTECH_NAND2 port map( A => n6944, B => n6945, Z => n6943);
   U6936 : GTECH_NAND2 port map( A => n1780, B => n6946, Z => n6945);
   U6937 : GTECH_NAND2 port map( A => n472, B => n6947, Z => n6944);
   U6938 : GTECH_NAND2 port map( A => B(2), B => A(4), Z => n6814);
   U6939 : GTECH_NAND2 port map( A => n207, B => n6822, Z => n6917);
   U6940 : GTECH_NAND2 port map( A => n1423, B => n6817, Z => n6915);
   U6941 : GTECH_NAND2 port map( A => n6948, B => n6949, Z => n6817);
   U6942 : GTECH_NAND2 port map( A => n6950, B => n208, Z => n6949);
   U6943 : GTECH_NAND2 port map( A => n6951, B => n284, Z => n6948);
   U6944 : GTECH_NAND2 port map( A => n6952, B => n6953, Z => n6951);
   U6945 : GTECH_NAND2 port map( A => n1788, B => n6954, Z => n6953);
   U6946 : GTECH_NAND2 port map( A => n209, B => n6955, Z => n6952);
   U6947 : GTECH_NAND2 port map( A => B(2), B => A(5), Z => n6822);
   U6948 : GTECH_NAND2 port map( A => n6825, B => n6830, Z => n6914);
   U6949 : GTECH_NAND2 port map( A => n1757, B => n210, Z => n6912);
   U6950 : GTECH_NAND2 port map( A => n6956, B => n6957, Z => n6825);
   U6951 : GTECH_NAND2 port map( A => n6958, B => n211, Z => n6957);
   U6952 : GTECH_NAND2 port map( A => n6959, B => n287, Z => n6956);
   U6953 : GTECH_NAND2 port map( A => n6960, B => n6961, Z => n6959);
   U6954 : GTECH_NAND2 port map( A => n1425, B => n6962, Z => n6961);
   U6955 : GTECH_NAND2 port map( A => n212, B => n6963, Z => n6960);
   U6956 : GTECH_NAND2 port map( A => B(2), B => A(6), Z => n6830);
   U6957 : GTECH_NAND2 port map( A => n213, B => n6838, Z => n6911);
   U6958 : GTECH_NAND2 port map( A => n1292, B => n6833, Z => n6909);
   U6959 : GTECH_NAND2 port map( A => n6964, B => n6965, Z => n6833);
   U6960 : GTECH_NAND2 port map( A => n6905, B => n214, Z => n6965);
   U6961 : GTECH_NAND2 port map( A => n6966, B => n290, Z => n6964);
   U6962 : GTECH_NAND2 port map( A => n6967, B => n6968, Z => n6905);
   U6963 : GTECH_NAND2 port map( A => n6898, B => n291, Z => n6968);
   U6964 : GTECH_NAND2 port map( A => n6969, B => n363, Z => n6967);
   U6965 : GTECH_NAND2 port map( A => n6970, B => n6971, Z => n6898);
   U6966 : GTECH_NAND2 port map( A => n6889, B => n364, Z => n6971);
   U6967 : GTECH_NAND2 port map( A => n6972, B => n1638, Z => n6970);
   U6968 : GTECH_NAND2 port map( A => n6973, B => n6974, Z => n6889);
   U6969 : GTECH_NAND2 port map( A => n6882, B => n1644, Z => n6974);
   U6970 : GTECH_NAND2 port map( A => n6975, B => n1639, Z => n6973);
   U6971 : GTECH_NAND2 port map( A => n6976, B => n6977, Z => n6882);
   U6972 : GTECH_NAND2 port map( A => n6874, B => n1640, Z => n6977);
   U6973 : GTECH_NAND2 port map( A => n6978, B => n1693, Z => n6976);
   U6974 : GTECH_NAND2 port map( A => n1694, B => n6979, Z => n6874);
   U6975 : GTECH_NAND2 port map( A => n6867, B => n6980, Z => n6979);
   U6976 : GTECH_NOR2 port map( A => n6980, B => n6867, Z => n6981);
   U6977 : GTECH_NOR2 port map( A => n1862, B => n1714, Z => n6867);
   U6978 : GTECH_NAND2 port map( A => B(9), B => A(0), Z => n6980);
   U6979 : GTECH_NAND2 port map( A => n6982, B => n6983, Z => n6978);
   U6980 : GTECH_NAND2 port map( A => n1641, B => n1744, Z => n6983);
   U6981 : GTECH_NAND2 port map( A => n6873, B => n6984, Z => n6982);
   U6982 : GTECH_NAND2 port map( A => n6985, B => n6986, Z => n6984);
   U6983 : GTECH_NOR2 port map( A => n1649, B => n1862, Z => n6985);
   U6984 : GTECH_NOR2 port map( A => n1917, B => n1748, Z => n6873);
   U6985 : GTECH_NAND2 port map( A => n6987, B => n6988, Z => n6975);
   U6986 : GTECH_NAND2 port map( A => n1779, B => n6880, Z => n6988);
   U6987 : GTECH_NAND2 port map( A => n1645, B => n6881, Z => n6987);
   U6988 : GTECH_NAND2 port map( A => B(6), B => A(3), Z => n6881);
   U6989 : GTECH_NAND2 port map( A => n6989, B => n6990, Z => n6880);
   U6990 : GTECH_NAND2 port map( A => n1648, B => n6991, Z => n6990);
   U6991 : GTECH_NAND2 port map( A => n1695, B => n1746, Z => n6991);
   U6992 : GTECH_NAND2 port map( A => n6992, B => n6993, Z => n6989);
   U6993 : GTECH_NAND2 port map( A => n6994, B => n6995, Z => n6972);
   U6994 : GTECH_NAND2 port map( A => n461, B => n6888, Z => n6995);
   U6995 : GTECH_NAND2 port map( A => n365, B => n6890, Z => n6994);
   U6996 : GTECH_NAND2 port map( A => B(5), B => A(4), Z => n6890);
   U6997 : GTECH_NAND2 port map( A => n6996, B => n6997, Z => n6888);
   U6998 : GTECH_NAND2 port map( A => n6998, B => n6999, Z => n6997);
   U6999 : GTECH_NAND2 port map( A => n1646, B => n7000, Z => n6998);
   U7000 : GTECH_NAND2 port map( A => n475, B => n7001, Z => n6996);
   U7001 : GTECH_NAND2 port map( A => n7002, B => n7003, Z => n6969);
   U7002 : GTECH_NAND2 port map( A => n1424, B => n6896, Z => n7003);
   U7003 : GTECH_NAND2 port map( A => n292, B => n6897, Z => n7002);
   U7004 : GTECH_NAND2 port map( A => B(4), B => A(5), Z => n6897);
   U7005 : GTECH_NAND2 port map( A => n7004, B => n7005, Z => n6896);
   U7006 : GTECH_NAND2 port map( A => n7006, B => n7007, Z => n7005);
   U7007 : GTECH_NAND2 port map( A => n7008, B => n7009, Z => n7006);
   U7008 : GTECH_NAND2 port map( A => n1811, B => n360, Z => n7004);
   U7009 : GTECH_NAND2 port map( A => n7010, B => n7011, Z => n6966);
   U7010 : GTECH_NAND2 port map( A => n1787, B => n6904, Z => n7011);
   U7011 : GTECH_NAND2 port map( A => n215, B => n6906, Z => n7010);
   U7012 : GTECH_NAND2 port map( A => B(3), B => A(6), Z => n6906);
   U7013 : GTECH_NAND2 port map( A => n7012, B => n7013, Z => n6904);
   U7014 : GTECH_NAND2 port map( A => n7014, B => n6962, Z => n7013);
   U7015 : GTECH_NAND2 port map( A => n7015, B => n7016, Z => n6962);
   U7016 : GTECH_NAND2 port map( A => n7017, B => n6954, Z => n7016);
   U7017 : GTECH_NAND2 port map( A => n7018, B => n7019, Z => n6954);
   U7018 : GTECH_NAND2 port map( A => n7020, B => n6946, Z => n7019);
   U7019 : GTECH_NAND2 port map( A => n7021, B => n7022, Z => n6946);
   U7020 : GTECH_NAND2 port map( A => n1643, B => n7023, Z => n7022);
   U7021 : GTECH_NAND2 port map( A => n473, B => n1745, Z => n7023);
   U7022 : GTECH_NAND2 port map( A => n7024, B => n6929, Z => n6939);
   U7023 : GTECH_NOR2 port map( A => n1782, B => n1714, Z => n6929);
   U7024 : GTECH_NOR2 port map( A => n1649, B => n1812, Z => n7024);
   U7025 : GTECH_NAND2 port map( A => n6938, B => n6934, Z => n7021);
   U7026 : GTECH_NAND2 port map( A => n474, B => n7025, Z => n6934);
   U7027 : GTECH_NAND2 port map( A => n7026, B => n7027, Z => n7025);
   U7028 : GTECH_NOR2 port map( A => n7027, B => n7026, Z => n7028);
   U7029 : GTECH_NAND2 port map( A => B(5), B => A(0), Z => n7027);
   U7030 : GTECH_NOR2 port map( A => n1782, B => n1748, Z => n6938);
   U7031 : GTECH_NAND2 port map( A => n282, B => n6947, Z => n7020);
   U7032 : GTECH_NAND2 port map( A => n1780, B => n6942, Z => n7018);
   U7033 : GTECH_NAND2 port map( A => n7029, B => n7030, Z => n6942);
   U7034 : GTECH_NAND2 port map( A => n7031, B => n283, Z => n7030);
   U7035 : GTECH_NAND2 port map( A => n7032, B => n435, Z => n7029);
   U7036 : GTECH_NAND2 port map( A => n7033, B => n7034, Z => n7032);
   U7037 : GTECH_NAND2 port map( A => n359, B => n1747, Z => n7034);
   U7038 : GTECH_NAND2 port map( A => n7035, B => n7036, Z => n7033);
   U7039 : GTECH_NAND2 port map( A => B(3), B => A(3), Z => n6947);
   U7040 : GTECH_NAND2 port map( A => n6950, B => n6955, Z => n7017);
   U7041 : GTECH_NAND2 port map( A => n1788, B => n284, Z => n7015);
   U7042 : GTECH_NAND2 port map( A => n7037, B => n7038, Z => n6950);
   U7043 : GTECH_NAND2 port map( A => n7039, B => n285, Z => n7038);
   U7044 : GTECH_NAND2 port map( A => n7040, B => n432, Z => n7037);
   U7045 : GTECH_NAND2 port map( A => n7041, B => n7042, Z => n7040);
   U7046 : GTECH_NAND2 port map( A => n1781, B => n7043, Z => n7042);
   U7047 : GTECH_NAND2 port map( A => n286, B => n7044, Z => n7041);
   U7048 : GTECH_NAND2 port map( A => B(3), B => A(4), Z => n6955);
   U7049 : GTECH_NAND2 port map( A => n287, B => n6963, Z => n7014);
   U7050 : GTECH_NAND2 port map( A => n1425, B => n6958, Z => n7012);
   U7051 : GTECH_NAND2 port map( A => n7045, B => n7046, Z => n6958);
   U7052 : GTECH_NAND2 port map( A => n7008, B => n288, Z => n7046);
   U7053 : GTECH_NAND2 port map( A => n7047, B => n360, Z => n7045);
   U7054 : GTECH_NAND2 port map( A => n7048, B => n7049, Z => n7008);
   U7055 : GTECH_NAND2 port map( A => n7001, B => n361, Z => n7049);
   U7056 : GTECH_NAND2 port map( A => n7050, B => n1646, Z => n7048);
   U7057 : GTECH_NAND2 port map( A => n7051, B => n7052, Z => n7001);
   U7058 : GTECH_NAND2 port map( A => n6993, B => n1647, Z => n7052);
   U7059 : GTECH_NAND2 port map( A => n7053, B => n1695, Z => n7051);
   U7060 : GTECH_NAND2 port map( A => n1696, B => n7054, Z => n6993);
   U7061 : GTECH_NAND2 port map( A => n6986, B => n7055, Z => n7054);
   U7062 : GTECH_NOR2 port map( A => n7055, B => n6986, Z => n7056);
   U7063 : GTECH_NOR2 port map( A => n1917, B => n1714, Z => n6986);
   U7064 : GTECH_NAND2 port map( A => B(8), B => A(0), Z => n7055);
   U7065 : GTECH_NAND2 port map( A => n7057, B => n7058, Z => n7053);
   U7066 : GTECH_NAND2 port map( A => n1648, B => n1746, Z => n7058);
   U7067 : GTECH_NAND2 port map( A => n6992, B => n7059, Z => n7057);
   U7068 : GTECH_NAND2 port map( A => n7060, B => n7061, Z => n7059);
   U7069 : GTECH_NOR2 port map( A => n1649, B => n1917, Z => n7060);
   U7070 : GTECH_NOR2 port map( A => n1839, B => n1748, Z => n6992);
   U7071 : GTECH_NAND2 port map( A => n7062, B => n7063, Z => n7050);
   U7072 : GTECH_NAND2 port map( A => n475, B => n6999, Z => n7063);
   U7073 : GTECH_NAND2 port map( A => n362, B => n7000, Z => n7062);
   U7074 : GTECH_NAND2 port map( A => B(5), B => A(3), Z => n7000);
   U7075 : GTECH_NAND2 port map( A => n7064, B => n7065, Z => n6999);
   U7076 : GTECH_NAND2 port map( A => n434, B => n7066, Z => n7065);
   U7077 : GTECH_NAND2 port map( A => n1697, B => n437, Z => n7066);
   U7078 : GTECH_NAND2 port map( A => n7067, B => n7068, Z => n7064);
   U7079 : GTECH_NAND2 port map( A => n7069, B => n7070, Z => n7047);
   U7080 : GTECH_NAND2 port map( A => n1811, B => n7007, Z => n7070);
   U7081 : GTECH_NAND2 port map( A => n289, B => n7009, Z => n7069);
   U7082 : GTECH_NAND2 port map( A => B(4), B => A(4), Z => n7009);
   U7083 : GTECH_NAND2 port map( A => n7071, B => n7072, Z => n7007);
   U7084 : GTECH_NAND2 port map( A => n7073, B => n7043, Z => n7072);
   U7085 : GTECH_NAND2 port map( A => n7074, B => n7075, Z => n7043);
   U7086 : GTECH_NAND2 port map( A => n359, B => n7076, Z => n7075);
   U7087 : GTECH_NAND2 port map( A => n435, B => n1747, Z => n7076);
   U7088 : GTECH_NAND2 port map( A => n7077, B => n7026, Z => n7036);
   U7089 : GTECH_NOR2 port map( A => n1812, B => n1714, Z => n7026);
   U7090 : GTECH_NOR2 port map( A => n1649, B => n438, Z => n7077);
   U7091 : GTECH_NAND2 port map( A => n7035, B => n7031, Z => n7074);
   U7092 : GTECH_NAND2 port map( A => n436, B => n7078, Z => n7031);
   U7093 : GTECH_NAND2 port map( A => n7079, B => n7080, Z => n7078);
   U7094 : GTECH_NOR2 port map( A => n7080, B => n7079, Z => n7081);
   U7095 : GTECH_NAND2 port map( A => B(6), B => A(0), Z => n7080);
   U7096 : GTECH_NOR2 port map( A => n1812, B => n1748, Z => n7035);
   U7097 : GTECH_NAND2 port map( A => n432, B => n7044, Z => n7073);
   U7098 : GTECH_NAND2 port map( A => n1781, B => n7039, Z => n7071);
   U7099 : GTECH_NAND2 port map( A => n7082, B => n7083, Z => n7039);
   U7100 : GTECH_NAND2 port map( A => n7068, B => n433, Z => n7083);
   U7101 : GTECH_NAND2 port map( A => n7084, B => n1697, Z => n7082);
   U7102 : GTECH_NAND2 port map( A => n1698, B => n7085, Z => n7068);
   U7103 : GTECH_NAND2 port map( A => n7061, B => n7086, Z => n7085);
   U7104 : GTECH_NOR2 port map( A => n7086, B => n7061, Z => n7087);
   U7105 : GTECH_NOR2 port map( A => n1839, B => n1714, Z => n7061);
   U7106 : GTECH_NAND2 port map( A => B(7), B => A(0), Z => n7086);
   U7107 : GTECH_NAND2 port map( A => n7088, B => n7089, Z => n7084);
   U7108 : GTECH_NAND2 port map( A => n434, B => n437, Z => n7089);
   U7109 : GTECH_NAND2 port map( A => n7067, B => n7090, Z => n7088);
   U7110 : GTECH_NAND2 port map( A => n7091, B => n7079, Z => n7090);
   U7111 : GTECH_NOR2 port map( A => n438, B => n1714, Z => n7079);
   U7112 : GTECH_NOR2 port map( A => n1649, B => n1839, Z => n7091);
   U7113 : GTECH_NOR2 port map( A => n438, B => n1748, Z => n7067);
   U7114 : GTECH_NAND2 port map( A => B(4), B => A(3), Z => n7044);
   U7115 : GTECH_NAND2 port map( A => B(3), B => A(5), Z => n6963);
   U7116 : GTECH_NAND2 port map( A => B(2), B => A(7), Z => n6838);
   U7117 : GTECH_NAND2 port map( A => A(9), B => B(1), Z => n6668);
   U7118 : GTECH_NAND2 port map( A => n7092, B => n7093, Z => PRODUCT(2));
   U7119 : GTECH_NAND2 port map( A => n6604, B => n1703, Z => n7093);
   U7120 : GTECH_NAND2 port map( A => n7094, B => n1701, Z => n7092);
   U7121 : GTECH_NAND2 port map( A => n1702, B => n7095, Z => n6604);
   U7122 : GTECH_NAND2 port map( A => n6786, B => n7096, Z => n7095);
   U7123 : GTECH_NOR2 port map( A => n7096, B => n6786, Z => n7097);
   U7124 : GTECH_NOR2 port map( A => n1716, B => n1714, Z => n6786);
   U7125 : GTECH_NAND2 port map( A => B(2), B => A(0), Z => n7096);
   U7126 : GTECH_NAND2 port map( A => n7098, B => n7099, Z => n7094);
   U7127 : GTECH_NAND2 port map( A => n1749, B => n1704, Z => n7099);
   U7128 : GTECH_NAND2 port map( A => n6603, B => n7100, Z => n7098);
   U7129 : GTECH_NAND2 port map( A => A(2), B => B(0), Z => n7100);
   U7130 : GTECH_NOR2 port map( A => n7101, B => n1925, Z => n6603);
   U7131 : GTECH_NAND2 port map( A => B(0), B => A(1), Z => n1925);
   U7132 : GTECH_NAND2 port map( A => A(0), B => B(1), Z => n7101);

end SYN_csa;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_zpu_core.all;

entity zpu_core_DW01_add_5 is

   port( A, B : in std_logic_vector (29 downto 0);  CI : in std_logic;  SUM : 
         out std_logic_vector (29 downto 0);  CO : out std_logic);

end zpu_core_DW01_add_5;

architecture SYN_rpl of zpu_core_DW01_add_5 is

   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   signal n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16
      , n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, 
      n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45
      , n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, 
      n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n73, n74
      , n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86, n87, n88, 
      n89, n90, n91, n92, n93, n94, n95, n96, n97, n98, n99, n100, n101, n102, 
      n103, n104, n105, n106, n107, n108, n109, n110, n111, n112, n113, n114, 
      n115, n116, n117, n118, n119, n120, n121, n122, n123, n124, n125, n126, 
      n127, n128, n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, 
      n139, n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150, 
      n151, n152, n153, n154, n155, n156, n157, n158, n159, n160, n161, n162, 
      n163, n164, n165, n166, n167, n168, n169, n170, n171, n172, n173, n174, 
      n175, n176 : std_logic;

begin
   
   U1 : GTECH_NOT port map( A => n60, Z => n1);
   U2 : GTECH_NOT port map( A => n63, Z => n2);
   U3 : GTECH_NOT port map( A => n162, Z => n3);
   U4 : GTECH_NOT port map( A => n57, Z => n4);
   U5 : GTECH_NOT port map( A => n156, Z => n5);
   U6 : GTECH_NOT port map( A => n153, Z => n6);
   U7 : GTECH_NOT port map( A => n149, Z => n7);
   U8 : GTECH_NOT port map( A => n146, Z => n8);
   U9 : GTECH_NOT port map( A => n142, Z => n9);
   U10 : GTECH_NOT port map( A => n139, Z => n10);
   U11 : GTECH_NOT port map( A => n135, Z => n11);
   U12 : GTECH_NOT port map( A => n132, Z => n12);
   U13 : GTECH_NOT port map( A => n122, Z => n13);
   U14 : GTECH_NOT port map( A => n119, Z => n14);
   U15 : GTECH_NOT port map( A => n115, Z => n15);
   U16 : GTECH_NOT port map( A => n112, Z => n16);
   U17 : GTECH_NOT port map( A => n108, Z => n17);
   U18 : GTECH_NOT port map( A => n105, Z => n18);
   U19 : GTECH_NOT port map( A => n101, Z => n19);
   U20 : GTECH_NOT port map( A => n98, Z => n20);
   U21 : GTECH_NOT port map( A => n94, Z => n21);
   U22 : GTECH_NOT port map( A => n91, Z => n22);
   U23 : GTECH_NOT port map( A => n90, Z => n23);
   U24 : GTECH_NOT port map( A => n67, Z => n24);
   U25 : GTECH_NOT port map( A => n66, Z => n25);
   U26 : GTECH_NOT port map( A => n165, Z => n26);
   U27 : GTECH_NOT port map( A => n71, Z => n27);
   U28 : GTECH_NOT port map( A => n78, Z => n28);
   U29 : GTECH_NOT port map( A => n77, Z => n29);
   U30 : GTECH_NOT port map( A => n171, Z => n30);
   U31 : GTECH_NOT port map( A => n83, Z => n31);
   U32 : GTECH_NOT port map( A => n125, Z => n32);
   U33 : GTECH_NOT port map( A => A(28), Z => n33);
   U34 : GTECH_NOT port map( A => A(27), Z => n34);
   U35 : GTECH_NOT port map( A => A(25), Z => n35);
   U36 : GTECH_NOT port map( A => A(23), Z => n36);
   U37 : GTECH_NOT port map( A => n126, Z => n37);
   U38 : GTECH_NOT port map( A => B(1), Z => n38);
   U39 : GTECH_NOT port map( A => B(2), Z => n39);
   U40 : GTECH_NOT port map( A => B(3), Z => n40);
   U41 : GTECH_NOT port map( A => B(4), Z => n41);
   U42 : GTECH_NOT port map( A => A(3), Z => n42);
   U43 : GTECH_NOT port map( A => A(5), Z => n43);
   U44 : GTECH_NOT port map( A => A(7), Z => n44);
   U45 : GTECH_NOT port map( A => A(9), Z => n45);
   U46 : GTECH_NOT port map( A => A(1), Z => n46);
   U47 : GTECH_NOT port map( A => A(2), Z => n47);
   U48 : GTECH_NOT port map( A => A(4), Z => n48);
   U49 : GTECH_NOT port map( A => A(13), Z => n49);
   U50 : GTECH_NOT port map( A => A(11), Z => n50);
   U51 : GTECH_NOT port map( A => A(17), Z => n51);
   U52 : GTECH_NOT port map( A => A(15), Z => n52);
   U53 : GTECH_NOT port map( A => A(19), Z => n53);
   U54 : GTECH_NOT port map( A => A(21), Z => n54);
   U55 : GTECH_NAND2 port map( A => n55, B => n56, Z => SUM(9));
   U56 : GTECH_NAND2 port map( A => A(9), B => n57, Z => n56);
   U57 : GTECH_NAND2 port map( A => n4, B => n45, Z => n55);
   U58 : GTECH_NAND2 port map( A => n1, B => n58, Z => SUM(8));
   U59 : GTECH_NAND2 port map( A => A(8), B => n59, Z => n58);
   U60 : GTECH_NOR2 port map( A => n59, B => A(8), Z => n60);
   U61 : GTECH_NAND2 port map( A => A(7), B => n2, Z => n59);
   U62 : GTECH_NAND2 port map( A => n61, B => n62, Z => SUM(7));
   U63 : GTECH_NAND2 port map( A => A(7), B => n63, Z => n62);
   U64 : GTECH_NAND2 port map( A => n2, B => n44, Z => n61);
   U65 : GTECH_NAND2 port map( A => n25, B => n64, Z => SUM(6));
   U66 : GTECH_NAND2 port map( A => A(6), B => n65, Z => n64);
   U67 : GTECH_NOR2 port map( A => n65, B => A(6), Z => n66);
   U68 : GTECH_NAND2 port map( A => A(5), B => n67, Z => n65);
   U69 : GTECH_NOR2 port map( A => n68, B => n69, Z => SUM(5));
   U70 : GTECH_NOR2 port map( A => A(5), B => n67, Z => n69);
   U71 : GTECH_NOR2 port map( A => n70, B => n27, Z => SUM(4));
   U72 : GTECH_NAND2 port map( A => n72, B => n73, Z => n71);
   U73 : GTECH_NOR2 port map( A => n72, B => n73, Z => n70);
   U74 : GTECH_NAND2 port map( A => n74, B => n75, Z => n73);
   U75 : GTECH_NAND2 port map( A => B(4), B => n48, Z => n75);
   U76 : GTECH_NAND2 port map( A => A(4), B => n41, Z => n74);
   U77 : GTECH_NOR2 port map( A => n76, B => n29, Z => SUM(3));
   U78 : GTECH_NAND2 port map( A => n78, B => n79, Z => n77);
   U79 : GTECH_NOR2 port map( A => n78, B => n79, Z => n76);
   U80 : GTECH_NAND2 port map( A => n80, B => n81, Z => n79);
   U81 : GTECH_NAND2 port map( A => B(3), B => n42, Z => n81);
   U82 : GTECH_NAND2 port map( A => A(3), B => n40, Z => n80);
   U83 : GTECH_NOR2 port map( A => n82, B => n31, Z => SUM(2));
   U84 : GTECH_NAND2 port map( A => n84, B => n85, Z => n83);
   U85 : GTECH_NOR2 port map( A => n84, B => n85, Z => n82);
   U86 : GTECH_NAND2 port map( A => n86, B => n87, Z => n85);
   U87 : GTECH_NAND2 port map( A => B(2), B => n47, Z => n87);
   U88 : GTECH_NAND2 port map( A => A(2), B => n39, Z => n86);
   U89 : GTECH_NAND2 port map( A => n23, B => n88, Z => SUM(29));
   U90 : GTECH_NAND2 port map( A => A(29), B => n89, Z => n88);
   U91 : GTECH_NOR2 port map( A => n89, B => A(29), Z => n90);
   U92 : GTECH_NAND2 port map( A => A(28), B => n91, Z => n89);
   U93 : GTECH_NAND2 port map( A => n92, B => n93, Z => SUM(28));
   U94 : GTECH_NAND2 port map( A => A(28), B => n22, Z => n93);
   U95 : GTECH_NAND2 port map( A => n91, B => n33, Z => n92);
   U96 : GTECH_NOR2 port map( A => n34, B => n94, Z => n91);
   U97 : GTECH_NAND2 port map( A => n95, B => n96, Z => SUM(27));
   U98 : GTECH_NAND2 port map( A => A(27), B => n94, Z => n96);
   U99 : GTECH_NAND2 port map( A => n21, B => n34, Z => n95);
   U100 : GTECH_NAND2 port map( A => n97, B => A(26), Z => n94);
   U101 : GTECH_NOR2 port map( A => n98, B => n35, Z => n97);
   U102 : GTECH_NAND2 port map( A => n19, B => n99, Z => SUM(26));
   U103 : GTECH_NAND2 port map( A => A(26), B => n100, Z => n99);
   U104 : GTECH_NOR2 port map( A => n100, B => A(26), Z => n101);
   U105 : GTECH_NAND2 port map( A => A(25), B => n20, Z => n100);
   U106 : GTECH_NAND2 port map( A => n102, B => n103, Z => SUM(25));
   U107 : GTECH_NAND2 port map( A => A(25), B => n98, Z => n103);
   U108 : GTECH_NAND2 port map( A => n20, B => n35, Z => n102);
   U109 : GTECH_NAND2 port map( A => n104, B => A(24), Z => n98);
   U110 : GTECH_NOR2 port map( A => n105, B => n36, Z => n104);
   U111 : GTECH_NAND2 port map( A => n17, B => n106, Z => SUM(24));
   U112 : GTECH_NAND2 port map( A => A(24), B => n107, Z => n106);
   U113 : GTECH_NOR2 port map( A => n107, B => A(24), Z => n108);
   U114 : GTECH_NAND2 port map( A => A(23), B => n18, Z => n107);
   U115 : GTECH_NAND2 port map( A => n109, B => n110, Z => SUM(23));
   U116 : GTECH_NAND2 port map( A => A(23), B => n105, Z => n110);
   U117 : GTECH_NAND2 port map( A => n18, B => n36, Z => n109);
   U118 : GTECH_NAND2 port map( A => n111, B => A(22), Z => n105);
   U119 : GTECH_NOR2 port map( A => n112, B => n54, Z => n111);
   U120 : GTECH_NAND2 port map( A => n15, B => n113, Z => SUM(22));
   U121 : GTECH_NAND2 port map( A => A(22), B => n114, Z => n113);
   U122 : GTECH_NOR2 port map( A => n114, B => A(22), Z => n115);
   U123 : GTECH_NAND2 port map( A => A(21), B => n16, Z => n114);
   U124 : GTECH_NAND2 port map( A => n116, B => n117, Z => SUM(21));
   U125 : GTECH_NAND2 port map( A => A(21), B => n112, Z => n117);
   U126 : GTECH_NAND2 port map( A => n16, B => n54, Z => n116);
   U127 : GTECH_NAND2 port map( A => n118, B => A(20), Z => n112);
   U128 : GTECH_NOR2 port map( A => n119, B => n53, Z => n118);
   U129 : GTECH_NAND2 port map( A => n13, B => n120, Z => SUM(20));
   U130 : GTECH_NAND2 port map( A => A(20), B => n121, Z => n120);
   U131 : GTECH_NOR2 port map( A => n121, B => A(20), Z => n122);
   U132 : GTECH_NAND2 port map( A => A(19), B => n14, Z => n121);
   U133 : GTECH_NOR2 port map( A => n123, B => n124, Z => SUM(1));
   U134 : GTECH_NOR2 port map( A => n125, B => n37, Z => n124);
   U135 : GTECH_NOR2 port map( A => n32, B => n126, Z => n123);
   U136 : GTECH_NAND2 port map( A => n127, B => n128, Z => n126);
   U137 : GTECH_NAND2 port map( A => B(1), B => n46, Z => n128);
   U138 : GTECH_NAND2 port map( A => A(1), B => n38, Z => n127);
   U139 : GTECH_NAND2 port map( A => n129, B => n130, Z => SUM(19));
   U140 : GTECH_NAND2 port map( A => A(19), B => n119, Z => n130);
   U141 : GTECH_NAND2 port map( A => n14, B => n53, Z => n129);
   U142 : GTECH_NAND2 port map( A => n131, B => A(18), Z => n119);
   U143 : GTECH_NOR2 port map( A => n132, B => n51, Z => n131);
   U144 : GTECH_NAND2 port map( A => n11, B => n133, Z => SUM(18));
   U145 : GTECH_NAND2 port map( A => A(18), B => n134, Z => n133);
   U146 : GTECH_NOR2 port map( A => n134, B => A(18), Z => n135);
   U147 : GTECH_NAND2 port map( A => A(17), B => n12, Z => n134);
   U148 : GTECH_NAND2 port map( A => n136, B => n137, Z => SUM(17));
   U149 : GTECH_NAND2 port map( A => A(17), B => n132, Z => n137);
   U150 : GTECH_NAND2 port map( A => n12, B => n51, Z => n136);
   U151 : GTECH_NAND2 port map( A => n138, B => A(16), Z => n132);
   U152 : GTECH_NOR2 port map( A => n139, B => n52, Z => n138);
   U153 : GTECH_NAND2 port map( A => n9, B => n140, Z => SUM(16));
   U154 : GTECH_NAND2 port map( A => A(16), B => n141, Z => n140);
   U155 : GTECH_NOR2 port map( A => n141, B => A(16), Z => n142);
   U156 : GTECH_NAND2 port map( A => A(15), B => n10, Z => n141);
   U157 : GTECH_NAND2 port map( A => n143, B => n144, Z => SUM(15));
   U158 : GTECH_NAND2 port map( A => A(15), B => n139, Z => n144);
   U159 : GTECH_NAND2 port map( A => n10, B => n52, Z => n143);
   U160 : GTECH_NAND2 port map( A => n145, B => A(14), Z => n139);
   U161 : GTECH_NOR2 port map( A => n146, B => n49, Z => n145);
   U162 : GTECH_NAND2 port map( A => n7, B => n147, Z => SUM(14));
   U163 : GTECH_NAND2 port map( A => A(14), B => n148, Z => n147);
   U164 : GTECH_NOR2 port map( A => n148, B => A(14), Z => n149);
   U165 : GTECH_NAND2 port map( A => A(13), B => n8, Z => n148);
   U166 : GTECH_NAND2 port map( A => n150, B => n151, Z => SUM(13));
   U167 : GTECH_NAND2 port map( A => A(13), B => n146, Z => n151);
   U168 : GTECH_NAND2 port map( A => n8, B => n49, Z => n150);
   U169 : GTECH_NAND2 port map( A => n152, B => A(12), Z => n146);
   U170 : GTECH_NOR2 port map( A => n153, B => n50, Z => n152);
   U171 : GTECH_NAND2 port map( A => n5, B => n154, Z => SUM(12));
   U172 : GTECH_NAND2 port map( A => A(12), B => n155, Z => n154);
   U173 : GTECH_NOR2 port map( A => n155, B => A(12), Z => n156);
   U174 : GTECH_NAND2 port map( A => A(11), B => n6, Z => n155);
   U175 : GTECH_NAND2 port map( A => n157, B => n158, Z => SUM(11));
   U176 : GTECH_NAND2 port map( A => A(11), B => n153, Z => n158);
   U177 : GTECH_NAND2 port map( A => n6, B => n50, Z => n157);
   U178 : GTECH_NAND2 port map( A => n159, B => A(10), Z => n153);
   U179 : GTECH_NOR2 port map( A => n45, B => n57, Z => n159);
   U180 : GTECH_NAND2 port map( A => n3, B => n160, Z => SUM(10));
   U181 : GTECH_NAND2 port map( A => A(10), B => n161, Z => n160);
   U182 : GTECH_NOR2 port map( A => n161, B => A(10), Z => n162);
   U183 : GTECH_NAND2 port map( A => n4, B => A(9), Z => n161);
   U184 : GTECH_NAND2 port map( A => n163, B => A(8), Z => n57);
   U185 : GTECH_NOR2 port map( A => n63, B => n44, Z => n163);
   U186 : GTECH_NAND2 port map( A => n68, B => A(6), Z => n63);
   U187 : GTECH_NOR2 port map( A => n24, B => n43, Z => n68);
   U188 : GTECH_NAND2 port map( A => n164, B => n26, Z => n67);
   U189 : GTECH_NOR2 port map( A => n41, B => n166, Z => n165);
   U190 : GTECH_NOR2 port map( A => n72, B => A(4), Z => n166);
   U191 : GTECH_NAND2 port map( A => A(4), B => n72, Z => n164);
   U192 : GTECH_NAND2 port map( A => n167, B => n168, Z => n72);
   U193 : GTECH_NAND2 port map( A => B(3), B => n169, Z => n168);
   U194 : GTECH_NAND2 port map( A => n28, B => n42, Z => n169);
   U195 : GTECH_NAND2 port map( A => A(3), B => n78, Z => n167);
   U196 : GTECH_NAND2 port map( A => n170, B => n30, Z => n78);
   U197 : GTECH_NOR2 port map( A => n39, B => n172, Z => n171);
   U198 : GTECH_NOR2 port map( A => n84, B => A(2), Z => n172);
   U199 : GTECH_NAND2 port map( A => A(2), B => n84, Z => n170);
   U200 : GTECH_NAND2 port map( A => n173, B => n174, Z => n84);
   U201 : GTECH_NAND2 port map( A => B(1), B => n175, Z => n174);
   U202 : GTECH_NAND2 port map( A => n125, B => n46, Z => n175);
   U203 : GTECH_NAND2 port map( A => A(1), B => n32, Z => n173);
   U204 : GTECH_NAND2 port map( A => n32, B => n176, Z => SUM(0));
   U205 : GTECH_NAND2 port map( A => B(0), B => A(0), Z => n176);
   U206 : GTECH_NOR2 port map( A => B(0), B => A(0), Z => n125);

end SYN_rpl;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_zpu_core.all;

entity zpu_core_DW01_add_4 is

   port( A, B : in std_logic_vector (31 downto 0);  CI : in std_logic;  SUM : 
         out std_logic_vector (31 downto 0);  CO : out std_logic);

end zpu_core_DW01_add_4;

architecture SYN_rpl of zpu_core_DW01_add_4 is

   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   signal n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16
      , n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, 
      n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45
      , n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, 
      n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n73, n74
      , n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86, n87, n88, 
      n89, n90, n91, n92, n93, n94, n95, n96, n97, n98, n99, n100, n101, n102, 
      n103, n104, n105, n106, n107, n108, n109, n110, n111, n112, n113, n114, 
      n115, n116, n117, n118, n119, n120, n121, n122, n123, n124, n125, n126, 
      n127, n128, n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, 
      n139, n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150, 
      n151, n152, n153, n154, n155, n156, n157, n158, n159, n160, n161, n162, 
      n163, n164, n165, n166, n167, n168, n169, n170, n171, n172, n173, n174, 
      n175, n176, n177, n178, n179, n180, n181, n182, n183, n184, n185, n186, 
      n187, n188, n189, n190, n191, n192, n193, n194, n195, n196, n197, n198, 
      n199, n200, n201, n202, n203, n204, n205, n206, n207, n208, n209, n210, 
      n211, n212, n213, n214, n215, n216, n217, n218, n219, n220, n221, n222, 
      n223, n224, n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, 
      n235, n236, n237, n238, n239, n240, n241, n242, n243, n244, n245, n246, 
      n247, n248, n249, n250, n251, n252, n253, n254, n255, n256, n257, n258, 
      n259, n260, n261, n262, n263, n264, n265, n266, n267, n268, n269, n270, 
      n271, n272, n273, n274, n275, n276, n277, n278, n279, n280, n281, n282, 
      n283, n284, n285, n286, n287, n288, n289, n290, n291, n292, n293, n294, 
      n295, n296, n297, n298, n299, n300, n301, n302, n303, n304, n305, n306, 
      n307, n308, n309, n310, n311, n312, n313, n314, n315, n316, n317, n318, 
      n319, n320, n321, n322, n323, n324, n325, n326, n327, n328, n329, n330, 
      n331, n332, n333, n334, n335, n336, n337, n338, n339, n340, n341, n342, 
      n343, n344, n345, n346, n347, n348, n349, n350, n351, n352, n353, n354, 
      n355, n356, n357, n358, n359, n360, n361, n362, n363, n364, n365, n366, 
      n367, n368, n369, n370, n371, n372, n373, n374, n375, n376, n377, n378, 
      n379, n380, n381, n382, n383, n384, n385, n386, n387, n388, n389, n390, 
      n391, n392, n393, n394, n395, n396, n397, n398, n399, n400, n401, n402, 
      n403 : std_logic;

begin
   
   U1 : GTECH_NOT port map( A => n169, Z => n1);
   U2 : GTECH_NOT port map( A => n177, Z => n2);
   U3 : GTECH_NOT port map( A => B(31), Z => n3);
   U4 : GTECH_NOT port map( A => n179, Z => n4);
   U5 : GTECH_NOT port map( A => B(30), Z => n5);
   U6 : GTECH_NOT port map( A => n194, Z => n6);
   U7 : GTECH_NOT port map( A => B(29), Z => n7);
   U8 : GTECH_NOT port map( A => n175, Z => n8);
   U9 : GTECH_NOT port map( A => n203, Z => n9);
   U10 : GTECH_NOT port map( A => B(28), Z => n10);
   U11 : GTECH_NOT port map( A => n186, Z => n11);
   U12 : GTECH_NOT port map( A => n212, Z => n12);
   U13 : GTECH_NOT port map( A => B(27), Z => n13);
   U14 : GTECH_NOT port map( A => n201, Z => n14);
   U15 : GTECH_NOT port map( A => n221, Z => n15);
   U16 : GTECH_NOT port map( A => B(26), Z => n16);
   U17 : GTECH_NOT port map( A => n210, Z => n17);
   U18 : GTECH_NOT port map( A => n230, Z => n18);
   U19 : GTECH_NOT port map( A => B(25), Z => n19);
   U20 : GTECH_NOT port map( A => n219, Z => n20);
   U21 : GTECH_NOT port map( A => n239, Z => n21);
   U22 : GTECH_NOT port map( A => B(24), Z => n22);
   U23 : GTECH_NOT port map( A => n228, Z => n23);
   U24 : GTECH_NOT port map( A => n248, Z => n24);
   U25 : GTECH_NOT port map( A => B(23), Z => n25);
   U26 : GTECH_NOT port map( A => n237, Z => n26);
   U27 : GTECH_NOT port map( A => n257, Z => n27);
   U28 : GTECH_NOT port map( A => B(22), Z => n28);
   U29 : GTECH_NOT port map( A => n246, Z => n29);
   U30 : GTECH_NOT port map( A => n266, Z => n30);
   U31 : GTECH_NOT port map( A => B(21), Z => n31);
   U32 : GTECH_NOT port map( A => n255, Z => n32);
   U33 : GTECH_NOT port map( A => n275, Z => n33);
   U34 : GTECH_NOT port map( A => B(20), Z => n34);
   U35 : GTECH_NOT port map( A => n264, Z => n35);
   U36 : GTECH_NOT port map( A => n290, Z => n36);
   U37 : GTECH_NOT port map( A => B(19), Z => n37);
   U38 : GTECH_NOT port map( A => n273, Z => n38);
   U39 : GTECH_NOT port map( A => n299, Z => n39);
   U40 : GTECH_NOT port map( A => B(18), Z => n40);
   U41 : GTECH_NOT port map( A => n282, Z => n41);
   U42 : GTECH_NOT port map( A => n308, Z => n42);
   U43 : GTECH_NOT port map( A => B(17), Z => n43);
   U44 : GTECH_NOT port map( A => n297, Z => n44);
   U45 : GTECH_NOT port map( A => n317, Z => n45);
   U46 : GTECH_NOT port map( A => B(16), Z => n46);
   U47 : GTECH_NOT port map( A => n306, Z => n47);
   U48 : GTECH_NOT port map( A => n326, Z => n48);
   U49 : GTECH_NOT port map( A => B(15), Z => n49);
   U50 : GTECH_NOT port map( A => n315, Z => n50);
   U51 : GTECH_NOT port map( A => n335, Z => n51);
   U52 : GTECH_NOT port map( A => B(14), Z => n52);
   U53 : GTECH_NOT port map( A => n324, Z => n53);
   U54 : GTECH_NOT port map( A => n344, Z => n54);
   U55 : GTECH_NOT port map( A => B(13), Z => n55);
   U56 : GTECH_NOT port map( A => n333, Z => n56);
   U57 : GTECH_NOT port map( A => n353, Z => n57);
   U58 : GTECH_NOT port map( A => B(12), Z => n58);
   U59 : GTECH_NOT port map( A => n342, Z => n59);
   U60 : GTECH_NOT port map( A => n362, Z => n60);
   U61 : GTECH_NOT port map( A => B(11), Z => n61);
   U62 : GTECH_NOT port map( A => n351, Z => n62);
   U63 : GTECH_NOT port map( A => n371, Z => n63);
   U64 : GTECH_NOT port map( A => B(10), Z => n64);
   U65 : GTECH_NOT port map( A => n360, Z => n65);
   U66 : GTECH_NOT port map( A => n128, Z => n66);
   U67 : GTECH_NOT port map( A => B(9), Z => n67);
   U68 : GTECH_NOT port map( A => n369, Z => n68);
   U69 : GTECH_NOT port map( A => n133, Z => n69);
   U70 : GTECH_NOT port map( A => B(8), Z => n70);
   U71 : GTECH_NOT port map( A => n129, Z => n71);
   U72 : GTECH_NOT port map( A => n139, Z => n72);
   U73 : GTECH_NOT port map( A => B(7), Z => n73);
   U74 : GTECH_NOT port map( A => n134, Z => n74);
   U75 : GTECH_NOT port map( A => n145, Z => n75);
   U76 : GTECH_NOT port map( A => B(6), Z => n76);
   U77 : GTECH_NOT port map( A => n140, Z => n77);
   U78 : GTECH_NOT port map( A => n151, Z => n78);
   U79 : GTECH_NOT port map( A => B(5), Z => n79);
   U80 : GTECH_NOT port map( A => n146, Z => n80);
   U81 : GTECH_NOT port map( A => n157, Z => n81);
   U82 : GTECH_NOT port map( A => B(4), Z => n82);
   U83 : GTECH_NOT port map( A => n152, Z => n83);
   U84 : GTECH_NOT port map( A => n163, Z => n84);
   U85 : GTECH_NOT port map( A => B(3), Z => n85);
   U86 : GTECH_NOT port map( A => n158, Z => n86);
   U87 : GTECH_NOT port map( A => n188, Z => n87);
   U88 : GTECH_NOT port map( A => B(2), Z => n88);
   U89 : GTECH_NOT port map( A => n164, Z => n89);
   U90 : GTECH_NOT port map( A => n285, Z => n90);
   U91 : GTECH_NOT port map( A => B(1), Z => n91);
   U92 : GTECH_NOT port map( A => n189, Z => n92);
   U93 : GTECH_NOT port map( A => n286, Z => n93);
   U94 : GTECH_NOT port map( A => n403, Z => n94);
   U95 : GTECH_NOT port map( A => A(5), Z => n95);
   U96 : GTECH_NOT port map( A => A(30), Z => n96);
   U97 : GTECH_NOT port map( A => A(29), Z => n97);
   U98 : GTECH_NOT port map( A => A(28), Z => n98);
   U99 : GTECH_NOT port map( A => A(27), Z => n99);
   U100 : GTECH_NOT port map( A => A(26), Z => n100);
   U101 : GTECH_NOT port map( A => A(25), Z => n101);
   U102 : GTECH_NOT port map( A => A(24), Z => n102);
   U103 : GTECH_NOT port map( A => A(23), Z => n103);
   U104 : GTECH_NOT port map( A => A(0), Z => n104);
   U105 : GTECH_NOT port map( A => A(7), Z => n105);
   U106 : GTECH_NOT port map( A => A(14), Z => n106);
   U107 : GTECH_NOT port map( A => A(21), Z => n107);
   U108 : GTECH_NOT port map( A => A(22), Z => n108);
   U109 : GTECH_NOT port map( A => A(9), Z => n109);
   U110 : GTECH_NOT port map( A => A(16), Z => n110);
   U111 : GTECH_NOT port map( A => A(17), Z => n111);
   U112 : GTECH_NOT port map( A => A(18), Z => n112);
   U113 : GTECH_NOT port map( A => A(19), Z => n113);
   U114 : GTECH_NOT port map( A => A(20), Z => n114);
   U115 : GTECH_NOT port map( A => A(11), Z => n115);
   U116 : GTECH_NOT port map( A => A(12), Z => n116);
   U117 : GTECH_NOT port map( A => A(13), Z => n117);
   U118 : GTECH_NOT port map( A => A(1), Z => n118);
   U119 : GTECH_NOT port map( A => A(2), Z => n119);
   U120 : GTECH_NOT port map( A => A(3), Z => n120);
   U121 : GTECH_NOT port map( A => A(4), Z => n121);
   U122 : GTECH_NOT port map( A => A(6), Z => n122);
   U123 : GTECH_NOT port map( A => A(8), Z => n123);
   U124 : GTECH_NOT port map( A => A(10), Z => n124);
   U125 : GTECH_NOT port map( A => A(15), Z => n125);
   U126 : GTECH_NOR2 port map( A => n126, B => n127, Z => SUM(9));
   U127 : GTECH_NOR2 port map( A => n71, B => n128, Z => n127);
   U128 : GTECH_NOR2 port map( A => n129, B => n66, Z => n126);
   U129 : GTECH_NOR2 port map( A => n130, B => n131, Z => n128);
   U130 : GTECH_NOR2 port map( A => n67, B => A(9), Z => n131);
   U131 : GTECH_NOR2 port map( A => n109, B => B(9), Z => n130);
   U132 : GTECH_NOR2 port map( A => n132, B => n69, Z => SUM(8));
   U133 : GTECH_NAND2 port map( A => n134, B => n135, Z => n133);
   U134 : GTECH_NOR2 port map( A => n134, B => n135, Z => n132);
   U135 : GTECH_NAND2 port map( A => n136, B => n137, Z => n135);
   U136 : GTECH_NAND2 port map( A => B(8), B => n123, Z => n137);
   U137 : GTECH_NAND2 port map( A => A(8), B => n70, Z => n136);
   U138 : GTECH_NOR2 port map( A => n138, B => n72, Z => SUM(7));
   U139 : GTECH_NAND2 port map( A => n140, B => n141, Z => n139);
   U140 : GTECH_NOR2 port map( A => n140, B => n141, Z => n138);
   U141 : GTECH_NAND2 port map( A => n142, B => n143, Z => n141);
   U142 : GTECH_NAND2 port map( A => B(7), B => n105, Z => n143);
   U143 : GTECH_NAND2 port map( A => A(7), B => n73, Z => n142);
   U144 : GTECH_NOR2 port map( A => n144, B => n75, Z => SUM(6));
   U145 : GTECH_NAND2 port map( A => n146, B => n147, Z => n145);
   U146 : GTECH_NOR2 port map( A => n146, B => n147, Z => n144);
   U147 : GTECH_NAND2 port map( A => n148, B => n149, Z => n147);
   U148 : GTECH_NAND2 port map( A => B(6), B => n122, Z => n149);
   U149 : GTECH_NAND2 port map( A => A(6), B => n76, Z => n148);
   U150 : GTECH_NOR2 port map( A => n150, B => n78, Z => SUM(5));
   U151 : GTECH_NAND2 port map( A => n152, B => n153, Z => n151);
   U152 : GTECH_NOR2 port map( A => n152, B => n153, Z => n150);
   U153 : GTECH_NAND2 port map( A => n154, B => n155, Z => n153);
   U154 : GTECH_NAND2 port map( A => B(5), B => n95, Z => n155);
   U155 : GTECH_NAND2 port map( A => A(5), B => n79, Z => n154);
   U156 : GTECH_NOR2 port map( A => n156, B => n81, Z => SUM(4));
   U157 : GTECH_NAND2 port map( A => n158, B => n159, Z => n157);
   U158 : GTECH_NOR2 port map( A => n158, B => n159, Z => n156);
   U159 : GTECH_NAND2 port map( A => n160, B => n161, Z => n159);
   U160 : GTECH_NAND2 port map( A => B(4), B => n121, Z => n161);
   U161 : GTECH_NAND2 port map( A => A(4), B => n82, Z => n160);
   U162 : GTECH_NOR2 port map( A => n162, B => n84, Z => SUM(3));
   U163 : GTECH_NAND2 port map( A => n164, B => n165, Z => n163);
   U164 : GTECH_NOR2 port map( A => n164, B => n165, Z => n162);
   U165 : GTECH_NAND2 port map( A => n166, B => n167, Z => n165);
   U166 : GTECH_NAND2 port map( A => B(3), B => n120, Z => n167);
   U167 : GTECH_NAND2 port map( A => A(3), B => n85, Z => n166);
   U168 : GTECH_NOR2 port map( A => n168, B => n1, Z => SUM(31));
   U169 : GTECH_NAND2 port map( A => n170, B => n171, Z => n169);
   U170 : GTECH_NOR2 port map( A => n171, B => n170, Z => n168);
   U171 : GTECH_NAND2 port map( A => n172, B => n173, Z => n170);
   U172 : GTECH_NAND2 port map( A => B(30), B => n174, Z => n173);
   U173 : GTECH_NAND2 port map( A => n8, B => n96, Z => n174);
   U174 : GTECH_NAND2 port map( A => A(30), B => n175, Z => n172);
   U175 : GTECH_NAND2 port map( A => n176, B => n2, Z => n171);
   U176 : GTECH_NOR2 port map( A => n3, B => A(31), Z => n177);
   U177 : GTECH_NAND2 port map( A => A(31), B => n3, Z => n176);
   U178 : GTECH_NOR2 port map( A => n178, B => n4, Z => SUM(30));
   U179 : GTECH_NAND2 port map( A => n175, B => n180, Z => n179);
   U180 : GTECH_NOR2 port map( A => n175, B => n180, Z => n178);
   U181 : GTECH_NAND2 port map( A => n181, B => n182, Z => n180);
   U182 : GTECH_NAND2 port map( A => B(30), B => n96, Z => n182);
   U183 : GTECH_NAND2 port map( A => A(30), B => n5, Z => n181);
   U184 : GTECH_NAND2 port map( A => n183, B => n184, Z => n175);
   U185 : GTECH_NAND2 port map( A => B(29), B => n185, Z => n184);
   U186 : GTECH_NAND2 port map( A => n11, B => n97, Z => n185);
   U187 : GTECH_NAND2 port map( A => A(29), B => n186, Z => n183);
   U188 : GTECH_NOR2 port map( A => n187, B => n87, Z => SUM(2));
   U189 : GTECH_NAND2 port map( A => n189, B => n190, Z => n188);
   U190 : GTECH_NOR2 port map( A => n189, B => n190, Z => n187);
   U191 : GTECH_NAND2 port map( A => n191, B => n192, Z => n190);
   U192 : GTECH_NAND2 port map( A => B(2), B => n119, Z => n192);
   U193 : GTECH_NAND2 port map( A => A(2), B => n88, Z => n191);
   U194 : GTECH_NOR2 port map( A => n193, B => n6, Z => SUM(29));
   U195 : GTECH_NAND2 port map( A => n186, B => n195, Z => n194);
   U196 : GTECH_NOR2 port map( A => n186, B => n195, Z => n193);
   U197 : GTECH_NAND2 port map( A => n196, B => n197, Z => n195);
   U198 : GTECH_NAND2 port map( A => B(29), B => n97, Z => n197);
   U199 : GTECH_NAND2 port map( A => A(29), B => n7, Z => n196);
   U200 : GTECH_NAND2 port map( A => n198, B => n199, Z => n186);
   U201 : GTECH_NAND2 port map( A => B(28), B => n200, Z => n199);
   U202 : GTECH_NAND2 port map( A => n14, B => n98, Z => n200);
   U203 : GTECH_NAND2 port map( A => A(28), B => n201, Z => n198);
   U204 : GTECH_NOR2 port map( A => n202, B => n9, Z => SUM(28));
   U205 : GTECH_NAND2 port map( A => n201, B => n204, Z => n203);
   U206 : GTECH_NOR2 port map( A => n201, B => n204, Z => n202);
   U207 : GTECH_NAND2 port map( A => n205, B => n206, Z => n204);
   U208 : GTECH_NAND2 port map( A => B(28), B => n98, Z => n206);
   U209 : GTECH_NAND2 port map( A => A(28), B => n10, Z => n205);
   U210 : GTECH_NAND2 port map( A => n207, B => n208, Z => n201);
   U211 : GTECH_NAND2 port map( A => B(27), B => n209, Z => n208);
   U212 : GTECH_NAND2 port map( A => n17, B => n99, Z => n209);
   U213 : GTECH_NAND2 port map( A => A(27), B => n210, Z => n207);
   U214 : GTECH_NOR2 port map( A => n211, B => n12, Z => SUM(27));
   U215 : GTECH_NAND2 port map( A => n210, B => n213, Z => n212);
   U216 : GTECH_NOR2 port map( A => n210, B => n213, Z => n211);
   U217 : GTECH_NAND2 port map( A => n214, B => n215, Z => n213);
   U218 : GTECH_NAND2 port map( A => B(27), B => n99, Z => n215);
   U219 : GTECH_NAND2 port map( A => A(27), B => n13, Z => n214);
   U220 : GTECH_NAND2 port map( A => n216, B => n217, Z => n210);
   U221 : GTECH_NAND2 port map( A => B(26), B => n218, Z => n217);
   U222 : GTECH_NAND2 port map( A => n20, B => n100, Z => n218);
   U223 : GTECH_NAND2 port map( A => A(26), B => n219, Z => n216);
   U224 : GTECH_NOR2 port map( A => n220, B => n15, Z => SUM(26));
   U225 : GTECH_NAND2 port map( A => n219, B => n222, Z => n221);
   U226 : GTECH_NOR2 port map( A => n219, B => n222, Z => n220);
   U227 : GTECH_NAND2 port map( A => n223, B => n224, Z => n222);
   U228 : GTECH_NAND2 port map( A => B(26), B => n100, Z => n224);
   U229 : GTECH_NAND2 port map( A => A(26), B => n16, Z => n223);
   U230 : GTECH_NAND2 port map( A => n225, B => n226, Z => n219);
   U231 : GTECH_NAND2 port map( A => B(25), B => n227, Z => n226);
   U232 : GTECH_NAND2 port map( A => n23, B => n101, Z => n227);
   U233 : GTECH_NAND2 port map( A => A(25), B => n228, Z => n225);
   U234 : GTECH_NOR2 port map( A => n229, B => n18, Z => SUM(25));
   U235 : GTECH_NAND2 port map( A => n228, B => n231, Z => n230);
   U236 : GTECH_NOR2 port map( A => n228, B => n231, Z => n229);
   U237 : GTECH_NAND2 port map( A => n232, B => n233, Z => n231);
   U238 : GTECH_NAND2 port map( A => B(25), B => n101, Z => n233);
   U239 : GTECH_NAND2 port map( A => A(25), B => n19, Z => n232);
   U240 : GTECH_NAND2 port map( A => n234, B => n235, Z => n228);
   U241 : GTECH_NAND2 port map( A => B(24), B => n236, Z => n235);
   U242 : GTECH_NAND2 port map( A => n26, B => n102, Z => n236);
   U243 : GTECH_NAND2 port map( A => A(24), B => n237, Z => n234);
   U244 : GTECH_NOR2 port map( A => n238, B => n21, Z => SUM(24));
   U245 : GTECH_NAND2 port map( A => n237, B => n240, Z => n239);
   U246 : GTECH_NOR2 port map( A => n237, B => n240, Z => n238);
   U247 : GTECH_NAND2 port map( A => n241, B => n242, Z => n240);
   U248 : GTECH_NAND2 port map( A => B(24), B => n102, Z => n242);
   U249 : GTECH_NAND2 port map( A => A(24), B => n22, Z => n241);
   U250 : GTECH_NAND2 port map( A => n243, B => n244, Z => n237);
   U251 : GTECH_NAND2 port map( A => B(23), B => n245, Z => n244);
   U252 : GTECH_NAND2 port map( A => n29, B => n103, Z => n245);
   U253 : GTECH_NAND2 port map( A => A(23), B => n246, Z => n243);
   U254 : GTECH_NOR2 port map( A => n247, B => n24, Z => SUM(23));
   U255 : GTECH_NAND2 port map( A => n246, B => n249, Z => n248);
   U256 : GTECH_NOR2 port map( A => n246, B => n249, Z => n247);
   U257 : GTECH_NAND2 port map( A => n250, B => n251, Z => n249);
   U258 : GTECH_NAND2 port map( A => B(23), B => n103, Z => n251);
   U259 : GTECH_NAND2 port map( A => A(23), B => n25, Z => n250);
   U260 : GTECH_NAND2 port map( A => n252, B => n253, Z => n246);
   U261 : GTECH_NAND2 port map( A => B(22), B => n254, Z => n253);
   U262 : GTECH_NAND2 port map( A => n32, B => n108, Z => n254);
   U263 : GTECH_NAND2 port map( A => A(22), B => n255, Z => n252);
   U264 : GTECH_NOR2 port map( A => n256, B => n27, Z => SUM(22));
   U265 : GTECH_NAND2 port map( A => n255, B => n258, Z => n257);
   U266 : GTECH_NOR2 port map( A => n255, B => n258, Z => n256);
   U267 : GTECH_NAND2 port map( A => n259, B => n260, Z => n258);
   U268 : GTECH_NAND2 port map( A => B(22), B => n108, Z => n260);
   U269 : GTECH_NAND2 port map( A => A(22), B => n28, Z => n259);
   U270 : GTECH_NAND2 port map( A => n261, B => n262, Z => n255);
   U271 : GTECH_NAND2 port map( A => B(21), B => n263, Z => n262);
   U272 : GTECH_NAND2 port map( A => n35, B => n107, Z => n263);
   U273 : GTECH_NAND2 port map( A => A(21), B => n264, Z => n261);
   U274 : GTECH_NOR2 port map( A => n265, B => n30, Z => SUM(21));
   U275 : GTECH_NAND2 port map( A => n264, B => n267, Z => n266);
   U276 : GTECH_NOR2 port map( A => n264, B => n267, Z => n265);
   U277 : GTECH_NAND2 port map( A => n268, B => n269, Z => n267);
   U278 : GTECH_NAND2 port map( A => B(21), B => n107, Z => n269);
   U279 : GTECH_NAND2 port map( A => A(21), B => n31, Z => n268);
   U280 : GTECH_NAND2 port map( A => n270, B => n271, Z => n264);
   U281 : GTECH_NAND2 port map( A => B(20), B => n272, Z => n271);
   U282 : GTECH_NAND2 port map( A => n38, B => n114, Z => n272);
   U283 : GTECH_NAND2 port map( A => A(20), B => n273, Z => n270);
   U284 : GTECH_NOR2 port map( A => n274, B => n33, Z => SUM(20));
   U285 : GTECH_NAND2 port map( A => n273, B => n276, Z => n275);
   U286 : GTECH_NOR2 port map( A => n273, B => n276, Z => n274);
   U287 : GTECH_NAND2 port map( A => n277, B => n278, Z => n276);
   U288 : GTECH_NAND2 port map( A => B(20), B => n114, Z => n278);
   U289 : GTECH_NAND2 port map( A => A(20), B => n34, Z => n277);
   U290 : GTECH_NAND2 port map( A => n279, B => n280, Z => n273);
   U291 : GTECH_NAND2 port map( A => B(19), B => n281, Z => n280);
   U292 : GTECH_NAND2 port map( A => n41, B => n113, Z => n281);
   U293 : GTECH_NAND2 port map( A => A(19), B => n282, Z => n279);
   U294 : GTECH_NAND2 port map( A => n283, B => n284, Z => SUM(1));
   U295 : GTECH_NAND2 port map( A => n285, B => n93, Z => n284);
   U296 : GTECH_NAND2 port map( A => n90, B => n286, Z => n283);
   U297 : GTECH_NOR2 port map( A => n287, B => n288, Z => n285);
   U298 : GTECH_NOR2 port map( A => n91, B => A(1), Z => n288);
   U299 : GTECH_NOR2 port map( A => n118, B => B(1), Z => n287);
   U300 : GTECH_NOR2 port map( A => n289, B => n36, Z => SUM(19));
   U301 : GTECH_NAND2 port map( A => n282, B => n291, Z => n290);
   U302 : GTECH_NOR2 port map( A => n282, B => n291, Z => n289);
   U303 : GTECH_NAND2 port map( A => n292, B => n293, Z => n291);
   U304 : GTECH_NAND2 port map( A => B(19), B => n113, Z => n293);
   U305 : GTECH_NAND2 port map( A => A(19), B => n37, Z => n292);
   U306 : GTECH_NAND2 port map( A => n294, B => n295, Z => n282);
   U307 : GTECH_NAND2 port map( A => B(18), B => n296, Z => n295);
   U308 : GTECH_NAND2 port map( A => n44, B => n112, Z => n296);
   U309 : GTECH_NAND2 port map( A => A(18), B => n297, Z => n294);
   U310 : GTECH_NOR2 port map( A => n298, B => n39, Z => SUM(18));
   U311 : GTECH_NAND2 port map( A => n297, B => n300, Z => n299);
   U312 : GTECH_NOR2 port map( A => n297, B => n300, Z => n298);
   U313 : GTECH_NAND2 port map( A => n301, B => n302, Z => n300);
   U314 : GTECH_NAND2 port map( A => B(18), B => n112, Z => n302);
   U315 : GTECH_NAND2 port map( A => A(18), B => n40, Z => n301);
   U316 : GTECH_NAND2 port map( A => n303, B => n304, Z => n297);
   U317 : GTECH_NAND2 port map( A => B(17), B => n305, Z => n304);
   U318 : GTECH_NAND2 port map( A => n47, B => n111, Z => n305);
   U319 : GTECH_NAND2 port map( A => A(17), B => n306, Z => n303);
   U320 : GTECH_NOR2 port map( A => n307, B => n42, Z => SUM(17));
   U321 : GTECH_NAND2 port map( A => n306, B => n309, Z => n308);
   U322 : GTECH_NOR2 port map( A => n306, B => n309, Z => n307);
   U323 : GTECH_NAND2 port map( A => n310, B => n311, Z => n309);
   U324 : GTECH_NAND2 port map( A => B(17), B => n111, Z => n311);
   U325 : GTECH_NAND2 port map( A => A(17), B => n43, Z => n310);
   U326 : GTECH_NAND2 port map( A => n312, B => n313, Z => n306);
   U327 : GTECH_NAND2 port map( A => B(16), B => n314, Z => n313);
   U328 : GTECH_NAND2 port map( A => n50, B => n110, Z => n314);
   U329 : GTECH_NAND2 port map( A => A(16), B => n315, Z => n312);
   U330 : GTECH_NOR2 port map( A => n316, B => n45, Z => SUM(16));
   U331 : GTECH_NAND2 port map( A => n315, B => n318, Z => n317);
   U332 : GTECH_NOR2 port map( A => n315, B => n318, Z => n316);
   U333 : GTECH_NAND2 port map( A => n319, B => n320, Z => n318);
   U334 : GTECH_NAND2 port map( A => B(16), B => n110, Z => n320);
   U335 : GTECH_NAND2 port map( A => A(16), B => n46, Z => n319);
   U336 : GTECH_NAND2 port map( A => n321, B => n322, Z => n315);
   U337 : GTECH_NAND2 port map( A => B(15), B => n323, Z => n322);
   U338 : GTECH_NAND2 port map( A => n53, B => n125, Z => n323);
   U339 : GTECH_NAND2 port map( A => A(15), B => n324, Z => n321);
   U340 : GTECH_NOR2 port map( A => n325, B => n48, Z => SUM(15));
   U341 : GTECH_NAND2 port map( A => n324, B => n327, Z => n326);
   U342 : GTECH_NOR2 port map( A => n324, B => n327, Z => n325);
   U343 : GTECH_NAND2 port map( A => n328, B => n329, Z => n327);
   U344 : GTECH_NAND2 port map( A => B(15), B => n125, Z => n329);
   U345 : GTECH_NAND2 port map( A => A(15), B => n49, Z => n328);
   U346 : GTECH_NAND2 port map( A => n330, B => n331, Z => n324);
   U347 : GTECH_NAND2 port map( A => B(14), B => n332, Z => n331);
   U348 : GTECH_NAND2 port map( A => n56, B => n106, Z => n332);
   U349 : GTECH_NAND2 port map( A => A(14), B => n333, Z => n330);
   U350 : GTECH_NOR2 port map( A => n334, B => n51, Z => SUM(14));
   U351 : GTECH_NAND2 port map( A => n333, B => n336, Z => n335);
   U352 : GTECH_NOR2 port map( A => n333, B => n336, Z => n334);
   U353 : GTECH_NAND2 port map( A => n337, B => n338, Z => n336);
   U354 : GTECH_NAND2 port map( A => B(14), B => n106, Z => n338);
   U355 : GTECH_NAND2 port map( A => A(14), B => n52, Z => n337);
   U356 : GTECH_NAND2 port map( A => n339, B => n340, Z => n333);
   U357 : GTECH_NAND2 port map( A => B(13), B => n341, Z => n340);
   U358 : GTECH_NAND2 port map( A => n59, B => n117, Z => n341);
   U359 : GTECH_NAND2 port map( A => A(13), B => n342, Z => n339);
   U360 : GTECH_NOR2 port map( A => n343, B => n54, Z => SUM(13));
   U361 : GTECH_NAND2 port map( A => n342, B => n345, Z => n344);
   U362 : GTECH_NOR2 port map( A => n342, B => n345, Z => n343);
   U363 : GTECH_NAND2 port map( A => n346, B => n347, Z => n345);
   U364 : GTECH_NAND2 port map( A => B(13), B => n117, Z => n347);
   U365 : GTECH_NAND2 port map( A => A(13), B => n55, Z => n346);
   U366 : GTECH_NAND2 port map( A => n348, B => n349, Z => n342);
   U367 : GTECH_NAND2 port map( A => B(12), B => n350, Z => n349);
   U368 : GTECH_NAND2 port map( A => n62, B => n116, Z => n350);
   U369 : GTECH_NAND2 port map( A => A(12), B => n351, Z => n348);
   U370 : GTECH_NOR2 port map( A => n352, B => n57, Z => SUM(12));
   U371 : GTECH_NAND2 port map( A => n351, B => n354, Z => n353);
   U372 : GTECH_NOR2 port map( A => n351, B => n354, Z => n352);
   U373 : GTECH_NAND2 port map( A => n355, B => n356, Z => n354);
   U374 : GTECH_NAND2 port map( A => B(12), B => n116, Z => n356);
   U375 : GTECH_NAND2 port map( A => A(12), B => n58, Z => n355);
   U376 : GTECH_NAND2 port map( A => n357, B => n358, Z => n351);
   U377 : GTECH_NAND2 port map( A => B(11), B => n359, Z => n358);
   U378 : GTECH_NAND2 port map( A => n65, B => n115, Z => n359);
   U379 : GTECH_NAND2 port map( A => A(11), B => n360, Z => n357);
   U380 : GTECH_NOR2 port map( A => n361, B => n60, Z => SUM(11));
   U381 : GTECH_NAND2 port map( A => n360, B => n363, Z => n362);
   U382 : GTECH_NOR2 port map( A => n360, B => n363, Z => n361);
   U383 : GTECH_NAND2 port map( A => n364, B => n365, Z => n363);
   U384 : GTECH_NAND2 port map( A => B(11), B => n115, Z => n365);
   U385 : GTECH_NAND2 port map( A => A(11), B => n61, Z => n364);
   U386 : GTECH_NAND2 port map( A => n366, B => n367, Z => n360);
   U387 : GTECH_NAND2 port map( A => B(10), B => n368, Z => n367);
   U388 : GTECH_NAND2 port map( A => n68, B => n124, Z => n368);
   U389 : GTECH_NAND2 port map( A => A(10), B => n369, Z => n366);
   U390 : GTECH_NOR2 port map( A => n370, B => n63, Z => SUM(10));
   U391 : GTECH_NAND2 port map( A => n369, B => n372, Z => n371);
   U392 : GTECH_NOR2 port map( A => n369, B => n372, Z => n370);
   U393 : GTECH_NAND2 port map( A => n373, B => n374, Z => n372);
   U394 : GTECH_NAND2 port map( A => B(10), B => n124, Z => n374);
   U395 : GTECH_NAND2 port map( A => A(10), B => n64, Z => n373);
   U396 : GTECH_NAND2 port map( A => n375, B => n376, Z => n369);
   U397 : GTECH_NAND2 port map( A => B(9), B => n377, Z => n376);
   U398 : GTECH_NAND2 port map( A => n71, B => n109, Z => n377);
   U399 : GTECH_NAND2 port map( A => A(9), B => n129, Z => n375);
   U400 : GTECH_NAND2 port map( A => n378, B => n379, Z => n129);
   U401 : GTECH_NAND2 port map( A => B(8), B => n380, Z => n379);
   U402 : GTECH_NAND2 port map( A => n74, B => n123, Z => n380);
   U403 : GTECH_NAND2 port map( A => A(8), B => n134, Z => n378);
   U404 : GTECH_NAND2 port map( A => n381, B => n382, Z => n134);
   U405 : GTECH_NAND2 port map( A => B(7), B => n383, Z => n382);
   U406 : GTECH_NAND2 port map( A => n77, B => n105, Z => n383);
   U407 : GTECH_NAND2 port map( A => A(7), B => n140, Z => n381);
   U408 : GTECH_NAND2 port map( A => n384, B => n385, Z => n140);
   U409 : GTECH_NAND2 port map( A => B(6), B => n386, Z => n385);
   U410 : GTECH_NAND2 port map( A => n80, B => n122, Z => n386);
   U411 : GTECH_NAND2 port map( A => A(6), B => n146, Z => n384);
   U412 : GTECH_NAND2 port map( A => n387, B => n388, Z => n146);
   U413 : GTECH_NAND2 port map( A => B(5), B => n389, Z => n388);
   U414 : GTECH_NAND2 port map( A => n83, B => n95, Z => n389);
   U415 : GTECH_NAND2 port map( A => A(5), B => n152, Z => n387);
   U416 : GTECH_NAND2 port map( A => n390, B => n391, Z => n152);
   U417 : GTECH_NAND2 port map( A => B(4), B => n392, Z => n391);
   U418 : GTECH_NAND2 port map( A => n86, B => n121, Z => n392);
   U419 : GTECH_NAND2 port map( A => A(4), B => n158, Z => n390);
   U420 : GTECH_NAND2 port map( A => n393, B => n394, Z => n158);
   U421 : GTECH_NAND2 port map( A => B(3), B => n395, Z => n394);
   U422 : GTECH_NAND2 port map( A => n89, B => n120, Z => n395);
   U423 : GTECH_NAND2 port map( A => A(3), B => n164, Z => n393);
   U424 : GTECH_NAND2 port map( A => n396, B => n397, Z => n164);
   U425 : GTECH_NAND2 port map( A => B(2), B => n398, Z => n397);
   U426 : GTECH_NAND2 port map( A => n92, B => n119, Z => n398);
   U427 : GTECH_NAND2 port map( A => A(2), B => n189, Z => n396);
   U428 : GTECH_NAND2 port map( A => n399, B => n400, Z => n189);
   U429 : GTECH_NAND2 port map( A => B(1), B => n401, Z => n400);
   U430 : GTECH_NAND2 port map( A => n118, B => n286, Z => n401);
   U431 : GTECH_NAND2 port map( A => A(1), B => n93, Z => n399);
   U432 : GTECH_NAND2 port map( A => B(0), B => A(0), Z => n286);
   U433 : GTECH_NAND2 port map( A => n94, B => n402, Z => SUM(0));
   U434 : GTECH_NAND2 port map( A => B(0), B => n104, Z => n402);
   U435 : GTECH_NOR2 port map( A => n104, B => B(0), Z => n403);

end SYN_rpl;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_zpu_core.all;

entity zpu_core_DW01_add_3 is

   port( A, B : in std_logic_vector (31 downto 0);  CI : in std_logic;  SUM : 
         out std_logic_vector (31 downto 0);  CO : out std_logic);

end zpu_core_DW01_add_3;

architecture SYN_rpl of zpu_core_DW01_add_3 is

   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   signal n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16
      , n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, 
      n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45
      , n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, 
      n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n73, n74
      , n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86, n87, n88, 
      n89, n90, n91, n92, n93, n94, n95, n96, n97, n98, n99, n100, n101, n102, 
      n103, n104, n105, n106, n107, n108, n109, n110, n111, n112, n113, n114, 
      n115, n116, n117, n118, n119, n120, n121, n122, n123, n124, n125, n126, 
      n127, n128, n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, 
      n139, n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150, 
      n151, n152, n153, n154, n155, n156, n157, n158, n159, n160, n161, n162, 
      n163, n164, n165, n166, n167, n168, n169, n170, n171, n172, n173, n174, 
      n175, n176, n177, n178, n179, n180, n181, n182, n183, n184, n185, n186, 
      n187, n188, n189, n190, n191, n192, n193, n194, n195, n196, n197, n198, 
      n199, n200, n201, n202, n203, n204, n205, n206, n207, n208, n209, n210, 
      n211, n212, n213, n214, n215, n216, n217, n218, n219, n220, n221, n222, 
      n223, n224, n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, 
      n235, n236, n237, n238, n239, n240, n241, n242, n243, n244, n245, n246, 
      n247, n248, n249, n250, n251, n252, n253, n254, n255, n256, n257, n258, 
      n259, n260, n261, n262, n263, n264, n265, n266, n267, n268, n269, n270, 
      n271, n272, n273, n274, n275, n276, n277, n278, n279, n280, n281, n282, 
      n283, n284, n285, n286, n287, n288, n289, n290, n291, n292, n293, n294, 
      n295, n296, n297, n298, n299, n300, n301, n302, n303, n304, n305, n306, 
      n307, n308, n309, n310, n311, n312, n313, n314, n315, n316, n317, n318, 
      n319, n320, n321, n322, n323, n324, n325, n326, n327, n328, n329, n330, 
      n331, n332, n333, n334, n335, n336, n337, n338, n339, n340, n341, n342, 
      n343, n344, n345, n346, n347, n348, n349, n350, n351, n352, n353, n354, 
      n355, n356, n357, n358, n359, n360, n361, n362, n363, n364, n365, n366, 
      n367, n368, n369, n370, n371, n372, n373, n374, n375, n376, n377, n378, 
      n379, n380, n381, n382, n383, n384, n385, n386, n387, n388, n389, n390, 
      n391, n392, n393, n394, n395, n396, n397, n398, n399, n400, n401, n402, 
      n403 : std_logic;

begin
   
   U1 : GTECH_NOT port map( A => n151, Z => n1);
   U2 : GTECH_NOT port map( A => n169, Z => n2);
   U3 : GTECH_NOT port map( A => n175, Z => n3);
   U4 : GTECH_NOT port map( A => n179, Z => n4);
   U5 : GTECH_NOT port map( A => n186, Z => n5);
   U6 : GTECH_NOT port map( A => n194, Z => n6);
   U7 : GTECH_NOT port map( A => n201, Z => n7);
   U8 : GTECH_NOT port map( A => n203, Z => n8);
   U9 : GTECH_NOT port map( A => n210, Z => n9);
   U10 : GTECH_NOT port map( A => n212, Z => n10);
   U11 : GTECH_NOT port map( A => n219, Z => n11);
   U12 : GTECH_NOT port map( A => n221, Z => n12);
   U13 : GTECH_NOT port map( A => n228, Z => n13);
   U14 : GTECH_NOT port map( A => n230, Z => n14);
   U15 : GTECH_NOT port map( A => n237, Z => n15);
   U16 : GTECH_NOT port map( A => n239, Z => n16);
   U17 : GTECH_NOT port map( A => n246, Z => n17);
   U18 : GTECH_NOT port map( A => n248, Z => n18);
   U19 : GTECH_NOT port map( A => n255, Z => n19);
   U20 : GTECH_NOT port map( A => n257, Z => n20);
   U21 : GTECH_NOT port map( A => n264, Z => n21);
   U22 : GTECH_NOT port map( A => n266, Z => n22);
   U23 : GTECH_NOT port map( A => n273, Z => n23);
   U24 : GTECH_NOT port map( A => n275, Z => n24);
   U25 : GTECH_NOT port map( A => n282, Z => n25);
   U26 : GTECH_NOT port map( A => n290, Z => n26);
   U27 : GTECH_NOT port map( A => n297, Z => n27);
   U28 : GTECH_NOT port map( A => n299, Z => n28);
   U29 : GTECH_NOT port map( A => n306, Z => n29);
   U30 : GTECH_NOT port map( A => n308, Z => n30);
   U31 : GTECH_NOT port map( A => n315, Z => n31);
   U32 : GTECH_NOT port map( A => n317, Z => n32);
   U33 : GTECH_NOT port map( A => n324, Z => n33);
   U34 : GTECH_NOT port map( A => n326, Z => n34);
   U35 : GTECH_NOT port map( A => n333, Z => n35);
   U36 : GTECH_NOT port map( A => n335, Z => n36);
   U37 : GTECH_NOT port map( A => n342, Z => n37);
   U38 : GTECH_NOT port map( A => n344, Z => n38);
   U39 : GTECH_NOT port map( A => n351, Z => n39);
   U40 : GTECH_NOT port map( A => n353, Z => n40);
   U41 : GTECH_NOT port map( A => n360, Z => n41);
   U42 : GTECH_NOT port map( A => n362, Z => n42);
   U43 : GTECH_NOT port map( A => n369, Z => n43);
   U44 : GTECH_NOT port map( A => n371, Z => n44);
   U45 : GTECH_NOT port map( A => n129, Z => n45);
   U46 : GTECH_NOT port map( A => n134, Z => n46);
   U47 : GTECH_NOT port map( A => n133, Z => n47);
   U48 : GTECH_NOT port map( A => n140, Z => n48);
   U49 : GTECH_NOT port map( A => n139, Z => n49);
   U50 : GTECH_NOT port map( A => n146, Z => n50);
   U51 : GTECH_NOT port map( A => n145, Z => n51);
   U52 : GTECH_NOT port map( A => A(5), Z => n52);
   U53 : GTECH_NOT port map( A => B(5), Z => n53);
   U54 : GTECH_NOT port map( A => n177, Z => n54);
   U55 : GTECH_NOT port map( A => A(30), Z => n55);
   U56 : GTECH_NOT port map( A => A(29), Z => n56);
   U57 : GTECH_NOT port map( A => B(29), Z => n57);
   U58 : GTECH_NOT port map( A => A(28), Z => n58);
   U59 : GTECH_NOT port map( A => A(27), Z => n59);
   U60 : GTECH_NOT port map( A => B(27), Z => n60);
   U61 : GTECH_NOT port map( A => A(26), Z => n61);
   U62 : GTECH_NOT port map( A => A(25), Z => n62);
   U63 : GTECH_NOT port map( A => B(25), Z => n63);
   U64 : GTECH_NOT port map( A => A(24), Z => n64);
   U65 : GTECH_NOT port map( A => B(24), Z => n65);
   U66 : GTECH_NOT port map( A => A(23), Z => n66);
   U67 : GTECH_NOT port map( A => B(23), Z => n67);
   U68 : GTECH_NOT port map( A => n403, Z => n68);
   U69 : GTECH_NOT port map( A => A(0), Z => n69);
   U70 : GTECH_NOT port map( A => n152, Z => n70);
   U71 : GTECH_NOT port map( A => n158, Z => n71);
   U72 : GTECH_NOT port map( A => n157, Z => n72);
   U73 : GTECH_NOT port map( A => n164, Z => n73);
   U74 : GTECH_NOT port map( A => n163, Z => n74);
   U75 : GTECH_NOT port map( A => n189, Z => n75);
   U76 : GTECH_NOT port map( A => n188, Z => n76);
   U77 : GTECH_NOT port map( A => n286, Z => n77);
   U78 : GTECH_NOT port map( A => A(7), Z => n78);
   U79 : GTECH_NOT port map( A => A(14), Z => n79);
   U80 : GTECH_NOT port map( A => A(21), Z => n80);
   U81 : GTECH_NOT port map( A => A(22), Z => n81);
   U82 : GTECH_NOT port map( A => n128, Z => n82);
   U83 : GTECH_NOT port map( A => A(9), Z => n83);
   U84 : GTECH_NOT port map( A => A(16), Z => n84);
   U85 : GTECH_NOT port map( A => A(17), Z => n85);
   U86 : GTECH_NOT port map( A => A(18), Z => n86);
   U87 : GTECH_NOT port map( A => A(19), Z => n87);
   U88 : GTECH_NOT port map( A => A(20), Z => n88);
   U89 : GTECH_NOT port map( A => A(11), Z => n89);
   U90 : GTECH_NOT port map( A => A(12), Z => n90);
   U91 : GTECH_NOT port map( A => A(13), Z => n91);
   U92 : GTECH_NOT port map( A => n285, Z => n92);
   U93 : GTECH_NOT port map( A => A(1), Z => n93);
   U94 : GTECH_NOT port map( A => B(31), Z => n94);
   U95 : GTECH_NOT port map( A => B(30), Z => n95);
   U96 : GTECH_NOT port map( A => B(28), Z => n96);
   U97 : GTECH_NOT port map( A => B(26), Z => n97);
   U98 : GTECH_NOT port map( A => B(1), Z => n98);
   U99 : GTECH_NOT port map( A => A(2), Z => n99);
   U100 : GTECH_NOT port map( A => B(2), Z => n100);
   U101 : GTECH_NOT port map( A => A(3), Z => n101);
   U102 : GTECH_NOT port map( A => B(3), Z => n102);
   U103 : GTECH_NOT port map( A => A(4), Z => n103);
   U104 : GTECH_NOT port map( A => B(4), Z => n104);
   U105 : GTECH_NOT port map( A => A(6), Z => n105);
   U106 : GTECH_NOT port map( A => B(6), Z => n106);
   U107 : GTECH_NOT port map( A => A(8), Z => n107);
   U108 : GTECH_NOT port map( A => B(8), Z => n108);
   U109 : GTECH_NOT port map( A => A(10), Z => n109);
   U110 : GTECH_NOT port map( A => B(10), Z => n110);
   U111 : GTECH_NOT port map( A => A(15), Z => n111);
   U112 : GTECH_NOT port map( A => B(15), Z => n112);
   U113 : GTECH_NOT port map( A => B(13), Z => n113);
   U114 : GTECH_NOT port map( A => B(12), Z => n114);
   U115 : GTECH_NOT port map( A => B(11), Z => n115);
   U116 : GTECH_NOT port map( A => B(20), Z => n116);
   U117 : GTECH_NOT port map( A => B(19), Z => n117);
   U118 : GTECH_NOT port map( A => B(18), Z => n118);
   U119 : GTECH_NOT port map( A => B(17), Z => n119);
   U120 : GTECH_NOT port map( A => B(16), Z => n120);
   U121 : GTECH_NOT port map( A => B(9), Z => n121);
   U122 : GTECH_NOT port map( A => B(22), Z => n122);
   U123 : GTECH_NOT port map( A => B(21), Z => n123);
   U124 : GTECH_NOT port map( A => B(14), Z => n124);
   U125 : GTECH_NOT port map( A => B(7), Z => n125);
   U126 : GTECH_NOR2 port map( A => n126, B => n127, Z => SUM(9));
   U127 : GTECH_NOR2 port map( A => n45, B => n128, Z => n127);
   U128 : GTECH_NOR2 port map( A => n129, B => n82, Z => n126);
   U129 : GTECH_NOR2 port map( A => n130, B => n131, Z => n128);
   U130 : GTECH_NOR2 port map( A => n121, B => A(9), Z => n131);
   U131 : GTECH_NOR2 port map( A => n83, B => B(9), Z => n130);
   U132 : GTECH_NOR2 port map( A => n132, B => n47, Z => SUM(8));
   U133 : GTECH_NAND2 port map( A => n134, B => n135, Z => n133);
   U134 : GTECH_NOR2 port map( A => n134, B => n135, Z => n132);
   U135 : GTECH_NAND2 port map( A => n136, B => n137, Z => n135);
   U136 : GTECH_NAND2 port map( A => B(8), B => n107, Z => n137);
   U137 : GTECH_NAND2 port map( A => A(8), B => n108, Z => n136);
   U138 : GTECH_NOR2 port map( A => n138, B => n49, Z => SUM(7));
   U139 : GTECH_NAND2 port map( A => n140, B => n141, Z => n139);
   U140 : GTECH_NOR2 port map( A => n140, B => n141, Z => n138);
   U141 : GTECH_NAND2 port map( A => n142, B => n143, Z => n141);
   U142 : GTECH_NAND2 port map( A => B(7), B => n78, Z => n143);
   U143 : GTECH_NAND2 port map( A => A(7), B => n125, Z => n142);
   U144 : GTECH_NOR2 port map( A => n144, B => n51, Z => SUM(6));
   U145 : GTECH_NAND2 port map( A => n146, B => n147, Z => n145);
   U146 : GTECH_NOR2 port map( A => n146, B => n147, Z => n144);
   U147 : GTECH_NAND2 port map( A => n148, B => n149, Z => n147);
   U148 : GTECH_NAND2 port map( A => B(6), B => n105, Z => n149);
   U149 : GTECH_NAND2 port map( A => A(6), B => n106, Z => n148);
   U150 : GTECH_NOR2 port map( A => n150, B => n1, Z => SUM(5));
   U151 : GTECH_NAND2 port map( A => n152, B => n153, Z => n151);
   U152 : GTECH_NOR2 port map( A => n152, B => n153, Z => n150);
   U153 : GTECH_NAND2 port map( A => n154, B => n155, Z => n153);
   U154 : GTECH_NAND2 port map( A => B(5), B => n52, Z => n155);
   U155 : GTECH_NAND2 port map( A => A(5), B => n53, Z => n154);
   U156 : GTECH_NOR2 port map( A => n156, B => n72, Z => SUM(4));
   U157 : GTECH_NAND2 port map( A => n158, B => n159, Z => n157);
   U158 : GTECH_NOR2 port map( A => n158, B => n159, Z => n156);
   U159 : GTECH_NAND2 port map( A => n160, B => n161, Z => n159);
   U160 : GTECH_NAND2 port map( A => B(4), B => n103, Z => n161);
   U161 : GTECH_NAND2 port map( A => A(4), B => n104, Z => n160);
   U162 : GTECH_NOR2 port map( A => n162, B => n74, Z => SUM(3));
   U163 : GTECH_NAND2 port map( A => n164, B => n165, Z => n163);
   U164 : GTECH_NOR2 port map( A => n164, B => n165, Z => n162);
   U165 : GTECH_NAND2 port map( A => n166, B => n167, Z => n165);
   U166 : GTECH_NAND2 port map( A => B(3), B => n101, Z => n167);
   U167 : GTECH_NAND2 port map( A => A(3), B => n102, Z => n166);
   U168 : GTECH_NOR2 port map( A => n168, B => n2, Z => SUM(31));
   U169 : GTECH_NAND2 port map( A => n170, B => n171, Z => n169);
   U170 : GTECH_NOR2 port map( A => n171, B => n170, Z => n168);
   U171 : GTECH_NAND2 port map( A => n172, B => n173, Z => n170);
   U172 : GTECH_NAND2 port map( A => B(30), B => n174, Z => n173);
   U173 : GTECH_NAND2 port map( A => n3, B => n55, Z => n174);
   U174 : GTECH_NAND2 port map( A => A(30), B => n175, Z => n172);
   U175 : GTECH_NAND2 port map( A => n176, B => n54, Z => n171);
   U176 : GTECH_NOR2 port map( A => n94, B => A(31), Z => n177);
   U177 : GTECH_NAND2 port map( A => A(31), B => n94, Z => n176);
   U178 : GTECH_NOR2 port map( A => n178, B => n4, Z => SUM(30));
   U179 : GTECH_NAND2 port map( A => n175, B => n180, Z => n179);
   U180 : GTECH_NOR2 port map( A => n175, B => n180, Z => n178);
   U181 : GTECH_NAND2 port map( A => n181, B => n182, Z => n180);
   U182 : GTECH_NAND2 port map( A => B(30), B => n55, Z => n182);
   U183 : GTECH_NAND2 port map( A => A(30), B => n95, Z => n181);
   U184 : GTECH_NAND2 port map( A => n183, B => n184, Z => n175);
   U185 : GTECH_NAND2 port map( A => B(29), B => n185, Z => n184);
   U186 : GTECH_NAND2 port map( A => n5, B => n56, Z => n185);
   U187 : GTECH_NAND2 port map( A => A(29), B => n186, Z => n183);
   U188 : GTECH_NOR2 port map( A => n187, B => n76, Z => SUM(2));
   U189 : GTECH_NAND2 port map( A => n189, B => n190, Z => n188);
   U190 : GTECH_NOR2 port map( A => n189, B => n190, Z => n187);
   U191 : GTECH_NAND2 port map( A => n191, B => n192, Z => n190);
   U192 : GTECH_NAND2 port map( A => B(2), B => n99, Z => n192);
   U193 : GTECH_NAND2 port map( A => A(2), B => n100, Z => n191);
   U194 : GTECH_NOR2 port map( A => n193, B => n6, Z => SUM(29));
   U195 : GTECH_NAND2 port map( A => n186, B => n195, Z => n194);
   U196 : GTECH_NOR2 port map( A => n186, B => n195, Z => n193);
   U197 : GTECH_NAND2 port map( A => n196, B => n197, Z => n195);
   U198 : GTECH_NAND2 port map( A => B(29), B => n56, Z => n197);
   U199 : GTECH_NAND2 port map( A => A(29), B => n57, Z => n196);
   U200 : GTECH_NAND2 port map( A => n198, B => n199, Z => n186);
   U201 : GTECH_NAND2 port map( A => B(28), B => n200, Z => n199);
   U202 : GTECH_NAND2 port map( A => n7, B => n58, Z => n200);
   U203 : GTECH_NAND2 port map( A => A(28), B => n201, Z => n198);
   U204 : GTECH_NOR2 port map( A => n202, B => n8, Z => SUM(28));
   U205 : GTECH_NAND2 port map( A => n201, B => n204, Z => n203);
   U206 : GTECH_NOR2 port map( A => n201, B => n204, Z => n202);
   U207 : GTECH_NAND2 port map( A => n205, B => n206, Z => n204);
   U208 : GTECH_NAND2 port map( A => B(28), B => n58, Z => n206);
   U209 : GTECH_NAND2 port map( A => A(28), B => n96, Z => n205);
   U210 : GTECH_NAND2 port map( A => n207, B => n208, Z => n201);
   U211 : GTECH_NAND2 port map( A => B(27), B => n209, Z => n208);
   U212 : GTECH_NAND2 port map( A => n9, B => n59, Z => n209);
   U213 : GTECH_NAND2 port map( A => A(27), B => n210, Z => n207);
   U214 : GTECH_NOR2 port map( A => n211, B => n10, Z => SUM(27));
   U215 : GTECH_NAND2 port map( A => n210, B => n213, Z => n212);
   U216 : GTECH_NOR2 port map( A => n210, B => n213, Z => n211);
   U217 : GTECH_NAND2 port map( A => n214, B => n215, Z => n213);
   U218 : GTECH_NAND2 port map( A => B(27), B => n59, Z => n215);
   U219 : GTECH_NAND2 port map( A => A(27), B => n60, Z => n214);
   U220 : GTECH_NAND2 port map( A => n216, B => n217, Z => n210);
   U221 : GTECH_NAND2 port map( A => B(26), B => n218, Z => n217);
   U222 : GTECH_NAND2 port map( A => n11, B => n61, Z => n218);
   U223 : GTECH_NAND2 port map( A => A(26), B => n219, Z => n216);
   U224 : GTECH_NOR2 port map( A => n220, B => n12, Z => SUM(26));
   U225 : GTECH_NAND2 port map( A => n219, B => n222, Z => n221);
   U226 : GTECH_NOR2 port map( A => n219, B => n222, Z => n220);
   U227 : GTECH_NAND2 port map( A => n223, B => n224, Z => n222);
   U228 : GTECH_NAND2 port map( A => B(26), B => n61, Z => n224);
   U229 : GTECH_NAND2 port map( A => A(26), B => n97, Z => n223);
   U230 : GTECH_NAND2 port map( A => n225, B => n226, Z => n219);
   U231 : GTECH_NAND2 port map( A => B(25), B => n227, Z => n226);
   U232 : GTECH_NAND2 port map( A => n13, B => n62, Z => n227);
   U233 : GTECH_NAND2 port map( A => A(25), B => n228, Z => n225);
   U234 : GTECH_NOR2 port map( A => n229, B => n14, Z => SUM(25));
   U235 : GTECH_NAND2 port map( A => n228, B => n231, Z => n230);
   U236 : GTECH_NOR2 port map( A => n228, B => n231, Z => n229);
   U237 : GTECH_NAND2 port map( A => n232, B => n233, Z => n231);
   U238 : GTECH_NAND2 port map( A => B(25), B => n62, Z => n233);
   U239 : GTECH_NAND2 port map( A => A(25), B => n63, Z => n232);
   U240 : GTECH_NAND2 port map( A => n234, B => n235, Z => n228);
   U241 : GTECH_NAND2 port map( A => B(24), B => n236, Z => n235);
   U242 : GTECH_NAND2 port map( A => n15, B => n64, Z => n236);
   U243 : GTECH_NAND2 port map( A => A(24), B => n237, Z => n234);
   U244 : GTECH_NOR2 port map( A => n238, B => n16, Z => SUM(24));
   U245 : GTECH_NAND2 port map( A => n237, B => n240, Z => n239);
   U246 : GTECH_NOR2 port map( A => n237, B => n240, Z => n238);
   U247 : GTECH_NAND2 port map( A => n241, B => n242, Z => n240);
   U248 : GTECH_NAND2 port map( A => B(24), B => n64, Z => n242);
   U249 : GTECH_NAND2 port map( A => A(24), B => n65, Z => n241);
   U250 : GTECH_NAND2 port map( A => n243, B => n244, Z => n237);
   U251 : GTECH_NAND2 port map( A => B(23), B => n245, Z => n244);
   U252 : GTECH_NAND2 port map( A => n17, B => n66, Z => n245);
   U253 : GTECH_NAND2 port map( A => A(23), B => n246, Z => n243);
   U254 : GTECH_NOR2 port map( A => n247, B => n18, Z => SUM(23));
   U255 : GTECH_NAND2 port map( A => n246, B => n249, Z => n248);
   U256 : GTECH_NOR2 port map( A => n246, B => n249, Z => n247);
   U257 : GTECH_NAND2 port map( A => n250, B => n251, Z => n249);
   U258 : GTECH_NAND2 port map( A => B(23), B => n66, Z => n251);
   U259 : GTECH_NAND2 port map( A => A(23), B => n67, Z => n250);
   U260 : GTECH_NAND2 port map( A => n252, B => n253, Z => n246);
   U261 : GTECH_NAND2 port map( A => B(22), B => n254, Z => n253);
   U262 : GTECH_NAND2 port map( A => n19, B => n81, Z => n254);
   U263 : GTECH_NAND2 port map( A => A(22), B => n255, Z => n252);
   U264 : GTECH_NOR2 port map( A => n256, B => n20, Z => SUM(22));
   U265 : GTECH_NAND2 port map( A => n255, B => n258, Z => n257);
   U266 : GTECH_NOR2 port map( A => n255, B => n258, Z => n256);
   U267 : GTECH_NAND2 port map( A => n259, B => n260, Z => n258);
   U268 : GTECH_NAND2 port map( A => B(22), B => n81, Z => n260);
   U269 : GTECH_NAND2 port map( A => A(22), B => n122, Z => n259);
   U270 : GTECH_NAND2 port map( A => n261, B => n262, Z => n255);
   U271 : GTECH_NAND2 port map( A => B(21), B => n263, Z => n262);
   U272 : GTECH_NAND2 port map( A => n21, B => n80, Z => n263);
   U273 : GTECH_NAND2 port map( A => A(21), B => n264, Z => n261);
   U274 : GTECH_NOR2 port map( A => n265, B => n22, Z => SUM(21));
   U275 : GTECH_NAND2 port map( A => n264, B => n267, Z => n266);
   U276 : GTECH_NOR2 port map( A => n264, B => n267, Z => n265);
   U277 : GTECH_NAND2 port map( A => n268, B => n269, Z => n267);
   U278 : GTECH_NAND2 port map( A => B(21), B => n80, Z => n269);
   U279 : GTECH_NAND2 port map( A => A(21), B => n123, Z => n268);
   U280 : GTECH_NAND2 port map( A => n270, B => n271, Z => n264);
   U281 : GTECH_NAND2 port map( A => B(20), B => n272, Z => n271);
   U282 : GTECH_NAND2 port map( A => n23, B => n88, Z => n272);
   U283 : GTECH_NAND2 port map( A => A(20), B => n273, Z => n270);
   U284 : GTECH_NOR2 port map( A => n274, B => n24, Z => SUM(20));
   U285 : GTECH_NAND2 port map( A => n273, B => n276, Z => n275);
   U286 : GTECH_NOR2 port map( A => n273, B => n276, Z => n274);
   U287 : GTECH_NAND2 port map( A => n277, B => n278, Z => n276);
   U288 : GTECH_NAND2 port map( A => B(20), B => n88, Z => n278);
   U289 : GTECH_NAND2 port map( A => A(20), B => n116, Z => n277);
   U290 : GTECH_NAND2 port map( A => n279, B => n280, Z => n273);
   U291 : GTECH_NAND2 port map( A => B(19), B => n281, Z => n280);
   U292 : GTECH_NAND2 port map( A => n25, B => n87, Z => n281);
   U293 : GTECH_NAND2 port map( A => A(19), B => n282, Z => n279);
   U294 : GTECH_NAND2 port map( A => n283, B => n284, Z => SUM(1));
   U295 : GTECH_NAND2 port map( A => n285, B => n77, Z => n284);
   U296 : GTECH_NAND2 port map( A => n92, B => n286, Z => n283);
   U297 : GTECH_NOR2 port map( A => n287, B => n288, Z => n285);
   U298 : GTECH_NOR2 port map( A => n98, B => A(1), Z => n288);
   U299 : GTECH_NOR2 port map( A => n93, B => B(1), Z => n287);
   U300 : GTECH_NOR2 port map( A => n289, B => n26, Z => SUM(19));
   U301 : GTECH_NAND2 port map( A => n282, B => n291, Z => n290);
   U302 : GTECH_NOR2 port map( A => n282, B => n291, Z => n289);
   U303 : GTECH_NAND2 port map( A => n292, B => n293, Z => n291);
   U304 : GTECH_NAND2 port map( A => B(19), B => n87, Z => n293);
   U305 : GTECH_NAND2 port map( A => A(19), B => n117, Z => n292);
   U306 : GTECH_NAND2 port map( A => n294, B => n295, Z => n282);
   U307 : GTECH_NAND2 port map( A => B(18), B => n296, Z => n295);
   U308 : GTECH_NAND2 port map( A => n27, B => n86, Z => n296);
   U309 : GTECH_NAND2 port map( A => A(18), B => n297, Z => n294);
   U310 : GTECH_NOR2 port map( A => n298, B => n28, Z => SUM(18));
   U311 : GTECH_NAND2 port map( A => n297, B => n300, Z => n299);
   U312 : GTECH_NOR2 port map( A => n297, B => n300, Z => n298);
   U313 : GTECH_NAND2 port map( A => n301, B => n302, Z => n300);
   U314 : GTECH_NAND2 port map( A => B(18), B => n86, Z => n302);
   U315 : GTECH_NAND2 port map( A => A(18), B => n118, Z => n301);
   U316 : GTECH_NAND2 port map( A => n303, B => n304, Z => n297);
   U317 : GTECH_NAND2 port map( A => B(17), B => n305, Z => n304);
   U318 : GTECH_NAND2 port map( A => n29, B => n85, Z => n305);
   U319 : GTECH_NAND2 port map( A => A(17), B => n306, Z => n303);
   U320 : GTECH_NOR2 port map( A => n307, B => n30, Z => SUM(17));
   U321 : GTECH_NAND2 port map( A => n306, B => n309, Z => n308);
   U322 : GTECH_NOR2 port map( A => n306, B => n309, Z => n307);
   U323 : GTECH_NAND2 port map( A => n310, B => n311, Z => n309);
   U324 : GTECH_NAND2 port map( A => B(17), B => n85, Z => n311);
   U325 : GTECH_NAND2 port map( A => A(17), B => n119, Z => n310);
   U326 : GTECH_NAND2 port map( A => n312, B => n313, Z => n306);
   U327 : GTECH_NAND2 port map( A => B(16), B => n314, Z => n313);
   U328 : GTECH_NAND2 port map( A => n31, B => n84, Z => n314);
   U329 : GTECH_NAND2 port map( A => A(16), B => n315, Z => n312);
   U330 : GTECH_NOR2 port map( A => n316, B => n32, Z => SUM(16));
   U331 : GTECH_NAND2 port map( A => n315, B => n318, Z => n317);
   U332 : GTECH_NOR2 port map( A => n315, B => n318, Z => n316);
   U333 : GTECH_NAND2 port map( A => n319, B => n320, Z => n318);
   U334 : GTECH_NAND2 port map( A => B(16), B => n84, Z => n320);
   U335 : GTECH_NAND2 port map( A => A(16), B => n120, Z => n319);
   U336 : GTECH_NAND2 port map( A => n321, B => n322, Z => n315);
   U337 : GTECH_NAND2 port map( A => B(15), B => n323, Z => n322);
   U338 : GTECH_NAND2 port map( A => n33, B => n111, Z => n323);
   U339 : GTECH_NAND2 port map( A => A(15), B => n324, Z => n321);
   U340 : GTECH_NOR2 port map( A => n325, B => n34, Z => SUM(15));
   U341 : GTECH_NAND2 port map( A => n324, B => n327, Z => n326);
   U342 : GTECH_NOR2 port map( A => n324, B => n327, Z => n325);
   U343 : GTECH_NAND2 port map( A => n328, B => n329, Z => n327);
   U344 : GTECH_NAND2 port map( A => B(15), B => n111, Z => n329);
   U345 : GTECH_NAND2 port map( A => A(15), B => n112, Z => n328);
   U346 : GTECH_NAND2 port map( A => n330, B => n331, Z => n324);
   U347 : GTECH_NAND2 port map( A => B(14), B => n332, Z => n331);
   U348 : GTECH_NAND2 port map( A => n35, B => n79, Z => n332);
   U349 : GTECH_NAND2 port map( A => A(14), B => n333, Z => n330);
   U350 : GTECH_NOR2 port map( A => n334, B => n36, Z => SUM(14));
   U351 : GTECH_NAND2 port map( A => n333, B => n336, Z => n335);
   U352 : GTECH_NOR2 port map( A => n333, B => n336, Z => n334);
   U353 : GTECH_NAND2 port map( A => n337, B => n338, Z => n336);
   U354 : GTECH_NAND2 port map( A => B(14), B => n79, Z => n338);
   U355 : GTECH_NAND2 port map( A => A(14), B => n124, Z => n337);
   U356 : GTECH_NAND2 port map( A => n339, B => n340, Z => n333);
   U357 : GTECH_NAND2 port map( A => B(13), B => n341, Z => n340);
   U358 : GTECH_NAND2 port map( A => n37, B => n91, Z => n341);
   U359 : GTECH_NAND2 port map( A => A(13), B => n342, Z => n339);
   U360 : GTECH_NOR2 port map( A => n343, B => n38, Z => SUM(13));
   U361 : GTECH_NAND2 port map( A => n342, B => n345, Z => n344);
   U362 : GTECH_NOR2 port map( A => n342, B => n345, Z => n343);
   U363 : GTECH_NAND2 port map( A => n346, B => n347, Z => n345);
   U364 : GTECH_NAND2 port map( A => B(13), B => n91, Z => n347);
   U365 : GTECH_NAND2 port map( A => A(13), B => n113, Z => n346);
   U366 : GTECH_NAND2 port map( A => n348, B => n349, Z => n342);
   U367 : GTECH_NAND2 port map( A => B(12), B => n350, Z => n349);
   U368 : GTECH_NAND2 port map( A => n39, B => n90, Z => n350);
   U369 : GTECH_NAND2 port map( A => A(12), B => n351, Z => n348);
   U370 : GTECH_NOR2 port map( A => n352, B => n40, Z => SUM(12));
   U371 : GTECH_NAND2 port map( A => n351, B => n354, Z => n353);
   U372 : GTECH_NOR2 port map( A => n351, B => n354, Z => n352);
   U373 : GTECH_NAND2 port map( A => n355, B => n356, Z => n354);
   U374 : GTECH_NAND2 port map( A => B(12), B => n90, Z => n356);
   U375 : GTECH_NAND2 port map( A => A(12), B => n114, Z => n355);
   U376 : GTECH_NAND2 port map( A => n357, B => n358, Z => n351);
   U377 : GTECH_NAND2 port map( A => B(11), B => n359, Z => n358);
   U378 : GTECH_NAND2 port map( A => n41, B => n89, Z => n359);
   U379 : GTECH_NAND2 port map( A => A(11), B => n360, Z => n357);
   U380 : GTECH_NOR2 port map( A => n361, B => n42, Z => SUM(11));
   U381 : GTECH_NAND2 port map( A => n360, B => n363, Z => n362);
   U382 : GTECH_NOR2 port map( A => n360, B => n363, Z => n361);
   U383 : GTECH_NAND2 port map( A => n364, B => n365, Z => n363);
   U384 : GTECH_NAND2 port map( A => B(11), B => n89, Z => n365);
   U385 : GTECH_NAND2 port map( A => A(11), B => n115, Z => n364);
   U386 : GTECH_NAND2 port map( A => n366, B => n367, Z => n360);
   U387 : GTECH_NAND2 port map( A => B(10), B => n368, Z => n367);
   U388 : GTECH_NAND2 port map( A => n43, B => n109, Z => n368);
   U389 : GTECH_NAND2 port map( A => A(10), B => n369, Z => n366);
   U390 : GTECH_NOR2 port map( A => n370, B => n44, Z => SUM(10));
   U391 : GTECH_NAND2 port map( A => n369, B => n372, Z => n371);
   U392 : GTECH_NOR2 port map( A => n369, B => n372, Z => n370);
   U393 : GTECH_NAND2 port map( A => n373, B => n374, Z => n372);
   U394 : GTECH_NAND2 port map( A => B(10), B => n109, Z => n374);
   U395 : GTECH_NAND2 port map( A => A(10), B => n110, Z => n373);
   U396 : GTECH_NAND2 port map( A => n375, B => n376, Z => n369);
   U397 : GTECH_NAND2 port map( A => B(9), B => n377, Z => n376);
   U398 : GTECH_NAND2 port map( A => n45, B => n83, Z => n377);
   U399 : GTECH_NAND2 port map( A => A(9), B => n129, Z => n375);
   U400 : GTECH_NAND2 port map( A => n378, B => n379, Z => n129);
   U401 : GTECH_NAND2 port map( A => B(8), B => n380, Z => n379);
   U402 : GTECH_NAND2 port map( A => n46, B => n107, Z => n380);
   U403 : GTECH_NAND2 port map( A => A(8), B => n134, Z => n378);
   U404 : GTECH_NAND2 port map( A => n381, B => n382, Z => n134);
   U405 : GTECH_NAND2 port map( A => B(7), B => n383, Z => n382);
   U406 : GTECH_NAND2 port map( A => n48, B => n78, Z => n383);
   U407 : GTECH_NAND2 port map( A => A(7), B => n140, Z => n381);
   U408 : GTECH_NAND2 port map( A => n384, B => n385, Z => n140);
   U409 : GTECH_NAND2 port map( A => B(6), B => n386, Z => n385);
   U410 : GTECH_NAND2 port map( A => n50, B => n105, Z => n386);
   U411 : GTECH_NAND2 port map( A => A(6), B => n146, Z => n384);
   U412 : GTECH_NAND2 port map( A => n387, B => n388, Z => n146);
   U413 : GTECH_NAND2 port map( A => B(5), B => n389, Z => n388);
   U414 : GTECH_NAND2 port map( A => n70, B => n52, Z => n389);
   U415 : GTECH_NAND2 port map( A => A(5), B => n152, Z => n387);
   U416 : GTECH_NAND2 port map( A => n390, B => n391, Z => n152);
   U417 : GTECH_NAND2 port map( A => B(4), B => n392, Z => n391);
   U418 : GTECH_NAND2 port map( A => n71, B => n103, Z => n392);
   U419 : GTECH_NAND2 port map( A => A(4), B => n158, Z => n390);
   U420 : GTECH_NAND2 port map( A => n393, B => n394, Z => n158);
   U421 : GTECH_NAND2 port map( A => B(3), B => n395, Z => n394);
   U422 : GTECH_NAND2 port map( A => n73, B => n101, Z => n395);
   U423 : GTECH_NAND2 port map( A => A(3), B => n164, Z => n393);
   U424 : GTECH_NAND2 port map( A => n396, B => n397, Z => n164);
   U425 : GTECH_NAND2 port map( A => B(2), B => n398, Z => n397);
   U426 : GTECH_NAND2 port map( A => n75, B => n99, Z => n398);
   U427 : GTECH_NAND2 port map( A => A(2), B => n189, Z => n396);
   U428 : GTECH_NAND2 port map( A => n399, B => n400, Z => n189);
   U429 : GTECH_NAND2 port map( A => B(1), B => n401, Z => n400);
   U430 : GTECH_NAND2 port map( A => n93, B => n286, Z => n401);
   U431 : GTECH_NAND2 port map( A => A(1), B => n77, Z => n399);
   U432 : GTECH_NAND2 port map( A => B(0), B => A(0), Z => n286);
   U433 : GTECH_NAND2 port map( A => n68, B => n402, Z => SUM(0));
   U434 : GTECH_NAND2 port map( A => B(0), B => n69, Z => n402);
   U435 : GTECH_NOR2 port map( A => n69, B => B(0), Z => n403);

end SYN_rpl;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_zpu_core.all;

entity zpu_core_DW01_add_2 is

   port( A, B : in std_logic_vector (31 downto 0);  CI : in std_logic;  SUM : 
         out std_logic_vector (31 downto 0);  CO : out std_logic);

end zpu_core_DW01_add_2;

architecture SYN_rpl of zpu_core_DW01_add_2 is

   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   signal n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16
      , n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, 
      n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45
      , n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, 
      n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n73, n74
      , n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86, n87, n88, 
      n89, n90, n91, n92, n93, n94, n95, n96, n97, n98, n99, n100, n101, n102, 
      n103, n104, n105, n106, n107, n108, n109, n110, n111, n112, n113, n114, 
      n115, n116, n117, n118, n119, n120, n121, n122, n123, n124, n125, n126, 
      n127, n128, n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, 
      n139, n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150, 
      n151, n152, n153, n154, n155, n156, n157, n158, n159, n160, n161, n162, 
      n163, n164, n165, n166, n167, n168, n169, n170, n171, n172, n173, n174, 
      n175, n176, n177, n178, n179, n180, n181, n182, n183, n184, n185, n186, 
      n187, n188, n189, n190, n191, n192, n193, n194, n195, n196, n197, n198, 
      n199, n200, n201, n202, n203, n204, n205, n206, n207, n208, n209, n210, 
      n211, n212, n213, n214, n215, n216, n217, n218, n219, n220, n221, n222, 
      n223, n224, n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, 
      n235, n236, n237, n238, n239, n240, n241, n242, n243, n244, n245, n246, 
      n247, n248, n249, n250, n251, n252, n253, n254, n255, n256, n257, n258, 
      n259, n260, n261, n262, n263, n264, n265, n266, n267, n268, n269, n270, 
      n271, n272, n273, n274, n275, n276, n277, n278, n279, n280, n281, n282, 
      n283, n284, n285, n286, n287, n288, n289, n290, n291, n292, n293, n294, 
      n295, n296, n297, n298, n299, n300, n301, n302, n303, n304, n305, n306, 
      n307, n308, n309, n310, n311, n312, n313, n314, n315, n316, n317, n318, 
      n319, n320, n321, n322, n323, n324, n325, n326, n327, n328, n329, n330, 
      n331, n332, n333, n334, n335, n336, n337, n338, n339, n340, n341, n342, 
      n343, n344, n345, n346, n347, n348, n349, n350, n351, n352, n353, n354, 
      n355, n356, n357, n358, n359, n360, n361, n362, n363, n364, n365, n366, 
      n367, n368, n369, n370, n371, n372, n373, n374, n375, n376, n377, n378, 
      n379, n380, n381, n382, n383, n384, n385, n386, n387, n388, n389, n390, 
      n391, n392, n393, n394, n395, n396, n397, n398, n399, n400, n401, n402, 
      n403 : std_logic;

begin
   
   U1 : GTECH_NOT port map( A => n151, Z => n1);
   U2 : GTECH_NOT port map( A => n169, Z => n2);
   U3 : GTECH_NOT port map( A => n175, Z => n3);
   U4 : GTECH_NOT port map( A => n179, Z => n4);
   U5 : GTECH_NOT port map( A => n186, Z => n5);
   U6 : GTECH_NOT port map( A => n194, Z => n6);
   U7 : GTECH_NOT port map( A => n201, Z => n7);
   U8 : GTECH_NOT port map( A => n203, Z => n8);
   U9 : GTECH_NOT port map( A => n210, Z => n9);
   U10 : GTECH_NOT port map( A => n212, Z => n10);
   U11 : GTECH_NOT port map( A => n219, Z => n11);
   U12 : GTECH_NOT port map( A => n221, Z => n12);
   U13 : GTECH_NOT port map( A => n228, Z => n13);
   U14 : GTECH_NOT port map( A => n230, Z => n14);
   U15 : GTECH_NOT port map( A => n237, Z => n15);
   U16 : GTECH_NOT port map( A => n239, Z => n16);
   U17 : GTECH_NOT port map( A => n246, Z => n17);
   U18 : GTECH_NOT port map( A => n248, Z => n18);
   U19 : GTECH_NOT port map( A => n255, Z => n19);
   U20 : GTECH_NOT port map( A => n257, Z => n20);
   U21 : GTECH_NOT port map( A => n264, Z => n21);
   U22 : GTECH_NOT port map( A => n266, Z => n22);
   U23 : GTECH_NOT port map( A => n273, Z => n23);
   U24 : GTECH_NOT port map( A => n275, Z => n24);
   U25 : GTECH_NOT port map( A => n282, Z => n25);
   U26 : GTECH_NOT port map( A => n290, Z => n26);
   U27 : GTECH_NOT port map( A => n297, Z => n27);
   U28 : GTECH_NOT port map( A => n299, Z => n28);
   U29 : GTECH_NOT port map( A => n306, Z => n29);
   U30 : GTECH_NOT port map( A => n308, Z => n30);
   U31 : GTECH_NOT port map( A => n315, Z => n31);
   U32 : GTECH_NOT port map( A => n317, Z => n32);
   U33 : GTECH_NOT port map( A => n324, Z => n33);
   U34 : GTECH_NOT port map( A => n326, Z => n34);
   U35 : GTECH_NOT port map( A => n333, Z => n35);
   U36 : GTECH_NOT port map( A => n335, Z => n36);
   U37 : GTECH_NOT port map( A => n342, Z => n37);
   U38 : GTECH_NOT port map( A => n344, Z => n38);
   U39 : GTECH_NOT port map( A => n351, Z => n39);
   U40 : GTECH_NOT port map( A => n353, Z => n40);
   U41 : GTECH_NOT port map( A => n360, Z => n41);
   U42 : GTECH_NOT port map( A => n362, Z => n42);
   U43 : GTECH_NOT port map( A => n369, Z => n43);
   U44 : GTECH_NOT port map( A => n371, Z => n44);
   U45 : GTECH_NOT port map( A => n129, Z => n45);
   U46 : GTECH_NOT port map( A => n134, Z => n46);
   U47 : GTECH_NOT port map( A => n133, Z => n47);
   U48 : GTECH_NOT port map( A => n140, Z => n48);
   U49 : GTECH_NOT port map( A => n139, Z => n49);
   U50 : GTECH_NOT port map( A => n146, Z => n50);
   U51 : GTECH_NOT port map( A => n145, Z => n51);
   U52 : GTECH_NOT port map( A => A(5), Z => n52);
   U53 : GTECH_NOT port map( A => B(5), Z => n53);
   U54 : GTECH_NOT port map( A => n177, Z => n54);
   U55 : GTECH_NOT port map( A => A(30), Z => n55);
   U56 : GTECH_NOT port map( A => A(29), Z => n56);
   U57 : GTECH_NOT port map( A => B(29), Z => n57);
   U58 : GTECH_NOT port map( A => A(28), Z => n58);
   U59 : GTECH_NOT port map( A => A(27), Z => n59);
   U60 : GTECH_NOT port map( A => B(27), Z => n60);
   U61 : GTECH_NOT port map( A => A(26), Z => n61);
   U62 : GTECH_NOT port map( A => A(25), Z => n62);
   U63 : GTECH_NOT port map( A => B(25), Z => n63);
   U64 : GTECH_NOT port map( A => A(24), Z => n64);
   U65 : GTECH_NOT port map( A => B(24), Z => n65);
   U66 : GTECH_NOT port map( A => A(23), Z => n66);
   U67 : GTECH_NOT port map( A => B(23), Z => n67);
   U68 : GTECH_NOT port map( A => n403, Z => n68);
   U69 : GTECH_NOT port map( A => A(0), Z => n69);
   U70 : GTECH_NOT port map( A => n152, Z => n70);
   U71 : GTECH_NOT port map( A => n158, Z => n71);
   U72 : GTECH_NOT port map( A => n157, Z => n72);
   U73 : GTECH_NOT port map( A => n164, Z => n73);
   U74 : GTECH_NOT port map( A => n163, Z => n74);
   U75 : GTECH_NOT port map( A => n189, Z => n75);
   U76 : GTECH_NOT port map( A => n188, Z => n76);
   U77 : GTECH_NOT port map( A => n286, Z => n77);
   U78 : GTECH_NOT port map( A => A(7), Z => n78);
   U79 : GTECH_NOT port map( A => A(14), Z => n79);
   U80 : GTECH_NOT port map( A => A(21), Z => n80);
   U81 : GTECH_NOT port map( A => A(22), Z => n81);
   U82 : GTECH_NOT port map( A => n128, Z => n82);
   U83 : GTECH_NOT port map( A => A(9), Z => n83);
   U84 : GTECH_NOT port map( A => A(16), Z => n84);
   U85 : GTECH_NOT port map( A => A(17), Z => n85);
   U86 : GTECH_NOT port map( A => A(18), Z => n86);
   U87 : GTECH_NOT port map( A => A(19), Z => n87);
   U88 : GTECH_NOT port map( A => A(20), Z => n88);
   U89 : GTECH_NOT port map( A => A(11), Z => n89);
   U90 : GTECH_NOT port map( A => A(12), Z => n90);
   U91 : GTECH_NOT port map( A => A(13), Z => n91);
   U92 : GTECH_NOT port map( A => n285, Z => n92);
   U93 : GTECH_NOT port map( A => A(1), Z => n93);
   U94 : GTECH_NOT port map( A => B(31), Z => n94);
   U95 : GTECH_NOT port map( A => B(30), Z => n95);
   U96 : GTECH_NOT port map( A => B(28), Z => n96);
   U97 : GTECH_NOT port map( A => B(26), Z => n97);
   U98 : GTECH_NOT port map( A => B(1), Z => n98);
   U99 : GTECH_NOT port map( A => A(2), Z => n99);
   U100 : GTECH_NOT port map( A => B(2), Z => n100);
   U101 : GTECH_NOT port map( A => A(3), Z => n101);
   U102 : GTECH_NOT port map( A => B(3), Z => n102);
   U103 : GTECH_NOT port map( A => A(4), Z => n103);
   U104 : GTECH_NOT port map( A => B(4), Z => n104);
   U105 : GTECH_NOT port map( A => A(6), Z => n105);
   U106 : GTECH_NOT port map( A => B(6), Z => n106);
   U107 : GTECH_NOT port map( A => A(8), Z => n107);
   U108 : GTECH_NOT port map( A => B(8), Z => n108);
   U109 : GTECH_NOT port map( A => A(10), Z => n109);
   U110 : GTECH_NOT port map( A => B(10), Z => n110);
   U111 : GTECH_NOT port map( A => A(15), Z => n111);
   U112 : GTECH_NOT port map( A => B(15), Z => n112);
   U113 : GTECH_NOT port map( A => B(13), Z => n113);
   U114 : GTECH_NOT port map( A => B(12), Z => n114);
   U115 : GTECH_NOT port map( A => B(11), Z => n115);
   U116 : GTECH_NOT port map( A => B(20), Z => n116);
   U117 : GTECH_NOT port map( A => B(19), Z => n117);
   U118 : GTECH_NOT port map( A => B(18), Z => n118);
   U119 : GTECH_NOT port map( A => B(17), Z => n119);
   U120 : GTECH_NOT port map( A => B(16), Z => n120);
   U121 : GTECH_NOT port map( A => B(9), Z => n121);
   U122 : GTECH_NOT port map( A => B(22), Z => n122);
   U123 : GTECH_NOT port map( A => B(21), Z => n123);
   U124 : GTECH_NOT port map( A => B(14), Z => n124);
   U125 : GTECH_NOT port map( A => B(7), Z => n125);
   U126 : GTECH_NOR2 port map( A => n126, B => n127, Z => SUM(9));
   U127 : GTECH_NOR2 port map( A => n45, B => n128, Z => n127);
   U128 : GTECH_NOR2 port map( A => n129, B => n82, Z => n126);
   U129 : GTECH_NOR2 port map( A => n130, B => n131, Z => n128);
   U130 : GTECH_NOR2 port map( A => n121, B => A(9), Z => n131);
   U131 : GTECH_NOR2 port map( A => n83, B => B(9), Z => n130);
   U132 : GTECH_NOR2 port map( A => n132, B => n47, Z => SUM(8));
   U133 : GTECH_NAND2 port map( A => n134, B => n135, Z => n133);
   U134 : GTECH_NOR2 port map( A => n134, B => n135, Z => n132);
   U135 : GTECH_NAND2 port map( A => n136, B => n137, Z => n135);
   U136 : GTECH_NAND2 port map( A => B(8), B => n107, Z => n137);
   U137 : GTECH_NAND2 port map( A => A(8), B => n108, Z => n136);
   U138 : GTECH_NOR2 port map( A => n138, B => n49, Z => SUM(7));
   U139 : GTECH_NAND2 port map( A => n140, B => n141, Z => n139);
   U140 : GTECH_NOR2 port map( A => n140, B => n141, Z => n138);
   U141 : GTECH_NAND2 port map( A => n142, B => n143, Z => n141);
   U142 : GTECH_NAND2 port map( A => B(7), B => n78, Z => n143);
   U143 : GTECH_NAND2 port map( A => A(7), B => n125, Z => n142);
   U144 : GTECH_NOR2 port map( A => n144, B => n51, Z => SUM(6));
   U145 : GTECH_NAND2 port map( A => n146, B => n147, Z => n145);
   U146 : GTECH_NOR2 port map( A => n146, B => n147, Z => n144);
   U147 : GTECH_NAND2 port map( A => n148, B => n149, Z => n147);
   U148 : GTECH_NAND2 port map( A => B(6), B => n105, Z => n149);
   U149 : GTECH_NAND2 port map( A => A(6), B => n106, Z => n148);
   U150 : GTECH_NOR2 port map( A => n150, B => n1, Z => SUM(5));
   U151 : GTECH_NAND2 port map( A => n152, B => n153, Z => n151);
   U152 : GTECH_NOR2 port map( A => n152, B => n153, Z => n150);
   U153 : GTECH_NAND2 port map( A => n154, B => n155, Z => n153);
   U154 : GTECH_NAND2 port map( A => B(5), B => n52, Z => n155);
   U155 : GTECH_NAND2 port map( A => A(5), B => n53, Z => n154);
   U156 : GTECH_NOR2 port map( A => n156, B => n72, Z => SUM(4));
   U157 : GTECH_NAND2 port map( A => n158, B => n159, Z => n157);
   U158 : GTECH_NOR2 port map( A => n158, B => n159, Z => n156);
   U159 : GTECH_NAND2 port map( A => n160, B => n161, Z => n159);
   U160 : GTECH_NAND2 port map( A => B(4), B => n103, Z => n161);
   U161 : GTECH_NAND2 port map( A => A(4), B => n104, Z => n160);
   U162 : GTECH_NOR2 port map( A => n162, B => n74, Z => SUM(3));
   U163 : GTECH_NAND2 port map( A => n164, B => n165, Z => n163);
   U164 : GTECH_NOR2 port map( A => n164, B => n165, Z => n162);
   U165 : GTECH_NAND2 port map( A => n166, B => n167, Z => n165);
   U166 : GTECH_NAND2 port map( A => B(3), B => n101, Z => n167);
   U167 : GTECH_NAND2 port map( A => A(3), B => n102, Z => n166);
   U168 : GTECH_NOR2 port map( A => n168, B => n2, Z => SUM(31));
   U169 : GTECH_NAND2 port map( A => n170, B => n171, Z => n169);
   U170 : GTECH_NOR2 port map( A => n171, B => n170, Z => n168);
   U171 : GTECH_NAND2 port map( A => n172, B => n173, Z => n170);
   U172 : GTECH_NAND2 port map( A => B(30), B => n174, Z => n173);
   U173 : GTECH_NAND2 port map( A => n3, B => n55, Z => n174);
   U174 : GTECH_NAND2 port map( A => A(30), B => n175, Z => n172);
   U175 : GTECH_NAND2 port map( A => n176, B => n54, Z => n171);
   U176 : GTECH_NOR2 port map( A => n94, B => A(31), Z => n177);
   U177 : GTECH_NAND2 port map( A => A(31), B => n94, Z => n176);
   U178 : GTECH_NOR2 port map( A => n178, B => n4, Z => SUM(30));
   U179 : GTECH_NAND2 port map( A => n175, B => n180, Z => n179);
   U180 : GTECH_NOR2 port map( A => n175, B => n180, Z => n178);
   U181 : GTECH_NAND2 port map( A => n181, B => n182, Z => n180);
   U182 : GTECH_NAND2 port map( A => B(30), B => n55, Z => n182);
   U183 : GTECH_NAND2 port map( A => A(30), B => n95, Z => n181);
   U184 : GTECH_NAND2 port map( A => n183, B => n184, Z => n175);
   U185 : GTECH_NAND2 port map( A => B(29), B => n185, Z => n184);
   U186 : GTECH_NAND2 port map( A => n5, B => n56, Z => n185);
   U187 : GTECH_NAND2 port map( A => A(29), B => n186, Z => n183);
   U188 : GTECH_NOR2 port map( A => n187, B => n76, Z => SUM(2));
   U189 : GTECH_NAND2 port map( A => n189, B => n190, Z => n188);
   U190 : GTECH_NOR2 port map( A => n189, B => n190, Z => n187);
   U191 : GTECH_NAND2 port map( A => n191, B => n192, Z => n190);
   U192 : GTECH_NAND2 port map( A => B(2), B => n99, Z => n192);
   U193 : GTECH_NAND2 port map( A => A(2), B => n100, Z => n191);
   U194 : GTECH_NOR2 port map( A => n193, B => n6, Z => SUM(29));
   U195 : GTECH_NAND2 port map( A => n186, B => n195, Z => n194);
   U196 : GTECH_NOR2 port map( A => n186, B => n195, Z => n193);
   U197 : GTECH_NAND2 port map( A => n196, B => n197, Z => n195);
   U198 : GTECH_NAND2 port map( A => B(29), B => n56, Z => n197);
   U199 : GTECH_NAND2 port map( A => A(29), B => n57, Z => n196);
   U200 : GTECH_NAND2 port map( A => n198, B => n199, Z => n186);
   U201 : GTECH_NAND2 port map( A => B(28), B => n200, Z => n199);
   U202 : GTECH_NAND2 port map( A => n7, B => n58, Z => n200);
   U203 : GTECH_NAND2 port map( A => A(28), B => n201, Z => n198);
   U204 : GTECH_NOR2 port map( A => n202, B => n8, Z => SUM(28));
   U205 : GTECH_NAND2 port map( A => n201, B => n204, Z => n203);
   U206 : GTECH_NOR2 port map( A => n201, B => n204, Z => n202);
   U207 : GTECH_NAND2 port map( A => n205, B => n206, Z => n204);
   U208 : GTECH_NAND2 port map( A => B(28), B => n58, Z => n206);
   U209 : GTECH_NAND2 port map( A => A(28), B => n96, Z => n205);
   U210 : GTECH_NAND2 port map( A => n207, B => n208, Z => n201);
   U211 : GTECH_NAND2 port map( A => B(27), B => n209, Z => n208);
   U212 : GTECH_NAND2 port map( A => n9, B => n59, Z => n209);
   U213 : GTECH_NAND2 port map( A => A(27), B => n210, Z => n207);
   U214 : GTECH_NOR2 port map( A => n211, B => n10, Z => SUM(27));
   U215 : GTECH_NAND2 port map( A => n210, B => n213, Z => n212);
   U216 : GTECH_NOR2 port map( A => n210, B => n213, Z => n211);
   U217 : GTECH_NAND2 port map( A => n214, B => n215, Z => n213);
   U218 : GTECH_NAND2 port map( A => B(27), B => n59, Z => n215);
   U219 : GTECH_NAND2 port map( A => A(27), B => n60, Z => n214);
   U220 : GTECH_NAND2 port map( A => n216, B => n217, Z => n210);
   U221 : GTECH_NAND2 port map( A => B(26), B => n218, Z => n217);
   U222 : GTECH_NAND2 port map( A => n11, B => n61, Z => n218);
   U223 : GTECH_NAND2 port map( A => A(26), B => n219, Z => n216);
   U224 : GTECH_NOR2 port map( A => n220, B => n12, Z => SUM(26));
   U225 : GTECH_NAND2 port map( A => n219, B => n222, Z => n221);
   U226 : GTECH_NOR2 port map( A => n219, B => n222, Z => n220);
   U227 : GTECH_NAND2 port map( A => n223, B => n224, Z => n222);
   U228 : GTECH_NAND2 port map( A => B(26), B => n61, Z => n224);
   U229 : GTECH_NAND2 port map( A => A(26), B => n97, Z => n223);
   U230 : GTECH_NAND2 port map( A => n225, B => n226, Z => n219);
   U231 : GTECH_NAND2 port map( A => B(25), B => n227, Z => n226);
   U232 : GTECH_NAND2 port map( A => n13, B => n62, Z => n227);
   U233 : GTECH_NAND2 port map( A => A(25), B => n228, Z => n225);
   U234 : GTECH_NOR2 port map( A => n229, B => n14, Z => SUM(25));
   U235 : GTECH_NAND2 port map( A => n228, B => n231, Z => n230);
   U236 : GTECH_NOR2 port map( A => n228, B => n231, Z => n229);
   U237 : GTECH_NAND2 port map( A => n232, B => n233, Z => n231);
   U238 : GTECH_NAND2 port map( A => B(25), B => n62, Z => n233);
   U239 : GTECH_NAND2 port map( A => A(25), B => n63, Z => n232);
   U240 : GTECH_NAND2 port map( A => n234, B => n235, Z => n228);
   U241 : GTECH_NAND2 port map( A => B(24), B => n236, Z => n235);
   U242 : GTECH_NAND2 port map( A => n15, B => n64, Z => n236);
   U243 : GTECH_NAND2 port map( A => A(24), B => n237, Z => n234);
   U244 : GTECH_NOR2 port map( A => n238, B => n16, Z => SUM(24));
   U245 : GTECH_NAND2 port map( A => n237, B => n240, Z => n239);
   U246 : GTECH_NOR2 port map( A => n237, B => n240, Z => n238);
   U247 : GTECH_NAND2 port map( A => n241, B => n242, Z => n240);
   U248 : GTECH_NAND2 port map( A => B(24), B => n64, Z => n242);
   U249 : GTECH_NAND2 port map( A => A(24), B => n65, Z => n241);
   U250 : GTECH_NAND2 port map( A => n243, B => n244, Z => n237);
   U251 : GTECH_NAND2 port map( A => B(23), B => n245, Z => n244);
   U252 : GTECH_NAND2 port map( A => n17, B => n66, Z => n245);
   U253 : GTECH_NAND2 port map( A => A(23), B => n246, Z => n243);
   U254 : GTECH_NOR2 port map( A => n247, B => n18, Z => SUM(23));
   U255 : GTECH_NAND2 port map( A => n246, B => n249, Z => n248);
   U256 : GTECH_NOR2 port map( A => n246, B => n249, Z => n247);
   U257 : GTECH_NAND2 port map( A => n250, B => n251, Z => n249);
   U258 : GTECH_NAND2 port map( A => B(23), B => n66, Z => n251);
   U259 : GTECH_NAND2 port map( A => A(23), B => n67, Z => n250);
   U260 : GTECH_NAND2 port map( A => n252, B => n253, Z => n246);
   U261 : GTECH_NAND2 port map( A => B(22), B => n254, Z => n253);
   U262 : GTECH_NAND2 port map( A => n19, B => n81, Z => n254);
   U263 : GTECH_NAND2 port map( A => A(22), B => n255, Z => n252);
   U264 : GTECH_NOR2 port map( A => n256, B => n20, Z => SUM(22));
   U265 : GTECH_NAND2 port map( A => n255, B => n258, Z => n257);
   U266 : GTECH_NOR2 port map( A => n255, B => n258, Z => n256);
   U267 : GTECH_NAND2 port map( A => n259, B => n260, Z => n258);
   U268 : GTECH_NAND2 port map( A => B(22), B => n81, Z => n260);
   U269 : GTECH_NAND2 port map( A => A(22), B => n122, Z => n259);
   U270 : GTECH_NAND2 port map( A => n261, B => n262, Z => n255);
   U271 : GTECH_NAND2 port map( A => B(21), B => n263, Z => n262);
   U272 : GTECH_NAND2 port map( A => n21, B => n80, Z => n263);
   U273 : GTECH_NAND2 port map( A => A(21), B => n264, Z => n261);
   U274 : GTECH_NOR2 port map( A => n265, B => n22, Z => SUM(21));
   U275 : GTECH_NAND2 port map( A => n264, B => n267, Z => n266);
   U276 : GTECH_NOR2 port map( A => n264, B => n267, Z => n265);
   U277 : GTECH_NAND2 port map( A => n268, B => n269, Z => n267);
   U278 : GTECH_NAND2 port map( A => B(21), B => n80, Z => n269);
   U279 : GTECH_NAND2 port map( A => A(21), B => n123, Z => n268);
   U280 : GTECH_NAND2 port map( A => n270, B => n271, Z => n264);
   U281 : GTECH_NAND2 port map( A => B(20), B => n272, Z => n271);
   U282 : GTECH_NAND2 port map( A => n23, B => n88, Z => n272);
   U283 : GTECH_NAND2 port map( A => A(20), B => n273, Z => n270);
   U284 : GTECH_NOR2 port map( A => n274, B => n24, Z => SUM(20));
   U285 : GTECH_NAND2 port map( A => n273, B => n276, Z => n275);
   U286 : GTECH_NOR2 port map( A => n273, B => n276, Z => n274);
   U287 : GTECH_NAND2 port map( A => n277, B => n278, Z => n276);
   U288 : GTECH_NAND2 port map( A => B(20), B => n88, Z => n278);
   U289 : GTECH_NAND2 port map( A => A(20), B => n116, Z => n277);
   U290 : GTECH_NAND2 port map( A => n279, B => n280, Z => n273);
   U291 : GTECH_NAND2 port map( A => B(19), B => n281, Z => n280);
   U292 : GTECH_NAND2 port map( A => n25, B => n87, Z => n281);
   U293 : GTECH_NAND2 port map( A => A(19), B => n282, Z => n279);
   U294 : GTECH_NAND2 port map( A => n283, B => n284, Z => SUM(1));
   U295 : GTECH_NAND2 port map( A => n285, B => n77, Z => n284);
   U296 : GTECH_NAND2 port map( A => n92, B => n286, Z => n283);
   U297 : GTECH_NOR2 port map( A => n287, B => n288, Z => n285);
   U298 : GTECH_NOR2 port map( A => n98, B => A(1), Z => n288);
   U299 : GTECH_NOR2 port map( A => n93, B => B(1), Z => n287);
   U300 : GTECH_NOR2 port map( A => n289, B => n26, Z => SUM(19));
   U301 : GTECH_NAND2 port map( A => n282, B => n291, Z => n290);
   U302 : GTECH_NOR2 port map( A => n282, B => n291, Z => n289);
   U303 : GTECH_NAND2 port map( A => n292, B => n293, Z => n291);
   U304 : GTECH_NAND2 port map( A => B(19), B => n87, Z => n293);
   U305 : GTECH_NAND2 port map( A => A(19), B => n117, Z => n292);
   U306 : GTECH_NAND2 port map( A => n294, B => n295, Z => n282);
   U307 : GTECH_NAND2 port map( A => B(18), B => n296, Z => n295);
   U308 : GTECH_NAND2 port map( A => n27, B => n86, Z => n296);
   U309 : GTECH_NAND2 port map( A => A(18), B => n297, Z => n294);
   U310 : GTECH_NOR2 port map( A => n298, B => n28, Z => SUM(18));
   U311 : GTECH_NAND2 port map( A => n297, B => n300, Z => n299);
   U312 : GTECH_NOR2 port map( A => n297, B => n300, Z => n298);
   U313 : GTECH_NAND2 port map( A => n301, B => n302, Z => n300);
   U314 : GTECH_NAND2 port map( A => B(18), B => n86, Z => n302);
   U315 : GTECH_NAND2 port map( A => A(18), B => n118, Z => n301);
   U316 : GTECH_NAND2 port map( A => n303, B => n304, Z => n297);
   U317 : GTECH_NAND2 port map( A => B(17), B => n305, Z => n304);
   U318 : GTECH_NAND2 port map( A => n29, B => n85, Z => n305);
   U319 : GTECH_NAND2 port map( A => A(17), B => n306, Z => n303);
   U320 : GTECH_NOR2 port map( A => n307, B => n30, Z => SUM(17));
   U321 : GTECH_NAND2 port map( A => n306, B => n309, Z => n308);
   U322 : GTECH_NOR2 port map( A => n306, B => n309, Z => n307);
   U323 : GTECH_NAND2 port map( A => n310, B => n311, Z => n309);
   U324 : GTECH_NAND2 port map( A => B(17), B => n85, Z => n311);
   U325 : GTECH_NAND2 port map( A => A(17), B => n119, Z => n310);
   U326 : GTECH_NAND2 port map( A => n312, B => n313, Z => n306);
   U327 : GTECH_NAND2 port map( A => B(16), B => n314, Z => n313);
   U328 : GTECH_NAND2 port map( A => n31, B => n84, Z => n314);
   U329 : GTECH_NAND2 port map( A => A(16), B => n315, Z => n312);
   U330 : GTECH_NOR2 port map( A => n316, B => n32, Z => SUM(16));
   U331 : GTECH_NAND2 port map( A => n315, B => n318, Z => n317);
   U332 : GTECH_NOR2 port map( A => n315, B => n318, Z => n316);
   U333 : GTECH_NAND2 port map( A => n319, B => n320, Z => n318);
   U334 : GTECH_NAND2 port map( A => B(16), B => n84, Z => n320);
   U335 : GTECH_NAND2 port map( A => A(16), B => n120, Z => n319);
   U336 : GTECH_NAND2 port map( A => n321, B => n322, Z => n315);
   U337 : GTECH_NAND2 port map( A => B(15), B => n323, Z => n322);
   U338 : GTECH_NAND2 port map( A => n33, B => n111, Z => n323);
   U339 : GTECH_NAND2 port map( A => A(15), B => n324, Z => n321);
   U340 : GTECH_NOR2 port map( A => n325, B => n34, Z => SUM(15));
   U341 : GTECH_NAND2 port map( A => n324, B => n327, Z => n326);
   U342 : GTECH_NOR2 port map( A => n324, B => n327, Z => n325);
   U343 : GTECH_NAND2 port map( A => n328, B => n329, Z => n327);
   U344 : GTECH_NAND2 port map( A => B(15), B => n111, Z => n329);
   U345 : GTECH_NAND2 port map( A => A(15), B => n112, Z => n328);
   U346 : GTECH_NAND2 port map( A => n330, B => n331, Z => n324);
   U347 : GTECH_NAND2 port map( A => B(14), B => n332, Z => n331);
   U348 : GTECH_NAND2 port map( A => n35, B => n79, Z => n332);
   U349 : GTECH_NAND2 port map( A => A(14), B => n333, Z => n330);
   U350 : GTECH_NOR2 port map( A => n334, B => n36, Z => SUM(14));
   U351 : GTECH_NAND2 port map( A => n333, B => n336, Z => n335);
   U352 : GTECH_NOR2 port map( A => n333, B => n336, Z => n334);
   U353 : GTECH_NAND2 port map( A => n337, B => n338, Z => n336);
   U354 : GTECH_NAND2 port map( A => B(14), B => n79, Z => n338);
   U355 : GTECH_NAND2 port map( A => A(14), B => n124, Z => n337);
   U356 : GTECH_NAND2 port map( A => n339, B => n340, Z => n333);
   U357 : GTECH_NAND2 port map( A => B(13), B => n341, Z => n340);
   U358 : GTECH_NAND2 port map( A => n37, B => n91, Z => n341);
   U359 : GTECH_NAND2 port map( A => A(13), B => n342, Z => n339);
   U360 : GTECH_NOR2 port map( A => n343, B => n38, Z => SUM(13));
   U361 : GTECH_NAND2 port map( A => n342, B => n345, Z => n344);
   U362 : GTECH_NOR2 port map( A => n342, B => n345, Z => n343);
   U363 : GTECH_NAND2 port map( A => n346, B => n347, Z => n345);
   U364 : GTECH_NAND2 port map( A => B(13), B => n91, Z => n347);
   U365 : GTECH_NAND2 port map( A => A(13), B => n113, Z => n346);
   U366 : GTECH_NAND2 port map( A => n348, B => n349, Z => n342);
   U367 : GTECH_NAND2 port map( A => B(12), B => n350, Z => n349);
   U368 : GTECH_NAND2 port map( A => n39, B => n90, Z => n350);
   U369 : GTECH_NAND2 port map( A => A(12), B => n351, Z => n348);
   U370 : GTECH_NOR2 port map( A => n352, B => n40, Z => SUM(12));
   U371 : GTECH_NAND2 port map( A => n351, B => n354, Z => n353);
   U372 : GTECH_NOR2 port map( A => n351, B => n354, Z => n352);
   U373 : GTECH_NAND2 port map( A => n355, B => n356, Z => n354);
   U374 : GTECH_NAND2 port map( A => B(12), B => n90, Z => n356);
   U375 : GTECH_NAND2 port map( A => A(12), B => n114, Z => n355);
   U376 : GTECH_NAND2 port map( A => n357, B => n358, Z => n351);
   U377 : GTECH_NAND2 port map( A => B(11), B => n359, Z => n358);
   U378 : GTECH_NAND2 port map( A => n41, B => n89, Z => n359);
   U379 : GTECH_NAND2 port map( A => A(11), B => n360, Z => n357);
   U380 : GTECH_NOR2 port map( A => n361, B => n42, Z => SUM(11));
   U381 : GTECH_NAND2 port map( A => n360, B => n363, Z => n362);
   U382 : GTECH_NOR2 port map( A => n360, B => n363, Z => n361);
   U383 : GTECH_NAND2 port map( A => n364, B => n365, Z => n363);
   U384 : GTECH_NAND2 port map( A => B(11), B => n89, Z => n365);
   U385 : GTECH_NAND2 port map( A => A(11), B => n115, Z => n364);
   U386 : GTECH_NAND2 port map( A => n366, B => n367, Z => n360);
   U387 : GTECH_NAND2 port map( A => B(10), B => n368, Z => n367);
   U388 : GTECH_NAND2 port map( A => n43, B => n109, Z => n368);
   U389 : GTECH_NAND2 port map( A => A(10), B => n369, Z => n366);
   U390 : GTECH_NOR2 port map( A => n370, B => n44, Z => SUM(10));
   U391 : GTECH_NAND2 port map( A => n369, B => n372, Z => n371);
   U392 : GTECH_NOR2 port map( A => n369, B => n372, Z => n370);
   U393 : GTECH_NAND2 port map( A => n373, B => n374, Z => n372);
   U394 : GTECH_NAND2 port map( A => B(10), B => n109, Z => n374);
   U395 : GTECH_NAND2 port map( A => A(10), B => n110, Z => n373);
   U396 : GTECH_NAND2 port map( A => n375, B => n376, Z => n369);
   U397 : GTECH_NAND2 port map( A => B(9), B => n377, Z => n376);
   U398 : GTECH_NAND2 port map( A => n45, B => n83, Z => n377);
   U399 : GTECH_NAND2 port map( A => A(9), B => n129, Z => n375);
   U400 : GTECH_NAND2 port map( A => n378, B => n379, Z => n129);
   U401 : GTECH_NAND2 port map( A => B(8), B => n380, Z => n379);
   U402 : GTECH_NAND2 port map( A => n46, B => n107, Z => n380);
   U403 : GTECH_NAND2 port map( A => A(8), B => n134, Z => n378);
   U404 : GTECH_NAND2 port map( A => n381, B => n382, Z => n134);
   U405 : GTECH_NAND2 port map( A => B(7), B => n383, Z => n382);
   U406 : GTECH_NAND2 port map( A => n48, B => n78, Z => n383);
   U407 : GTECH_NAND2 port map( A => A(7), B => n140, Z => n381);
   U408 : GTECH_NAND2 port map( A => n384, B => n385, Z => n140);
   U409 : GTECH_NAND2 port map( A => B(6), B => n386, Z => n385);
   U410 : GTECH_NAND2 port map( A => n50, B => n105, Z => n386);
   U411 : GTECH_NAND2 port map( A => A(6), B => n146, Z => n384);
   U412 : GTECH_NAND2 port map( A => n387, B => n388, Z => n146);
   U413 : GTECH_NAND2 port map( A => B(5), B => n389, Z => n388);
   U414 : GTECH_NAND2 port map( A => n70, B => n52, Z => n389);
   U415 : GTECH_NAND2 port map( A => A(5), B => n152, Z => n387);
   U416 : GTECH_NAND2 port map( A => n390, B => n391, Z => n152);
   U417 : GTECH_NAND2 port map( A => B(4), B => n392, Z => n391);
   U418 : GTECH_NAND2 port map( A => n71, B => n103, Z => n392);
   U419 : GTECH_NAND2 port map( A => A(4), B => n158, Z => n390);
   U420 : GTECH_NAND2 port map( A => n393, B => n394, Z => n158);
   U421 : GTECH_NAND2 port map( A => B(3), B => n395, Z => n394);
   U422 : GTECH_NAND2 port map( A => n73, B => n101, Z => n395);
   U423 : GTECH_NAND2 port map( A => A(3), B => n164, Z => n393);
   U424 : GTECH_NAND2 port map( A => n396, B => n397, Z => n164);
   U425 : GTECH_NAND2 port map( A => B(2), B => n398, Z => n397);
   U426 : GTECH_NAND2 port map( A => n75, B => n99, Z => n398);
   U427 : GTECH_NAND2 port map( A => A(2), B => n189, Z => n396);
   U428 : GTECH_NAND2 port map( A => n399, B => n400, Z => n189);
   U429 : GTECH_NAND2 port map( A => B(1), B => n401, Z => n400);
   U430 : GTECH_NAND2 port map( A => n93, B => n286, Z => n401);
   U431 : GTECH_NAND2 port map( A => A(1), B => n77, Z => n399);
   U432 : GTECH_NAND2 port map( A => B(0), B => A(0), Z => n286);
   U433 : GTECH_NAND2 port map( A => n68, B => n402, Z => SUM(0));
   U434 : GTECH_NAND2 port map( A => B(0), B => n69, Z => n402);
   U435 : GTECH_NOR2 port map( A => n69, B => B(0), Z => n403);

end SYN_rpl;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_zpu_core.all;

entity zpu_core_DW01_add_1 is

   port( A, B : in std_logic_vector (29 downto 0);  CI : in std_logic;  SUM : 
         out std_logic_vector (29 downto 0);  CO : out std_logic);

end zpu_core_DW01_add_1;

architecture SYN_rpl of zpu_core_DW01_add_1 is

   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   signal n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16
      , n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, 
      n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45
      , n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, 
      n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n73, n74
      , n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86, n87, n88, 
      n89, n90, n91, n92, n93, n94, n95, n96, n97, n98, n99, n100, n101, n102, 
      n103, n104, n105, n106, n107, n108, n109, n110, n111, n112, n113, n114, 
      n115, n116, n117, n118, n119, n120, n121, n122, n123, n124, n125, n126, 
      n127, n128, n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, 
      n139, n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150, 
      n151, n152, n153, n154, n155, n156, n157, n158, n159, n160, n161, n162, 
      n163, n164, n165, n166, n167, n168, n169, n170, n171, n172, n173, n174, 
      n175, n176, n177, n178, n179, n180, n181, n182, n183, n184, n185, n186, 
      n187, n188, n189, n190, n191, n192, n193, n194, n195, n196, n197, n198, 
      n199, n200, n201, n202, n203, n204, n205, n206, n207, n208, n209, n210, 
      n211, n212, n213, n214, n215, n216, n217, n218, n219, n220, n221, n222, 
      n223, n224, n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, 
      n235, n236, n237, n238, n239, n240, n241, n242, n243, n244, n245, n246, 
      n247, n248, n249, n250, n251, n252, n253, n254, n255, n256, n257, n258, 
      n259, n260, n261, n262, n263, n264, n265, n266, n267, n268, n269, n270, 
      n271, n272, n273, n274, n275, n276, n277, n278, n279, n280, n281, n282, 
      n283, n284, n285, n286, n287, n288, n289, n290, n291, n292, n293, n294, 
      n295, n296, n297, n298, n299, n300, n301, n302, n303, n304, n305, n306, 
      n307, n308, n309, n310, n311, n312, n313, n314, n315, n316, n317, n318, 
      n319, n320, n321, n322, n323, n324, n325, n326, n327, n328, n329, n330, 
      n331, n332, n333, n334, n335, n336, n337, n338, n339, n340, n341, n342, 
      n343, n344, n345, n346, n347, n348, n349, n350, n351, n352, n353, n354, 
      n355, n356, n357, n358, n359, n360, n361, n362, n363, n364, n365, n366, 
      n367, n368, n369, n370, n371, n372, n373, n374, n375, n376, n377 : 
      std_logic;

begin
   
   U1 : GTECH_NOT port map( A => n143, Z => n1);
   U2 : GTECH_NOT port map( A => n167, Z => n2);
   U3 : GTECH_NOT port map( A => n173, Z => n3);
   U4 : GTECH_NOT port map( A => n177, Z => n4);
   U5 : GTECH_NOT port map( A => n184, Z => n5);
   U6 : GTECH_NOT port map( A => n186, Z => n6);
   U7 : GTECH_NOT port map( A => n193, Z => n7);
   U8 : GTECH_NOT port map( A => n195, Z => n8);
   U9 : GTECH_NOT port map( A => n202, Z => n9);
   U10 : GTECH_NOT port map( A => n204, Z => n10);
   U11 : GTECH_NOT port map( A => n211, Z => n11);
   U12 : GTECH_NOT port map( A => n213, Z => n12);
   U13 : GTECH_NOT port map( A => n220, Z => n13);
   U14 : GTECH_NOT port map( A => n222, Z => n14);
   U15 : GTECH_NOT port map( A => n229, Z => n15);
   U16 : GTECH_NOT port map( A => n231, Z => n16);
   U17 : GTECH_NOT port map( A => n238, Z => n17);
   U18 : GTECH_NOT port map( A => n240, Z => n18);
   U19 : GTECH_NOT port map( A => n247, Z => n19);
   U20 : GTECH_NOT port map( A => n249, Z => n20);
   U21 : GTECH_NOT port map( A => n256, Z => n21);
   U22 : GTECH_NOT port map( A => n264, Z => n22);
   U23 : GTECH_NOT port map( A => n271, Z => n23);
   U24 : GTECH_NOT port map( A => n273, Z => n24);
   U25 : GTECH_NOT port map( A => n280, Z => n25);
   U26 : GTECH_NOT port map( A => n282, Z => n26);
   U27 : GTECH_NOT port map( A => n289, Z => n27);
   U28 : GTECH_NOT port map( A => n291, Z => n28);
   U29 : GTECH_NOT port map( A => n298, Z => n29);
   U30 : GTECH_NOT port map( A => n300, Z => n30);
   U31 : GTECH_NOT port map( A => n307, Z => n31);
   U32 : GTECH_NOT port map( A => n309, Z => n32);
   U33 : GTECH_NOT port map( A => n316, Z => n33);
   U34 : GTECH_NOT port map( A => n318, Z => n34);
   U35 : GTECH_NOT port map( A => n325, Z => n35);
   U36 : GTECH_NOT port map( A => n327, Z => n36);
   U37 : GTECH_NOT port map( A => n334, Z => n37);
   U38 : GTECH_NOT port map( A => n336, Z => n38);
   U39 : GTECH_NOT port map( A => n343, Z => n39);
   U40 : GTECH_NOT port map( A => n345, Z => n40);
   U41 : GTECH_NOT port map( A => n121, Z => n41);
   U42 : GTECH_NOT port map( A => n126, Z => n42);
   U43 : GTECH_NOT port map( A => n125, Z => n43);
   U44 : GTECH_NOT port map( A => n132, Z => n44);
   U45 : GTECH_NOT port map( A => n131, Z => n45);
   U46 : GTECH_NOT port map( A => n138, Z => n46);
   U47 : GTECH_NOT port map( A => n137, Z => n47);
   U48 : GTECH_NOT port map( A => A(5), Z => n48);
   U49 : GTECH_NOT port map( A => n175, Z => n49);
   U50 : GTECH_NOT port map( A => B(29), Z => n50);
   U51 : GTECH_NOT port map( A => B(28), Z => n51);
   U52 : GTECH_NOT port map( A => B(27), Z => n52);
   U53 : GTECH_NOT port map( A => A(28), Z => n53);
   U54 : GTECH_NOT port map( A => B(26), Z => n54);
   U55 : GTECH_NOT port map( A => B(25), Z => n55);
   U56 : GTECH_NOT port map( A => A(27), Z => n56);
   U57 : GTECH_NOT port map( A => A(26), Z => n57);
   U58 : GTECH_NOT port map( A => B(24), Z => n58);
   U59 : GTECH_NOT port map( A => B(23), Z => n59);
   U60 : GTECH_NOT port map( A => A(25), Z => n60);
   U61 : GTECH_NOT port map( A => A(24), Z => n61);
   U62 : GTECH_NOT port map( A => A(23), Z => n62);
   U63 : GTECH_NOT port map( A => n377, Z => n63);
   U64 : GTECH_NOT port map( A => A(0), Z => n64);
   U65 : GTECH_NOT port map( A => n144, Z => n65);
   U66 : GTECH_NOT port map( A => n150, Z => n66);
   U67 : GTECH_NOT port map( A => n149, Z => n67);
   U68 : GTECH_NOT port map( A => n156, Z => n68);
   U69 : GTECH_NOT port map( A => n155, Z => n69);
   U70 : GTECH_NOT port map( A => n162, Z => n70);
   U71 : GTECH_NOT port map( A => n161, Z => n71);
   U72 : GTECH_NOT port map( A => n260, Z => n72);
   U73 : GTECH_NOT port map( A => A(7), Z => n73);
   U74 : GTECH_NOT port map( A => A(14), Z => n74);
   U75 : GTECH_NOT port map( A => A(21), Z => n75);
   U76 : GTECH_NOT port map( A => A(22), Z => n76);
   U77 : GTECH_NOT port map( A => n120, Z => n77);
   U78 : GTECH_NOT port map( A => A(9), Z => n78);
   U79 : GTECH_NOT port map( A => A(16), Z => n79);
   U80 : GTECH_NOT port map( A => A(17), Z => n80);
   U81 : GTECH_NOT port map( A => A(18), Z => n81);
   U82 : GTECH_NOT port map( A => A(19), Z => n82);
   U83 : GTECH_NOT port map( A => A(20), Z => n83);
   U84 : GTECH_NOT port map( A => A(11), Z => n84);
   U85 : GTECH_NOT port map( A => A(12), Z => n85);
   U86 : GTECH_NOT port map( A => A(13), Z => n86);
   U87 : GTECH_NOT port map( A => n259, Z => n87);
   U88 : GTECH_NOT port map( A => A(1), Z => n88);
   U89 : GTECH_NOT port map( A => B(3), Z => n89);
   U90 : GTECH_NOT port map( A => B(5), Z => n90);
   U91 : GTECH_NOT port map( A => B(7), Z => n91);
   U92 : GTECH_NOT port map( A => B(9), Z => n92);
   U93 : GTECH_NOT port map( A => B(10), Z => n93);
   U94 : GTECH_NOT port map( A => B(12), Z => n94);
   U95 : GTECH_NOT port map( A => A(2), Z => n95);
   U96 : GTECH_NOT port map( A => A(3), Z => n96);
   U97 : GTECH_NOT port map( A => B(1), Z => n97);
   U98 : GTECH_NOT port map( A => A(4), Z => n98);
   U99 : GTECH_NOT port map( A => B(2), Z => n99);
   U100 : GTECH_NOT port map( A => A(6), Z => n100);
   U101 : GTECH_NOT port map( A => B(4), Z => n101);
   U102 : GTECH_NOT port map( A => A(8), Z => n102);
   U103 : GTECH_NOT port map( A => B(6), Z => n103);
   U104 : GTECH_NOT port map( A => A(10), Z => n104);
   U105 : GTECH_NOT port map( A => B(8), Z => n105);
   U106 : GTECH_NOT port map( A => A(15), Z => n106);
   U107 : GTECH_NOT port map( A => B(13), Z => n107);
   U108 : GTECH_NOT port map( A => B(11), Z => n108);
   U109 : GTECH_NOT port map( A => B(18), Z => n109);
   U110 : GTECH_NOT port map( A => B(17), Z => n110);
   U111 : GTECH_NOT port map( A => B(16), Z => n111);
   U112 : GTECH_NOT port map( A => B(15), Z => n112);
   U113 : GTECH_NOT port map( A => B(14), Z => n113);
   U114 : GTECH_NOT port map( A => B(20), Z => n114);
   U115 : GTECH_NOT port map( A => B(19), Z => n115);
   U116 : GTECH_NOT port map( A => B(21), Z => n116);
   U117 : GTECH_NOT port map( A => B(22), Z => n117);
   U118 : GTECH_NOR2 port map( A => n118, B => n119, Z => SUM(9));
   U119 : GTECH_NOR2 port map( A => n41, B => n120, Z => n119);
   U120 : GTECH_NOR2 port map( A => n121, B => n77, Z => n118);
   U121 : GTECH_NOR2 port map( A => n122, B => n123, Z => n120);
   U122 : GTECH_NOR2 port map( A => n92, B => A(9), Z => n123);
   U123 : GTECH_NOR2 port map( A => n78, B => B(9), Z => n122);
   U124 : GTECH_NOR2 port map( A => n124, B => n43, Z => SUM(8));
   U125 : GTECH_NAND2 port map( A => n126, B => n127, Z => n125);
   U126 : GTECH_NOR2 port map( A => n126, B => n127, Z => n124);
   U127 : GTECH_NAND2 port map( A => n128, B => n129, Z => n127);
   U128 : GTECH_NAND2 port map( A => B(8), B => n102, Z => n129);
   U129 : GTECH_NAND2 port map( A => A(8), B => n105, Z => n128);
   U130 : GTECH_NOR2 port map( A => n130, B => n45, Z => SUM(7));
   U131 : GTECH_NAND2 port map( A => n132, B => n133, Z => n131);
   U132 : GTECH_NOR2 port map( A => n132, B => n133, Z => n130);
   U133 : GTECH_NAND2 port map( A => n134, B => n135, Z => n133);
   U134 : GTECH_NAND2 port map( A => B(7), B => n73, Z => n135);
   U135 : GTECH_NAND2 port map( A => A(7), B => n91, Z => n134);
   U136 : GTECH_NOR2 port map( A => n136, B => n47, Z => SUM(6));
   U137 : GTECH_NAND2 port map( A => n138, B => n139, Z => n137);
   U138 : GTECH_NOR2 port map( A => n138, B => n139, Z => n136);
   U139 : GTECH_NAND2 port map( A => n140, B => n141, Z => n139);
   U140 : GTECH_NAND2 port map( A => B(6), B => n100, Z => n141);
   U141 : GTECH_NAND2 port map( A => A(6), B => n103, Z => n140);
   U142 : GTECH_NOR2 port map( A => n142, B => n1, Z => SUM(5));
   U143 : GTECH_NAND2 port map( A => n144, B => n145, Z => n143);
   U144 : GTECH_NOR2 port map( A => n144, B => n145, Z => n142);
   U145 : GTECH_NAND2 port map( A => n146, B => n147, Z => n145);
   U146 : GTECH_NAND2 port map( A => B(5), B => n48, Z => n147);
   U147 : GTECH_NAND2 port map( A => A(5), B => n90, Z => n146);
   U148 : GTECH_NOR2 port map( A => n148, B => n67, Z => SUM(4));
   U149 : GTECH_NAND2 port map( A => n150, B => n151, Z => n149);
   U150 : GTECH_NOR2 port map( A => n150, B => n151, Z => n148);
   U151 : GTECH_NAND2 port map( A => n152, B => n153, Z => n151);
   U152 : GTECH_NAND2 port map( A => B(4), B => n98, Z => n153);
   U153 : GTECH_NAND2 port map( A => A(4), B => n101, Z => n152);
   U154 : GTECH_NOR2 port map( A => n154, B => n69, Z => SUM(3));
   U155 : GTECH_NAND2 port map( A => n156, B => n157, Z => n155);
   U156 : GTECH_NOR2 port map( A => n156, B => n157, Z => n154);
   U157 : GTECH_NAND2 port map( A => n158, B => n159, Z => n157);
   U158 : GTECH_NAND2 port map( A => B(3), B => n96, Z => n159);
   U159 : GTECH_NAND2 port map( A => A(3), B => n89, Z => n158);
   U160 : GTECH_NOR2 port map( A => n160, B => n71, Z => SUM(2));
   U161 : GTECH_NAND2 port map( A => n162, B => n163, Z => n161);
   U162 : GTECH_NOR2 port map( A => n162, B => n163, Z => n160);
   U163 : GTECH_NAND2 port map( A => n164, B => n165, Z => n163);
   U164 : GTECH_NAND2 port map( A => B(2), B => n95, Z => n165);
   U165 : GTECH_NAND2 port map( A => A(2), B => n99, Z => n164);
   U166 : GTECH_NOR2 port map( A => n166, B => n2, Z => SUM(29));
   U167 : GTECH_NAND2 port map( A => n168, B => n169, Z => n167);
   U168 : GTECH_NOR2 port map( A => n169, B => n168, Z => n166);
   U169 : GTECH_NAND2 port map( A => n170, B => n171, Z => n168);
   U170 : GTECH_NAND2 port map( A => B(28), B => n172, Z => n171);
   U171 : GTECH_NAND2 port map( A => n3, B => n53, Z => n172);
   U172 : GTECH_NAND2 port map( A => A(28), B => n173, Z => n170);
   U173 : GTECH_NAND2 port map( A => n174, B => n49, Z => n169);
   U174 : GTECH_NOR2 port map( A => n50, B => A(29), Z => n175);
   U175 : GTECH_NAND2 port map( A => A(29), B => n50, Z => n174);
   U176 : GTECH_NOR2 port map( A => n176, B => n4, Z => SUM(28));
   U177 : GTECH_NAND2 port map( A => n173, B => n178, Z => n177);
   U178 : GTECH_NOR2 port map( A => n173, B => n178, Z => n176);
   U179 : GTECH_NAND2 port map( A => n179, B => n180, Z => n178);
   U180 : GTECH_NAND2 port map( A => B(28), B => n53, Z => n180);
   U181 : GTECH_NAND2 port map( A => A(28), B => n51, Z => n179);
   U182 : GTECH_NAND2 port map( A => n181, B => n182, Z => n173);
   U183 : GTECH_NAND2 port map( A => B(27), B => n183, Z => n182);
   U184 : GTECH_NAND2 port map( A => n5, B => n56, Z => n183);
   U185 : GTECH_NAND2 port map( A => A(27), B => n184, Z => n181);
   U186 : GTECH_NOR2 port map( A => n185, B => n6, Z => SUM(27));
   U187 : GTECH_NAND2 port map( A => n184, B => n187, Z => n186);
   U188 : GTECH_NOR2 port map( A => n184, B => n187, Z => n185);
   U189 : GTECH_NAND2 port map( A => n188, B => n189, Z => n187);
   U190 : GTECH_NAND2 port map( A => B(27), B => n56, Z => n189);
   U191 : GTECH_NAND2 port map( A => A(27), B => n52, Z => n188);
   U192 : GTECH_NAND2 port map( A => n190, B => n191, Z => n184);
   U193 : GTECH_NAND2 port map( A => B(26), B => n192, Z => n191);
   U194 : GTECH_NAND2 port map( A => n7, B => n57, Z => n192);
   U195 : GTECH_NAND2 port map( A => A(26), B => n193, Z => n190);
   U196 : GTECH_NOR2 port map( A => n194, B => n8, Z => SUM(26));
   U197 : GTECH_NAND2 port map( A => n193, B => n196, Z => n195);
   U198 : GTECH_NOR2 port map( A => n193, B => n196, Z => n194);
   U199 : GTECH_NAND2 port map( A => n197, B => n198, Z => n196);
   U200 : GTECH_NAND2 port map( A => B(26), B => n57, Z => n198);
   U201 : GTECH_NAND2 port map( A => A(26), B => n54, Z => n197);
   U202 : GTECH_NAND2 port map( A => n199, B => n200, Z => n193);
   U203 : GTECH_NAND2 port map( A => B(25), B => n201, Z => n200);
   U204 : GTECH_NAND2 port map( A => n9, B => n60, Z => n201);
   U205 : GTECH_NAND2 port map( A => A(25), B => n202, Z => n199);
   U206 : GTECH_NOR2 port map( A => n203, B => n10, Z => SUM(25));
   U207 : GTECH_NAND2 port map( A => n202, B => n205, Z => n204);
   U208 : GTECH_NOR2 port map( A => n202, B => n205, Z => n203);
   U209 : GTECH_NAND2 port map( A => n206, B => n207, Z => n205);
   U210 : GTECH_NAND2 port map( A => B(25), B => n60, Z => n207);
   U211 : GTECH_NAND2 port map( A => A(25), B => n55, Z => n206);
   U212 : GTECH_NAND2 port map( A => n208, B => n209, Z => n202);
   U213 : GTECH_NAND2 port map( A => B(24), B => n210, Z => n209);
   U214 : GTECH_NAND2 port map( A => n11, B => n61, Z => n210);
   U215 : GTECH_NAND2 port map( A => A(24), B => n211, Z => n208);
   U216 : GTECH_NOR2 port map( A => n212, B => n12, Z => SUM(24));
   U217 : GTECH_NAND2 port map( A => n211, B => n214, Z => n213);
   U218 : GTECH_NOR2 port map( A => n211, B => n214, Z => n212);
   U219 : GTECH_NAND2 port map( A => n215, B => n216, Z => n214);
   U220 : GTECH_NAND2 port map( A => B(24), B => n61, Z => n216);
   U221 : GTECH_NAND2 port map( A => A(24), B => n58, Z => n215);
   U222 : GTECH_NAND2 port map( A => n217, B => n218, Z => n211);
   U223 : GTECH_NAND2 port map( A => B(23), B => n219, Z => n218);
   U224 : GTECH_NAND2 port map( A => n13, B => n62, Z => n219);
   U225 : GTECH_NAND2 port map( A => A(23), B => n220, Z => n217);
   U226 : GTECH_NOR2 port map( A => n221, B => n14, Z => SUM(23));
   U227 : GTECH_NAND2 port map( A => n220, B => n223, Z => n222);
   U228 : GTECH_NOR2 port map( A => n220, B => n223, Z => n221);
   U229 : GTECH_NAND2 port map( A => n224, B => n225, Z => n223);
   U230 : GTECH_NAND2 port map( A => B(23), B => n62, Z => n225);
   U231 : GTECH_NAND2 port map( A => A(23), B => n59, Z => n224);
   U232 : GTECH_NAND2 port map( A => n226, B => n227, Z => n220);
   U233 : GTECH_NAND2 port map( A => B(22), B => n228, Z => n227);
   U234 : GTECH_NAND2 port map( A => n15, B => n76, Z => n228);
   U235 : GTECH_NAND2 port map( A => A(22), B => n229, Z => n226);
   U236 : GTECH_NOR2 port map( A => n230, B => n16, Z => SUM(22));
   U237 : GTECH_NAND2 port map( A => n229, B => n232, Z => n231);
   U238 : GTECH_NOR2 port map( A => n229, B => n232, Z => n230);
   U239 : GTECH_NAND2 port map( A => n233, B => n234, Z => n232);
   U240 : GTECH_NAND2 port map( A => B(22), B => n76, Z => n234);
   U241 : GTECH_NAND2 port map( A => A(22), B => n117, Z => n233);
   U242 : GTECH_NAND2 port map( A => n235, B => n236, Z => n229);
   U243 : GTECH_NAND2 port map( A => B(21), B => n237, Z => n236);
   U244 : GTECH_NAND2 port map( A => n17, B => n75, Z => n237);
   U245 : GTECH_NAND2 port map( A => A(21), B => n238, Z => n235);
   U246 : GTECH_NOR2 port map( A => n239, B => n18, Z => SUM(21));
   U247 : GTECH_NAND2 port map( A => n238, B => n241, Z => n240);
   U248 : GTECH_NOR2 port map( A => n238, B => n241, Z => n239);
   U249 : GTECH_NAND2 port map( A => n242, B => n243, Z => n241);
   U250 : GTECH_NAND2 port map( A => B(21), B => n75, Z => n243);
   U251 : GTECH_NAND2 port map( A => A(21), B => n116, Z => n242);
   U252 : GTECH_NAND2 port map( A => n244, B => n245, Z => n238);
   U253 : GTECH_NAND2 port map( A => B(20), B => n246, Z => n245);
   U254 : GTECH_NAND2 port map( A => n19, B => n83, Z => n246);
   U255 : GTECH_NAND2 port map( A => A(20), B => n247, Z => n244);
   U256 : GTECH_NOR2 port map( A => n248, B => n20, Z => SUM(20));
   U257 : GTECH_NAND2 port map( A => n247, B => n250, Z => n249);
   U258 : GTECH_NOR2 port map( A => n247, B => n250, Z => n248);
   U259 : GTECH_NAND2 port map( A => n251, B => n252, Z => n250);
   U260 : GTECH_NAND2 port map( A => B(20), B => n83, Z => n252);
   U261 : GTECH_NAND2 port map( A => A(20), B => n114, Z => n251);
   U262 : GTECH_NAND2 port map( A => n253, B => n254, Z => n247);
   U263 : GTECH_NAND2 port map( A => B(19), B => n255, Z => n254);
   U264 : GTECH_NAND2 port map( A => n21, B => n82, Z => n255);
   U265 : GTECH_NAND2 port map( A => A(19), B => n256, Z => n253);
   U266 : GTECH_NAND2 port map( A => n257, B => n258, Z => SUM(1));
   U267 : GTECH_NAND2 port map( A => n259, B => n72, Z => n258);
   U268 : GTECH_NAND2 port map( A => n87, B => n260, Z => n257);
   U269 : GTECH_NOR2 port map( A => n261, B => n262, Z => n259);
   U270 : GTECH_NOR2 port map( A => n97, B => A(1), Z => n262);
   U271 : GTECH_NOR2 port map( A => n88, B => B(1), Z => n261);
   U272 : GTECH_NOR2 port map( A => n263, B => n22, Z => SUM(19));
   U273 : GTECH_NAND2 port map( A => n256, B => n265, Z => n264);
   U274 : GTECH_NOR2 port map( A => n256, B => n265, Z => n263);
   U275 : GTECH_NAND2 port map( A => n266, B => n267, Z => n265);
   U276 : GTECH_NAND2 port map( A => B(19), B => n82, Z => n267);
   U277 : GTECH_NAND2 port map( A => A(19), B => n115, Z => n266);
   U278 : GTECH_NAND2 port map( A => n268, B => n269, Z => n256);
   U279 : GTECH_NAND2 port map( A => B(18), B => n270, Z => n269);
   U280 : GTECH_NAND2 port map( A => n23, B => n81, Z => n270);
   U281 : GTECH_NAND2 port map( A => A(18), B => n271, Z => n268);
   U282 : GTECH_NOR2 port map( A => n272, B => n24, Z => SUM(18));
   U283 : GTECH_NAND2 port map( A => n271, B => n274, Z => n273);
   U284 : GTECH_NOR2 port map( A => n271, B => n274, Z => n272);
   U285 : GTECH_NAND2 port map( A => n275, B => n276, Z => n274);
   U286 : GTECH_NAND2 port map( A => B(18), B => n81, Z => n276);
   U287 : GTECH_NAND2 port map( A => A(18), B => n109, Z => n275);
   U288 : GTECH_NAND2 port map( A => n277, B => n278, Z => n271);
   U289 : GTECH_NAND2 port map( A => B(17), B => n279, Z => n278);
   U290 : GTECH_NAND2 port map( A => n25, B => n80, Z => n279);
   U291 : GTECH_NAND2 port map( A => A(17), B => n280, Z => n277);
   U292 : GTECH_NOR2 port map( A => n281, B => n26, Z => SUM(17));
   U293 : GTECH_NAND2 port map( A => n280, B => n283, Z => n282);
   U294 : GTECH_NOR2 port map( A => n280, B => n283, Z => n281);
   U295 : GTECH_NAND2 port map( A => n284, B => n285, Z => n283);
   U296 : GTECH_NAND2 port map( A => B(17), B => n80, Z => n285);
   U297 : GTECH_NAND2 port map( A => A(17), B => n110, Z => n284);
   U298 : GTECH_NAND2 port map( A => n286, B => n287, Z => n280);
   U299 : GTECH_NAND2 port map( A => B(16), B => n288, Z => n287);
   U300 : GTECH_NAND2 port map( A => n27, B => n79, Z => n288);
   U301 : GTECH_NAND2 port map( A => A(16), B => n289, Z => n286);
   U302 : GTECH_NOR2 port map( A => n290, B => n28, Z => SUM(16));
   U303 : GTECH_NAND2 port map( A => n289, B => n292, Z => n291);
   U304 : GTECH_NOR2 port map( A => n289, B => n292, Z => n290);
   U305 : GTECH_NAND2 port map( A => n293, B => n294, Z => n292);
   U306 : GTECH_NAND2 port map( A => B(16), B => n79, Z => n294);
   U307 : GTECH_NAND2 port map( A => A(16), B => n111, Z => n293);
   U308 : GTECH_NAND2 port map( A => n295, B => n296, Z => n289);
   U309 : GTECH_NAND2 port map( A => B(15), B => n297, Z => n296);
   U310 : GTECH_NAND2 port map( A => n29, B => n106, Z => n297);
   U311 : GTECH_NAND2 port map( A => A(15), B => n298, Z => n295);
   U312 : GTECH_NOR2 port map( A => n299, B => n30, Z => SUM(15));
   U313 : GTECH_NAND2 port map( A => n298, B => n301, Z => n300);
   U314 : GTECH_NOR2 port map( A => n298, B => n301, Z => n299);
   U315 : GTECH_NAND2 port map( A => n302, B => n303, Z => n301);
   U316 : GTECH_NAND2 port map( A => B(15), B => n106, Z => n303);
   U317 : GTECH_NAND2 port map( A => A(15), B => n112, Z => n302);
   U318 : GTECH_NAND2 port map( A => n304, B => n305, Z => n298);
   U319 : GTECH_NAND2 port map( A => B(14), B => n306, Z => n305);
   U320 : GTECH_NAND2 port map( A => n31, B => n74, Z => n306);
   U321 : GTECH_NAND2 port map( A => A(14), B => n307, Z => n304);
   U322 : GTECH_NOR2 port map( A => n308, B => n32, Z => SUM(14));
   U323 : GTECH_NAND2 port map( A => n307, B => n310, Z => n309);
   U324 : GTECH_NOR2 port map( A => n307, B => n310, Z => n308);
   U325 : GTECH_NAND2 port map( A => n311, B => n312, Z => n310);
   U326 : GTECH_NAND2 port map( A => B(14), B => n74, Z => n312);
   U327 : GTECH_NAND2 port map( A => A(14), B => n113, Z => n311);
   U328 : GTECH_NAND2 port map( A => n313, B => n314, Z => n307);
   U329 : GTECH_NAND2 port map( A => B(13), B => n315, Z => n314);
   U330 : GTECH_NAND2 port map( A => n33, B => n86, Z => n315);
   U331 : GTECH_NAND2 port map( A => A(13), B => n316, Z => n313);
   U332 : GTECH_NOR2 port map( A => n317, B => n34, Z => SUM(13));
   U333 : GTECH_NAND2 port map( A => n316, B => n319, Z => n318);
   U334 : GTECH_NOR2 port map( A => n316, B => n319, Z => n317);
   U335 : GTECH_NAND2 port map( A => n320, B => n321, Z => n319);
   U336 : GTECH_NAND2 port map( A => B(13), B => n86, Z => n321);
   U337 : GTECH_NAND2 port map( A => A(13), B => n107, Z => n320);
   U338 : GTECH_NAND2 port map( A => n322, B => n323, Z => n316);
   U339 : GTECH_NAND2 port map( A => B(12), B => n324, Z => n323);
   U340 : GTECH_NAND2 port map( A => n35, B => n85, Z => n324);
   U341 : GTECH_NAND2 port map( A => A(12), B => n325, Z => n322);
   U342 : GTECH_NOR2 port map( A => n326, B => n36, Z => SUM(12));
   U343 : GTECH_NAND2 port map( A => n325, B => n328, Z => n327);
   U344 : GTECH_NOR2 port map( A => n325, B => n328, Z => n326);
   U345 : GTECH_NAND2 port map( A => n329, B => n330, Z => n328);
   U346 : GTECH_NAND2 port map( A => B(12), B => n85, Z => n330);
   U347 : GTECH_NAND2 port map( A => A(12), B => n94, Z => n329);
   U348 : GTECH_NAND2 port map( A => n331, B => n332, Z => n325);
   U349 : GTECH_NAND2 port map( A => B(11), B => n333, Z => n332);
   U350 : GTECH_NAND2 port map( A => n37, B => n84, Z => n333);
   U351 : GTECH_NAND2 port map( A => A(11), B => n334, Z => n331);
   U352 : GTECH_NOR2 port map( A => n335, B => n38, Z => SUM(11));
   U353 : GTECH_NAND2 port map( A => n334, B => n337, Z => n336);
   U354 : GTECH_NOR2 port map( A => n334, B => n337, Z => n335);
   U355 : GTECH_NAND2 port map( A => n338, B => n339, Z => n337);
   U356 : GTECH_NAND2 port map( A => B(11), B => n84, Z => n339);
   U357 : GTECH_NAND2 port map( A => A(11), B => n108, Z => n338);
   U358 : GTECH_NAND2 port map( A => n340, B => n341, Z => n334);
   U359 : GTECH_NAND2 port map( A => B(10), B => n342, Z => n341);
   U360 : GTECH_NAND2 port map( A => n39, B => n104, Z => n342);
   U361 : GTECH_NAND2 port map( A => A(10), B => n343, Z => n340);
   U362 : GTECH_NOR2 port map( A => n344, B => n40, Z => SUM(10));
   U363 : GTECH_NAND2 port map( A => n343, B => n346, Z => n345);
   U364 : GTECH_NOR2 port map( A => n343, B => n346, Z => n344);
   U365 : GTECH_NAND2 port map( A => n347, B => n348, Z => n346);
   U366 : GTECH_NAND2 port map( A => B(10), B => n104, Z => n348);
   U367 : GTECH_NAND2 port map( A => A(10), B => n93, Z => n347);
   U368 : GTECH_NAND2 port map( A => n349, B => n350, Z => n343);
   U369 : GTECH_NAND2 port map( A => B(9), B => n351, Z => n350);
   U370 : GTECH_NAND2 port map( A => n41, B => n78, Z => n351);
   U371 : GTECH_NAND2 port map( A => A(9), B => n121, Z => n349);
   U372 : GTECH_NAND2 port map( A => n352, B => n353, Z => n121);
   U373 : GTECH_NAND2 port map( A => B(8), B => n354, Z => n353);
   U374 : GTECH_NAND2 port map( A => n42, B => n102, Z => n354);
   U375 : GTECH_NAND2 port map( A => A(8), B => n126, Z => n352);
   U376 : GTECH_NAND2 port map( A => n355, B => n356, Z => n126);
   U377 : GTECH_NAND2 port map( A => B(7), B => n357, Z => n356);
   U378 : GTECH_NAND2 port map( A => n44, B => n73, Z => n357);
   U379 : GTECH_NAND2 port map( A => A(7), B => n132, Z => n355);
   U380 : GTECH_NAND2 port map( A => n358, B => n359, Z => n132);
   U381 : GTECH_NAND2 port map( A => B(6), B => n360, Z => n359);
   U382 : GTECH_NAND2 port map( A => n46, B => n100, Z => n360);
   U383 : GTECH_NAND2 port map( A => A(6), B => n138, Z => n358);
   U384 : GTECH_NAND2 port map( A => n361, B => n362, Z => n138);
   U385 : GTECH_NAND2 port map( A => B(5), B => n363, Z => n362);
   U386 : GTECH_NAND2 port map( A => n65, B => n48, Z => n363);
   U387 : GTECH_NAND2 port map( A => A(5), B => n144, Z => n361);
   U388 : GTECH_NAND2 port map( A => n364, B => n365, Z => n144);
   U389 : GTECH_NAND2 port map( A => B(4), B => n366, Z => n365);
   U390 : GTECH_NAND2 port map( A => n66, B => n98, Z => n366);
   U391 : GTECH_NAND2 port map( A => A(4), B => n150, Z => n364);
   U392 : GTECH_NAND2 port map( A => n367, B => n368, Z => n150);
   U393 : GTECH_NAND2 port map( A => B(3), B => n369, Z => n368);
   U394 : GTECH_NAND2 port map( A => n68, B => n96, Z => n369);
   U395 : GTECH_NAND2 port map( A => A(3), B => n156, Z => n367);
   U396 : GTECH_NAND2 port map( A => n370, B => n371, Z => n156);
   U397 : GTECH_NAND2 port map( A => B(2), B => n372, Z => n371);
   U398 : GTECH_NAND2 port map( A => n70, B => n95, Z => n372);
   U399 : GTECH_NAND2 port map( A => A(2), B => n162, Z => n370);
   U400 : GTECH_NAND2 port map( A => n373, B => n374, Z => n162);
   U401 : GTECH_NAND2 port map( A => B(1), B => n375, Z => n374);
   U402 : GTECH_NAND2 port map( A => n88, B => n260, Z => n375);
   U403 : GTECH_NAND2 port map( A => A(1), B => n72, Z => n373);
   U404 : GTECH_NAND2 port map( A => B(0), B => A(0), Z => n260);
   U405 : GTECH_NAND2 port map( A => n63, B => n376, Z => SUM(0));
   U406 : GTECH_NAND2 port map( A => B(0), B => n64, Z => n376);
   U407 : GTECH_NOR2 port map( A => n64, B => B(0), Z => n377);

end SYN_rpl;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_zpu_core.all;

entity zpu_core_DW01_add_0 is

   port( A, B : in std_logic_vector (31 downto 0);  CI : in std_logic;  SUM : 
         out std_logic_vector (31 downto 0);  CO : out std_logic);

end zpu_core_DW01_add_0;

architecture SYN_rpl of zpu_core_DW01_add_0 is

   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   signal n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16
      , n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, 
      n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45
      , n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, 
      n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n73, n74
      , n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86, n87, n88, 
      n89, n90, n91, n92, n93, n94, n95, n96, n97, n98, n99, n100, n101, n102, 
      n103, n104, n105, n106, n107, n108, n109, n110, n111, n112, n113, n114, 
      n115, n116, n117, n118, n119, n120, n121, n122, n123, n124, n125, n126, 
      n127, n128, n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, 
      n139, n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150, 
      n151, n152, n153, n154, n155, n156, n157, n158, n159, n160, n161, n162, 
      n163, n164, n165, n166, n167, n168, n169, n170, n171, n172, n173, n174, 
      n175, n176, n177, n178, n179, n180, n181, n182, n183, n184, n185, n186, 
      n187, n188, n189, n190, n191, n192, n193, n194, n195, n196, n197, n198, 
      n199, n200, n201, n202, n203, n204, n205, n206, n207, n208, n209, n210, 
      n211, n212, n213, n214, n215, n216, n217, n218, n219, n220, n221, n222, 
      n223, n224, n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, 
      n235, n236, n237, n238, n239, n240, n241, n242, n243, n244, n245, n246, 
      n247, n248, n249, n250, n251, n252, n253, n254, n255, n256, n257, n258, 
      n259, n260, n261, n262, n263, n264, n265, n266, n267, n268, n269, n270, 
      n271, n272, n273, n274, n275, n276, n277, n278, n279, n280, n281, n282, 
      n283, n284, n285, n286, n287, n288, n289, n290, n291, n292, n293, n294, 
      n295, n296, n297, n298, n299, n300, n301, n302, n303, n304, n305, n306, 
      n307, n308, n309, n310, n311, n312, n313, n314, n315, n316, n317, n318, 
      n319, n320, n321, n322, n323, n324, n325, n326, n327, n328, n329, n330, 
      n331, n332, n333, n334, n335, n336, n337, n338, n339, n340, n341, n342, 
      n343, n344, n345, n346, n347, n348, n349, n350, n351, n352, n353, n354, 
      n355, n356, n357, n358, n359, n360, n361, n362, n363, n364, n365, n366, 
      n367, n368, n369, n370, n371, n372, n373, n374, n375, n376, n377, n378, 
      n379, n380, n381, n382, n383, n384, n385, n386, n387, n388, n389, n390, 
      n391, n392, n393, n394, n395, n396, n397, n398, n399, n400, n401, n402, 
      n403 : std_logic;

begin
   
   U1 : GTECH_NOT port map( A => n151, Z => n1);
   U2 : GTECH_NOT port map( A => n169, Z => n2);
   U3 : GTECH_NOT port map( A => n175, Z => n3);
   U4 : GTECH_NOT port map( A => n179, Z => n4);
   U5 : GTECH_NOT port map( A => n186, Z => n5);
   U6 : GTECH_NOT port map( A => n194, Z => n6);
   U7 : GTECH_NOT port map( A => n201, Z => n7);
   U8 : GTECH_NOT port map( A => n203, Z => n8);
   U9 : GTECH_NOT port map( A => n210, Z => n9);
   U10 : GTECH_NOT port map( A => n212, Z => n10);
   U11 : GTECH_NOT port map( A => n219, Z => n11);
   U12 : GTECH_NOT port map( A => n221, Z => n12);
   U13 : GTECH_NOT port map( A => n228, Z => n13);
   U14 : GTECH_NOT port map( A => n230, Z => n14);
   U15 : GTECH_NOT port map( A => n237, Z => n15);
   U16 : GTECH_NOT port map( A => n239, Z => n16);
   U17 : GTECH_NOT port map( A => n246, Z => n17);
   U18 : GTECH_NOT port map( A => n248, Z => n18);
   U19 : GTECH_NOT port map( A => n255, Z => n19);
   U20 : GTECH_NOT port map( A => n257, Z => n20);
   U21 : GTECH_NOT port map( A => n264, Z => n21);
   U22 : GTECH_NOT port map( A => n266, Z => n22);
   U23 : GTECH_NOT port map( A => n273, Z => n23);
   U24 : GTECH_NOT port map( A => n275, Z => n24);
   U25 : GTECH_NOT port map( A => n282, Z => n25);
   U26 : GTECH_NOT port map( A => n290, Z => n26);
   U27 : GTECH_NOT port map( A => n297, Z => n27);
   U28 : GTECH_NOT port map( A => n299, Z => n28);
   U29 : GTECH_NOT port map( A => n306, Z => n29);
   U30 : GTECH_NOT port map( A => n308, Z => n30);
   U31 : GTECH_NOT port map( A => n315, Z => n31);
   U32 : GTECH_NOT port map( A => n317, Z => n32);
   U33 : GTECH_NOT port map( A => n324, Z => n33);
   U34 : GTECH_NOT port map( A => n326, Z => n34);
   U35 : GTECH_NOT port map( A => n333, Z => n35);
   U36 : GTECH_NOT port map( A => n335, Z => n36);
   U37 : GTECH_NOT port map( A => n342, Z => n37);
   U38 : GTECH_NOT port map( A => n344, Z => n38);
   U39 : GTECH_NOT port map( A => n351, Z => n39);
   U40 : GTECH_NOT port map( A => n353, Z => n40);
   U41 : GTECH_NOT port map( A => n360, Z => n41);
   U42 : GTECH_NOT port map( A => n362, Z => n42);
   U43 : GTECH_NOT port map( A => n369, Z => n43);
   U44 : GTECH_NOT port map( A => n371, Z => n44);
   U45 : GTECH_NOT port map( A => n129, Z => n45);
   U46 : GTECH_NOT port map( A => n134, Z => n46);
   U47 : GTECH_NOT port map( A => n133, Z => n47);
   U48 : GTECH_NOT port map( A => n140, Z => n48);
   U49 : GTECH_NOT port map( A => n139, Z => n49);
   U50 : GTECH_NOT port map( A => n146, Z => n50);
   U51 : GTECH_NOT port map( A => n145, Z => n51);
   U52 : GTECH_NOT port map( A => A(5), Z => n52);
   U53 : GTECH_NOT port map( A => B(5), Z => n53);
   U54 : GTECH_NOT port map( A => n177, Z => n54);
   U55 : GTECH_NOT port map( A => B(31), Z => n55);
   U56 : GTECH_NOT port map( A => B(30), Z => n56);
   U57 : GTECH_NOT port map( A => B(29), Z => n57);
   U58 : GTECH_NOT port map( A => A(30), Z => n58);
   U59 : GTECH_NOT port map( A => A(29), Z => n59);
   U60 : GTECH_NOT port map( A => A(28), Z => n60);
   U61 : GTECH_NOT port map( A => B(28), Z => n61);
   U62 : GTECH_NOT port map( A => B(27), Z => n62);
   U63 : GTECH_NOT port map( A => B(26), Z => n63);
   U64 : GTECH_NOT port map( A => B(25), Z => n64);
   U65 : GTECH_NOT port map( A => B(24), Z => n65);
   U66 : GTECH_NOT port map( A => B(23), Z => n66);
   U67 : GTECH_NOT port map( A => n152, Z => n67);
   U68 : GTECH_NOT port map( A => n158, Z => n68);
   U69 : GTECH_NOT port map( A => n157, Z => n69);
   U70 : GTECH_NOT port map( A => n164, Z => n70);
   U71 : GTECH_NOT port map( A => n163, Z => n71);
   U72 : GTECH_NOT port map( A => n189, Z => n72);
   U73 : GTECH_NOT port map( A => n188, Z => n73);
   U74 : GTECH_NOT port map( A => n286, Z => n74);
   U75 : GTECH_NOT port map( A => n403, Z => n75);
   U76 : GTECH_NOT port map( A => B(7), Z => n76);
   U77 : GTECH_NOT port map( A => B(14), Z => n77);
   U78 : GTECH_NOT port map( A => B(21), Z => n78);
   U79 : GTECH_NOT port map( A => B(22), Z => n79);
   U80 : GTECH_NOT port map( A => n128, Z => n80);
   U81 : GTECH_NOT port map( A => B(9), Z => n81);
   U82 : GTECH_NOT port map( A => B(16), Z => n82);
   U83 : GTECH_NOT port map( A => B(17), Z => n83);
   U84 : GTECH_NOT port map( A => B(18), Z => n84);
   U85 : GTECH_NOT port map( A => B(19), Z => n85);
   U86 : GTECH_NOT port map( A => B(20), Z => n86);
   U87 : GTECH_NOT port map( A => B(11), Z => n87);
   U88 : GTECH_NOT port map( A => B(12), Z => n88);
   U89 : GTECH_NOT port map( A => B(13), Z => n89);
   U90 : GTECH_NOT port map( A => n285, Z => n90);
   U91 : GTECH_NOT port map( A => B(1), Z => n91);
   U92 : GTECH_NOT port map( A => A(1), Z => n92);
   U93 : GTECH_NOT port map( A => A(0), Z => n93);
   U94 : GTECH_NOT port map( A => A(27), Z => n94);
   U95 : GTECH_NOT port map( A => A(26), Z => n95);
   U96 : GTECH_NOT port map( A => A(25), Z => n96);
   U97 : GTECH_NOT port map( A => A(24), Z => n97);
   U98 : GTECH_NOT port map( A => A(23), Z => n98);
   U99 : GTECH_NOT port map( A => A(22), Z => n99);
   U100 : GTECH_NOT port map( A => A(21), Z => n100);
   U101 : GTECH_NOT port map( A => A(20), Z => n101);
   U102 : GTECH_NOT port map( A => A(19), Z => n102);
   U103 : GTECH_NOT port map( A => A(18), Z => n103);
   U104 : GTECH_NOT port map( A => A(17), Z => n104);
   U105 : GTECH_NOT port map( A => A(16), Z => n105);
   U106 : GTECH_NOT port map( A => A(14), Z => n106);
   U107 : GTECH_NOT port map( A => A(12), Z => n107);
   U108 : GTECH_NOT port map( A => A(11), Z => n108);
   U109 : GTECH_NOT port map( A => A(7), Z => n109);
   U110 : GTECH_NOT port map( A => A(9), Z => n110);
   U111 : GTECH_NOT port map( A => B(2), Z => n111);
   U112 : GTECH_NOT port map( A => A(2), Z => n112);
   U113 : GTECH_NOT port map( A => B(3), Z => n113);
   U114 : GTECH_NOT port map( A => A(3), Z => n114);
   U115 : GTECH_NOT port map( A => B(4), Z => n115);
   U116 : GTECH_NOT port map( A => A(4), Z => n116);
   U117 : GTECH_NOT port map( A => B(6), Z => n117);
   U118 : GTECH_NOT port map( A => A(6), Z => n118);
   U119 : GTECH_NOT port map( A => B(8), Z => n119);
   U120 : GTECH_NOT port map( A => A(8), Z => n120);
   U121 : GTECH_NOT port map( A => B(10), Z => n121);
   U122 : GTECH_NOT port map( A => A(10), Z => n122);
   U123 : GTECH_NOT port map( A => B(15), Z => n123);
   U124 : GTECH_NOT port map( A => A(15), Z => n124);
   U125 : GTECH_NOT port map( A => A(13), Z => n125);
   U126 : GTECH_NOR2 port map( A => n126, B => n127, Z => SUM(9));
   U127 : GTECH_NOR2 port map( A => n45, B => n128, Z => n127);
   U128 : GTECH_NOR2 port map( A => n129, B => n80, Z => n126);
   U129 : GTECH_NOR2 port map( A => n130, B => n131, Z => n128);
   U130 : GTECH_NOR2 port map( A => n81, B => A(9), Z => n131);
   U131 : GTECH_NOR2 port map( A => n110, B => B(9), Z => n130);
   U132 : GTECH_NOR2 port map( A => n132, B => n47, Z => SUM(8));
   U133 : GTECH_NAND2 port map( A => n134, B => n135, Z => n133);
   U134 : GTECH_NOR2 port map( A => n134, B => n135, Z => n132);
   U135 : GTECH_NAND2 port map( A => n136, B => n137, Z => n135);
   U136 : GTECH_NAND2 port map( A => B(8), B => n120, Z => n137);
   U137 : GTECH_NAND2 port map( A => A(8), B => n119, Z => n136);
   U138 : GTECH_NOR2 port map( A => n138, B => n49, Z => SUM(7));
   U139 : GTECH_NAND2 port map( A => n140, B => n141, Z => n139);
   U140 : GTECH_NOR2 port map( A => n140, B => n141, Z => n138);
   U141 : GTECH_NAND2 port map( A => n142, B => n143, Z => n141);
   U142 : GTECH_NAND2 port map( A => B(7), B => n109, Z => n143);
   U143 : GTECH_NAND2 port map( A => A(7), B => n76, Z => n142);
   U144 : GTECH_NOR2 port map( A => n144, B => n51, Z => SUM(6));
   U145 : GTECH_NAND2 port map( A => n146, B => n147, Z => n145);
   U146 : GTECH_NOR2 port map( A => n146, B => n147, Z => n144);
   U147 : GTECH_NAND2 port map( A => n148, B => n149, Z => n147);
   U148 : GTECH_NAND2 port map( A => B(6), B => n118, Z => n149);
   U149 : GTECH_NAND2 port map( A => A(6), B => n117, Z => n148);
   U150 : GTECH_NOR2 port map( A => n150, B => n1, Z => SUM(5));
   U151 : GTECH_NAND2 port map( A => n152, B => n153, Z => n151);
   U152 : GTECH_NOR2 port map( A => n152, B => n153, Z => n150);
   U153 : GTECH_NAND2 port map( A => n154, B => n155, Z => n153);
   U154 : GTECH_NAND2 port map( A => B(5), B => n52, Z => n155);
   U155 : GTECH_NAND2 port map( A => A(5), B => n53, Z => n154);
   U156 : GTECH_NOR2 port map( A => n156, B => n69, Z => SUM(4));
   U157 : GTECH_NAND2 port map( A => n158, B => n159, Z => n157);
   U158 : GTECH_NOR2 port map( A => n158, B => n159, Z => n156);
   U159 : GTECH_NAND2 port map( A => n160, B => n161, Z => n159);
   U160 : GTECH_NAND2 port map( A => B(4), B => n116, Z => n161);
   U161 : GTECH_NAND2 port map( A => A(4), B => n115, Z => n160);
   U162 : GTECH_NOR2 port map( A => n162, B => n71, Z => SUM(3));
   U163 : GTECH_NAND2 port map( A => n164, B => n165, Z => n163);
   U164 : GTECH_NOR2 port map( A => n164, B => n165, Z => n162);
   U165 : GTECH_NAND2 port map( A => n166, B => n167, Z => n165);
   U166 : GTECH_NAND2 port map( A => B(3), B => n114, Z => n167);
   U167 : GTECH_NAND2 port map( A => A(3), B => n113, Z => n166);
   U168 : GTECH_NOR2 port map( A => n168, B => n2, Z => SUM(31));
   U169 : GTECH_NAND2 port map( A => n170, B => n171, Z => n169);
   U170 : GTECH_NOR2 port map( A => n171, B => n170, Z => n168);
   U171 : GTECH_NAND2 port map( A => n172, B => n173, Z => n170);
   U172 : GTECH_NAND2 port map( A => B(30), B => n174, Z => n173);
   U173 : GTECH_NAND2 port map( A => n3, B => n58, Z => n174);
   U174 : GTECH_NAND2 port map( A => A(30), B => n175, Z => n172);
   U175 : GTECH_NAND2 port map( A => n176, B => n54, Z => n171);
   U176 : GTECH_NOR2 port map( A => n55, B => A(31), Z => n177);
   U177 : GTECH_NAND2 port map( A => A(31), B => n55, Z => n176);
   U178 : GTECH_NOR2 port map( A => n178, B => n4, Z => SUM(30));
   U179 : GTECH_NAND2 port map( A => n175, B => n180, Z => n179);
   U180 : GTECH_NOR2 port map( A => n175, B => n180, Z => n178);
   U181 : GTECH_NAND2 port map( A => n181, B => n182, Z => n180);
   U182 : GTECH_NAND2 port map( A => B(30), B => n58, Z => n182);
   U183 : GTECH_NAND2 port map( A => A(30), B => n56, Z => n181);
   U184 : GTECH_NAND2 port map( A => n183, B => n184, Z => n175);
   U185 : GTECH_NAND2 port map( A => B(29), B => n185, Z => n184);
   U186 : GTECH_NAND2 port map( A => n5, B => n59, Z => n185);
   U187 : GTECH_NAND2 port map( A => A(29), B => n186, Z => n183);
   U188 : GTECH_NOR2 port map( A => n187, B => n73, Z => SUM(2));
   U189 : GTECH_NAND2 port map( A => n189, B => n190, Z => n188);
   U190 : GTECH_NOR2 port map( A => n189, B => n190, Z => n187);
   U191 : GTECH_NAND2 port map( A => n191, B => n192, Z => n190);
   U192 : GTECH_NAND2 port map( A => B(2), B => n112, Z => n192);
   U193 : GTECH_NAND2 port map( A => A(2), B => n111, Z => n191);
   U194 : GTECH_NOR2 port map( A => n193, B => n6, Z => SUM(29));
   U195 : GTECH_NAND2 port map( A => n186, B => n195, Z => n194);
   U196 : GTECH_NOR2 port map( A => n186, B => n195, Z => n193);
   U197 : GTECH_NAND2 port map( A => n196, B => n197, Z => n195);
   U198 : GTECH_NAND2 port map( A => B(29), B => n59, Z => n197);
   U199 : GTECH_NAND2 port map( A => A(29), B => n57, Z => n196);
   U200 : GTECH_NAND2 port map( A => n198, B => n199, Z => n186);
   U201 : GTECH_NAND2 port map( A => B(28), B => n200, Z => n199);
   U202 : GTECH_NAND2 port map( A => n7, B => n60, Z => n200);
   U203 : GTECH_NAND2 port map( A => A(28), B => n201, Z => n198);
   U204 : GTECH_NOR2 port map( A => n202, B => n8, Z => SUM(28));
   U205 : GTECH_NAND2 port map( A => n201, B => n204, Z => n203);
   U206 : GTECH_NOR2 port map( A => n201, B => n204, Z => n202);
   U207 : GTECH_NAND2 port map( A => n205, B => n206, Z => n204);
   U208 : GTECH_NAND2 port map( A => B(28), B => n60, Z => n206);
   U209 : GTECH_NAND2 port map( A => A(28), B => n61, Z => n205);
   U210 : GTECH_NAND2 port map( A => n207, B => n208, Z => n201);
   U211 : GTECH_NAND2 port map( A => B(27), B => n209, Z => n208);
   U212 : GTECH_NAND2 port map( A => n9, B => n94, Z => n209);
   U213 : GTECH_NAND2 port map( A => A(27), B => n210, Z => n207);
   U214 : GTECH_NOR2 port map( A => n211, B => n10, Z => SUM(27));
   U215 : GTECH_NAND2 port map( A => n210, B => n213, Z => n212);
   U216 : GTECH_NOR2 port map( A => n210, B => n213, Z => n211);
   U217 : GTECH_NAND2 port map( A => n214, B => n215, Z => n213);
   U218 : GTECH_NAND2 port map( A => B(27), B => n94, Z => n215);
   U219 : GTECH_NAND2 port map( A => A(27), B => n62, Z => n214);
   U220 : GTECH_NAND2 port map( A => n216, B => n217, Z => n210);
   U221 : GTECH_NAND2 port map( A => B(26), B => n218, Z => n217);
   U222 : GTECH_NAND2 port map( A => n11, B => n95, Z => n218);
   U223 : GTECH_NAND2 port map( A => A(26), B => n219, Z => n216);
   U224 : GTECH_NOR2 port map( A => n220, B => n12, Z => SUM(26));
   U225 : GTECH_NAND2 port map( A => n219, B => n222, Z => n221);
   U226 : GTECH_NOR2 port map( A => n219, B => n222, Z => n220);
   U227 : GTECH_NAND2 port map( A => n223, B => n224, Z => n222);
   U228 : GTECH_NAND2 port map( A => B(26), B => n95, Z => n224);
   U229 : GTECH_NAND2 port map( A => A(26), B => n63, Z => n223);
   U230 : GTECH_NAND2 port map( A => n225, B => n226, Z => n219);
   U231 : GTECH_NAND2 port map( A => B(25), B => n227, Z => n226);
   U232 : GTECH_NAND2 port map( A => n13, B => n96, Z => n227);
   U233 : GTECH_NAND2 port map( A => A(25), B => n228, Z => n225);
   U234 : GTECH_NOR2 port map( A => n229, B => n14, Z => SUM(25));
   U235 : GTECH_NAND2 port map( A => n228, B => n231, Z => n230);
   U236 : GTECH_NOR2 port map( A => n228, B => n231, Z => n229);
   U237 : GTECH_NAND2 port map( A => n232, B => n233, Z => n231);
   U238 : GTECH_NAND2 port map( A => B(25), B => n96, Z => n233);
   U239 : GTECH_NAND2 port map( A => A(25), B => n64, Z => n232);
   U240 : GTECH_NAND2 port map( A => n234, B => n235, Z => n228);
   U241 : GTECH_NAND2 port map( A => B(24), B => n236, Z => n235);
   U242 : GTECH_NAND2 port map( A => n15, B => n97, Z => n236);
   U243 : GTECH_NAND2 port map( A => A(24), B => n237, Z => n234);
   U244 : GTECH_NOR2 port map( A => n238, B => n16, Z => SUM(24));
   U245 : GTECH_NAND2 port map( A => n237, B => n240, Z => n239);
   U246 : GTECH_NOR2 port map( A => n237, B => n240, Z => n238);
   U247 : GTECH_NAND2 port map( A => n241, B => n242, Z => n240);
   U248 : GTECH_NAND2 port map( A => B(24), B => n97, Z => n242);
   U249 : GTECH_NAND2 port map( A => A(24), B => n65, Z => n241);
   U250 : GTECH_NAND2 port map( A => n243, B => n244, Z => n237);
   U251 : GTECH_NAND2 port map( A => B(23), B => n245, Z => n244);
   U252 : GTECH_NAND2 port map( A => n17, B => n98, Z => n245);
   U253 : GTECH_NAND2 port map( A => A(23), B => n246, Z => n243);
   U254 : GTECH_NOR2 port map( A => n247, B => n18, Z => SUM(23));
   U255 : GTECH_NAND2 port map( A => n246, B => n249, Z => n248);
   U256 : GTECH_NOR2 port map( A => n246, B => n249, Z => n247);
   U257 : GTECH_NAND2 port map( A => n250, B => n251, Z => n249);
   U258 : GTECH_NAND2 port map( A => B(23), B => n98, Z => n251);
   U259 : GTECH_NAND2 port map( A => A(23), B => n66, Z => n250);
   U260 : GTECH_NAND2 port map( A => n252, B => n253, Z => n246);
   U261 : GTECH_NAND2 port map( A => B(22), B => n254, Z => n253);
   U262 : GTECH_NAND2 port map( A => n19, B => n99, Z => n254);
   U263 : GTECH_NAND2 port map( A => A(22), B => n255, Z => n252);
   U264 : GTECH_NOR2 port map( A => n256, B => n20, Z => SUM(22));
   U265 : GTECH_NAND2 port map( A => n255, B => n258, Z => n257);
   U266 : GTECH_NOR2 port map( A => n255, B => n258, Z => n256);
   U267 : GTECH_NAND2 port map( A => n259, B => n260, Z => n258);
   U268 : GTECH_NAND2 port map( A => B(22), B => n99, Z => n260);
   U269 : GTECH_NAND2 port map( A => A(22), B => n79, Z => n259);
   U270 : GTECH_NAND2 port map( A => n261, B => n262, Z => n255);
   U271 : GTECH_NAND2 port map( A => B(21), B => n263, Z => n262);
   U272 : GTECH_NAND2 port map( A => n21, B => n100, Z => n263);
   U273 : GTECH_NAND2 port map( A => A(21), B => n264, Z => n261);
   U274 : GTECH_NOR2 port map( A => n265, B => n22, Z => SUM(21));
   U275 : GTECH_NAND2 port map( A => n264, B => n267, Z => n266);
   U276 : GTECH_NOR2 port map( A => n264, B => n267, Z => n265);
   U277 : GTECH_NAND2 port map( A => n268, B => n269, Z => n267);
   U278 : GTECH_NAND2 port map( A => B(21), B => n100, Z => n269);
   U279 : GTECH_NAND2 port map( A => A(21), B => n78, Z => n268);
   U280 : GTECH_NAND2 port map( A => n270, B => n271, Z => n264);
   U281 : GTECH_NAND2 port map( A => B(20), B => n272, Z => n271);
   U282 : GTECH_NAND2 port map( A => n23, B => n101, Z => n272);
   U283 : GTECH_NAND2 port map( A => A(20), B => n273, Z => n270);
   U284 : GTECH_NOR2 port map( A => n274, B => n24, Z => SUM(20));
   U285 : GTECH_NAND2 port map( A => n273, B => n276, Z => n275);
   U286 : GTECH_NOR2 port map( A => n273, B => n276, Z => n274);
   U287 : GTECH_NAND2 port map( A => n277, B => n278, Z => n276);
   U288 : GTECH_NAND2 port map( A => B(20), B => n101, Z => n278);
   U289 : GTECH_NAND2 port map( A => A(20), B => n86, Z => n277);
   U290 : GTECH_NAND2 port map( A => n279, B => n280, Z => n273);
   U291 : GTECH_NAND2 port map( A => B(19), B => n281, Z => n280);
   U292 : GTECH_NAND2 port map( A => n25, B => n102, Z => n281);
   U293 : GTECH_NAND2 port map( A => A(19), B => n282, Z => n279);
   U294 : GTECH_NAND2 port map( A => n283, B => n284, Z => SUM(1));
   U295 : GTECH_NAND2 port map( A => n285, B => n74, Z => n284);
   U296 : GTECH_NAND2 port map( A => n90, B => n286, Z => n283);
   U297 : GTECH_NOR2 port map( A => n287, B => n288, Z => n285);
   U298 : GTECH_NOR2 port map( A => n91, B => A(1), Z => n288);
   U299 : GTECH_NOR2 port map( A => n92, B => B(1), Z => n287);
   U300 : GTECH_NOR2 port map( A => n289, B => n26, Z => SUM(19));
   U301 : GTECH_NAND2 port map( A => n282, B => n291, Z => n290);
   U302 : GTECH_NOR2 port map( A => n282, B => n291, Z => n289);
   U303 : GTECH_NAND2 port map( A => n292, B => n293, Z => n291);
   U304 : GTECH_NAND2 port map( A => B(19), B => n102, Z => n293);
   U305 : GTECH_NAND2 port map( A => A(19), B => n85, Z => n292);
   U306 : GTECH_NAND2 port map( A => n294, B => n295, Z => n282);
   U307 : GTECH_NAND2 port map( A => B(18), B => n296, Z => n295);
   U308 : GTECH_NAND2 port map( A => n27, B => n103, Z => n296);
   U309 : GTECH_NAND2 port map( A => A(18), B => n297, Z => n294);
   U310 : GTECH_NOR2 port map( A => n298, B => n28, Z => SUM(18));
   U311 : GTECH_NAND2 port map( A => n297, B => n300, Z => n299);
   U312 : GTECH_NOR2 port map( A => n297, B => n300, Z => n298);
   U313 : GTECH_NAND2 port map( A => n301, B => n302, Z => n300);
   U314 : GTECH_NAND2 port map( A => B(18), B => n103, Z => n302);
   U315 : GTECH_NAND2 port map( A => A(18), B => n84, Z => n301);
   U316 : GTECH_NAND2 port map( A => n303, B => n304, Z => n297);
   U317 : GTECH_NAND2 port map( A => B(17), B => n305, Z => n304);
   U318 : GTECH_NAND2 port map( A => n29, B => n104, Z => n305);
   U319 : GTECH_NAND2 port map( A => A(17), B => n306, Z => n303);
   U320 : GTECH_NOR2 port map( A => n307, B => n30, Z => SUM(17));
   U321 : GTECH_NAND2 port map( A => n306, B => n309, Z => n308);
   U322 : GTECH_NOR2 port map( A => n306, B => n309, Z => n307);
   U323 : GTECH_NAND2 port map( A => n310, B => n311, Z => n309);
   U324 : GTECH_NAND2 port map( A => B(17), B => n104, Z => n311);
   U325 : GTECH_NAND2 port map( A => A(17), B => n83, Z => n310);
   U326 : GTECH_NAND2 port map( A => n312, B => n313, Z => n306);
   U327 : GTECH_NAND2 port map( A => B(16), B => n314, Z => n313);
   U328 : GTECH_NAND2 port map( A => n31, B => n105, Z => n314);
   U329 : GTECH_NAND2 port map( A => A(16), B => n315, Z => n312);
   U330 : GTECH_NOR2 port map( A => n316, B => n32, Z => SUM(16));
   U331 : GTECH_NAND2 port map( A => n315, B => n318, Z => n317);
   U332 : GTECH_NOR2 port map( A => n315, B => n318, Z => n316);
   U333 : GTECH_NAND2 port map( A => n319, B => n320, Z => n318);
   U334 : GTECH_NAND2 port map( A => B(16), B => n105, Z => n320);
   U335 : GTECH_NAND2 port map( A => A(16), B => n82, Z => n319);
   U336 : GTECH_NAND2 port map( A => n321, B => n322, Z => n315);
   U337 : GTECH_NAND2 port map( A => B(15), B => n323, Z => n322);
   U338 : GTECH_NAND2 port map( A => n33, B => n124, Z => n323);
   U339 : GTECH_NAND2 port map( A => A(15), B => n324, Z => n321);
   U340 : GTECH_NOR2 port map( A => n325, B => n34, Z => SUM(15));
   U341 : GTECH_NAND2 port map( A => n324, B => n327, Z => n326);
   U342 : GTECH_NOR2 port map( A => n324, B => n327, Z => n325);
   U343 : GTECH_NAND2 port map( A => n328, B => n329, Z => n327);
   U344 : GTECH_NAND2 port map( A => B(15), B => n124, Z => n329);
   U345 : GTECH_NAND2 port map( A => A(15), B => n123, Z => n328);
   U346 : GTECH_NAND2 port map( A => n330, B => n331, Z => n324);
   U347 : GTECH_NAND2 port map( A => B(14), B => n332, Z => n331);
   U348 : GTECH_NAND2 port map( A => n35, B => n106, Z => n332);
   U349 : GTECH_NAND2 port map( A => A(14), B => n333, Z => n330);
   U350 : GTECH_NOR2 port map( A => n334, B => n36, Z => SUM(14));
   U351 : GTECH_NAND2 port map( A => n333, B => n336, Z => n335);
   U352 : GTECH_NOR2 port map( A => n333, B => n336, Z => n334);
   U353 : GTECH_NAND2 port map( A => n337, B => n338, Z => n336);
   U354 : GTECH_NAND2 port map( A => B(14), B => n106, Z => n338);
   U355 : GTECH_NAND2 port map( A => A(14), B => n77, Z => n337);
   U356 : GTECH_NAND2 port map( A => n339, B => n340, Z => n333);
   U357 : GTECH_NAND2 port map( A => B(13), B => n341, Z => n340);
   U358 : GTECH_NAND2 port map( A => n37, B => n125, Z => n341);
   U359 : GTECH_NAND2 port map( A => A(13), B => n342, Z => n339);
   U360 : GTECH_NOR2 port map( A => n343, B => n38, Z => SUM(13));
   U361 : GTECH_NAND2 port map( A => n342, B => n345, Z => n344);
   U362 : GTECH_NOR2 port map( A => n342, B => n345, Z => n343);
   U363 : GTECH_NAND2 port map( A => n346, B => n347, Z => n345);
   U364 : GTECH_NAND2 port map( A => B(13), B => n125, Z => n347);
   U365 : GTECH_NAND2 port map( A => A(13), B => n89, Z => n346);
   U366 : GTECH_NAND2 port map( A => n348, B => n349, Z => n342);
   U367 : GTECH_NAND2 port map( A => B(12), B => n350, Z => n349);
   U368 : GTECH_NAND2 port map( A => n39, B => n107, Z => n350);
   U369 : GTECH_NAND2 port map( A => A(12), B => n351, Z => n348);
   U370 : GTECH_NOR2 port map( A => n352, B => n40, Z => SUM(12));
   U371 : GTECH_NAND2 port map( A => n351, B => n354, Z => n353);
   U372 : GTECH_NOR2 port map( A => n351, B => n354, Z => n352);
   U373 : GTECH_NAND2 port map( A => n355, B => n356, Z => n354);
   U374 : GTECH_NAND2 port map( A => B(12), B => n107, Z => n356);
   U375 : GTECH_NAND2 port map( A => A(12), B => n88, Z => n355);
   U376 : GTECH_NAND2 port map( A => n357, B => n358, Z => n351);
   U377 : GTECH_NAND2 port map( A => B(11), B => n359, Z => n358);
   U378 : GTECH_NAND2 port map( A => n41, B => n108, Z => n359);
   U379 : GTECH_NAND2 port map( A => A(11), B => n360, Z => n357);
   U380 : GTECH_NOR2 port map( A => n361, B => n42, Z => SUM(11));
   U381 : GTECH_NAND2 port map( A => n360, B => n363, Z => n362);
   U382 : GTECH_NOR2 port map( A => n360, B => n363, Z => n361);
   U383 : GTECH_NAND2 port map( A => n364, B => n365, Z => n363);
   U384 : GTECH_NAND2 port map( A => B(11), B => n108, Z => n365);
   U385 : GTECH_NAND2 port map( A => A(11), B => n87, Z => n364);
   U386 : GTECH_NAND2 port map( A => n366, B => n367, Z => n360);
   U387 : GTECH_NAND2 port map( A => B(10), B => n368, Z => n367);
   U388 : GTECH_NAND2 port map( A => n43, B => n122, Z => n368);
   U389 : GTECH_NAND2 port map( A => A(10), B => n369, Z => n366);
   U390 : GTECH_NOR2 port map( A => n370, B => n44, Z => SUM(10));
   U391 : GTECH_NAND2 port map( A => n369, B => n372, Z => n371);
   U392 : GTECH_NOR2 port map( A => n369, B => n372, Z => n370);
   U393 : GTECH_NAND2 port map( A => n373, B => n374, Z => n372);
   U394 : GTECH_NAND2 port map( A => B(10), B => n122, Z => n374);
   U395 : GTECH_NAND2 port map( A => A(10), B => n121, Z => n373);
   U396 : GTECH_NAND2 port map( A => n375, B => n376, Z => n369);
   U397 : GTECH_NAND2 port map( A => B(9), B => n377, Z => n376);
   U398 : GTECH_NAND2 port map( A => n45, B => n110, Z => n377);
   U399 : GTECH_NAND2 port map( A => A(9), B => n129, Z => n375);
   U400 : GTECH_NAND2 port map( A => n378, B => n379, Z => n129);
   U401 : GTECH_NAND2 port map( A => B(8), B => n380, Z => n379);
   U402 : GTECH_NAND2 port map( A => n46, B => n120, Z => n380);
   U403 : GTECH_NAND2 port map( A => A(8), B => n134, Z => n378);
   U404 : GTECH_NAND2 port map( A => n381, B => n382, Z => n134);
   U405 : GTECH_NAND2 port map( A => B(7), B => n383, Z => n382);
   U406 : GTECH_NAND2 port map( A => n48, B => n109, Z => n383);
   U407 : GTECH_NAND2 port map( A => A(7), B => n140, Z => n381);
   U408 : GTECH_NAND2 port map( A => n384, B => n385, Z => n140);
   U409 : GTECH_NAND2 port map( A => B(6), B => n386, Z => n385);
   U410 : GTECH_NAND2 port map( A => n50, B => n118, Z => n386);
   U411 : GTECH_NAND2 port map( A => A(6), B => n146, Z => n384);
   U412 : GTECH_NAND2 port map( A => n387, B => n388, Z => n146);
   U413 : GTECH_NAND2 port map( A => B(5), B => n389, Z => n388);
   U414 : GTECH_NAND2 port map( A => n67, B => n52, Z => n389);
   U415 : GTECH_NAND2 port map( A => A(5), B => n152, Z => n387);
   U416 : GTECH_NAND2 port map( A => n390, B => n391, Z => n152);
   U417 : GTECH_NAND2 port map( A => B(4), B => n392, Z => n391);
   U418 : GTECH_NAND2 port map( A => n68, B => n116, Z => n392);
   U419 : GTECH_NAND2 port map( A => A(4), B => n158, Z => n390);
   U420 : GTECH_NAND2 port map( A => n393, B => n394, Z => n158);
   U421 : GTECH_NAND2 port map( A => B(3), B => n395, Z => n394);
   U422 : GTECH_NAND2 port map( A => n70, B => n114, Z => n395);
   U423 : GTECH_NAND2 port map( A => A(3), B => n164, Z => n393);
   U424 : GTECH_NAND2 port map( A => n396, B => n397, Z => n164);
   U425 : GTECH_NAND2 port map( A => B(2), B => n398, Z => n397);
   U426 : GTECH_NAND2 port map( A => n72, B => n112, Z => n398);
   U427 : GTECH_NAND2 port map( A => A(2), B => n189, Z => n396);
   U428 : GTECH_NAND2 port map( A => n399, B => n400, Z => n189);
   U429 : GTECH_NAND2 port map( A => B(1), B => n401, Z => n400);
   U430 : GTECH_NAND2 port map( A => n92, B => n286, Z => n401);
   U431 : GTECH_NAND2 port map( A => A(1), B => n74, Z => n399);
   U432 : GTECH_NAND2 port map( A => B(0), B => A(0), Z => n286);
   U433 : GTECH_NAND2 port map( A => n75, B => n402, Z => SUM(0));
   U434 : GTECH_NAND2 port map( A => B(0), B => n93, Z => n402);
   U435 : GTECH_NOR2 port map( A => n93, B => B(0), Z => n403);

end SYN_rpl;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_zpu_core.all;

entity zpu_core_DW01_sub_0 is

   port( A, B : in std_logic_vector (31 downto 0);  CI : in std_logic;  DIFF : 
         out std_logic_vector (31 downto 0);  CO : out std_logic);

end zpu_core_DW01_sub_0;

architecture SYN_rpl of zpu_core_DW01_sub_0 is

   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   signal n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16
      , n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, 
      n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45
      , n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, 
      n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n73, n74
      , n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86, n87, n88, 
      n89, n90, n91, n92, n93, n94, n95, n96, n97, n98, n99, n100, n101, n102, 
      n103, n104, n105, n106, n107, n108, n109, n110, n111, n112, n113, n114, 
      n115, n116, n117, n118, n119, n120, n121, n122, n123, n124, n125, n126, 
      n127, n128, n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, 
      n139, n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150, 
      n151, n152, n153, n154, n155, n156, n157, n158, n159, n160, n161, n162, 
      n163, n164, n165, n166, n167, n168, n169, n170, n171, n172, n173, n174, 
      n175, n176, n177, n178, n179, n180, n181, n182, n183, n184, n185, n186, 
      n187, n188, n189, n190, n191, n192, n193, n194, n195, n196, n197, n198, 
      n199, n200, n201, n202, n203, n204, n205, n206, n207, n208, n209, n210, 
      n211, n212, n213, n214, n215, n216, n217, n218, n219, n220, n221, n222, 
      n223, n224, n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, 
      n235, n236, n237, n238, n239, n240, n241, n242, n243, n244, n245, n246, 
      n247, n248, n249, n250, n251, n252, n253, n254, n255, n256, n257, n258, 
      n259, n260, n261, n262, n263, n264, n265, n266, n267, n268, n269, n270, 
      n271, n272, n273, n274, n275, n276, n277, n278, n279, n280, n281, n282, 
      n283, n284, n285, n286, n287, n288, n289, n290, n291, n292, n293, n294, 
      n295, n296, n297, n298, n299, n300, n301, n302, n303, n304, n305, n306, 
      n307, n308, n309, n310, n311, n312, n313, n314, n315, n316, n317, n318, 
      n319, n320, n321, n322, n323, n324, n325, n326, n327, n328, n329, n330, 
      n331, n332, n333, n334, n335, n336, n337, n338, n339, n340, n341, n342, 
      n343, n344, n345, n346, n347, n348, n349, n350, n351, n352, n353, n354, 
      n355, n356, n357, n358, n359, n360, n361, n362, n363, n364, n365, n366, 
      n367, n368, n369, n370, n371, n372, n373, n374, n375, n376, n377, n378, 
      n379, n380, n381, n382, n383, n384, n385, n386, n387, n388, n389, n390, 
      n391, n392, n393, n394, n395, n396, n397, n398, n399, n400, n401 : 
      std_logic;

begin
   
   U1 : GTECH_NOT port map( A => n152, Z => n1);
   U2 : GTECH_NOT port map( A => n360, Z => n2);
   U3 : GTECH_NOT port map( A => n342, Z => n3);
   U4 : GTECH_NOT port map( A => n324, Z => n4);
   U5 : GTECH_NOT port map( A => n306, Z => n5);
   U6 : GTECH_NOT port map( A => n288, Z => n6);
   U7 : GTECH_NOT port map( A => n265, Z => n7);
   U8 : GTECH_NOT port map( A => n247, Z => n8);
   U9 : GTECH_NOT port map( A => n229, Z => n9);
   U10 : GTECH_NOT port map( A => n211, Z => n10);
   U11 : GTECH_NOT port map( A => n193, Z => n11);
   U12 : GTECH_NOT port map( A => n168, Z => n12);
   U13 : GTECH_NOT port map( A => n174, Z => n13);
   U14 : GTECH_NOT port map( A => n183, Z => n14);
   U15 : GTECH_NOT port map( A => n198, Z => n15);
   U16 : GTECH_NOT port map( A => n207, Z => n16);
   U17 : GTECH_NOT port map( A => n216, Z => n17);
   U18 : GTECH_NOT port map( A => n225, Z => n18);
   U19 : GTECH_NOT port map( A => n234, Z => n19);
   U20 : GTECH_NOT port map( A => n243, Z => n20);
   U21 : GTECH_NOT port map( A => n252, Z => n21);
   U22 : GTECH_NOT port map( A => n261, Z => n22);
   U23 : GTECH_NOT port map( A => n270, Z => n23);
   U24 : GTECH_NOT port map( A => n279, Z => n24);
   U25 : GTECH_NOT port map( A => n293, Z => n25);
   U26 : GTECH_NOT port map( A => n302, Z => n26);
   U27 : GTECH_NOT port map( A => n311, Z => n27);
   U28 : GTECH_NOT port map( A => n320, Z => n28);
   U29 : GTECH_NOT port map( A => n329, Z => n29);
   U30 : GTECH_NOT port map( A => n338, Z => n30);
   U31 : GTECH_NOT port map( A => n347, Z => n31);
   U32 : GTECH_NOT port map( A => n356, Z => n32);
   U33 : GTECH_NOT port map( A => n365, Z => n33);
   U34 : GTECH_NOT port map( A => n372, Z => n34);
   U35 : GTECH_NOT port map( A => n128, Z => n35);
   U36 : GTECH_NOT port map( A => n376, Z => n36);
   U37 : GTECH_NOT port map( A => n132, Z => n37);
   U38 : GTECH_NOT port map( A => n139, Z => n38);
   U39 : GTECH_NOT port map( A => n382, Z => n39);
   U40 : GTECH_NOT port map( A => n144, Z => n40);
   U41 : GTECH_NOT port map( A => B(5), Z => n41);
   U42 : GTECH_NOT port map( A => A(5), Z => n42);
   U43 : GTECH_NOT port map( A => B(31), Z => n43);
   U44 : GTECH_NOT port map( A => n179, Z => n44);
   U45 : GTECH_NOT port map( A => B(30), Z => n45);
   U46 : GTECH_NOT port map( A => n200, Z => n46);
   U47 : GTECH_NOT port map( A => A(29), Z => n47);
   U48 : GTECH_NOT port map( A => n203, Z => n48);
   U49 : GTECH_NOT port map( A => B(28), Z => n49);
   U50 : GTECH_NOT port map( A => n218, Z => n50);
   U51 : GTECH_NOT port map( A => A(27), Z => n51);
   U52 : GTECH_NOT port map( A => n221, Z => n52);
   U53 : GTECH_NOT port map( A => B(26), Z => n53);
   U54 : GTECH_NOT port map( A => n236, Z => n54);
   U55 : GTECH_NOT port map( A => A(25), Z => n55);
   U56 : GTECH_NOT port map( A => n239, Z => n56);
   U57 : GTECH_NOT port map( A => B(24), Z => n57);
   U58 : GTECH_NOT port map( A => A(24), Z => n58);
   U59 : GTECH_NOT port map( A => n254, Z => n59);
   U60 : GTECH_NOT port map( A => A(23), Z => n60);
   U61 : GTECH_NOT port map( A => n283, Z => n61);
   U62 : GTECH_NOT port map( A => n151, Z => n62);
   U63 : GTECH_NOT port map( A => n388, Z => n63);
   U64 : GTECH_NOT port map( A => n156, Z => n64);
   U65 : GTECH_NOT port map( A => n163, Z => n65);
   U66 : GTECH_NOT port map( A => n394, Z => n66);
   U67 : GTECH_NOT port map( A => n187, Z => n67);
   U68 : GTECH_NOT port map( A => n398, Z => n68);
   U69 : GTECH_NOT port map( A => B(0), Z => n69);
   U70 : GTECH_NOT port map( A => n140, Z => n70);
   U71 : GTECH_NOT port map( A => B(7), Z => n71);
   U72 : GTECH_NOT port map( A => n334, Z => n72);
   U73 : GTECH_NOT port map( A => B(14), Z => n73);
   U74 : GTECH_NOT port map( A => n272, Z => n74);
   U75 : GTECH_NOT port map( A => n257, Z => n75);
   U76 : GTECH_NOT port map( A => B(22), Z => n76);
   U77 : GTECH_NOT port map( A => B(9), Z => n77);
   U78 : GTECH_NOT port map( A => n316, Z => n78);
   U79 : GTECH_NOT port map( A => B(16), Z => n79);
   U80 : GTECH_NOT port map( A => n313, Z => n80);
   U81 : GTECH_NOT port map( A => n298, Z => n81);
   U82 : GTECH_NOT port map( A => B(18), Z => n82);
   U83 : GTECH_NOT port map( A => n295, Z => n83);
   U84 : GTECH_NOT port map( A => n275, Z => n84);
   U85 : GTECH_NOT port map( A => B(20), Z => n85);
   U86 : GTECH_NOT port map( A => n367, Z => n86);
   U87 : GTECH_NOT port map( A => n352, Z => n87);
   U88 : GTECH_NOT port map( A => B(12), Z => n88);
   U89 : GTECH_NOT port map( A => n349, Z => n89);
   U90 : GTECH_NOT port map( A => B(1), Z => n90);
   U91 : GTECH_NOT port map( A => A(31), Z => n91);
   U92 : GTECH_NOT port map( A => A(30), Z => n92);
   U93 : GTECH_NOT port map( A => A(28), Z => n93);
   U94 : GTECH_NOT port map( A => A(26), Z => n94);
   U95 : GTECH_NOT port map( A => A(1), Z => n95);
   U96 : GTECH_NOT port map( A => n191, Z => n96);
   U97 : GTECH_NOT port map( A => A(2), Z => n97);
   U98 : GTECH_NOT port map( A => n164, Z => n98);
   U99 : GTECH_NOT port map( A => B(3), Z => n99);
   U100 : GTECH_NOT port map( A => A(3), Z => n100);
   U101 : GTECH_NOT port map( A => n160, Z => n101);
   U102 : GTECH_NOT port map( A => A(4), Z => n102);
   U103 : GTECH_NOT port map( A => n148, Z => n103);
   U104 : GTECH_NOT port map( A => A(6), Z => n104);
   U105 : GTECH_NOT port map( A => n136, Z => n105);
   U106 : GTECH_NOT port map( A => A(8), Z => n106);
   U107 : GTECH_NOT port map( A => n370, Z => n107);
   U108 : GTECH_NOT port map( A => B(10), Z => n108);
   U109 : GTECH_NOT port map( A => A(10), Z => n109);
   U110 : GTECH_NOT port map( A => n331, Z => n110);
   U111 : GTECH_NOT port map( A => A(15), Z => n111);
   U112 : GTECH_NOT port map( A => A(13), Z => n112);
   U113 : GTECH_NOT port map( A => A(12), Z => n113);
   U114 : GTECH_NOT port map( A => A(11), Z => n114);
   U115 : GTECH_NOT port map( A => A(20), Z => n115);
   U116 : GTECH_NOT port map( A => A(19), Z => n116);
   U117 : GTECH_NOT port map( A => A(18), Z => n117);
   U118 : GTECH_NOT port map( A => A(17), Z => n118);
   U119 : GTECH_NOT port map( A => A(16), Z => n119);
   U120 : GTECH_NOT port map( A => A(9), Z => n120);
   U121 : GTECH_NOT port map( A => A(22), Z => n121);
   U122 : GTECH_NOT port map( A => A(21), Z => n122);
   U123 : GTECH_NOT port map( A => A(14), Z => n123);
   U124 : GTECH_NOT port map( A => A(7), Z => n124);
   U125 : GTECH_NAND2 port map( A => n35, B => n125, Z => DIFF(9));
   U126 : GTECH_NAND2 port map( A => n126, B => n127, Z => n125);
   U127 : GTECH_NOR2 port map( A => n126, B => n127, Z => n128);
   U128 : GTECH_NOR2 port map( A => n129, B => n130, Z => n126);
   U129 : GTECH_NOR2 port map( A => n77, B => A(9), Z => n130);
   U130 : GTECH_NOR2 port map( A => n120, B => B(9), Z => n129);
   U131 : GTECH_NAND2 port map( A => n131, B => n37, Z => DIFF(8));
   U132 : GTECH_NOR2 port map( A => n133, B => n134, Z => n132);
   U133 : GTECH_NAND2 port map( A => n133, B => n134, Z => n131);
   U134 : GTECH_NAND2 port map( A => n105, B => n135, Z => n133);
   U135 : GTECH_NAND2 port map( A => B(8), B => n106, Z => n135);
   U136 : GTECH_NOR2 port map( A => n106, B => B(8), Z => n136);
   U137 : GTECH_NAND2 port map( A => n137, B => n138, Z => DIFF(7));
   U138 : GTECH_NAND2 port map( A => n70, B => n139, Z => n138);
   U139 : GTECH_NAND2 port map( A => n140, B => n38, Z => n137);
   U140 : GTECH_NAND2 port map( A => n141, B => n142, Z => n140);
   U141 : GTECH_NAND2 port map( A => B(7), B => n124, Z => n142);
   U142 : GTECH_NAND2 port map( A => A(7), B => n71, Z => n141);
   U143 : GTECH_NAND2 port map( A => n143, B => n40, Z => DIFF(6));
   U144 : GTECH_NOR2 port map( A => n145, B => n146, Z => n144);
   U145 : GTECH_NAND2 port map( A => n145, B => n146, Z => n143);
   U146 : GTECH_NAND2 port map( A => n103, B => n147, Z => n145);
   U147 : GTECH_NAND2 port map( A => B(6), B => n104, Z => n147);
   U148 : GTECH_NOR2 port map( A => n104, B => B(6), Z => n148);
   U149 : GTECH_NAND2 port map( A => n149, B => n150, Z => DIFF(5));
   U150 : GTECH_NAND2 port map( A => n1, B => n151, Z => n150);
   U151 : GTECH_NAND2 port map( A => n152, B => n62, Z => n149);
   U152 : GTECH_NAND2 port map( A => n153, B => n154, Z => n152);
   U153 : GTECH_NAND2 port map( A => B(5), B => n42, Z => n154);
   U154 : GTECH_NAND2 port map( A => A(5), B => n41, Z => n153);
   U155 : GTECH_NAND2 port map( A => n155, B => n64, Z => DIFF(4));
   U156 : GTECH_NOR2 port map( A => n157, B => n158, Z => n156);
   U157 : GTECH_NAND2 port map( A => n157, B => n158, Z => n155);
   U158 : GTECH_NAND2 port map( A => n101, B => n159, Z => n157);
   U159 : GTECH_NAND2 port map( A => B(4), B => n102, Z => n159);
   U160 : GTECH_NOR2 port map( A => n102, B => B(4), Z => n160);
   U161 : GTECH_NAND2 port map( A => n161, B => n162, Z => DIFF(3));
   U162 : GTECH_NAND2 port map( A => n98, B => n163, Z => n162);
   U163 : GTECH_NAND2 port map( A => n164, B => n65, Z => n161);
   U164 : GTECH_NAND2 port map( A => n165, B => n166, Z => n164);
   U165 : GTECH_NAND2 port map( A => B(3), B => n100, Z => n166);
   U166 : GTECH_NAND2 port map( A => A(3), B => n99, Z => n165);
   U167 : GTECH_NAND2 port map( A => n167, B => n12, Z => DIFF(31));
   U168 : GTECH_NOR2 port map( A => n169, B => n170, Z => n168);
   U169 : GTECH_NAND2 port map( A => n170, B => n169, Z => n167);
   U170 : GTECH_NAND2 port map( A => n171, B => n172, Z => n169);
   U171 : GTECH_NAND2 port map( A => n173, B => n45, Z => n172);
   U172 : GTECH_NAND2 port map( A => n174, B => n92, Z => n173);
   U173 : GTECH_NAND2 port map( A => A(30), B => n13, Z => n171);
   U174 : GTECH_NAND2 port map( A => n175, B => n176, Z => n170);
   U175 : GTECH_NAND2 port map( A => B(31), B => n91, Z => n176);
   U176 : GTECH_NAND2 port map( A => A(31), B => n43, Z => n175);
   U177 : GTECH_NAND2 port map( A => n177, B => n178, Z => DIFF(30));
   U178 : GTECH_NAND2 port map( A => n44, B => n174, Z => n178);
   U179 : GTECH_NAND2 port map( A => n179, B => n13, Z => n177);
   U180 : GTECH_NOR2 port map( A => n14, B => n180, Z => n174);
   U181 : GTECH_NOR2 port map( A => n181, B => B(29), Z => n180);
   U182 : GTECH_NOR2 port map( A => n182, B => A(29), Z => n181);
   U183 : GTECH_NAND2 port map( A => A(29), B => n182, Z => n183);
   U184 : GTECH_NAND2 port map( A => n184, B => n185, Z => n179);
   U185 : GTECH_NAND2 port map( A => B(30), B => n92, Z => n185);
   U186 : GTECH_NAND2 port map( A => A(30), B => n45, Z => n184);
   U187 : GTECH_NAND2 port map( A => n186, B => n67, Z => DIFF(2));
   U188 : GTECH_NOR2 port map( A => n188, B => n189, Z => n187);
   U189 : GTECH_NAND2 port map( A => n188, B => n189, Z => n186);
   U190 : GTECH_NAND2 port map( A => n96, B => n190, Z => n188);
   U191 : GTECH_NAND2 port map( A => B(2), B => n97, Z => n190);
   U192 : GTECH_NOR2 port map( A => n97, B => B(2), Z => n191);
   U193 : GTECH_NAND2 port map( A => n192, B => n11, Z => DIFF(29));
   U194 : GTECH_NOR2 port map( A => n194, B => n182, Z => n193);
   U195 : GTECH_NAND2 port map( A => n194, B => n182, Z => n192);
   U196 : GTECH_NAND2 port map( A => n195, B => n196, Z => n182);
   U197 : GTECH_NAND2 port map( A => n197, B => n49, Z => n196);
   U198 : GTECH_NAND2 port map( A => n198, B => n93, Z => n197);
   U199 : GTECH_NAND2 port map( A => A(28), B => n15, Z => n195);
   U200 : GTECH_NAND2 port map( A => n46, B => n199, Z => n194);
   U201 : GTECH_NAND2 port map( A => B(29), B => n47, Z => n199);
   U202 : GTECH_NOR2 port map( A => n47, B => B(29), Z => n200);
   U203 : GTECH_NAND2 port map( A => n201, B => n202, Z => DIFF(28));
   U204 : GTECH_NAND2 port map( A => n48, B => n198, Z => n202);
   U205 : GTECH_NAND2 port map( A => n203, B => n15, Z => n201);
   U206 : GTECH_NOR2 port map( A => n16, B => n204, Z => n198);
   U207 : GTECH_NOR2 port map( A => n205, B => B(27), Z => n204);
   U208 : GTECH_NOR2 port map( A => n206, B => A(27), Z => n205);
   U209 : GTECH_NAND2 port map( A => A(27), B => n206, Z => n207);
   U210 : GTECH_NAND2 port map( A => n208, B => n209, Z => n203);
   U211 : GTECH_NAND2 port map( A => B(28), B => n93, Z => n209);
   U212 : GTECH_NAND2 port map( A => A(28), B => n49, Z => n208);
   U213 : GTECH_NAND2 port map( A => n210, B => n10, Z => DIFF(27));
   U214 : GTECH_NOR2 port map( A => n212, B => n206, Z => n211);
   U215 : GTECH_NAND2 port map( A => n212, B => n206, Z => n210);
   U216 : GTECH_NAND2 port map( A => n213, B => n214, Z => n206);
   U217 : GTECH_NAND2 port map( A => n215, B => n53, Z => n214);
   U218 : GTECH_NAND2 port map( A => n216, B => n94, Z => n215);
   U219 : GTECH_NAND2 port map( A => A(26), B => n17, Z => n213);
   U220 : GTECH_NAND2 port map( A => n50, B => n217, Z => n212);
   U221 : GTECH_NAND2 port map( A => B(27), B => n51, Z => n217);
   U222 : GTECH_NOR2 port map( A => n51, B => B(27), Z => n218);
   U223 : GTECH_NAND2 port map( A => n219, B => n220, Z => DIFF(26));
   U224 : GTECH_NAND2 port map( A => n52, B => n216, Z => n220);
   U225 : GTECH_NAND2 port map( A => n221, B => n17, Z => n219);
   U226 : GTECH_NOR2 port map( A => n18, B => n222, Z => n216);
   U227 : GTECH_NOR2 port map( A => n223, B => B(25), Z => n222);
   U228 : GTECH_NOR2 port map( A => n224, B => A(25), Z => n223);
   U229 : GTECH_NAND2 port map( A => A(25), B => n224, Z => n225);
   U230 : GTECH_NAND2 port map( A => n226, B => n227, Z => n221);
   U231 : GTECH_NAND2 port map( A => B(26), B => n94, Z => n227);
   U232 : GTECH_NAND2 port map( A => A(26), B => n53, Z => n226);
   U233 : GTECH_NAND2 port map( A => n228, B => n9, Z => DIFF(25));
   U234 : GTECH_NOR2 port map( A => n230, B => n224, Z => n229);
   U235 : GTECH_NAND2 port map( A => n230, B => n224, Z => n228);
   U236 : GTECH_NAND2 port map( A => n231, B => n232, Z => n224);
   U237 : GTECH_NAND2 port map( A => n233, B => n57, Z => n232);
   U238 : GTECH_NAND2 port map( A => n234, B => n58, Z => n233);
   U239 : GTECH_NAND2 port map( A => A(24), B => n19, Z => n231);
   U240 : GTECH_NAND2 port map( A => n54, B => n235, Z => n230);
   U241 : GTECH_NAND2 port map( A => B(25), B => n55, Z => n235);
   U242 : GTECH_NOR2 port map( A => n55, B => B(25), Z => n236);
   U243 : GTECH_NAND2 port map( A => n237, B => n238, Z => DIFF(24));
   U244 : GTECH_NAND2 port map( A => n56, B => n234, Z => n238);
   U245 : GTECH_NAND2 port map( A => n239, B => n19, Z => n237);
   U246 : GTECH_NOR2 port map( A => n20, B => n240, Z => n234);
   U247 : GTECH_NOR2 port map( A => n241, B => B(23), Z => n240);
   U248 : GTECH_NOR2 port map( A => n242, B => A(23), Z => n241);
   U249 : GTECH_NAND2 port map( A => A(23), B => n242, Z => n243);
   U250 : GTECH_NAND2 port map( A => n244, B => n245, Z => n239);
   U251 : GTECH_NAND2 port map( A => B(24), B => n58, Z => n245);
   U252 : GTECH_NAND2 port map( A => A(24), B => n57, Z => n244);
   U253 : GTECH_NAND2 port map( A => n246, B => n8, Z => DIFF(23));
   U254 : GTECH_NOR2 port map( A => n248, B => n242, Z => n247);
   U255 : GTECH_NAND2 port map( A => n248, B => n242, Z => n246);
   U256 : GTECH_NAND2 port map( A => n249, B => n250, Z => n242);
   U257 : GTECH_NAND2 port map( A => n251, B => n76, Z => n250);
   U258 : GTECH_NAND2 port map( A => n252, B => n121, Z => n251);
   U259 : GTECH_NAND2 port map( A => A(22), B => n21, Z => n249);
   U260 : GTECH_NAND2 port map( A => n59, B => n253, Z => n248);
   U261 : GTECH_NAND2 port map( A => B(23), B => n60, Z => n253);
   U262 : GTECH_NOR2 port map( A => n60, B => B(23), Z => n254);
   U263 : GTECH_NAND2 port map( A => n255, B => n256, Z => DIFF(22));
   U264 : GTECH_NAND2 port map( A => n75, B => n252, Z => n256);
   U265 : GTECH_NAND2 port map( A => n257, B => n21, Z => n255);
   U266 : GTECH_NOR2 port map( A => n22, B => n258, Z => n252);
   U267 : GTECH_NOR2 port map( A => n259, B => B(21), Z => n258);
   U268 : GTECH_NOR2 port map( A => n260, B => A(21), Z => n259);
   U269 : GTECH_NAND2 port map( A => A(21), B => n260, Z => n261);
   U270 : GTECH_NAND2 port map( A => n262, B => n263, Z => n257);
   U271 : GTECH_NAND2 port map( A => B(22), B => n121, Z => n263);
   U272 : GTECH_NAND2 port map( A => A(22), B => n76, Z => n262);
   U273 : GTECH_NAND2 port map( A => n264, B => n7, Z => DIFF(21));
   U274 : GTECH_NOR2 port map( A => n266, B => n260, Z => n265);
   U275 : GTECH_NAND2 port map( A => n266, B => n260, Z => n264);
   U276 : GTECH_NAND2 port map( A => n267, B => n268, Z => n260);
   U277 : GTECH_NAND2 port map( A => n269, B => n85, Z => n268);
   U278 : GTECH_NAND2 port map( A => n270, B => n115, Z => n269);
   U279 : GTECH_NAND2 port map( A => A(20), B => n23, Z => n267);
   U280 : GTECH_NAND2 port map( A => n74, B => n271, Z => n266);
   U281 : GTECH_NAND2 port map( A => B(21), B => n122, Z => n271);
   U282 : GTECH_NOR2 port map( A => n122, B => B(21), Z => n272);
   U283 : GTECH_NAND2 port map( A => n273, B => n274, Z => DIFF(20));
   U284 : GTECH_NAND2 port map( A => n84, B => n270, Z => n274);
   U285 : GTECH_NAND2 port map( A => n275, B => n23, Z => n273);
   U286 : GTECH_NOR2 port map( A => n24, B => n276, Z => n270);
   U287 : GTECH_NOR2 port map( A => n277, B => B(19), Z => n276);
   U288 : GTECH_NOR2 port map( A => n278, B => A(19), Z => n277);
   U289 : GTECH_NAND2 port map( A => A(19), B => n278, Z => n279);
   U290 : GTECH_NAND2 port map( A => n280, B => n281, Z => n275);
   U291 : GTECH_NAND2 port map( A => B(20), B => n115, Z => n281);
   U292 : GTECH_NAND2 port map( A => A(20), B => n85, Z => n280);
   U293 : GTECH_NAND2 port map( A => n282, B => n61, Z => DIFF(1));
   U294 : GTECH_NOR2 port map( A => n284, B => n68, Z => n283);
   U295 : GTECH_NAND2 port map( A => n284, B => n68, Z => n282);
   U296 : GTECH_NAND2 port map( A => n285, B => n286, Z => n284);
   U297 : GTECH_NAND2 port map( A => B(1), B => n95, Z => n286);
   U298 : GTECH_NAND2 port map( A => A(1), B => n90, Z => n285);
   U299 : GTECH_NAND2 port map( A => n287, B => n6, Z => DIFF(19));
   U300 : GTECH_NOR2 port map( A => n289, B => n278, Z => n288);
   U301 : GTECH_NAND2 port map( A => n289, B => n278, Z => n287);
   U302 : GTECH_NAND2 port map( A => n290, B => n291, Z => n278);
   U303 : GTECH_NAND2 port map( A => n292, B => n82, Z => n291);
   U304 : GTECH_NAND2 port map( A => n293, B => n117, Z => n292);
   U305 : GTECH_NAND2 port map( A => A(18), B => n25, Z => n290);
   U306 : GTECH_NAND2 port map( A => n83, B => n294, Z => n289);
   U307 : GTECH_NAND2 port map( A => B(19), B => n116, Z => n294);
   U308 : GTECH_NOR2 port map( A => n116, B => B(19), Z => n295);
   U309 : GTECH_NAND2 port map( A => n296, B => n297, Z => DIFF(18));
   U310 : GTECH_NAND2 port map( A => n81, B => n293, Z => n297);
   U311 : GTECH_NAND2 port map( A => n298, B => n25, Z => n296);
   U312 : GTECH_NOR2 port map( A => n26, B => n299, Z => n293);
   U313 : GTECH_NOR2 port map( A => n300, B => B(17), Z => n299);
   U314 : GTECH_NOR2 port map( A => n301, B => A(17), Z => n300);
   U315 : GTECH_NAND2 port map( A => A(17), B => n301, Z => n302);
   U316 : GTECH_NAND2 port map( A => n303, B => n304, Z => n298);
   U317 : GTECH_NAND2 port map( A => B(18), B => n117, Z => n304);
   U318 : GTECH_NAND2 port map( A => A(18), B => n82, Z => n303);
   U319 : GTECH_NAND2 port map( A => n305, B => n5, Z => DIFF(17));
   U320 : GTECH_NOR2 port map( A => n307, B => n301, Z => n306);
   U321 : GTECH_NAND2 port map( A => n307, B => n301, Z => n305);
   U322 : GTECH_NAND2 port map( A => n308, B => n309, Z => n301);
   U323 : GTECH_NAND2 port map( A => n310, B => n79, Z => n309);
   U324 : GTECH_NAND2 port map( A => n311, B => n119, Z => n310);
   U325 : GTECH_NAND2 port map( A => A(16), B => n27, Z => n308);
   U326 : GTECH_NAND2 port map( A => n80, B => n312, Z => n307);
   U327 : GTECH_NAND2 port map( A => B(17), B => n118, Z => n312);
   U328 : GTECH_NOR2 port map( A => n118, B => B(17), Z => n313);
   U329 : GTECH_NAND2 port map( A => n314, B => n315, Z => DIFF(16));
   U330 : GTECH_NAND2 port map( A => n78, B => n311, Z => n315);
   U331 : GTECH_NAND2 port map( A => n316, B => n27, Z => n314);
   U332 : GTECH_NOR2 port map( A => n28, B => n317, Z => n311);
   U333 : GTECH_NOR2 port map( A => n318, B => B(15), Z => n317);
   U334 : GTECH_NOR2 port map( A => n319, B => A(15), Z => n318);
   U335 : GTECH_NAND2 port map( A => A(15), B => n319, Z => n320);
   U336 : GTECH_NAND2 port map( A => n321, B => n322, Z => n316);
   U337 : GTECH_NAND2 port map( A => B(16), B => n119, Z => n322);
   U338 : GTECH_NAND2 port map( A => A(16), B => n79, Z => n321);
   U339 : GTECH_NAND2 port map( A => n323, B => n4, Z => DIFF(15));
   U340 : GTECH_NOR2 port map( A => n325, B => n319, Z => n324);
   U341 : GTECH_NAND2 port map( A => n325, B => n319, Z => n323);
   U342 : GTECH_NAND2 port map( A => n326, B => n327, Z => n319);
   U343 : GTECH_NAND2 port map( A => n328, B => n73, Z => n327);
   U344 : GTECH_NAND2 port map( A => n329, B => n123, Z => n328);
   U345 : GTECH_NAND2 port map( A => A(14), B => n29, Z => n326);
   U346 : GTECH_NAND2 port map( A => n110, B => n330, Z => n325);
   U347 : GTECH_NAND2 port map( A => B(15), B => n111, Z => n330);
   U348 : GTECH_NOR2 port map( A => n111, B => B(15), Z => n331);
   U349 : GTECH_NAND2 port map( A => n332, B => n333, Z => DIFF(14));
   U350 : GTECH_NAND2 port map( A => n72, B => n329, Z => n333);
   U351 : GTECH_NAND2 port map( A => n334, B => n29, Z => n332);
   U352 : GTECH_NOR2 port map( A => n30, B => n335, Z => n329);
   U353 : GTECH_NOR2 port map( A => n336, B => B(13), Z => n335);
   U354 : GTECH_NOR2 port map( A => n337, B => A(13), Z => n336);
   U355 : GTECH_NAND2 port map( A => A(13), B => n337, Z => n338);
   U356 : GTECH_NAND2 port map( A => n339, B => n340, Z => n334);
   U357 : GTECH_NAND2 port map( A => B(14), B => n123, Z => n340);
   U358 : GTECH_NAND2 port map( A => A(14), B => n73, Z => n339);
   U359 : GTECH_NAND2 port map( A => n341, B => n3, Z => DIFF(13));
   U360 : GTECH_NOR2 port map( A => n343, B => n337, Z => n342);
   U361 : GTECH_NAND2 port map( A => n343, B => n337, Z => n341);
   U362 : GTECH_NAND2 port map( A => n344, B => n345, Z => n337);
   U363 : GTECH_NAND2 port map( A => n346, B => n88, Z => n345);
   U364 : GTECH_NAND2 port map( A => n347, B => n113, Z => n346);
   U365 : GTECH_NAND2 port map( A => A(12), B => n31, Z => n344);
   U366 : GTECH_NAND2 port map( A => n89, B => n348, Z => n343);
   U367 : GTECH_NAND2 port map( A => B(13), B => n112, Z => n348);
   U368 : GTECH_NOR2 port map( A => n112, B => B(13), Z => n349);
   U369 : GTECH_NAND2 port map( A => n350, B => n351, Z => DIFF(12));
   U370 : GTECH_NAND2 port map( A => n87, B => n347, Z => n351);
   U371 : GTECH_NAND2 port map( A => n352, B => n31, Z => n350);
   U372 : GTECH_NOR2 port map( A => n32, B => n353, Z => n347);
   U373 : GTECH_NOR2 port map( A => n354, B => B(11), Z => n353);
   U374 : GTECH_NOR2 port map( A => n355, B => A(11), Z => n354);
   U375 : GTECH_NAND2 port map( A => A(11), B => n355, Z => n356);
   U376 : GTECH_NAND2 port map( A => n357, B => n358, Z => n352);
   U377 : GTECH_NAND2 port map( A => B(12), B => n113, Z => n358);
   U378 : GTECH_NAND2 port map( A => A(12), B => n88, Z => n357);
   U379 : GTECH_NAND2 port map( A => n359, B => n2, Z => DIFF(11));
   U380 : GTECH_NOR2 port map( A => n361, B => n355, Z => n360);
   U381 : GTECH_NAND2 port map( A => n361, B => n355, Z => n359);
   U382 : GTECH_NAND2 port map( A => n362, B => n363, Z => n355);
   U383 : GTECH_NAND2 port map( A => n364, B => n108, Z => n363);
   U384 : GTECH_NAND2 port map( A => n365, B => n109, Z => n364);
   U385 : GTECH_NAND2 port map( A => A(10), B => n33, Z => n362);
   U386 : GTECH_NAND2 port map( A => n86, B => n366, Z => n361);
   U387 : GTECH_NAND2 port map( A => B(11), B => n114, Z => n366);
   U388 : GTECH_NOR2 port map( A => n114, B => B(11), Z => n367);
   U389 : GTECH_NAND2 port map( A => n368, B => n369, Z => DIFF(10));
   U390 : GTECH_NAND2 port map( A => n107, B => n365, Z => n369);
   U391 : GTECH_NAND2 port map( A => n370, B => n33, Z => n368);
   U392 : GTECH_NOR2 port map( A => n371, B => n34, Z => n365);
   U393 : GTECH_NAND2 port map( A => n373, B => n77, Z => n372);
   U394 : GTECH_NAND2 port map( A => n127, B => n120, Z => n373);
   U395 : GTECH_NOR2 port map( A => n120, B => n127, Z => n371);
   U396 : GTECH_NOR2 port map( A => n36, B => n374, Z => n127);
   U397 : GTECH_NOR2 port map( A => n375, B => B(8), Z => n374);
   U398 : GTECH_NOR2 port map( A => n134, B => A(8), Z => n375);
   U399 : GTECH_NAND2 port map( A => A(8), B => n134, Z => n376);
   U400 : GTECH_NAND2 port map( A => n377, B => n378, Z => n134);
   U401 : GTECH_NAND2 port map( A => n379, B => n71, Z => n378);
   U402 : GTECH_NAND2 port map( A => n139, B => n124, Z => n379);
   U403 : GTECH_NAND2 port map( A => A(7), B => n38, Z => n377);
   U404 : GTECH_NOR2 port map( A => n39, B => n380, Z => n139);
   U405 : GTECH_NOR2 port map( A => n381, B => B(6), Z => n380);
   U406 : GTECH_NOR2 port map( A => n146, B => A(6), Z => n381);
   U407 : GTECH_NAND2 port map( A => A(6), B => n146, Z => n382);
   U408 : GTECH_NAND2 port map( A => n383, B => n384, Z => n146);
   U409 : GTECH_NAND2 port map( A => n385, B => n41, Z => n384);
   U410 : GTECH_NAND2 port map( A => n151, B => n42, Z => n385);
   U411 : GTECH_NAND2 port map( A => A(5), B => n62, Z => n383);
   U412 : GTECH_NOR2 port map( A => n63, B => n386, Z => n151);
   U413 : GTECH_NOR2 port map( A => n387, B => B(4), Z => n386);
   U414 : GTECH_NOR2 port map( A => n158, B => A(4), Z => n387);
   U415 : GTECH_NAND2 port map( A => A(4), B => n158, Z => n388);
   U416 : GTECH_NAND2 port map( A => n389, B => n390, Z => n158);
   U417 : GTECH_NAND2 port map( A => n391, B => n99, Z => n390);
   U418 : GTECH_NAND2 port map( A => n163, B => n100, Z => n391);
   U419 : GTECH_NAND2 port map( A => A(3), B => n65, Z => n389);
   U420 : GTECH_NOR2 port map( A => n66, B => n392, Z => n163);
   U421 : GTECH_NOR2 port map( A => n393, B => B(2), Z => n392);
   U422 : GTECH_NOR2 port map( A => n189, B => A(2), Z => n393);
   U423 : GTECH_NAND2 port map( A => A(2), B => n189, Z => n394);
   U424 : GTECH_NAND2 port map( A => n395, B => n396, Z => n189);
   U425 : GTECH_NAND2 port map( A => n397, B => n90, Z => n396);
   U426 : GTECH_NAND2 port map( A => n398, B => n95, Z => n397);
   U427 : GTECH_NAND2 port map( A => A(1), B => n68, Z => n395);
   U428 : GTECH_NAND2 port map( A => n399, B => n400, Z => n370);
   U429 : GTECH_NAND2 port map( A => B(10), B => n109, Z => n400);
   U430 : GTECH_NAND2 port map( A => A(10), B => n108, Z => n399);
   U431 : GTECH_NAND2 port map( A => n68, B => n401, Z => DIFF(0));
   U432 : GTECH_NAND2 port map( A => A(0), B => n69, Z => n401);
   U433 : GTECH_NOR2 port map( A => n69, B => A(0), Z => n398);

end SYN_rpl;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_zpu_core.all;

entity zpu_core is

   port( clk, reset_b, enable, in_mem_busy : in std_logic;  mem_read : in 
         std_logic_vector (31 downto 0);  mem_write, out_mem_addr : out 
         std_logic_vector (31 downto 0);  out_mem_writeEnable, 
         out_mem_readEnable : out std_logic;  mem_writeMask : out 
         std_logic_vector (3 downto 0);  interrupt : in std_logic;  break : out
         std_logic);

end zpu_core;

architecture SYN_beh of zpu_core is

   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component zpu_core_DW01_inc_1
      port( A : in std_logic_vector (31 downto 0);  SUM : out std_logic_vector 
            (31 downto 0));
   end component;
   
   component zpu_core_DW01_add_9
      port( A, B : in std_logic_vector (29 downto 0);  CI : in std_logic;  SUM 
            : out std_logic_vector (29 downto 0);  CO : out std_logic);
   end component;
   
   component zpu_core_DW01_add_8
      port( A, B : in std_logic_vector (31 downto 0);  CI : in std_logic;  SUM 
            : out std_logic_vector (31 downto 0);  CO : out std_logic);
   end component;
   
   component zpu_core_DW01_cmp6_1
      port( A, B : in std_logic_vector (31 downto 0);  TC : in std_logic;  LT, 
            GT, EQ, LE, GE, NE : out std_logic);
   end component;
   
   component zpu_core_DW01_cmp6_0
      port( A, B : in std_logic_vector (31 downto 0);  TC : in std_logic;  LT, 
            GT, EQ, LE, GE, NE : out std_logic);
   end component;
   
   component zpu_core_DW01_inc_0
      port( A : in std_logic_vector (29 downto 0);  SUM : out std_logic_vector 
            (29 downto 0));
   end component;
   
   component zpu_core_DW01_add_7
      port( A, B : in std_logic_vector (29 downto 0);  CI : in std_logic;  SUM 
            : out std_logic_vector (29 downto 0);  CO : out std_logic);
   end component;
   
   component zpu_core_DW01_dec_0
      port( A : in std_logic_vector (29 downto 0);  SUM : out std_logic_vector 
            (29 downto 0));
   end component;
   
   component zpu_core_DW02_mult_0
      port( A, B : in std_logic_vector (31 downto 0);  TC : in std_logic;  
            PRODUCT : out std_logic_vector (63 downto 0));
   end component;
   
   component zpu_core_DW01_add_5
      port( A, B : in std_logic_vector (29 downto 0);  CI : in std_logic;  SUM 
            : out std_logic_vector (29 downto 0);  CO : out std_logic);
   end component;
   
   component zpu_core_DW01_add_4
      port( A, B : in std_logic_vector (31 downto 0);  CI : in std_logic;  SUM 
            : out std_logic_vector (31 downto 0);  CO : out std_logic);
   end component;
   
   component zpu_core_DW01_add_3
      port( A, B : in std_logic_vector (31 downto 0);  CI : in std_logic;  SUM 
            : out std_logic_vector (31 downto 0);  CO : out std_logic);
   end component;
   
   component zpu_core_DW01_add_2
      port( A, B : in std_logic_vector (31 downto 0);  CI : in std_logic;  SUM 
            : out std_logic_vector (31 downto 0);  CO : out std_logic);
   end component;
   
   component zpu_core_DW01_add_1
      port( A, B : in std_logic_vector (29 downto 0);  CI : in std_logic;  SUM 
            : out std_logic_vector (29 downto 0);  CO : out std_logic);
   end component;
   
   component zpu_core_DW01_add_0
      port( A, B : in std_logic_vector (31 downto 0);  CI : in std_logic;  SUM 
            : out std_logic_vector (31 downto 0);  CO : out std_logic);
   end component;
   
   component zpu_core_DW01_sub_0
      port( A, B : in std_logic_vector (31 downto 0);  CI : in std_logic;  DIFF
            : out std_logic_vector (31 downto 0);  CO : out std_logic);
   end component;
   
   component GTECH_FD1
      port( D, CP : in std_logic;  Q, QN : out std_logic);
   end component;
   
   signal X_Logic1_port, X_Logic0_port, out_mem_addr_31_port, 
      out_mem_addr_30_port, out_mem_addr_29_port, out_mem_addr_28_port, 
      out_mem_addr_27_port, out_mem_addr_26_port, out_mem_addr_25_port, 
      out_mem_addr_24_port, out_mem_addr_23_port, out_mem_addr_22_port, 
      out_mem_addr_21_port, out_mem_addr_20_port, out_mem_addr_19_port, 
      out_mem_addr_18_port, out_mem_addr_17_port, out_mem_addr_16_port, 
      out_mem_addr_15_port, out_mem_addr_14_port, out_mem_addr_13_port, 
      out_mem_addr_12_port, out_mem_addr_11_port, out_mem_addr_10_port, 
      out_mem_addr_9_port, out_mem_addr_8_port, out_mem_addr_7_port, 
      out_mem_addr_6_port, out_mem_addr_5_port, out_mem_addr_4_port, 
      out_mem_addr_3_port, out_mem_addr_2_port, out_mem_readEnable_port, 
      mem_writeMask_3_port, mem_writeMask_2_port, mem_writeMask_1_port, 
      mem_writeMask_0_port, break_port, sp_31_port, sp_30_port, sp_29_port, 
      sp_28_port, sp_27_port, sp_26_port, sp_25_port, sp_24_port, sp_23_port, 
      sp_22_port, sp_21_port, sp_20_port, sp_19_port, sp_18_port, sp_17_port, 
      sp_16_port, sp_15_port, sp_14_port, sp_13_port, sp_12_port, sp_11_port, 
      sp_10_port, sp_9_port, sp_8_port, sp_7_port, sp_6_port, sp_5_port, 
      sp_4_port, sp_3_port, sp_2_port, incSp_31_port, incSp_30_port, 
      incSp_29_port, incSp_28_port, incSp_27_port, incSp_26_port, incSp_25_port
      , incSp_24_port, incSp_23_port, incSp_22_port, incSp_21_port, 
      incSp_20_port, incSp_19_port, incSp_18_port, incSp_17_port, incSp_16_port
      , incSp_15_port, incSp_14_port, incSp_13_port, incSp_12_port, 
      incSp_11_port, incSp_10_port, incSp_9_port, incSp_8_port, incSp_7_port, 
      incSp_6_port, incSp_5_port, incSp_4_port, incSp_3_port, incSp_2_port, 
      incIncSp_31_port, incIncSp_30_port, incIncSp_29_port, incIncSp_28_port, 
      incIncSp_27_port, incIncSp_26_port, incIncSp_25_port, incIncSp_24_port, 
      incIncSp_23_port, incIncSp_22_port, incIncSp_21_port, incIncSp_20_port, 
      incIncSp_19_port, incIncSp_18_port, incIncSp_17_port, incIncSp_16_port, 
      incIncSp_15_port, incIncSp_14_port, incIncSp_13_port, incIncSp_12_port, 
      incIncSp_11_port, incIncSp_10_port, incIncSp_9_port, incIncSp_8_port, 
      incIncSp_7_port, incIncSp_6_port, incIncSp_5_port, incIncSp_4_port, 
      incIncSp_3_port, incIncSp_2_port, decSp_31_port, decSp_30_port, 
      decSp_29_port, decSp_28_port, decSp_27_port, decSp_26_port, decSp_25_port
      , decSp_24_port, decSp_23_port, decSp_22_port, decSp_21_port, 
      decSp_20_port, decSp_19_port, decSp_18_port, decSp_17_port, decSp_16_port
      , decSp_15_port, decSp_14_port, decSp_13_port, decSp_12_port, 
      decSp_11_port, decSp_10_port, decSp_9_port, decSp_8_port, decSp_7_port, 
      decSp_6_port, decSp_5_port, decSp_4_port, decSp_3_port, decSp_2_port, 
      state_4_port, state_3_port, state_2_port, state_1_port, state_0_port, 
      pc_31_port, pc_30_port, pc_29_port, pc_28_port, pc_27_port, pc_26_port, 
      pc_25_port, pc_24_port, pc_23_port, pc_22_port, pc_21_port, pc_20_port, 
      pc_19_port, pc_18_port, pc_17_port, pc_16_port, pc_15_port, pc_14_port, 
      pc_13_port, pc_12_port, pc_11_port, pc_10_port, pc_9_port, pc_8_port, 
      pc_7_port, pc_6_port, pc_5_port, pc_4_port, pc_3_port, pc_2_port, 
      pc_1_port, pc_0_port, multA_31_port, multA_30_port, multA_29_port, 
      multA_28_port, multA_27_port, multA_26_port, multA_25_port, multA_24_port
      , multA_23_port, multA_22_port, multA_21_port, multA_20_port, 
      multA_19_port, multA_18_port, multA_17_port, multA_16_port, multA_15_port
      , multA_14_port, multA_13_port, multA_12_port, multA_11_port, 
      multA_10_port, multA_9_port, multA_8_port, multA_7_port, multA_6_port, 
      multA_5_port, multA_4_port, multA_3_port, multA_2_port, multA_1_port, 
      multA_0_port, multB_31_port, multB_30_port, multB_29_port, multB_28_port,
      multB_27_port, multB_26_port, multB_25_port, multB_24_port, multB_23_port
      , multB_22_port, multB_21_port, multB_20_port, multB_19_port, 
      multB_18_port, multB_17_port, multB_16_port, multB_15_port, multB_14_port
      , multB_13_port, multB_12_port, multB_11_port, multB_10_port, 
      multB_9_port, multB_8_port, multB_7_port, multB_6_port, multB_5_port, 
      multB_4_port, multB_3_port, multB_2_port, multB_1_port, multB_0_port, 
      stackA_31_port, stackA_30_port, stackA_29_port, stackA_28_port, 
      stackA_27_port, stackA_26_port, stackA_25_port, stackA_24_port, 
      stackA_23_port, stackA_22_port, stackA_21_port, stackA_20_port, 
      stackA_19_port, stackA_18_port, stackA_17_port, stackA_16_port, 
      stackA_15_port, stackA_14_port, stackA_13_port, stackA_12_port, 
      stackA_11_port, stackA_10_port, stackA_9_port, stackA_8_port, 
      stackA_7_port, stackA_6_port, stackA_5_port, stackA_4_port, stackA_3_port
      , stackA_2_port, stackA_1_port, stackA_0_port, stackB_31_port, 
      stackB_30_port, stackB_29_port, stackB_28_port, stackB_27_port, 
      stackB_26_port, stackB_25_port, stackB_24_port, stackB_23_port, 
      stackB_22_port, stackB_21_port, stackB_20_port, stackB_19_port, 
      stackB_18_port, stackB_17_port, stackB_16_port, stackB_15_port, 
      stackB_14_port, stackB_13_port, stackB_12_port, stackB_11_port, 
      stackB_10_port, stackB_9_port, stackB_8_port, stackB_7_port, 
      stackB_6_port, stackB_5_port, stackB_4_port, stackB_3_port, stackB_2_port
      , stackB_1_port, stackB_0_port, N300, N301, N302, N303, N304, N305, N306,
      N307, N308, N309, N310, N311, N312, N313, N314, N315, N316, N317, N318, 
      N319, N320, N321, N322, N323, N324, N325, N326, N327, N328, N329, N330, 
      N331, opcode_0_6_port, opcode_0_5_port, opcode_0_4_port, opcode_0_3_port,
      opcode_0_2_port, opcode_0_1_port, opcode_0_0_port, opcode_1_6_port, 
      opcode_1_5_port, opcode_1_4_port, opcode_1_3_port, opcode_1_2_port, 
      opcode_1_1_port, opcode_1_0_port, opcode_2_6_port, opcode_2_5_port, 
      opcode_2_4_port, opcode_2_3_port, opcode_2_2_port, opcode_2_1_port, 
      opcode_2_0_port, opcode_3_6_port, opcode_3_5_port, opcode_3_4_port, 
      opcode_3_3_port, opcode_3_2_port, opcode_3_1_port, opcode_3_0_port, N569,
      N570, N571, N572, N573, N574, N575, N576, N577, N578, N579, N580, N581, 
      N582, N583, N584, N585, N586, N587, N588, N589, N590, N591, N592, N593, 
      N594, N595, N596, N597, N598, N695, N696, N697, N698, N699, N700, N701, 
      N702, N703, N704, N705, N706, N707, N708, N709, N710, N711, N712, N713, 
      N714, N715, N716, N717, N718, N719, N720, N721, N722, N723, N724, N725, 
      N726, N1034, N1035, N1036, N1037, N1038, N1039, N1040, N1041, N1042, 
      N1043, N1044, N1045, N1046, N1047, N1048, N1049, N1050, N1051, N1052, 
      N1053, N1054, N1055, N1056, N1057, N1058, N1059, N1060, N1061, N1062, 
      N1063, N1064, N1065, N1317, N1318, N1319, N1320, N1321, N1322, N1323, 
      N1324, N1325, N1326, N1327, N1328, N1329, N1330, N1331, N1332, N1333, 
      N1334, N1335, N1336, N1337, N1338, N1339, N1340, N1341, N1342, N1343, 
      N1344, N1345, N1346, N1347, N1348, N1599, N1600, N1601, N1602, N1603, 
      N1604, N1605, N1606, N1607, N1608, N1609, N1610, N1611, N1612, N1613, 
      N1614, N1615, N1616, N1617, N1618, N1619, N1620, N1621, N1622, N1623, 
      N1624, N1625, N1626, N1627, N1628, N2507, N2508, N2509, N2510, N2511, 
      N2512, N2513, N2514, N2515, N2516, N2517, N2518, N2519, N2520, N2521, 
      N2522, N2523, N2524, N2525, N2526, N2527, N2528, N2529, N2530, N2531, 
      N2532, N2533, N2534, N2535, N2536, N2537, N2538, N2920, N2952, N2954, 
      N2956, N2958, N2991, N2992, N2993, N2994, N2995, N2996, N2997, N2998, 
      N2999, N3000, N3001, N3002, N3003, N3004, N3005, N3006, N3007, N3008, 
      N3009, N3010, N3011, N3012, N3013, N3014, N3015, N3016, N3017, N3018, 
      N3019, N3020, N3087, N3088, N3089, N3090, N3091, N3092, N3093, N3094, 
      N3095, N3096, N3097, N3098, N3099, N3100, N3101, N3102, N3103, N3104, 
      N3105, N3106, N3107, N3108, N3109, N3110, N3111, N3112, N3113, N3114, 
      N3115, N3116, N3117, N3118, N3120, N3121, N3122, N3123, N3124, N3125, 
      N3126, N3127, N3128, N3129, N3130, N3131, N3132, N3133, N3134, N3135, 
      N3136, N3137, N3138, N3139, N3140, N3141, N3142, N3143, N3144, N3145, 
      N3146, N3147, N3148, N3149, N3150, N3151, n33, n34, n35, n36, n37, n38, 
      n39, n40, n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53
      , n54, n55, n56, n57, n58, n59, n60, n61, n62, n63, n64, n65, n66, n67, 
      n68, n69, n70, n71, n72, n73, n74, n75, n76, n5273, n5434, n5435, n5436, 
      n5437, n5438, n5439, n5440, n5441, n5442, n5443, n5444, n5445, n5446, 
      n5447, n5448, n5449, n5450, n5451, n5452, n5453, n5454, n5455, n5456, 
      n5457, n5458, n5459, n5460, n5461, n5462, n5463, n5464, n5465, n5466, 
      n5467, n5468, n5469, n5470, n5471, n5472, n5473, n5474, n5475, n5476, 
      n5477, n5478, n5479, n5480, n5481, n5482, n5483, n5484, n5485, n5486, 
      n5487, n5488, n5489, n5490, n5491, n5492, n5493, n5494, n5495, n5496, 
      n5497, n5498, n5499, n5500, n5501, n5502, n5503, n5504, n5505, n5506, 
      n5507, n5508, n5509, n5510, n5511, n5512, n5513, n5514, n5515, n5516, 
      n5517, n5518, n5519, n5520, n5521, n5522, n5525, n5565, n5566, n5567, 
      n5568, n5569, n5570, n5571, n5572, n5573, n5574, n5575, n5576, n5577, 
      n5578, n5579, n5580, n5581, n5582, n5583, n5584, n5585, n5586, n5587, 
      n5588, n5589, n5590, n5591, n5592, n5593, n5594, n5595, n5596, n5597, 
      n5598, n5599, n5600, n5601, n5602, n5603, n5604, n5605, n5606, n5607, 
      n5608, n5609, n5610, n5611, n5612, n5613, n5614, n5615, n5616, n5617, 
      n5618, n5619, n5620, n5621, n5622, n5623, n5624, n5689, n5690, n5691, 
      n5692, n5693, n5694, n5695, n5696, n5697, n5698, n5699, n5700, n5701, 
      n5702, n5703, n5704, n5705, n5706, n5707, n5708, n5709, n5710, n5711, 
      n5712, n5713, n5714, n5715, n5716, n5717, n5718, n5719, n5720, n5721, 
      n5722, n5723, n5724, n5725, n5726, n5727, n5728, n5729, n5730, n5731, 
      n5732, n5733, n5734, n5735, n5736, n5737, n5738, n5739, n5740, n5741, 
      n5742, n5743, n5744, n5745, n5746, n5747, n5748, n5749, n5750, n5751, 
      n5752, n5785, n5786, n5787, n5788, n5789, n5790, n5791, n5792, n5793, 
      n5794, n5795, n5796, n5797, n5798, n5799, n5800, n5801, n5802, n5803, 
      n5804, n5805, n5806, n5807, n5808, n5809, n5810, n5811, n5812, n5813, 
      n5814, n5815, n5817, n5818, n5819, n5820, n5821, n5822, n5823, n5824, 
      n5825, n5826, n5827, n5828, n5829, n5830, n5831, n5832, n5833, n5834, 
      n5835, n5836, n5837, n5838, n5839, n5840, n5841, n5842, n5843, n5844, 
      n5845, n5846, n5847, n5848, n5849, n5850, n5851, n5852, n5853, n5854, 
      n5855, n5856, n5857, n5858, n5859, n5860, n5861, n5862, n5863, n5864, 
      n5865, n5866, n5867, n5868, n5869, n5870, n5871, n5872, n5873, n5874, 
      n5875, n5876, n5877, n5878, n5879, n5880, n5882, n5883, n5888, n5889, 
      n5890, n5891, n5892, n5893, n5894, n5895, n5896, n5897, n5898, n5899, 
      n5900, n5901, n5902, n5903, n5904, n5905, n5906, n5907, n5908, n5909, 
      n5910, n5911, n5912, n5913, n5914, n5915, n5916, n5917, n5918, n5919, 
      n5920, n5921, n5922, n5923, n5924, n5925, n5926, n5927, n5928, n5929, 
      n5930, n5931, n5932, n5933, n5934, n5935, n5936, n5937, n5938, n5939, 
      n5958, n5959, n5960, n5961, n5962, n5963, n5964, n5965, n5966, n5967, 
      n5968, n5969, n5970, n5971, n5972, n5973, n5974, n5975, n5976, n5977, 
      n5978, n5979, n5980, n5981, n5982, n5983, n5984, n5985, n5986, n5987, 
      n5988, n5989, n5990, n5991, n5992, n5993, n5994, n5995, n5996, n5997, 
      n5998, n5999, n6000, n6001, n6002, n6004, n6005, n6006, n6007, n6008, 
      n6009, n6012, n6013, n6014, n6015, n6016, n6017, n6018, n6019, n6020, 
      n6021, n6022, n6023, n6024, n6025, n6026, n6027, n6028, n6029, n6030, 
      n6031, n6032, n6033, n6034, n6035, n6036, n6037, n6038, n6039, n6040, 
      n6041, n6042, n6043, n6044, n6045, n6046, n6047, n6048, n6049, n6050, 
      n6051, n6052, n6053, n6054, n6055, n6056, n6057, n6058, n6059, n6060, 
      n6061, n6062, n6063, n6064, n6065, n6066, n6067, n6068, n6069, n6070, 
      n6071, n6072, n6073, n6074, n6075, n6076, n6077, n6078, n6079, n6080, 
      n6081, n6082, n6083, n6084, n6085, n6086, n6087, n6088, n6089, n6090, 
      n6091, n6092, n6093, n6094, n6095, n6096, n6097, n6098, n6099, n6100, 
      n6101, n6102, n6103, n6104, n6105, n6106, n6107, n6108, n6109, n6110, 
      n6111, n6112, n6113, n6114, n6115, n6116, n6117, n6118, n6119, n6120, 
      n6121, n6122, n6123, n6124, n6125, n6126, n6127, n6128, n6129, n6130, 
      n6131, n6132, n6133, n6134, n6135, n6136, n6137, n6138, n6139, n6140, 
      n6141, n6142, n6143, n6144, n6145, n6146, n6147, n6148, n6149, n6150, 
      n6151, n6152, n6153, n6154, n6155, n6156, n6157, n6158, n6159, n6160, 
      n6161, n6162, n6163, n6164, n6165, n6166, n6167, n6168, n6169, n6170, 
      n6171, n6172, n6173, n6174, n6175, n6176, n6177, n6178, n6179, n6180, 
      n6181, n6182, n6183, n6184, n6185, n6186, n6187, n6188, n6189, n6190, 
      n6191, n6192, n6193, n6194, n6195, n6196, n6197, n6198, n6199, n6200, 
      n6201, n6202, n6203, n6204, n6205, n6206, n6207, n6208, n6209, n6210, 
      n6211, n6212, n6213, n6214, n6215, n6216, n6217, n6218, n6219, n6220, 
      n6221, n6222, n6223, n6224, n6225, n6226, n6227, n6228, n6229, n6230, 
      n6231, n6232, n6233, n6234, n6235, n6236, n6237, n6238, n6239, n6240, 
      n6241, n6242, n6243, n6244, n6245, n6246, n6247, n6248, n6249, n6250, 
      n6251, n6252, n6253, n6254, n6255, n6256, n6257, n6258, n6259, n6260, 
      n6261, n6262, n6263, n6264, n6265, n6266, n6267, n6268, n6269, n6270, 
      n6271, n6272, n6273, n6274, n6275, n6276, n6277, n6278, n6279, n6280, 
      n6281, n6282, n6283, n6284, n6285, n6286, n6287, n6288, n6289, n6290, 
      n6291, n6292, n6293, n6294, n6295, n6296, n6297, n6298, n6299, n6300, 
      n6301, n6302, n6303, n6304, n6305, n6306, n6307, n6308, n6309, n6310, 
      n6311, n6312, n6313, n6314, n6315, n6316, n6317, n6318, n6319, n6320, 
      n6321, n6322, n6323, n6324, n6325, n6326, n6327, n6328, n6329, n6330, 
      n6331, n6332, n6333, n6334, n6335, n6336, n6337, n6338, n6339, n6340, 
      n6341, n6342, n6343, n6344, n6345, n6346, n6347, n6348, n6349, n6350, 
      n6351, n6352, n6353, n6354, n6355, n6356, n6357, n6358, n6359, n6360, 
      n6361, n6362, n6363, n6364, n6365, n6366, n6367, n6368, n6369, n6370, 
      n6371, n6372, n6373, n6374, n6375, n6376, n6377, n6378, n6379, n6380, 
      n6381, n6382, n6383, n6384, n6385, n6386, n6387, n6388, n6389, n6390, 
      n6391, n6392, n6393, n6394, n6395, n6396, n6397, n6398, n6399, n6400, 
      n6401, n6402, n6403, n6404, n6405, n6406, n6407, n6408, n6409, n6410, 
      n6411, n6412, n6413, n6414, n6415, n6416, n6417, n6418, n6419, n6420, 
      n6421, n6422, n6423, n6424, n6425, n6426, n6427, n6428, n6429, n6430, 
      n6431, n6432, n6433, n6434, n6435, n6436, n6437, n6438, n6439, n6440, 
      n6441, n6442, n6443, n6444, n6445, n6446, n6447, n6448, n6449, n6450, 
      n6451, n6452, n6453, n6454, n6455, n6456, n6457, n6458, n6459, n6460, 
      n6461, n6462, n6463, n6464, n6465, n6466, n6467, n6468, n6469, n6470, 
      n6471, n6472, n6473, n6474, n6475, n6476, n6477, n6478, n6479, n6480, 
      n6481, n6482, n6483, n6484, n6485, n6486, n6487, n6488, n6489, n6490, 
      n6491, n6492, n6493, n6494, n6495, n6496, n6497, n6498, n6499, n6500, 
      n6501, n6502, n6503, n6504, n6505, n6506, n6507, n6508, n6509, n6510, 
      n6511, n6512, n6513, n6514, n6515, n6516, n6517, n6518, n6519, n6520, 
      n6521, n6522, n6523, n6524, n6525, n6526, n6527, n6528, n6529, n6530, 
      n6531, n6532, n6533, n6534, n6535, n6536, n6537, n6538, n6539, n6540, 
      n6541, n6542, n6543, n6544, n6545, n6546, n6547, n6548, n6549, n6550, 
      n6551, n6552, n6553, n6554, n6555, n6556, n6557, n6558, n6559, n6560, 
      n6561, n6562, n6563, n6564, n6565, n6566, n6567, n6568, n6569, n6570, 
      n6571, n6572, n6573, n6574, n6575, n6576, n6577, n6578, n6579, n6580, 
      n6581, n6582, n6583, n6584, n6585, n6586, n6587, n6588, n6589, n6590, 
      n6591, n6592, n6593, n6594, n6595, n6596, n6597, n6598, n6599, n6600, 
      n6601, n6602, n6603, n6604, n6605, n6606, n6607, n6608, n6609, n6610, 
      n6611, n6612, n6613, n6614, n6615, n6616, n6617, n6618, n6619, n6620, 
      n6621, n6622, n6623, n6624, n6625, n6626, n6627, n6628, n6629, n6630, 
      n6631, n6632, n6633, n6634, n6635, n6636, n6637, n6638, n6639, n6640, 
      n6641, n6642, n6643, n6644, n6645, n6646, n6647, n6648, n6649, n6650, 
      n6651, n6652, n6653, n6654, n6655, n6656, n6657, n6658, n6659, n6660, 
      n6661, n6662, n6663, n6664, n6665, n6666, n6667, n6668, n6669, n6670, 
      n6671, n6672, n6673, n6674, n6675, n6676, n6677, n6678, n6679, n6680, 
      n6681, n6682, n6683, n6684, n6685, n6686, n6687, n6688, n6689, n6690, 
      n6691, n6692, n6693, n6694, n6695, n6696, n6697, n6698, n6699, n6700, 
      n6701, n6702, n6703, n6704, n6705, n6706, n6707, n6708, n6709, n6710, 
      n6711, n6712, n6713, n6714, n6715, n6716, n6717, n6718, n6719, n6720, 
      n6721, n6722, n6723, n6724, n6725, n6726, n6727, n6728, n6729, n6730, 
      n6731, n6732, n6733, n6734, n6735, n6736, n6737, n6738, n6739, n6740, 
      n6741, n6742, n6743, n6744, n6745, n6746, n6747, n6748, n6749, n6750, 
      n6751, n6752, n6753, n6754, n6755, n6756, n6757, n6758, n6759, n6760, 
      n6761, n6762, n6763, n6764, n6765, n6766, n6767, n6768, n6769, n6770, 
      n6771, n6772, n6773, n6774, n6775, n6776, n6777, n6778, n6779, n6780, 
      n6781, n6782, n6783, n6784, n6785, n6786, n6787, n6788, n6789, n6790, 
      n6791, n6792, n6793, n6794, n6795, n6796, n6797, n6798, n6799, n6800, 
      n6801, n6802, n6803, n6804, n6805, n6806, n6807, n6808, n6809, n6810, 
      n6811, n6812, n6813, n6814, n6815, n6816, n6817, n6818, n6819, n6820, 
      n6821, n6822, n6823, n6824, n6825, n6826, n6827, n6828, n6829, n6830, 
      n6831, n6832, n6833, n6834, n6835, n6836, n6837, n6838, n6839, n6840, 
      n6841, n6842, n6843, n6844, n6845, n6846, n6847, n6848, n6849, n6850, 
      n6851, n6852, n6853, n6854, n6855, n6856, n6857, n6858, n6859, n6860, 
      n6861, n6862, n6863, n6864, n6865, n6866, n6867, n6868, n6869, n6870, 
      n6871, n6872, n6873, n6874, n6875, n6876, n6877, n6878, n6879, n6880, 
      n6881, n6882, n6883, n6884, n6885, n6886, n6887, n6888, n6889, n6890, 
      n6891, n6892, n6893, n6894, n6895, n6896, n6897, n6898, n6899, n6900, 
      n6901, n6902, n6903, n6904, n6905, n6906, n6907, n6908, n6909, n6910, 
      n6911, n6912, n6913, n6914, n6915, n6916, n6917, n6918, n6919, n6920, 
      n6921, n6922, n6923, n6924, n6925, n6926, n6927, n6928, n6929, n6930, 
      n6931, n6932, n6933, n6934, n6935, n6936, n6937, n6938, n6939, n6940, 
      n6941, n6942, n6943, n6944, n6945, n6946, n6947, n6948, n6949, n6950, 
      n6951, n6952, n6953, n6954, n6955, n6956, n6957, n6958, n6959, n6960, 
      n6961, n6962, n6963, n6964, n6965, n6966, n6967, n6968, n6969, n6970, 
      n6971, n6972, n6973, n6974, n6975, n6976, n6977, n6978, n6979, n6980, 
      n6981, n6982, n6983, n6984, n6985, n6986, n6987, n6988, n6989, n6990, 
      n6991, n6992, n6993, n6994, n6995, n6996, n6997, n6998, n6999, n7000, 
      n7001, n7002, n7003, n7004, n7005, n7006, n7007, n7008, n7009, n7010, 
      n7011, n7012, n7013, n7014, n7015, n7016, n7017, n7018, n7019, n7020, 
      n7021, n7022, n7023, n7024, n7025, n7026, n7027, n7028, n7029, n7030, 
      n7031, n7032, n7033, n7034, n7035, n7036, n7037, n7038, n7039, n7040, 
      n7041, n7042, n7043, n7044, n7045, n7046, n7047, n7048, n7049, n7050, 
      n7051, n7052, n7053, n7054, n7055, n7056, n7057, n7058, n7059, n7060, 
      n7061, n7062, n7063, n7064, n7065, n7066, n7067, n7068, n7069, n7070, 
      n7071, n7072, n7073, n7074, n7075, n7076, n7077, n7078, n7079, n7080, 
      n7081, n7082, n7083, n7084, n7085, n7086, n7087, n7088, n7089, n7090, 
      n7091, n7092, n7093, n7094, n7095, n7096, n7097, n7098, n7099, n7100, 
      n7101, n7102, n7103, n7104, n7105, n7106, n7107, n7108, n7109, n7110, 
      n7111, n7112, n7113, n7114, n7115, n7116, n7117, n7118, n7119, n7120, 
      n7121, n7122, n7123, n7124, n7125, n7126, n7127, n7128, n7129, n7130, 
      n7131, n7132, n7133, n7134, n7135, n7136, n7137, n7138, n7139, n7140, 
      n7141, n7142, n7143, n7144, n7145, n7146, n7147, n7148, n7149, n7150, 
      n7151, n7152, n7153, n7154, n7155, n7156, n7157, n7158, n7159, n7160, 
      n7161, n7162, n7163, n7164, n7165, n7166, n7167, n7168, n7169, n7170, 
      n7171, n7172, n7173, n7174, n7175, n7176, n7177, n7178, n7179, n7180, 
      n7181, n7182, n7183, n7184, n7185, n7186, n7187, n7188, n7189, n7190, 
      n7191, n7192, n7193, n7194, n7195, n7196, n7197, n7198, n7199, n7200, 
      n7201, n7202, n7203, n7204, n7205, n7206, n7207, n7208, n7209, n7210, 
      n7211, n7212, n7213, n7214, n7215, n7216, n7217, n7218, n7219, n7220, 
      n7221, n7222, n7223, n7224, n7225, n7226, n7227, n7228, n7229, n7230, 
      n7231, n7232, n7233, n7234, n7235, n7236, n7237, n7238, n7239, n7240, 
      n7241, n7242, n7243, n7244, n7245, n7246, n7247, n7248, n7249, n7250, 
      n7251, n7252, n7253, n7254, n7255, n7256, n7257, n7258, n7259, n7260, 
      n7261, n7262, n7263, n7264, n7265, n7266, n7267, n7268, n7269, n7270, 
      n7271, n7272, n7273, n7274, n7275, n7276, n7277, n7278, n7279, n7280, 
      n7281, n7282, n7283, n7284, n7285, n7286, n7287, n7288, n7289, n7290, 
      n7291, n7292, n7293, n7294, n7295, n7296, n7297, n7298, n7299, n7300, 
      n7301, n7302, n7303, n7304, n7305, n7306, n7307, n7308, n7309, n7310, 
      n7311, n7312, n7313, n7314, n7315, n7316, n7317, n7318, n7319, n7320, 
      n7321, n7322, n7323, n7324, n7325, n7326, n7327, n7328, n7329, n7330, 
      n7331, n7332, n7333, n7334, n7335, n7336, n7337, n7338, n7339, n7340, 
      n7341, n7342, n7343, n7344, n7345, n7346, n7347, n7348, n7349, n7350, 
      n7351, n7352, n7353, n7354, n7355, n7356, n7357, n7358, n7359, n7360, 
      n7361, n7362, n7363, n7364, n7365, n7366, n7367, n7368, n7369, n7370, 
      n7371, n7372, n7373, n7374, n7375, n7376, n7377, n7378, n7379, n7380, 
      n7381, n7382, n7383, n7384, n7385, n7386, n7387, n7388, n7389, n7390, 
      n7391, n7392, n7393, n7394, n7395, n7396, n7397, n7398, n7399, n7400, 
      n7401, n7402, n7403, n7404, n7405, n7406, n7407, n7408, n7409, n7410, 
      n7411, n7412, n7413, n7414, n7415, n7416, n7417, n7418, n7419, n7420, 
      n7421, n7422, n7423, n7424, n7425, n7426, n7427, n7428, n7429, n7430, 
      n7431, n7432, n7433, n7434, n7435, n7436, n7437, n7438, n7439, n7440, 
      n7441, n7442, n7443, n7444, n7445, n7446, n7447, n7448, n7449, n7450, 
      n7451, n7452, n7453, n7454, n7455, n7456, n7457, n7458, n7459, n7460, 
      n7461, n7462, n7463, n7464, n7465, n7466, n7467, n7468, n7469, n7470, 
      n7471, n7472, n7473, n7474, n7475, n7476, n7477, n7478, n7479, n7480, 
      n7481, n7482, n7483, n7484, n7485, n7486, n7487, n7488, n7489, n7490, 
      n7491, n7492, n7493, n7494, n7495, n7496, n7497, n7498, n7499, n7500, 
      n7501, n7502, n7503, n7504, n7505, n7506, n7507, n7508, n7509, n7510, 
      n7511, n7512, n7513, n7514, n7515, n7516, n7517, n7518, n7519, n7520, 
      n7521, n7522, n7523, n7524, n7525, n7526, n7527, n7528, n7529, n7530, 
      n7531, n7532, n7533, n7534, n7535, n7536, n7537, n7538, n7539, n7540, 
      n7541, n7542, n7543, n7544, n7545, n7546, n7547, n7548, n7549, n7550, 
      n7551, n7552, n7553, n7554, n7555, n7556, n7557, n7558, n7559, n7560, 
      n7561, n7562, n7563, n7564, n7565, n7566, n7567, n7568, n7569, n7570, 
      n7571, n7572, n7573, n7574, n7575, n7576, n7577, n7578, n7579, n7580, 
      n7581, n7582, n7583, n7584, n7585, n7586, n7587, n7588, n7589, n7590, 
      n7591, n7592, n7593, n7594, n7595, n7596, n7597, n7598, n7599, n7600, 
      n7601, n7602, n7603, n7604, n7605, n7606, n7607, n7608, n7609, n7610, 
      n7611, n7612, n7613, n7614, n7615, n7616, n7617, n7618, n7619, n7620, 
      n7621, n7622, n7623, n7624, n7625, n7626, n7627, n7628, n7629, n7630, 
      n7631, n7632, n7633, n7634, n7635, n7636, n7637, n7638, n7639, n7640, 
      n7641, n7642, n7643, n7644, n7645, n7646, n7647, n7648, n7649, n7650, 
      n7651, n7652, n7653, n7654, n7655, n7656, n7657, n7658, n7659, n7660, 
      n7661, n7662, n7663, n7664, n7665, n7666, n7667, n7668, n7669, n7670, 
      n7671, n7672, n7673, n7674, n7675, n7676, n7677, n7678, n7679, n7680, 
      n7681, n7682, n7683, n7684, n7685, n7686, n7687, n7688, n7689, n7690, 
      n7691, n7692, n7693, n7694, n7695, n7696, n7697, n7698, n7699, n7700, 
      n7701, n7702, n7703, n7704, n7705, n7706, n7707, n7708, n7709, n7710, 
      n7711, n7712, n7713, n7714, n7715, n7716, n7717, n7718, n7719, n7720, 
      n7721, n7722, n7723, n7724, n7725, n7726, n7727, n7728, n7729, n7730, 
      n7731, n7732, n7733, n7734, n7735, n7736, n7737, n7738, n7739, n7740, 
      n7741, n7742, n7743, n7744, n7745, n7746, n7747, n7748, n7749, n7750, 
      n7751, n7752, n7753, n7754, n7755, n7756, n7757, n7758, n7759, n7760, 
      n7761, n7762, n7763, n7764, n7765, n7766, n7767, n7768, n7769, n7770, 
      n7771, n7772, n7773, n7774, n7775, n7776, n7777, n7778, n7779, n7780, 
      n7781, n7782, n7783, n7784, n7785, n7786, n7787, n7788, n7789, n7790, 
      n7791, n7792, n7793, n7794, n7795, n7796, n7797, n7798, n7799, n7800, 
      n7801, n7802, n7803, n7804, n7805, n7806, n7807, n7808, n7809, n7810, 
      n7811, n7812, n7813, n7814, n7815, n7816, n7817, n7818, n7819, n7820, 
      n7821, n7822, n7823, n7824, n7825, n7826, n7827, n7828, n7829, n7830, 
      n7831, n7832, n7833, n7834, n7835, n7836, n7837, n7838, n7839, n7840, 
      n7841, n7842, n7843, n7844, n7845, n7846, n7847, n7848, n7849, n7850, 
      n7851, n7852, n7853, n7854, n7855, n7856, n7857, n7858, n7859, n7860, 
      n7861, n7862, n7863, n7864, n7865, n7866, n7867, n7868, n7869, n7870, 
      n7871, n7872, n7873, n7874, n7875, n7876, n7877, n7878, n7879, n7880, 
      n7881, n7882, n7883, n7884, n7885, n7886, n7887, n7888, n7889, n7890, 
      n7891, n7892, n7893, n7894, n7895, n7896, n7897, n7898, n7899, n7900, 
      n7901, n7902, n7903, n7904, n7905, n7906, n7907, n7908, n7909, n7910, 
      n7911, n7912, n7913, n7914, n7915, n7916, n7917, n7918, n7919, n7920, 
      n7921, n7922, n7923, n7924, n7925, n7926, n7927, n7928, n7929, n7930, 
      n7931, n7932, n7933, n7934, n7935, n7936, n7937, n7938, n7939, n7940, 
      n7941, n7942, n7943, n7944, n7945, n7946, n7947, n7948, n7949, n7950, 
      n7951, n7952, n7953, n7954, n7955, n7956, n7957, n7958, n7959, n7960, 
      n7961, n7962, n7963, n7964, n7965, n7966, n7967, n7968, n7969, n7970, 
      n7971, n7972, n7973, n7974, n7975, n7976, n7977, n7978, n7979, n7980, 
      n7981, n7982, n7983, n7984, n7985, n7986, n7987, n7988, n7989, n7990, 
      n7991, n7992, n7993, n7994, n7995, n7996, n7997, n7998, n7999, n8000, 
      n8001, n8002, n8003, n8004, n8005, n8006, n8007, n8008, n8009, n8010, 
      n8011, n8012, n8013, n8014, n8015, n8016, n8017, n8018, n8019, n8020, 
      n8021, n8022, n8023, n8024, n8025, n8026, n8027, n8028, n8029, n8030, 
      n8031, n8032, n8033, n8034, n8035, n8036, n8037, n8038, n8039, n8040, 
      n8041, n8042, n8043, n8044, n8045, n8046, n8047, n8048, n8049, n8050, 
      n8051, n8052, n8053, n8054, n8055, n8056, n8057, n8058, n8059, n8060, 
      n8061, n8062, n8063, n8064, n8065, n8066, n8067, n8068, n8069, n8070, 
      n8071, n8072, n8073, n8074, n8075, n8076, n8077, n8078, n8079, n8080, 
      n8081, n8082, n8083, n8084, n8085, n8086, n8087, n8088, n8089, n8090, 
      n8091, n8092, n8093, n8094, n8095, n8096, n8097, n8098, n8099, n8100, 
      n8101, n8102, n8103, n8104, n8105, n8106, n8107, n8108, n8109, n8110, 
      n8111, n8112, n8113, n8114, n8115, n8116, n8117, n8118, n8119, n8120, 
      n8121, n8122, n8123, n8124, n8125, n8126, n8127, n8128, n8129, n8130, 
      n8131, n8132, n8133, n8134, n8135, n8136, n8137, n8138, n8139, n8140, 
      n8141, n8142, n8143, n8144, n8145, n8146, n8147, n8148, n8149, n8150, 
      n8151, n8152, n8153, n8154, n8155, n8156, n8157, n8158, n8159, n8160, 
      n8161, n8162, n8163, n8164, n8165, n8166, n8167, n8168, n8169, n8170, 
      n8171, n8172, n8173, n8174, n8175, n8176, n8177, n8178, n8179, n8180, 
      n8181, n8182, n8183, n8184, n8185, n8186, n8187, n8188, n8189, n8190, 
      n8191, n8192, n8193, n8194, n8195, n8196, n8197, n8198, n8199, n8200, 
      n8201, n8202, n8203, n8204, n8205, n8206, n8207, n8208, n8209, n8210, 
      n8211, n8212, n8213, n8214, n8215, n8216, n8217, n8218, n8219, n8220, 
      n8221, n8222, n8223, n8224, n8225, n8226, n8227, n8228, n8229, n8230, 
      n8231, n8232, n8233, n8234, n8235, n8236, n8237, n8238, n8239, n8240, 
      n8241, n8242, n8243, n8244, n8245, n8246, n8247, n8248, n8249, n8250, 
      n8251, n8252, n8253, n8254, n8255, n8256, n8257, n8258, n8259, n8260, 
      n8261, n8262, n8263, n8264, n8265, n8266, n8267, n8268, n8269, n8270, 
      n8271, n8272, n8273, n8274, n8275, n8276, n8277, n8278, n8279, n8280, 
      n8281, n8282, n8283, n8284, n8285, n8286, n8287, n8288, n8289, n8290, 
      n8291, n8292, n8293, n8294, n8295, n8296, n8297, n8298, n8299, n8300, 
      n8301, n8302, n8303, n8304, n8305, n8306, n8307, n8308, n8309, n8310, 
      n8311, n8312, n8313, n8314, n8315, n8316, n8317, n8318, n8319, n8320, 
      n8321, n8322, n8323, n8324, n8325, n8326, n8327, n8328, n8329, n8330, 
      n8331, n8332, n8333, n8334, n8335, n8336, n8337, n8338, n8339, n8340, 
      n8341, n8342, n8343, n8344, n8345, n8346, n8347, n8348, n8349, n8350, 
      n8351, n8352, n8353, n8354, n8355, n8356, n8357, n8358, n8359, n8360, 
      n8361, n8362, n8363, n8364, n8365, n8366, n8367, n8368, n8369, n8370, 
      n8371, n8372, n8373, n8374, n8375, n8376, n8377, n8378, n8379, n8380, 
      n8381, n8382, n8383, n8384, n8385, n8386, n8387, n8388, n8389, n8390, 
      n8391, n8392, n8393, n8394, n8395, n8396, n8397, n8398, n8399, n8400, 
      n8401, n8402, n8403, n8404, n8405, n8406, n8407, n8408, n8409, n8410, 
      n8411, n8412, n8413, n8414, n8415, n8416, n8417, n8418, n8419, n8420, 
      n8421, n8422, n8423, n8424, n8425, n8426, n8427, n8428, n8429, n8430, 
      n8431, n8432, n8433, n8434, n8435, n8436, n8437, n8438, n8439, n8440, 
      n8441, n8442, n8443, n8444, n8445, n8446, n8447, n8448, n8449, n8450, 
      n8451, n8452, n8453, n8454, n8455, n8456, n8457, n8458, n8459, n8460, 
      n8461, n8462, n8463, n8464, n8465, n8466, n8467, n8468, n8469, n8470, 
      n8471, n8472, n8473, n8474, n8475, n8476, n8477, n8478, n8479, n8480, 
      n8481, n8482, n8483, n8484, n8485, n8486, n8487, n8488, n8489, n8490, 
      n8491, n8492, n8493, n8494, n8495, n8496, n8497, n8498, n8499, n8500, 
      n8501, n8502, n8503, n8504, n8505, n8506, n8507, n8508, n8509, n8510, 
      n8511, n8512, n8513, n8514, n8515, n8516, n8517, n8518, n8519, n8520, 
      n8521, n8522, n8523, n8524, n8525, n8526, n8527, n8528, n8529, n8530, 
      n8531, n8532, n8533, n8534, n8535, n8536, n8537, n8538, n8539, n8540, 
      n8541, n8542, n8543, n8544, n8545, n8546, n8547, n8548, n8549, n8550, 
      n8551, n8552, n8553, n8554, n8555, n8556, n8557, n8558, n8559, n8560, 
      n8561, n8562, n8563, n8564, n8565, n8566, n8567, n8568, n8569, n8570, 
      n8571, n8572, n8573, n8574, n8575, n8576, n8577, n8578, n8579, n8580, 
      n8581, n8582, n8583, n8584, n8585, n8586, n8587, n8588, n8589, n8590, 
      n8591, n8592, n8593, n8594, n8595, n8596, n8597, n8598, n8599, n8600, 
      n8601, n8602, n8603, n8604, n8605, n8606, n8607, n8608, n8609, n8610, 
      n8611, n8612, n8613, n8614, n8615, n8616, n8617, n8618, n8619, n8620, 
      n8621, n8622, n8623, n8624, n8625, n8626, n8627, n8628, n8629, n8630, 
      n8631, n8632, n8633, n8634, n8635, n8636, n8637, n8638, n8639, n8640, 
      n8641, n8642, n8643, n8644, n8645, n8646, n8647, n8648, n8649, n8650, 
      n8651, n8652, n8653, n8654, n8655, n8656, n8657, n8658, n8659, n8660, 
      n8661, n8662, n8663, n8664, n8665, n8666, n8667, n8668, n8669, n8670, 
      n8671, n8672, n8673, n8674, n8675, n8676, n8677, n8678, n8679, n8680, 
      n8681, n8682, n8683, n8684, n8685, n8686, n8687, n8688, n8689, n8690, 
      n8691, n8692, n8693, n8694, n8695, n8696, n8697, n8698, n8699, n8700, 
      n8701, n8702, n8703, n8704, n8705, n8706, n8707, n8708, n8709, n8710, 
      n8711, n8712, n8713, n8714, n8715, n8716, n8717, n8718, n8719, n8720, 
      n8721, n8722, n8723, n8724, n8725, n8726, n8727, n8728, n8729, n8730, 
      n8731, n8732, n8733, n8734, n8735, n8736, n8737, n8738, n8739, n8740, 
      n8741, n8742, n8743, n8744, n8745, n8746, n8747, n8748, n8749, n8750, 
      n8751, n8752, n8753, n8754, n8755, n8756, n8757, n8758, n8759, n8760, 
      n8761, n8762, n8763, n8764, n8765, n8766, n8767, n8768, n8769, n8770, 
      n8771, n8772, n8773, n8774, n8775, n8776, n8777, n8778, n8779, n8780, 
      n8781, n8782, n8783, n8784, n8785, n8786, n8787, n8788, n8789, n8790, 
      n8791, n8792, n8793, n8794, n8795, n8796, n8797, n8798, n8799, n8800, 
      n8801, n8802, n8803, n8804, n8805, n8806, n8807, n8808, n8809, n8810, 
      n8811, n8812, n8813, n8814, n8815, n8816, n8817, n8818, n8819, n8820, 
      n8821, n8822, n8823, n8824, n8825, n8826, n8827, n8828, n8829, n8830, 
      n8831, n8832, n8833, n8834, n8835, n8836, n8837, n8838, n8839, n8840, 
      n8841, n8842, n8843, n8844, n8845, n8846, n8847, n8848, n8849, n8850, 
      n8851, n8852, n8853, n8854, n8855, n8856, n8857, n8858, n8859, n8860, 
      n8861, n8862, n8863, n8864, n8865, n8866, n8867, n8868, n8869, n8870, 
      n8871, n8872, n8873, n8874, n8875, n8876, n8877, n8878, n8879, n8880, 
      n8881, n8882, n8883, n8884, n8885, n8886, n8887, n8888, n8889, n8890, 
      n8891, n8892, n8893, n8894, n8895, n8896, n8897, n8898, n8899, n8900, 
      n8901, n8902, n8903, n8904, n8905, n8906, n8907, n8908, n8909, n8910, 
      n8911, n8912, n8913, n8914, n8915, n8916, n8917, n8918, n8919, n8920, 
      n8921, n8922, n8923, n8924, n8925, n8926, n8927, n8928, n8929, n8930, 
      n8931, n8932, n8933, n8934, n8935, n8936, n8937, n8938, n8939, n8940, 
      n8941, n8942, n8943, n8944, n8945, n8946, n8947, n8948, n8949, n8950, 
      n8951, n8952, n8953, n8954, n8955, n8956, n8957, n8958, n8959, n8960, 
      n8961, n8962, n8963, n8964, n8965, n8966, n8967, n8968, n8969, n8970, 
      n8971, n8972, n8973, n8974, n8975, n8976, n8977, n8978, n8979, n8980, 
      n8981, n8982, n8983, n8984, n8985, n8986, n8987, n8988, n8989, n8990, 
      n8991, n8992, n8993, n8994, n8995, n8996, n8997, n8998, n8999, n9000, 
      n9001, n9002, n9003, n9004, n9005, n9006, n9007, n9008, n9009, n9010, 
      n9011, n9012, n9013, n9014, n9015, n9016, n9017, n9018, n9019, n9020, 
      n9021, n9022, n9023, n9024, n9025, n9026, n9027, n9028, n9029, n9030, 
      n9031, n9032, n9033, n9034, n9035, n9036, n9037, n9038, n9039, n9040, 
      n9041, n9042, n9043, n9044, n9045, n9046, n9047, n9048, n9049, n9050, 
      n9051, n9052, n9053, n9054, n9055, n9056, n9057, n9058, n9059, n9060, 
      n9061, n9062, n9063, n9064, n9065, n9066, n9067, n9068, n9069, n9070, 
      n9071, n9072, n9073, n9074, n9075, n9076, n9077, n9078, n9079, n9080, 
      n9081, n9082, n9083, n9084, n9085, n9086, n9087, n9088, n9089, n9090, 
      n9091, n9092, n9093, n9094, n9095, n9096, n9097, n9098, n9099, n9100, 
      n9101, n9102, n9103, n9104, n9105, n9106, n9107, n9108, n9109, n9110, 
      n9111, n9112, n9113, n9114, n9115, n9116, n9117, n9118, n9119, n9120, 
      n9121, n9122, n9123, n9124, n9125, n9126, n9127, n9128, n9129, n9130, 
      n9131, n9132, n9133, n9134, n9135, n9136, n9137, n9138, n9139, n9140, 
      n9141, n9142, n9143, n9144, n9145, n9146, n9147, n9148, n9149, n9150, 
      n9151, n9152, n9153, n9154, n9155, n9156, n9157, n9158, n9159, n9160, 
      n9161, n9162, n9163, n9164, n9165, n9166, n9167, n9168, n9169, n9170, 
      n9171, n9172, n9173, n9174, n9175, n9176, n9177, n9178, n9179, n9180, 
      n9181, n9182, n9183, n9184, n9185, n9186, n9187, n9188, n9189, n9190, 
      n9191, n9192, n9193, n9194, n9195, n9196, n9197, n9198, n9199, n9200, 
      n9201, n9202, n9203, n9204, n9205, n9206, n9207, n9208, n9209, n9210, 
      n9211, n9212, n9213, n9214, n9215, n9216, n9217, n9218, n9219, n9220, 
      n9221, n9222, n9223, n9224, n9225, n9226, n9227, n9228, n9229, n9230, 
      n9231, n9232, n9233, n9234, n9235, n9236, n9237, n9238, n9239, n9240, 
      n9241, n9242, n9243, n9244, n9245, n9246, n9247, n9248, n9249, n9250, 
      n9251, n9252, n9253, n9254, n9255, n9256, n9257, n9258, n9259, n9260, 
      n9261, n9262, n9263, n9264, n9265, n9266, n9267, n9268, n9269, n9270, 
      n9271, n9272, n9273, n9274, n9275, n9276, n9277, n9278, n9279, n9280, 
      n9281, n9282, n9283, n9284, n9285, n9286, n9287, n9288, n9289, n9290, 
      n9291, n9292, n9293, n9294, n9295, n9296, n9297, n9298, n9299, n9300, 
      n9301, n9302, n9303, n9304, n9305, n9306, n9307, n9308, n9309, n9310, 
      n9311, n9312, n9313, n9314, n9315, n9316, n9317, n9318, n9319, n9320, 
      n9321, n9322, n9323, n9324, n9325, n9326, n9327, n9328, n9329, n9330, 
      n9331, n9332, n9333, n9334, n9335, n9336, n9337, n9338, n9339, n9340, 
      n9341, n9342, n9343, n9344, n9345, n9346, n9347, n9348, n9349, n9350, 
      n9351, n9352, n9353, n9354, n9355, n9356, n9357, n9358, n9359, n9360, 
      n9361, n9362, n9363, n9364, n9365, n9366, n9367, n9368, n9369, n9370, 
      n9371, n9372, n9373, n9374, n9375, n9376, n9377, n9378, n9379, n9380, 
      n9381, n9382, n9383, n9384, n9385, n9386, n9387, n9388, n9389, n9390, 
      n9391, n9392, n9393, n9394, n9395, n9396, n9397, n9398, n9399, n9400, 
      n9401, n9402, n9403, n9404, n9405, n9406, n9407, n9408, n9409, n9410, 
      n9411, n9412, n9413, n9414, n9415, n9416, n9417, n9418, n9419, n9420, 
      n9421, n9422, n9423, n9424, n9425, n9426, n9427, n9428, n9429, n9430, 
      n9431, n9432, n9433, n9434, n9435, n9436, n9437, n9438, n9439, n9440, 
      n9441, n9442, n9443, n9444, n9445, n9446, n9447, n9448, n9449, n9450, 
      n9451, n9452, n9453, n9454, n9455, n9456, n9457, n9458, n9459, n9460, 
      n9461, n9462, n9463, n9464, n9465, n9466, n9467, n9468, n9469, n9470, 
      n9471, n9472, n9473, n9474, n9475, n9476, n9477, n9478, n9479, n9480, 
      n9481, n9482, n9483, n9484, n9485, n9486, n9487, n9488, n9489, n9490, 
      n9491, n9492, n9493, n9494, n9495, n9496, n9497, n9498, n9499, n9500, 
      n9501, n9502, n9503, n9504, n9505, n9506, n9507, n9508, n9509, n9510, 
      n9511, n9512, n9513, n9514, n9515, n9516, n9517, n9518, n9519, n9520, 
      n9521, n9522, n9523, n9524, n9525, n9526, n9527, n9528, n9529, n9530, 
      n9531, n9532, n9533, n9534, n9535, n9536, n9537, n9538, n9539, n9540, 
      n9541, n9542, n9543, n9544, n9545, n9546, n9547, n9548, n9549, n9550, 
      n9551, n9552, n9553, n9554, n9555, n9556, n9557, n9558, n9559, n9560, 
      n9561, n9562, n9563, n9564, n9565, n9566, n9567, n9568, n9569, n9570, 
      n9571, n9572, n9573, n9574, n9575, n9576, n9577, n9578, n9579, n9580, 
      n9581, n9582, n9583, n9584, n9585, n9586, n9587, n9588, n9589, n9590, 
      n9591, n9592, n9593, n9594, n9595, n9596, n9597, n9598, n9599, n9600, 
      n9601, n9602, n9603, n9604, n9605, n9606, n9607, n9608, n9609, n9610, 
      n9611, n9612, n9613, n9614, n9615, n9616, n9617, n9618, n9619, n9620, 
      n9621, n9622, n9623, n9624, n9625, n9626, n9627, n9628, n9629, n9630, 
      n9631, n9632, n9633, n9634, n9635, n9636, n9637, n9638, n9639, n9640, 
      n9641, n9642, n9643, n9644, n9645, n9646, n9647, n9648, n9649, n9650, 
      n9651, n9652, n9653, n9654, n9655, n9656, n9657, n9658, n9659, n9660, 
      n9661, n9662, n9663, n9664, n9665, n9666, n9667, n9668, n9669, n9670, 
      n9671, n9672, n9673, n9674, n9675, n9676, n9677, n9678, n9679, n9680, 
      n9681, n9682, n9683, n9684, n9685, n9686, n9687, n9688, n9689, n9690, 
      n9691, n9692, n9693, n9694, n9695, n9696, n9697, n9698, n9699, n9700, 
      n9701, n9702, n9703, n9704, n9705, n9706, n9707, n9708, n9709, n9710, 
      n9711, n9712, n9713, n9714, n9715, n9716, n9717, n9718, n9719, n9720, 
      n9721, n9722, n9723, n9724, n9725, n9726, n9727, n9728, n9729, n9730, 
      n9731, n9732, n9733, n9734, n9735, n9736, n9737, n9738, n9739, n9740, 
      n9741, n9742, n9743, n9744, n9745, n9746, n9747, n9748, n9749, n9750, 
      n9751, n9752, n9753, n9754, n9755, n9756, n9757, n9758, n9759, n9760, 
      n9761, n9762, n9763, n9764, n9765, n9766, n9767, n9768, n9769, n9770, 
      n9771, n9772, n9773, n9774, n9775, n9776, n9777, n9778, n9779, n9780, 
      n9781, n9782, n9783, n9784, n9785, n9786, n9787, n9788, n9789, n9790, 
      n9791, n9792, n9793, n9794, n9795, n9796, n9797, n9798, n9799, n9800, 
      n9801, n9802, n9803, n9804, n9805, n9806, n9807, n9808, n9809, n9810, 
      n9811, n9812, n9813, n9814, n9815, n9816, n9817, n9818, n9819, n9820, 
      n9821, n9822, n9823, n9824, n9825, n9826, n9827, n9828, n9829, n9830, 
      n9831, n9832, n9833, n9834, n9835, n9836, n9837, n9838, n9839, n9840, 
      n9841, n9842, n9843, n9844, n9845, n9846, n9847, n9848, n9849, n9850, 
      n9851, n9852, n9853, n9854, n9855, n9856, n9857, n9858, n9859, n9860, 
      n9861, n9862, n9863, n9864, n9865, n9866, n9867, n9868, n9869, n9870, 
      n9871, n9872, n9873, n9874, n9875, n9876, n9877, n9878, n9879, n9880, 
      n9881, n9882, n9883, n9884, n9885, n9886, n9887, n9888, n9889, n9890, 
      n9891, n9892, n9893, n9894, n9895, n9896, n9897, n9898, n9899, n9900, 
      n9901, n9902, n9903, n9904, n9905, n9906, n9907, n9908, n9909, n9910, 
      n9911, n9912, n9913, n9914, n9915, n9916, n9917, n9918, n9919, n9920, 
      n9921, n9922, n9923, n9924, n9925, n9926, n9927, n9928, n9929, n9930, 
      n9931, n9932, n9933, n9934, n9935, n9936, n9937, n9938, n9939, n9940, 
      n9941, n9942, n9943, n9944, n9945, n9946, n9947, n9948, n9949, n9950, 
      n9951, n9952, n9953, n9954, n9955, n9956, n9957, n9958, n9959, n9960, 
      n9961, n9962, n9963, n9964, n9965, n9966, n9967, n9968, n9969, n9970, 
      n9971, n9972, n9973, n9974, n9975, n9976, n9977, n9978, n9979, n9980, 
      n9981, n9982, n9983, n9984, n9985, n9986, n9987, n9988, n9989, n9990, 
      n9991, n9992, n9993, n9994, n9995, n9996, n9997, n9998, n9999, n10000, 
      n10001, n10002, n10003, n10004, n10005, n10006, n10007, n10008, n10009, 
      n10010, n10011, n10012, n10013, n10014, n10015, n10016, n10017, n10018, 
      n10019, n10020, n10021, n10022, n10023, n10024, n10025, n10026, n10027, 
      n10028, n10029, n10030, n10031, n10032, n10033, n10034, n10035, n10036, 
      n10037, n10038, n10039, n10040, n10041, n10042, n10043, n10044, n10045, 
      n10046, n10047, n10048, n10049, n10050, n10051, n10052, n10053, n10054, 
      n10055, n10056, n10057, n10058, n10059, n10060, n10061, n10062, n10063, 
      n10064, n10065, n10066, n10067, n10068, n10069, n10070, n10071, n10072, 
      n10073, n10074, n10075, n10076, n10077, n10078, n10079, n10080, n10081, 
      n10082, n10083, n10084, n10085, n10086, n10087, n10088, n10089, n10090, 
      n10091, n10092, n10093, n10094, n10095, n10096, n10097, n10098, n10099, 
      n10100, n10101, n10102, n10103, n10104, n10105, n10106, n10107, n10108, 
      n10109, n10110, n10111, n10112, n10113, n10114, n10115, n10116, n10117, 
      n10118, n10119, n10120, n10121, n10122, n10123, n10124, n10125, n10126, 
      n10127, n10128, n10129, n10130, n10131, n10132, n10133, n10134, n10135, 
      n10136, n10137, n10138, n10139, n10140, n10141, n10142, n10143, n10144, 
      n10145, n10146, n10147, n10148, n10149, n10150, n10151, n10152, n10153, 
      n10154, n10155, n10156, n10157, n10158, n10159, n10160, n10161, n10162, 
      n10163, n10164, n10165, n10166, n10167, n10168, n10169, n10170, n10171, 
      n10172, n10173, n10174, n10175, n10176, n10177, n10178, n10179, n10180, 
      n10181, n10182, n10183, n10184, n10185, n10186, n10187, n10188, n10189, 
      n10190, n10191, n10192, n10193, n10194, n10195, n10196, n10197, n10198, 
      n10199, n10200, n10201, n10202, n10203, n10204, n10205, n10206, n10207, 
      n10208, n10209, n10210, n10211, n10212, n10213, n10214, n10215, n10216, 
      n10217, n10218, n10219, n10220, n10221, n10222, n10223, n10224, n10225, 
      n10226, n10227, n10228, n10229, n10230, n10231, n10232, n10233, n10234, 
      n10235, n10236, n10237, n10238, n10239, n10240, n10241, n10242, n10243, 
      n10244, n10245, n10246, n10247, n10248, n10249, n10250, n10251, n10252, 
      n10253, n10254, n10255, n10256, n10257, n10258, n10259, n10260, n10261, 
      n10262, n10263, n10264, n10265, n10266, n10267, n10268, n10269, n10270, 
      n10271, n10272, n10273, n10274, n10275, n10276, n10277, n10278, n10279, 
      n10280, n10281, n10282, n10283, n10284, n10285, n10286, n10287, n10288, 
      n10289, n10290, n10291, n10292, n10293, n10294, n10295, n10296, n10297, 
      n10298, n10299, n10300, n10301, n10302, n10303, n10304, n10305, n10306, 
      n10307, n10308, n10309, n10310, n10311, n10312, n10313, n10314, n10315, 
      n10316, n10317, n10318, n10319, n10320, n10321, n10322, n10323, n10324, 
      n10325, n10326, n10327, n10328, n10329, n10330, n10331, n10332, n10333, 
      n10334, n10335, n10336, n10337, n10338, n10339, n10340, n10341, n10342, 
      n10343, n10344, n10345, n10346, n10347, n10348, n10349, n10350, n10351, 
      n10352, n10353, n10354, n10355, n10356, n10357, n10358, n10359, n10360, 
      n10361, n10362, n10363, n10364, n10365, n10366, n10367, n10368, n10369, 
      n10370, n10371, n10372, n10373, n10374, n10375, n10376, n10377, n10378, 
      n10379, n10380, n10381, n10382, n10383, n10384, n10385, n10386, n10387, 
      n10388, n10389, n10390, n10391, n10392, n10393, n10394, n10395, n10396, 
      n10397, n10398, n10399, n10400, n10401, n10402, n10403, n10404, n10405, 
      n10406, n10407, n10408, n10409, n10410, n10411, n10412, n10413, n10414, 
      n10415, n10416, n10417, n10418, n10419, n10420, n10421, n10422, n10423, 
      n10424, n10425, n10426, n10427, n10428, n10429, n10430, n10431, n10432, 
      n10433, n10434, n10435, n10436, n10437, n10438, n10439, n10440, n10441, 
      n10442, n10443, n10444, n10445, n10446, n10447, n10448, n10449, n10450, 
      n10451, n10452, n10453, n10454, n10455, n10456, n10457, n10458, n10459, 
      n10460, n10461, n10462, n10463, n10464, n10465, n10466, n10467, n10468, 
      n10469, n10470, n10471, n10472, n10473, n10474, n10475, n10476, n10477, 
      n10478, n10479, n10480, n10481, n10482, n10483, n10484, n10485, n10486, 
      n10487, n10488, n10489, n10490, n10491, n10492, n10493, n10494, n10495, 
      n10496, n10497, n10498, n10499, n10500, n10501, n10502, n10503, n10504, 
      n10505, n10506, n10507, n10508, n10509, n10510, n10511, n10512, n10513, 
      n10514, n10515, n10516, n10517, n10518, n10519, n10520, n10521, n10522, 
      n10523, n10524, n10525, n10526, n10527, n10528, n10529, n10530, n10531, 
      n10532, n10533, n10534, n10535, n10536, n10537, n10538, n10539, n10540, 
      n10541, n10542, n10543, n10544, n10545, n10546, n10547, n10548, n10549, 
      n10550, n10551, n10552, n10553, n10554, n10555, n10556, n10557, n10558, 
      n10559, n10560, n10561, n10562, n10563, n10564, n10565, n10566, n10567, 
      n10568, n10569, n10570, n10571, n10572, n10573, n10574, n10575, n10576, 
      n10577, n10578, n10579, n10580, n10581, n10582, n10583, n10584, n10585, 
      n10586, n10587, n10588, n10589, n10590, n10591, n10592, n10593, n10594, 
      n10595, n10596, n10597, n10598, n10599, n10600, n10601, n10602, n10603, 
      n10604, n10605, n10606, n10607, n10608, n10609, n10610, n10611, n10612, 
      n10613, n10614, n10615, n10616, n10617, n10618, n10619, n10620, n10621, 
      n10622, n10623, n10624, n10625, n10626, n10627, n10628, n10629, n10630, 
      n10631, n10632, n10633, n10634, n10635, n10636, n10637, n10638, n10639, 
      n10640, n10641, n10642, n10643, n10644, n10645, n10646, n10647, n10648, 
      n10649, n10650, n10651, n10652, n10653, n10654, n10655, n10656, n10657, 
      n10658, n10659, n10660, n10661, n10662, n10663, n10664, n10665, n10666, 
      n10667, n10668, n10669, n10670, n10671, n10672, n10673, n10674, n10675, 
      n10676, n10677, n10678, n10679, n10680, n10681, n10682, n10683, n10684, 
      n10685, n10686, n10687, n10688, n10689, n10690, n10691, n10692, n10693, 
      n10694, n10695, n10696, n10697, n10698, n10699, n10700, n10701, n10702, 
      n10703, n10704, n10705, n10706, n10707, n10708, n10709, n10710, n10711, 
      n10712, n10713, n10714, n10715, n10716, n10717, n10718, n10719, n10720, 
      n10721, n10722, n10723, n10724, n10725, n10726, n10727, n10728, n10729, 
      n10730, n10731, n10732, n10733, n10734, n10735, n10736, n10737, n10738, 
      n10739, n10740, n10741, n10742, n10743, n10744, n10745, n10746, n10747, 
      n10748, n10749, n10750, n10751, n10752, n10753, n10754, n10755, n10756, 
      n10757, n10758, n10759, n10760, n10761, n10762, n10763, n10764, n10765, 
      n10766, n10767, n10768, n10769, n10770, n10771, n10772, n10773, n10774, 
      n10775, n10776, n10777, n10778, n10779, n10780, n10781, n10782, n10783, 
      n10784, n10785, n10786, n10787, n10788, n10789, n10790, n10791, n10792, 
      n10793, n10794, n10795, n10796, n10797, n10798, n10799, n10800, n10801, 
      n10802, n10803, n10804, n10805, n10806, n10807, n10808, n10809, n10810, 
      n10811, n10812, n10813, n10814, n10815, n10816, n10817, n10818, n10819, 
      n10820, n10821, n10822, n10823, n10824, n10825, n10826, n10827, n10828, 
      n10829, n10830, n10831, n10832, n10833, n10834, n10835, n10836, n10837, 
      n10838, n10839, n10840, n10841, n10842, n10843, n10844, n10845, n10846, 
      n10847, n10848, n10849, n10850, n10851, n10852, n10853, n10854, n10855, 
      n10856, n10857, n10858, n10859, n10860, n10861, n10862, n10863, n10864, 
      n10865, n10866, n10867, n10868, n10869, n10870, n10871, n10872, n10873, 
      n10874, n10875, n10876, n10877, n10878, n10879, n10880, n10881, n10882, 
      n10883, n10884, n10885, n10886, n10887, n10888, n10889, n10890, n10891, 
      n10892, n10893, n10894, n10895, n10896, n10897, n10898, n10899, n10900, 
      n10901, n10902, n10903, n10904, n10905, n10906, n10907, n10908, n10909, 
      n10910, n10911, n10912, n10913, n10914, n10915, n10916, n10917, n10918, 
      n10919, n10920, n10921, n10922, n10923, n10924, n10925, n10926, n10927, 
      n10928, n10929, n10930, n10931, n10932, n10933, n10934, n10935, n10936, 
      n10937, n10938, n10939, n10940, n10941, n10942, n10943, n10944, n10945, 
      n10946, n10947, n10948, n10949, n10950, n10951, n10952, n10953, n10954, 
      n10955, n10956, n10957, n10958, n10959, n10960, n10961, n10962, n10963, 
      n10964, n10965, n10966, n10967, n10968, n10969, n10970, n10971, n10972, 
      n10973, n10974, n10975, n10976, n10977, n10978, n10979, n10980, n10981, 
      n10982, n10983, n10984, n10985, n10986, n10987, n10988, n10989, n10990, 
      n10991, n10992, n10993, n10994, n10995, n10996, n10997, n10998, n10999, 
      n11000, n11001, n11002, n11003, n11004, n11005, n11006, n11007, n11008, 
      n11009, n11010, n11011, n11012, n11013, n11014, n11015, n11016, n11017, 
      n11018, n11019, n11020, n11021, n11022, n11023, n11024, n11025, n11026, 
      n11027, n11028, n11029, n11030, n11031, n11032, n11033, n11034, n11035, 
      n11036, n11037, n11038, n11039, n11040, n11041, n11042, n11043, n11044, 
      n11045, n11046, n11047, n11048, n11049, n11050, n11051, n11052, n11053, 
      n11054, n11055, n11056, n11057, n11058, n11059, n11060, n11061, n11062, 
      n11063, n11064, n11065, n11066, n11067, n11068, n11069, n11070, n11071, 
      n11072, n11073, n11074, n11075, n11076, n11077, n11078, n11079, n11080, 
      n11081, n11082, n11083, n11084, n11085, n11086, n11087, n11088, n11089, 
      n11090, n11091, n11092, n11093, n11094, n11095, n11096, n11097, n11098, 
      n11099, n11100, n11101, n11102, n11103, n11104, n11105, n11106, n11107, 
      n11108, n11109, n11110, n11111, n11112, n11113, n11114, n11115, n11116, 
      n11117, n11118, n11119, n11120, n11121, n11122, n11123, n11124, n11125, 
      n11126, n11127, n11128, n11129, n11130, n11131, n11132, n11133, n11134, 
      n11135, n11136, n11137, n11138, n11139, n11140, n11141, n11142, n11143, 
      n11144, n11145, n11146, n11147, n11148, n11149, n11150, n11151, n11152, 
      n11153, n11154, n11155, n11156, n11157, n11158, n11159, n11160, n11161, 
      n11162, n11163, n11164, n11165, n11166, n11167, n11168, n11169, n11170, 
      n11171, n11172, n11173, n11174, n11175, n11176, n11177, n11178, n11179, 
      n11180, n11181, n11182, n11183, n11184, n11185, n11186, n11187, n11188, 
      n11189, n11190, n11191, n11192, n11193, n11194, n11195, n11196, n11197, 
      n11198, n11199, n11200, n11201, n11202, n11203, n11204, n11205, n11206, 
      n11207, n11208, n11209, n11210, n11211, n11212, n11213, n11214, n11215, 
      n11216, n11217, n11218, n11219, n11220, n11221, n11222, n11223, n11224, 
      n11225, n11226, n11227, n11228, n11229, n11230, n11231, n11232, n11233, 
      n11234, n11235, n11236, n11237, n11238, n11239, n11240, n11241, n11242, 
      n11243, n11244, n11245, n11246, n11247, n11248, n11249, n11250, n11251, 
      n11252, n11253, n11254, n11255, n11256, n11257, n11258, n11259, n11260, 
      n11261, n11262, n11263, n11264, n11265, n11266, n11267, n11268, n11269, 
      n11270, n11271, n11272, n11273, n_1143, n_1144, n_1145, n_1146, n_1147, 
      n_1148, n_1149, n_1150, n_1151, n_1152, n_1153, n_1154, n_1155, n_1156, 
      n_1157, n_1158, n_1159, n_1160, n_1161, n_1162, n_1163, n_1164, n_1165, 
      n_1166, n_1167, n_1168, n_1169, n_1170, n_1171, n_1172, n_1173, n_1174, 
      n_1175, n_1176, n_1177, n_1178, n_1179, n_1180, n_1181, n_1182, n_1183, 
      n_1184, n_1185, n_1186, n_1187, n_1188, n_1189, n_1190, n_1191, n_1192, 
      n_1193, n_1194, n_1195, n_1196, n_1197, n_1198, n_1199, n_1200, n_1201, 
      n_1202, n_1203, n_1204, n_1205, n_1206, n_1207, n_1208, n_1209, n_1210, 
      n_1211, n_1212, n_1213, n_1214, n_1215, n_1216, n_1217, n_1218, n_1219, 
      n_1220, n_1221, n_1222, n_1223, n_1224, n_1225, n_1226, n_1227, n_1228, 
      n_1229, n_1230, n_1231, n_1232, n_1233, n_1234, n_1235, n_1236, n_1237, 
      n_1238, n_1239, n_1240, n_1241, n_1242, n_1243, n_1244, n_1245, n_1246, 
      n_1247, n_1248, n_1249, n_1250, n_1251, n_1252, n_1253, n_1254, n_1255, 
      n_1256, n_1257, n_1258, n_1259, n_1260, n_1261, n_1262, n_1263, n_1264, 
      n_1265, n_1266, n_1267, n_1268, n_1269, n_1270, n_1271, n_1272, n_1273, 
      n_1274, n_1275, n_1276, n_1277, n_1278, n_1279, n_1280, n_1281, n_1282, 
      n_1283, n_1284, n_1285, n_1286, n_1287, n_1288, n_1289, n_1290, n_1291, 
      n_1292, n_1293, n_1294, n_1295, n_1296, n_1297, n_1298, n_1299, n_1300, 
      n_1301, n_1302, n_1303, n_1304, n_1305, n_1306, n_1307, n_1308, n_1309, 
      n_1310, n_1311, n_1312, n_1313, n_1314, n_1315, n_1316, n_1317, n_1318, 
      n_1319, n_1320, n_1321, n_1322, n_1323, n_1324, n_1325, n_1326, n_1327, 
      n_1328, n_1329, n_1330, n_1331, n_1332, n_1333, n_1334, n_1335, n_1336, 
      n_1337, n_1338, n_1339, n_1340, n_1341, n_1342, n_1343, n_1344, n_1345, 
      n_1346, n_1347, n_1348, n_1349, n_1350, n_1351, n_1352, n_1353, n_1354, 
      n_1355, n_1356, n_1357, n_1358, n_1359, n_1360, n_1361, n_1362, n_1363, 
      n_1364, n_1365, n_1366, n_1367, n_1368, n_1369, n_1370, n_1371, n_1372, 
      n_1373, n_1374, n_1375, n_1376, n_1377, n_1378, n_1379, n_1380, n_1381, 
      n_1382, n_1383, n_1384, n_1385, n_1386, n_1387, n_1388, n_1389, n_1390, 
      n_1391, n_1392, n_1393, n_1394, n_1395, n_1396, n_1397, n_1398, n_1399, 
      n_1400, n_1401, n_1402, n_1403, n_1404, n_1405, n_1406, n_1407, n_1408, 
      n_1409, n_1410, n_1411, n_1412, n_1413, n_1414, n_1415, n_1416, n_1417, 
      n_1418, n_1419, n_1420, n_1421, n_1422, n_1423, n_1424, n_1425, n_1426, 
      n_1427, n_1428, n_1429, n_1430, n_1431, n_1432, n_1433, n_1434, n_1435, 
      n_1436, n_1437, n_1438, n_1439, n_1440, n_1441, n_1442, n_1443, n_1444, 
      n_1445, n_1446, n_1447, n_1448, n_1449, n_1450, n_1451, n_1452, n_1453, 
      n_1454, n_1455, n_1456, n_1457, n_1458, n_1459, n_1460, n_1461, n_1462, 
      n_1463, n_1464, n_1465, n_1466, n_1467, n_1468, n_1469, n_1470, n_1471, 
      n_1472, n_1473, n_1474, n_1475, n_1476, n_1477, n_1478, n_1479, n_1480, 
      n_1481, n_1482, n_1483, n_1484, n_1485, n_1486, n_1487, n_1488, n_1489, 
      n_1490, n_1491, n_1492, n_1493, n_1494, n_1495, n_1496, n_1497, n_1498, 
      n_1499, n_1500, n_1501, n_1502, n_1503, n_1504, n_1505, n_1506, n_1507, 
      n_1508, n_1509, n_1510, n_1511, n_1512, n_1513, n_1514, n_1515, n_1516, 
      n_1517, n_1518, n_1519, n_1520, n_1521, n_1522, n_1523, n_1524, n_1525, 
      n_1526, n_1527, n_1528, n_1529, n_1530, n_1531, n_1532, n_1533, n_1534, 
      n_1535, n_1536, n_1537, n_1538, n_1539, n_1540, n_1541, n_1542, n_1543, 
      n_1544, n_1545, n_1546, n_1547, n_1548, n_1549, n_1550, n_1551, n_1552, 
      n_1553, n_1554, n_1555, n_1556, n_1557, n_1558, n_1559, n_1560, n_1561, 
      n_1562, n_1563, n_1564, n_1565, n_1566, n_1567, n_1568, n_1569, n_1570, 
      n_1571, n_1572, n_1573, n_1574, n_1575, n_1576, n_1577, n_1578, n_1579, 
      n_1580, n_1581, n_1582, n_1583, n_1584, n_1585, n_1586, n_1587, n_1588, 
      n_1589, n_1590, n_1591, n_1592, n_1593, n_1594, n_1595, n_1596, n_1597, 
      n_1598, n_1599, n_1600, n_1601, n_1602, n_1603, n_1604, n_1605, n_1606, 
      n_1607, n_1608, n_1609, n_1610, n_1611, n_1612, n_1613, n_1614, n_1615, 
      n_1616, n_1617, n_1618, n_1619, n_1620, n_1621, n_1622, n_1623, n_1624, 
      n_1625, n_1626, n_1627, n_1628, n_1629, n_1630, n_1631, n_1632, n_1633, 
      n_1634, n_1635, n_1636, n_1637, n_1638, n_1639, n_1640, n_1641, n_1642, 
      n_1643, n_1644, n_1645, n_1646, n_1647, n_1648, n_1649, n_1650, n_1651, 
      n_1652, n_1653, n_1654, n_1655, n_1656, n_1657, n_1658, n_1659, n_1660, 
      n_1661, n_1662, n_1663, n_1664, n_1665, n_1666, n_1667, n_1668, n_1669, 
      n_1670, n_1671, n_1672 : std_logic;

begin
   out_mem_addr <= ( out_mem_addr_31_port, out_mem_addr_30_port, 
      out_mem_addr_29_port, out_mem_addr_28_port, out_mem_addr_27_port, 
      out_mem_addr_26_port, out_mem_addr_25_port, out_mem_addr_24_port, 
      out_mem_addr_23_port, out_mem_addr_22_port, out_mem_addr_21_port, 
      out_mem_addr_20_port, out_mem_addr_19_port, out_mem_addr_18_port, 
      out_mem_addr_17_port, out_mem_addr_16_port, out_mem_addr_15_port, 
      out_mem_addr_14_port, out_mem_addr_13_port, out_mem_addr_12_port, 
      out_mem_addr_11_port, out_mem_addr_10_port, out_mem_addr_9_port, 
      out_mem_addr_8_port, out_mem_addr_7_port, out_mem_addr_6_port, 
      out_mem_addr_5_port, out_mem_addr_4_port, out_mem_addr_3_port, 
      out_mem_addr_2_port, X_Logic0_port, X_Logic0_port );
   out_mem_readEnable <= out_mem_readEnable_port;
   mem_writeMask <= ( mem_writeMask_3_port, mem_writeMask_2_port, 
      mem_writeMask_1_port, mem_writeMask_0_port );
   break <= break_port;
   
   X_Logic1_port <= '1';
   X_Logic0_port <= '0';
   n33 <= '0';
   n34 <= '0';
   n35 <= '0';
   n36 <= '0';
   n37 <= '0';
   n38 <= '0';
   n39 <= '0';
   n40 <= '0';
   n41 <= '0';
   n42 <= '1';
   n43 <= '0';
   n44 <= '0';
   n45 <= '0';
   mem_writeMask_reg_3_inst : GTECH_FD1 port map( D => n6017, CP => clk, Q => 
                           mem_writeMask_3_port, QN => n_1143);
   mem_writeMask_reg_2_inst : GTECH_FD1 port map( D => n6016, CP => clk, Q => 
                           mem_writeMask_2_port, QN => n_1144);
   mem_writeMask_reg_1_inst : GTECH_FD1 port map( D => n6015, CP => clk, Q => 
                           mem_writeMask_1_port, QN => n_1145);
   mem_writeMask_reg_0_inst : GTECH_FD1 port map( D => n6014, CP => clk, Q => 
                           mem_writeMask_0_port, QN => n_1146);
   opcode_reg_3_0_inst : GTECH_FD1 port map( D => n6013, CP => clk, Q => 
                           opcode_3_0_port, QN => n_1147);
   pc_reg_5_inst : GTECH_FD1 port map( D => n5916, CP => clk, Q => pc_5_port, 
                           QN => n_1148);
   stackA_reg_5_inst : GTECH_FD1 port map( D => n11172, CP => clk, Q => 
                           stackA_5_port, QN => n_1149);
   stackB_reg_5_inst : GTECH_FD1 port map( D => n5843, CP => clk, Q => 
                           stackB_5_port, QN => n_1150);
   multB_reg_5_inst : GTECH_FD1 port map( D => n5747, CP => clk, Q => 
                           multB_5_port, QN => n_1151);
   multResult_reg_0_inst : GTECH_FD1 port map( D => n5720, CP => clk, Q => 
                           n10987, QN => n_1152);
   multResult2_reg_0_inst : GTECH_FD1 port map( D => n11206, CP => clk, Q => 
                           n10955, QN => n_1153);
   multResult3_reg_0_inst : GTECH_FD1 port map( D => n11238, CP => clk, Q => 
                           n11037, QN => n_1154);
   multResult_reg_1_inst : GTECH_FD1 port map( D => n5719, CP => clk, Q => 
                           n10986, QN => n_1155);
   multResult2_reg_1_inst : GTECH_FD1 port map( D => n11207, CP => clk, Q => 
                           n10954, QN => n_1156);
   multResult3_reg_1_inst : GTECH_FD1 port map( D => n11239, CP => clk, Q => 
                           n11035, QN => n_1157);
   multResult_reg_2_inst : GTECH_FD1 port map( D => n5718, CP => clk, Q => 
                           n10985, QN => n_1158);
   multResult2_reg_2_inst : GTECH_FD1 port map( D => n11208, CP => clk, Q => 
                           n10953, QN => n_1159);
   multResult3_reg_2_inst : GTECH_FD1 port map( D => n11240, CP => clk, Q => 
                           n11032, QN => n_1160);
   multResult_reg_3_inst : GTECH_FD1 port map( D => n5717, CP => clk, Q => 
                           n10984, QN => n_1161);
   multResult2_reg_3_inst : GTECH_FD1 port map( D => n11209, CP => clk, Q => 
                           n10952, QN => n_1162);
   multResult3_reg_3_inst : GTECH_FD1 port map( D => n11241, CP => clk, Q => 
                           n11030, QN => n_1163);
   multResult_reg_4_inst : GTECH_FD1 port map( D => n5716, CP => clk, Q => 
                           n10983, QN => n_1164);
   multResult2_reg_4_inst : GTECH_FD1 port map( D => n11210, CP => clk, Q => 
                           n10951, QN => n_1165);
   multResult3_reg_4_inst : GTECH_FD1 port map( D => n11242, CP => clk, Q => 
                           n11028, QN => n_1166);
   multResult_reg_5_inst : GTECH_FD1 port map( D => n5715, CP => clk, Q => 
                           n10982, QN => n_1167);
   multResult2_reg_5_inst : GTECH_FD1 port map( D => n11211, CP => clk, Q => 
                           n10950, QN => n_1168);
   multResult3_reg_5_inst : GTECH_FD1 port map( D => n11243, CP => clk, Q => 
                           n11026, QN => n_1169);
   multResult_reg_6_inst : GTECH_FD1 port map( D => n5714, CP => clk, Q => 
                           n10981, QN => n_1170);
   multResult2_reg_6_inst : GTECH_FD1 port map( D => n11212, CP => clk, Q => 
                           n10949, QN => n_1171);
   multResult3_reg_6_inst : GTECH_FD1 port map( D => n11244, CP => clk, Q => 
                           n11025, QN => n_1172);
   multResult_reg_7_inst : GTECH_FD1 port map( D => n5713, CP => clk, Q => 
                           n10980, QN => n_1173);
   multResult2_reg_7_inst : GTECH_FD1 port map( D => n11213, CP => clk, Q => 
                           n10948, QN => n_1174);
   multResult3_reg_7_inst : GTECH_FD1 port map( D => n11245, CP => clk, Q => 
                           n11022, QN => n_1175);
   multResult_reg_8_inst : GTECH_FD1 port map( D => n5712, CP => clk, Q => 
                           n10979, QN => n_1176);
   multResult2_reg_8_inst : GTECH_FD1 port map( D => n11214, CP => clk, Q => 
                           n10947, QN => n_1177);
   multResult3_reg_8_inst : GTECH_FD1 port map( D => n11246, CP => clk, Q => 
                           n11048, QN => n_1178);
   multResult_reg_9_inst : GTECH_FD1 port map( D => n5711, CP => clk, Q => 
                           n10978, QN => n_1179);
   multResult2_reg_9_inst : GTECH_FD1 port map( D => n11215, CP => clk, Q => 
                           n10946, QN => n_1180);
   multResult3_reg_9_inst : GTECH_FD1 port map( D => n11247, CP => clk, Q => 
                           n11050, QN => n_1181);
   multResult_reg_10_inst : GTECH_FD1 port map( D => n5710, CP => clk, Q => 
                           n10977, QN => n_1182);
   multResult2_reg_10_inst : GTECH_FD1 port map( D => n11216, CP => clk, Q => 
                           n10945, QN => n_1183);
   multResult3_reg_10_inst : GTECH_FD1 port map( D => n11248, CP => clk, Q => 
                           n11052, QN => n_1184);
   multResult_reg_11_inst : GTECH_FD1 port map( D => n5709, CP => clk, Q => 
                           n10976, QN => n_1185);
   multResult2_reg_11_inst : GTECH_FD1 port map( D => n11217, CP => clk, Q => 
                           n10944, QN => n_1186);
   multResult3_reg_11_inst : GTECH_FD1 port map( D => n11249, CP => clk, Q => 
                           n11054, QN => n_1187);
   multResult_reg_12_inst : GTECH_FD1 port map( D => n5708, CP => clk, Q => 
                           n10975, QN => n_1188);
   multResult2_reg_12_inst : GTECH_FD1 port map( D => n11218, CP => clk, Q => 
                           n10943, QN => n_1189);
   multResult3_reg_12_inst : GTECH_FD1 port map( D => n11250, CP => clk, Q => 
                           n11056, QN => n_1190);
   multResult_reg_13_inst : GTECH_FD1 port map( D => n5707, CP => clk, Q => 
                           n10974, QN => n_1191);
   multResult2_reg_13_inst : GTECH_FD1 port map( D => n11219, CP => clk, Q => 
                           n10942, QN => n_1192);
   multResult3_reg_13_inst : GTECH_FD1 port map( D => n11251, CP => clk, Q => 
                           n11058, QN => n_1193);
   multResult_reg_14_inst : GTECH_FD1 port map( D => n5706, CP => clk, Q => 
                           n10973, QN => n_1194);
   multResult2_reg_14_inst : GTECH_FD1 port map( D => n11220, CP => clk, Q => 
                           n10941, QN => n_1195);
   multResult3_reg_14_inst : GTECH_FD1 port map( D => n11252, CP => clk, Q => 
                           n11060, QN => n_1196);
   multResult_reg_15_inst : GTECH_FD1 port map( D => n5705, CP => clk, Q => 
                           n10972, QN => n_1197);
   multResult2_reg_15_inst : GTECH_FD1 port map( D => n11221, CP => clk, Q => 
                           n10940, QN => n_1198);
   multResult3_reg_15_inst : GTECH_FD1 port map( D => n11253, CP => clk, Q => 
                           n11062, QN => n_1199);
   multResult_reg_16_inst : GTECH_FD1 port map( D => n5704, CP => clk, Q => 
                           n10971, QN => n_1200);
   multResult2_reg_16_inst : GTECH_FD1 port map( D => n11222, CP => clk, Q => 
                           n10939, QN => n_1201);
   multResult3_reg_16_inst : GTECH_FD1 port map( D => n11254, CP => clk, Q => 
                           n11020, QN => n_1202);
   multResult_reg_17_inst : GTECH_FD1 port map( D => n5703, CP => clk, Q => 
                           n10970, QN => n_1203);
   multResult2_reg_17_inst : GTECH_FD1 port map( D => n11223, CP => clk, Q => 
                           n10938, QN => n_1204);
   multResult3_reg_17_inst : GTECH_FD1 port map( D => n11255, CP => clk, Q => 
                           n11064, QN => n_1205);
   multResult_reg_18_inst : GTECH_FD1 port map( D => n5702, CP => clk, Q => 
                           n10969, QN => n_1206);
   multResult2_reg_18_inst : GTECH_FD1 port map( D => n11224, CP => clk, Q => 
                           n10937, QN => n_1207);
   multResult3_reg_18_inst : GTECH_FD1 port map( D => n11256, CP => clk, Q => 
                           n11066, QN => n_1208);
   multResult_reg_19_inst : GTECH_FD1 port map( D => n5701, CP => clk, Q => 
                           n10968, QN => n_1209);
   multResult2_reg_19_inst : GTECH_FD1 port map( D => n11225, CP => clk, Q => 
                           n10936, QN => n_1210);
   multResult3_reg_19_inst : GTECH_FD1 port map( D => n11257, CP => clk, Q => 
                           n11068, QN => n_1211);
   multResult_reg_20_inst : GTECH_FD1 port map( D => n5700, CP => clk, Q => 
                           n10967, QN => n_1212);
   multResult2_reg_20_inst : GTECH_FD1 port map( D => n11226, CP => clk, Q => 
                           n10935, QN => n_1213);
   multResult3_reg_20_inst : GTECH_FD1 port map( D => n11258, CP => clk, Q => 
                           n11070, QN => n_1214);
   multResult_reg_21_inst : GTECH_FD1 port map( D => n5699, CP => clk, Q => 
                           n10966, QN => n_1215);
   multResult2_reg_21_inst : GTECH_FD1 port map( D => n11227, CP => clk, Q => 
                           n10934, QN => n_1216);
   multResult3_reg_21_inst : GTECH_FD1 port map( D => n11259, CP => clk, Q => 
                           n11072, QN => n_1217);
   multResult_reg_22_inst : GTECH_FD1 port map( D => n5698, CP => clk, Q => 
                           n10965, QN => n_1218);
   multResult2_reg_22_inst : GTECH_FD1 port map( D => n11228, CP => clk, Q => 
                           n10933, QN => n_1219);
   multResult3_reg_22_inst : GTECH_FD1 port map( D => n11260, CP => clk, Q => 
                           n11074, QN => n_1220);
   multResult_reg_23_inst : GTECH_FD1 port map( D => n5697, CP => clk, Q => 
                           n10964, QN => n_1221);
   multResult2_reg_23_inst : GTECH_FD1 port map( D => n11229, CP => clk, Q => 
                           n10932, QN => n_1222);
   multResult3_reg_23_inst : GTECH_FD1 port map( D => n11261, CP => clk, Q => 
                           n11076, QN => n_1223);
   multResult_reg_24_inst : GTECH_FD1 port map( D => n5696, CP => clk, Q => 
                           n10963, QN => n_1224);
   multResult2_reg_24_inst : GTECH_FD1 port map( D => n11230, CP => clk, Q => 
                           n10931, QN => n_1225);
   multResult3_reg_24_inst : GTECH_FD1 port map( D => n11262, CP => clk, Q => 
                           n11078, QN => n_1226);
   multResult_reg_25_inst : GTECH_FD1 port map( D => n5695, CP => clk, Q => 
                           n10962, QN => n_1227);
   multResult2_reg_25_inst : GTECH_FD1 port map( D => n11231, CP => clk, Q => 
                           n10930, QN => n_1228);
   multResult3_reg_25_inst : GTECH_FD1 port map( D => n11263, CP => clk, Q => 
                           n11080, QN => n_1229);
   multResult_reg_26_inst : GTECH_FD1 port map( D => n5694, CP => clk, Q => 
                           n10961, QN => n_1230);
   multResult2_reg_26_inst : GTECH_FD1 port map( D => n11232, CP => clk, Q => 
                           n10929, QN => n_1231);
   multResult3_reg_26_inst : GTECH_FD1 port map( D => n11264, CP => clk, Q => 
                           n11082, QN => n_1232);
   multResult_reg_27_inst : GTECH_FD1 port map( D => n5693, CP => clk, Q => 
                           n10960, QN => n_1233);
   multResult2_reg_27_inst : GTECH_FD1 port map( D => n11233, CP => clk, Q => 
                           n10928, QN => n_1234);
   multResult3_reg_27_inst : GTECH_FD1 port map( D => n11265, CP => clk, Q => 
                           n11084, QN => n_1235);
   multResult_reg_28_inst : GTECH_FD1 port map( D => n5692, CP => clk, Q => 
                           n10959, QN => n_1236);
   multResult2_reg_28_inst : GTECH_FD1 port map( D => n11234, CP => clk, Q => 
                           n10927, QN => n_1237);
   multResult3_reg_28_inst : GTECH_FD1 port map( D => n11266, CP => clk, Q => 
                           n11086, QN => n_1238);
   multResult_reg_29_inst : GTECH_FD1 port map( D => n5691, CP => clk, Q => 
                           n10958, QN => n_1239);
   multResult2_reg_29_inst : GTECH_FD1 port map( D => n11235, CP => clk, Q => 
                           n10926, QN => n_1240);
   multResult3_reg_29_inst : GTECH_FD1 port map( D => n11267, CP => clk, Q => 
                           n11088, QN => n_1241);
   multResult_reg_30_inst : GTECH_FD1 port map( D => n5690, CP => clk, Q => 
                           n10957, QN => n_1242);
   multResult2_reg_30_inst : GTECH_FD1 port map( D => n11236, CP => clk, Q => 
                           n10925, QN => n_1243);
   multResult3_reg_30_inst : GTECH_FD1 port map( D => n11268, CP => clk, Q => 
                           n11090, QN => n_1244);
   multResult_reg_31_inst : GTECH_FD1 port map( D => n5689, CP => clk, Q => 
                           n10956, QN => n_1245);
   multResult2_reg_31_inst : GTECH_FD1 port map( D => n11237, CP => clk, Q => 
                           n10924, QN => n_1246);
   multResult3_reg_31_inst : GTECH_FD1 port map( D => n11269, CP => clk, Q => 
                           n11092, QN => n_1247);
   stackA_reg_31_inst : GTECH_FD1 port map( D => n5490, CP => clk, Q => 
                           stackA_31_port, QN => n_1248);
   sp_reg_31_inst : GTECH_FD1 port map( D => n5595, CP => clk, Q => sp_31_port,
                           QN => n_1249);
   stackA_reg_30_inst : GTECH_FD1 port map( D => n5489, CP => clk, Q => 
                           stackA_30_port, QN => n_1250);
   sp_reg_30_inst : GTECH_FD1 port map( D => n5596, CP => clk, Q => sp_30_port,
                           QN => n_1251);
   sp_reg_29_inst : GTECH_FD1 port map( D => n5597, CP => clk, Q => sp_29_port,
                           QN => n_1252);
   stackA_reg_29_inst : GTECH_FD1 port map( D => n5488, CP => clk, Q => 
                           stackA_29_port, QN => n_1253);
   stackB_reg_29_inst : GTECH_FD1 port map( D => n5819, CP => clk, Q => 
                           stackB_29_port, QN => n_1254);
   pc_reg_31_inst : GTECH_FD1 port map( D => n5890, CP => clk, Q => pc_31_port,
                           QN => n_1255);
   pc_reg_30_inst : GTECH_FD1 port map( D => n5891, CP => clk, Q => pc_30_port,
                           QN => n_1256);
   pc_reg_29_inst : GTECH_FD1 port map( D => n5892, CP => clk, Q => pc_29_port,
                           QN => n_1257);
   pc_reg_28_inst : GTECH_FD1 port map( D => n5893, CP => clk, Q => pc_28_port,
                           QN => n_1258);
   stackA_reg_28_inst : GTECH_FD1 port map( D => n5487, CP => clk, Q => 
                           stackA_28_port, QN => n_1259);
   sp_reg_28_inst : GTECH_FD1 port map( D => n5598, CP => clk, Q => sp_28_port,
                           QN => n_1260);
   sp_reg_27_inst : GTECH_FD1 port map( D => n5599, CP => clk, Q => sp_27_port,
                           QN => n_1261);
   stackA_reg_27_inst : GTECH_FD1 port map( D => n5486, CP => clk, Q => 
                           stackA_27_port, QN => n_1262);
   stackB_reg_27_inst : GTECH_FD1 port map( D => n5821, CP => clk, Q => 
                           stackB_27_port, QN => n_1263);
   binaryOpResult_reg_26_inst : GTECH_FD1 port map( D => n5790, CP => clk, Q =>
                           n10993, QN => n_1264);
   binaryOpResult2_reg_26_inst : GTECH_FD1 port map( D => n11200, CP => clk, Q 
                           => n11083, QN => n_1265);
   stackA_reg_26_inst : GTECH_FD1 port map( D => n5485, CP => clk, Q => 
                           stackA_26_port, QN => n_1266);
   sp_reg_26_inst : GTECH_FD1 port map( D => n5600, CP => clk, Q => sp_26_port,
                           QN => n_1267);
   sp_reg_25_inst : GTECH_FD1 port map( D => n5601, CP => clk, Q => sp_25_port,
                           QN => n_1268);
   stackA_reg_25_inst : GTECH_FD1 port map( D => n5484, CP => clk, Q => 
                           stackA_25_port, QN => n_1269);
   stackB_reg_25_inst : GTECH_FD1 port map( D => n5823, CP => clk, Q => 
                           stackB_25_port, QN => n_1270);
   stackA_reg_24_inst : GTECH_FD1 port map( D => n5483, CP => clk, Q => 
                           stackA_24_port, QN => n_1271);
   stackB_reg_24_inst : GTECH_FD1 port map( D => n5824, CP => clk, Q => 
                           stackB_24_port, QN => n_1272);
   stackA_reg_23_inst : GTECH_FD1 port map( D => n5482, CP => clk, Q => 
                           stackA_23_port, QN => n_1273);
   stackB_reg_23_inst : GTECH_FD1 port map( D => n5825, CP => clk, Q => 
                           stackB_23_port, QN => n_1274);
   binaryOpResult_reg_0_inst : GTECH_FD1 port map( D => n11150, CP => clk, Q =>
                           n11019, QN => n_1275);
   binaryOpResult2_reg_0_inst : GTECH_FD1 port map( D => n11174, CP => clk, Q 
                           => n11036, QN => n_1276);
   stackA_reg_0_inst : GTECH_FD1 port map( D => n5889, CP => clk, Q => 
                           stackA_0_port, QN => n_1277);
   stackA_reg_7_inst : GTECH_FD1 port map( D => n5882, CP => clk, Q => 
                           stackA_7_port, QN => n_1278);
   stackA_reg_14_inst : GTECH_FD1 port map( D => n5474, CP => clk, Q => 
                           stackA_14_port, QN => n_1279);
   stackA_reg_21_inst : GTECH_FD1 port map( D => n5480, CP => clk, Q => 
                           stackA_21_port, QN => n_1280);
   stackA_reg_22_inst : GTECH_FD1 port map( D => n5481, CP => clk, Q => 
                           stackA_22_port, QN => n_1281);
   stackA_reg_9_inst : GTECH_FD1 port map( D => n5469, CP => clk, Q => 
                           stackA_9_port, QN => n_1282);
   stackA_reg_16_inst : GTECH_FD1 port map( D => n11173, CP => clk, Q => 
                           stackA_16_port, QN => n_1283);
   stackA_reg_17_inst : GTECH_FD1 port map( D => n5476, CP => clk, Q => 
                           stackA_17_port, QN => n_1284);
   stackA_reg_18_inst : GTECH_FD1 port map( D => n5477, CP => clk, Q => 
                           stackA_18_port, QN => n_1285);
   stackA_reg_19_inst : GTECH_FD1 port map( D => n5478, CP => clk, Q => 
                           stackA_19_port, QN => n_1286);
   stackA_reg_20_inst : GTECH_FD1 port map( D => n5479, CP => clk, Q => 
                           stackA_20_port, QN => n_1287);
   stackA_reg_11_inst : GTECH_FD1 port map( D => n5471, CP => clk, Q => 
                           stackA_11_port, QN => n_1288);
   stackA_reg_12_inst : GTECH_FD1 port map( D => n5472, CP => clk, Q => 
                           stackA_12_port, QN => n_1289);
   stackA_reg_13_inst : GTECH_FD1 port map( D => n5473, CP => clk, Q => 
                           stackA_13_port, QN => n_1290);
   stackA_reg_1_inst : GTECH_FD1 port map( D => n5888, CP => clk, Q => 
                           stackA_1_port, QN => n_1291);
   pc_reg_1_inst : GTECH_FD1 port map( D => n6012, CP => clk, Q => pc_1_port, 
                           QN => n_1292);
   insn_reg_4_inst : GTECH_FD1 port map( D => n5525, CP => clk, Q => n11144, QN
                           => n_1293);
   pc_reg_0_inst : GTECH_FD1 port map( D => n5922, CP => clk, Q => pc_0_port, 
                           QN => n_1294);
   insn_reg_5_inst : GTECH_FD1 port map( D => n11147, CP => clk, Q => n11143, 
                           QN => n_1295);
   state_reg_2_inst : GTECH_FD1 port map( D => n6008, CP => clk, Q => 
                           state_2_port, QN => n_1296);
   state_reg_4_inst : GTECH_FD1 port map( D => n6007, CP => clk, Q => 
                           state_4_port, QN => n_1297);
   state_reg_0_inst : GTECH_FD1 port map( D => n6009, CP => clk, Q => 
                           state_0_port, QN => n_1298);
   state_reg_1_inst : GTECH_FD1 port map( D => n5466, CP => clk, Q => 
                           state_1_port, QN => n_1299);
   decodeWord_reg_31_inst : GTECH_FD1 port map( D => n5925, CP => clk, Q => 
                           n11142, QN => n_1300);
   decodeWord_reg_30_inst : GTECH_FD1 port map( D => n5927, CP => clk, Q => 
                           n11141, QN => n_1301);
   decodeWord_reg_29_inst : GTECH_FD1 port map( D => n5929, CP => clk, Q => 
                           n11140, QN => n_1302);
   decodeWord_reg_28_inst : GTECH_FD1 port map( D => n5931, CP => clk, Q => 
                           n11139, QN => n_1303);
   decodeWord_reg_27_inst : GTECH_FD1 port map( D => n5933, CP => clk, Q => 
                           n11138, QN => n_1304);
   decodeWord_reg_26_inst : GTECH_FD1 port map( D => n5935, CP => clk, Q => 
                           n11137, QN => n_1305);
   decodeWord_reg_25_inst : GTECH_FD1 port map( D => n5937, CP => clk, Q => 
                           n11136, QN => n_1306);
   decodeWord_reg_24_inst : GTECH_FD1 port map( D => n5939, CP => clk, Q => 
                           n11135, QN => n_1307);
   decodeWord_reg_23_inst : GTECH_FD1 port map( D => n5958, CP => clk, Q => 
                           n11134, QN => n_1308);
   decodeWord_reg_22_inst : GTECH_FD1 port map( D => n5960, CP => clk, Q => 
                           n11133, QN => n_1309);
   decodeWord_reg_21_inst : GTECH_FD1 port map( D => n5962, CP => clk, Q => 
                           n11132, QN => n_1310);
   decodeWord_reg_20_inst : GTECH_FD1 port map( D => n5964, CP => clk, Q => 
                           n11131, QN => n_1311);
   decodeWord_reg_19_inst : GTECH_FD1 port map( D => n5966, CP => clk, Q => 
                           n11130, QN => n_1312);
   decodeWord_reg_18_inst : GTECH_FD1 port map( D => n5968, CP => clk, Q => 
                           n11129, QN => n_1313);
   decodeWord_reg_17_inst : GTECH_FD1 port map( D => n5970, CP => clk, Q => 
                           n11128, QN => n_1314);
   decodeWord_reg_16_inst : GTECH_FD1 port map( D => n5972, CP => clk, Q => 
                           n11127, QN => n_1315);
   decodeWord_reg_15_inst : GTECH_FD1 port map( D => n5973, CP => clk, Q => 
                           n11126, QN => n_1316);
   decodeWord_reg_14_inst : GTECH_FD1 port map( D => n5975, CP => clk, Q => 
                           n11125, QN => n_1317);
   decodeWord_reg_13_inst : GTECH_FD1 port map( D => n5977, CP => clk, Q => 
                           n11124, QN => n_1318);
   decodeWord_reg_12_inst : GTECH_FD1 port map( D => n5979, CP => clk, Q => 
                           n11123, QN => n_1319);
   decodeWord_reg_11_inst : GTECH_FD1 port map( D => n5981, CP => clk, Q => 
                           n11122, QN => n_1320);
   decodeWord_reg_10_inst : GTECH_FD1 port map( D => n5983, CP => clk, Q => 
                           n11121, QN => n_1321);
   decodeWord_reg_9_inst : GTECH_FD1 port map( D => n5985, CP => clk, Q => 
                           n11120, QN => n_1322);
   decodeWord_reg_8_inst : GTECH_FD1 port map( D => n5987, CP => clk, Q => 
                           n11119, QN => n_1323);
   decodeWord_reg_7_inst : GTECH_FD1 port map( D => n5988, CP => clk, Q => 
                           n11118, QN => n_1324);
   decodeWord_reg_6_inst : GTECH_FD1 port map( D => n5990, CP => clk, Q => 
                           n11117, QN => n_1325);
   decodeWord_reg_5_inst : GTECH_FD1 port map( D => n5992, CP => clk, Q => 
                           n11116, QN => n_1326);
   decodeWord_reg_4_inst : GTECH_FD1 port map( D => n5994, CP => clk, Q => 
                           n11115, QN => n_1327);
   decodeWord_reg_3_inst : GTECH_FD1 port map( D => n5996, CP => clk, Q => 
                           n11114, QN => n_1328);
   decodeWord_reg_2_inst : GTECH_FD1 port map( D => n5998, CP => clk, Q => 
                           n11113, QN => n_1329);
   decodeWord_reg_1_inst : GTECH_FD1 port map( D => n6000, CP => clk, Q => 
                           n11112, QN => n_1330);
   decodeWord_reg_0_inst : GTECH_FD1 port map( D => n6001, CP => clk, Q => 
                           n11111, QN => n_1331);
   insn_reg_1_inst : GTECH_FD1 port map( D => n11145, CP => clk, Q => n11110, 
                           QN => n_1332);
   idim_flag_reg : GTECH_FD1 port map( D => n11149, CP => clk, Q => n11094, QN 
                           => n_1333);
   inInterrupt_reg : GTECH_FD1 port map( D => n5924, CP => clk, Q => n11109, QN
                           => n_1334);
   state_reg_3_inst : GTECH_FD1 port map( D => n5467, CP => clk, Q => 
                           state_3_port, QN => n_1335);
   decodedOpcode_reg_0_0_inst : GTECH_FD1 port map( D => n6006, CP => clk, Q =>
                           n11098, QN => n_1336);
   decodedOpcode_reg_0_2_inst : GTECH_FD1 port map( D => n6005, CP => clk, Q =>
                           n11108, QN => n_1337);
   decodedOpcode_reg_0_5_inst : GTECH_FD1 port map( D => n6004, CP => clk, Q =>
                           n11047, QN => n_1338);
   decodedOpcode_reg_3_0_inst : GTECH_FD1 port map( D => n11151, CP => clk, Q 
                           => n11097, QN => n_1339);
   decodedOpcode_reg_3_1_inst : GTECH_FD1 port map( D => n11152, CP => clk, Q 
                           => n11099, QN => n_1340);
   decodedOpcode_reg_3_2_inst : GTECH_FD1 port map( D => n11153, CP => clk, Q 
                           => n11043, QN => n_1341);
   decodedOpcode_reg_3_3_inst : GTECH_FD1 port map( D => n11154, CP => clk, Q 
                           => n11038, QN => n_1342);
   decodedOpcode_reg_3_4_inst : GTECH_FD1 port map( D => n11155, CP => clk, Q 
                           => n11102, QN => n_1343);
   decodedOpcode_reg_3_5_inst : GTECH_FD1 port map( D => n11156, CP => clk, Q 
                           => n11046, QN => n_1344);
   decodedOpcode_reg_2_0_inst : GTECH_FD1 port map( D => n11157, CP => clk, Q 
                           => n11096, QN => n_1345);
   decodedOpcode_reg_2_1_inst : GTECH_FD1 port map( D => n11158, CP => clk, Q 
                           => n11101, QN => n_1346);
   decodedOpcode_reg_2_2_inst : GTECH_FD1 port map( D => n11159, CP => clk, Q 
                           => n11042, QN => n_1347);
   decodedOpcode_reg_2_3_inst : GTECH_FD1 port map( D => n11160, CP => clk, Q 
                           => n11040, QN => n_1348);
   decodedOpcode_reg_2_4_inst : GTECH_FD1 port map( D => n11161, CP => clk, Q 
                           => n11104, QN => n_1349);
   decodedOpcode_reg_2_5_inst : GTECH_FD1 port map( D => n11162, CP => clk, Q 
                           => n11045, QN => n_1350);
   decodedOpcode_reg_1_0_inst : GTECH_FD1 port map( D => n11163, CP => clk, Q 
                           => n11095, QN => n_1351);
   decodedOpcode_reg_1_1_inst : GTECH_FD1 port map( D => n11164, CP => clk, Q 
                           => n11100, QN => n_1352);
   decodedOpcode_reg_1_2_inst : GTECH_FD1 port map( D => n11165, CP => clk, Q 
                           => n11041, QN => n_1353);
   decodedOpcode_reg_1_3_inst : GTECH_FD1 port map( D => n11166, CP => clk, Q 
                           => n11039, QN => n_1354);
   decodedOpcode_reg_1_4_inst : GTECH_FD1 port map( D => n11167, CP => clk, Q 
                           => n11103, QN => n_1355);
   decodedOpcode_reg_1_5_inst : GTECH_FD1 port map( D => n11168, CP => clk, Q 
                           => n11044, QN => n_1356);
   insn_reg_0_inst : GTECH_FD1 port map( D => n11146, CP => clk, Q => n11107, 
                           QN => n_1357);
   insn_reg_3_inst : GTECH_FD1 port map( D => n6002, CP => clk, Q => n11106, QN
                           => n_1358);
   opcode_reg_3_1_inst : GTECH_FD1 port map( D => n5999, CP => clk, Q => 
                           opcode_3_1_port, QN => n_1359);
   opcode_reg_3_2_inst : GTECH_FD1 port map( D => n5997, CP => clk, Q => 
                           opcode_3_2_port, QN => n_1360);
   opcode_reg_3_3_inst : GTECH_FD1 port map( D => n5995, CP => clk, Q => 
                           opcode_3_3_port, QN => n_1361);
   opcode_reg_3_4_inst : GTECH_FD1 port map( D => n5993, CP => clk, Q => 
                           opcode_3_4_port, QN => n_1362);
   opcode_reg_3_5_inst : GTECH_FD1 port map( D => n5991, CP => clk, Q => 
                           opcode_3_5_port, QN => n_1363);
   opcode_reg_3_6_inst : GTECH_FD1 port map( D => n5989, CP => clk, Q => 
                           opcode_3_6_port, QN => n_1364);
   opcode_reg_2_0_inst : GTECH_FD1 port map( D => n5986, CP => clk, Q => 
                           opcode_2_0_port, QN => n_1365);
   opcode_reg_2_1_inst : GTECH_FD1 port map( D => n5984, CP => clk, Q => 
                           opcode_2_1_port, QN => n_1366);
   opcode_reg_2_2_inst : GTECH_FD1 port map( D => n5982, CP => clk, Q => 
                           opcode_2_2_port, QN => n_1367);
   opcode_reg_2_3_inst : GTECH_FD1 port map( D => n5980, CP => clk, Q => 
                           opcode_2_3_port, QN => n_1368);
   opcode_reg_2_4_inst : GTECH_FD1 port map( D => n5978, CP => clk, Q => 
                           opcode_2_4_port, QN => n_1369);
   opcode_reg_2_5_inst : GTECH_FD1 port map( D => n5976, CP => clk, Q => 
                           opcode_2_5_port, QN => n_1370);
   opcode_reg_2_6_inst : GTECH_FD1 port map( D => n5974, CP => clk, Q => 
                           opcode_2_6_port, QN => n_1371);
   opcode_reg_1_0_inst : GTECH_FD1 port map( D => n5971, CP => clk, Q => 
                           opcode_1_0_port, QN => n_1372);
   opcode_reg_1_1_inst : GTECH_FD1 port map( D => n5969, CP => clk, Q => 
                           opcode_1_1_port, QN => n_1373);
   opcode_reg_1_2_inst : GTECH_FD1 port map( D => n5967, CP => clk, Q => 
                           opcode_1_2_port, QN => n_1374);
   opcode_reg_1_3_inst : GTECH_FD1 port map( D => n5965, CP => clk, Q => 
                           opcode_1_3_port, QN => n_1375);
   opcode_reg_1_4_inst : GTECH_FD1 port map( D => n5963, CP => clk, Q => 
                           opcode_1_4_port, QN => n_1376);
   opcode_reg_1_5_inst : GTECH_FD1 port map( D => n5961, CP => clk, Q => 
                           opcode_1_5_port, QN => n_1377);
   opcode_reg_1_6_inst : GTECH_FD1 port map( D => n5959, CP => clk, Q => 
                           opcode_1_6_port, QN => n_1378);
   opcode_reg_0_0_inst : GTECH_FD1 port map( D => n5938, CP => clk, Q => 
                           opcode_0_0_port, QN => n_1379);
   opcode_reg_0_1_inst : GTECH_FD1 port map( D => n5936, CP => clk, Q => 
                           opcode_0_1_port, QN => n_1380);
   opcode_reg_0_2_inst : GTECH_FD1 port map( D => n5934, CP => clk, Q => 
                           opcode_0_2_port, QN => n_1381);
   opcode_reg_0_3_inst : GTECH_FD1 port map( D => n5932, CP => clk, Q => 
                           opcode_0_3_port, QN => n_1382);
   opcode_reg_0_4_inst : GTECH_FD1 port map( D => n5930, CP => clk, Q => 
                           opcode_0_4_port, QN => n_1383);
   opcode_reg_0_5_inst : GTECH_FD1 port map( D => n5928, CP => clk, Q => 
                           opcode_0_5_port, QN => n_1384);
   opcode_reg_0_6_inst : GTECH_FD1 port map( D => n5926, CP => clk, Q => 
                           opcode_0_6_port, QN => n_1385);
   insn_reg_2_inst : GTECH_FD1 port map( D => n11148, CP => clk, Q => n11105, 
                           QN => n_1386);
   multB_reg_29_inst : GTECH_FD1 port map( D => n5723, CP => clk, Q => 
                           multB_29_port, QN => n_1387);
   multA_reg_31_inst : GTECH_FD1 port map( D => n5849, CP => clk, Q => 
                           multA_31_port, QN => n_1388);
   multA_reg_30_inst : GTECH_FD1 port map( D => n5850, CP => clk, Q => 
                           multA_30_port, QN => n_1389);
   multA_reg_29_inst : GTECH_FD1 port map( D => n5851, CP => clk, Q => 
                           multA_29_port, QN => n_1390);
   multA_reg_28_inst : GTECH_FD1 port map( D => n5852, CP => clk, Q => 
                           multA_28_port, QN => n_1391);
   multA_reg_27_inst : GTECH_FD1 port map( D => n5853, CP => clk, Q => 
                           multA_27_port, QN => n_1392);
   multA_reg_26_inst : GTECH_FD1 port map( D => n5854, CP => clk, Q => 
                           multA_26_port, QN => n_1393);
   multA_reg_25_inst : GTECH_FD1 port map( D => n5855, CP => clk, Q => 
                           multA_25_port, QN => n_1394);
   multA_reg_24_inst : GTECH_FD1 port map( D => n5856, CP => clk, Q => 
                           multA_24_port, QN => n_1395);
   multA_reg_23_inst : GTECH_FD1 port map( D => n5857, CP => clk, Q => 
                           multA_23_port, QN => n_1396);
   multA_reg_22_inst : GTECH_FD1 port map( D => n5858, CP => clk, Q => 
                           multA_22_port, QN => n_1397);
   multA_reg_21_inst : GTECH_FD1 port map( D => n5859, CP => clk, Q => 
                           multA_21_port, QN => n_1398);
   multA_reg_20_inst : GTECH_FD1 port map( D => n5860, CP => clk, Q => 
                           multA_20_port, QN => n_1399);
   multA_reg_19_inst : GTECH_FD1 port map( D => n5861, CP => clk, Q => 
                           multA_19_port, QN => n_1400);
   multA_reg_18_inst : GTECH_FD1 port map( D => n5862, CP => clk, Q => 
                           multA_18_port, QN => n_1401);
   multA_reg_17_inst : GTECH_FD1 port map( D => n5863, CP => clk, Q => 
                           multA_17_port, QN => n_1402);
   multA_reg_16_inst : GTECH_FD1 port map( D => n5864, CP => clk, Q => 
                           multA_16_port, QN => n_1403);
   multA_reg_14_inst : GTECH_FD1 port map( D => n5866, CP => clk, Q => 
                           multA_14_port, QN => n_1404);
   multA_reg_12_inst : GTECH_FD1 port map( D => n5868, CP => clk, Q => 
                           multA_12_port, QN => n_1405);
   multA_reg_11_inst : GTECH_FD1 port map( D => n5869, CP => clk, Q => 
                           multA_11_port, QN => n_1406);
   multA_reg_9_inst : GTECH_FD1 port map( D => n5871, CP => clk, Q => 
                           multA_9_port, QN => n_1407);
   multA_reg_7_inst : GTECH_FD1 port map( D => n5873, CP => clk, Q => 
                           multA_7_port, QN => n_1408);
   multA_reg_5_inst : GTECH_FD1 port map( D => n5875, CP => clk, Q => 
                           multA_5_port, QN => n_1409);
   multA_reg_0_inst : GTECH_FD1 port map( D => n5880, CP => clk, Q => 
                           multA_0_port, QN => n_1410);
   mem_writeEnable_reg : GTECH_FD1 port map( D => n5921, CP => clk, Q => 
                           out_mem_writeEnable, QN => n5273);
   stackB_reg_31_inst : GTECH_FD1 port map( D => n5817, CP => clk, Q => 
                           stackB_31_port, QN => n_1411);
   multB_reg_31_inst : GTECH_FD1 port map( D => n5721, CP => clk, Q => 
                           multB_31_port, QN => n_1412);
   stackB_reg_30_inst : GTECH_FD1 port map( D => n5818, CP => clk, Q => 
                           stackB_30_port, QN => n_1413);
   multB_reg_30_inst : GTECH_FD1 port map( D => n5722, CP => clk, Q => 
                           multB_30_port, QN => n_1414);
   stackB_reg_28_inst : GTECH_FD1 port map( D => n5820, CP => clk, Q => 
                           stackB_28_port, QN => n_1415);
   multB_reg_28_inst : GTECH_FD1 port map( D => n5724, CP => clk, Q => 
                           multB_28_port, QN => n_1416);
   stackB_reg_26_inst : GTECH_FD1 port map( D => n5822, CP => clk, Q => 
                           stackB_26_port, QN => n_1417);
   multB_reg_26_inst : GTECH_FD1 port map( D => n5726, CP => clk, Q => 
                           multB_26_port, QN => n_1418);
   pc_reg_27_inst : GTECH_FD1 port map( D => n5894, CP => clk, Q => pc_27_port,
                           QN => n_1419);
   pc_reg_26_inst : GTECH_FD1 port map( D => n5895, CP => clk, Q => pc_26_port,
                           QN => n_1420);
   pc_reg_25_inst : GTECH_FD1 port map( D => n5896, CP => clk, Q => pc_25_port,
                           QN => n_1421);
   pc_reg_24_inst : GTECH_FD1 port map( D => n5897, CP => clk, Q => pc_24_port,
                           QN => n_1422);
   pc_reg_23_inst : GTECH_FD1 port map( D => n5898, CP => clk, Q => pc_23_port,
                           QN => n_1423);
   pc_reg_22_inst : GTECH_FD1 port map( D => n5899, CP => clk, Q => pc_22_port,
                           QN => n_1424);
   pc_reg_21_inst : GTECH_FD1 port map( D => n5900, CP => clk, Q => pc_21_port,
                           QN => n_1425);
   pc_reg_20_inst : GTECH_FD1 port map( D => n5901, CP => clk, Q => pc_20_port,
                           QN => n_1426);
   pc_reg_19_inst : GTECH_FD1 port map( D => n5902, CP => clk, Q => pc_19_port,
                           QN => n_1427);
   pc_reg_18_inst : GTECH_FD1 port map( D => n5903, CP => clk, Q => pc_18_port,
                           QN => n_1428);
   pc_reg_17_inst : GTECH_FD1 port map( D => n5904, CP => clk, Q => pc_17_port,
                           QN => n_1429);
   pc_reg_16_inst : GTECH_FD1 port map( D => n5905, CP => clk, Q => pc_16_port,
                           QN => n_1430);
   pc_reg_14_inst : GTECH_FD1 port map( D => n5907, CP => clk, Q => pc_14_port,
                           QN => n_1431);
   pc_reg_12_inst : GTECH_FD1 port map( D => n5909, CP => clk, Q => pc_12_port,
                           QN => n_1432);
   pc_reg_11_inst : GTECH_FD1 port map( D => n5910, CP => clk, Q => pc_11_port,
                           QN => n_1433);
   pc_reg_7_inst : GTECH_FD1 port map( D => n5914, CP => clk, Q => pc_7_port, 
                           QN => n_1434);
   mem_readEnable_reg : GTECH_FD1 port map( D => n5920, CP => clk, Q => 
                           out_mem_readEnable_port, QN => n_1435);
   binaryOpResult_reg_1_inst : GTECH_FD1 port map( D => n5815, CP => clk, Q => 
                           n11018, QN => n_1436);
   binaryOpResult2_reg_1_inst : GTECH_FD1 port map( D => n11175, CP => clk, Q 
                           => n11034, QN => n_1437);
   binaryOpResult_reg_2_inst : GTECH_FD1 port map( D => n5814, CP => clk, Q => 
                           n11017, QN => n_1438);
   binaryOpResult2_reg_2_inst : GTECH_FD1 port map( D => n11176, CP => clk, Q 
                           => n11033, QN => n_1439);
   binaryOpResult_reg_3_inst : GTECH_FD1 port map( D => n5813, CP => clk, Q => 
                           n11016, QN => n_1440);
   binaryOpResult2_reg_3_inst : GTECH_FD1 port map( D => n11177, CP => clk, Q 
                           => n11031, QN => n_1441);
   binaryOpResult_reg_4_inst : GTECH_FD1 port map( D => n5812, CP => clk, Q => 
                           n11015, QN => n_1442);
   binaryOpResult2_reg_4_inst : GTECH_FD1 port map( D => n11178, CP => clk, Q 
                           => n11029, QN => n_1443);
   binaryOpResult_reg_5_inst : GTECH_FD1 port map( D => n5811, CP => clk, Q => 
                           n11014, QN => n_1444);
   binaryOpResult2_reg_5_inst : GTECH_FD1 port map( D => n11179, CP => clk, Q 
                           => n11027, QN => n_1445);
   binaryOpResult_reg_6_inst : GTECH_FD1 port map( D => n5810, CP => clk, Q => 
                           n11013, QN => n_1446);
   binaryOpResult2_reg_6_inst : GTECH_FD1 port map( D => n11180, CP => clk, Q 
                           => n11024, QN => n_1447);
   binaryOpResult_reg_7_inst : GTECH_FD1 port map( D => n5809, CP => clk, Q => 
                           n11012, QN => n_1448);
   binaryOpResult2_reg_7_inst : GTECH_FD1 port map( D => n11181, CP => clk, Q 
                           => n11023, QN => n_1449);
   binaryOpResult_reg_8_inst : GTECH_FD1 port map( D => n5808, CP => clk, Q => 
                           n11011, QN => n_1450);
   binaryOpResult2_reg_8_inst : GTECH_FD1 port map( D => n11182, CP => clk, Q 
                           => n11049, QN => n_1451);
   binaryOpResult_reg_9_inst : GTECH_FD1 port map( D => n5807, CP => clk, Q => 
                           n11010, QN => n_1452);
   binaryOpResult2_reg_9_inst : GTECH_FD1 port map( D => n11183, CP => clk, Q 
                           => n11051, QN => n_1453);
   binaryOpResult_reg_10_inst : GTECH_FD1 port map( D => n5806, CP => clk, Q =>
                           n11009, QN => n_1454);
   binaryOpResult2_reg_10_inst : GTECH_FD1 port map( D => n11184, CP => clk, Q 
                           => n11053, QN => n_1455);
   binaryOpResult_reg_11_inst : GTECH_FD1 port map( D => n5805, CP => clk, Q =>
                           n11008, QN => n_1456);
   binaryOpResult2_reg_11_inst : GTECH_FD1 port map( D => n11185, CP => clk, Q 
                           => n11055, QN => n_1457);
   binaryOpResult_reg_12_inst : GTECH_FD1 port map( D => n5804, CP => clk, Q =>
                           n11007, QN => n_1458);
   binaryOpResult2_reg_12_inst : GTECH_FD1 port map( D => n11186, CP => clk, Q 
                           => n11057, QN => n_1459);
   binaryOpResult_reg_13_inst : GTECH_FD1 port map( D => n5803, CP => clk, Q =>
                           n11006, QN => n_1460);
   binaryOpResult2_reg_13_inst : GTECH_FD1 port map( D => n11187, CP => clk, Q 
                           => n11059, QN => n_1461);
   binaryOpResult_reg_14_inst : GTECH_FD1 port map( D => n5802, CP => clk, Q =>
                           n11005, QN => n_1462);
   binaryOpResult2_reg_14_inst : GTECH_FD1 port map( D => n11188, CP => clk, Q 
                           => n11061, QN => n_1463);
   binaryOpResult_reg_15_inst : GTECH_FD1 port map( D => n5801, CP => clk, Q =>
                           n11004, QN => n_1464);
   binaryOpResult2_reg_15_inst : GTECH_FD1 port map( D => n11189, CP => clk, Q 
                           => n11063, QN => n_1465);
   binaryOpResult_reg_16_inst : GTECH_FD1 port map( D => n5800, CP => clk, Q =>
                           n11003, QN => n_1466);
   binaryOpResult2_reg_16_inst : GTECH_FD1 port map( D => n11190, CP => clk, Q 
                           => n11021, QN => n_1467);
   binaryOpResult_reg_17_inst : GTECH_FD1 port map( D => n5799, CP => clk, Q =>
                           n11002, QN => n_1468);
   binaryOpResult2_reg_17_inst : GTECH_FD1 port map( D => n11191, CP => clk, Q 
                           => n11065, QN => n_1469);
   binaryOpResult_reg_18_inst : GTECH_FD1 port map( D => n5798, CP => clk, Q =>
                           n11001, QN => n_1470);
   binaryOpResult2_reg_18_inst : GTECH_FD1 port map( D => n11192, CP => clk, Q 
                           => n11067, QN => n_1471);
   binaryOpResult_reg_19_inst : GTECH_FD1 port map( D => n5797, CP => clk, Q =>
                           n11000, QN => n_1472);
   binaryOpResult2_reg_19_inst : GTECH_FD1 port map( D => n11193, CP => clk, Q 
                           => n11069, QN => n_1473);
   binaryOpResult_reg_20_inst : GTECH_FD1 port map( D => n5796, CP => clk, Q =>
                           n10999, QN => n_1474);
   binaryOpResult2_reg_20_inst : GTECH_FD1 port map( D => n11194, CP => clk, Q 
                           => n11071, QN => n_1475);
   binaryOpResult_reg_21_inst : GTECH_FD1 port map( D => n5795, CP => clk, Q =>
                           n10998, QN => n_1476);
   binaryOpResult2_reg_21_inst : GTECH_FD1 port map( D => n11195, CP => clk, Q 
                           => n11073, QN => n_1477);
   binaryOpResult_reg_22_inst : GTECH_FD1 port map( D => n5794, CP => clk, Q =>
                           n10997, QN => n_1478);
   binaryOpResult2_reg_22_inst : GTECH_FD1 port map( D => n11196, CP => clk, Q 
                           => n11075, QN => n_1479);
   binaryOpResult_reg_23_inst : GTECH_FD1 port map( D => n5793, CP => clk, Q =>
                           n10996, QN => n_1480);
   binaryOpResult2_reg_23_inst : GTECH_FD1 port map( D => n11197, CP => clk, Q 
                           => n11077, QN => n_1481);
   binaryOpResult_reg_24_inst : GTECH_FD1 port map( D => n5792, CP => clk, Q =>
                           n10995, QN => n_1482);
   binaryOpResult2_reg_24_inst : GTECH_FD1 port map( D => n11198, CP => clk, Q 
                           => n11079, QN => n_1483);
   binaryOpResult_reg_25_inst : GTECH_FD1 port map( D => n5791, CP => clk, Q =>
                           n10994, QN => n_1484);
   binaryOpResult2_reg_25_inst : GTECH_FD1 port map( D => n11199, CP => clk, Q 
                           => n11081, QN => n_1485);
   break_reg : GTECH_FD1 port map( D => n5923, CP => clk, Q => break_port, QN 
                           => n_1486);
   sp_reg_5_inst : GTECH_FD1 port map( D => n5621, CP => clk, Q => sp_5_port, 
                           QN => n_1487);
   sp_reg_7_inst : GTECH_FD1 port map( D => n5619, CP => clk, Q => sp_7_port, 
                           QN => n_1488);
   sp_reg_9_inst : GTECH_FD1 port map( D => n5617, CP => clk, Q => sp_9_port, 
                           QN => n_1489);
   sp_reg_11_inst : GTECH_FD1 port map( D => n5615, CP => clk, Q => sp_11_port,
                           QN => n_1490);
   sp_reg_12_inst : GTECH_FD1 port map( D => n5614, CP => clk, Q => sp_12_port,
                           QN => n_1491);
   sp_reg_14_inst : GTECH_FD1 port map( D => n5612, CP => clk, Q => sp_14_port,
                           QN => n_1492);
   pc_reg_9_inst : GTECH_FD1 port map( D => n5912, CP => clk, Q => pc_9_port, 
                           QN => n_1493);
   multA_reg_1_inst : GTECH_FD1 port map( D => n5879, CP => clk, Q => 
                           multA_1_port, QN => n_1494);
   stackB_reg_1_inst : GTECH_FD1 port map( D => n5847, CP => clk, Q => 
                           stackB_1_port, QN => n_1495);
   multB_reg_1_inst : GTECH_FD1 port map( D => n5751, CP => clk, Q => 
                           multB_1_port, QN => n_1496);
   mem_write_reg_1_inst : GTECH_FD1 port map( D => n5516, CP => clk, Q => 
                           mem_write(1), QN => n5435);
   stackA_reg_2_inst : GTECH_FD1 port map( D => n11169, CP => clk, Q => 
                           stackA_2_port, QN => n_1497);
   pc_reg_2_inst : GTECH_FD1 port map( D => n5919, CP => clk, Q => pc_2_port, 
                           QN => n_1498);
   multA_reg_2_inst : GTECH_FD1 port map( D => n5878, CP => clk, Q => 
                           multA_2_port, QN => n_1499);
   stackB_reg_2_inst : GTECH_FD1 port map( D => n5846, CP => clk, Q => 
                           stackB_2_port, QN => n_1500);
   multB_reg_2_inst : GTECH_FD1 port map( D => n5750, CP => clk, Q => 
                           multB_2_port, QN => n_1501);
   mem_write_reg_26_inst : GTECH_FD1 port map( D => n5509, CP => clk, Q => 
                           mem_write(26), QN => n5460);
   mem_write_reg_2_inst : GTECH_FD1 port map( D => n5517, CP => clk, Q => 
                           mem_write(2), QN => n5436);
   sp_reg_2_inst : GTECH_FD1 port map( D => n5624, CP => clk, Q => sp_2_port, 
                           QN => n_1502);
   stackA_reg_3_inst : GTECH_FD1 port map( D => n11170, CP => clk, Q => 
                           stackA_3_port, QN => n_1503);
   pc_reg_3_inst : GTECH_FD1 port map( D => n5918, CP => clk, Q => pc_3_port, 
                           QN => n_1504);
   multA_reg_3_inst : GTECH_FD1 port map( D => n5877, CP => clk, Q => 
                           multA_3_port, QN => n_1505);
   stackB_reg_3_inst : GTECH_FD1 port map( D => n5845, CP => clk, Q => 
                           stackB_3_port, QN => n_1506);
   multB_reg_3_inst : GTECH_FD1 port map( D => n5749, CP => clk, Q => 
                           multB_3_port, QN => n_1507);
   mem_write_reg_3_inst : GTECH_FD1 port map( D => n5518, CP => clk, Q => 
                           mem_write(3), QN => n5437);
   sp_reg_3_inst : GTECH_FD1 port map( D => n5623, CP => clk, Q => sp_3_port, 
                           QN => n_1508);
   stackA_reg_4_inst : GTECH_FD1 port map( D => n11171, CP => clk, Q => 
                           stackA_4_port, QN => n_1509);
   pc_reg_4_inst : GTECH_FD1 port map( D => n5917, CP => clk, Q => pc_4_port, 
                           QN => n_1510);
   multA_reg_4_inst : GTECH_FD1 port map( D => n5876, CP => clk, Q => 
                           multA_4_port, QN => n_1511);
   sp_reg_4_inst : GTECH_FD1 port map( D => n5622, CP => clk, Q => sp_4_port, 
                           QN => n_1512);
   stackB_reg_4_inst : GTECH_FD1 port map( D => n5844, CP => clk, Q => 
                           stackB_4_port, QN => n_1513);
   multB_reg_4_inst : GTECH_FD1 port map( D => n5748, CP => clk, Q => 
                           multB_4_port, QN => n_1514);
   mem_write_reg_28_inst : GTECH_FD1 port map( D => n5511, CP => clk, Q => 
                           mem_write(28), QN => n5462);
   mem_write_reg_4_inst : GTECH_FD1 port map( D => n5519, CP => clk, Q => 
                           mem_write(4), QN => n5438);
   stackA_reg_6_inst : GTECH_FD1 port map( D => n5883, CP => clk, Q => 
                           stackA_6_port, QN => n_1515);
   multA_reg_6_inst : GTECH_FD1 port map( D => n5874, CP => clk, Q => 
                           multA_6_port, QN => n_1516);
   sp_reg_6_inst : GTECH_FD1 port map( D => n5620, CP => clk, Q => sp_6_port, 
                           QN => n_1517);
   pc_reg_6_inst : GTECH_FD1 port map( D => n5915, CP => clk, Q => pc_6_port, 
                           QN => n_1518);
   stackB_reg_6_inst : GTECH_FD1 port map( D => n5842, CP => clk, Q => 
                           stackB_6_port, QN => n_1519);
   multB_reg_6_inst : GTECH_FD1 port map( D => n5746, CP => clk, Q => 
                           multB_6_port, QN => n_1520);
   mem_write_reg_30_inst : GTECH_FD1 port map( D => n5513, CP => clk, Q => 
                           mem_write(30), QN => n5464);
   mem_write_reg_6_inst : GTECH_FD1 port map( D => n5521, CP => clk, Q => 
                           mem_write(6), QN => n5440);
   stackA_reg_8_inst : GTECH_FD1 port map( D => n5468, CP => clk, Q => 
                           stackA_8_port, QN => n_1521);
   multA_reg_8_inst : GTECH_FD1 port map( D => n5872, CP => clk, Q => 
                           multA_8_port, QN => n_1522);
   sp_reg_8_inst : GTECH_FD1 port map( D => n5618, CP => clk, Q => sp_8_port, 
                           QN => n_1523);
   pc_reg_8_inst : GTECH_FD1 port map( D => n5913, CP => clk, Q => pc_8_port, 
                           QN => n_1524);
   stackB_reg_8_inst : GTECH_FD1 port map( D => n5840, CP => clk, Q => 
                           stackB_8_port, QN => n_1525);
   multB_reg_8_inst : GTECH_FD1 port map( D => n5744, CP => clk, Q => 
                           multB_8_port, QN => n_1526);
   stackA_reg_10_inst : GTECH_FD1 port map( D => n5470, CP => clk, Q => 
                           stackA_10_port, QN => n_1527);
   pc_reg_10_inst : GTECH_FD1 port map( D => n5911, CP => clk, Q => pc_10_port,
                           QN => n_1528);
   multA_reg_10_inst : GTECH_FD1 port map( D => n5870, CP => clk, Q => 
                           multA_10_port, QN => n_1529);
   sp_reg_10_inst : GTECH_FD1 port map( D => n5616, CP => clk, Q => sp_10_port,
                           QN => n_1530);
   stackB_reg_10_inst : GTECH_FD1 port map( D => n5838, CP => clk, Q => 
                           stackB_10_port, QN => n_1531);
   multB_reg_10_inst : GTECH_FD1 port map( D => n5742, CP => clk, Q => 
                           multB_10_port, QN => n_1532);
   mem_write_reg_10_inst : GTECH_FD1 port map( D => n5493, CP => clk, Q => 
                           mem_write(10), QN => n5444);
   stackA_reg_15_inst : GTECH_FD1 port map( D => n5475, CP => clk, Q => 
                           stackA_15_port, QN => n_1533);
   pc_reg_15_inst : GTECH_FD1 port map( D => n5906, CP => clk, Q => pc_15_port,
                           QN => n_1534);
   multA_reg_15_inst : GTECH_FD1 port map( D => n5865, CP => clk, Q => 
                           multA_15_port, QN => n_1535);
   sp_reg_15_inst : GTECH_FD1 port map( D => n5611, CP => clk, Q => sp_15_port,
                           QN => n_1536);
   stackB_reg_15_inst : GTECH_FD1 port map( D => n5833, CP => clk, Q => 
                           stackB_15_port, QN => n_1537);
   multB_reg_15_inst : GTECH_FD1 port map( D => n5737, CP => clk, Q => 
                           multB_15_port, QN => n_1538);
   pc_reg_13_inst : GTECH_FD1 port map( D => n5908, CP => clk, Q => pc_13_port,
                           QN => n_1539);
   multA_reg_13_inst : GTECH_FD1 port map( D => n5867, CP => clk, Q => 
                           multA_13_port, QN => n_1540);
   sp_reg_13_inst : GTECH_FD1 port map( D => n5613, CP => clk, Q => sp_13_port,
                           QN => n_1541);
   stackB_reg_13_inst : GTECH_FD1 port map( D => n5835, CP => clk, Q => 
                           stackB_13_port, QN => n_1542);
   multB_reg_13_inst : GTECH_FD1 port map( D => n5739, CP => clk, Q => 
                           multB_13_port, QN => n_1543);
   stackB_reg_12_inst : GTECH_FD1 port map( D => n5836, CP => clk, Q => 
                           stackB_12_port, QN => n_1544);
   multB_reg_12_inst : GTECH_FD1 port map( D => n5740, CP => clk, Q => 
                           multB_12_port, QN => n_1545);
   mem_write_reg_12_inst : GTECH_FD1 port map( D => n5495, CP => clk, Q => 
                           mem_write(12), QN => n5446);
   stackB_reg_11_inst : GTECH_FD1 port map( D => n5837, CP => clk, Q => 
                           stackB_11_port, QN => n_1546);
   multB_reg_11_inst : GTECH_FD1 port map( D => n5741, CP => clk, Q => 
                           multB_11_port, QN => n_1547);
   mem_write_reg_11_inst : GTECH_FD1 port map( D => n5494, CP => clk, Q => 
                           mem_write(11), QN => n5445);
   stackB_reg_20_inst : GTECH_FD1 port map( D => n5828, CP => clk, Q => 
                           stackB_20_port, QN => n_1548);
   multB_reg_20_inst : GTECH_FD1 port map( D => n5732, CP => clk, Q => 
                           multB_20_port, QN => n_1549);
   mem_write_reg_20_inst : GTECH_FD1 port map( D => n5503, CP => clk, Q => 
                           mem_write(20), QN => n5454);
   sp_reg_20_inst : GTECH_FD1 port map( D => n5606, CP => clk, Q => sp_20_port,
                           QN => n_1550);
   stackB_reg_19_inst : GTECH_FD1 port map( D => n5829, CP => clk, Q => 
                           stackB_19_port, QN => n_1551);
   multB_reg_19_inst : GTECH_FD1 port map( D => n5733, CP => clk, Q => 
                           multB_19_port, QN => n_1552);
   mem_write_reg_19_inst : GTECH_FD1 port map( D => n5502, CP => clk, Q => 
                           mem_write(19), QN => n5453);
   sp_reg_19_inst : GTECH_FD1 port map( D => n5607, CP => clk, Q => sp_19_port,
                           QN => n_1553);
   stackB_reg_18_inst : GTECH_FD1 port map( D => n5830, CP => clk, Q => 
                           stackB_18_port, QN => n_1554);
   multB_reg_18_inst : GTECH_FD1 port map( D => n5734, CP => clk, Q => 
                           multB_18_port, QN => n_1555);
   mem_write_reg_18_inst : GTECH_FD1 port map( D => n5501, CP => clk, Q => 
                           mem_write(18), QN => n5452);
   sp_reg_18_inst : GTECH_FD1 port map( D => n5608, CP => clk, Q => sp_18_port,
                           QN => n_1556);
   stackB_reg_17_inst : GTECH_FD1 port map( D => n5831, CP => clk, Q => 
                           stackB_17_port, QN => n_1557);
   multB_reg_17_inst : GTECH_FD1 port map( D => n5735, CP => clk, Q => 
                           multB_17_port, QN => n_1558);
   mem_write_reg_17_inst : GTECH_FD1 port map( D => n5500, CP => clk, Q => 
                           mem_write(17), QN => n5451);
   sp_reg_17_inst : GTECH_FD1 port map( D => n5609, CP => clk, Q => sp_17_port,
                           QN => n_1559);
   stackB_reg_16_inst : GTECH_FD1 port map( D => n5832, CP => clk, Q => 
                           stackB_16_port, QN => n_1560);
   multB_reg_16_inst : GTECH_FD1 port map( D => n5736, CP => clk, Q => 
                           multB_16_port, QN => n_1561);
   sp_reg_16_inst : GTECH_FD1 port map( D => n5610, CP => clk, Q => sp_16_port,
                           QN => n_1562);
   stackB_reg_9_inst : GTECH_FD1 port map( D => n5839, CP => clk, Q => 
                           stackB_9_port, QN => n_1563);
   multB_reg_9_inst : GTECH_FD1 port map( D => n5743, CP => clk, Q => 
                           multB_9_port, QN => n_1564);
   mem_write_reg_9_inst : GTECH_FD1 port map( D => n5492, CP => clk, Q => 
                           mem_write(9), QN => n5443);
   stackB_reg_22_inst : GTECH_FD1 port map( D => n5826, CP => clk, Q => 
                           stackB_22_port, QN => n_1565);
   multB_reg_22_inst : GTECH_FD1 port map( D => n5730, CP => clk, Q => 
                           multB_22_port, QN => n_1566);
   mem_write_reg_22_inst : GTECH_FD1 port map( D => n5505, CP => clk, Q => 
                           mem_write(22), QN => n5456);
   sp_reg_22_inst : GTECH_FD1 port map( D => n5604, CP => clk, Q => sp_22_port,
                           QN => n_1567);
   stackB_reg_21_inst : GTECH_FD1 port map( D => n5827, CP => clk, Q => 
                           stackB_21_port, QN => n_1568);
   multB_reg_21_inst : GTECH_FD1 port map( D => n5731, CP => clk, Q => 
                           multB_21_port, QN => n_1569);
   sp_reg_21_inst : GTECH_FD1 port map( D => n5605, CP => clk, Q => sp_21_port,
                           QN => n_1570);
   stackB_reg_14_inst : GTECH_FD1 port map( D => n5834, CP => clk, Q => 
                           stackB_14_port, QN => n_1571);
   multB_reg_14_inst : GTECH_FD1 port map( D => n5738, CP => clk, Q => 
                           multB_14_port, QN => n_1572);
   mem_write_reg_14_inst : GTECH_FD1 port map( D => n5497, CP => clk, Q => 
                           mem_write(14), QN => n5448);
   stackB_reg_7_inst : GTECH_FD1 port map( D => n5841, CP => clk, Q => 
                           stackB_7_port, QN => n_1573);
   multB_reg_7_inst : GTECH_FD1 port map( D => n5745, CP => clk, Q => 
                           multB_7_port, QN => n_1574);
   mem_write_reg_15_inst : GTECH_FD1 port map( D => n5498, CP => clk, Q => 
                           mem_write(15), QN => n5449);
   mem_write_reg_31_inst : GTECH_FD1 port map( D => n5514, CP => clk, Q => 
                           mem_write(31), QN => n5465);
   mem_write_reg_7_inst : GTECH_FD1 port map( D => n5522, CP => clk, Q => 
                           mem_write(7), QN => n5441);
   stackB_reg_0_inst : GTECH_FD1 port map( D => n5848, CP => clk, Q => 
                           stackB_0_port, QN => n_1575);
   multB_reg_0_inst : GTECH_FD1 port map( D => n5752, CP => clk, Q => 
                           multB_0_port, QN => n_1576);
   mem_write_reg_0_inst : GTECH_FD1 port map( D => n5515, CP => clk, Q => 
                           mem_write(0), QN => n5434);
   mem_write_reg_8_inst : GTECH_FD1 port map( D => n5491, CP => clk, Q => 
                           mem_write(8), QN => n5442);
   mem_write_reg_16_inst : GTECH_FD1 port map( D => n5499, CP => clk, Q => 
                           mem_write(16), QN => n5450);
   multB_reg_23_inst : GTECH_FD1 port map( D => n5729, CP => clk, Q => 
                           multB_23_port, QN => n_1577);
   mem_write_reg_23_inst : GTECH_FD1 port map( D => n5506, CP => clk, Q => 
                           mem_write(23), QN => n5457);
   sp_reg_23_inst : GTECH_FD1 port map( D => n5603, CP => clk, Q => sp_23_port,
                           QN => n_1578);
   multB_reg_24_inst : GTECH_FD1 port map( D => n5728, CP => clk, Q => 
                           multB_24_port, QN => n_1579);
   mem_write_reg_24_inst : GTECH_FD1 port map( D => n5507, CP => clk, Q => 
                           mem_write(24), QN => n5458);
   sp_reg_24_inst : GTECH_FD1 port map( D => n5602, CP => clk, Q => sp_24_port,
                           QN => n_1580);
   multB_reg_25_inst : GTECH_FD1 port map( D => n5727, CP => clk, Q => 
                           multB_25_port, QN => n_1581);
   mem_write_reg_25_inst : GTECH_FD1 port map( D => n5508, CP => clk, Q => 
                           mem_write(25), QN => n5459);
   binaryOpResult_reg_27_inst : GTECH_FD1 port map( D => n5789, CP => clk, Q =>
                           n10992, QN => n_1582);
   binaryOpResult2_reg_27_inst : GTECH_FD1 port map( D => n11201, CP => clk, Q 
                           => n11085, QN => n_1583);
   binaryOpResult_reg_28_inst : GTECH_FD1 port map( D => n5788, CP => clk, Q =>
                           n10991, QN => n_1584);
   binaryOpResult2_reg_28_inst : GTECH_FD1 port map( D => n11202, CP => clk, Q 
                           => n11087, QN => n_1585);
   binaryOpResult_reg_29_inst : GTECH_FD1 port map( D => n5787, CP => clk, Q =>
                           n10990, QN => n_1586);
   binaryOpResult2_reg_29_inst : GTECH_FD1 port map( D => n11203, CP => clk, Q 
                           => n11089, QN => n_1587);
   binaryOpResult_reg_30_inst : GTECH_FD1 port map( D => n5786, CP => clk, Q =>
                           n10989, QN => n_1588);
   binaryOpResult2_reg_30_inst : GTECH_FD1 port map( D => n11204, CP => clk, Q 
                           => n11091, QN => n_1589);
   binaryOpResult_reg_31_inst : GTECH_FD1 port map( D => n5785, CP => clk, Q =>
                           n10988, QN => n_1590);
   binaryOpResult2_reg_31_inst : GTECH_FD1 port map( D => n11205, CP => clk, Q 
                           => n11093, QN => n_1591);
   multB_reg_27_inst : GTECH_FD1 port map( D => n5725, CP => clk, Q => 
                           multB_27_port, QN => n_1592);
   mem_write_reg_27_inst : GTECH_FD1 port map( D => n5510, CP => clk, Q => 
                           mem_write(27), QN => n5461);
   mem_write_reg_13_inst : GTECH_FD1 port map( D => n5496, CP => clk, Q => 
                           mem_write(13), QN => n5447);
   mem_write_reg_21_inst : GTECH_FD1 port map( D => n5504, CP => clk, Q => 
                           mem_write(21), QN => n5455);
   mem_write_reg_29_inst : GTECH_FD1 port map( D => n5512, CP => clk, Q => 
                           mem_write(29), QN => n5463);
   mem_write_reg_5_inst : GTECH_FD1 port map( D => n5520, CP => clk, Q => 
                           mem_write(5), QN => n5439);
   mem_addr_reg_2_inst : GTECH_FD1 port map( D => n5594, CP => clk, Q => 
                           out_mem_addr_2_port, QN => n_1593);
   mem_addr_reg_3_inst : GTECH_FD1 port map( D => n5593, CP => clk, Q => 
                           out_mem_addr_3_port, QN => n_1594);
   mem_addr_reg_4_inst : GTECH_FD1 port map( D => n5592, CP => clk, Q => 
                           out_mem_addr_4_port, QN => n_1595);
   mem_addr_reg_5_inst : GTECH_FD1 port map( D => n5591, CP => clk, Q => 
                           out_mem_addr_5_port, QN => n_1596);
   mem_addr_reg_6_inst : GTECH_FD1 port map( D => n5590, CP => clk, Q => 
                           out_mem_addr_6_port, QN => n_1597);
   mem_addr_reg_7_inst : GTECH_FD1 port map( D => n5589, CP => clk, Q => 
                           out_mem_addr_7_port, QN => n_1598);
   mem_addr_reg_8_inst : GTECH_FD1 port map( D => n5588, CP => clk, Q => 
                           out_mem_addr_8_port, QN => n_1599);
   mem_addr_reg_9_inst : GTECH_FD1 port map( D => n5587, CP => clk, Q => 
                           out_mem_addr_9_port, QN => n_1600);
   mem_addr_reg_10_inst : GTECH_FD1 port map( D => n5586, CP => clk, Q => 
                           out_mem_addr_10_port, QN => n_1601);
   mem_addr_reg_11_inst : GTECH_FD1 port map( D => n5585, CP => clk, Q => 
                           out_mem_addr_11_port, QN => n_1602);
   mem_addr_reg_12_inst : GTECH_FD1 port map( D => n5584, CP => clk, Q => 
                           out_mem_addr_12_port, QN => n_1603);
   mem_addr_reg_13_inst : GTECH_FD1 port map( D => n5583, CP => clk, Q => 
                           out_mem_addr_13_port, QN => n_1604);
   mem_addr_reg_14_inst : GTECH_FD1 port map( D => n5582, CP => clk, Q => 
                           out_mem_addr_14_port, QN => n_1605);
   mem_addr_reg_15_inst : GTECH_FD1 port map( D => n5581, CP => clk, Q => 
                           out_mem_addr_15_port, QN => n_1606);
   mem_addr_reg_16_inst : GTECH_FD1 port map( D => n5580, CP => clk, Q => 
                           out_mem_addr_16_port, QN => n_1607);
   mem_addr_reg_17_inst : GTECH_FD1 port map( D => n5579, CP => clk, Q => 
                           out_mem_addr_17_port, QN => n_1608);
   mem_addr_reg_18_inst : GTECH_FD1 port map( D => n5578, CP => clk, Q => 
                           out_mem_addr_18_port, QN => n_1609);
   mem_addr_reg_19_inst : GTECH_FD1 port map( D => n5577, CP => clk, Q => 
                           out_mem_addr_19_port, QN => n_1610);
   mem_addr_reg_20_inst : GTECH_FD1 port map( D => n5576, CP => clk, Q => 
                           out_mem_addr_20_port, QN => n_1611);
   mem_addr_reg_21_inst : GTECH_FD1 port map( D => n5575, CP => clk, Q => 
                           out_mem_addr_21_port, QN => n_1612);
   mem_addr_reg_22_inst : GTECH_FD1 port map( D => n5574, CP => clk, Q => 
                           out_mem_addr_22_port, QN => n_1613);
   mem_addr_reg_23_inst : GTECH_FD1 port map( D => n5573, CP => clk, Q => 
                           out_mem_addr_23_port, QN => n_1614);
   mem_addr_reg_24_inst : GTECH_FD1 port map( D => n5572, CP => clk, Q => 
                           out_mem_addr_24_port, QN => n_1615);
   mem_addr_reg_25_inst : GTECH_FD1 port map( D => n5571, CP => clk, Q => 
                           out_mem_addr_25_port, QN => n_1616);
   mem_addr_reg_26_inst : GTECH_FD1 port map( D => n5570, CP => clk, Q => 
                           out_mem_addr_26_port, QN => n_1617);
   mem_addr_reg_27_inst : GTECH_FD1 port map( D => n5569, CP => clk, Q => 
                           out_mem_addr_27_port, QN => n_1618);
   mem_addr_reg_28_inst : GTECH_FD1 port map( D => n5568, CP => clk, Q => 
                           out_mem_addr_28_port, QN => n_1619);
   mem_addr_reg_29_inst : GTECH_FD1 port map( D => n5567, CP => clk, Q => 
                           out_mem_addr_29_port, QN => n_1620);
   mem_addr_reg_30_inst : GTECH_FD1 port map( D => n5566, CP => clk, Q => 
                           out_mem_addr_30_port, QN => n_1621);
   mem_addr_reg_31_inst : GTECH_FD1 port map( D => n5565, CP => clk, Q => 
                           out_mem_addr_31_port, QN => n_1622);
   sub_586 : zpu_core_DW01_sub_0 port map( A(31) => stackB_31_port, A(30) => 
                           stackB_30_port, A(29) => stackB_29_port, A(28) => 
                           stackB_28_port, A(27) => stackB_27_port, A(26) => 
                           stackB_26_port, A(25) => stackB_25_port, A(24) => 
                           stackB_24_port, A(23) => stackB_23_port, A(22) => 
                           stackB_22_port, A(21) => stackB_21_port, A(20) => 
                           stackB_20_port, A(19) => stackB_19_port, A(18) => 
                           stackB_18_port, A(17) => stackB_17_port, A(16) => 
                           stackB_16_port, A(15) => stackB_15_port, A(14) => 
                           stackB_14_port, A(13) => stackB_13_port, A(12) => 
                           stackB_12_port, A(11) => stackB_11_port, A(10) => 
                           stackB_10_port, A(9) => stackB_9_port, A(8) => 
                           stackB_8_port, A(7) => stackB_7_port, A(6) => 
                           stackB_6_port, A(5) => stackB_5_port, A(4) => 
                           stackB_4_port, A(3) => stackB_3_port, A(2) => 
                           stackB_2_port, A(1) => stackB_1_port, A(0) => 
                           stackB_0_port, B(31) => stackA_31_port, B(30) => 
                           stackA_30_port, B(29) => stackA_29_port, B(28) => 
                           stackA_28_port, B(27) => stackA_27_port, B(26) => 
                           stackA_26_port, B(25) => stackA_25_port, B(24) => 
                           stackA_24_port, B(23) => stackA_23_port, B(22) => 
                           stackA_22_port, B(21) => stackA_21_port, B(20) => 
                           stackA_20_port, B(19) => stackA_19_port, B(18) => 
                           stackA_18_port, B(17) => stackA_17_port, B(16) => 
                           stackA_16_port, B(15) => stackA_15_port, B(14) => 
                           stackA_14_port, B(13) => stackA_13_port, B(12) => 
                           stackA_12_port, B(11) => stackA_11_port, B(10) => 
                           stackA_10_port, B(9) => stackA_9_port, B(8) => 
                           stackA_8_port, B(7) => stackA_7_port, B(6) => 
                           stackA_6_port, B(5) => stackA_5_port, B(4) => 
                           stackA_4_port, B(3) => stackA_3_port, B(2) => 
                           stackA_2_port, B(1) => stackA_1_port, B(0) => 
                           stackA_0_port, CI => n33, DIFF(31) => N3151, 
                           DIFF(30) => N3150, DIFF(29) => N3149, DIFF(28) => 
                           N3148, DIFF(27) => N3147, DIFF(26) => N3146, 
                           DIFF(25) => N3145, DIFF(24) => N3144, DIFF(23) => 
                           N3143, DIFF(22) => N3142, DIFF(21) => N3141, 
                           DIFF(20) => N3140, DIFF(19) => N3139, DIFF(18) => 
                           N3138, DIFF(17) => N3137, DIFF(16) => N3136, 
                           DIFF(15) => N3135, DIFF(14) => N3134, DIFF(13) => 
                           N3133, DIFF(12) => N3132, DIFF(11) => N3131, 
                           DIFF(10) => N3130, DIFF(9) => N3129, DIFF(8) => 
                           N3128, DIFF(7) => N3127, DIFF(6) => N3126, DIFF(5) 
                           => N3125, DIFF(4) => N3124, DIFF(3) => N3123, 
                           DIFF(2) => N3122, DIFF(1) => N3121, DIFF(0) => N3120
                           , CO => n_1623);
   add_512 : zpu_core_DW01_add_0 port map( A(31) => pc_31_port, A(30) => 
                           pc_30_port, A(29) => pc_29_port, A(28) => pc_28_port
                           , A(27) => pc_27_port, A(26) => pc_26_port, A(25) =>
                           pc_25_port, A(24) => pc_24_port, A(23) => pc_23_port
                           , A(22) => pc_22_port, A(21) => pc_21_port, A(20) =>
                           pc_20_port, A(19) => pc_19_port, A(18) => pc_18_port
                           , A(17) => pc_17_port, A(16) => pc_16_port, A(15) =>
                           pc_15_port, A(14) => pc_14_port, A(13) => pc_13_port
                           , A(12) => pc_12_port, A(11) => pc_11_port, A(10) =>
                           pc_10_port, A(9) => pc_9_port, A(8) => pc_8_port, 
                           A(7) => pc_7_port, A(6) => pc_6_port, A(5) => 
                           pc_5_port, A(4) => pc_4_port, A(3) => pc_3_port, 
                           A(2) => pc_2_port, A(1) => pc_1_port, A(0) => 
                           pc_0_port, B(31) => stackA_31_port, B(30) => 
                           stackA_30_port, B(29) => stackA_29_port, B(28) => 
                           stackA_28_port, B(27) => stackA_27_port, B(26) => 
                           stackA_26_port, B(25) => stackA_25_port, B(24) => 
                           stackA_24_port, B(23) => stackA_23_port, B(22) => 
                           stackA_22_port, B(21) => stackA_21_port, B(20) => 
                           stackA_20_port, B(19) => stackA_19_port, B(18) => 
                           stackA_18_port, B(17) => stackA_17_port, B(16) => 
                           stackA_16_port, B(15) => stackA_15_port, B(14) => 
                           stackA_14_port, B(13) => stackA_13_port, B(12) => 
                           stackA_12_port, B(11) => stackA_11_port, B(10) => 
                           stackA_10_port, B(9) => stackA_9_port, B(8) => 
                           stackA_8_port, B(7) => stackA_7_port, B(6) => 
                           stackA_6_port, B(5) => stackA_5_port, B(4) => 
                           stackA_4_port, B(3) => stackA_3_port, B(2) => 
                           stackA_2_port, B(1) => stackA_1_port, B(0) => 
                           stackA_0_port, CI => n34, SUM(31) => N3118, SUM(30) 
                           => N3117, SUM(29) => N3116, SUM(28) => N3115, 
                           SUM(27) => N3114, SUM(26) => N3113, SUM(25) => N3112
                           , SUM(24) => N3111, SUM(23) => N3110, SUM(22) => 
                           N3109, SUM(21) => N3108, SUM(20) => N3107, SUM(19) 
                           => N3106, SUM(18) => N3105, SUM(17) => N3104, 
                           SUM(16) => N3103, SUM(15) => N3102, SUM(14) => N3101
                           , SUM(13) => N3100, SUM(12) => N3099, SUM(11) => 
                           N3098, SUM(10) => N3097, SUM(9) => N3096, SUM(8) => 
                           N3095, SUM(7) => N3094, SUM(6) => N3093, SUM(5) => 
                           N3092, SUM(4) => N3091, SUM(3) => N3090, SUM(2) => 
                           N3089, SUM(1) => N3088, SUM(0) => N3087, CO => 
                           n_1624);
   add_779 : zpu_core_DW01_add_1 port map( A(29) => stackA_29_port, A(28) => 
                           stackA_28_port, A(27) => stackA_27_port, A(26) => 
                           stackA_26_port, A(25) => stackA_25_port, A(24) => 
                           stackA_24_port, A(23) => stackA_23_port, A(22) => 
                           stackA_22_port, A(21) => stackA_21_port, A(20) => 
                           stackA_20_port, A(19) => stackA_19_port, A(18) => 
                           stackA_18_port, A(17) => stackA_17_port, A(16) => 
                           stackA_16_port, A(15) => stackA_15_port, A(14) => 
                           stackA_14_port, A(13) => stackA_13_port, A(12) => 
                           stackA_12_port, A(11) => stackA_11_port, A(10) => 
                           stackA_10_port, A(9) => stackA_9_port, A(8) => 
                           stackA_8_port, A(7) => stackA_7_port, A(6) => 
                           stackA_6_port, A(5) => stackA_5_port, A(4) => 
                           stackA_4_port, A(3) => stackA_3_port, A(2) => 
                           stackA_2_port, A(1) => stackA_1_port, A(0) => 
                           stackA_0_port, B(29) => sp_31_port, B(28) => 
                           sp_30_port, B(27) => sp_29_port, B(26) => sp_28_port
                           , B(25) => sp_27_port, B(24) => sp_26_port, B(23) =>
                           sp_25_port, B(22) => sp_24_port, B(21) => sp_23_port
                           , B(20) => sp_22_port, B(19) => sp_21_port, B(18) =>
                           sp_20_port, B(17) => sp_19_port, B(16) => sp_18_port
                           , B(15) => sp_17_port, B(14) => sp_16_port, B(13) =>
                           sp_15_port, B(12) => sp_14_port, B(11) => sp_13_port
                           , B(10) => sp_12_port, B(9) => sp_11_port, B(8) => 
                           sp_10_port, B(7) => sp_9_port, B(6) => sp_8_port, 
                           B(5) => sp_7_port, B(4) => sp_6_port, B(3) => 
                           sp_5_port, B(2) => sp_4_port, B(1) => sp_3_port, 
                           B(0) => sp_2_port, CI => n35, SUM(29) => N3020, 
                           SUM(28) => N3019, SUM(27) => N3018, SUM(26) => N3017
                           , SUM(25) => N3016, SUM(24) => N3015, SUM(23) => 
                           N3014, SUM(22) => N3013, SUM(21) => N3012, SUM(20) 
                           => N3011, SUM(19) => N3010, SUM(18) => N3009, 
                           SUM(17) => N3008, SUM(16) => N3007, SUM(15) => N3006
                           , SUM(14) => N3005, SUM(13) => N3004, SUM(12) => 
                           N3003, SUM(11) => N3002, SUM(10) => N3001, SUM(9) =>
                           N3000, SUM(8) => N2999, SUM(7) => N2998, SUM(6) => 
                           N2997, SUM(5) => N2996, SUM(4) => N2995, SUM(3) => 
                           N2994, SUM(2) => N2993, SUM(1) => N2992, SUM(0) => 
                           N2991, CO => n_1625);
   add_575 : zpu_core_DW01_add_2 port map( A(31) => stackA_31_port, A(30) => 
                           stackA_30_port, A(29) => stackA_29_port, A(28) => 
                           stackA_28_port, A(27) => stackA_27_port, A(26) => 
                           stackA_26_port, A(25) => stackA_25_port, A(24) => 
                           stackA_24_port, A(23) => stackA_23_port, A(22) => 
                           stackA_22_port, A(21) => stackA_21_port, A(20) => 
                           stackA_20_port, A(19) => stackA_19_port, A(18) => 
                           stackA_18_port, A(17) => stackA_17_port, A(16) => 
                           stackA_16_port, A(15) => stackA_15_port, A(14) => 
                           stackA_14_port, A(13) => stackA_13_port, A(12) => 
                           stackA_12_port, A(11) => stackA_11_port, A(10) => 
                           stackA_10_port, A(9) => stackA_9_port, A(8) => 
                           stackA_8_port, A(7) => stackA_7_port, A(6) => 
                           stackA_6_port, A(5) => stackA_5_port, A(4) => 
                           stackA_4_port, A(3) => stackA_3_port, A(2) => 
                           stackA_2_port, A(1) => stackA_1_port, A(0) => 
                           stackA_0_port, B(31) => stackB_31_port, B(30) => 
                           stackB_30_port, B(29) => stackB_29_port, B(28) => 
                           stackB_28_port, B(27) => stackB_27_port, B(26) => 
                           stackB_26_port, B(25) => stackB_25_port, B(24) => 
                           stackB_24_port, B(23) => stackB_23_port, B(22) => 
                           stackB_22_port, B(21) => stackB_21_port, B(20) => 
                           stackB_20_port, B(19) => stackB_19_port, B(18) => 
                           stackB_18_port, B(17) => stackB_17_port, B(16) => 
                           stackB_16_port, B(15) => stackB_15_port, B(14) => 
                           stackB_14_port, B(13) => stackB_13_port, B(12) => 
                           stackB_12_port, B(11) => stackB_11_port, B(10) => 
                           stackB_10_port, B(9) => stackB_9_port, B(8) => 
                           stackB_8_port, B(7) => stackB_7_port, B(6) => 
                           stackB_6_port, B(5) => stackB_5_port, B(4) => 
                           stackB_4_port, B(3) => stackB_3_port, B(2) => 
                           stackB_2_port, B(1) => stackB_1_port, B(0) => 
                           stackB_0_port, CI => n36, SUM(31) => N1348, SUM(30) 
                           => N1347, SUM(29) => N1346, SUM(28) => N1345, 
                           SUM(27) => N1344, SUM(26) => N1343, SUM(25) => N1342
                           , SUM(24) => N1341, SUM(23) => N1340, SUM(22) => 
                           N1339, SUM(21) => N1338, SUM(20) => N1337, SUM(19) 
                           => N1336, SUM(18) => N1335, SUM(17) => N1334, 
                           SUM(16) => N1333, SUM(15) => N1332, SUM(14) => N1331
                           , SUM(13) => N1330, SUM(12) => N1329, SUM(11) => 
                           N1328, SUM(10) => N1327, SUM(9) => N1326, SUM(8) => 
                           N1325, SUM(7) => N1324, SUM(6) => N1323, SUM(5) => 
                           N1322, SUM(4) => N1321, SUM(3) => N1320, SUM(2) => 
                           N1319, SUM(1) => N1318, SUM(0) => N1317, CO => 
                           n_1626);
   add_765 : zpu_core_DW01_add_3 port map( A(31) => stackA_31_port, A(30) => 
                           stackA_30_port, A(29) => stackA_29_port, A(28) => 
                           stackA_28_port, A(27) => stackA_27_port, A(26) => 
                           stackA_26_port, A(25) => stackA_25_port, A(24) => 
                           stackA_24_port, A(23) => stackA_23_port, A(22) => 
                           stackA_22_port, A(21) => stackA_21_port, A(20) => 
                           stackA_20_port, A(19) => stackA_19_port, A(18) => 
                           stackA_18_port, A(17) => stackA_17_port, A(16) => 
                           stackA_16_port, A(15) => stackA_15_port, A(14) => 
                           stackA_14_port, A(13) => stackA_13_port, A(12) => 
                           stackA_12_port, A(11) => stackA_11_port, A(10) => 
                           stackA_10_port, A(9) => stackA_9_port, A(8) => 
                           stackA_8_port, A(7) => stackA_7_port, A(6) => 
                           stackA_6_port, A(5) => stackA_5_port, A(4) => 
                           stackA_4_port, A(3) => stackA_3_port, A(2) => 
                           stackA_2_port, A(1) => stackA_1_port, A(0) => 
                           stackA_0_port, B(31) => stackB_31_port, B(30) => 
                           stackB_30_port, B(29) => stackB_29_port, B(28) => 
                           stackB_28_port, B(27) => stackB_27_port, B(26) => 
                           stackB_26_port, B(25) => stackB_25_port, B(24) => 
                           stackB_24_port, B(23) => stackB_23_port, B(22) => 
                           stackB_22_port, B(21) => stackB_21_port, B(20) => 
                           stackB_20_port, B(19) => stackB_19_port, B(18) => 
                           stackB_18_port, B(17) => stackB_17_port, B(16) => 
                           stackB_16_port, B(15) => stackB_15_port, B(14) => 
                           stackB_14_port, B(13) => stackB_13_port, B(12) => 
                           stackB_12_port, B(11) => stackB_11_port, B(10) => 
                           stackB_10_port, B(9) => stackB_9_port, B(8) => 
                           stackB_8_port, B(7) => stackB_7_port, B(6) => 
                           stackB_6_port, B(5) => stackB_5_port, B(4) => 
                           stackB_4_port, B(3) => stackB_3_port, B(2) => 
                           stackB_2_port, B(1) => stackB_1_port, B(0) => 
                           stackB_0_port, CI => n37, SUM(31) => N1065, SUM(30) 
                           => N1064, SUM(29) => N1063, SUM(28) => N1062, 
                           SUM(27) => N1061, SUM(26) => N1060, SUM(25) => N1059
                           , SUM(24) => N1058, SUM(23) => N1057, SUM(22) => 
                           N1056, SUM(21) => N1055, SUM(20) => N1054, SUM(19) 
                           => N1053, SUM(18) => N1052, SUM(17) => N1051, 
                           SUM(16) => N1050, SUM(15) => N1049, SUM(14) => N1048
                           , SUM(13) => N1047, SUM(12) => N1046, SUM(11) => 
                           N1045, SUM(10) => N1044, SUM(9) => N1043, SUM(8) => 
                           N1042, SUM(7) => N1041, SUM(6) => N1040, SUM(5) => 
                           N1039, SUM(4) => N1038, SUM(3) => N1037, SUM(2) => 
                           N1036, SUM(1) => N1035, SUM(0) => N1034, CO => 
                           n_1627);
   add_856 : zpu_core_DW01_add_4 port map( A(31) => stackA_31_port, A(30) => 
                           stackA_30_port, A(29) => stackA_29_port, A(28) => 
                           stackA_28_port, A(27) => stackA_27_port, A(26) => 
                           stackA_26_port, A(25) => stackA_25_port, A(24) => 
                           stackA_24_port, A(23) => stackA_23_port, A(22) => 
                           stackA_22_port, A(21) => stackA_21_port, A(20) => 
                           stackA_20_port, A(19) => stackA_19_port, A(18) => 
                           stackA_18_port, A(17) => stackA_17_port, A(16) => 
                           stackA_16_port, A(15) => stackA_15_port, A(14) => 
                           stackA_14_port, A(13) => stackA_13_port, A(12) => 
                           stackA_12_port, A(11) => stackA_11_port, A(10) => 
                           stackA_10_port, A(9) => stackA_9_port, A(8) => 
                           stackA_8_port, A(7) => stackA_7_port, A(6) => 
                           stackA_6_port, A(5) => stackA_5_port, A(4) => 
                           stackA_4_port, A(3) => stackA_3_port, A(2) => 
                           stackA_2_port, A(1) => stackA_1_port, A(0) => 
                           stackA_0_port, B(31) => mem_read(31), B(30) => 
                           mem_read(30), B(29) => mem_read(29), B(28) => 
                           mem_read(28), B(27) => mem_read(27), B(26) => 
                           mem_read(26), B(25) => mem_read(25), B(24) => 
                           mem_read(24), B(23) => mem_read(23), B(22) => 
                           mem_read(22), B(21) => mem_read(21), B(20) => 
                           mem_read(20), B(19) => mem_read(19), B(18) => 
                           mem_read(18), B(17) => mem_read(17), B(16) => 
                           mem_read(16), B(15) => mem_read(15), B(14) => 
                           mem_read(14), B(13) => mem_read(13), B(12) => 
                           mem_read(12), B(11) => mem_read(11), B(10) => 
                           mem_read(10), B(9) => mem_read(9), B(8) => 
                           mem_read(8), B(7) => mem_read(7), B(6) => 
                           mem_read(6), B(5) => mem_read(5), B(4) => 
                           mem_read(4), B(3) => mem_read(3), B(2) => 
                           mem_read(2), B(1) => mem_read(1), B(0) => 
                           mem_read(0), CI => n38, SUM(31) => N726, SUM(30) => 
                           N725, SUM(29) => N724, SUM(28) => N723, SUM(27) => 
                           N722, SUM(26) => N721, SUM(25) => N720, SUM(24) => 
                           N719, SUM(23) => N718, SUM(22) => N717, SUM(21) => 
                           N716, SUM(20) => N715, SUM(19) => N714, SUM(18) => 
                           N713, SUM(17) => N712, SUM(16) => N711, SUM(15) => 
                           N710, SUM(14) => N709, SUM(13) => N708, SUM(12) => 
                           N707, SUM(11) => N706, SUM(10) => N705, SUM(9) => 
                           N704, SUM(8) => N703, SUM(7) => N702, SUM(6) => N701
                           , SUM(5) => N700, SUM(4) => N699, SUM(3) => N698, 
                           SUM(2) => N697, SUM(1) => N696, SUM(0) => N695, CO 
                           => n_1628);
   add_1_root_add_841_2 : zpu_core_DW01_add_5 port map( A(29) => sp_31_port, 
                           A(28) => sp_30_port, A(27) => sp_29_port, A(26) => 
                           sp_28_port, A(25) => sp_27_port, A(24) => sp_26_port
                           , A(23) => sp_25_port, A(22) => sp_24_port, A(21) =>
                           sp_23_port, A(20) => sp_22_port, A(19) => sp_21_port
                           , A(18) => sp_20_port, A(17) => sp_19_port, A(16) =>
                           sp_18_port, A(15) => sp_17_port, A(14) => sp_16_port
                           , A(13) => sp_15_port, A(12) => sp_14_port, A(11) =>
                           sp_13_port, A(10) => sp_12_port, A(9) => sp_11_port,
                           A(8) => sp_10_port, A(7) => sp_9_port, A(6) => 
                           sp_8_port, A(5) => sp_7_port, A(4) => sp_6_port, 
                           A(3) => sp_5_port, A(2) => sp_4_port, A(1) => 
                           sp_3_port, A(0) => sp_2_port, B(29) => n39, B(28) =>
                           n39, B(27) => n39, B(26) => n39, B(25) => n39, B(24)
                           => n39, B(23) => n39, B(22) => n39, B(21) => n39, 
                           B(20) => n39, B(19) => n39, B(18) => n39, B(17) => 
                           n39, B(16) => n39, B(15) => n39, B(14) => n39, B(13)
                           => n39, B(12) => n39, B(11) => n39, B(10) => n39, 
                           B(9) => n39, B(8) => n39, B(7) => n39, B(6) => n39, 
                           B(5) => n39, B(4) => n6018, B(3) => n11273, B(2) => 
                           n11272, B(1) => n11271, B(0) => n11270, CI => 
                           X_Logic1_port, SUM(29) => N598, SUM(28) => N597, 
                           SUM(27) => N596, SUM(26) => N595, SUM(25) => N594, 
                           SUM(24) => N593, SUM(23) => N592, SUM(22) => N591, 
                           SUM(21) => N590, SUM(20) => N589, SUM(19) => N588, 
                           SUM(18) => N587, SUM(17) => N586, SUM(16) => N585, 
                           SUM(15) => N584, SUM(14) => N583, SUM(13) => N582, 
                           SUM(12) => N581, SUM(11) => N580, SUM(10) => N579, 
                           SUM(9) => N578, SUM(8) => N577, SUM(7) => N576, 
                           SUM(6) => N575, SUM(5) => N574, SUM(4) => N573, 
                           SUM(3) => N572, SUM(2) => N571, SUM(1) => N570, 
                           SUM(0) => N569, CO => n_1629);
   mult_234 : zpu_core_DW02_mult_0 port map( A(31) => multA_31_port, A(30) => 
                           multA_30_port, A(29) => multA_29_port, A(28) => 
                           multA_28_port, A(27) => multA_27_port, A(26) => 
                           multA_26_port, A(25) => multA_25_port, A(24) => 
                           multA_24_port, A(23) => multA_23_port, A(22) => 
                           multA_22_port, A(21) => multA_21_port, A(20) => 
                           multA_20_port, A(19) => multA_19_port, A(18) => 
                           multA_18_port, A(17) => multA_17_port, A(16) => 
                           multA_16_port, A(15) => multA_15_port, A(14) => 
                           multA_14_port, A(13) => multA_13_port, A(12) => 
                           multA_12_port, A(11) => multA_11_port, A(10) => 
                           multA_10_port, A(9) => multA_9_port, A(8) => 
                           multA_8_port, A(7) => multA_7_port, A(6) => 
                           multA_6_port, A(5) => multA_5_port, A(4) => 
                           multA_4_port, A(3) => multA_3_port, A(2) => 
                           multA_2_port, A(1) => multA_1_port, A(0) => 
                           multA_0_port, B(31) => multB_31_port, B(30) => 
                           multB_30_port, B(29) => multB_29_port, B(28) => 
                           multB_28_port, B(27) => multB_27_port, B(26) => 
                           multB_26_port, B(25) => multB_25_port, B(24) => 
                           multB_24_port, B(23) => multB_23_port, B(22) => 
                           multB_22_port, B(21) => multB_21_port, B(20) => 
                           multB_20_port, B(19) => multB_19_port, B(18) => 
                           multB_18_port, B(17) => multB_17_port, B(16) => 
                           multB_16_port, B(15) => multB_15_port, B(14) => 
                           multB_14_port, B(13) => multB_13_port, B(12) => 
                           multB_12_port, B(11) => multB_11_port, B(10) => 
                           multB_10_port, B(9) => multB_9_port, B(8) => 
                           multB_8_port, B(7) => multB_7_port, B(6) => 
                           multB_6_port, B(5) => multB_5_port, B(4) => 
                           multB_4_port, B(3) => multB_3_port, B(2) => 
                           multB_2_port, B(1) => multB_1_port, B(0) => 
                           multB_0_port, TC => n40, PRODUCT(63) => n_1630, 
                           PRODUCT(62) => n_1631, PRODUCT(61) => n_1632, 
                           PRODUCT(60) => n_1633, PRODUCT(59) => n_1634, 
                           PRODUCT(58) => n_1635, PRODUCT(57) => n_1636, 
                           PRODUCT(56) => n_1637, PRODUCT(55) => n_1638, 
                           PRODUCT(54) => n_1639, PRODUCT(53) => n_1640, 
                           PRODUCT(52) => n_1641, PRODUCT(51) => n_1642, 
                           PRODUCT(50) => n_1643, PRODUCT(49) => n_1644, 
                           PRODUCT(48) => n_1645, PRODUCT(47) => n_1646, 
                           PRODUCT(46) => n_1647, PRODUCT(45) => n_1648, 
                           PRODUCT(44) => n_1649, PRODUCT(43) => n_1650, 
                           PRODUCT(42) => n_1651, PRODUCT(41) => n_1652, 
                           PRODUCT(40) => n_1653, PRODUCT(39) => n_1654, 
                           PRODUCT(38) => n_1655, PRODUCT(37) => n_1656, 
                           PRODUCT(36) => n_1657, PRODUCT(35) => n_1658, 
                           PRODUCT(34) => n_1659, PRODUCT(33) => n_1660, 
                           PRODUCT(32) => n_1661, PRODUCT(31) => N331, 
                           PRODUCT(30) => N330, PRODUCT(29) => N329, 
                           PRODUCT(28) => N328, PRODUCT(27) => N327, 
                           PRODUCT(26) => N326, PRODUCT(25) => N325, 
                           PRODUCT(24) => N324, PRODUCT(23) => N323, 
                           PRODUCT(22) => N322, PRODUCT(21) => N321, 
                           PRODUCT(20) => N320, PRODUCT(19) => N319, 
                           PRODUCT(18) => N318, PRODUCT(17) => N317, 
                           PRODUCT(16) => N316, PRODUCT(15) => N315, 
                           PRODUCT(14) => N314, PRODUCT(13) => N313, 
                           PRODUCT(12) => N312, PRODUCT(11) => N311, 
                           PRODUCT(10) => N310, PRODUCT(9) => N309, PRODUCT(8) 
                           => N308, PRODUCT(7) => N307, PRODUCT(6) => N306, 
                           PRODUCT(5) => N305, PRODUCT(4) => N304, PRODUCT(3) 
                           => N303, PRODUCT(2) => N302, PRODUCT(1) => N301, 
                           PRODUCT(0) => N300);
   sub_194 : zpu_core_DW01_dec_0 port map( A(29) => sp_31_port, A(28) => 
                           sp_30_port, A(27) => sp_29_port, A(26) => sp_28_port
                           , A(25) => sp_27_port, A(24) => sp_26_port, A(23) =>
                           sp_25_port, A(22) => sp_24_port, A(21) => sp_23_port
                           , A(20) => sp_22_port, A(19) => sp_21_port, A(18) =>
                           sp_20_port, A(17) => sp_19_port, A(16) => sp_18_port
                           , A(15) => sp_17_port, A(14) => sp_16_port, A(13) =>
                           sp_15_port, A(12) => sp_14_port, A(11) => sp_13_port
                           , A(10) => sp_12_port, A(9) => sp_11_port, A(8) => 
                           sp_10_port, A(7) => sp_9_port, A(6) => sp_8_port, 
                           A(5) => sp_7_port, A(4) => sp_6_port, A(3) => 
                           sp_5_port, A(2) => sp_4_port, A(1) => sp_3_port, 
                           A(0) => sp_2_port, SUM(29) => decSp_31_port, SUM(28)
                           => decSp_30_port, SUM(27) => decSp_29_port, SUM(26) 
                           => decSp_28_port, SUM(25) => decSp_27_port, SUM(24) 
                           => decSp_26_port, SUM(23) => decSp_25_port, SUM(22) 
                           => decSp_24_port, SUM(21) => decSp_23_port, SUM(20) 
                           => decSp_22_port, SUM(19) => decSp_21_port, SUM(18) 
                           => decSp_20_port, SUM(17) => decSp_19_port, SUM(16) 
                           => decSp_18_port, SUM(15) => decSp_17_port, SUM(14) 
                           => decSp_16_port, SUM(13) => decSp_15_port, SUM(12) 
                           => decSp_14_port, SUM(11) => decSp_13_port, SUM(10) 
                           => decSp_12_port, SUM(9) => decSp_11_port, SUM(8) =>
                           decSp_10_port, SUM(7) => decSp_9_port, SUM(6) => 
                           decSp_8_port, SUM(5) => decSp_7_port, SUM(4) => 
                           decSp_6_port, SUM(3) => decSp_5_port, SUM(2) => 
                           decSp_4_port, SUM(1) => decSp_3_port, SUM(0) => 
                           decSp_2_port);
   add_193 : zpu_core_DW01_add_7 port map( A(29) => sp_31_port, A(28) => 
                           sp_30_port, A(27) => sp_29_port, A(26) => sp_28_port
                           , A(25) => sp_27_port, A(24) => sp_26_port, A(23) =>
                           sp_25_port, A(22) => sp_24_port, A(21) => sp_23_port
                           , A(20) => sp_22_port, A(19) => sp_21_port, A(18) =>
                           sp_20_port, A(17) => sp_19_port, A(16) => sp_18_port
                           , A(15) => sp_17_port, A(14) => sp_16_port, A(13) =>
                           sp_15_port, A(12) => sp_14_port, A(11) => sp_13_port
                           , A(10) => sp_12_port, A(9) => sp_11_port, A(8) => 
                           sp_10_port, A(7) => sp_9_port, A(6) => sp_8_port, 
                           A(5) => sp_7_port, A(4) => sp_6_port, A(3) => 
                           sp_5_port, A(2) => sp_4_port, A(1) => sp_3_port, 
                           A(0) => sp_2_port, B(29) => n41, B(28) => n41, B(27)
                           => n41, B(26) => n41, B(25) => n41, B(24) => n41, 
                           B(23) => n41, B(22) => n41, B(21) => n41, B(20) => 
                           n41, B(19) => n41, B(18) => n41, B(17) => n41, B(16)
                           => n41, B(15) => n41, B(14) => n41, B(13) => n41, 
                           B(12) => n41, B(11) => n41, B(10) => n41, B(9) => 
                           n41, B(8) => n41, B(7) => n41, B(6) => n41, B(5) => 
                           n41, B(4) => n41, B(3) => n41, B(2) => n41, B(1) => 
                           X_Logic1_port, B(0) => X_Logic0_port, CI => n41, 
                           SUM(29) => incIncSp_31_port, SUM(28) => 
                           incIncSp_30_port, SUM(27) => incIncSp_29_port, 
                           SUM(26) => incIncSp_28_port, SUM(25) => 
                           incIncSp_27_port, SUM(24) => incIncSp_26_port, 
                           SUM(23) => incIncSp_25_port, SUM(22) => 
                           incIncSp_24_port, SUM(21) => incIncSp_23_port, 
                           SUM(20) => incIncSp_22_port, SUM(19) => 
                           incIncSp_21_port, SUM(18) => incIncSp_20_port, 
                           SUM(17) => incIncSp_19_port, SUM(16) => 
                           incIncSp_18_port, SUM(15) => incIncSp_17_port, 
                           SUM(14) => incIncSp_16_port, SUM(13) => 
                           incIncSp_15_port, SUM(12) => incIncSp_14_port, 
                           SUM(11) => incIncSp_13_port, SUM(10) => 
                           incIncSp_12_port, SUM(9) => incIncSp_11_port, SUM(8)
                           => incIncSp_10_port, SUM(7) => incIncSp_9_port, 
                           SUM(6) => incIncSp_8_port, SUM(5) => incIncSp_7_port
                           , SUM(4) => incIncSp_6_port, SUM(3) => 
                           incIncSp_5_port, SUM(2) => incIncSp_4_port, SUM(1) 
                           => incIncSp_3_port, SUM(0) => incIncSp_2_port, CO =>
                           n_1662);
   add_192 : zpu_core_DW01_inc_0 port map( A(29) => sp_31_port, A(28) => 
                           sp_30_port, A(27) => sp_29_port, A(26) => sp_28_port
                           , A(25) => sp_27_port, A(24) => sp_26_port, A(23) =>
                           sp_25_port, A(22) => sp_24_port, A(21) => sp_23_port
                           , A(20) => sp_22_port, A(19) => sp_21_port, A(18) =>
                           sp_20_port, A(17) => sp_19_port, A(16) => sp_18_port
                           , A(15) => sp_17_port, A(14) => sp_16_port, A(13) =>
                           sp_15_port, A(12) => sp_14_port, A(11) => sp_13_port
                           , A(10) => sp_12_port, A(9) => sp_11_port, A(8) => 
                           sp_10_port, A(7) => sp_9_port, A(6) => sp_8_port, 
                           A(5) => sp_7_port, A(4) => sp_6_port, A(3) => 
                           sp_5_port, A(2) => sp_4_port, A(1) => sp_3_port, 
                           A(0) => sp_2_port, SUM(29) => incSp_31_port, SUM(28)
                           => incSp_30_port, SUM(27) => incSp_29_port, SUM(26) 
                           => incSp_28_port, SUM(25) => incSp_27_port, SUM(24) 
                           => incSp_26_port, SUM(23) => incSp_25_port, SUM(22) 
                           => incSp_24_port, SUM(21) => incSp_23_port, SUM(20) 
                           => incSp_22_port, SUM(19) => incSp_21_port, SUM(18) 
                           => incSp_20_port, SUM(17) => incSp_19_port, SUM(16) 
                           => incSp_18_port, SUM(15) => incSp_17_port, SUM(14) 
                           => incSp_16_port, SUM(13) => incSp_15_port, SUM(12) 
                           => incSp_14_port, SUM(11) => incSp_13_port, SUM(10) 
                           => incSp_12_port, SUM(9) => incSp_11_port, SUM(8) =>
                           incSp_10_port, SUM(7) => incSp_9_port, SUM(6) => 
                           incSp_8_port, SUM(5) => incSp_7_port, SUM(4) => 
                           incSp_6_port, SUM(3) => incSp_5_port, SUM(2) => 
                           incSp_4_port, SUM(1) => incSp_3_port, SUM(0) => 
                           incSp_2_port);
   r612 : zpu_core_DW01_cmp6_0 port map( A(31) => stackA_31_port, A(30) => 
                           stackA_30_port, A(29) => stackA_29_port, A(28) => 
                           stackA_28_port, A(27) => stackA_27_port, A(26) => 
                           stackA_26_port, A(25) => stackA_25_port, A(24) => 
                           stackA_24_port, A(23) => stackA_23_port, A(22) => 
                           stackA_22_port, A(21) => stackA_21_port, A(20) => 
                           stackA_20_port, A(19) => stackA_19_port, A(18) => 
                           stackA_18_port, A(17) => stackA_17_port, A(16) => 
                           stackA_16_port, A(15) => stackA_15_port, A(14) => 
                           stackA_14_port, A(13) => stackA_13_port, A(12) => 
                           stackA_12_port, A(11) => stackA_11_port, A(10) => 
                           stackA_10_port, A(9) => stackA_9_port, A(8) => 
                           stackA_8_port, A(7) => stackA_7_port, A(6) => 
                           stackA_6_port, A(5) => stackA_5_port, A(4) => 
                           stackA_4_port, A(3) => stackA_3_port, A(2) => 
                           stackA_2_port, A(1) => stackA_1_port, A(0) => 
                           stackA_0_port, B(31) => stackB_31_port, B(30) => 
                           stackB_30_port, B(29) => stackB_29_port, B(28) => 
                           stackB_28_port, B(27) => stackB_27_port, B(26) => 
                           stackB_26_port, B(25) => stackB_25_port, B(24) => 
                           stackB_24_port, B(23) => stackB_23_port, B(22) => 
                           stackB_22_port, B(21) => stackB_21_port, B(20) => 
                           stackB_20_port, B(19) => stackB_19_port, B(18) => 
                           stackB_18_port, B(17) => stackB_17_port, B(16) => 
                           stackB_16_port, B(15) => stackB_15_port, B(14) => 
                           stackB_14_port, B(13) => stackB_13_port, B(12) => 
                           stackB_12_port, B(11) => stackB_11_port, B(10) => 
                           stackB_10_port, B(9) => stackB_9_port, B(8) => 
                           stackB_8_port, B(7) => stackB_7_port, B(6) => 
                           stackB_6_port, B(5) => stackB_5_port, B(4) => 
                           stackB_4_port, B(3) => stackB_3_port, B(2) => 
                           stackB_2_port, B(1) => stackB_1_port, B(0) => 
                           stackB_0_port, TC => n42, LT => N2952, GT => n_1663,
                           EQ => n_1664, LE => N2954, GE => n_1665, NE => 
                           n_1666);
   r611 : zpu_core_DW01_cmp6_1 port map( A(31) => stackA_31_port, A(30) => 
                           stackA_30_port, A(29) => stackA_29_port, A(28) => 
                           stackA_28_port, A(27) => stackA_27_port, A(26) => 
                           stackA_26_port, A(25) => stackA_25_port, A(24) => 
                           stackA_24_port, A(23) => stackA_23_port, A(22) => 
                           stackA_22_port, A(21) => stackA_21_port, A(20) => 
                           stackA_20_port, A(19) => stackA_19_port, A(18) => 
                           stackA_18_port, A(17) => stackA_17_port, A(16) => 
                           stackA_16_port, A(15) => stackA_15_port, A(14) => 
                           stackA_14_port, A(13) => stackA_13_port, A(12) => 
                           stackA_12_port, A(11) => stackA_11_port, A(10) => 
                           stackA_10_port, A(9) => stackA_9_port, A(8) => 
                           stackA_8_port, A(7) => stackA_7_port, A(6) => 
                           stackA_6_port, A(5) => stackA_5_port, A(4) => 
                           stackA_4_port, A(3) => stackA_3_port, A(2) => 
                           stackA_2_port, A(1) => stackA_1_port, A(0) => 
                           stackA_0_port, B(31) => stackB_31_port, B(30) => 
                           stackB_30_port, B(29) => stackB_29_port, B(28) => 
                           stackB_28_port, B(27) => stackB_27_port, B(26) => 
                           stackB_26_port, B(25) => stackB_25_port, B(24) => 
                           stackB_24_port, B(23) => stackB_23_port, B(22) => 
                           stackB_22_port, B(21) => stackB_21_port, B(20) => 
                           stackB_20_port, B(19) => stackB_19_port, B(18) => 
                           stackB_18_port, B(17) => stackB_17_port, B(16) => 
                           stackB_16_port, B(15) => stackB_15_port, B(14) => 
                           stackB_14_port, B(13) => stackB_13_port, B(12) => 
                           stackB_12_port, B(11) => stackB_11_port, B(10) => 
                           stackB_10_port, B(9) => stackB_9_port, B(8) => 
                           stackB_8_port, B(7) => stackB_7_port, B(6) => 
                           stackB_6_port, B(5) => stackB_5_port, B(4) => 
                           stackB_4_port, B(3) => stackB_3_port, B(2) => 
                           stackB_2_port, B(1) => stackB_1_port, B(0) => 
                           stackB_0_port, TC => n43, LT => N2958, GT => n_1667,
                           EQ => N2920, LE => N2956, GE => n_1668, NE => n_1669
                           );
   r610 : zpu_core_DW01_add_8 port map( A(31) => stackA_31_port, A(30) => 
                           stackA_30_port, A(29) => stackA_29_port, A(28) => 
                           stackA_28_port, A(27) => stackA_27_port, A(26) => 
                           stackA_26_port, A(25) => stackA_25_port, A(24) => 
                           stackA_24_port, A(23) => stackA_23_port, A(22) => 
                           stackA_22_port, A(21) => stackA_21_port, A(20) => 
                           stackA_20_port, A(19) => stackA_19_port, A(18) => 
                           stackA_18_port, A(17) => stackA_17_port, A(16) => 
                           stackA_16_port, A(15) => stackA_15_port, A(14) => 
                           stackA_14_port, A(13) => stackA_13_port, A(12) => 
                           stackA_12_port, A(11) => stackA_11_port, A(10) => 
                           stackA_10_port, A(9) => stackA_9_port, A(8) => 
                           stackA_8_port, A(7) => stackA_7_port, A(6) => 
                           stackA_6_port, A(5) => stackA_5_port, A(4) => 
                           stackA_4_port, A(3) => stackA_3_port, A(2) => 
                           stackA_2_port, A(1) => stackA_1_port, A(0) => 
                           stackA_0_port, B(31) => pc_31_port, B(30) => 
                           pc_30_port, B(29) => pc_29_port, B(28) => pc_28_port
                           , B(27) => pc_27_port, B(26) => pc_26_port, B(25) =>
                           pc_25_port, B(24) => pc_24_port, B(23) => pc_23_port
                           , B(22) => pc_22_port, B(21) => pc_21_port, B(20) =>
                           pc_20_port, B(19) => pc_19_port, B(18) => pc_18_port
                           , B(17) => pc_17_port, B(16) => pc_16_port, B(15) =>
                           pc_15_port, B(14) => pc_14_port, B(13) => pc_13_port
                           , B(12) => pc_12_port, B(11) => pc_11_port, B(10) =>
                           pc_10_port, B(9) => pc_9_port, B(8) => pc_8_port, 
                           B(7) => pc_7_port, B(6) => pc_6_port, B(5) => 
                           pc_5_port, B(4) => pc_4_port, B(3) => pc_3_port, 
                           B(2) => pc_2_port, B(1) => pc_1_port, B(0) => 
                           pc_0_port, CI => n44, SUM(31) => N2538, SUM(30) => 
                           N2537, SUM(29) => N2536, SUM(28) => N2535, SUM(27) 
                           => N2534, SUM(26) => N2533, SUM(25) => N2532, 
                           SUM(24) => N2531, SUM(23) => N2530, SUM(22) => N2529
                           , SUM(21) => N2528, SUM(20) => N2527, SUM(19) => 
                           N2526, SUM(18) => N2525, SUM(17) => N2524, SUM(16) 
                           => N2523, SUM(15) => N2522, SUM(14) => N2521, 
                           SUM(13) => N2520, SUM(12) => N2519, SUM(11) => N2518
                           , SUM(10) => N2517, SUM(9) => N2516, SUM(8) => N2515
                           , SUM(7) => N2514, SUM(6) => N2513, SUM(5) => N2512,
                           SUM(4) => N2511, SUM(3) => N2510, SUM(2) => N2509, 
                           SUM(1) => N2508, SUM(0) => N2507, CO => n_1670);
   r609 : zpu_core_DW01_add_9 port map( A(29) => sp_31_port, A(28) => 
                           sp_30_port, A(27) => sp_29_port, A(26) => sp_28_port
                           , A(25) => sp_27_port, A(24) => sp_26_port, A(23) =>
                           sp_25_port, A(22) => sp_24_port, A(21) => sp_23_port
                           , A(20) => sp_22_port, A(19) => sp_21_port, A(18) =>
                           sp_20_port, A(17) => sp_19_port, A(16) => sp_18_port
                           , A(15) => sp_17_port, A(14) => sp_16_port, A(13) =>
                           sp_15_port, A(12) => sp_14_port, A(11) => sp_13_port
                           , A(10) => sp_12_port, A(9) => sp_11_port, A(8) => 
                           sp_10_port, A(7) => sp_9_port, A(6) => sp_8_port, 
                           A(5) => sp_7_port, A(4) => sp_6_port, A(3) => 
                           sp_5_port, A(2) => sp_4_port, A(1) => sp_3_port, 
                           A(0) => sp_2_port, B(29) => n45, B(28) => n45, B(27)
                           => n45, B(26) => n45, B(25) => n45, B(24) => n45, 
                           B(23) => n45, B(22) => n45, B(21) => n45, B(20) => 
                           n45, B(19) => n45, B(18) => n45, B(17) => n45, B(16)
                           => n45, B(15) => n45, B(14) => n45, B(13) => n45, 
                           B(12) => n45, B(11) => n45, B(10) => n45, B(9) => 
                           n45, B(8) => n45, B(7) => n45, B(6) => n45, B(5) => 
                           n45, B(4) => n6018, B(3) => n11273, B(2) => n11272, 
                           B(1) => n11271, B(0) => n11270, CI => n45, SUM(29) 
                           => N1628, SUM(28) => N1627, SUM(27) => N1626, 
                           SUM(26) => N1625, SUM(25) => N1624, SUM(24) => N1623
                           , SUM(23) => N1622, SUM(22) => N1621, SUM(21) => 
                           N1620, SUM(20) => N1619, SUM(19) => N1618, SUM(18) 
                           => N1617, SUM(17) => N1616, SUM(16) => N1615, 
                           SUM(15) => N1614, SUM(14) => N1613, SUM(13) => N1612
                           , SUM(12) => N1611, SUM(11) => N1610, SUM(10) => 
                           N1609, SUM(9) => N1608, SUM(8) => N1607, SUM(7) => 
                           N1606, SUM(6) => N1605, SUM(5) => N1604, SUM(4) => 
                           N1603, SUM(3) => N1602, SUM(2) => N1601, SUM(1) => 
                           N1600, SUM(0) => N1599, CO => n_1671);
   r604 : zpu_core_DW01_inc_1 port map( A(31) => pc_31_port, A(30) => 
                           pc_30_port, A(29) => pc_29_port, A(28) => pc_28_port
                           , A(27) => pc_27_port, A(26) => pc_26_port, A(25) =>
                           pc_25_port, A(24) => pc_24_port, A(23) => pc_23_port
                           , A(22) => pc_22_port, A(21) => pc_21_port, A(20) =>
                           pc_20_port, A(19) => pc_19_port, A(18) => pc_18_port
                           , A(17) => pc_17_port, A(16) => pc_16_port, A(15) =>
                           pc_15_port, A(14) => pc_14_port, A(13) => pc_13_port
                           , A(12) => pc_12_port, A(11) => pc_11_port, A(10) =>
                           pc_10_port, A(9) => pc_9_port, A(8) => pc_8_port, 
                           A(7) => pc_7_port, A(6) => pc_6_port, A(5) => 
                           pc_5_port, A(4) => pc_4_port, A(3) => pc_3_port, 
                           A(2) => pc_2_port, A(1) => pc_1_port, A(0) => 
                           pc_0_port, SUM(31) => n46, SUM(30) => n47, SUM(29) 
                           => n48, SUM(28) => n49, SUM(27) => n50, SUM(26) => 
                           n51, SUM(25) => n52, SUM(24) => n53, SUM(23) => n54,
                           SUM(22) => n55, SUM(21) => n56, SUM(20) => n57, 
                           SUM(19) => n58, SUM(18) => n59, SUM(17) => n60, 
                           SUM(16) => n61, SUM(15) => n62, SUM(14) => n63, 
                           SUM(13) => n64, SUM(12) => n65, SUM(11) => n66, 
                           SUM(10) => n67, SUM(9) => n68, SUM(8) => n69, SUM(7)
                           => n70, SUM(6) => n71, SUM(5) => n72, SUM(4) => n73,
                           SUM(3) => n74, SUM(2) => n75, SUM(1) => n76, SUM(0) 
                           => n_1672);
   U5663 : GTECH_NAND2 port map( A => n6019, B => n6020, Z => n11145);
   U5664 : GTECH_NOR2 port map( A => n6021, B => n6022, Z => n6020);
   U5665 : GTECH_NOR2 port map( A => n6023, B => n6024, Z => n6022);
   U5666 : GTECH_NOR2 port map( A => n6025, B => n6026, Z => n6023);
   U5667 : GTECH_NAND2 port map( A => n6027, B => n6028, Z => n6026);
   U5668 : GTECH_NAND2 port map( A => n6029, B => n6030, Z => n6028);
   U5669 : GTECH_NAND2 port map( A => n6031, B => n6032, Z => n6027);
   U5670 : GTECH_NOR2 port map( A => n6033, B => n6034, Z => n6025);
   U5671 : GTECH_NOT port map( A => n6035, Z => n6033);
   U5672 : GTECH_NOR2 port map( A => n6036, B => n6037, Z => n6021);
   U5673 : GTECH_NAND2 port map( A => n6038, B => n6039, Z => n6037);
   U5674 : GTECH_NAND2 port map( A => n6040, B => n6041, Z => n6039);
   U5675 : GTECH_NAND2 port map( A => n6042, B => n6043, Z => n6040);
   U5676 : GTECH_NAND2 port map( A => n6044, B => n6045, Z => n6043);
   U5677 : GTECH_NAND2 port map( A => n6046, B => n6047, Z => n6045);
   U5678 : GTECH_NAND2 port map( A => n6048, B => n6049, Z => n6047);
   U5679 : GTECH_NAND2 port map( A => n6050, B => n11138, Z => n6049);
   U5680 : GTECH_NOR2 port map( A => n6051, B => n6052, Z => n6048);
   U5681 : GTECH_NOR2 port map( A => n6053, B => n6054, Z => n6052);
   U5682 : GTECH_NOR2 port map( A => n11137, B => n11135, Z => n6053);
   U5683 : GTECH_NOR2 port map( A => n11136, B => n6055, Z => n6051);
   U5684 : GTECH_NOT port map( A => n6056, Z => n6055);
   U5685 : GTECH_NOR2 port map( A => n6050, B => n11138, Z => n6056);
   U5686 : GTECH_NOR2 port map( A => n6057, B => n6058, Z => n6044);
   U5687 : GTECH_NOR2 port map( A => n6059, B => n6060, Z => n6058);
   U5688 : GTECH_NAND2 port map( A => n6061, B => n6062, Z => n6059);
   U5689 : GTECH_NOR2 port map( A => n6063, B => n6064, Z => n6061);
   U5690 : GTECH_NOT port map( A => n6065, Z => n6064);
   U5691 : GTECH_NAND2 port map( A => n11141, B => n6066, Z => n6042);
   U5692 : GTECH_NAND2 port map( A => n6067, B => n6068, Z => n6038);
   U5693 : GTECH_NOR2 port map( A => n6069, B => n6070, Z => n6019);
   U5694 : GTECH_NOR2 port map( A => n6071, B => n6072, Z => n6070);
   U5695 : GTECH_NOR2 port map( A => n6073, B => n6074, Z => n6069);
   U5696 : GTECH_NOR2 port map( A => n6075, B => n6076, Z => n6073);
   U5697 : GTECH_NAND2 port map( A => n6077, B => n6078, Z => n6076);
   U5698 : GTECH_NAND2 port map( A => n11099, B => n6031, Z => n6078);
   U5699 : GTECH_NAND2 port map( A => n11101, B => n6079, Z => n6077);
   U5700 : GTECH_NOR2 port map( A => n6080, B => n6081, Z => n6075);
   U5701 : GTECH_NOT port map( A => n11100, Z => n6081);
   U5702 : GTECH_NAND2 port map( A => n6082, B => n6083, Z => n11146);
   U5703 : GTECH_NOR2 port map( A => n6084, B => n6085, Z => n6083);
   U5704 : GTECH_NOR2 port map( A => n6086, B => n6024, Z => n6085);
   U5705 : GTECH_NOR2 port map( A => n6087, B => n6088, Z => n6086);
   U5706 : GTECH_NAND2 port map( A => n6089, B => n6090, Z => n6088);
   U5707 : GTECH_NAND2 port map( A => n6029, B => n6091, Z => n6090);
   U5708 : GTECH_NAND2 port map( A => n6031, B => n6092, Z => n6089);
   U5709 : GTECH_NOT port map( A => n6093, Z => n6087);
   U5710 : GTECH_NAND2 port map( A => n6094, B => n6079, Z => n6093);
   U5711 : GTECH_NOR2 port map( A => n6036, B => n6095, Z => n6084);
   U5712 : GTECH_NAND2 port map( A => n6096, B => n6097, Z => n6095);
   U5713 : GTECH_NAND2 port map( A => n6098, B => n6099, Z => n6097);
   U5714 : GTECH_NAND2 port map( A => n6100, B => n6066, Z => n6099);
   U5715 : GTECH_NAND2 port map( A => n6101, B => n6102, Z => n6100);
   U5716 : GTECH_NAND2 port map( A => n6103, B => n11139, Z => n6102);
   U5717 : GTECH_NOR2 port map( A => n11140, B => n6057, Z => n6103);
   U5718 : GTECH_NOT port map( A => n6104, Z => n6057);
   U5719 : GTECH_NAND2 port map( A => n6105, B => n6101, Z => n6098);
   U5720 : GTECH_NOT port map( A => n6106, Z => n6105);
   U5721 : GTECH_NOR2 port map( A => n6107, B => n6108, Z => n6106);
   U5722 : GTECH_NOT port map( A => n6109, Z => n6108);
   U5723 : GTECH_NAND2 port map( A => n6046, B => n6110, Z => n6109);
   U5724 : GTECH_NAND2 port map( A => n6111, B => n6112, Z => n6110);
   U5725 : GTECH_NAND2 port map( A => n6113, B => n6114, Z => n6112);
   U5726 : GTECH_NAND2 port map( A => n11137, B => n6115, Z => n6113);
   U5727 : GTECH_NAND2 port map( A => n11135, B => n6054, Z => n6115);
   U5728 : GTECH_NOR2 port map( A => n6116, B => n6117, Z => n6111);
   U5729 : GTECH_NOR2 port map( A => n6118, B => n6119, Z => n6107);
   U5730 : GTECH_NAND2 port map( A => n6120, B => n6121, Z => n6119);
   U5731 : GTECH_NOT port map( A => n6122, Z => n6121);
   U5732 : GTECH_NAND2 port map( A => n6062, B => n6123, Z => n6122);
   U5733 : GTECH_NAND2 port map( A => n6066, B => n6124, Z => n6118);
   U5734 : GTECH_NOR2 port map( A => n6125, B => n6126, Z => n6082);
   U5735 : GTECH_NOR2 port map( A => n6071, B => n6127, Z => n6126);
   U5736 : GTECH_NOR2 port map( A => n6128, B => n6074, Z => n6125);
   U5737 : GTECH_NOR2 port map( A => n6129, B => n6130, Z => n6128);
   U5738 : GTECH_NAND2 port map( A => n6131, B => n6132, Z => n6130);
   U5739 : GTECH_NAND2 port map( A => n11096, B => n6079, Z => n6132);
   U5740 : GTECH_NAND2 port map( A => n11095, B => n6133, Z => n6131);
   U5741 : GTECH_NAND2 port map( A => n6134, B => n6135, Z => n6129);
   U5742 : GTECH_NAND2 port map( A => n11098, B => n6029, Z => n6135);
   U5743 : GTECH_NAND2 port map( A => n11097, B => n6031, Z => n6134);
   U5744 : GTECH_NAND2 port map( A => n6136, B => n6137, Z => n11147);
   U5745 : GTECH_NOR2 port map( A => n6138, B => n6139, Z => n6137);
   U5746 : GTECH_NOR2 port map( A => n6140, B => n6024, Z => n6139);
   U5747 : GTECH_NOT port map( A => n6141, Z => n6140);
   U5748 : GTECH_NAND2 port map( A => n6142, B => n6143, Z => n6141);
   U5749 : GTECH_NOR2 port map( A => n6144, B => n6145, Z => n6143);
   U5750 : GTECH_NOR2 port map( A => n6146, B => n6147, Z => n6145);
   U5751 : GTECH_NOR2 port map( A => n6148, B => n6149, Z => n6144);
   U5752 : GTECH_NAND2 port map( A => n6079, B => n6150, Z => n6142);
   U5753 : GTECH_NOR2 port map( A => n6036, B => n6151, Z => n6138);
   U5754 : GTECH_NAND2 port map( A => n6152, B => n6101, Z => n6151);
   U5755 : GTECH_NAND2 port map( A => n6153, B => n6154, Z => n6152);
   U5756 : GTECH_NOR2 port map( A => n6155, B => n6156, Z => n6154);
   U5757 : GTECH_NOT port map( A => n6157, Z => n6156);
   U5758 : GTECH_NAND2 port map( A => n6158, B => n6159, Z => n6157);
   U5759 : GTECH_NOR2 port map( A => n6116, B => n11138, Z => n6159);
   U5760 : GTECH_NOT port map( A => n6160, Z => n6116);
   U5761 : GTECH_NOR2 port map( A => n6161, B => n6162, Z => n6153);
   U5762 : GTECH_NOT port map( A => n6163, Z => n6162);
   U5763 : GTECH_NOR2 port map( A => n6164, B => n6165, Z => n6161);
   U5764 : GTECH_NAND2 port map( A => n6117, B => n11137, Z => n6165);
   U5765 : GTECH_NOR2 port map( A => n6166, B => n6167, Z => n6136);
   U5766 : GTECH_NOR2 port map( A => n6071, B => n6168, Z => n6167);
   U5767 : GTECH_NOR2 port map( A => n6169, B => n6074, Z => n6166);
   U5768 : GTECH_NOR2 port map( A => n6170, B => n6171, Z => n6169);
   U5769 : GTECH_NAND2 port map( A => n6172, B => n6173, Z => n6171);
   U5770 : GTECH_NAND2 port map( A => n11045, B => n6079, Z => n6173);
   U5771 : GTECH_NAND2 port map( A => n11044, B => n6133, Z => n6172);
   U5772 : GTECH_NAND2 port map( A => n6174, B => n6175, Z => n6170);
   U5773 : GTECH_NAND2 port map( A => n11047, B => n6029, Z => n6175);
   U5774 : GTECH_NAND2 port map( A => n11046, B => n6031, Z => n6174);
   U5775 : GTECH_NAND2 port map( A => n6176, B => n6177, Z => n11148);
   U5776 : GTECH_NAND2 port map( A => n11105, B => n6178, Z => n6177);
   U5777 : GTECH_NOR2 port map( A => n6179, B => n6180, Z => n6176);
   U5778 : GTECH_NOR2 port map( A => n6181, B => n6074, Z => n6180);
   U5779 : GTECH_NOR2 port map( A => n6182, B => n6183, Z => n6181);
   U5780 : GTECH_NAND2 port map( A => n6184, B => n6185, Z => n6183);
   U5781 : GTECH_NAND2 port map( A => n11042, B => n6079, Z => n6185);
   U5782 : GTECH_NAND2 port map( A => n11041, B => n6133, Z => n6184);
   U5783 : GTECH_NAND2 port map( A => n6186, B => n6187, Z => n6182);
   U5784 : GTECH_NAND2 port map( A => n11108, B => n6029, Z => n6187);
   U5785 : GTECH_NAND2 port map( A => n11043, B => n6031, Z => n6186);
   U5786 : GTECH_NOR2 port map( A => n6188, B => n6024, Z => n6179);
   U5787 : GTECH_NOR2 port map( A => n6189, B => n6190, Z => n6188);
   U5788 : GTECH_NAND2 port map( A => n6191, B => n6192, Z => n6190);
   U5789 : GTECH_NAND2 port map( A => n6031, B => n6193, Z => n6192);
   U5790 : GTECH_NAND2 port map( A => n6079, B => n6194, Z => n6191);
   U5791 : GTECH_NAND2 port map( A => n6195, B => n6196, Z => n6189);
   U5792 : GTECH_NAND2 port map( A => n6133, B => n6197, Z => n6196);
   U5793 : GTECH_NOT port map( A => n6198, Z => n6197);
   U5794 : GTECH_NOR2 port map( A => n6199, B => n6200, Z => n6198);
   U5795 : GTECH_NAND2 port map( A => n6201, B => n6202, Z => n6200);
   U5796 : GTECH_NOR2 port map( A => n6203, B => n6204, Z => n6202);
   U5797 : GTECH_NOT port map( A => n6205, Z => n6204);
   U5798 : GTECH_NOR2 port map( A => n6206, B => n6060, Z => n6203);
   U5799 : GTECH_NAND2 port map( A => n6207, B => n6124, Z => n6060);
   U5800 : GTECH_NOT port map( A => n6208, Z => n6207);
   U5801 : GTECH_NOR2 port map( A => n6120, B => n6114, Z => n6208);
   U5802 : GTECH_NAND2 port map( A => n6163, B => n6209, Z => n6206);
   U5803 : GTECH_NAND2 port map( A => n6158, B => n6210, Z => n6201);
   U5804 : GTECH_NOR2 port map( A => n6160, B => n6114, Z => n6210);
   U5805 : GTECH_NOT port map( A => n6211, Z => n6199);
   U5806 : GTECH_NOR2 port map( A => n6212, B => n6213, Z => n6211);
   U5807 : GTECH_NAND2 port map( A => n6096, B => n6214, Z => n6213);
   U5808 : GTECH_NAND2 port map( A => n6215, B => n6046, Z => n6214);
   U5809 : GTECH_NOR2 port map( A => n6216, B => n6217, Z => n6215);
   U5810 : GTECH_NAND2 port map( A => n6068, B => n6104, Z => n6096);
   U5811 : GTECH_NOT port map( A => n6041, Z => n6068);
   U5812 : GTECH_NAND2 port map( A => n11141, B => n6218, Z => n6041);
   U5813 : GTECH_NAND2 port map( A => n6029, B => n6219, Z => n6195);
   U5814 : GTECH_NAND2 port map( A => n6220, B => n6221, Z => n11149);
   U5815 : GTECH_NAND2 port map( A => reset_b, B => n6222, Z => n6221);
   U5816 : GTECH_NAND2 port map( A => n6223, B => n6224, Z => n6222);
   U5817 : GTECH_NOT port map( A => n6225, Z => n6224);
   U5818 : GTECH_NOR2 port map( A => n6226, B => n6227, Z => n6225);
   U5819 : GTECH_NAND2 port map( A => n6228, B => enable, Z => n6226);
   U5820 : GTECH_NAND2 port map( A => n11094, B => n6229, Z => n6223);
   U5821 : GTECH_NAND2 port map( A => n6230, B => n6228, Z => n6229);
   U5822 : GTECH_NAND2 port map( A => n6231, B => n6232, Z => n6228);
   U5823 : GTECH_NAND2 port map( A => n6233, B => n11094, Z => n6220);
   U5824 : GTECH_NAND2 port map( A => n6234, B => n6235, Z => n11150);
   U5825 : GTECH_NAND2 port map( A => N3120, B => n6236, Z => n6235);
   U5826 : GTECH_NOR2 port map( A => n6237, B => n6238, Z => n6234);
   U5827 : GTECH_NOT port map( A => n6239, Z => n6238);
   U5828 : GTECH_NAND2 port map( A => n6240, B => n11019, Z => n6239);
   U5829 : GTECH_NOR2 port map( A => n6240, B => n6241, Z => n6237);
   U5830 : GTECH_NAND2 port map( A => reset_b, B => n6242, Z => n6241);
   U5831 : GTECH_NAND2 port map( A => n6243, B => n6244, Z => n6242);
   U5832 : GTECH_NAND2 port map( A => n6245, B => n6246, Z => n6244);
   U5833 : GTECH_NAND2 port map( A => n6247, B => n6248, Z => n6246);
   U5834 : GTECH_NAND2 port map( A => N2952, B => n6249, Z => n6248);
   U5835 : GTECH_NAND2 port map( A => N2956, B => n6250, Z => n6247);
   U5836 : GTECH_NOT port map( A => n6251, Z => n6243);
   U5837 : GTECH_NOR2 port map( A => n6252, B => n6253, Z => n6251);
   U5838 : GTECH_NOR2 port map( A => n6254, B => n6255, Z => n6252);
   U5839 : GTECH_NAND2 port map( A => n6256, B => n6257, Z => n6255);
   U5840 : GTECH_NAND2 port map( A => N2920, B => n6258, Z => n6257);
   U5841 : GTECH_NAND2 port map( A => N2958, B => n6259, Z => n6256);
   U5842 : GTECH_NOT port map( A => n6260, Z => n6254);
   U5843 : GTECH_NAND2 port map( A => N2954, B => n6250, Z => n6260);
   U5844 : GTECH_NAND2 port map( A => n6261, B => n6262, Z => n11151);
   U5845 : GTECH_NAND2 port map( A => n6263, B => n6091, Z => n6262);
   U5846 : GTECH_NAND2 port map( A => n6264, B => n6265, Z => n6091);
   U5847 : GTECH_NAND2 port map( A => n6266, B => n6267, Z => n6265);
   U5848 : GTECH_NOR2 port map( A => n11118, B => n6268, Z => n6266);
   U5849 : GTECH_NOR2 port map( A => n6269, B => n6270, Z => n6268);
   U5850 : GTECH_NOR2 port map( A => n6271, B => n6272, Z => n6270);
   U5851 : GTECH_NOR2 port map( A => n6273, B => n6274, Z => n6272);
   U5852 : GTECH_NAND2 port map( A => n6275, B => n6276, Z => n6274);
   U5853 : GTECH_NOT port map( A => n6277, Z => n6275);
   U5854 : GTECH_NOR2 port map( A => n6278, B => n6279, Z => n6277);
   U5855 : GTECH_NAND2 port map( A => n6280, B => n6281, Z => n6278);
   U5856 : GTECH_NOR2 port map( A => n6282, B => n6283, Z => n6273);
   U5857 : GTECH_NOR2 port map( A => n6284, B => n6285, Z => n6269);
   U5858 : GTECH_NAND2 port map( A => n6286, B => n6276, Z => n6285);
   U5859 : GTECH_NAND2 port map( A => n6287, B => n6288, Z => n6286);
   U5860 : GTECH_NOR2 port map( A => n6289, B => n6290, Z => n6287);
   U5861 : GTECH_NOR2 port map( A => n11114, B => n6291, Z => n6290);
   U5862 : GTECH_NOR2 port map( A => n6292, B => n6293, Z => n6291);
   U5863 : GTECH_NOR2 port map( A => n11112, B => n6294, Z => n6292);
   U5864 : GTECH_NOR2 port map( A => n6295, B => n6296, Z => n6289);
   U5865 : GTECH_NAND2 port map( A => n6297, B => n6282, Z => n6264);
   U5866 : GTECH_NAND2 port map( A => n6298, B => n11097, Z => n6261);
   U5867 : GTECH_NAND2 port map( A => n6299, B => n6300, Z => n11152);
   U5868 : GTECH_NAND2 port map( A => n6263, B => n6030, Z => n6300);
   U5869 : GTECH_NAND2 port map( A => n6301, B => n6302, Z => n6030);
   U5870 : GTECH_NAND2 port map( A => n6297, B => n6303, Z => n6302);
   U5871 : GTECH_NOT port map( A => n6267, Z => n6297);
   U5872 : GTECH_NAND2 port map( A => n6304, B => n6267, Z => n6301);
   U5873 : GTECH_NOR2 port map( A => n11118, B => n6305, Z => n6304);
   U5874 : GTECH_NOR2 port map( A => n6306, B => n6307, Z => n6305);
   U5875 : GTECH_NAND2 port map( A => n6308, B => n6309, Z => n6307);
   U5876 : GTECH_NAND2 port map( A => n6310, B => n6311, Z => n6309);
   U5877 : GTECH_NOT port map( A => n6312, Z => n6311);
   U5878 : GTECH_NAND2 port map( A => n6313, B => n6314, Z => n6312);
   U5879 : GTECH_NOR2 port map( A => n6315, B => n6279, Z => n6310);
   U5880 : GTECH_NAND2 port map( A => n6316, B => n6282, Z => n6308);
   U5881 : GTECH_NAND2 port map( A => n6317, B => n6318, Z => n6306);
   U5882 : GTECH_NAND2 port map( A => n6319, B => n6276, Z => n6318);
   U5883 : GTECH_NOR2 port map( A => n6320, B => n6284, Z => n6319);
   U5884 : GTECH_NOR2 port map( A => n6321, B => n6322, Z => n6320);
   U5885 : GTECH_NAND2 port map( A => n6323, B => n6324, Z => n6322);
   U5886 : GTECH_NAND2 port map( A => n6325, B => n6326, Z => n6321);
   U5887 : GTECH_NAND2 port map( A => n11113, B => n6327, Z => n6326);
   U5888 : GTECH_NAND2 port map( A => n6295, B => n6328, Z => n6327);
   U5889 : GTECH_NAND2 port map( A => n11114, B => n11111, Z => n6328);
   U5890 : GTECH_NAND2 port map( A => n6329, B => n6293, Z => n6325);
   U5891 : GTECH_NOR2 port map( A => n11112, B => n11114, Z => n6329);
   U5892 : GTECH_NAND2 port map( A => n6271, B => n11117, Z => n6317);
   U5893 : GTECH_NAND2 port map( A => n6298, B => n11099, Z => n6299);
   U5894 : GTECH_NAND2 port map( A => n6330, B => n6331, Z => n11153);
   U5895 : GTECH_NAND2 port map( A => n6263, B => n6219, Z => n6331);
   U5896 : GTECH_NAND2 port map( A => n6332, B => n6333, Z => n6219);
   U5897 : GTECH_NOR2 port map( A => n6334, B => n6335, Z => n6333);
   U5898 : GTECH_NAND2 port map( A => n6336, B => n6337, Z => n6335);
   U5899 : GTECH_NAND2 port map( A => n6338, B => n6339, Z => n6336);
   U5900 : GTECH_NOR2 port map( A => n6315, B => n6340, Z => n6339);
   U5901 : GTECH_NOR2 port map( A => n6280, B => n6296, Z => n6315);
   U5902 : GTECH_NOR2 port map( A => n6341, B => n6342, Z => n6338);
   U5903 : GTECH_NAND2 port map( A => n6343, B => n6281, Z => n6342);
   U5904 : GTECH_NOR2 port map( A => n6344, B => n6284, Z => n6334);
   U5905 : GTECH_NOT port map( A => n6345, Z => n6284);
   U5906 : GTECH_NOR2 port map( A => n6346, B => n6347, Z => n6344);
   U5907 : GTECH_NOR2 port map( A => n6288, B => n6348, Z => n6347);
   U5908 : GTECH_NOR2 port map( A => n6293, B => n6349, Z => n6346);
   U5909 : GTECH_NAND2 port map( A => n6350, B => n6296, Z => n6349);
   U5910 : GTECH_NOR2 port map( A => n6351, B => n6352, Z => n6332);
   U5911 : GTECH_NOR2 port map( A => n6282, B => n6267, Z => n6351);
   U5912 : GTECH_NAND2 port map( A => n6353, B => n11117, Z => n6267);
   U5913 : GTECH_NOR2 port map( A => n11116, B => n11118, Z => n6353);
   U5914 : GTECH_NAND2 port map( A => n6298, B => n11043, Z => n6330);
   U5915 : GTECH_NAND2 port map( A => n6354, B => n6355, Z => n11154);
   U5916 : GTECH_NAND2 port map( A => n6263, B => n6356, Z => n6355);
   U5917 : GTECH_NAND2 port map( A => n11038, B => n6298, Z => n6354);
   U5918 : GTECH_NAND2 port map( A => n6357, B => n6358, Z => n11155);
   U5919 : GTECH_NOT port map( A => n6359, Z => n6358);
   U5920 : GTECH_NOR2 port map( A => n6360, B => n6361, Z => n6359);
   U5921 : GTECH_NAND2 port map( A => n11102, B => n6298, Z => n6357);
   U5922 : GTECH_NAND2 port map( A => n6362, B => n6363, Z => n11156);
   U5923 : GTECH_NAND2 port map( A => n6263, B => n6364, Z => n6363);
   U5924 : GTECH_NOT port map( A => n6146, Z => n6364);
   U5925 : GTECH_NAND2 port map( A => n6365, B => n6366, Z => n6146);
   U5926 : GTECH_NAND2 port map( A => n6367, B => n6368, Z => n6366);
   U5927 : GTECH_NAND2 port map( A => n6369, B => n6370, Z => n6367);
   U5928 : GTECH_NOT port map( A => n6371, Z => n6370);
   U5929 : GTECH_NAND2 port map( A => n6348, B => n6372, Z => n6371);
   U5930 : GTECH_NOR2 port map( A => n6373, B => n11117, Z => n6372);
   U5931 : GTECH_NOR2 port map( A => n6316, B => n6374, Z => n6369);
   U5932 : GTECH_NOR2 port map( A => n11114, B => n6375, Z => n6374);
   U5933 : GTECH_NOR2 port map( A => n6376, B => n11113, Z => n6375);
   U5934 : GTECH_NOR2 port map( A => n11118, B => n6377, Z => n6365);
   U5935 : GTECH_NOR2 port map( A => n6279, B => n6340, Z => n6377);
   U5936 : GTECH_NAND2 port map( A => n6298, B => n11046, Z => n6362);
   U5937 : GTECH_NAND2 port map( A => n6378, B => n6379, Z => n11157);
   U5938 : GTECH_NAND2 port map( A => n6263, B => n6092, Z => n6379);
   U5939 : GTECH_NAND2 port map( A => n6380, B => n6381, Z => n6092);
   U5940 : GTECH_NAND2 port map( A => n6382, B => n6383, Z => n6381);
   U5941 : GTECH_NOR2 port map( A => n11126, B => n6384, Z => n6382);
   U5942 : GTECH_NOR2 port map( A => n6385, B => n6386, Z => n6384);
   U5943 : GTECH_NOR2 port map( A => n6387, B => n6388, Z => n6386);
   U5944 : GTECH_NOR2 port map( A => n6389, B => n6390, Z => n6388);
   U5945 : GTECH_NAND2 port map( A => n6391, B => n6392, Z => n6390);
   U5946 : GTECH_NOT port map( A => n6393, Z => n6391);
   U5947 : GTECH_NOR2 port map( A => n6394, B => n6395, Z => n6393);
   U5948 : GTECH_NAND2 port map( A => n6396, B => n6397, Z => n6395);
   U5949 : GTECH_NAND2 port map( A => n6398, B => n6399, Z => n6394);
   U5950 : GTECH_NOR2 port map( A => n6400, B => n6401, Z => n6389);
   U5951 : GTECH_NOR2 port map( A => n6402, B => n6403, Z => n6385);
   U5952 : GTECH_NAND2 port map( A => n6404, B => n6392, Z => n6403);
   U5953 : GTECH_NAND2 port map( A => n6405, B => n6406, Z => n6404);
   U5954 : GTECH_NAND2 port map( A => n6407, B => n6408, Z => n6406);
   U5955 : GTECH_NAND2 port map( A => n11121, B => n6409, Z => n6407);
   U5956 : GTECH_NAND2 port map( A => n11119, B => n6410, Z => n6409);
   U5957 : GTECH_NOR2 port map( A => n6411, B => n6412, Z => n6405);
   U5958 : GTECH_NAND2 port map( A => n6413, B => n6400, Z => n6380);
   U5959 : GTECH_NAND2 port map( A => n6298, B => n11096, Z => n6378);
   U5960 : GTECH_NAND2 port map( A => n6414, B => n6415, Z => n11158);
   U5961 : GTECH_NAND2 port map( A => n6263, B => n6032, Z => n6415);
   U5962 : GTECH_NAND2 port map( A => n6416, B => n6417, Z => n6032);
   U5963 : GTECH_NAND2 port map( A => n6413, B => n6418, Z => n6417);
   U5964 : GTECH_NOT port map( A => n6387, Z => n6418);
   U5965 : GTECH_NOT port map( A => n6383, Z => n6413);
   U5966 : GTECH_NAND2 port map( A => n6419, B => n6383, Z => n6416);
   U5967 : GTECH_NOR2 port map( A => n11126, B => n6420, Z => n6419);
   U5968 : GTECH_NOR2 port map( A => n6421, B => n6422, Z => n6420);
   U5969 : GTECH_NOT port map( A => n6423, Z => n6422);
   U5970 : GTECH_NOR2 port map( A => n6424, B => n6425, Z => n6423);
   U5971 : GTECH_NOR2 port map( A => n6426, B => n6427, Z => n6425);
   U5972 : GTECH_NAND2 port map( A => n6428, B => n6429, Z => n6426);
   U5973 : GTECH_NOR2 port map( A => n6401, B => n6430, Z => n6424);
   U5974 : GTECH_NAND2 port map( A => n6431, B => n6432, Z => n6421);
   U5975 : GTECH_NAND2 port map( A => n6433, B => n6392, Z => n6432);
   U5976 : GTECH_NOR2 port map( A => n6434, B => n6402, Z => n6433);
   U5977 : GTECH_NOR2 port map( A => n6435, B => n6436, Z => n6434);
   U5978 : GTECH_NAND2 port map( A => n6437, B => n6438, Z => n6436);
   U5979 : GTECH_NAND2 port map( A => n11119, B => n6439, Z => n6437);
   U5980 : GTECH_NAND2 port map( A => n6410, B => n6440, Z => n6439);
   U5981 : GTECH_NAND2 port map( A => n11122, B => n11121, Z => n6440);
   U5982 : GTECH_NAND2 port map( A => n6441, B => n6442, Z => n6435);
   U5983 : GTECH_NAND2 port map( A => n6443, B => n6410, Z => n6442);
   U5984 : GTECH_NAND2 port map( A => n11120, B => n11121, Z => n6441);
   U5985 : GTECH_NAND2 port map( A => n6387, B => n11125, Z => n6431);
   U5986 : GTECH_NAND2 port map( A => n6298, B => n11101, Z => n6414);
   U5987 : GTECH_NAND2 port map( A => n6444, B => n6445, Z => n11159);
   U5988 : GTECH_NAND2 port map( A => n6263, B => n6193, Z => n6445);
   U5989 : GTECH_NAND2 port map( A => n6446, B => n6447, Z => n6193);
   U5990 : GTECH_NOR2 port map( A => n6448, B => n6449, Z => n6447);
   U5991 : GTECH_NAND2 port map( A => n6450, B => n6451, Z => n6449);
   U5992 : GTECH_NOT port map( A => n6452, Z => n6450);
   U5993 : GTECH_NOR2 port map( A => n6453, B => n6454, Z => n6452);
   U5994 : GTECH_NAND2 port map( A => n6429, B => n6455, Z => n6454);
   U5995 : GTECH_NOR2 port map( A => n6387, B => n6456, Z => n6455);
   U5996 : GTECH_NOT port map( A => n6457, Z => n6429);
   U5997 : GTECH_NOR2 port map( A => n6396, B => n6408, Z => n6457);
   U5998 : GTECH_NAND2 port map( A => n6399, B => n6458, Z => n6453);
   U5999 : GTECH_NOR2 port map( A => n6402, B => n6459, Z => n6448);
   U6000 : GTECH_NAND2 port map( A => n6460, B => n6461, Z => n6459);
   U6001 : GTECH_NAND2 port map( A => n11121, B => n6462, Z => n6461);
   U6002 : GTECH_NAND2 port map( A => n6463, B => n6408, Z => n6462);
   U6003 : GTECH_NAND2 port map( A => n6464, B => n6465, Z => n6460);
   U6004 : GTECH_NAND2 port map( A => n6412, B => n11122, Z => n6464);
   U6005 : GTECH_NOT port map( A => n6466, Z => n6412);
   U6006 : GTECH_NOR2 port map( A => n6467, B => n6468, Z => n6446);
   U6007 : GTECH_NOR2 port map( A => n6400, B => n6383, Z => n6467);
   U6008 : GTECH_NAND2 port map( A => n6469, B => n11125, Z => n6383);
   U6009 : GTECH_NOR2 port map( A => n11124, B => n11126, Z => n6469);
   U6010 : GTECH_NAND2 port map( A => n6298, B => n11042, Z => n6444);
   U6011 : GTECH_NAND2 port map( A => n6470, B => n6471, Z => n11160);
   U6012 : GTECH_NAND2 port map( A => n6263, B => n6472, Z => n6471);
   U6013 : GTECH_NAND2 port map( A => n11040, B => n6298, Z => n6470);
   U6014 : GTECH_NAND2 port map( A => n6473, B => n6474, Z => n11161);
   U6015 : GTECH_NAND2 port map( A => n6475, B => n6263, Z => n6474);
   U6016 : GTECH_NAND2 port map( A => n11104, B => n6298, Z => n6473);
   U6017 : GTECH_NAND2 port map( A => n6476, B => n6477, Z => n11162);
   U6018 : GTECH_NAND2 port map( A => n6263, B => n6478, Z => n6477);
   U6019 : GTECH_NOT port map( A => n6148, Z => n6478);
   U6020 : GTECH_NAND2 port map( A => n6479, B => n6480, Z => n6148);
   U6021 : GTECH_NAND2 port map( A => n6481, B => n6482, Z => n6480);
   U6022 : GTECH_NAND2 port map( A => n6483, B => n6484, Z => n6481);
   U6023 : GTECH_NOR2 port map( A => n11125, B => n6485, Z => n6484);
   U6024 : GTECH_NOR2 port map( A => n6486, B => n6487, Z => n6483);
   U6025 : GTECH_NAND2 port map( A => n6488, B => n6489, Z => n6487);
   U6026 : GTECH_NAND2 port map( A => n11122, B => n6465, Z => n6489);
   U6027 : GTECH_NAND2 port map( A => n6490, B => n6408, Z => n6488);
   U6028 : GTECH_NAND2 port map( A => n6465, B => n6466, Z => n6490);
   U6029 : GTECH_NOR2 port map( A => n11126, B => n6491, Z => n6479);
   U6030 : GTECH_NOR2 port map( A => n6387, B => n6427, Z => n6491);
   U6031 : GTECH_NAND2 port map( A => n6492, B => n6399, Z => n6427);
   U6032 : GTECH_NAND2 port map( A => n6298, B => n11045, Z => n6476);
   U6033 : GTECH_NAND2 port map( A => n6493, B => n6494, Z => n11163);
   U6034 : GTECH_NAND2 port map( A => n6263, B => n6094, Z => n6494);
   U6035 : GTECH_NAND2 port map( A => n6495, B => n6496, Z => n6094);
   U6036 : GTECH_NAND2 port map( A => n6497, B => n6498, Z => n6496);
   U6037 : GTECH_NOR2 port map( A => n11134, B => n6499, Z => n6497);
   U6038 : GTECH_NOR2 port map( A => n6500, B => n6501, Z => n6499);
   U6039 : GTECH_NOR2 port map( A => n6502, B => n6503, Z => n6501);
   U6040 : GTECH_NOR2 port map( A => n6504, B => n6505, Z => n6503);
   U6041 : GTECH_NAND2 port map( A => n6506, B => n6507, Z => n6505);
   U6042 : GTECH_NOT port map( A => n6508, Z => n6506);
   U6043 : GTECH_NOR2 port map( A => n6509, B => n6510, Z => n6508);
   U6044 : GTECH_NAND2 port map( A => n6511, B => n6512, Z => n6509);
   U6045 : GTECH_NOR2 port map( A => n6513, B => n6514, Z => n6504);
   U6046 : GTECH_NOR2 port map( A => n6515, B => n6516, Z => n6500);
   U6047 : GTECH_NAND2 port map( A => n6517, B => n6507, Z => n6516);
   U6048 : GTECH_NAND2 port map( A => n6518, B => n6519, Z => n6517);
   U6049 : GTECH_NOR2 port map( A => n6520, B => n6521, Z => n6518);
   U6050 : GTECH_NOR2 port map( A => n11130, B => n6522, Z => n6521);
   U6051 : GTECH_NOR2 port map( A => n6523, B => n6524, Z => n6522);
   U6052 : GTECH_NOR2 port map( A => n11128, B => n6525, Z => n6523);
   U6053 : GTECH_NOR2 port map( A => n6526, B => n6527, Z => n6520);
   U6054 : GTECH_NAND2 port map( A => n6528, B => n6513, Z => n6495);
   U6055 : GTECH_NAND2 port map( A => n6298, B => n11095, Z => n6493);
   U6056 : GTECH_NAND2 port map( A => n6529, B => n6530, Z => n11164);
   U6057 : GTECH_NAND2 port map( A => n6263, B => n6035, Z => n6530);
   U6058 : GTECH_NAND2 port map( A => n6531, B => n6532, Z => n6035);
   U6059 : GTECH_NAND2 port map( A => n6528, B => n6533, Z => n6532);
   U6060 : GTECH_NOT port map( A => n6498, Z => n6528);
   U6061 : GTECH_NAND2 port map( A => n6534, B => n6498, Z => n6531);
   U6062 : GTECH_NOR2 port map( A => n11134, B => n6535, Z => n6534);
   U6063 : GTECH_NOR2 port map( A => n6536, B => n6537, Z => n6535);
   U6064 : GTECH_NAND2 port map( A => n6538, B => n6539, Z => n6537);
   U6065 : GTECH_NAND2 port map( A => n6540, B => n6541, Z => n6539);
   U6066 : GTECH_NOT port map( A => n6542, Z => n6541);
   U6067 : GTECH_NAND2 port map( A => n6543, B => n6544, Z => n6542);
   U6068 : GTECH_NOR2 port map( A => n6545, B => n6510, Z => n6540);
   U6069 : GTECH_NAND2 port map( A => n6513, B => n6546, Z => n6538);
   U6070 : GTECH_NAND2 port map( A => n6547, B => n6548, Z => n6536);
   U6071 : GTECH_NAND2 port map( A => n6549, B => n6507, Z => n6548);
   U6072 : GTECH_NOR2 port map( A => n6550, B => n6515, Z => n6549);
   U6073 : GTECH_NOR2 port map( A => n6551, B => n6552, Z => n6550);
   U6074 : GTECH_NAND2 port map( A => n6553, B => n6554, Z => n6552);
   U6075 : GTECH_NAND2 port map( A => n11128, B => n11127, Z => n6554);
   U6076 : GTECH_NOR2 port map( A => n6555, B => n6556, Z => n6553);
   U6077 : GTECH_NOR2 port map( A => n6524, B => n6557, Z => n6556);
   U6078 : GTECH_NOR2 port map( A => n11129, B => n6558, Z => n6555);
   U6079 : GTECH_NAND2 port map( A => n6527, B => n6526, Z => n6558);
   U6080 : GTECH_NAND2 port map( A => n6559, B => n6560, Z => n6551);
   U6081 : GTECH_NAND2 port map( A => n6502, B => n11133, Z => n6547);
   U6082 : GTECH_NAND2 port map( A => n6298, B => n11100, Z => n6529);
   U6083 : GTECH_NAND2 port map( A => n6561, B => n6562, Z => n11165);
   U6084 : GTECH_NAND2 port map( A => n6263, B => n6194, Z => n6562);
   U6085 : GTECH_NAND2 port map( A => n6563, B => n6564, Z => n6194);
   U6086 : GTECH_NOR2 port map( A => n6565, B => n6566, Z => n6564);
   U6087 : GTECH_NAND2 port map( A => n6567, B => n6568, Z => n6566);
   U6088 : GTECH_NOT port map( A => n6569, Z => n6568);
   U6089 : GTECH_NAND2 port map( A => n6570, B => n6571, Z => n6567);
   U6090 : GTECH_NOR2 port map( A => n6545, B => n6572, Z => n6571);
   U6091 : GTECH_NOR2 port map( A => n6512, B => n6527, Z => n6545);
   U6092 : GTECH_NOR2 port map( A => n6573, B => n6574, Z => n6570);
   U6093 : GTECH_NOR2 port map( A => n6515, B => n6575, Z => n6565);
   U6094 : GTECH_NAND2 port map( A => n6576, B => n6577, Z => n6575);
   U6095 : GTECH_NAND2 port map( A => n11129, B => n6578, Z => n6577);
   U6096 : GTECH_NAND2 port map( A => n6579, B => n6527, Z => n6578);
   U6097 : GTECH_NAND2 port map( A => n6580, B => n6524, Z => n6576);
   U6098 : GTECH_NAND2 port map( A => n6581, B => n11130, Z => n6580);
   U6099 : GTECH_NOR2 port map( A => n6582, B => n6583, Z => n6563);
   U6100 : GTECH_NOR2 port map( A => n6513, B => n6498, Z => n6582);
   U6101 : GTECH_NAND2 port map( A => n6584, B => n11133, Z => n6498);
   U6102 : GTECH_NOR2 port map( A => n11132, B => n11134, Z => n6584);
   U6103 : GTECH_NAND2 port map( A => n6298, B => n11041, Z => n6561);
   U6104 : GTECH_NAND2 port map( A => n6585, B => n6586, Z => n11166);
   U6105 : GTECH_NAND2 port map( A => n6263, B => n6587, Z => n6586);
   U6106 : GTECH_NAND2 port map( A => n11039, B => n6298, Z => n6585);
   U6107 : GTECH_NAND2 port map( A => n6588, B => n6589, Z => n11167);
   U6108 : GTECH_NAND2 port map( A => n6590, B => n6263, Z => n6589);
   U6109 : GTECH_NAND2 port map( A => n11103, B => n6298, Z => n6588);
   U6110 : GTECH_NAND2 port map( A => n6591, B => n6592, Z => n11168);
   U6111 : GTECH_NAND2 port map( A => n6263, B => n6150, Z => n6592);
   U6112 : GTECH_NOT port map( A => n6593, Z => n6150);
   U6113 : GTECH_NAND2 port map( A => n6594, B => n6595, Z => n6593);
   U6114 : GTECH_NAND2 port map( A => n6596, B => n6573, Z => n6595);
   U6115 : GTECH_NAND2 port map( A => n6597, B => n6598, Z => n6596);
   U6116 : GTECH_NOR2 port map( A => n6599, B => n6600, Z => n6598);
   U6117 : GTECH_NOR2 port map( A => n11130, B => n6601, Z => n6600);
   U6118 : GTECH_NOR2 port map( A => n6581, B => n11129, Z => n6601);
   U6119 : GTECH_NOT port map( A => n6602, Z => n6599);
   U6120 : GTECH_NAND2 port map( A => n6559, B => n11130, Z => n6602);
   U6121 : GTECH_NOR2 port map( A => n11133, B => n6546, Z => n6597);
   U6122 : GTECH_NOR2 port map( A => n11134, B => n6603, Z => n6594);
   U6123 : GTECH_NOR2 port map( A => n6510, B => n6572, Z => n6603);
   U6124 : GTECH_NAND2 port map( A => n6544, B => n6533, Z => n6572);
   U6125 : GTECH_NOT port map( A => n6502, Z => n6533);
   U6126 : GTECH_NAND2 port map( A => n6604, B => n6605, Z => n6510);
   U6127 : GTECH_NAND2 port map( A => n6298, B => n11044, Z => n6591);
   U6128 : GTECH_NAND2 port map( A => n6606, B => n6607, Z => n11169);
   U6129 : GTECH_NOR2 port map( A => n6608, B => n6609, Z => n6607);
   U6130 : GTECH_NAND2 port map( A => n6610, B => n6611, Z => n6609);
   U6131 : GTECH_NAND2 port map( A => sp_2_port, B => n6612, Z => n6611);
   U6132 : GTECH_NAND2 port map( A => n6613, B => stackA_1_port, Z => n6610);
   U6133 : GTECH_NAND2 port map( A => n6614, B => n6615, Z => n6608);
   U6134 : GTECH_NAND2 port map( A => N2991, B => n6616, Z => n6615);
   U6135 : GTECH_NOR2 port map( A => n6617, B => n6618, Z => n6614);
   U6136 : GTECH_NOR2 port map( A => n6619, B => n6620, Z => n6618);
   U6137 : GTECH_NOR2 port map( A => n6621, B => n6622, Z => n6617);
   U6138 : GTECH_NOR2 port map( A => n6623, B => n6624, Z => n6621);
   U6139 : GTECH_NAND2 port map( A => n6625, B => n6626, Z => n6624);
   U6140 : GTECH_NOR2 port map( A => n6627, B => n6628, Z => n6626);
   U6141 : GTECH_NAND2 port map( A => n6629, B => n6630, Z => n6628);
   U6142 : GTECH_NAND2 port map( A => mem_read(2), B => n6631, Z => n6630);
   U6143 : GTECH_NAND2 port map( A => N1036, B => n6632, Z => n6629);
   U6144 : GTECH_NOR2 port map( A => n6633, B => n6634, Z => n6627);
   U6145 : GTECH_NOT port map( A => n6635, Z => n6625);
   U6146 : GTECH_NAND2 port map( A => n6636, B => n6637, Z => n6635);
   U6147 : GTECH_NAND2 port map( A => n6638, B => n75, Z => n6637);
   U6148 : GTECH_NAND2 port map( A => N1319, B => n6639, Z => n6636);
   U6149 : GTECH_NAND2 port map( A => n6640, B => n6641, Z => n6623);
   U6150 : GTECH_NOR2 port map( A => n6642, B => n6643, Z => n6641);
   U6151 : GTECH_NAND2 port map( A => n6644, B => n6645, Z => n6643);
   U6152 : GTECH_NAND2 port map( A => stackB_2_port, B => n6646, Z => n6645);
   U6153 : GTECH_NAND2 port map( A => n6647, B => n6648, Z => n6646);
   U6154 : GTECH_NAND2 port map( A => stackA_2_port, B => n6649, Z => n6648);
   U6155 : GTECH_NAND2 port map( A => n6650, B => n11272, Z => n6644);
   U6156 : GTECH_NOR2 port map( A => n6651, B => n6652, Z => n6642);
   U6157 : GTECH_NOR2 port map( A => n6653, B => n6654, Z => n6640);
   U6158 : GTECH_NOR2 port map( A => n6655, B => n6656, Z => n6654);
   U6159 : GTECH_NOR2 port map( A => n6657, B => n6658, Z => n6653);
   U6160 : GTECH_NOR2 port map( A => n6659, B => n6660, Z => n6606);
   U6161 : GTECH_NAND2 port map( A => n6661, B => n6662, Z => n6660);
   U6162 : GTECH_NAND2 port map( A => pc_2_port, B => n6663, Z => n6662);
   U6163 : GTECH_NOR2 port map( A => n6664, B => n6665, Z => n6661);
   U6164 : GTECH_NOR2 port map( A => n6633, B => n6666, Z => n6665);
   U6165 : GTECH_NOR2 port map( A => stackA_2_port, B => n6667, Z => n6664);
   U6166 : GTECH_NAND2 port map( A => n6668, B => n6669, Z => n6659);
   U6167 : GTECH_NOT port map( A => n6670, Z => n6669);
   U6168 : GTECH_NAND2 port map( A => n6671, B => n6672, Z => n6670);
   U6169 : GTECH_NAND2 port map( A => n11033, B => n6673, Z => n6672);
   U6170 : GTECH_NAND2 port map( A => N697, B => n6674, Z => n6671);
   U6171 : GTECH_NAND2 port map( A => n6675, B => n11032, Z => n6668);
   U6172 : GTECH_NAND2 port map( A => n6676, B => n6677, Z => n11170);
   U6173 : GTECH_NOR2 port map( A => n6678, B => n6679, Z => n6677);
   U6174 : GTECH_NAND2 port map( A => n6680, B => n6681, Z => n6679);
   U6175 : GTECH_NAND2 port map( A => sp_3_port, B => n6612, Z => n6681);
   U6176 : GTECH_NOT port map( A => n6682, Z => n6612);
   U6177 : GTECH_NAND2 port map( A => n6613, B => stackA_2_port, Z => n6680);
   U6178 : GTECH_NOT port map( A => n6683, Z => n6613);
   U6179 : GTECH_NAND2 port map( A => n6684, B => n6685, Z => n6678);
   U6180 : GTECH_NAND2 port map( A => N2992, B => n6616, Z => n6685);
   U6181 : GTECH_NOR2 port map( A => n6686, B => n6687, Z => n6684);
   U6182 : GTECH_NOR2 port map( A => n6619, B => n6688, Z => n6687);
   U6183 : GTECH_NOR2 port map( A => n6689, B => n6622, Z => n6686);
   U6184 : GTECH_NOR2 port map( A => n6690, B => n6691, Z => n6689);
   U6185 : GTECH_NAND2 port map( A => n6692, B => n6693, Z => n6691);
   U6186 : GTECH_NOR2 port map( A => n6694, B => n6695, Z => n6693);
   U6187 : GTECH_NAND2 port map( A => n6696, B => n6697, Z => n6695);
   U6188 : GTECH_NAND2 port map( A => mem_read(3), B => n6631, Z => n6697);
   U6189 : GTECH_NAND2 port map( A => N1037, B => n6632, Z => n6696);
   U6190 : GTECH_NOR2 port map( A => n6634, B => n6698, Z => n6694);
   U6191 : GTECH_NOT port map( A => n6699, Z => n6692);
   U6192 : GTECH_NAND2 port map( A => n6700, B => n6701, Z => n6699);
   U6193 : GTECH_NAND2 port map( A => n6638, B => n74, Z => n6701);
   U6194 : GTECH_NAND2 port map( A => N1320, B => n6639, Z => n6700);
   U6195 : GTECH_NAND2 port map( A => n6702, B => n6703, Z => n6690);
   U6196 : GTECH_NOR2 port map( A => n6704, B => n6705, Z => n6703);
   U6197 : GTECH_NAND2 port map( A => n6706, B => n6707, Z => n6705);
   U6198 : GTECH_NAND2 port map( A => stackB_3_port, B => n6708, Z => n6707);
   U6199 : GTECH_NAND2 port map( A => n6647, B => n6709, Z => n6708);
   U6200 : GTECH_NAND2 port map( A => stackA_3_port, B => n6649, Z => n6709);
   U6201 : GTECH_NAND2 port map( A => n6650, B => n11273, Z => n6706);
   U6202 : GTECH_NOR2 port map( A => n6651, B => n6710, Z => n6704);
   U6203 : GTECH_NOR2 port map( A => n6711, B => n6712, Z => n6702);
   U6204 : GTECH_NOR2 port map( A => n6655, B => n6713, Z => n6712);
   U6205 : GTECH_NOR2 port map( A => n6657, B => n6714, Z => n6711);
   U6206 : GTECH_NOR2 port map( A => n6715, B => n6716, Z => n6676);
   U6207 : GTECH_NAND2 port map( A => n6717, B => n6718, Z => n6716);
   U6208 : GTECH_NAND2 port map( A => pc_3_port, B => n6663, Z => n6718);
   U6209 : GTECH_NOR2 port map( A => n6719, B => n6720, Z => n6717);
   U6210 : GTECH_NOR2 port map( A => n6666, B => n6698, Z => n6720);
   U6211 : GTECH_NOR2 port map( A => stackA_3_port, B => n6667, Z => n6719);
   U6212 : GTECH_NAND2 port map( A => n6721, B => n6722, Z => n6715);
   U6213 : GTECH_NOT port map( A => n6723, Z => n6722);
   U6214 : GTECH_NAND2 port map( A => n6724, B => n6725, Z => n6723);
   U6215 : GTECH_NAND2 port map( A => n11031, B => n6673, Z => n6725);
   U6216 : GTECH_NAND2 port map( A => N698, B => n6674, Z => n6724);
   U6217 : GTECH_NAND2 port map( A => n6675, B => n11030, Z => n6721);
   U6218 : GTECH_NOT port map( A => n6726, Z => n11171);
   U6219 : GTECH_NOR2 port map( A => n6727, B => n6728, Z => n6726);
   U6220 : GTECH_NAND2 port map( A => n6729, B => n6730, Z => n6728);
   U6221 : GTECH_NAND2 port map( A => stackA_4_port, B => n6731, Z => n6730);
   U6222 : GTECH_NOR2 port map( A => n6732, B => n6733, Z => n6729);
   U6223 : GTECH_NOR2 port map( A => n6734, B => n6735, Z => n6733);
   U6224 : GTECH_NOT port map( A => n6736, Z => n6732);
   U6225 : GTECH_NAND2 port map( A => n6675, B => n11028, Z => n6736);
   U6226 : GTECH_NAND2 port map( A => n6737, B => n6738, Z => n6727);
   U6227 : GTECH_NAND2 port map( A => N699, B => n6674, Z => n6738);
   U6228 : GTECH_NOR2 port map( A => n6739, B => n6740, Z => n6737);
   U6229 : GTECH_NOT port map( A => n6741, Z => n6740);
   U6230 : GTECH_NAND2 port map( A => n6673, B => n11029, Z => n6741);
   U6231 : GTECH_NOR2 port map( A => n6742, B => n6622, Z => n6739);
   U6232 : GTECH_NOR2 port map( A => n6743, B => n6744, Z => n6742);
   U6233 : GTECH_NAND2 port map( A => n6745, B => n6746, Z => n6744);
   U6234 : GTECH_NOR2 port map( A => n6747, B => n6748, Z => n6746);
   U6235 : GTECH_NAND2 port map( A => n6749, B => n6750, Z => n6748);
   U6236 : GTECH_NAND2 port map( A => sp_4_port, B => n6751, Z => n6750);
   U6237 : GTECH_NAND2 port map( A => N1038, B => n6632, Z => n6749);
   U6238 : GTECH_NAND2 port map( A => n6752, B => n6753, Z => n6747);
   U6239 : GTECH_NAND2 port map( A => stackA_3_port, B => n6754, Z => n6753);
   U6240 : GTECH_NAND2 port map( A => N2993, B => n6755, Z => n6752);
   U6241 : GTECH_NOR2 port map( A => n6756, B => n6757, Z => n6745);
   U6242 : GTECH_NAND2 port map( A => n6758, B => n6759, Z => n6757);
   U6243 : GTECH_NAND2 port map( A => N1321, B => n6639, Z => n6759);
   U6244 : GTECH_NAND2 port map( A => n73, B => n6638, Z => n6758);
   U6245 : GTECH_NAND2 port map( A => n6760, B => n6761, Z => n6756);
   U6246 : GTECH_NAND2 port map( A => n6762, B => n6763, Z => n6761);
   U6247 : GTECH_NAND2 port map( A => stackA_4_port, B => n6764, Z => n6760);
   U6248 : GTECH_NAND2 port map( A => n6765, B => n6766, Z => n6743);
   U6249 : GTECH_NOR2 port map( A => n6767, B => n6768, Z => n6766);
   U6250 : GTECH_NAND2 port map( A => n6769, B => n6770, Z => n6768);
   U6251 : GTECH_NAND2 port map( A => mem_read(20), B => n6771, Z => n6770);
   U6252 : GTECH_NAND2 port map( A => mem_read(12), B => n6772, Z => n6769);
   U6253 : GTECH_NAND2 port map( A => n6773, B => n6774, Z => n6767);
   U6254 : GTECH_NAND2 port map( A => stackB_4_port, B => n6775, Z => n6774);
   U6255 : GTECH_NAND2 port map( A => n6647, B => n6776, Z => n6775);
   U6256 : GTECH_NAND2 port map( A => stackA_4_port, B => n6649, Z => n6776);
   U6257 : GTECH_NAND2 port map( A => n6650, B => n6777, Z => n6773);
   U6258 : GTECH_NOR2 port map( A => n6778, B => n6779, Z => n6765);
   U6259 : GTECH_NAND2 port map( A => n6780, B => n6781, Z => n6779);
   U6260 : GTECH_NAND2 port map( A => mem_read(28), B => n6782, Z => n6781);
   U6261 : GTECH_NAND2 port map( A => mem_read(4), B => n6631, Z => n6780);
   U6262 : GTECH_NOR2 port map( A => n6783, B => n6784, Z => n6778);
   U6263 : GTECH_NOT port map( A => n6785, Z => n11172);
   U6264 : GTECH_NOR2 port map( A => n6786, B => n6787, Z => n6785);
   U6265 : GTECH_NAND2 port map( A => n6788, B => n6789, Z => n6787);
   U6266 : GTECH_NAND2 port map( A => stackA_5_port, B => n6731, Z => n6789);
   U6267 : GTECH_NOT port map( A => n6790, Z => n6788);
   U6268 : GTECH_NAND2 port map( A => n6791, B => n6792, Z => n6790);
   U6269 : GTECH_NAND2 port map( A => n6663, B => pc_5_port, Z => n6792);
   U6270 : GTECH_NAND2 port map( A => n6675, B => n11026, Z => n6791);
   U6271 : GTECH_NAND2 port map( A => n6793, B => n6794, Z => n6786);
   U6272 : GTECH_NAND2 port map( A => N700, B => n6674, Z => n6794);
   U6273 : GTECH_NOR2 port map( A => n6795, B => n6796, Z => n6793);
   U6274 : GTECH_NOT port map( A => n6797, Z => n6796);
   U6275 : GTECH_NAND2 port map( A => n6673, B => n11027, Z => n6797);
   U6276 : GTECH_NOR2 port map( A => n6798, B => n6622, Z => n6795);
   U6277 : GTECH_NOR2 port map( A => n6799, B => n6800, Z => n6798);
   U6278 : GTECH_NAND2 port map( A => n6801, B => n6802, Z => n6800);
   U6279 : GTECH_NOR2 port map( A => n6803, B => n6804, Z => n6802);
   U6280 : GTECH_NAND2 port map( A => n6805, B => n6806, Z => n6804);
   U6281 : GTECH_NAND2 port map( A => sp_5_port, B => n6751, Z => n6806);
   U6282 : GTECH_NAND2 port map( A => N1039, B => n6632, Z => n6805);
   U6283 : GTECH_NAND2 port map( A => n6807, B => n6808, Z => n6803);
   U6284 : GTECH_NAND2 port map( A => stackA_4_port, B => n6754, Z => n6808);
   U6285 : GTECH_NAND2 port map( A => N2994, B => n6755, Z => n6807);
   U6286 : GTECH_NOR2 port map( A => n6809, B => n6810, Z => n6801);
   U6287 : GTECH_NAND2 port map( A => n6811, B => n6812, Z => n6810);
   U6288 : GTECH_NAND2 port map( A => N1322, B => n6639, Z => n6812);
   U6289 : GTECH_NAND2 port map( A => n72, B => n6638, Z => n6811);
   U6290 : GTECH_NAND2 port map( A => n6813, B => n6814, Z => n6809);
   U6291 : GTECH_NAND2 port map( A => n6762, B => n6815, Z => n6814);
   U6292 : GTECH_NAND2 port map( A => stackA_5_port, B => n6764, Z => n6813);
   U6293 : GTECH_NAND2 port map( A => n6816, B => n6817, Z => n6799);
   U6294 : GTECH_NOR2 port map( A => n6818, B => n6819, Z => n6817);
   U6295 : GTECH_NAND2 port map( A => n6820, B => n6821, Z => n6819);
   U6296 : GTECH_NAND2 port map( A => mem_read(21), B => n6771, Z => n6821);
   U6297 : GTECH_NAND2 port map( A => mem_read(13), B => n6772, Z => n6820);
   U6298 : GTECH_NAND2 port map( A => n6822, B => n6823, Z => n6818);
   U6299 : GTECH_NAND2 port map( A => stackB_5_port, B => n6824, Z => n6823);
   U6300 : GTECH_NAND2 port map( A => n6647, B => n6825, Z => n6824);
   U6301 : GTECH_NAND2 port map( A => stackA_5_port, B => n6649, Z => n6825);
   U6302 : GTECH_NAND2 port map( A => n6650, B => n6826, Z => n6822);
   U6303 : GTECH_NOT port map( A => n6827, Z => n6826);
   U6304 : GTECH_NOR2 port map( A => n6828, B => n6829, Z => n6827);
   U6305 : GTECH_NAND2 port map( A => n6830, B => n6831, Z => n6829);
   U6306 : GTECH_NAND2 port map( A => n6031, B => opcode_2_5_port, Z => n6831);
   U6307 : GTECH_NAND2 port map( A => n6029, B => opcode_3_5_port, Z => n6830);
   U6308 : GTECH_NAND2 port map( A => n6832, B => n6833, Z => n6828);
   U6309 : GTECH_NAND2 port map( A => n6133, B => opcode_0_5_port, Z => n6833);
   U6310 : GTECH_NAND2 port map( A => n6079, B => opcode_1_5_port, Z => n6832);
   U6311 : GTECH_NOR2 port map( A => n6834, B => n6835, Z => n6816);
   U6312 : GTECH_NAND2 port map( A => n6836, B => n6837, Z => n6835);
   U6313 : GTECH_NAND2 port map( A => mem_read(29), B => n6782, Z => n6837);
   U6314 : GTECH_NAND2 port map( A => mem_read(5), B => n6631, Z => n6836);
   U6315 : GTECH_NOR2 port map( A => n6783, B => n6838, Z => n6834);
   U6316 : GTECH_NAND2 port map( A => n6839, B => n6840, Z => n11173);
   U6317 : GTECH_NAND2 port map( A => stackA_16_port, B => n6731, Z => n6840);
   U6318 : GTECH_NOR2 port map( A => n6841, B => n6842, Z => n6839);
   U6319 : GTECH_NOR2 port map( A => n6843, B => n6622, Z => n6842);
   U6320 : GTECH_NOR2 port map( A => n6844, B => n6845, Z => n6843);
   U6321 : GTECH_NAND2 port map( A => n6846, B => n6847, Z => n6845);
   U6322 : GTECH_NOR2 port map( A => n6848, B => n6849, Z => n6847);
   U6323 : GTECH_NAND2 port map( A => n6850, B => n6851, Z => n6849);
   U6324 : GTECH_NAND2 port map( A => N1333, B => n6639, Z => n6851);
   U6325 : GTECH_NAND2 port map( A => n61, B => n6638, Z => n6850);
   U6326 : GTECH_NAND2 port map( A => n6852, B => n6853, Z => n6848);
   U6327 : GTECH_NAND2 port map( A => stackA_9_port, B => n6854, Z => n6853);
   U6328 : GTECH_NAND2 port map( A => N1050, B => n6632, Z => n6852);
   U6329 : GTECH_NOR2 port map( A => n6855, B => n6856, Z => n6846);
   U6330 : GTECH_NAND2 port map( A => n6857, B => n6858, Z => n6856);
   U6331 : GTECH_NAND2 port map( A => N711, B => n6859, Z => n6858);
   U6332 : GTECH_NAND2 port map( A => pc_16_port, B => n6860, Z => n6857);
   U6333 : GTECH_NAND2 port map( A => n6861, B => n6862, Z => n6855);
   U6334 : GTECH_NAND2 port map( A => n6762, B => n6863, Z => n6862);
   U6335 : GTECH_NAND2 port map( A => stackA_16_port, B => n6764, Z => n6861);
   U6336 : GTECH_NAND2 port map( A => n6864, B => n6865, Z => n6844);
   U6337 : GTECH_NOR2 port map( A => n6866, B => n6867, Z => n6865);
   U6338 : GTECH_NAND2 port map( A => n6868, B => n6869, Z => n6867);
   U6339 : GTECH_NAND2 port map( A => n11020, B => n6870, Z => n6869);
   U6340 : GTECH_NAND2 port map( A => N3005, B => n6755, Z => n6868);
   U6341 : GTECH_NOT port map( A => n6871, Z => n6866);
   U6342 : GTECH_NOR2 port map( A => n6872, B => n6873, Z => n6871);
   U6343 : GTECH_NOR2 port map( A => n6874, B => n6875, Z => n6872);
   U6344 : GTECH_NOR2 port map( A => n6876, B => n6877, Z => n6875);
   U6345 : GTECH_NOR2 port map( A => n6863, B => n6878, Z => n6877);
   U6346 : GTECH_NOR2 port map( A => n6879, B => n6880, Z => n6864);
   U6347 : GTECH_NAND2 port map( A => n6881, B => n6882, Z => n6880);
   U6348 : GTECH_NAND2 port map( A => sp_16_port, B => n6751, Z => n6882);
   U6349 : GTECH_NAND2 port map( A => n11021, B => n6883, Z => n6881);
   U6350 : GTECH_NOR2 port map( A => n6884, B => n6885, Z => n6879);
   U6351 : GTECH_NOR2 port map( A => n6886, B => n6887, Z => n6841);
   U6352 : GTECH_NOT port map( A => n6888, Z => n6886);
   U6353 : GTECH_NAND2 port map( A => n6619, B => n6683, Z => n6888);
   U6354 : GTECH_NAND2 port map( A => n6889, B => n6890, Z => n11174);
   U6355 : GTECH_NAND2 port map( A => n6891, B => n11019, Z => n6890);
   U6356 : GTECH_NAND2 port map( A => n11036, B => n6233, Z => n6889);
   U6357 : GTECH_NAND2 port map( A => n6892, B => n6893, Z => n11175);
   U6358 : GTECH_NAND2 port map( A => n11018, B => n6891, Z => n6893);
   U6359 : GTECH_NAND2 port map( A => n11034, B => n6233, Z => n6892);
   U6360 : GTECH_NAND2 port map( A => n6894, B => n6895, Z => n11176);
   U6361 : GTECH_NAND2 port map( A => n11017, B => n6891, Z => n6895);
   U6362 : GTECH_NAND2 port map( A => n11033, B => n6233, Z => n6894);
   U6363 : GTECH_NAND2 port map( A => n6896, B => n6897, Z => n11177);
   U6364 : GTECH_NAND2 port map( A => n11016, B => n6891, Z => n6897);
   U6365 : GTECH_NAND2 port map( A => n11031, B => n6233, Z => n6896);
   U6366 : GTECH_NAND2 port map( A => n6898, B => n6899, Z => n11178);
   U6367 : GTECH_NAND2 port map( A => n11015, B => n6891, Z => n6899);
   U6368 : GTECH_NAND2 port map( A => n11029, B => n6233, Z => n6898);
   U6369 : GTECH_NAND2 port map( A => n6900, B => n6901, Z => n11179);
   U6370 : GTECH_NAND2 port map( A => n11014, B => n6891, Z => n6901);
   U6371 : GTECH_NAND2 port map( A => n11027, B => n6233, Z => n6900);
   U6372 : GTECH_NAND2 port map( A => n6902, B => n6903, Z => n11180);
   U6373 : GTECH_NAND2 port map( A => n11013, B => n6891, Z => n6903);
   U6374 : GTECH_NAND2 port map( A => n11024, B => n6233, Z => n6902);
   U6375 : GTECH_NAND2 port map( A => n6904, B => n6905, Z => n11181);
   U6376 : GTECH_NAND2 port map( A => n11012, B => n6891, Z => n6905);
   U6377 : GTECH_NAND2 port map( A => n11023, B => n6233, Z => n6904);
   U6378 : GTECH_NAND2 port map( A => n6906, B => n6907, Z => n11182);
   U6379 : GTECH_NAND2 port map( A => n11011, B => n6891, Z => n6907);
   U6380 : GTECH_NAND2 port map( A => n11049, B => n6233, Z => n6906);
   U6381 : GTECH_NAND2 port map( A => n6908, B => n6909, Z => n11183);
   U6382 : GTECH_NAND2 port map( A => n11010, B => n6891, Z => n6909);
   U6383 : GTECH_NAND2 port map( A => n11051, B => n6233, Z => n6908);
   U6384 : GTECH_NAND2 port map( A => n6910, B => n6911, Z => n11184);
   U6385 : GTECH_NAND2 port map( A => n11009, B => n6891, Z => n6911);
   U6386 : GTECH_NAND2 port map( A => n11053, B => n6233, Z => n6910);
   U6387 : GTECH_NAND2 port map( A => n6912, B => n6913, Z => n11185);
   U6388 : GTECH_NAND2 port map( A => n11008, B => n6891, Z => n6913);
   U6389 : GTECH_NAND2 port map( A => n11055, B => n6233, Z => n6912);
   U6390 : GTECH_NAND2 port map( A => n6914, B => n6915, Z => n11186);
   U6391 : GTECH_NAND2 port map( A => n11007, B => n6891, Z => n6915);
   U6392 : GTECH_NAND2 port map( A => n11057, B => n6233, Z => n6914);
   U6393 : GTECH_NAND2 port map( A => n6916, B => n6917, Z => n11187);
   U6394 : GTECH_NAND2 port map( A => n11006, B => n6891, Z => n6917);
   U6395 : GTECH_NAND2 port map( A => n11059, B => n6233, Z => n6916);
   U6396 : GTECH_NAND2 port map( A => n6918, B => n6919, Z => n11188);
   U6397 : GTECH_NAND2 port map( A => n11005, B => n6891, Z => n6919);
   U6398 : GTECH_NAND2 port map( A => n11061, B => n6233, Z => n6918);
   U6399 : GTECH_NAND2 port map( A => n6920, B => n6921, Z => n11189);
   U6400 : GTECH_NAND2 port map( A => n11004, B => n6891, Z => n6921);
   U6401 : GTECH_NAND2 port map( A => n11063, B => n6233, Z => n6920);
   U6402 : GTECH_NAND2 port map( A => n6922, B => n6923, Z => n11190);
   U6403 : GTECH_NAND2 port map( A => n11003, B => n6891, Z => n6923);
   U6404 : GTECH_NAND2 port map( A => n11021, B => n6233, Z => n6922);
   U6405 : GTECH_NAND2 port map( A => n6924, B => n6925, Z => n11191);
   U6406 : GTECH_NAND2 port map( A => n11002, B => n6891, Z => n6925);
   U6407 : GTECH_NAND2 port map( A => n11065, B => n6233, Z => n6924);
   U6408 : GTECH_NAND2 port map( A => n6926, B => n6927, Z => n11192);
   U6409 : GTECH_NAND2 port map( A => n11001, B => n6891, Z => n6927);
   U6410 : GTECH_NAND2 port map( A => n11067, B => n6233, Z => n6926);
   U6411 : GTECH_NAND2 port map( A => n6928, B => n6929, Z => n11193);
   U6412 : GTECH_NAND2 port map( A => n11000, B => n6891, Z => n6929);
   U6413 : GTECH_NAND2 port map( A => n11069, B => n6233, Z => n6928);
   U6414 : GTECH_NAND2 port map( A => n6930, B => n6931, Z => n11194);
   U6415 : GTECH_NAND2 port map( A => n10999, B => n6891, Z => n6931);
   U6416 : GTECH_NAND2 port map( A => n11071, B => n6233, Z => n6930);
   U6417 : GTECH_NAND2 port map( A => n6932, B => n6933, Z => n11195);
   U6418 : GTECH_NAND2 port map( A => n10998, B => n6891, Z => n6933);
   U6419 : GTECH_NAND2 port map( A => n11073, B => n6233, Z => n6932);
   U6420 : GTECH_NAND2 port map( A => n6934, B => n6935, Z => n11196);
   U6421 : GTECH_NAND2 port map( A => n10997, B => n6891, Z => n6935);
   U6422 : GTECH_NAND2 port map( A => n11075, B => n6233, Z => n6934);
   U6423 : GTECH_NAND2 port map( A => n6936, B => n6937, Z => n11197);
   U6424 : GTECH_NAND2 port map( A => n10996, B => n6891, Z => n6937);
   U6425 : GTECH_NAND2 port map( A => n11077, B => n6233, Z => n6936);
   U6426 : GTECH_NAND2 port map( A => n6938, B => n6939, Z => n11198);
   U6427 : GTECH_NAND2 port map( A => n10995, B => n6891, Z => n6939);
   U6428 : GTECH_NAND2 port map( A => n11079, B => n6233, Z => n6938);
   U6429 : GTECH_NAND2 port map( A => n6940, B => n6941, Z => n11199);
   U6430 : GTECH_NAND2 port map( A => n10994, B => n6891, Z => n6941);
   U6431 : GTECH_NAND2 port map( A => n11081, B => n6233, Z => n6940);
   U6432 : GTECH_NAND2 port map( A => n6942, B => n6943, Z => n11200);
   U6433 : GTECH_NAND2 port map( A => n10993, B => n6891, Z => n6943);
   U6434 : GTECH_NAND2 port map( A => n11083, B => n6233, Z => n6942);
   U6435 : GTECH_NAND2 port map( A => n6944, B => n6945, Z => n11201);
   U6436 : GTECH_NAND2 port map( A => n10992, B => n6891, Z => n6945);
   U6437 : GTECH_NAND2 port map( A => n11085, B => n6233, Z => n6944);
   U6438 : GTECH_NAND2 port map( A => n6946, B => n6947, Z => n11202);
   U6439 : GTECH_NAND2 port map( A => n10991, B => n6891, Z => n6947);
   U6440 : GTECH_NAND2 port map( A => n11087, B => n6233, Z => n6946);
   U6441 : GTECH_NAND2 port map( A => n6948, B => n6949, Z => n11203);
   U6442 : GTECH_NAND2 port map( A => n10990, B => n6891, Z => n6949);
   U6443 : GTECH_NAND2 port map( A => n11089, B => n6233, Z => n6948);
   U6444 : GTECH_NAND2 port map( A => n6950, B => n6951, Z => n11204);
   U6445 : GTECH_NAND2 port map( A => n10989, B => n6891, Z => n6951);
   U6446 : GTECH_NAND2 port map( A => n11091, B => n6233, Z => n6950);
   U6447 : GTECH_NAND2 port map( A => n6952, B => n6953, Z => n11205);
   U6448 : GTECH_NAND2 port map( A => n10988, B => n6891, Z => n6953);
   U6449 : GTECH_NAND2 port map( A => n11093, B => n6233, Z => n6952);
   U6450 : GTECH_NAND2 port map( A => n6954, B => n6955, Z => n11206);
   U6451 : GTECH_NAND2 port map( A => n10987, B => n6891, Z => n6955);
   U6452 : GTECH_NAND2 port map( A => n10955, B => n6233, Z => n6954);
   U6453 : GTECH_NAND2 port map( A => n6956, B => n6957, Z => n11207);
   U6454 : GTECH_NAND2 port map( A => n10986, B => n6891, Z => n6957);
   U6455 : GTECH_NAND2 port map( A => n10954, B => n6233, Z => n6956);
   U6456 : GTECH_NAND2 port map( A => n6958, B => n6959, Z => n11208);
   U6457 : GTECH_NAND2 port map( A => n10985, B => n6891, Z => n6959);
   U6458 : GTECH_NAND2 port map( A => n10953, B => n6233, Z => n6958);
   U6459 : GTECH_NAND2 port map( A => n6960, B => n6961, Z => n11209);
   U6460 : GTECH_NAND2 port map( A => n10984, B => n6891, Z => n6961);
   U6461 : GTECH_NAND2 port map( A => n10952, B => n6233, Z => n6960);
   U6462 : GTECH_NAND2 port map( A => n6962, B => n6963, Z => n11210);
   U6463 : GTECH_NAND2 port map( A => n10983, B => n6891, Z => n6963);
   U6464 : GTECH_NAND2 port map( A => n10951, B => n6233, Z => n6962);
   U6465 : GTECH_NAND2 port map( A => n6964, B => n6965, Z => n11211);
   U6466 : GTECH_NAND2 port map( A => n10982, B => n6891, Z => n6965);
   U6467 : GTECH_NAND2 port map( A => n10950, B => n6233, Z => n6964);
   U6468 : GTECH_NAND2 port map( A => n6966, B => n6967, Z => n11212);
   U6469 : GTECH_NAND2 port map( A => n10981, B => n6891, Z => n6967);
   U6470 : GTECH_NAND2 port map( A => n10949, B => n6233, Z => n6966);
   U6471 : GTECH_NAND2 port map( A => n6968, B => n6969, Z => n11213);
   U6472 : GTECH_NAND2 port map( A => n10980, B => n6891, Z => n6969);
   U6473 : GTECH_NAND2 port map( A => n10948, B => n6233, Z => n6968);
   U6474 : GTECH_NAND2 port map( A => n6970, B => n6971, Z => n11214);
   U6475 : GTECH_NAND2 port map( A => n10979, B => n6891, Z => n6971);
   U6476 : GTECH_NAND2 port map( A => n10947, B => n6233, Z => n6970);
   U6477 : GTECH_NAND2 port map( A => n6972, B => n6973, Z => n11215);
   U6478 : GTECH_NAND2 port map( A => n10978, B => n6891, Z => n6973);
   U6479 : GTECH_NAND2 port map( A => n10946, B => n6233, Z => n6972);
   U6480 : GTECH_NAND2 port map( A => n6974, B => n6975, Z => n11216);
   U6481 : GTECH_NAND2 port map( A => n10977, B => n6891, Z => n6975);
   U6482 : GTECH_NAND2 port map( A => n10945, B => n6233, Z => n6974);
   U6483 : GTECH_NAND2 port map( A => n6976, B => n6977, Z => n11217);
   U6484 : GTECH_NAND2 port map( A => n10976, B => n6891, Z => n6977);
   U6485 : GTECH_NAND2 port map( A => n10944, B => n6233, Z => n6976);
   U6486 : GTECH_NAND2 port map( A => n6978, B => n6979, Z => n11218);
   U6487 : GTECH_NAND2 port map( A => n10975, B => n6891, Z => n6979);
   U6488 : GTECH_NAND2 port map( A => n10943, B => n6233, Z => n6978);
   U6489 : GTECH_NAND2 port map( A => n6980, B => n6981, Z => n11219);
   U6490 : GTECH_NAND2 port map( A => n10974, B => n6891, Z => n6981);
   U6491 : GTECH_NAND2 port map( A => n10942, B => n6233, Z => n6980);
   U6492 : GTECH_NAND2 port map( A => n6982, B => n6983, Z => n11220);
   U6493 : GTECH_NAND2 port map( A => n10973, B => n6891, Z => n6983);
   U6494 : GTECH_NAND2 port map( A => n10941, B => n6233, Z => n6982);
   U6495 : GTECH_NAND2 port map( A => n6984, B => n6985, Z => n11221);
   U6496 : GTECH_NAND2 port map( A => n10972, B => n6891, Z => n6985);
   U6497 : GTECH_NAND2 port map( A => n10940, B => n6233, Z => n6984);
   U6498 : GTECH_NAND2 port map( A => n6986, B => n6987, Z => n11222);
   U6499 : GTECH_NAND2 port map( A => n10971, B => n6891, Z => n6987);
   U6500 : GTECH_NAND2 port map( A => n10939, B => n6233, Z => n6986);
   U6501 : GTECH_NAND2 port map( A => n6988, B => n6989, Z => n11223);
   U6502 : GTECH_NAND2 port map( A => n10970, B => n6891, Z => n6989);
   U6503 : GTECH_NAND2 port map( A => n10938, B => n6233, Z => n6988);
   U6504 : GTECH_NAND2 port map( A => n6990, B => n6991, Z => n11224);
   U6505 : GTECH_NAND2 port map( A => n10969, B => n6891, Z => n6991);
   U6506 : GTECH_NAND2 port map( A => n10937, B => n6233, Z => n6990);
   U6507 : GTECH_NAND2 port map( A => n6992, B => n6993, Z => n11225);
   U6508 : GTECH_NAND2 port map( A => n10968, B => n6891, Z => n6993);
   U6509 : GTECH_NAND2 port map( A => n10936, B => n6233, Z => n6992);
   U6510 : GTECH_NAND2 port map( A => n6994, B => n6995, Z => n11226);
   U6511 : GTECH_NAND2 port map( A => n10967, B => n6891, Z => n6995);
   U6512 : GTECH_NAND2 port map( A => n10935, B => n6233, Z => n6994);
   U6513 : GTECH_NAND2 port map( A => n6996, B => n6997, Z => n11227);
   U6514 : GTECH_NAND2 port map( A => n10966, B => n6891, Z => n6997);
   U6515 : GTECH_NAND2 port map( A => n10934, B => n6233, Z => n6996);
   U6516 : GTECH_NAND2 port map( A => n6998, B => n6999, Z => n11228);
   U6517 : GTECH_NAND2 port map( A => n10965, B => n6891, Z => n6999);
   U6518 : GTECH_NAND2 port map( A => n10933, B => n6233, Z => n6998);
   U6519 : GTECH_NAND2 port map( A => n7000, B => n7001, Z => n11229);
   U6520 : GTECH_NAND2 port map( A => n10964, B => n6891, Z => n7001);
   U6521 : GTECH_NAND2 port map( A => n10932, B => n6233, Z => n7000);
   U6522 : GTECH_NAND2 port map( A => n7002, B => n7003, Z => n11230);
   U6523 : GTECH_NAND2 port map( A => n10963, B => n6891, Z => n7003);
   U6524 : GTECH_NAND2 port map( A => n10931, B => n6233, Z => n7002);
   U6525 : GTECH_NAND2 port map( A => n7004, B => n7005, Z => n11231);
   U6526 : GTECH_NAND2 port map( A => n10962, B => n6891, Z => n7005);
   U6527 : GTECH_NAND2 port map( A => n10930, B => n6233, Z => n7004);
   U6528 : GTECH_NAND2 port map( A => n7006, B => n7007, Z => n11232);
   U6529 : GTECH_NAND2 port map( A => n10961, B => n6891, Z => n7007);
   U6530 : GTECH_NAND2 port map( A => n10929, B => n6233, Z => n7006);
   U6531 : GTECH_NAND2 port map( A => n7008, B => n7009, Z => n11233);
   U6532 : GTECH_NAND2 port map( A => n10960, B => n6891, Z => n7009);
   U6533 : GTECH_NAND2 port map( A => n10928, B => n6233, Z => n7008);
   U6534 : GTECH_NAND2 port map( A => n7010, B => n7011, Z => n11234);
   U6535 : GTECH_NAND2 port map( A => n10959, B => n6891, Z => n7011);
   U6536 : GTECH_NAND2 port map( A => n10927, B => n6233, Z => n7010);
   U6537 : GTECH_NAND2 port map( A => n7012, B => n7013, Z => n11235);
   U6538 : GTECH_NAND2 port map( A => n10958, B => n6891, Z => n7013);
   U6539 : GTECH_NAND2 port map( A => n10926, B => n6233, Z => n7012);
   U6540 : GTECH_NAND2 port map( A => n7014, B => n7015, Z => n11236);
   U6541 : GTECH_NAND2 port map( A => n10957, B => n6891, Z => n7015);
   U6542 : GTECH_NAND2 port map( A => n10925, B => n6233, Z => n7014);
   U6543 : GTECH_NAND2 port map( A => n7016, B => n7017, Z => n11237);
   U6544 : GTECH_NAND2 port map( A => n10956, B => n6891, Z => n7017);
   U6545 : GTECH_NAND2 port map( A => n10924, B => n6233, Z => n7016);
   U6546 : GTECH_NAND2 port map( A => n7018, B => n7019, Z => n11238);
   U6547 : GTECH_NAND2 port map( A => n10955, B => n6891, Z => n7019);
   U6548 : GTECH_NAND2 port map( A => n11037, B => n6233, Z => n7018);
   U6549 : GTECH_NAND2 port map( A => n7020, B => n7021, Z => n11239);
   U6550 : GTECH_NAND2 port map( A => n10954, B => n6891, Z => n7021);
   U6551 : GTECH_NAND2 port map( A => n11035, B => n6233, Z => n7020);
   U6552 : GTECH_NAND2 port map( A => n7022, B => n7023, Z => n11240);
   U6553 : GTECH_NAND2 port map( A => n10953, B => n6891, Z => n7023);
   U6554 : GTECH_NAND2 port map( A => n11032, B => n6233, Z => n7022);
   U6555 : GTECH_NAND2 port map( A => n7024, B => n7025, Z => n11241);
   U6556 : GTECH_NAND2 port map( A => n10952, B => n6891, Z => n7025);
   U6557 : GTECH_NAND2 port map( A => n11030, B => n6233, Z => n7024);
   U6558 : GTECH_NAND2 port map( A => n7026, B => n7027, Z => n11242);
   U6559 : GTECH_NAND2 port map( A => n10951, B => n6891, Z => n7027);
   U6560 : GTECH_NAND2 port map( A => n11028, B => n6233, Z => n7026);
   U6561 : GTECH_NAND2 port map( A => n7028, B => n7029, Z => n11243);
   U6562 : GTECH_NAND2 port map( A => n10950, B => n6891, Z => n7029);
   U6563 : GTECH_NAND2 port map( A => n11026, B => n6233, Z => n7028);
   U6564 : GTECH_NAND2 port map( A => n7030, B => n7031, Z => n11244);
   U6565 : GTECH_NAND2 port map( A => n10949, B => n6891, Z => n7031);
   U6566 : GTECH_NAND2 port map( A => n11025, B => n6233, Z => n7030);
   U6567 : GTECH_NAND2 port map( A => n7032, B => n7033, Z => n11245);
   U6568 : GTECH_NAND2 port map( A => n10948, B => n6891, Z => n7033);
   U6569 : GTECH_NAND2 port map( A => n11022, B => n6233, Z => n7032);
   U6570 : GTECH_NAND2 port map( A => n7034, B => n7035, Z => n11246);
   U6571 : GTECH_NAND2 port map( A => n10947, B => n6891, Z => n7035);
   U6572 : GTECH_NAND2 port map( A => n11048, B => n6233, Z => n7034);
   U6573 : GTECH_NAND2 port map( A => n7036, B => n7037, Z => n11247);
   U6574 : GTECH_NAND2 port map( A => n10946, B => n6891, Z => n7037);
   U6575 : GTECH_NAND2 port map( A => n11050, B => n6233, Z => n7036);
   U6576 : GTECH_NAND2 port map( A => n7038, B => n7039, Z => n11248);
   U6577 : GTECH_NAND2 port map( A => n10945, B => n6891, Z => n7039);
   U6578 : GTECH_NAND2 port map( A => n11052, B => n6233, Z => n7038);
   U6579 : GTECH_NAND2 port map( A => n7040, B => n7041, Z => n11249);
   U6580 : GTECH_NAND2 port map( A => n10944, B => n6891, Z => n7041);
   U6581 : GTECH_NAND2 port map( A => n11054, B => n6233, Z => n7040);
   U6582 : GTECH_NAND2 port map( A => n7042, B => n7043, Z => n11250);
   U6583 : GTECH_NAND2 port map( A => n10943, B => n6891, Z => n7043);
   U6584 : GTECH_NAND2 port map( A => n11056, B => n6233, Z => n7042);
   U6585 : GTECH_NAND2 port map( A => n7044, B => n7045, Z => n11251);
   U6586 : GTECH_NAND2 port map( A => n10942, B => n6891, Z => n7045);
   U6587 : GTECH_NAND2 port map( A => n11058, B => n6233, Z => n7044);
   U6588 : GTECH_NAND2 port map( A => n7046, B => n7047, Z => n11252);
   U6589 : GTECH_NAND2 port map( A => n10941, B => n6891, Z => n7047);
   U6590 : GTECH_NAND2 port map( A => n11060, B => n6233, Z => n7046);
   U6591 : GTECH_NAND2 port map( A => n7048, B => n7049, Z => n11253);
   U6592 : GTECH_NAND2 port map( A => n10940, B => n6891, Z => n7049);
   U6593 : GTECH_NAND2 port map( A => n11062, B => n6233, Z => n7048);
   U6594 : GTECH_NAND2 port map( A => n7050, B => n7051, Z => n11254);
   U6595 : GTECH_NAND2 port map( A => n10939, B => n6891, Z => n7051);
   U6596 : GTECH_NAND2 port map( A => n11020, B => n6233, Z => n7050);
   U6597 : GTECH_NAND2 port map( A => n7052, B => n7053, Z => n11255);
   U6598 : GTECH_NAND2 port map( A => n10938, B => n6891, Z => n7053);
   U6599 : GTECH_NAND2 port map( A => n11064, B => n6233, Z => n7052);
   U6600 : GTECH_NAND2 port map( A => n7054, B => n7055, Z => n11256);
   U6601 : GTECH_NAND2 port map( A => n10937, B => n6891, Z => n7055);
   U6602 : GTECH_NAND2 port map( A => n11066, B => n6233, Z => n7054);
   U6603 : GTECH_NAND2 port map( A => n7056, B => n7057, Z => n11257);
   U6604 : GTECH_NAND2 port map( A => n10936, B => n6891, Z => n7057);
   U6605 : GTECH_NAND2 port map( A => n11068, B => n6233, Z => n7056);
   U6606 : GTECH_NAND2 port map( A => n7058, B => n7059, Z => n11258);
   U6607 : GTECH_NAND2 port map( A => n10935, B => n6891, Z => n7059);
   U6608 : GTECH_NAND2 port map( A => n11070, B => n6233, Z => n7058);
   U6609 : GTECH_NAND2 port map( A => n7060, B => n7061, Z => n11259);
   U6610 : GTECH_NAND2 port map( A => n10934, B => n6891, Z => n7061);
   U6611 : GTECH_NAND2 port map( A => n11072, B => n6233, Z => n7060);
   U6612 : GTECH_NAND2 port map( A => n7062, B => n7063, Z => n11260);
   U6613 : GTECH_NAND2 port map( A => n10933, B => n6891, Z => n7063);
   U6614 : GTECH_NAND2 port map( A => n11074, B => n6233, Z => n7062);
   U6615 : GTECH_NAND2 port map( A => n7064, B => n7065, Z => n11261);
   U6616 : GTECH_NAND2 port map( A => n10932, B => n6891, Z => n7065);
   U6617 : GTECH_NAND2 port map( A => n11076, B => n6233, Z => n7064);
   U6618 : GTECH_NAND2 port map( A => n7066, B => n7067, Z => n11262);
   U6619 : GTECH_NAND2 port map( A => n10931, B => n6891, Z => n7067);
   U6620 : GTECH_NAND2 port map( A => n11078, B => n6233, Z => n7066);
   U6621 : GTECH_NAND2 port map( A => n7068, B => n7069, Z => n11263);
   U6622 : GTECH_NAND2 port map( A => n10930, B => n6891, Z => n7069);
   U6623 : GTECH_NAND2 port map( A => n11080, B => n6233, Z => n7068);
   U6624 : GTECH_NAND2 port map( A => n7070, B => n7071, Z => n11264);
   U6625 : GTECH_NAND2 port map( A => n10929, B => n6891, Z => n7071);
   U6626 : GTECH_NAND2 port map( A => n11082, B => n6233, Z => n7070);
   U6627 : GTECH_NAND2 port map( A => n7072, B => n7073, Z => n11265);
   U6628 : GTECH_NAND2 port map( A => n10928, B => n6891, Z => n7073);
   U6629 : GTECH_NAND2 port map( A => n11084, B => n6233, Z => n7072);
   U6630 : GTECH_NAND2 port map( A => n7074, B => n7075, Z => n11266);
   U6631 : GTECH_NAND2 port map( A => n10927, B => n6891, Z => n7075);
   U6632 : GTECH_NAND2 port map( A => n11086, B => n6233, Z => n7074);
   U6633 : GTECH_NAND2 port map( A => n7076, B => n7077, Z => n11267);
   U6634 : GTECH_NAND2 port map( A => n10926, B => n6891, Z => n7077);
   U6635 : GTECH_NAND2 port map( A => n11088, B => n6233, Z => n7076);
   U6636 : GTECH_NAND2 port map( A => n7078, B => n7079, Z => n11268);
   U6637 : GTECH_NAND2 port map( A => n10925, B => n6891, Z => n7079);
   U6638 : GTECH_NAND2 port map( A => n11090, B => n6233, Z => n7078);
   U6639 : GTECH_NAND2 port map( A => n7080, B => n7081, Z => n11269);
   U6640 : GTECH_NAND2 port map( A => n10924, B => n6891, Z => n7081);
   U6641 : GTECH_NAND2 port map( A => n11092, B => n6233, Z => n7080);
   U6642 : GTECH_NOT port map( A => n7082, Z => n11270);
   U6643 : GTECH_NAND2 port map( A => n7083, B => n7084, Z => n6018);
   U6644 : GTECH_NOR2 port map( A => n7085, B => n7086, Z => n7084);
   U6645 : GTECH_NOR2 port map( A => opcode_2_4_port, B => n6149, Z => n7086);
   U6646 : GTECH_NOR2 port map( A => opcode_3_4_port, B => n6147, Z => n7085);
   U6647 : GTECH_NOR2 port map( A => n7087, B => n7088, Z => n7083);
   U6648 : GTECH_NOR2 port map( A => opcode_0_4_port, B => n6080, Z => n7088);
   U6649 : GTECH_NOR2 port map( A => opcode_1_4_port, B => n6034, Z => n7087);
   U6650 : GTECH_NOT port map( A => n6079, Z => n6034);
   U6651 : GTECH_NAND2 port map( A => n7089, B => n7090, Z => n6017);
   U6652 : GTECH_NAND2 port map( A => n6233, B => mem_writeMask_3_port, Z => 
                           n7090);
   U6653 : GTECH_NAND2 port map( A => n7089, B => n7091, Z => n6016);
   U6654 : GTECH_NAND2 port map( A => n6233, B => mem_writeMask_2_port, Z => 
                           n7091);
   U6655 : GTECH_NAND2 port map( A => n7089, B => n7092, Z => n6015);
   U6656 : GTECH_NAND2 port map( A => n6233, B => mem_writeMask_1_port, Z => 
                           n7092);
   U6657 : GTECH_NAND2 port map( A => n7089, B => n7093, Z => n6014);
   U6658 : GTECH_NAND2 port map( A => n6233, B => mem_writeMask_0_port, Z => 
                           n7093);
   U6659 : GTECH_NAND2 port map( A => n7094, B => n7095, Z => n6013);
   U6660 : GTECH_NAND2 port map( A => opcode_3_0_port, B => n7096, Z => n7095);
   U6661 : GTECH_NAND2 port map( A => n7097, B => n11111, Z => n7094);
   U6662 : GTECH_NAND2 port map( A => n7098, B => n7099, Z => n6012);
   U6663 : GTECH_NOR2 port map( A => n7100, B => n7101, Z => n7099);
   U6664 : GTECH_NAND2 port map( A => n7102, B => n7103, Z => n7101);
   U6665 : GTECH_NAND2 port map( A => N2508, B => n7104, Z => n7103);
   U6666 : GTECH_NAND2 port map( A => n7105, B => stackA_1_port, Z => n7102);
   U6667 : GTECH_NOT port map( A => n7106, Z => n7100);
   U6668 : GTECH_NAND2 port map( A => N3088, B => n7107, Z => n7106);
   U6669 : GTECH_NOR2 port map( A => n7108, B => n7109, Z => n7098);
   U6670 : GTECH_NOR2 port map( A => n7110, B => n7111, Z => n7109);
   U6671 : GTECH_NOR2 port map( A => n7112, B => n7113, Z => n7108);
   U6672 : GTECH_NOT port map( A => n76, Z => n7113);
   U6673 : GTECH_NAND2 port map( A => n7114, B => n7115, Z => n6009);
   U6674 : GTECH_NAND2 port map( A => n7116, B => state_0_port, Z => n7115);
   U6675 : GTECH_NAND2 port map( A => n7117, B => n7118, Z => n7114);
   U6676 : GTECH_NAND2 port map( A => n7119, B => n7120, Z => n7117);
   U6677 : GTECH_NOR2 port map( A => n7121, B => n7122, Z => n7120);
   U6678 : GTECH_NAND2 port map( A => n7123, B => n7124, Z => n7122);
   U6679 : GTECH_NAND2 port map( A => n7125, B => n7126, Z => n7121);
   U6680 : GTECH_NOR2 port map( A => n7127, B => n7128, Z => n7119);
   U6681 : GTECH_NAND2 port map( A => n7129, B => reset_b, Z => n7128);
   U6682 : GTECH_NAND2 port map( A => n7130, B => n7131, Z => n7127);
   U6683 : GTECH_NAND2 port map( A => n6230, B => n7132, Z => n7131);
   U6684 : GTECH_NAND2 port map( A => n7133, B => n7134, Z => n7132);
   U6685 : GTECH_NOR2 port map( A => n7135, B => n7136, Z => n7134);
   U6686 : GTECH_NAND2 port map( A => n7137, B => n7138, Z => n7136);
   U6687 : GTECH_NAND2 port map( A => n7139, B => n7140, Z => n7135);
   U6688 : GTECH_NOR2 port map( A => n7141, B => n7142, Z => n7139);
   U6689 : GTECH_NOT port map( A => n7143, Z => n7133);
   U6690 : GTECH_NAND2 port map( A => n7144, B => n7145, Z => n7143);
   U6691 : GTECH_NOR2 port map( A => n7146, B => n7147, Z => n7145);
   U6692 : GTECH_NOR2 port map( A => n7148, B => n7149, Z => n7144);
   U6693 : GTECH_NAND2 port map( A => n7150, B => n7151, Z => n7148);
   U6694 : GTECH_NAND2 port map( A => n7152, B => n7153, Z => n7130);
   U6695 : GTECH_NAND2 port map( A => n7154, B => n7155, Z => n6008);
   U6696 : GTECH_NAND2 port map( A => n7116, B => state_2_port, Z => n7155);
   U6697 : GTECH_NAND2 port map( A => n7156, B => n7118, Z => n7154);
   U6698 : GTECH_NOT port map( A => n7157, Z => n7156);
   U6699 : GTECH_NOR2 port map( A => n7158, B => n7159, Z => n7157);
   U6700 : GTECH_NAND2 port map( A => reset_b, B => n7160, Z => n7159);
   U6701 : GTECH_NOR2 port map( A => n7161, B => n6638, Z => n7160);
   U6702 : GTECH_NOR2 port map( A => n7162, B => n7163, Z => n7161);
   U6703 : GTECH_NOR2 port map( A => n7164, B => n7165, Z => n7163);
   U6704 : GTECH_NAND2 port map( A => n7150, B => n7166, Z => n7165);
   U6705 : GTECH_NOT port map( A => n7167, Z => n7166);
   U6706 : GTECH_NAND2 port map( A => n7168, B => n7140, Z => n7167);
   U6707 : GTECH_NOT port map( A => n7169, Z => n7164);
   U6708 : GTECH_NOR2 port map( A => n7170, B => n7171, Z => n7169);
   U6709 : GTECH_NAND2 port map( A => n6884, B => n7172, Z => n7158);
   U6710 : GTECH_NAND2 port map( A => n7173, B => n7174, Z => n6007);
   U6711 : GTECH_NOT port map( A => n7175, Z => n7174);
   U6712 : GTECH_NOR2 port map( A => n7123, B => state_0_port, Z => n7175);
   U6713 : GTECH_NOR2 port map( A => n7176, B => n7177, Z => n7173);
   U6714 : GTECH_NOR2 port map( A => n7116, B => n7178, Z => n7177);
   U6715 : GTECH_NOT port map( A => n7179, Z => n7178);
   U6716 : GTECH_NAND2 port map( A => n7180, B => n7181, Z => n7179);
   U6717 : GTECH_NOR2 port map( A => n7182, B => n7183, Z => n7181);
   U6718 : GTECH_NOR2 port map( A => n7184, B => state_0_port, Z => n7183);
   U6719 : GTECH_NOR2 port map( A => n7185, B => n7186, Z => n7180);
   U6720 : GTECH_NOR2 port map( A => n7162, B => n7187, Z => n7186);
   U6721 : GTECH_NAND2 port map( A => n7188, B => n7189, Z => n7185);
   U6722 : GTECH_NOR2 port map( A => n7190, B => n7118, Z => n7176);
   U6723 : GTECH_NAND2 port map( A => n6361, B => n7191, Z => n6006);
   U6724 : GTECH_NAND2 port map( A => n6298, B => n11098, Z => n7191);
   U6725 : GTECH_NAND2 port map( A => n6361, B => n7192, Z => n6005);
   U6726 : GTECH_NAND2 port map( A => n6298, B => n11108, Z => n7192);
   U6727 : GTECH_NAND2 port map( A => n6361, B => n7193, Z => n6004);
   U6728 : GTECH_NAND2 port map( A => n6298, B => n11047, Z => n7193);
   U6729 : GTECH_NOT port map( A => n6263, Z => n6361);
   U6730 : GTECH_NOR2 port map( A => n7182, B => n6298, Z => n6263);
   U6731 : GTECH_NAND2 port map( A => n7194, B => n7195, Z => n6002);
   U6732 : GTECH_NAND2 port map( A => n11106, B => n6178, Z => n7195);
   U6733 : GTECH_NOR2 port map( A => n7196, B => n7197, Z => n7194);
   U6734 : GTECH_NOR2 port map( A => n7198, B => n6024, Z => n7197);
   U6735 : GTECH_NOR2 port map( A => n7199, B => n7200, Z => n7198);
   U6736 : GTECH_NAND2 port map( A => n7201, B => n7202, Z => n7200);
   U6737 : GTECH_NAND2 port map( A => n6031, B => n6472, Z => n7202);
   U6738 : GTECH_NAND2 port map( A => n7203, B => n7204, Z => n6472);
   U6739 : GTECH_NOR2 port map( A => n7205, B => n7206, Z => n7204);
   U6740 : GTECH_NOR2 port map( A => n7207, B => n7208, Z => n7206);
   U6741 : GTECH_NAND2 port map( A => n6411, B => n6465, Z => n7208);
   U6742 : GTECH_NOR2 port map( A => n11119, B => n7209, Z => n7205);
   U6743 : GTECH_NAND2 port map( A => n6486, B => n11121, Z => n7209);
   U6744 : GTECH_NOR2 port map( A => n7210, B => n6468, Z => n7203);
   U6745 : GTECH_NAND2 port map( A => n7211, B => n7212, Z => n6468);
   U6746 : GTECH_NAND2 port map( A => n7213, B => n11125, Z => n7212);
   U6747 : GTECH_NOR2 port map( A => n6387, B => n6400, Z => n7213);
   U6748 : GTECH_NOT port map( A => n6430, Z => n6400);
   U6749 : GTECH_NAND2 port map( A => n7214, B => n7215, Z => n6430);
   U6750 : GTECH_NOR2 port map( A => n11121, B => n7216, Z => n7214);
   U6751 : GTECH_NOT port map( A => n11126, Z => n7211);
   U6752 : GTECH_NOR2 port map( A => n6387, B => n7217, Z => n7210);
   U6753 : GTECH_NOR2 port map( A => n7218, B => n6485, Z => n7217);
   U6754 : GTECH_NOT port map( A => n6401, Z => n6485);
   U6755 : GTECH_NOR2 port map( A => n7219, B => n7220, Z => n7218);
   U6756 : GTECH_NAND2 port map( A => n6399, B => n7221, Z => n7220);
   U6757 : GTECH_NOT port map( A => n7222, Z => n7221);
   U6758 : GTECH_NOR2 port map( A => n7223, B => n7224, Z => n7222);
   U6759 : GTECH_NOT port map( A => n6482, Z => n6399);
   U6760 : GTECH_NOT port map( A => n6492, Z => n7219);
   U6761 : GTECH_NOR2 port map( A => n7225, B => n6456, Z => n6492);
   U6762 : GTECH_NOR2 port map( A => n7226, B => n7227, Z => n6456);
   U6763 : GTECH_NOT port map( A => n6411, Z => n7227);
   U6764 : GTECH_NOR2 port map( A => n6410, B => n6408, Z => n6411);
   U6765 : GTECH_NOT port map( A => n11122, Z => n6408);
   U6766 : GTECH_NOT port map( A => n6397, Z => n7225);
   U6767 : GTECH_NAND2 port map( A => n7228, B => n7215, Z => n6397);
   U6768 : GTECH_NOR2 port map( A => n7216, B => n6465, Z => n7228);
   U6769 : GTECH_NOR2 port map( A => n7229, B => n11120, Z => n6387);
   U6770 : GTECH_NAND2 port map( A => n6029, B => n6356, Z => n7201);
   U6771 : GTECH_NAND2 port map( A => n7230, B => n7231, Z => n6356);
   U6772 : GTECH_NOR2 port map( A => n7232, B => n7233, Z => n7231);
   U6773 : GTECH_NAND2 port map( A => n7234, B => n7235, Z => n7233);
   U6774 : GTECH_NAND2 port map( A => n7236, B => n7237, Z => n7235);
   U6775 : GTECH_NOT port map( A => n6340, Z => n7237);
   U6776 : GTECH_NAND2 port map( A => n6303, B => n6314, Z => n6340);
   U6777 : GTECH_NAND2 port map( A => n7238, B => n11114, Z => n6314);
   U6778 : GTECH_NOR2 port map( A => n6323, B => n7239, Z => n7238);
   U6779 : GTECH_NOR2 port map( A => n7240, B => n6279, Z => n7236);
   U6780 : GTECH_NAND2 port map( A => n6343, B => n7241, Z => n6279);
   U6781 : GTECH_NOT port map( A => n7242, Z => n7241);
   U6782 : GTECH_NOR2 port map( A => n6324, B => n7239, Z => n7242);
   U6783 : GTECH_NOR2 port map( A => n6296, B => n7243, Z => n7240);
   U6784 : GTECH_NAND2 port map( A => n7244, B => n7245, Z => n7243);
   U6785 : GTECH_NAND2 port map( A => n7246, B => n11114, Z => n7234);
   U6786 : GTECH_NOR2 port map( A => n6350, B => n6293, Z => n7246);
   U6787 : GTECH_NOR2 port map( A => n6323, B => n6348, Z => n7232);
   U6788 : GTECH_NAND2 port map( A => n11114, B => n6293, Z => n6348);
   U6789 : GTECH_NOR2 port map( A => n7247, B => n6352, Z => n7230);
   U6790 : GTECH_NAND2 port map( A => n7248, B => n7249, Z => n6352);
   U6791 : GTECH_NAND2 port map( A => n7250, B => n11117, Z => n7249);
   U6792 : GTECH_NOR2 port map( A => n6271, B => n6282, Z => n7250);
   U6793 : GTECH_NOR2 port map( A => n7251, B => n6324, Z => n6282);
   U6794 : GTECH_NAND2 port map( A => n6293, B => n11115, Z => n7251);
   U6795 : GTECH_NOT port map( A => n11118, Z => n7248);
   U6796 : GTECH_NOR2 port map( A => n6271, B => n6283, Z => n7247);
   U6797 : GTECH_NOT port map( A => n6303, Z => n6271);
   U6798 : GTECH_NAND2 port map( A => n7252, B => n7253, Z => n6303);
   U6799 : GTECH_NOR2 port map( A => n11114, B => n7254, Z => n7252);
   U6800 : GTECH_NAND2 port map( A => n7255, B => n7256, Z => n7199);
   U6801 : GTECH_NAND2 port map( A => n6133, B => n7257, Z => n7256);
   U6802 : GTECH_NAND2 port map( A => n7258, B => n7259, Z => n7257);
   U6803 : GTECH_NOR2 port map( A => n7260, B => n7261, Z => n7259);
   U6804 : GTECH_NAND2 port map( A => n7262, B => n7263, Z => n7261);
   U6805 : GTECH_NAND2 port map( A => n7264, B => n11137, Z => n7263);
   U6806 : GTECH_NOT port map( A => n7265, Z => n7262);
   U6807 : GTECH_NOR2 port map( A => n7266, B => n7267, Z => n7265);
   U6808 : GTECH_NOR2 port map( A => n6067, B => n7268, Z => n7260);
   U6809 : GTECH_NOT port map( A => n6066, Z => n6067);
   U6810 : GTECH_NOR2 port map( A => n7269, B => n6212, Z => n7258);
   U6811 : GTECH_NOT port map( A => n7270, Z => n6212);
   U6812 : GTECH_NOR2 port map( A => n11142, B => n7271, Z => n7270);
   U6813 : GTECH_NOR2 port map( A => n7272, B => n6101, Z => n7271);
   U6814 : GTECH_NAND2 port map( A => n6066, B => n6104, Z => n7272);
   U6815 : GTECH_NAND2 port map( A => n7273, B => n7274, Z => n6104);
   U6816 : GTECH_NOR2 port map( A => n11137, B => n11138, Z => n7274);
   U6817 : GTECH_NOR2 port map( A => n7275, B => n7276, Z => n7273);
   U6818 : GTECH_NOR2 port map( A => n7277, B => n7278, Z => n7269);
   U6819 : GTECH_NAND2 port map( A => n6163, B => n6124, Z => n7278);
   U6820 : GTECH_NOR2 port map( A => n6063, B => n7279, Z => n6163);
   U6821 : GTECH_NOR2 port map( A => n6218, B => n6066, Z => n7279);
   U6822 : GTECH_NAND2 port map( A => n7280, B => n7281, Z => n6066);
   U6823 : GTECH_NOR2 port map( A => n11136, B => n11138, Z => n7281);
   U6824 : GTECH_NOR2 port map( A => n7267, B => n7275, Z => n7280);
   U6825 : GTECH_NOR2 port map( A => n7282, B => n7266, Z => n6063);
   U6826 : GTECH_NOT port map( A => n6117, Z => n7266);
   U6827 : GTECH_NOR2 port map( A => n6054, B => n6114, Z => n6117);
   U6828 : GTECH_NAND2 port map( A => n7283, B => n6050, Z => n7282);
   U6829 : GTECH_NAND2 port map( A => n7284, B => n6062, Z => n7277);
   U6830 : GTECH_NOT port map( A => n6155, Z => n6062);
   U6831 : GTECH_NOR2 port map( A => n7285, B => n6217, Z => n6155);
   U6832 : GTECH_NAND2 port map( A => n6216, B => n7283, Z => n7285);
   U6833 : GTECH_NAND2 port map( A => n7264, B => n7283, Z => n7284);
   U6834 : GTECH_NOT port map( A => n7286, Z => n7283);
   U6835 : GTECH_NOR2 port map( A => n7276, B => n6114, Z => n7264);
   U6836 : GTECH_NAND2 port map( A => n6079, B => n6587, Z => n7255);
   U6837 : GTECH_NAND2 port map( A => n7287, B => n7288, Z => n6587);
   U6838 : GTECH_NOR2 port map( A => n7289, B => n7290, Z => n7288);
   U6839 : GTECH_NOR2 port map( A => n6524, B => n7291, Z => n7290);
   U6840 : GTECH_NAND2 port map( A => n11130, B => n7292, Z => n7291);
   U6841 : GTECH_NOR2 port map( A => n11129, B => n7293, Z => n7289);
   U6842 : GTECH_NAND2 port map( A => n7294, B => n11128, Z => n7293);
   U6843 : GTECH_NOR2 port map( A => n7295, B => n6583, Z => n7287);
   U6844 : GTECH_NAND2 port map( A => n7296, B => n7297, Z => n6583);
   U6845 : GTECH_NAND2 port map( A => n7298, B => n11133, Z => n7297);
   U6846 : GTECH_NOR2 port map( A => n6513, B => n6502, Z => n7298);
   U6847 : GTECH_NOR2 port map( A => n7299, B => n7300, Z => n6513);
   U6848 : GTECH_NAND2 port map( A => n6524, B => n7301, Z => n7299);
   U6849 : GTECH_NOT port map( A => n11134, Z => n7296);
   U6850 : GTECH_NOR2 port map( A => n6502, B => n7302, Z => n7295);
   U6851 : GTECH_NOR2 port map( A => n7303, B => n6546, Z => n7302);
   U6852 : GTECH_NOR2 port map( A => n7304, B => n7305, Z => n7303);
   U6853 : GTECH_NOT port map( A => n7306, Z => n7305);
   U6854 : GTECH_NOR2 port map( A => n6573, B => n7307, Z => n7306);
   U6855 : GTECH_NOR2 port map( A => n7308, B => n7309, Z => n7307);
   U6856 : GTECH_NAND2 port map( A => n6526, B => n11130, Z => n7308);
   U6857 : GTECH_NAND2 port map( A => n6605, B => n6544, Z => n7304);
   U6858 : GTECH_NAND2 port map( A => n7310, B => n7294, Z => n6544);
   U6859 : GTECH_NOR2 port map( A => n7300, B => n6559, Z => n7310);
   U6860 : GTECH_NAND2 port map( A => n11128, B => n11129, Z => n6559);
   U6861 : GTECH_NAND2 port map( A => n7311, B => n11129, Z => n6605);
   U6862 : GTECH_NOR2 port map( A => n6560, B => n7300, Z => n7311);
   U6863 : GTECH_NOR2 port map( A => n7312, B => n11128, Z => n6502);
   U6864 : GTECH_NOR2 port map( A => n7313, B => n6074, Z => n7196);
   U6865 : GTECH_NOR2 port map( A => n7314, B => n7315, Z => n7313);
   U6866 : GTECH_NAND2 port map( A => n7316, B => n7317, Z => n7315);
   U6867 : GTECH_NAND2 port map( A => n11038, B => n6031, Z => n7317);
   U6868 : GTECH_NAND2 port map( A => n11040, B => n6079, Z => n7316);
   U6869 : GTECH_NOT port map( A => n7318, Z => n7314);
   U6870 : GTECH_NAND2 port map( A => n6133, B => n11039, Z => n7318);
   U6871 : GTECH_NAND2 port map( A => n7319, B => n7320, Z => n6001);
   U6872 : GTECH_NAND2 port map( A => mem_read(0), B => n7321, Z => n7320);
   U6873 : GTECH_NAND2 port map( A => n11111, B => n7322, Z => n7319);
   U6874 : GTECH_NAND2 port map( A => n7323, B => n7324, Z => n6000);
   U6875 : GTECH_NAND2 port map( A => mem_read(1), B => n7321, Z => n7324);
   U6876 : GTECH_NAND2 port map( A => n11112, B => n7322, Z => n7323);
   U6877 : GTECH_NAND2 port map( A => n7325, B => n7326, Z => n5999);
   U6878 : GTECH_NAND2 port map( A => opcode_3_1_port, B => n7096, Z => n7326);
   U6879 : GTECH_NAND2 port map( A => n7097, B => n11112, Z => n7325);
   U6880 : GTECH_NAND2 port map( A => n7327, B => n7328, Z => n5998);
   U6881 : GTECH_NAND2 port map( A => n7321, B => mem_read(2), Z => n7328);
   U6882 : GTECH_NAND2 port map( A => n11113, B => n7322, Z => n7327);
   U6883 : GTECH_NAND2 port map( A => n7329, B => n7330, Z => n5997);
   U6884 : GTECH_NAND2 port map( A => opcode_3_2_port, B => n7096, Z => n7330);
   U6885 : GTECH_NAND2 port map( A => n7097, B => n11113, Z => n7329);
   U6886 : GTECH_NAND2 port map( A => n7331, B => n7332, Z => n5996);
   U6887 : GTECH_NAND2 port map( A => n7321, B => mem_read(3), Z => n7332);
   U6888 : GTECH_NAND2 port map( A => n11114, B => n7322, Z => n7331);
   U6889 : GTECH_NAND2 port map( A => n7333, B => n7334, Z => n5995);
   U6890 : GTECH_NAND2 port map( A => opcode_3_3_port, B => n7096, Z => n7334);
   U6891 : GTECH_NAND2 port map( A => n7097, B => n11114, Z => n7333);
   U6892 : GTECH_NAND2 port map( A => n7335, B => n7336, Z => n5994);
   U6893 : GTECH_NAND2 port map( A => n7321, B => mem_read(4), Z => n7336);
   U6894 : GTECH_NAND2 port map( A => n11115, B => n7322, Z => n7335);
   U6895 : GTECH_NAND2 port map( A => n7337, B => n7338, Z => n5993);
   U6896 : GTECH_NAND2 port map( A => opcode_3_4_port, B => n7096, Z => n7338);
   U6897 : GTECH_NAND2 port map( A => n7097, B => n11115, Z => n7337);
   U6898 : GTECH_NAND2 port map( A => n7339, B => n7340, Z => n5992);
   U6899 : GTECH_NAND2 port map( A => n7321, B => mem_read(5), Z => n7340);
   U6900 : GTECH_NAND2 port map( A => n11116, B => n7322, Z => n7339);
   U6901 : GTECH_NAND2 port map( A => n7341, B => n7342, Z => n5991);
   U6902 : GTECH_NAND2 port map( A => opcode_3_5_port, B => n7096, Z => n7342);
   U6903 : GTECH_NAND2 port map( A => n7097, B => n11116, Z => n7341);
   U6904 : GTECH_NAND2 port map( A => n7343, B => n7344, Z => n5990);
   U6905 : GTECH_NAND2 port map( A => mem_read(6), B => n7321, Z => n7344);
   U6906 : GTECH_NAND2 port map( A => n11117, B => n7322, Z => n7343);
   U6907 : GTECH_NAND2 port map( A => n7345, B => n7346, Z => n5989);
   U6908 : GTECH_NAND2 port map( A => opcode_3_6_port, B => n7096, Z => n7346);
   U6909 : GTECH_NAND2 port map( A => n7097, B => n11117, Z => n7345);
   U6910 : GTECH_NAND2 port map( A => n7347, B => n7348, Z => n5988);
   U6911 : GTECH_NAND2 port map( A => mem_read(7), B => n7321, Z => n7348);
   U6912 : GTECH_NAND2 port map( A => n11118, B => n7322, Z => n7347);
   U6913 : GTECH_NAND2 port map( A => n7349, B => n7350, Z => n5987);
   U6914 : GTECH_NAND2 port map( A => mem_read(8), B => n7321, Z => n7350);
   U6915 : GTECH_NAND2 port map( A => n11119, B => n7322, Z => n7349);
   U6916 : GTECH_NAND2 port map( A => n7351, B => n7352, Z => n5986);
   U6917 : GTECH_NAND2 port map( A => opcode_2_0_port, B => n7096, Z => n7352);
   U6918 : GTECH_NAND2 port map( A => n7097, B => n11119, Z => n7351);
   U6919 : GTECH_NAND2 port map( A => n7353, B => n7354, Z => n5985);
   U6920 : GTECH_NAND2 port map( A => mem_read(9), B => n7321, Z => n7354);
   U6921 : GTECH_NAND2 port map( A => n11120, B => n7322, Z => n7353);
   U6922 : GTECH_NAND2 port map( A => n7355, B => n7356, Z => n5984);
   U6923 : GTECH_NAND2 port map( A => opcode_2_1_port, B => n7096, Z => n7356);
   U6924 : GTECH_NAND2 port map( A => n7097, B => n11120, Z => n7355);
   U6925 : GTECH_NAND2 port map( A => n7357, B => n7358, Z => n5983);
   U6926 : GTECH_NAND2 port map( A => n7321, B => mem_read(10), Z => n7358);
   U6927 : GTECH_NAND2 port map( A => n11121, B => n7322, Z => n7357);
   U6928 : GTECH_NAND2 port map( A => n7359, B => n7360, Z => n5982);
   U6929 : GTECH_NAND2 port map( A => opcode_2_2_port, B => n7096, Z => n7360);
   U6930 : GTECH_NAND2 port map( A => n7097, B => n11121, Z => n7359);
   U6931 : GTECH_NAND2 port map( A => n7361, B => n7362, Z => n5981);
   U6932 : GTECH_NAND2 port map( A => n7321, B => mem_read(11), Z => n7362);
   U6933 : GTECH_NAND2 port map( A => n11122, B => n7322, Z => n7361);
   U6934 : GTECH_NAND2 port map( A => n7363, B => n7364, Z => n5980);
   U6935 : GTECH_NAND2 port map( A => opcode_2_3_port, B => n7096, Z => n7364);
   U6936 : GTECH_NAND2 port map( A => n7097, B => n11122, Z => n7363);
   U6937 : GTECH_NAND2 port map( A => n7365, B => n7366, Z => n5979);
   U6938 : GTECH_NAND2 port map( A => n7321, B => mem_read(12), Z => n7366);
   U6939 : GTECH_NAND2 port map( A => n11123, B => n7322, Z => n7365);
   U6940 : GTECH_NAND2 port map( A => n7367, B => n7368, Z => n5978);
   U6941 : GTECH_NAND2 port map( A => opcode_2_4_port, B => n7096, Z => n7368);
   U6942 : GTECH_NAND2 port map( A => n7097, B => n11123, Z => n7367);
   U6943 : GTECH_NAND2 port map( A => n7369, B => n7370, Z => n5977);
   U6944 : GTECH_NAND2 port map( A => n7321, B => mem_read(13), Z => n7370);
   U6945 : GTECH_NAND2 port map( A => n11124, B => n7322, Z => n7369);
   U6946 : GTECH_NAND2 port map( A => n7371, B => n7372, Z => n5976);
   U6947 : GTECH_NAND2 port map( A => opcode_2_5_port, B => n7096, Z => n7372);
   U6948 : GTECH_NAND2 port map( A => n7097, B => n11124, Z => n7371);
   U6949 : GTECH_NAND2 port map( A => n7373, B => n7374, Z => n5975);
   U6950 : GTECH_NAND2 port map( A => mem_read(14), B => n7321, Z => n7374);
   U6951 : GTECH_NAND2 port map( A => n11125, B => n7322, Z => n7373);
   U6952 : GTECH_NAND2 port map( A => n7375, B => n7376, Z => n5974);
   U6953 : GTECH_NAND2 port map( A => opcode_2_6_port, B => n7096, Z => n7376);
   U6954 : GTECH_NAND2 port map( A => n7097, B => n11125, Z => n7375);
   U6955 : GTECH_NAND2 port map( A => n7377, B => n7378, Z => n5973);
   U6956 : GTECH_NAND2 port map( A => mem_read(15), B => n7321, Z => n7378);
   U6957 : GTECH_NAND2 port map( A => n11126, B => n7322, Z => n7377);
   U6958 : GTECH_NAND2 port map( A => n7379, B => n7380, Z => n5972);
   U6959 : GTECH_NAND2 port map( A => n7321, B => mem_read(16), Z => n7380);
   U6960 : GTECH_NAND2 port map( A => n11127, B => n7322, Z => n7379);
   U6961 : GTECH_NAND2 port map( A => n7381, B => n7382, Z => n5971);
   U6962 : GTECH_NAND2 port map( A => opcode_1_0_port, B => n7096, Z => n7382);
   U6963 : GTECH_NAND2 port map( A => n7097, B => n11127, Z => n7381);
   U6964 : GTECH_NAND2 port map( A => n7383, B => n7384, Z => n5970);
   U6965 : GTECH_NAND2 port map( A => mem_read(17), B => n7321, Z => n7384);
   U6966 : GTECH_NAND2 port map( A => n11128, B => n7322, Z => n7383);
   U6967 : GTECH_NAND2 port map( A => n7385, B => n7386, Z => n5969);
   U6968 : GTECH_NAND2 port map( A => opcode_1_1_port, B => n7096, Z => n7386);
   U6969 : GTECH_NAND2 port map( A => n7097, B => n11128, Z => n7385);
   U6970 : GTECH_NAND2 port map( A => n7387, B => n7388, Z => n5968);
   U6971 : GTECH_NAND2 port map( A => n7321, B => mem_read(18), Z => n7388);
   U6972 : GTECH_NAND2 port map( A => n11129, B => n7322, Z => n7387);
   U6973 : GTECH_NAND2 port map( A => n7389, B => n7390, Z => n5967);
   U6974 : GTECH_NAND2 port map( A => opcode_1_2_port, B => n7096, Z => n7390);
   U6975 : GTECH_NAND2 port map( A => n7097, B => n11129, Z => n7389);
   U6976 : GTECH_NAND2 port map( A => n7391, B => n7392, Z => n5966);
   U6977 : GTECH_NAND2 port map( A => n7321, B => mem_read(19), Z => n7392);
   U6978 : GTECH_NAND2 port map( A => n11130, B => n7322, Z => n7391);
   U6979 : GTECH_NAND2 port map( A => n7393, B => n7394, Z => n5965);
   U6980 : GTECH_NAND2 port map( A => opcode_1_3_port, B => n7096, Z => n7394);
   U6981 : GTECH_NAND2 port map( A => n7097, B => n11130, Z => n7393);
   U6982 : GTECH_NAND2 port map( A => n7395, B => n7396, Z => n5964);
   U6983 : GTECH_NAND2 port map( A => n7321, B => mem_read(20), Z => n7396);
   U6984 : GTECH_NAND2 port map( A => n11131, B => n7322, Z => n7395);
   U6985 : GTECH_NAND2 port map( A => n7397, B => n7398, Z => n5963);
   U6986 : GTECH_NAND2 port map( A => opcode_1_4_port, B => n7096, Z => n7398);
   U6987 : GTECH_NAND2 port map( A => n7097, B => n11131, Z => n7397);
   U6988 : GTECH_NAND2 port map( A => n7399, B => n7400, Z => n5962);
   U6989 : GTECH_NAND2 port map( A => n7321, B => mem_read(21), Z => n7400);
   U6990 : GTECH_NAND2 port map( A => n11132, B => n7322, Z => n7399);
   U6991 : GTECH_NAND2 port map( A => n7401, B => n7402, Z => n5961);
   U6992 : GTECH_NAND2 port map( A => opcode_1_5_port, B => n7096, Z => n7402);
   U6993 : GTECH_NAND2 port map( A => n7097, B => n11132, Z => n7401);
   U6994 : GTECH_NAND2 port map( A => n7403, B => n7404, Z => n5960);
   U6995 : GTECH_NAND2 port map( A => mem_read(22), B => n7321, Z => n7404);
   U6996 : GTECH_NAND2 port map( A => n11133, B => n7322, Z => n7403);
   U6997 : GTECH_NAND2 port map( A => n7405, B => n7406, Z => n5959);
   U6998 : GTECH_NAND2 port map( A => opcode_1_6_port, B => n7096, Z => n7406);
   U6999 : GTECH_NAND2 port map( A => n7097, B => n11133, Z => n7405);
   U7000 : GTECH_NAND2 port map( A => n7407, B => n7408, Z => n5958);
   U7001 : GTECH_NAND2 port map( A => mem_read(23), B => n7321, Z => n7408);
   U7002 : GTECH_NAND2 port map( A => n11134, B => n7322, Z => n7407);
   U7003 : GTECH_NAND2 port map( A => n7409, B => n7410, Z => n5939);
   U7004 : GTECH_NAND2 port map( A => mem_read(24), B => n7321, Z => n7410);
   U7005 : GTECH_NAND2 port map( A => n11135, B => n7322, Z => n7409);
   U7006 : GTECH_NAND2 port map( A => n7411, B => n7412, Z => n5938);
   U7007 : GTECH_NAND2 port map( A => opcode_0_0_port, B => n7096, Z => n7412);
   U7008 : GTECH_NAND2 port map( A => n7097, B => n11135, Z => n7411);
   U7009 : GTECH_NAND2 port map( A => n7413, B => n7414, Z => n5937);
   U7010 : GTECH_NAND2 port map( A => mem_read(25), B => n7321, Z => n7414);
   U7011 : GTECH_NAND2 port map( A => n11136, B => n7322, Z => n7413);
   U7012 : GTECH_NAND2 port map( A => n7415, B => n7416, Z => n5936);
   U7013 : GTECH_NAND2 port map( A => opcode_0_1_port, B => n7096, Z => n7416);
   U7014 : GTECH_NAND2 port map( A => n7097, B => n11136, Z => n7415);
   U7015 : GTECH_NAND2 port map( A => n7417, B => n7418, Z => n5935);
   U7016 : GTECH_NAND2 port map( A => n7321, B => mem_read(26), Z => n7418);
   U7017 : GTECH_NAND2 port map( A => n11137, B => n7322, Z => n7417);
   U7018 : GTECH_NAND2 port map( A => n7419, B => n7420, Z => n5934);
   U7019 : GTECH_NAND2 port map( A => opcode_0_2_port, B => n7096, Z => n7420);
   U7020 : GTECH_NAND2 port map( A => n7097, B => n11137, Z => n7419);
   U7021 : GTECH_NAND2 port map( A => n7421, B => n7422, Z => n5933);
   U7022 : GTECH_NAND2 port map( A => n7321, B => mem_read(27), Z => n7422);
   U7023 : GTECH_NAND2 port map( A => n11138, B => n7322, Z => n7421);
   U7024 : GTECH_NAND2 port map( A => n7423, B => n7424, Z => n5932);
   U7025 : GTECH_NAND2 port map( A => opcode_0_3_port, B => n7096, Z => n7424);
   U7026 : GTECH_NAND2 port map( A => n7097, B => n11138, Z => n7423);
   U7027 : GTECH_NAND2 port map( A => n7425, B => n7426, Z => n5931);
   U7028 : GTECH_NAND2 port map( A => n7321, B => mem_read(28), Z => n7426);
   U7029 : GTECH_NAND2 port map( A => n11139, B => n7322, Z => n7425);
   U7030 : GTECH_NAND2 port map( A => n7427, B => n7428, Z => n5930);
   U7031 : GTECH_NAND2 port map( A => opcode_0_4_port, B => n7096, Z => n7428);
   U7032 : GTECH_NAND2 port map( A => n7097, B => n11139, Z => n7427);
   U7033 : GTECH_NAND2 port map( A => n7429, B => n7430, Z => n5929);
   U7034 : GTECH_NAND2 port map( A => n7321, B => mem_read(29), Z => n7430);
   U7035 : GTECH_NAND2 port map( A => n11140, B => n7322, Z => n7429);
   U7036 : GTECH_NAND2 port map( A => n7431, B => n7432, Z => n5928);
   U7037 : GTECH_NAND2 port map( A => opcode_0_5_port, B => n7096, Z => n7432);
   U7038 : GTECH_NAND2 port map( A => n7097, B => n11140, Z => n7431);
   U7039 : GTECH_NAND2 port map( A => n7433, B => n7434, Z => n5927);
   U7040 : GTECH_NAND2 port map( A => mem_read(30), B => n7321, Z => n7434);
   U7041 : GTECH_NAND2 port map( A => n11141, B => n7322, Z => n7433);
   U7042 : GTECH_NAND2 port map( A => n7435, B => n7436, Z => n5926);
   U7043 : GTECH_NAND2 port map( A => opcode_0_6_port, B => n7096, Z => n7436);
   U7044 : GTECH_NOT port map( A => n7097, Z => n7096);
   U7045 : GTECH_NAND2 port map( A => n7097, B => n11141, Z => n7435);
   U7046 : GTECH_NAND2 port map( A => n7437, B => n7438, Z => n5925);
   U7047 : GTECH_NAND2 port map( A => mem_read(31), B => n7321, Z => n7438);
   U7048 : GTECH_NOR2 port map( A => n7322, B => n7182, Z => n7321);
   U7049 : GTECH_NAND2 port map( A => n11142, B => n7322, Z => n7437);
   U7050 : GTECH_NAND2 port map( A => n7439, B => n7440, Z => n7322);
   U7051 : GTECH_NAND2 port map( A => reset_b, B => n7441, Z => n7440);
   U7052 : GTECH_NAND2 port map( A => n6860, B => n7442, Z => n7441);
   U7053 : GTECH_NAND2 port map( A => n7443, B => n7444, Z => n5924);
   U7054 : GTECH_NAND2 port map( A => n7445, B => n7446, Z => n7444);
   U7055 : GTECH_NOT port map( A => n7447, Z => n7446);
   U7056 : GTECH_NOR2 port map( A => n7182, B => n7448, Z => n7445);
   U7057 : GTECH_NAND2 port map( A => n11109, B => n7447, Z => n7443);
   U7058 : GTECH_NOR2 port map( A => n7449, B => n7450, Z => n7447);
   U7059 : GTECH_NOR2 port map( A => n7451, B => interrupt, Z => n7450);
   U7060 : GTECH_NOR2 port map( A => n7452, B => n7182, Z => n5923);
   U7061 : GTECH_NOR2 port map( A => break_port, B => n7453, Z => n7452);
   U7062 : GTECH_NAND2 port map( A => n7454, B => n7455, Z => n7453);
   U7063 : GTECH_NAND2 port map( A => n7456, B => n7457, Z => n7455);
   U7064 : GTECH_NOR2 port map( A => n7458, B => n6127, Z => n7457);
   U7065 : GTECH_NOR2 port map( A => n6168, B => n7459, Z => n7456);
   U7066 : GTECH_NAND2 port map( A => enable, B => n7460, Z => n7454);
   U7067 : GTECH_NOT port map( A => n7461, Z => n7460);
   U7068 : GTECH_NOT port map( A => n7462, Z => n5922);
   U7069 : GTECH_NOR2 port map( A => n7463, B => n7464, Z => n7462);
   U7070 : GTECH_NAND2 port map( A => n7465, B => n7466, Z => n7464);
   U7071 : GTECH_NAND2 port map( A => N3087, B => n7107, Z => n7466);
   U7072 : GTECH_NOR2 port map( A => n7467, B => n7468, Z => n7465);
   U7073 : GTECH_NOR2 port map( A => n7469, B => n7111, Z => n7468);
   U7074 : GTECH_NOR2 port map( A => pc_0_port, B => n7112, Z => n7467);
   U7075 : GTECH_NAND2 port map( A => n7470, B => n7471, Z => n7463);
   U7076 : GTECH_NAND2 port map( A => N2507, B => n7104, Z => n7471);
   U7077 : GTECH_NAND2 port map( A => n7105, B => stackA_0_port, Z => n7470);
   U7078 : GTECH_NAND2 port map( A => n7472, B => n7473, Z => n5921);
   U7079 : GTECH_NOR2 port map( A => n7474, B => n7475, Z => n7473);
   U7080 : GTECH_NOR2 port map( A => n7476, B => n7477, Z => n7472);
   U7081 : GTECH_NOR2 port map( A => n7439, B => n5273, Z => n7476);
   U7082 : GTECH_NAND2 port map( A => n7478, B => n7479, Z => n5920);
   U7083 : GTECH_NAND2 port map( A => n6891, B => n7480, Z => n7479);
   U7084 : GTECH_NAND2 port map( A => n7481, B => n7482, Z => n7480);
   U7085 : GTECH_NOT port map( A => n7483, Z => n7481);
   U7086 : GTECH_NAND2 port map( A => n7484, B => n7485, Z => n7483);
   U7087 : GTECH_NAND2 port map( A => n7486, B => n6230, Z => n7485);
   U7088 : GTECH_NAND2 port map( A => n7442, B => n7487, Z => n7484);
   U7089 : GTECH_NAND2 port map( A => n7488, B => n7129, Z => n7487);
   U7090 : GTECH_NOR2 port map( A => n7489, B => n7490, Z => n7129);
   U7091 : GTECH_NAND2 port map( A => n7491, B => n7492, Z => n7489);
   U7092 : GTECH_NAND2 port map( A => out_mem_readEnable_port, B => n6233, Z =>
                           n7478);
   U7093 : GTECH_NAND2 port map( A => n7493, B => n7494, Z => n5919);
   U7094 : GTECH_NOR2 port map( A => n7495, B => n7496, Z => n7494);
   U7095 : GTECH_NAND2 port map( A => n7497, B => n7498, Z => n7496);
   U7096 : GTECH_NAND2 port map( A => N2509, B => n7104, Z => n7498);
   U7097 : GTECH_NAND2 port map( A => n7105, B => stackA_2_port, Z => n7497);
   U7098 : GTECH_NOT port map( A => n7499, Z => n7495);
   U7099 : GTECH_NAND2 port map( A => N3089, B => n7107, Z => n7499);
   U7100 : GTECH_NOT port map( A => n7500, Z => n7493);
   U7101 : GTECH_NAND2 port map( A => n7501, B => n7502, Z => n7500);
   U7102 : GTECH_NAND2 port map( A => pc_2_port, B => n7503, Z => n7502);
   U7103 : GTECH_NAND2 port map( A => n7504, B => n75, Z => n7501);
   U7104 : GTECH_NAND2 port map( A => n7505, B => n7506, Z => n5918);
   U7105 : GTECH_NOR2 port map( A => n7507, B => n7508, Z => n7506);
   U7106 : GTECH_NAND2 port map( A => n7509, B => n7510, Z => n7508);
   U7107 : GTECH_NAND2 port map( A => N2510, B => n7104, Z => n7510);
   U7108 : GTECH_NAND2 port map( A => n7105, B => stackA_3_port, Z => n7509);
   U7109 : GTECH_NOT port map( A => n7511, Z => n7507);
   U7110 : GTECH_NAND2 port map( A => N3090, B => n7107, Z => n7511);
   U7111 : GTECH_NOT port map( A => n7512, Z => n7505);
   U7112 : GTECH_NAND2 port map( A => n7513, B => n7514, Z => n7512);
   U7113 : GTECH_NAND2 port map( A => pc_3_port, B => n7503, Z => n7514);
   U7114 : GTECH_NAND2 port map( A => n7504, B => n74, Z => n7513);
   U7115 : GTECH_NAND2 port map( A => n7515, B => n7516, Z => n5917);
   U7116 : GTECH_NOR2 port map( A => n7517, B => n7518, Z => n7516);
   U7117 : GTECH_NAND2 port map( A => n7519, B => n7520, Z => n7518);
   U7118 : GTECH_NAND2 port map( A => N2511, B => n7104, Z => n7520);
   U7119 : GTECH_NAND2 port map( A => n7105, B => stackA_4_port, Z => n7519);
   U7120 : GTECH_NOT port map( A => n7521, Z => n7517);
   U7121 : GTECH_NAND2 port map( A => N3091, B => n7107, Z => n7521);
   U7122 : GTECH_NOR2 port map( A => n7522, B => n7523, Z => n7515);
   U7123 : GTECH_NOR2 port map( A => n6735, B => n7111, Z => n7523);
   U7124 : GTECH_NOT port map( A => pc_4_port, Z => n6735);
   U7125 : GTECH_NOR2 port map( A => n7112, B => n7524, Z => n7522);
   U7126 : GTECH_NOT port map( A => n73, Z => n7524);
   U7127 : GTECH_NAND2 port map( A => n7525, B => n7526, Z => n5916);
   U7128 : GTECH_NOT port map( A => n7527, Z => n7526);
   U7129 : GTECH_NOR2 port map( A => n7528, B => n7503, Z => n7527);
   U7130 : GTECH_NAND2 port map( A => n7529, B => reset_b, Z => n7528);
   U7131 : GTECH_NAND2 port map( A => n7530, B => n7531, Z => n7529);
   U7132 : GTECH_NOR2 port map( A => n7532, B => n6860, Z => n7531);
   U7133 : GTECH_NOR2 port map( A => n7162, B => n7533, Z => n7532);
   U7134 : GTECH_NOR2 port map( A => n7534, B => n7535, Z => n7533);
   U7135 : GTECH_NOT port map( A => n7536, Z => n7535);
   U7136 : GTECH_NOR2 port map( A => n7537, B => n7538, Z => n7536);
   U7137 : GTECH_NAND2 port map( A => n7539, B => n7540, Z => n7538);
   U7138 : GTECH_NAND2 port map( A => n72, B => n7541, Z => n7540);
   U7139 : GTECH_NAND2 port map( A => N2512, B => n7542, Z => n7539);
   U7140 : GTECH_NOR2 port map( A => n7082, B => n7138, Z => n7537);
   U7141 : GTECH_NAND2 port map( A => n7543, B => n7544, Z => n7534);
   U7142 : GTECH_NAND2 port map( A => n7147, B => stackA_5_port, Z => n7544);
   U7143 : GTECH_NAND2 port map( A => N3092, B => n7141, Z => n7543);
   U7144 : GTECH_NAND2 port map( A => n7545, B => n72, Z => n7530);
   U7145 : GTECH_NAND2 port map( A => n7503, B => pc_5_port, Z => n7525);
   U7146 : GTECH_NAND2 port map( A => n7546, B => n7547, Z => n5915);
   U7147 : GTECH_NOR2 port map( A => n7548, B => n7549, Z => n7547);
   U7148 : GTECH_NAND2 port map( A => n7550, B => n7551, Z => n7549);
   U7149 : GTECH_NAND2 port map( A => n7552, B => n11271, Z => n7551);
   U7150 : GTECH_NOT port map( A => n7553, Z => n11271);
   U7151 : GTECH_NAND2 port map( A => N2513, B => n7104, Z => n7550);
   U7152 : GTECH_NOR2 port map( A => n7554, B => n7555, Z => n7548);
   U7153 : GTECH_NOR2 port map( A => n7556, B => n7557, Z => n7546);
   U7154 : GTECH_NAND2 port map( A => n7558, B => n7559, Z => n7557);
   U7155 : GTECH_NAND2 port map( A => N3093, B => n7107, Z => n7559);
   U7156 : GTECH_NAND2 port map( A => n71, B => n7504, Z => n7558);
   U7157 : GTECH_NOR2 port map( A => n7111, B => n7560, Z => n7556);
   U7158 : GTECH_NAND2 port map( A => n7561, B => n7562, Z => n5914);
   U7159 : GTECH_NOR2 port map( A => n7563, B => n7564, Z => n7562);
   U7160 : GTECH_NAND2 port map( A => n7565, B => n7566, Z => n7564);
   U7161 : GTECH_NAND2 port map( A => n7552, B => n11272, Z => n7566);
   U7162 : GTECH_NOT port map( A => n7567, Z => n11272);
   U7163 : GTECH_NOR2 port map( A => n7568, B => n7569, Z => n7567);
   U7164 : GTECH_NAND2 port map( A => n7570, B => n7571, Z => n7569);
   U7165 : GTECH_NAND2 port map( A => n6031, B => opcode_2_2_port, Z => n7571);
   U7166 : GTECH_NAND2 port map( A => n6029, B => opcode_3_2_port, Z => n7570);
   U7167 : GTECH_NAND2 port map( A => n7572, B => n7573, Z => n7568);
   U7168 : GTECH_NAND2 port map( A => n6133, B => opcode_0_2_port, Z => n7573);
   U7169 : GTECH_NAND2 port map( A => n6079, B => opcode_1_2_port, Z => n7572);
   U7170 : GTECH_NAND2 port map( A => N2514, B => n7104, Z => n7565);
   U7171 : GTECH_NOR2 port map( A => n7554, B => n7574, Z => n7563);
   U7172 : GTECH_NOR2 port map( A => n7575, B => n7576, Z => n7561);
   U7173 : GTECH_NAND2 port map( A => n7577, B => n7578, Z => n7576);
   U7174 : GTECH_NAND2 port map( A => N3094, B => n7107, Z => n7578);
   U7175 : GTECH_NAND2 port map( A => n70, B => n7504, Z => n7577);
   U7176 : GTECH_NOR2 port map( A => n7111, B => n7579, Z => n7575);
   U7177 : GTECH_NOT port map( A => pc_7_port, Z => n7579);
   U7178 : GTECH_NAND2 port map( A => n7580, B => n7581, Z => n5913);
   U7179 : GTECH_NOR2 port map( A => n7582, B => n7583, Z => n7581);
   U7180 : GTECH_NAND2 port map( A => n7584, B => n7585, Z => n7583);
   U7181 : GTECH_NAND2 port map( A => n7552, B => n11273, Z => n7585);
   U7182 : GTECH_NOT port map( A => n7586, Z => n11273);
   U7183 : GTECH_NOR2 port map( A => n7587, B => n7588, Z => n7586);
   U7184 : GTECH_NAND2 port map( A => n7589, B => n7590, Z => n7588);
   U7185 : GTECH_NAND2 port map( A => n6031, B => opcode_2_3_port, Z => n7590);
   U7186 : GTECH_NAND2 port map( A => n6029, B => opcode_3_3_port, Z => n7589);
   U7187 : GTECH_NAND2 port map( A => n7591, B => n7592, Z => n7587);
   U7188 : GTECH_NAND2 port map( A => n6133, B => opcode_0_3_port, Z => n7592);
   U7189 : GTECH_NAND2 port map( A => n6079, B => opcode_1_3_port, Z => n7591);
   U7190 : GTECH_NAND2 port map( A => N2515, B => n7104, Z => n7584);
   U7191 : GTECH_NOR2 port map( A => n7554, B => n7593, Z => n7582);
   U7192 : GTECH_NOR2 port map( A => n7594, B => n7595, Z => n7580);
   U7193 : GTECH_NAND2 port map( A => n7596, B => n7597, Z => n7595);
   U7194 : GTECH_NAND2 port map( A => N3095, B => n7107, Z => n7597);
   U7195 : GTECH_NAND2 port map( A => n69, B => n7504, Z => n7596);
   U7196 : GTECH_NOR2 port map( A => n7111, B => n7598, Z => n7594);
   U7197 : GTECH_NAND2 port map( A => n7599, B => n7600, Z => n5912);
   U7198 : GTECH_NOR2 port map( A => n7601, B => n7602, Z => n7600);
   U7199 : GTECH_NAND2 port map( A => n7603, B => n7604, Z => n7602);
   U7200 : GTECH_NAND2 port map( A => n7552, B => n6777, Z => n7604);
   U7201 : GTECH_NOT port map( A => n7605, Z => n6777);
   U7202 : GTECH_NOR2 port map( A => n7606, B => n7607, Z => n7605);
   U7203 : GTECH_NAND2 port map( A => n7608, B => n7609, Z => n7607);
   U7204 : GTECH_NAND2 port map( A => n6031, B => opcode_2_4_port, Z => n7609);
   U7205 : GTECH_NAND2 port map( A => n6029, B => opcode_3_4_port, Z => n7608);
   U7206 : GTECH_NAND2 port map( A => n7610, B => n7611, Z => n7606);
   U7207 : GTECH_NAND2 port map( A => n6133, B => opcode_0_4_port, Z => n7611);
   U7208 : GTECH_NAND2 port map( A => n6079, B => opcode_1_4_port, Z => n7610);
   U7209 : GTECH_NOR2 port map( A => n7138, B => n7612, Z => n7552);
   U7210 : GTECH_NAND2 port map( A => N2516, B => n7104, Z => n7603);
   U7211 : GTECH_NOR2 port map( A => n7613, B => n7554, Z => n7601);
   U7212 : GTECH_NOR2 port map( A => n7614, B => n7615, Z => n7599);
   U7213 : GTECH_NAND2 port map( A => n7616, B => n7617, Z => n7615);
   U7214 : GTECH_NAND2 port map( A => N3096, B => n7107, Z => n7617);
   U7215 : GTECH_NAND2 port map( A => n68, B => n7504, Z => n7616);
   U7216 : GTECH_NOR2 port map( A => n7111, B => n7618, Z => n7614);
   U7217 : GTECH_NOT port map( A => pc_9_port, Z => n7618);
   U7218 : GTECH_NAND2 port map( A => n7619, B => n7620, Z => n5911);
   U7219 : GTECH_NOR2 port map( A => n7621, B => n7622, Z => n7620);
   U7220 : GTECH_NAND2 port map( A => n7623, B => n7624, Z => n7622);
   U7221 : GTECH_NAND2 port map( A => N2517, B => n7104, Z => n7624);
   U7222 : GTECH_NAND2 port map( A => stackA_10_port, B => n7105, Z => n7623);
   U7223 : GTECH_NOT port map( A => n7625, Z => n7621);
   U7224 : GTECH_NAND2 port map( A => N3097, B => n7107, Z => n7625);
   U7225 : GTECH_NOR2 port map( A => n7626, B => n7627, Z => n7619);
   U7226 : GTECH_NOT port map( A => n7628, Z => n7627);
   U7227 : GTECH_NAND2 port map( A => n7503, B => pc_10_port, Z => n7628);
   U7228 : GTECH_NOR2 port map( A => n7112, B => n7629, Z => n7626);
   U7229 : GTECH_NAND2 port map( A => n7630, B => n7631, Z => n5910);
   U7230 : GTECH_NOR2 port map( A => n7632, B => n7633, Z => n7631);
   U7231 : GTECH_NAND2 port map( A => n7634, B => n7635, Z => n7633);
   U7232 : GTECH_NAND2 port map( A => N2518, B => n7104, Z => n7635);
   U7233 : GTECH_NAND2 port map( A => stackA_11_port, B => n7105, Z => n7634);
   U7234 : GTECH_NOT port map( A => n7636, Z => n7632);
   U7235 : GTECH_NAND2 port map( A => N3098, B => n7107, Z => n7636);
   U7236 : GTECH_NOR2 port map( A => n7637, B => n7638, Z => n7630);
   U7237 : GTECH_NOT port map( A => n7639, Z => n7638);
   U7238 : GTECH_NAND2 port map( A => n7503, B => pc_11_port, Z => n7639);
   U7239 : GTECH_NOR2 port map( A => n7112, B => n7640, Z => n7637);
   U7240 : GTECH_NAND2 port map( A => n7641, B => n7642, Z => n5909);
   U7241 : GTECH_NOR2 port map( A => n7643, B => n7644, Z => n7642);
   U7242 : GTECH_NAND2 port map( A => n7645, B => n7646, Z => n7644);
   U7243 : GTECH_NAND2 port map( A => N2519, B => n7104, Z => n7646);
   U7244 : GTECH_NAND2 port map( A => stackA_12_port, B => n7105, Z => n7645);
   U7245 : GTECH_NOT port map( A => n7647, Z => n7643);
   U7246 : GTECH_NAND2 port map( A => N3099, B => n7107, Z => n7647);
   U7247 : GTECH_NOR2 port map( A => n7648, B => n7649, Z => n7641);
   U7248 : GTECH_NOT port map( A => n7650, Z => n7649);
   U7249 : GTECH_NAND2 port map( A => n7503, B => pc_12_port, Z => n7650);
   U7250 : GTECH_NOR2 port map( A => n7112, B => n7651, Z => n7648);
   U7251 : GTECH_NAND2 port map( A => n7652, B => n7653, Z => n5908);
   U7252 : GTECH_NOR2 port map( A => n7654, B => n7655, Z => n7653);
   U7253 : GTECH_NAND2 port map( A => n7656, B => n7657, Z => n7655);
   U7254 : GTECH_NAND2 port map( A => N2520, B => n7104, Z => n7657);
   U7255 : GTECH_NAND2 port map( A => stackA_13_port, B => n7105, Z => n7656);
   U7256 : GTECH_NOT port map( A => n7658, Z => n7654);
   U7257 : GTECH_NAND2 port map( A => N3100, B => n7107, Z => n7658);
   U7258 : GTECH_NOR2 port map( A => n7659, B => n7660, Z => n7652);
   U7259 : GTECH_NOT port map( A => n7661, Z => n7660);
   U7260 : GTECH_NAND2 port map( A => n7503, B => pc_13_port, Z => n7661);
   U7261 : GTECH_NOR2 port map( A => n7112, B => n7662, Z => n7659);
   U7262 : GTECH_NAND2 port map( A => n7663, B => n7664, Z => n5907);
   U7263 : GTECH_NOR2 port map( A => n7665, B => n7666, Z => n7664);
   U7264 : GTECH_NAND2 port map( A => n7667, B => n7668, Z => n7666);
   U7265 : GTECH_NAND2 port map( A => N2521, B => n7104, Z => n7668);
   U7266 : GTECH_NAND2 port map( A => stackA_14_port, B => n7105, Z => n7667);
   U7267 : GTECH_NOT port map( A => n7669, Z => n7665);
   U7268 : GTECH_NAND2 port map( A => N3101, B => n7107, Z => n7669);
   U7269 : GTECH_NOR2 port map( A => n7670, B => n7671, Z => n7663);
   U7270 : GTECH_NOT port map( A => n7672, Z => n7671);
   U7271 : GTECH_NAND2 port map( A => n7503, B => pc_14_port, Z => n7672);
   U7272 : GTECH_NOR2 port map( A => n7112, B => n7673, Z => n7670);
   U7273 : GTECH_NAND2 port map( A => n7674, B => n7675, Z => n5906);
   U7274 : GTECH_NOR2 port map( A => n7676, B => n7677, Z => n7675);
   U7275 : GTECH_NAND2 port map( A => n7678, B => n7679, Z => n7677);
   U7276 : GTECH_NAND2 port map( A => N2522, B => n7104, Z => n7679);
   U7277 : GTECH_NAND2 port map( A => n7105, B => stackA_15_port, Z => n7678);
   U7278 : GTECH_NOT port map( A => n7680, Z => n7676);
   U7279 : GTECH_NAND2 port map( A => N3102, B => n7107, Z => n7680);
   U7280 : GTECH_NOR2 port map( A => n7681, B => n7682, Z => n7674);
   U7281 : GTECH_NOT port map( A => n7683, Z => n7682);
   U7282 : GTECH_NAND2 port map( A => n7503, B => pc_15_port, Z => n7683);
   U7283 : GTECH_NOR2 port map( A => n7112, B => n7684, Z => n7681);
   U7284 : GTECH_NAND2 port map( A => n7685, B => n7686, Z => n5905);
   U7285 : GTECH_NOR2 port map( A => n7687, B => n7688, Z => n7686);
   U7286 : GTECH_NAND2 port map( A => n7689, B => n7690, Z => n7688);
   U7287 : GTECH_NAND2 port map( A => N2523, B => n7104, Z => n7690);
   U7288 : GTECH_NAND2 port map( A => n7105, B => stackA_16_port, Z => n7689);
   U7289 : GTECH_NOT port map( A => n7691, Z => n7687);
   U7290 : GTECH_NAND2 port map( A => N3103, B => n7107, Z => n7691);
   U7291 : GTECH_NOT port map( A => n7692, Z => n7685);
   U7292 : GTECH_NAND2 port map( A => n7693, B => n7694, Z => n7692);
   U7293 : GTECH_NAND2 port map( A => pc_16_port, B => n7503, Z => n7694);
   U7294 : GTECH_NAND2 port map( A => n7504, B => n61, Z => n7693);
   U7295 : GTECH_NAND2 port map( A => n7695, B => n7696, Z => n5904);
   U7296 : GTECH_NOR2 port map( A => n7697, B => n7698, Z => n7696);
   U7297 : GTECH_NAND2 port map( A => n7699, B => n7700, Z => n7698);
   U7298 : GTECH_NAND2 port map( A => N2524, B => n7104, Z => n7700);
   U7299 : GTECH_NAND2 port map( A => stackA_17_port, B => n7105, Z => n7699);
   U7300 : GTECH_NOT port map( A => n7701, Z => n7697);
   U7301 : GTECH_NAND2 port map( A => N3104, B => n7107, Z => n7701);
   U7302 : GTECH_NOR2 port map( A => n7702, B => n7703, Z => n7695);
   U7303 : GTECH_NOT port map( A => n7704, Z => n7703);
   U7304 : GTECH_NAND2 port map( A => n7503, B => pc_17_port, Z => n7704);
   U7305 : GTECH_NOR2 port map( A => n7112, B => n7705, Z => n7702);
   U7306 : GTECH_NAND2 port map( A => n7706, B => n7707, Z => n5903);
   U7307 : GTECH_NOR2 port map( A => n7708, B => n7709, Z => n7707);
   U7308 : GTECH_NAND2 port map( A => n7710, B => n7711, Z => n7709);
   U7309 : GTECH_NAND2 port map( A => N2525, B => n7104, Z => n7711);
   U7310 : GTECH_NAND2 port map( A => stackA_18_port, B => n7105, Z => n7710);
   U7311 : GTECH_NOT port map( A => n7712, Z => n7708);
   U7312 : GTECH_NAND2 port map( A => N3105, B => n7107, Z => n7712);
   U7313 : GTECH_NOR2 port map( A => n7713, B => n7714, Z => n7706);
   U7314 : GTECH_NOT port map( A => n7715, Z => n7714);
   U7315 : GTECH_NAND2 port map( A => n7503, B => pc_18_port, Z => n7715);
   U7316 : GTECH_NOR2 port map( A => n7112, B => n7716, Z => n7713);
   U7317 : GTECH_NAND2 port map( A => n7717, B => n7718, Z => n5902);
   U7318 : GTECH_NOR2 port map( A => n7719, B => n7720, Z => n7718);
   U7319 : GTECH_NAND2 port map( A => n7721, B => n7722, Z => n7720);
   U7320 : GTECH_NAND2 port map( A => N2526, B => n7104, Z => n7722);
   U7321 : GTECH_NAND2 port map( A => stackA_19_port, B => n7105, Z => n7721);
   U7322 : GTECH_NOT port map( A => n7723, Z => n7719);
   U7323 : GTECH_NAND2 port map( A => N3106, B => n7107, Z => n7723);
   U7324 : GTECH_NOT port map( A => n7724, Z => n7717);
   U7325 : GTECH_NAND2 port map( A => n7725, B => n7726, Z => n7724);
   U7326 : GTECH_NAND2 port map( A => n7503, B => pc_19_port, Z => n7726);
   U7327 : GTECH_NAND2 port map( A => n7504, B => n58, Z => n7725);
   U7328 : GTECH_NAND2 port map( A => n7727, B => n7728, Z => n5901);
   U7329 : GTECH_NOR2 port map( A => n7729, B => n7730, Z => n7728);
   U7330 : GTECH_NAND2 port map( A => n7731, B => n7732, Z => n7730);
   U7331 : GTECH_NAND2 port map( A => N2527, B => n7104, Z => n7732);
   U7332 : GTECH_NAND2 port map( A => stackA_20_port, B => n7105, Z => n7731);
   U7333 : GTECH_NOT port map( A => n7733, Z => n7729);
   U7334 : GTECH_NAND2 port map( A => N3107, B => n7107, Z => n7733);
   U7335 : GTECH_NOR2 port map( A => n7734, B => n7735, Z => n7727);
   U7336 : GTECH_NOT port map( A => n7736, Z => n7735);
   U7337 : GTECH_NAND2 port map( A => n7503, B => pc_20_port, Z => n7736);
   U7338 : GTECH_NOR2 port map( A => n7112, B => n7737, Z => n7734);
   U7339 : GTECH_NAND2 port map( A => n7738, B => n7739, Z => n5900);
   U7340 : GTECH_NOR2 port map( A => n7740, B => n7741, Z => n7739);
   U7341 : GTECH_NAND2 port map( A => n7742, B => n7743, Z => n7741);
   U7342 : GTECH_NAND2 port map( A => N2528, B => n7104, Z => n7743);
   U7343 : GTECH_NAND2 port map( A => stackA_21_port, B => n7105, Z => n7742);
   U7344 : GTECH_NOT port map( A => n7744, Z => n7740);
   U7345 : GTECH_NAND2 port map( A => N3108, B => n7107, Z => n7744);
   U7346 : GTECH_NOR2 port map( A => n7745, B => n7746, Z => n7738);
   U7347 : GTECH_NOT port map( A => n7747, Z => n7746);
   U7348 : GTECH_NAND2 port map( A => n7503, B => pc_21_port, Z => n7747);
   U7349 : GTECH_NOR2 port map( A => n7112, B => n7748, Z => n7745);
   U7350 : GTECH_NAND2 port map( A => n7749, B => n7750, Z => n5899);
   U7351 : GTECH_NOR2 port map( A => n7751, B => n7752, Z => n7750);
   U7352 : GTECH_NAND2 port map( A => n7753, B => n7754, Z => n7752);
   U7353 : GTECH_NAND2 port map( A => N2529, B => n7104, Z => n7754);
   U7354 : GTECH_NAND2 port map( A => stackA_22_port, B => n7105, Z => n7753);
   U7355 : GTECH_NOT port map( A => n7755, Z => n7751);
   U7356 : GTECH_NAND2 port map( A => N3109, B => n7107, Z => n7755);
   U7357 : GTECH_NOR2 port map( A => n7756, B => n7757, Z => n7749);
   U7358 : GTECH_NOT port map( A => n7758, Z => n7757);
   U7359 : GTECH_NAND2 port map( A => n7503, B => pc_22_port, Z => n7758);
   U7360 : GTECH_NOR2 port map( A => n7112, B => n7759, Z => n7756);
   U7361 : GTECH_NAND2 port map( A => n7760, B => n7761, Z => n5898);
   U7362 : GTECH_NOR2 port map( A => n7762, B => n7763, Z => n7761);
   U7363 : GTECH_NAND2 port map( A => n7764, B => n7765, Z => n7763);
   U7364 : GTECH_NAND2 port map( A => N2530, B => n7104, Z => n7765);
   U7365 : GTECH_NAND2 port map( A => stackA_23_port, B => n7105, Z => n7764);
   U7366 : GTECH_NOT port map( A => n7766, Z => n7762);
   U7367 : GTECH_NAND2 port map( A => N3110, B => n7107, Z => n7766);
   U7368 : GTECH_NOR2 port map( A => n7767, B => n7768, Z => n7760);
   U7369 : GTECH_NOT port map( A => n7769, Z => n7768);
   U7370 : GTECH_NAND2 port map( A => n7503, B => pc_23_port, Z => n7769);
   U7371 : GTECH_NOR2 port map( A => n7112, B => n7770, Z => n7767);
   U7372 : GTECH_NAND2 port map( A => n7771, B => n7772, Z => n5897);
   U7373 : GTECH_NOR2 port map( A => n7773, B => n7774, Z => n7772);
   U7374 : GTECH_NAND2 port map( A => n7775, B => n7776, Z => n7774);
   U7375 : GTECH_NAND2 port map( A => N2531, B => n7104, Z => n7776);
   U7376 : GTECH_NAND2 port map( A => stackA_24_port, B => n7105, Z => n7775);
   U7377 : GTECH_NOT port map( A => n7777, Z => n7773);
   U7378 : GTECH_NAND2 port map( A => N3111, B => n7107, Z => n7777);
   U7379 : GTECH_NOR2 port map( A => n7778, B => n7779, Z => n7771);
   U7380 : GTECH_NOT port map( A => n7780, Z => n7779);
   U7381 : GTECH_NAND2 port map( A => n7503, B => pc_24_port, Z => n7780);
   U7382 : GTECH_NOR2 port map( A => n7112, B => n7781, Z => n7778);
   U7383 : GTECH_NAND2 port map( A => n7782, B => n7783, Z => n5896);
   U7384 : GTECH_NOR2 port map( A => n7784, B => n7785, Z => n7783);
   U7385 : GTECH_NAND2 port map( A => n7786, B => n7787, Z => n7785);
   U7386 : GTECH_NAND2 port map( A => N2532, B => n7104, Z => n7787);
   U7387 : GTECH_NAND2 port map( A => stackA_25_port, B => n7105, Z => n7786);
   U7388 : GTECH_NOT port map( A => n7788, Z => n7784);
   U7389 : GTECH_NAND2 port map( A => N3112, B => n7107, Z => n7788);
   U7390 : GTECH_NOR2 port map( A => n7789, B => n7790, Z => n7782);
   U7391 : GTECH_NOT port map( A => n7791, Z => n7790);
   U7392 : GTECH_NAND2 port map( A => n7503, B => pc_25_port, Z => n7791);
   U7393 : GTECH_NOR2 port map( A => n7112, B => n7792, Z => n7789);
   U7394 : GTECH_NAND2 port map( A => n7793, B => n7794, Z => n5895);
   U7395 : GTECH_NOR2 port map( A => n7795, B => n7796, Z => n7794);
   U7396 : GTECH_NAND2 port map( A => n7797, B => n7798, Z => n7796);
   U7397 : GTECH_NAND2 port map( A => N2533, B => n7104, Z => n7798);
   U7398 : GTECH_NAND2 port map( A => n7105, B => stackA_26_port, Z => n7797);
   U7399 : GTECH_NOT port map( A => n7799, Z => n7795);
   U7400 : GTECH_NAND2 port map( A => N3113, B => n7107, Z => n7799);
   U7401 : GTECH_NOR2 port map( A => n7800, B => n7801, Z => n7793);
   U7402 : GTECH_NOT port map( A => n7802, Z => n7801);
   U7403 : GTECH_NAND2 port map( A => n7503, B => pc_26_port, Z => n7802);
   U7404 : GTECH_NOR2 port map( A => n7112, B => n7803, Z => n7800);
   U7405 : GTECH_NAND2 port map( A => n7804, B => n7805, Z => n5894);
   U7406 : GTECH_NOR2 port map( A => n7806, B => n7807, Z => n7805);
   U7407 : GTECH_NAND2 port map( A => n7808, B => n7809, Z => n7807);
   U7408 : GTECH_NAND2 port map( A => N2534, B => n7104, Z => n7809);
   U7409 : GTECH_NAND2 port map( A => n7105, B => stackA_27_port, Z => n7808);
   U7410 : GTECH_NOT port map( A => n7810, Z => n7806);
   U7411 : GTECH_NAND2 port map( A => N3114, B => n7107, Z => n7810);
   U7412 : GTECH_NOR2 port map( A => n7811, B => n7812, Z => n7804);
   U7413 : GTECH_NOT port map( A => n7813, Z => n7812);
   U7414 : GTECH_NAND2 port map( A => n7503, B => pc_27_port, Z => n7813);
   U7415 : GTECH_NOR2 port map( A => n7112, B => n7814, Z => n7811);
   U7416 : GTECH_NAND2 port map( A => n7815, B => n7816, Z => n5893);
   U7417 : GTECH_NOR2 port map( A => n7817, B => n7818, Z => n7816);
   U7418 : GTECH_NAND2 port map( A => n7819, B => n7820, Z => n7818);
   U7419 : GTECH_NAND2 port map( A => N2535, B => n7104, Z => n7820);
   U7420 : GTECH_NAND2 port map( A => n7105, B => stackA_28_port, Z => n7819);
   U7421 : GTECH_NOT port map( A => n7821, Z => n7817);
   U7422 : GTECH_NAND2 port map( A => N3115, B => n7107, Z => n7821);
   U7423 : GTECH_NOR2 port map( A => n7822, B => n7823, Z => n7815);
   U7424 : GTECH_NOT port map( A => n7824, Z => n7823);
   U7425 : GTECH_NAND2 port map( A => n7503, B => pc_28_port, Z => n7824);
   U7426 : GTECH_NOR2 port map( A => n7112, B => n7825, Z => n7822);
   U7427 : GTECH_NAND2 port map( A => n7826, B => n7827, Z => n5892);
   U7428 : GTECH_NOR2 port map( A => n7828, B => n7829, Z => n7827);
   U7429 : GTECH_NAND2 port map( A => n7830, B => n7831, Z => n7829);
   U7430 : GTECH_NAND2 port map( A => N2536, B => n7104, Z => n7831);
   U7431 : GTECH_NAND2 port map( A => n7105, B => stackA_29_port, Z => n7830);
   U7432 : GTECH_NOT port map( A => n7832, Z => n7828);
   U7433 : GTECH_NAND2 port map( A => N3116, B => n7107, Z => n7832);
   U7434 : GTECH_NOR2 port map( A => n7833, B => n7834, Z => n7826);
   U7435 : GTECH_NOT port map( A => n7835, Z => n7834);
   U7436 : GTECH_NAND2 port map( A => n7503, B => pc_29_port, Z => n7835);
   U7437 : GTECH_NOR2 port map( A => n7112, B => n7836, Z => n7833);
   U7438 : GTECH_NAND2 port map( A => n7837, B => n7838, Z => n5891);
   U7439 : GTECH_NOR2 port map( A => n7839, B => n7840, Z => n7838);
   U7440 : GTECH_NAND2 port map( A => n7841, B => n7842, Z => n7840);
   U7441 : GTECH_NAND2 port map( A => N2537, B => n7104, Z => n7842);
   U7442 : GTECH_NAND2 port map( A => stackA_30_port, B => n7105, Z => n7841);
   U7443 : GTECH_NOT port map( A => n7843, Z => n7839);
   U7444 : GTECH_NAND2 port map( A => N3117, B => n7107, Z => n7843);
   U7445 : GTECH_NOR2 port map( A => n7844, B => n7845, Z => n7837);
   U7446 : GTECH_NOT port map( A => n7846, Z => n7845);
   U7447 : GTECH_NAND2 port map( A => n7503, B => pc_30_port, Z => n7846);
   U7448 : GTECH_NOR2 port map( A => n7112, B => n7847, Z => n7844);
   U7449 : GTECH_NAND2 port map( A => n7848, B => n7849, Z => n5890);
   U7450 : GTECH_NOR2 port map( A => n7850, B => n7851, Z => n7849);
   U7451 : GTECH_NAND2 port map( A => n7852, B => n7853, Z => n7851);
   U7452 : GTECH_NAND2 port map( A => N2538, B => n7104, Z => n7853);
   U7453 : GTECH_NOR2 port map( A => n7612, B => n7854, Z => n7104);
   U7454 : GTECH_NOT port map( A => n7542, Z => n7854);
   U7455 : GTECH_NAND2 port map( A => n7855, B => n7856, Z => n7542);
   U7456 : GTECH_NAND2 port map( A => n7857, B => n7858, Z => n7856);
   U7457 : GTECH_NAND2 port map( A => stackA_31_port, B => n7105, Z => n7852);
   U7458 : GTECH_NOT port map( A => n7554, Z => n7105);
   U7459 : GTECH_NAND2 port map( A => n7859, B => n7147, Z => n7554);
   U7460 : GTECH_NOT port map( A => n7860, Z => n7850);
   U7461 : GTECH_NAND2 port map( A => N3118, B => n7107, Z => n7860);
   U7462 : GTECH_NOR2 port map( A => n7861, B => n7612, Z => n7107);
   U7463 : GTECH_NOR2 port map( A => n7862, B => n7863, Z => n7848);
   U7464 : GTECH_NOT port map( A => n7864, Z => n7863);
   U7465 : GTECH_NAND2 port map( A => n7503, B => pc_31_port, Z => n7864);
   U7466 : GTECH_NOR2 port map( A => n7112, B => n7865, Z => n7862);
   U7467 : GTECH_NOT port map( A => n7504, Z => n7112);
   U7468 : GTECH_NAND2 port map( A => n7866, B => n7867, Z => n7504);
   U7469 : GTECH_NAND2 port map( A => n7868, B => reset_b, Z => n7867);
   U7470 : GTECH_NOR2 port map( A => n7869, B => n7503, Z => n7868);
   U7471 : GTECH_NOT port map( A => n7545, Z => n7869);
   U7472 : GTECH_NAND2 port map( A => n7859, B => n7541, Z => n7866);
   U7473 : GTECH_NAND2 port map( A => n7870, B => n7871, Z => n7541);
   U7474 : GTECH_NOR2 port map( A => n7872, B => n7873, Z => n7871);
   U7475 : GTECH_NAND2 port map( A => n7874, B => n7875, Z => n7872);
   U7476 : GTECH_NOT port map( A => n7876, Z => n7870);
   U7477 : GTECH_NAND2 port map( A => n7877, B => n7878, Z => n7876);
   U7478 : GTECH_NOR2 port map( A => n7879, B => n7880, Z => n7878);
   U7479 : GTECH_NOR2 port map( A => n7881, B => n7882, Z => n7877);
   U7480 : GTECH_NOR2 port map( A => n7883, B => n7858, Z => n7881);
   U7481 : GTECH_NAND2 port map( A => n7884, B => n7885, Z => n7858);
   U7482 : GTECH_NOR2 port map( A => n7886, B => n7887, Z => n7885);
   U7483 : GTECH_NAND2 port map( A => n7888, B => n7889, Z => n7887);
   U7484 : GTECH_NOR2 port map( A => n7890, B => n7891, Z => n7889);
   U7485 : GTECH_NAND2 port map( A => n7892, B => n7893, Z => n7891);
   U7486 : GTECH_NAND2 port map( A => n7894, B => n7895, Z => n7890);
   U7487 : GTECH_NOR2 port map( A => n7896, B => n7897, Z => n7888);
   U7488 : GTECH_NAND2 port map( A => n7898, B => n7899, Z => n7897);
   U7489 : GTECH_NAND2 port map( A => n7900, B => n7901, Z => n7896);
   U7490 : GTECH_NAND2 port map( A => n7902, B => n7903, Z => n7886);
   U7491 : GTECH_NOR2 port map( A => n7904, B => n7905, Z => n7903);
   U7492 : GTECH_NAND2 port map( A => n7906, B => n7907, Z => n7905);
   U7493 : GTECH_NAND2 port map( A => n7908, B => n7909, Z => n7904);
   U7494 : GTECH_NOR2 port map( A => n7910, B => n7911, Z => n7902);
   U7495 : GTECH_NAND2 port map( A => n7912, B => n7913, Z => n7911);
   U7496 : GTECH_NAND2 port map( A => n7914, B => n7915, Z => n7910);
   U7497 : GTECH_NOR2 port map( A => n7916, B => n7917, Z => n7884);
   U7498 : GTECH_NAND2 port map( A => n7918, B => n7919, Z => n7917);
   U7499 : GTECH_NOR2 port map( A => n7920, B => n7921, Z => n7919);
   U7500 : GTECH_NAND2 port map( A => n7922, B => n7923, Z => n7921);
   U7501 : GTECH_NAND2 port map( A => n7924, B => n6874, Z => n7920);
   U7502 : GTECH_NOR2 port map( A => n7925, B => n7926, Z => n7918);
   U7503 : GTECH_NAND2 port map( A => n7927, B => n7928, Z => n7926);
   U7504 : GTECH_NAND2 port map( A => n7929, B => n7930, Z => n7925);
   U7505 : GTECH_NAND2 port map( A => n7931, B => n7932, Z => n7916);
   U7506 : GTECH_NOR2 port map( A => n7933, B => n7934, Z => n7932);
   U7507 : GTECH_NAND2 port map( A => n7935, B => n7936, Z => n7934);
   U7508 : GTECH_NAND2 port map( A => n7937, B => n7938, Z => n7933);
   U7509 : GTECH_NOR2 port map( A => n7939, B => n7940, Z => n7931);
   U7510 : GTECH_NAND2 port map( A => n7941, B => n7942, Z => n7940);
   U7511 : GTECH_NAND2 port map( A => n7943, B => n7944, Z => n7939);
   U7512 : GTECH_NOT port map( A => n7612, Z => n7859);
   U7513 : GTECH_NAND2 port map( A => n7945, B => reset_b, Z => n7612);
   U7514 : GTECH_NOR2 port map( A => n7503, B => n7162, Z => n7945);
   U7515 : GTECH_NOT port map( A => n7111, Z => n7503);
   U7516 : GTECH_NAND2 port map( A => n7946, B => n7947, Z => n7111);
   U7517 : GTECH_NAND2 port map( A => enable, B => n7948, Z => n7947);
   U7518 : GTECH_NAND2 port map( A => n7949, B => n7950, Z => n7948);
   U7519 : GTECH_NAND2 port map( A => n6230, B => n7951, Z => n7950);
   U7520 : GTECH_NOT port map( A => n6231, Z => n7951);
   U7521 : GTECH_NOR2 port map( A => n7952, B => n7873, Z => n6231);
   U7522 : GTECH_NAND2 port map( A => n7953, B => n7883, Z => n7952);
   U7523 : GTECH_NOR2 port map( A => n7954, B => n7880, Z => n7953);
   U7524 : GTECH_NOR2 port map( A => n7955, B => n7459, Z => n7880);
   U7525 : GTECH_NOR2 port map( A => n7956, B => n7957, Z => n7955);
   U7526 : GTECH_NOR2 port map( A => in_mem_busy, B => n7958, Z => n7954);
   U7527 : GTECH_NOR2 port map( A => n7959, B => n7960, Z => n7958);
   U7528 : GTECH_NOT port map( A => n7961, Z => n7960);
   U7529 : GTECH_NOR2 port map( A => n7962, B => n7882, Z => n7961);
   U7530 : GTECH_NAND2 port map( A => n7875, B => n7138, Z => n7959);
   U7531 : GTECH_NAND2 port map( A => n7545, B => n7442, Z => n7949);
   U7532 : GTECH_NAND2 port map( A => n7963, B => n7964, Z => n7545);
   U7533 : GTECH_NOR2 port map( A => n6859, B => n7965, Z => n7964);
   U7534 : GTECH_NAND2 port map( A => n7966, B => n7967, Z => n7965);
   U7535 : GTECH_NOR2 port map( A => n7968, B => n7969, Z => n7963);
   U7536 : GTECH_NAND2 port map( A => n7970, B => n7971, Z => n5889);
   U7537 : GTECH_NOR2 port map( A => n7972, B => n7973, Z => n7971);
   U7538 : GTECH_NAND2 port map( A => n7974, B => n7975, Z => n7973);
   U7539 : GTECH_NAND2 port map( A => n7976, B => n7977, Z => n7975);
   U7540 : GTECH_NAND2 port map( A => n7978, B => n7979, Z => n7977);
   U7541 : GTECH_NOR2 port map( A => n7980, B => n7981, Z => n7979);
   U7542 : GTECH_NAND2 port map( A => n7982, B => n7983, Z => n7981);
   U7543 : GTECH_NAND2 port map( A => mem_read(0), B => n6631, Z => n7983);
   U7544 : GTECH_NOR2 port map( A => n7984, B => n7985, Z => n7982);
   U7545 : GTECH_NOR2 port map( A => n6655, B => n7986, Z => n7985);
   U7546 : GTECH_NOR2 port map( A => n6657, B => n7987, Z => n7984);
   U7547 : GTECH_NAND2 port map( A => n7988, B => n7989, Z => n7980);
   U7548 : GTECH_NAND2 port map( A => mem_read(16), B => n6771, Z => n7989);
   U7549 : GTECH_NOR2 port map( A => n7990, B => n7991, Z => n7988);
   U7550 : GTECH_NOR2 port map( A => n7082, B => n6227, Z => n7991);
   U7551 : GTECH_NOR2 port map( A => n7992, B => n7993, Z => n7082);
   U7552 : GTECH_NAND2 port map( A => n7994, B => n7995, Z => n7993);
   U7553 : GTECH_NAND2 port map( A => n6031, B => opcode_2_0_port, Z => n7995);
   U7554 : GTECH_NAND2 port map( A => n6029, B => opcode_3_0_port, Z => n7994);
   U7555 : GTECH_NAND2 port map( A => n7996, B => n7997, Z => n7992);
   U7556 : GTECH_NAND2 port map( A => n6133, B => opcode_0_0_port, Z => n7997);
   U7557 : GTECH_NAND2 port map( A => n6079, B => opcode_1_0_port, Z => n7996);
   U7558 : GTECH_NOR2 port map( A => n7998, B => n7927, Z => n7990);
   U7559 : GTECH_NOR2 port map( A => n7999, B => n6876, Z => n7998);
   U7560 : GTECH_NOR2 port map( A => n6878, B => n8000, Z => n7999);
   U7561 : GTECH_NOR2 port map( A => n8001, B => n8002, Z => n7978);
   U7562 : GTECH_NOT port map( A => n8003, Z => n8002);
   U7563 : GTECH_NOR2 port map( A => n8004, B => n8005, Z => n8003);
   U7564 : GTECH_NAND2 port map( A => n8006, B => n8007, Z => n8005);
   U7565 : GTECH_NAND2 port map( A => N1317, B => n6639, Z => n8007);
   U7566 : GTECH_NAND2 port map( A => n6638, B => n7469, Z => n8006);
   U7567 : GTECH_NAND2 port map( A => n8008, B => n8009, Z => n8004);
   U7568 : GTECH_NAND2 port map( A => n6762, B => n8000, Z => n8009);
   U7569 : GTECH_NAND2 port map( A => n6764, B => stackA_0_port, Z => n8008);
   U7570 : GTECH_NAND2 port map( A => n8010, B => n8011, Z => n8001);
   U7571 : GTECH_NAND2 port map( A => N1034, B => n6632, Z => n8011);
   U7572 : GTECH_NOR2 port map( A => n8012, B => n8013, Z => n8010);
   U7573 : GTECH_NOR2 port map( A => n7126, B => n8014, Z => n8013);
   U7574 : GTECH_NOT port map( A => n11036, Z => n8014);
   U7575 : GTECH_NOR2 port map( A => n6783, B => n8015, Z => n8012);
   U7576 : GTECH_NAND2 port map( A => N695, B => n6674, Z => n7974);
   U7577 : GTECH_NOT port map( A => n8016, Z => n7972);
   U7578 : GTECH_NAND2 port map( A => n6675, B => n11037, Z => n8016);
   U7579 : GTECH_NOR2 port map( A => n8017, B => n8018, Z => n7970);
   U7580 : GTECH_NOR2 port map( A => n8000, B => n6666, Z => n8018);
   U7581 : GTECH_NOR2 port map( A => n7469, B => n6734, Z => n8017);
   U7582 : GTECH_NAND2 port map( A => n8019, B => n8020, Z => n5888);
   U7583 : GTECH_NOR2 port map( A => n8021, B => n8022, Z => n8020);
   U7584 : GTECH_NAND2 port map( A => n8023, B => n8024, Z => n8022);
   U7585 : GTECH_NAND2 port map( A => n7976, B => n8025, Z => n8024);
   U7586 : GTECH_NAND2 port map( A => n8026, B => n8027, Z => n8025);
   U7587 : GTECH_NOR2 port map( A => n8028, B => n8029, Z => n8027);
   U7588 : GTECH_NAND2 port map( A => n8030, B => n8031, Z => n8029);
   U7589 : GTECH_NAND2 port map( A => stackA_30_port, B => n8032, Z => n8031);
   U7590 : GTECH_NOR2 port map( A => n8033, B => n8034, Z => n8030);
   U7591 : GTECH_NOR2 port map( A => n8035, B => n8036, Z => n8034);
   U7592 : GTECH_NOT port map( A => n6631, Z => n8035);
   U7593 : GTECH_NOR2 port map( A => n6655, B => n8037, Z => n8033);
   U7594 : GTECH_NAND2 port map( A => n8038, B => n8039, Z => n8028);
   U7595 : GTECH_NOR2 port map( A => n8040, B => n8041, Z => n8039);
   U7596 : GTECH_NOR2 port map( A => n7553, B => n6227, Z => n8041);
   U7597 : GTECH_NOR2 port map( A => n8042, B => n8043, Z => n7553);
   U7598 : GTECH_NAND2 port map( A => n8044, B => n8045, Z => n8043);
   U7599 : GTECH_NAND2 port map( A => n6031, B => opcode_2_1_port, Z => n8045);
   U7600 : GTECH_NAND2 port map( A => n6029, B => opcode_3_1_port, Z => n8044);
   U7601 : GTECH_NAND2 port map( A => n8046, B => n8047, Z => n8042);
   U7602 : GTECH_NAND2 port map( A => n6133, B => opcode_0_1_port, Z => n8047);
   U7603 : GTECH_NAND2 port map( A => n6079, B => opcode_1_1_port, Z => n8046);
   U7604 : GTECH_NOR2 port map( A => n8048, B => n7944, Z => n8040);
   U7605 : GTECH_NOR2 port map( A => n8049, B => n6876, Z => n8048);
   U7606 : GTECH_NOR2 port map( A => n6878, B => n8050, Z => n8049);
   U7607 : GTECH_NOR2 port map( A => n8051, B => n8052, Z => n8038);
   U7608 : GTECH_NOR2 port map( A => n6657, B => n8053, Z => n8052);
   U7609 : GTECH_NOR2 port map( A => n6651, B => n8054, Z => n8051);
   U7610 : GTECH_NOR2 port map( A => n8055, B => n8056, Z => n8026);
   U7611 : GTECH_NOT port map( A => n8057, Z => n8056);
   U7612 : GTECH_NOR2 port map( A => n8058, B => n8059, Z => n8057);
   U7613 : GTECH_NAND2 port map( A => n8060, B => n8061, Z => n8059);
   U7614 : GTECH_NAND2 port map( A => N1318, B => n6639, Z => n8061);
   U7615 : GTECH_NAND2 port map( A => n76, B => n6638, Z => n8060);
   U7616 : GTECH_NAND2 port map( A => n8062, B => n8063, Z => n8058);
   U7617 : GTECH_NAND2 port map( A => n6762, B => n8050, Z => n8063);
   U7618 : GTECH_NAND2 port map( A => n6764, B => stackA_1_port, Z => n8062);
   U7619 : GTECH_NAND2 port map( A => n8064, B => n8065, Z => n8055);
   U7620 : GTECH_NAND2 port map( A => N1035, B => n6632, Z => n8065);
   U7621 : GTECH_NOT port map( A => n8066, Z => n8064);
   U7622 : GTECH_NAND2 port map( A => n8067, B => n8068, Z => n8066);
   U7623 : GTECH_NAND2 port map( A => n6883, B => n11034, Z => n8068);
   U7624 : GTECH_NAND2 port map( A => stackA_0_port, B => n6754, Z => n8067);
   U7625 : GTECH_NAND2 port map( A => N696, B => n6674, Z => n8023);
   U7626 : GTECH_NOT port map( A => n8069, Z => n8021);
   U7627 : GTECH_NAND2 port map( A => n6675, B => n11035, Z => n8069);
   U7628 : GTECH_NOR2 port map( A => n8070, B => n8071, Z => n8019);
   U7629 : GTECH_NOR2 port map( A => n8050, B => n6666, Z => n8071);
   U7630 : GTECH_NOR2 port map( A => n7110, B => n6734, Z => n8070);
   U7631 : GTECH_NOT port map( A => pc_1_port, Z => n7110);
   U7632 : GTECH_NAND2 port map( A => n8072, B => n8073, Z => n5883);
   U7633 : GTECH_NOT port map( A => n8074, Z => n8073);
   U7634 : GTECH_NAND2 port map( A => n8075, B => n8076, Z => n8074);
   U7635 : GTECH_NOR2 port map( A => n8077, B => n8078, Z => n8076);
   U7636 : GTECH_NOR2 port map( A => n8079, B => n6622, Z => n8078);
   U7637 : GTECH_NOR2 port map( A => n8080, B => n8081, Z => n8079);
   U7638 : GTECH_NAND2 port map( A => n8082, B => n8083, Z => n8081);
   U7639 : GTECH_NOR2 port map( A => n8084, B => n8085, Z => n8083);
   U7640 : GTECH_NAND2 port map( A => n8086, B => n8087, Z => n8085);
   U7641 : GTECH_NAND2 port map( A => n11024, B => n6883, Z => n8087);
   U7642 : GTECH_NAND2 port map( A => stackA_25_port, B => n8032, Z => n8086);
   U7643 : GTECH_NAND2 port map( A => n8088, B => n8089, Z => n8084);
   U7644 : GTECH_NAND2 port map( A => mem_read(6), B => n6631, Z => n8089);
   U7645 : GTECH_NAND2 port map( A => mem_read(14), B => n6772, Z => n8088);
   U7646 : GTECH_NOR2 port map( A => n8090, B => n8091, Z => n8082);
   U7647 : GTECH_NAND2 port map( A => n8092, B => n8093, Z => n8091);
   U7648 : GTECH_NAND2 port map( A => sp_6_port, B => n6751, Z => n8093);
   U7649 : GTECH_NAND2 port map( A => stackA_5_port, B => n6754, Z => n8092);
   U7650 : GTECH_NAND2 port map( A => n8094, B => n8095, Z => n8090);
   U7651 : GTECH_NAND2 port map( A => n6762, B => n7555, Z => n8095);
   U7652 : GTECH_NAND2 port map( A => stackA_6_port, B => n6764, Z => n8094);
   U7653 : GTECH_NAND2 port map( A => n8096, B => n8097, Z => n8080);
   U7654 : GTECH_NOR2 port map( A => n8098, B => n8099, Z => n8097);
   U7655 : GTECH_NAND2 port map( A => n8100, B => n8101, Z => n8099);
   U7656 : GTECH_NAND2 port map( A => n71, B => n6638, Z => n8101);
   U7657 : GTECH_NAND2 port map( A => stackB_6_port, B => n8102, Z => n8100);
   U7658 : GTECH_NAND2 port map( A => n6647, B => n8103, Z => n8102);
   U7659 : GTECH_NAND2 port map( A => stackA_6_port, B => n6649, Z => n8103);
   U7660 : GTECH_NOT port map( A => n6878, Z => n6649);
   U7661 : GTECH_NOT port map( A => n6876, Z => n6647);
   U7662 : GTECH_NAND2 port map( A => n8104, B => n8105, Z => n8098);
   U7663 : GTECH_NAND2 port map( A => N1323, B => n6639, Z => n8105);
   U7664 : GTECH_NAND2 port map( A => N2995, B => n6755, Z => n8104);
   U7665 : GTECH_NOR2 port map( A => n8106, B => n8107, Z => n8096);
   U7666 : GTECH_NAND2 port map( A => n8108, B => n8109, Z => n8107);
   U7667 : GTECH_NAND2 port map( A => N1040, B => n6632, Z => n8109);
   U7668 : GTECH_NAND2 port map( A => mem_read(30), B => n6782, Z => n8108);
   U7669 : GTECH_NAND2 port map( A => n8110, B => n8111, Z => n8106);
   U7670 : GTECH_NAND2 port map( A => n6650, B => n8112, Z => n8111);
   U7671 : GTECH_NAND2 port map( A => mem_read(22), B => n6771, Z => n8110);
   U7672 : GTECH_NOT port map( A => n8113, Z => n8077);
   U7673 : GTECH_NAND2 port map( A => N701, B => n6674, Z => n8113);
   U7674 : GTECH_NAND2 port map( A => n6675, B => n11025, Z => n8075);
   U7675 : GTECH_NOR2 port map( A => n8114, B => n8115, Z => n8072);
   U7676 : GTECH_NOR2 port map( A => n6666, B => n7555, Z => n8115);
   U7677 : GTECH_NOR2 port map( A => n6734, B => n7560, Z => n8114);
   U7678 : GTECH_NOT port map( A => pc_6_port, Z => n7560);
   U7679 : GTECH_NOT port map( A => n8116, Z => n5882);
   U7680 : GTECH_NOR2 port map( A => n8117, B => n8118, Z => n8116);
   U7681 : GTECH_NOR2 port map( A => n6666, B => n7574, Z => n8118);
   U7682 : GTECH_NOR2 port map( A => n8119, B => n6622, Z => n8117);
   U7683 : GTECH_NOR2 port map( A => n8120, B => n8121, Z => n8119);
   U7684 : GTECH_NAND2 port map( A => n8122, B => n8123, Z => n8121);
   U7685 : GTECH_NOR2 port map( A => n8124, B => n8125, Z => n8123);
   U7686 : GTECH_NAND2 port map( A => n8126, B => n8127, Z => n8125);
   U7687 : GTECH_NAND2 port map( A => N1041, B => n6632, Z => n8127);
   U7688 : GTECH_NAND2 port map( A => N1324, B => n6639, Z => n8126);
   U7689 : GTECH_NAND2 port map( A => n8128, B => n8129, Z => n8124);
   U7690 : GTECH_NAND2 port map( A => n6854, B => stackA_0_port, Z => n8129);
   U7691 : GTECH_NOT port map( A => n8130, Z => n8128);
   U7692 : GTECH_NAND2 port map( A => n8131, B => n8132, Z => n8130);
   U7693 : GTECH_NAND2 port map( A => n6883, B => n11023, Z => n8132);
   U7694 : GTECH_NAND2 port map( A => n6751, B => sp_7_port, Z => n8131);
   U7695 : GTECH_NOR2 port map( A => n8133, B => n8134, Z => n8122);
   U7696 : GTECH_NAND2 port map( A => n8135, B => n8136, Z => n8134);
   U7697 : GTECH_NAND2 port map( A => pc_7_port, B => n6860, Z => n8136);
   U7698 : GTECH_NOR2 port map( A => n8137, B => n8138, Z => n8135);
   U7699 : GTECH_NOR2 port map( A => n6634, B => n7574, Z => n8138);
   U7700 : GTECH_NOT port map( A => n6764, Z => n6634);
   U7701 : GTECH_NOT port map( A => n8139, Z => n8137);
   U7702 : GTECH_NAND2 port map( A => n7574, B => n6762, Z => n8139);
   U7703 : GTECH_NAND2 port map( A => n8140, B => n8141, Z => n8133);
   U7704 : GTECH_NAND2 port map( A => n70, B => n6638, Z => n8141);
   U7705 : GTECH_NOT port map( A => n8142, Z => n6638);
   U7706 : GTECH_NAND2 port map( A => N702, B => n6859, Z => n8140);
   U7707 : GTECH_NAND2 port map( A => n8143, B => n8144, Z => n8120);
   U7708 : GTECH_NOR2 port map( A => n8145, B => n8146, Z => n8144);
   U7709 : GTECH_NAND2 port map( A => n8147, B => n8148, Z => n8146);
   U7710 : GTECH_NAND2 port map( A => mem_read(15), B => n6772, Z => n8148);
   U7711 : GTECH_NOT port map( A => n6657, Z => n6772);
   U7712 : GTECH_NAND2 port map( A => n8149, B => n7968, Z => n6657);
   U7713 : GTECH_NAND2 port map( A => mem_read(31), B => n6782, Z => n8147);
   U7714 : GTECH_NOT port map( A => n6655, Z => n6782);
   U7715 : GTECH_NAND2 port map( A => n8150, B => n7968, Z => n6655);
   U7716 : GTECH_NAND2 port map( A => n8151, B => n8152, Z => n8145);
   U7717 : GTECH_NAND2 port map( A => mem_read(23), B => n6771, Z => n8152);
   U7718 : GTECH_NOT port map( A => n6651, Z => n6771);
   U7719 : GTECH_NAND2 port map( A => n7968, B => n8153, Z => n6651);
   U7720 : GTECH_NOT port map( A => n8154, Z => n7968);
   U7721 : GTECH_NOR2 port map( A => n6873, B => n8155, Z => n8151);
   U7722 : GTECH_NOR2 port map( A => n8156, B => n7907, Z => n8155);
   U7723 : GTECH_NOR2 port map( A => n8157, B => n6876, Z => n8156);
   U7724 : GTECH_NOR2 port map( A => n6878, B => n7574, Z => n8157);
   U7725 : GTECH_NOR2 port map( A => n8158, B => n8159, Z => n8143);
   U7726 : GTECH_NAND2 port map( A => n8160, B => n8161, Z => n8159);
   U7727 : GTECH_NAND2 port map( A => stackA_6_port, B => n6754, Z => n8161);
   U7728 : GTECH_NAND2 port map( A => N2996, B => n6755, Z => n8160);
   U7729 : GTECH_NOT port map( A => n8162, Z => n8158);
   U7730 : GTECH_NOR2 port map( A => n8163, B => n8164, Z => n8162);
   U7731 : GTECH_NOR2 port map( A => n8165, B => n6783, Z => n8164);
   U7732 : GTECH_NOT port map( A => n8032, Z => n6783);
   U7733 : GTECH_NAND2 port map( A => n8166, B => n8167, Z => n8163);
   U7734 : GTECH_NAND2 port map( A => n6870, B => n11022, Z => n8167);
   U7735 : GTECH_NAND2 port map( A => n6631, B => mem_read(7), Z => n8166);
   U7736 : GTECH_NAND2 port map( A => n6884, B => n8168, Z => n6631);
   U7737 : GTECH_NAND2 port map( A => n8169, B => stackA_1_port, Z => n8168);
   U7738 : GTECH_NOR2 port map( A => n8000, B => n8154, Z => n8169);
   U7739 : GTECH_NOT port map( A => n8170, Z => n6884);
   U7740 : GTECH_NAND2 port map( A => n8171, B => n8172, Z => n5880);
   U7741 : GTECH_NAND2 port map( A => n8173, B => stackA_0_port, Z => n8172);
   U7742 : GTECH_NAND2 port map( A => n6233, B => multA_0_port, Z => n8171);
   U7743 : GTECH_NAND2 port map( A => n8174, B => n8175, Z => n5879);
   U7744 : GTECH_NAND2 port map( A => n8173, B => stackA_1_port, Z => n8175);
   U7745 : GTECH_NAND2 port map( A => n6233, B => multA_1_port, Z => n8174);
   U7746 : GTECH_NAND2 port map( A => n8176, B => n8177, Z => n5878);
   U7747 : GTECH_NAND2 port map( A => n8173, B => stackA_2_port, Z => n8177);
   U7748 : GTECH_NAND2 port map( A => n6233, B => multA_2_port, Z => n8176);
   U7749 : GTECH_NAND2 port map( A => n8178, B => n8179, Z => n5877);
   U7750 : GTECH_NAND2 port map( A => n8173, B => stackA_3_port, Z => n8179);
   U7751 : GTECH_NAND2 port map( A => n6233, B => multA_3_port, Z => n8178);
   U7752 : GTECH_NAND2 port map( A => n8180, B => n8181, Z => n5876);
   U7753 : GTECH_NAND2 port map( A => n8173, B => stackA_4_port, Z => n8181);
   U7754 : GTECH_NAND2 port map( A => n6233, B => multA_4_port, Z => n8180);
   U7755 : GTECH_NAND2 port map( A => n8182, B => n8183, Z => n5875);
   U7756 : GTECH_NAND2 port map( A => n8173, B => stackA_5_port, Z => n8183);
   U7757 : GTECH_NAND2 port map( A => n6233, B => multA_5_port, Z => n8182);
   U7758 : GTECH_NAND2 port map( A => n8184, B => n8185, Z => n5874);
   U7759 : GTECH_NAND2 port map( A => n8173, B => stackA_6_port, Z => n8185);
   U7760 : GTECH_NAND2 port map( A => n6233, B => multA_6_port, Z => n8184);
   U7761 : GTECH_NAND2 port map( A => n8186, B => n8187, Z => n5873);
   U7762 : GTECH_NAND2 port map( A => n8173, B => stackA_7_port, Z => n8187);
   U7763 : GTECH_NAND2 port map( A => n6233, B => multA_7_port, Z => n8186);
   U7764 : GTECH_NAND2 port map( A => n8188, B => n8189, Z => n5872);
   U7765 : GTECH_NAND2 port map( A => n8173, B => stackA_8_port, Z => n8189);
   U7766 : GTECH_NAND2 port map( A => n6233, B => multA_8_port, Z => n8188);
   U7767 : GTECH_NAND2 port map( A => n8190, B => n8191, Z => n5871);
   U7768 : GTECH_NAND2 port map( A => n8173, B => stackA_9_port, Z => n8191);
   U7769 : GTECH_NAND2 port map( A => n6233, B => multA_9_port, Z => n8190);
   U7770 : GTECH_NAND2 port map( A => n8192, B => n8193, Z => n5870);
   U7771 : GTECH_NAND2 port map( A => n8173, B => stackA_10_port, Z => n8193);
   U7772 : GTECH_NAND2 port map( A => n6233, B => multA_10_port, Z => n8192);
   U7773 : GTECH_NAND2 port map( A => n8194, B => n8195, Z => n5869);
   U7774 : GTECH_NAND2 port map( A => n8173, B => stackA_11_port, Z => n8195);
   U7775 : GTECH_NAND2 port map( A => n6233, B => multA_11_port, Z => n8194);
   U7776 : GTECH_NAND2 port map( A => n8196, B => n8197, Z => n5868);
   U7777 : GTECH_NAND2 port map( A => n8173, B => stackA_12_port, Z => n8197);
   U7778 : GTECH_NAND2 port map( A => n6233, B => multA_12_port, Z => n8196);
   U7779 : GTECH_NAND2 port map( A => n8198, B => n8199, Z => n5867);
   U7780 : GTECH_NAND2 port map( A => n8173, B => stackA_13_port, Z => n8199);
   U7781 : GTECH_NAND2 port map( A => n6233, B => multA_13_port, Z => n8198);
   U7782 : GTECH_NAND2 port map( A => n8200, B => n8201, Z => n5866);
   U7783 : GTECH_NAND2 port map( A => n8173, B => stackA_14_port, Z => n8201);
   U7784 : GTECH_NAND2 port map( A => n6233, B => multA_14_port, Z => n8200);
   U7785 : GTECH_NAND2 port map( A => n8202, B => n8203, Z => n5865);
   U7786 : GTECH_NAND2 port map( A => n8173, B => stackA_15_port, Z => n8203);
   U7787 : GTECH_NAND2 port map( A => n6233, B => multA_15_port, Z => n8202);
   U7788 : GTECH_NAND2 port map( A => n8204, B => n8205, Z => n5864);
   U7789 : GTECH_NAND2 port map( A => n8173, B => stackA_16_port, Z => n8205);
   U7790 : GTECH_NAND2 port map( A => n6233, B => multA_16_port, Z => n8204);
   U7791 : GTECH_NAND2 port map( A => n8206, B => n8207, Z => n5863);
   U7792 : GTECH_NAND2 port map( A => n8173, B => stackA_17_port, Z => n8207);
   U7793 : GTECH_NAND2 port map( A => n6233, B => multA_17_port, Z => n8206);
   U7794 : GTECH_NAND2 port map( A => n8208, B => n8209, Z => n5862);
   U7795 : GTECH_NAND2 port map( A => n8173, B => stackA_18_port, Z => n8209);
   U7796 : GTECH_NAND2 port map( A => n6233, B => multA_18_port, Z => n8208);
   U7797 : GTECH_NAND2 port map( A => n8210, B => n8211, Z => n5861);
   U7798 : GTECH_NAND2 port map( A => n8173, B => stackA_19_port, Z => n8211);
   U7799 : GTECH_NAND2 port map( A => n6233, B => multA_19_port, Z => n8210);
   U7800 : GTECH_NAND2 port map( A => n8212, B => n8213, Z => n5860);
   U7801 : GTECH_NAND2 port map( A => n8173, B => stackA_20_port, Z => n8213);
   U7802 : GTECH_NAND2 port map( A => n6233, B => multA_20_port, Z => n8212);
   U7803 : GTECH_NAND2 port map( A => n8214, B => n8215, Z => n5859);
   U7804 : GTECH_NAND2 port map( A => n8173, B => stackA_21_port, Z => n8215);
   U7805 : GTECH_NAND2 port map( A => n6233, B => multA_21_port, Z => n8214);
   U7806 : GTECH_NAND2 port map( A => n8216, B => n8217, Z => n5858);
   U7807 : GTECH_NAND2 port map( A => n8173, B => stackA_22_port, Z => n8217);
   U7808 : GTECH_NAND2 port map( A => n6233, B => multA_22_port, Z => n8216);
   U7809 : GTECH_NAND2 port map( A => n8218, B => n8219, Z => n5857);
   U7810 : GTECH_NAND2 port map( A => n8173, B => stackA_23_port, Z => n8219);
   U7811 : GTECH_NAND2 port map( A => n6233, B => multA_23_port, Z => n8218);
   U7812 : GTECH_NAND2 port map( A => n8220, B => n8221, Z => n5856);
   U7813 : GTECH_NAND2 port map( A => n8173, B => stackA_24_port, Z => n8221);
   U7814 : GTECH_NAND2 port map( A => n6233, B => multA_24_port, Z => n8220);
   U7815 : GTECH_NAND2 port map( A => n8222, B => n8223, Z => n5855);
   U7816 : GTECH_NAND2 port map( A => n8173, B => stackA_25_port, Z => n8223);
   U7817 : GTECH_NAND2 port map( A => n6233, B => multA_25_port, Z => n8222);
   U7818 : GTECH_NAND2 port map( A => n8224, B => n8225, Z => n5854);
   U7819 : GTECH_NAND2 port map( A => n8173, B => stackA_26_port, Z => n8225);
   U7820 : GTECH_NAND2 port map( A => n6233, B => multA_26_port, Z => n8224);
   U7821 : GTECH_NAND2 port map( A => n8226, B => n8227, Z => n5853);
   U7822 : GTECH_NAND2 port map( A => n8173, B => stackA_27_port, Z => n8227);
   U7823 : GTECH_NAND2 port map( A => n6233, B => multA_27_port, Z => n8226);
   U7824 : GTECH_NAND2 port map( A => n8228, B => n8229, Z => n5852);
   U7825 : GTECH_NAND2 port map( A => n8173, B => stackA_28_port, Z => n8229);
   U7826 : GTECH_NAND2 port map( A => n6233, B => multA_28_port, Z => n8228);
   U7827 : GTECH_NAND2 port map( A => n8230, B => n8231, Z => n5851);
   U7828 : GTECH_NAND2 port map( A => n8173, B => stackA_29_port, Z => n8231);
   U7829 : GTECH_NAND2 port map( A => n6233, B => multA_29_port, Z => n8230);
   U7830 : GTECH_NAND2 port map( A => n8232, B => n8233, Z => n5850);
   U7831 : GTECH_NAND2 port map( A => n8173, B => stackA_30_port, Z => n8233);
   U7832 : GTECH_NAND2 port map( A => n6233, B => multA_30_port, Z => n8232);
   U7833 : GTECH_NAND2 port map( A => n8234, B => n8235, Z => n5849);
   U7834 : GTECH_NAND2 port map( A => n8173, B => stackA_31_port, Z => n8235);
   U7835 : GTECH_NAND2 port map( A => n6233, B => multA_31_port, Z => n8234);
   U7836 : GTECH_NAND2 port map( A => n8236, B => n8237, Z => n5848);
   U7837 : GTECH_NAND2 port map( A => stackB_0_port, B => n8238, Z => n8237);
   U7838 : GTECH_NOR2 port map( A => n8239, B => n8240, Z => n8236);
   U7839 : GTECH_NOR2 port map( A => n8000, B => n8241, Z => n8240);
   U7840 : GTECH_NOR2 port map( A => n8242, B => n8243, Z => n8239);
   U7841 : GTECH_NAND2 port map( A => n8244, B => n8245, Z => n5847);
   U7842 : GTECH_NAND2 port map( A => stackB_1_port, B => n8238, Z => n8245);
   U7843 : GTECH_NOR2 port map( A => n8246, B => n8247, Z => n8244);
   U7844 : GTECH_NOR2 port map( A => n8050, B => n8241, Z => n8247);
   U7845 : GTECH_NOR2 port map( A => n8036, B => n8243, Z => n8246);
   U7846 : GTECH_NAND2 port map( A => n8248, B => n8249, Z => n5846);
   U7847 : GTECH_NAND2 port map( A => stackB_2_port, B => n8238, Z => n8249);
   U7848 : GTECH_NOR2 port map( A => n8250, B => n8251, Z => n8248);
   U7849 : GTECH_NOR2 port map( A => n6633, B => n8241, Z => n8251);
   U7850 : GTECH_NOR2 port map( A => n8252, B => n8243, Z => n8250);
   U7851 : GTECH_NAND2 port map( A => n8253, B => n8254, Z => n5845);
   U7852 : GTECH_NAND2 port map( A => stackB_3_port, B => n8238, Z => n8254);
   U7853 : GTECH_NOR2 port map( A => n8255, B => n8256, Z => n8253);
   U7854 : GTECH_NOR2 port map( A => n6698, B => n8241, Z => n8256);
   U7855 : GTECH_NOR2 port map( A => n8257, B => n8243, Z => n8255);
   U7856 : GTECH_NAND2 port map( A => n8258, B => n8259, Z => n5844);
   U7857 : GTECH_NAND2 port map( A => stackB_4_port, B => n8238, Z => n8259);
   U7858 : GTECH_NOR2 port map( A => n8260, B => n8261, Z => n8258);
   U7859 : GTECH_NOR2 port map( A => n6763, B => n8241, Z => n8261);
   U7860 : GTECH_NOR2 port map( A => n8262, B => n8243, Z => n8260);
   U7861 : GTECH_NAND2 port map( A => n8263, B => n8264, Z => n5843);
   U7862 : GTECH_NAND2 port map( A => stackB_5_port, B => n8238, Z => n8264);
   U7863 : GTECH_NOR2 port map( A => n8265, B => n8266, Z => n8263);
   U7864 : GTECH_NOR2 port map( A => n6815, B => n8241, Z => n8266);
   U7865 : GTECH_NOR2 port map( A => n8267, B => n8243, Z => n8265);
   U7866 : GTECH_NAND2 port map( A => n8268, B => n8269, Z => n5842);
   U7867 : GTECH_NAND2 port map( A => stackB_6_port, B => n8238, Z => n8269);
   U7868 : GTECH_NOR2 port map( A => n8270, B => n8271, Z => n8268);
   U7869 : GTECH_NOR2 port map( A => n7555, B => n8241, Z => n8271);
   U7870 : GTECH_NOR2 port map( A => n8272, B => n8243, Z => n8270);
   U7871 : GTECH_NAND2 port map( A => n8273, B => n8274, Z => n5841);
   U7872 : GTECH_NAND2 port map( A => stackB_7_port, B => n8238, Z => n8274);
   U7873 : GTECH_NOR2 port map( A => n8275, B => n8276, Z => n8273);
   U7874 : GTECH_NOR2 port map( A => n7574, B => n8241, Z => n8276);
   U7875 : GTECH_NOR2 port map( A => n8277, B => n8243, Z => n8275);
   U7876 : GTECH_NAND2 port map( A => n8278, B => n8279, Z => n5840);
   U7877 : GTECH_NAND2 port map( A => stackB_8_port, B => n8238, Z => n8279);
   U7878 : GTECH_NOR2 port map( A => n8280, B => n8281, Z => n8278);
   U7879 : GTECH_NOR2 port map( A => n7593, B => n8241, Z => n8281);
   U7880 : GTECH_NOR2 port map( A => n7987, B => n8243, Z => n8280);
   U7881 : GTECH_NAND2 port map( A => n8282, B => n8283, Z => n5839);
   U7882 : GTECH_NAND2 port map( A => stackB_9_port, B => n8238, Z => n8283);
   U7883 : GTECH_NOR2 port map( A => n8284, B => n8285, Z => n8282);
   U7884 : GTECH_NOR2 port map( A => n7613, B => n8241, Z => n8285);
   U7885 : GTECH_NOR2 port map( A => n8053, B => n8243, Z => n8284);
   U7886 : GTECH_NAND2 port map( A => n8286, B => n8287, Z => n5838);
   U7887 : GTECH_NAND2 port map( A => stackB_10_port, B => n8238, Z => n8287);
   U7888 : GTECH_NOR2 port map( A => n8288, B => n8289, Z => n8286);
   U7889 : GTECH_NOR2 port map( A => n8290, B => n8241, Z => n8289);
   U7890 : GTECH_NOR2 port map( A => n6658, B => n8243, Z => n8288);
   U7891 : GTECH_NAND2 port map( A => n8291, B => n8292, Z => n5837);
   U7892 : GTECH_NAND2 port map( A => stackB_11_port, B => n8238, Z => n8292);
   U7893 : GTECH_NOR2 port map( A => n8293, B => n8294, Z => n8291);
   U7894 : GTECH_NOR2 port map( A => n8295, B => n8241, Z => n8294);
   U7895 : GTECH_NOR2 port map( A => n6714, B => n8243, Z => n8293);
   U7896 : GTECH_NAND2 port map( A => n8296, B => n8297, Z => n5836);
   U7897 : GTECH_NAND2 port map( A => stackB_12_port, B => n8238, Z => n8297);
   U7898 : GTECH_NOR2 port map( A => n8298, B => n8299, Z => n8296);
   U7899 : GTECH_NOR2 port map( A => n8300, B => n8241, Z => n8299);
   U7900 : GTECH_NOR2 port map( A => n8301, B => n8243, Z => n8298);
   U7901 : GTECH_NAND2 port map( A => n8302, B => n8303, Z => n5835);
   U7902 : GTECH_NAND2 port map( A => stackB_13_port, B => n8238, Z => n8303);
   U7903 : GTECH_NOR2 port map( A => n8304, B => n8305, Z => n8302);
   U7904 : GTECH_NOR2 port map( A => n8306, B => n8241, Z => n8305);
   U7905 : GTECH_NOR2 port map( A => n8307, B => n8243, Z => n8304);
   U7906 : GTECH_NAND2 port map( A => n8308, B => n8309, Z => n5834);
   U7907 : GTECH_NAND2 port map( A => stackB_14_port, B => n8238, Z => n8309);
   U7908 : GTECH_NOR2 port map( A => n8310, B => n8311, Z => n8308);
   U7909 : GTECH_NOR2 port map( A => n8312, B => n8241, Z => n8311);
   U7910 : GTECH_NOR2 port map( A => n8313, B => n8243, Z => n8310);
   U7911 : GTECH_NAND2 port map( A => n8314, B => n8315, Z => n5833);
   U7912 : GTECH_NAND2 port map( A => stackB_15_port, B => n8238, Z => n8315);
   U7913 : GTECH_NOR2 port map( A => n8316, B => n8317, Z => n8314);
   U7914 : GTECH_NOR2 port map( A => n6887, B => n8241, Z => n8317);
   U7915 : GTECH_NOR2 port map( A => n8318, B => n8243, Z => n8316);
   U7916 : GTECH_NAND2 port map( A => n8319, B => n8320, Z => n5832);
   U7917 : GTECH_NAND2 port map( A => stackB_16_port, B => n8238, Z => n8320);
   U7918 : GTECH_NOR2 port map( A => n8321, B => n8322, Z => n8319);
   U7919 : GTECH_NOR2 port map( A => n6863, B => n8241, Z => n8322);
   U7920 : GTECH_NOR2 port map( A => n6885, B => n8243, Z => n8321);
   U7921 : GTECH_NOT port map( A => mem_read(16), Z => n6885);
   U7922 : GTECH_NAND2 port map( A => n8323, B => n8324, Z => n5831);
   U7923 : GTECH_NAND2 port map( A => stackB_17_port, B => n8238, Z => n8324);
   U7924 : GTECH_NOR2 port map( A => n8325, B => n8326, Z => n8323);
   U7925 : GTECH_NOR2 port map( A => n8327, B => n8241, Z => n8326);
   U7926 : GTECH_NOR2 port map( A => n8054, B => n8243, Z => n8325);
   U7927 : GTECH_NAND2 port map( A => n8328, B => n8329, Z => n5830);
   U7928 : GTECH_NAND2 port map( A => stackB_18_port, B => n8238, Z => n8329);
   U7929 : GTECH_NOR2 port map( A => n8330, B => n8331, Z => n8328);
   U7930 : GTECH_NOR2 port map( A => n8332, B => n8241, Z => n8331);
   U7931 : GTECH_NOR2 port map( A => n6652, B => n8243, Z => n8330);
   U7932 : GTECH_NAND2 port map( A => n8333, B => n8334, Z => n5829);
   U7933 : GTECH_NAND2 port map( A => stackB_19_port, B => n8238, Z => n8334);
   U7934 : GTECH_NOR2 port map( A => n8335, B => n8336, Z => n8333);
   U7935 : GTECH_NOR2 port map( A => n8337, B => n8241, Z => n8336);
   U7936 : GTECH_NOR2 port map( A => n6710, B => n8243, Z => n8335);
   U7937 : GTECH_NAND2 port map( A => n8338, B => n8339, Z => n5828);
   U7938 : GTECH_NAND2 port map( A => stackB_20_port, B => n8238, Z => n8339);
   U7939 : GTECH_NOR2 port map( A => n8340, B => n8341, Z => n8338);
   U7940 : GTECH_NOR2 port map( A => n8342, B => n8241, Z => n8341);
   U7941 : GTECH_NOR2 port map( A => n8343, B => n8243, Z => n8340);
   U7942 : GTECH_NAND2 port map( A => n8344, B => n8345, Z => n5827);
   U7943 : GTECH_NAND2 port map( A => stackB_21_port, B => n8238, Z => n8345);
   U7944 : GTECH_NOR2 port map( A => n8346, B => n8347, Z => n8344);
   U7945 : GTECH_NOR2 port map( A => n8348, B => n8241, Z => n8347);
   U7946 : GTECH_NOR2 port map( A => n8349, B => n8243, Z => n8346);
   U7947 : GTECH_NAND2 port map( A => n8350, B => n8351, Z => n5826);
   U7948 : GTECH_NAND2 port map( A => stackB_22_port, B => n8238, Z => n8351);
   U7949 : GTECH_NOR2 port map( A => n8352, B => n8353, Z => n8350);
   U7950 : GTECH_NOR2 port map( A => n8354, B => n8241, Z => n8353);
   U7951 : GTECH_NOR2 port map( A => n8355, B => n8243, Z => n8352);
   U7952 : GTECH_NAND2 port map( A => n8356, B => n8357, Z => n5825);
   U7953 : GTECH_NAND2 port map( A => stackB_23_port, B => n8238, Z => n8357);
   U7954 : GTECH_NOR2 port map( A => n8358, B => n8359, Z => n8356);
   U7955 : GTECH_NOR2 port map( A => n8360, B => n8241, Z => n8359);
   U7956 : GTECH_NOR2 port map( A => n8361, B => n8243, Z => n8358);
   U7957 : GTECH_NAND2 port map( A => n8362, B => n8363, Z => n5824);
   U7958 : GTECH_NAND2 port map( A => stackB_24_port, B => n8238, Z => n8363);
   U7959 : GTECH_NOR2 port map( A => n8364, B => n8365, Z => n8362);
   U7960 : GTECH_NOR2 port map( A => n8165, B => n8241, Z => n8365);
   U7961 : GTECH_NOR2 port map( A => n7986, B => n8243, Z => n8364);
   U7962 : GTECH_NAND2 port map( A => n8366, B => n8367, Z => n5823);
   U7963 : GTECH_NAND2 port map( A => stackB_25_port, B => n8238, Z => n8367);
   U7964 : GTECH_NOR2 port map( A => n8368, B => n8369, Z => n8366);
   U7965 : GTECH_NOR2 port map( A => n8370, B => n8241, Z => n8369);
   U7966 : GTECH_NOR2 port map( A => n8037, B => n8243, Z => n8368);
   U7967 : GTECH_NAND2 port map( A => n8371, B => n8372, Z => n5822);
   U7968 : GTECH_NAND2 port map( A => stackB_26_port, B => n8238, Z => n8372);
   U7969 : GTECH_NOR2 port map( A => n8373, B => n8374, Z => n8371);
   U7970 : GTECH_NOR2 port map( A => n6838, B => n8241, Z => n8374);
   U7971 : GTECH_NOR2 port map( A => n6656, B => n8243, Z => n8373);
   U7972 : GTECH_NAND2 port map( A => n8375, B => n8376, Z => n5821);
   U7973 : GTECH_NAND2 port map( A => stackB_27_port, B => n8238, Z => n8376);
   U7974 : GTECH_NOR2 port map( A => n8377, B => n8378, Z => n8375);
   U7975 : GTECH_NOR2 port map( A => n6784, B => n8241, Z => n8378);
   U7976 : GTECH_NOR2 port map( A => n6713, B => n8243, Z => n8377);
   U7977 : GTECH_NAND2 port map( A => n8379, B => n8380, Z => n5820);
   U7978 : GTECH_NAND2 port map( A => stackB_28_port, B => n8238, Z => n8380);
   U7979 : GTECH_NOR2 port map( A => n8381, B => n8382, Z => n8379);
   U7980 : GTECH_NOR2 port map( A => n6688, B => n8241, Z => n8382);
   U7981 : GTECH_NOR2 port map( A => n8383, B => n8243, Z => n8381);
   U7982 : GTECH_NAND2 port map( A => n8384, B => n8385, Z => n5819);
   U7983 : GTECH_NAND2 port map( A => stackB_29_port, B => n8238, Z => n8385);
   U7984 : GTECH_NOR2 port map( A => n8386, B => n8387, Z => n8384);
   U7985 : GTECH_NOR2 port map( A => n6620, B => n8241, Z => n8387);
   U7986 : GTECH_NOR2 port map( A => n8388, B => n8243, Z => n8386);
   U7987 : GTECH_NAND2 port map( A => n8389, B => n8390, Z => n5818);
   U7988 : GTECH_NAND2 port map( A => stackB_30_port, B => n8238, Z => n8390);
   U7989 : GTECH_NOR2 port map( A => n8391, B => n8392, Z => n8389);
   U7990 : GTECH_NOR2 port map( A => n8393, B => n8241, Z => n8392);
   U7991 : GTECH_NOR2 port map( A => n8394, B => n8243, Z => n8391);
   U7992 : GTECH_NAND2 port map( A => n8395, B => n8396, Z => n5817);
   U7993 : GTECH_NAND2 port map( A => stackB_31_port, B => n8238, Z => n8396);
   U7994 : GTECH_NOT port map( A => n8397, Z => n8238);
   U7995 : GTECH_NOR2 port map( A => n8398, B => n8399, Z => n8395);
   U7996 : GTECH_NOR2 port map( A => n8015, B => n8241, Z => n8399);
   U7997 : GTECH_NAND2 port map( A => n8400, B => n8397, Z => n8241);
   U7998 : GTECH_NOR2 port map( A => n8401, B => n7182, Z => n8400);
   U7999 : GTECH_NOR2 port map( A => n6230, B => n8402, Z => n8401);
   U8000 : GTECH_NOR2 port map( A => n8403, B => n8243, Z => n8398);
   U8001 : GTECH_NAND2 port map( A => n8404, B => n8397, Z => n8243);
   U8002 : GTECH_NOR2 port map( A => n6233, B => n8405, Z => n8397);
   U8003 : GTECH_NOR2 port map( A => n8406, B => n7182, Z => n8405);
   U8004 : GTECH_NAND2 port map( A => n7448, B => n8407, Z => n8406);
   U8005 : GTECH_NAND2 port map( A => n8408, B => n7442, Z => n8407);
   U8006 : GTECH_NOT port map( A => n8409, Z => n8408);
   U8007 : GTECH_NOR2 port map( A => n8410, B => n8411, Z => n8409);
   U8008 : GTECH_NAND2 port map( A => n8412, B => n8413, Z => n8411);
   U8009 : GTECH_NAND2 port map( A => n6230, B => n8414, Z => n8413);
   U8010 : GTECH_NAND2 port map( A => n8415, B => n8402, Z => n8412);
   U8011 : GTECH_NAND2 port map( A => n8416, B => n7967, Z => n8410);
   U8012 : GTECH_NAND2 port map( A => n8417, B => n8418, Z => n8416);
   U8013 : GTECH_NOR2 port map( A => n8419, B => n7182, Z => n8404);
   U8014 : GTECH_NOR2 port map( A => n8420, B => n8417, Z => n8419);
   U8015 : GTECH_NAND2 port map( A => n8421, B => n8422, Z => n5815);
   U8016 : GTECH_NAND2 port map( A => N3121, B => n6236, Z => n8422);
   U8017 : GTECH_NAND2 port map( A => n11018, B => n6240, Z => n8421);
   U8018 : GTECH_NAND2 port map( A => n8423, B => n8424, Z => n5814);
   U8019 : GTECH_NAND2 port map( A => N3122, B => n6236, Z => n8424);
   U8020 : GTECH_NAND2 port map( A => n11017, B => n6240, Z => n8423);
   U8021 : GTECH_NAND2 port map( A => n8425, B => n8426, Z => n5813);
   U8022 : GTECH_NAND2 port map( A => N3123, B => n6236, Z => n8426);
   U8023 : GTECH_NAND2 port map( A => n11016, B => n6240, Z => n8425);
   U8024 : GTECH_NAND2 port map( A => n8427, B => n8428, Z => n5812);
   U8025 : GTECH_NAND2 port map( A => N3124, B => n6236, Z => n8428);
   U8026 : GTECH_NAND2 port map( A => n11015, B => n6240, Z => n8427);
   U8027 : GTECH_NAND2 port map( A => n8429, B => n8430, Z => n5811);
   U8028 : GTECH_NAND2 port map( A => N3125, B => n6236, Z => n8430);
   U8029 : GTECH_NAND2 port map( A => n11014, B => n6240, Z => n8429);
   U8030 : GTECH_NAND2 port map( A => n8431, B => n8432, Z => n5810);
   U8031 : GTECH_NAND2 port map( A => N3126, B => n6236, Z => n8432);
   U8032 : GTECH_NAND2 port map( A => n11013, B => n6240, Z => n8431);
   U8033 : GTECH_NAND2 port map( A => n8433, B => n8434, Z => n5809);
   U8034 : GTECH_NAND2 port map( A => N3127, B => n6236, Z => n8434);
   U8035 : GTECH_NAND2 port map( A => n11012, B => n6240, Z => n8433);
   U8036 : GTECH_NAND2 port map( A => n8435, B => n8436, Z => n5808);
   U8037 : GTECH_NAND2 port map( A => N3128, B => n6236, Z => n8436);
   U8038 : GTECH_NAND2 port map( A => n11011, B => n6240, Z => n8435);
   U8039 : GTECH_NAND2 port map( A => n8437, B => n8438, Z => n5807);
   U8040 : GTECH_NAND2 port map( A => N3129, B => n6236, Z => n8438);
   U8041 : GTECH_NAND2 port map( A => n11010, B => n6240, Z => n8437);
   U8042 : GTECH_NAND2 port map( A => n8439, B => n8440, Z => n5806);
   U8043 : GTECH_NAND2 port map( A => N3130, B => n6236, Z => n8440);
   U8044 : GTECH_NAND2 port map( A => n11009, B => n6240, Z => n8439);
   U8045 : GTECH_NAND2 port map( A => n8441, B => n8442, Z => n5805);
   U8046 : GTECH_NAND2 port map( A => N3131, B => n6236, Z => n8442);
   U8047 : GTECH_NAND2 port map( A => n11008, B => n6240, Z => n8441);
   U8048 : GTECH_NAND2 port map( A => n8443, B => n8444, Z => n5804);
   U8049 : GTECH_NAND2 port map( A => N3132, B => n6236, Z => n8444);
   U8050 : GTECH_NAND2 port map( A => n11007, B => n6240, Z => n8443);
   U8051 : GTECH_NAND2 port map( A => n8445, B => n8446, Z => n5803);
   U8052 : GTECH_NAND2 port map( A => N3133, B => n6236, Z => n8446);
   U8053 : GTECH_NAND2 port map( A => n11006, B => n6240, Z => n8445);
   U8054 : GTECH_NAND2 port map( A => n8447, B => n8448, Z => n5802);
   U8055 : GTECH_NAND2 port map( A => N3134, B => n6236, Z => n8448);
   U8056 : GTECH_NAND2 port map( A => n11005, B => n6240, Z => n8447);
   U8057 : GTECH_NAND2 port map( A => n8449, B => n8450, Z => n5801);
   U8058 : GTECH_NAND2 port map( A => N3135, B => n6236, Z => n8450);
   U8059 : GTECH_NAND2 port map( A => n11004, B => n6240, Z => n8449);
   U8060 : GTECH_NAND2 port map( A => n8451, B => n8452, Z => n5800);
   U8061 : GTECH_NAND2 port map( A => N3136, B => n6236, Z => n8452);
   U8062 : GTECH_NAND2 port map( A => n11003, B => n6240, Z => n8451);
   U8063 : GTECH_NAND2 port map( A => n8453, B => n8454, Z => n5799);
   U8064 : GTECH_NAND2 port map( A => N3137, B => n6236, Z => n8454);
   U8065 : GTECH_NAND2 port map( A => n11002, B => n6240, Z => n8453);
   U8066 : GTECH_NAND2 port map( A => n8455, B => n8456, Z => n5798);
   U8067 : GTECH_NAND2 port map( A => N3138, B => n6236, Z => n8456);
   U8068 : GTECH_NAND2 port map( A => n11001, B => n6240, Z => n8455);
   U8069 : GTECH_NAND2 port map( A => n8457, B => n8458, Z => n5797);
   U8070 : GTECH_NAND2 port map( A => N3139, B => n6236, Z => n8458);
   U8071 : GTECH_NAND2 port map( A => n11000, B => n6240, Z => n8457);
   U8072 : GTECH_NAND2 port map( A => n8459, B => n8460, Z => n5796);
   U8073 : GTECH_NAND2 port map( A => N3140, B => n6236, Z => n8460);
   U8074 : GTECH_NAND2 port map( A => n10999, B => n6240, Z => n8459);
   U8075 : GTECH_NAND2 port map( A => n8461, B => n8462, Z => n5795);
   U8076 : GTECH_NAND2 port map( A => N3141, B => n6236, Z => n8462);
   U8077 : GTECH_NAND2 port map( A => n10998, B => n6240, Z => n8461);
   U8078 : GTECH_NAND2 port map( A => n8463, B => n8464, Z => n5794);
   U8079 : GTECH_NAND2 port map( A => N3142, B => n6236, Z => n8464);
   U8080 : GTECH_NAND2 port map( A => n10997, B => n6240, Z => n8463);
   U8081 : GTECH_NAND2 port map( A => n8465, B => n8466, Z => n5793);
   U8082 : GTECH_NAND2 port map( A => N3143, B => n6236, Z => n8466);
   U8083 : GTECH_NAND2 port map( A => n10996, B => n6240, Z => n8465);
   U8084 : GTECH_NAND2 port map( A => n8467, B => n8468, Z => n5792);
   U8085 : GTECH_NAND2 port map( A => N3144, B => n6236, Z => n8468);
   U8086 : GTECH_NAND2 port map( A => n10995, B => n6240, Z => n8467);
   U8087 : GTECH_NAND2 port map( A => n8469, B => n8470, Z => n5791);
   U8088 : GTECH_NAND2 port map( A => N3145, B => n6236, Z => n8470);
   U8089 : GTECH_NAND2 port map( A => n10994, B => n6240, Z => n8469);
   U8090 : GTECH_NAND2 port map( A => n8471, B => n8472, Z => n5790);
   U8091 : GTECH_NAND2 port map( A => N3146, B => n6236, Z => n8472);
   U8092 : GTECH_NAND2 port map( A => n10993, B => n6240, Z => n8471);
   U8093 : GTECH_NAND2 port map( A => n8473, B => n8474, Z => n5789);
   U8094 : GTECH_NAND2 port map( A => N3147, B => n6236, Z => n8474);
   U8095 : GTECH_NAND2 port map( A => n10992, B => n6240, Z => n8473);
   U8096 : GTECH_NAND2 port map( A => n8475, B => n8476, Z => n5788);
   U8097 : GTECH_NAND2 port map( A => N3148, B => n6236, Z => n8476);
   U8098 : GTECH_NAND2 port map( A => n10991, B => n6240, Z => n8475);
   U8099 : GTECH_NAND2 port map( A => n8477, B => n8478, Z => n5787);
   U8100 : GTECH_NAND2 port map( A => N3149, B => n6236, Z => n8478);
   U8101 : GTECH_NAND2 port map( A => n10990, B => n6240, Z => n8477);
   U8102 : GTECH_NAND2 port map( A => n8479, B => n8480, Z => n5786);
   U8103 : GTECH_NAND2 port map( A => N3150, B => n6236, Z => n8480);
   U8104 : GTECH_NAND2 port map( A => n10989, B => n6240, Z => n8479);
   U8105 : GTECH_NAND2 port map( A => n8481, B => n8482, Z => n5785);
   U8106 : GTECH_NAND2 port map( A => N3151, B => n6236, Z => n8482);
   U8107 : GTECH_NOT port map( A => n8483, Z => n6236);
   U8108 : GTECH_NAND2 port map( A => n8484, B => n8485, Z => n8483);
   U8109 : GTECH_NOR2 port map( A => n6240, B => n7182, Z => n8484);
   U8110 : GTECH_NAND2 port map( A => n10988, B => n6240, Z => n8481);
   U8111 : GTECH_NOR2 port map( A => n7182, B => n8486, Z => n6240);
   U8112 : GTECH_NOR2 port map( A => n8487, B => n7458, Z => n8486);
   U8113 : GTECH_NAND2 port map( A => n7442, B => n7171, Z => n8487);
   U8114 : GTECH_NAND2 port map( A => n8488, B => n8489, Z => n5752);
   U8115 : GTECH_NAND2 port map( A => n8173, B => stackB_0_port, Z => n8489);
   U8116 : GTECH_NAND2 port map( A => n6233, B => multB_0_port, Z => n8488);
   U8117 : GTECH_NAND2 port map( A => n8490, B => n8491, Z => n5751);
   U8118 : GTECH_NAND2 port map( A => n8173, B => stackB_1_port, Z => n8491);
   U8119 : GTECH_NAND2 port map( A => n6233, B => multB_1_port, Z => n8490);
   U8120 : GTECH_NAND2 port map( A => n8492, B => n8493, Z => n5750);
   U8121 : GTECH_NAND2 port map( A => n8173, B => stackB_2_port, Z => n8493);
   U8122 : GTECH_NAND2 port map( A => n6233, B => multB_2_port, Z => n8492);
   U8123 : GTECH_NAND2 port map( A => n8494, B => n8495, Z => n5749);
   U8124 : GTECH_NAND2 port map( A => n8173, B => stackB_3_port, Z => n8495);
   U8125 : GTECH_NAND2 port map( A => n6233, B => multB_3_port, Z => n8494);
   U8126 : GTECH_NAND2 port map( A => n8496, B => n8497, Z => n5748);
   U8127 : GTECH_NAND2 port map( A => n8173, B => stackB_4_port, Z => n8497);
   U8128 : GTECH_NAND2 port map( A => n6233, B => multB_4_port, Z => n8496);
   U8129 : GTECH_NAND2 port map( A => n8498, B => n8499, Z => n5747);
   U8130 : GTECH_NAND2 port map( A => n8173, B => stackB_5_port, Z => n8499);
   U8131 : GTECH_NAND2 port map( A => n6233, B => multB_5_port, Z => n8498);
   U8132 : GTECH_NAND2 port map( A => n8500, B => n8501, Z => n5746);
   U8133 : GTECH_NAND2 port map( A => n8173, B => stackB_6_port, Z => n8501);
   U8134 : GTECH_NAND2 port map( A => n6233, B => multB_6_port, Z => n8500);
   U8135 : GTECH_NAND2 port map( A => n8502, B => n8503, Z => n5745);
   U8136 : GTECH_NAND2 port map( A => n8173, B => stackB_7_port, Z => n8503);
   U8137 : GTECH_NAND2 port map( A => n6233, B => multB_7_port, Z => n8502);
   U8138 : GTECH_NAND2 port map( A => n8504, B => n8505, Z => n5744);
   U8139 : GTECH_NAND2 port map( A => stackB_8_port, B => n8173, Z => n8505);
   U8140 : GTECH_NAND2 port map( A => n6233, B => multB_8_port, Z => n8504);
   U8141 : GTECH_NAND2 port map( A => n8506, B => n8507, Z => n5743);
   U8142 : GTECH_NAND2 port map( A => stackB_9_port, B => n8173, Z => n8507);
   U8143 : GTECH_NAND2 port map( A => n6233, B => multB_9_port, Z => n8506);
   U8144 : GTECH_NAND2 port map( A => n8508, B => n8509, Z => n5742);
   U8145 : GTECH_NAND2 port map( A => stackB_10_port, B => n8173, Z => n8509);
   U8146 : GTECH_NAND2 port map( A => n6233, B => multB_10_port, Z => n8508);
   U8147 : GTECH_NAND2 port map( A => n8510, B => n8511, Z => n5741);
   U8148 : GTECH_NAND2 port map( A => stackB_11_port, B => n8173, Z => n8511);
   U8149 : GTECH_NAND2 port map( A => n6233, B => multB_11_port, Z => n8510);
   U8150 : GTECH_NAND2 port map( A => n8512, B => n8513, Z => n5740);
   U8151 : GTECH_NAND2 port map( A => stackB_12_port, B => n8173, Z => n8513);
   U8152 : GTECH_NAND2 port map( A => n6233, B => multB_12_port, Z => n8512);
   U8153 : GTECH_NAND2 port map( A => n8514, B => n8515, Z => n5739);
   U8154 : GTECH_NAND2 port map( A => stackB_13_port, B => n8173, Z => n8515);
   U8155 : GTECH_NAND2 port map( A => n6233, B => multB_13_port, Z => n8514);
   U8156 : GTECH_NAND2 port map( A => n8516, B => n8517, Z => n5738);
   U8157 : GTECH_NAND2 port map( A => stackB_14_port, B => n8173, Z => n8517);
   U8158 : GTECH_NAND2 port map( A => n6233, B => multB_14_port, Z => n8516);
   U8159 : GTECH_NAND2 port map( A => n8518, B => n8519, Z => n5737);
   U8160 : GTECH_NAND2 port map( A => stackB_15_port, B => n8173, Z => n8519);
   U8161 : GTECH_NAND2 port map( A => n6233, B => multB_15_port, Z => n8518);
   U8162 : GTECH_NAND2 port map( A => n8520, B => n8521, Z => n5736);
   U8163 : GTECH_NAND2 port map( A => n8173, B => stackB_16_port, Z => n8521);
   U8164 : GTECH_NAND2 port map( A => n6233, B => multB_16_port, Z => n8520);
   U8165 : GTECH_NAND2 port map( A => n8522, B => n8523, Z => n5735);
   U8166 : GTECH_NAND2 port map( A => stackB_17_port, B => n8173, Z => n8523);
   U8167 : GTECH_NAND2 port map( A => n6233, B => multB_17_port, Z => n8522);
   U8168 : GTECH_NAND2 port map( A => n8524, B => n8525, Z => n5734);
   U8169 : GTECH_NAND2 port map( A => stackB_18_port, B => n8173, Z => n8525);
   U8170 : GTECH_NAND2 port map( A => n6233, B => multB_18_port, Z => n8524);
   U8171 : GTECH_NAND2 port map( A => n8526, B => n8527, Z => n5733);
   U8172 : GTECH_NAND2 port map( A => stackB_19_port, B => n8173, Z => n8527);
   U8173 : GTECH_NAND2 port map( A => n6233, B => multB_19_port, Z => n8526);
   U8174 : GTECH_NAND2 port map( A => n8528, B => n8529, Z => n5732);
   U8175 : GTECH_NAND2 port map( A => stackB_20_port, B => n8173, Z => n8529);
   U8176 : GTECH_NAND2 port map( A => n6233, B => multB_20_port, Z => n8528);
   U8177 : GTECH_NAND2 port map( A => n8530, B => n8531, Z => n5731);
   U8178 : GTECH_NAND2 port map( A => stackB_21_port, B => n8173, Z => n8531);
   U8179 : GTECH_NAND2 port map( A => n6233, B => multB_21_port, Z => n8530);
   U8180 : GTECH_NAND2 port map( A => n8532, B => n8533, Z => n5730);
   U8181 : GTECH_NAND2 port map( A => stackB_22_port, B => n8173, Z => n8533);
   U8182 : GTECH_NAND2 port map( A => n6233, B => multB_22_port, Z => n8532);
   U8183 : GTECH_NAND2 port map( A => n8534, B => n8535, Z => n5729);
   U8184 : GTECH_NAND2 port map( A => stackB_23_port, B => n8173, Z => n8535);
   U8185 : GTECH_NAND2 port map( A => n6233, B => multB_23_port, Z => n8534);
   U8186 : GTECH_NAND2 port map( A => n8536, B => n8537, Z => n5728);
   U8187 : GTECH_NAND2 port map( A => stackB_24_port, B => n8173, Z => n8537);
   U8188 : GTECH_NAND2 port map( A => n6233, B => multB_24_port, Z => n8536);
   U8189 : GTECH_NAND2 port map( A => n8538, B => n8539, Z => n5727);
   U8190 : GTECH_NAND2 port map( A => stackB_25_port, B => n8173, Z => n8539);
   U8191 : GTECH_NAND2 port map( A => n6233, B => multB_25_port, Z => n8538);
   U8192 : GTECH_NAND2 port map( A => n8540, B => n8541, Z => n5726);
   U8193 : GTECH_NAND2 port map( A => stackB_26_port, B => n8173, Z => n8541);
   U8194 : GTECH_NAND2 port map( A => n6233, B => multB_26_port, Z => n8540);
   U8195 : GTECH_NAND2 port map( A => n8542, B => n8543, Z => n5725);
   U8196 : GTECH_NAND2 port map( A => stackB_27_port, B => n8173, Z => n8543);
   U8197 : GTECH_NAND2 port map( A => n6233, B => multB_27_port, Z => n8542);
   U8198 : GTECH_NAND2 port map( A => n8544, B => n8545, Z => n5724);
   U8199 : GTECH_NAND2 port map( A => stackB_28_port, B => n8173, Z => n8545);
   U8200 : GTECH_NAND2 port map( A => n6233, B => multB_28_port, Z => n8544);
   U8201 : GTECH_NAND2 port map( A => n8546, B => n8547, Z => n5723);
   U8202 : GTECH_NAND2 port map( A => stackB_29_port, B => n8173, Z => n8547);
   U8203 : GTECH_NAND2 port map( A => n6233, B => multB_29_port, Z => n8546);
   U8204 : GTECH_NAND2 port map( A => n8548, B => n8549, Z => n5722);
   U8205 : GTECH_NAND2 port map( A => stackB_30_port, B => n8173, Z => n8549);
   U8206 : GTECH_NAND2 port map( A => n6233, B => multB_30_port, Z => n8548);
   U8207 : GTECH_NAND2 port map( A => n8550, B => n8551, Z => n5721);
   U8208 : GTECH_NAND2 port map( A => stackB_31_port, B => n8173, Z => n8551);
   U8209 : GTECH_NOR2 port map( A => n7140, B => n8552, Z => n8173);
   U8210 : GTECH_NAND2 port map( A => n6233, B => multB_31_port, Z => n8550);
   U8211 : GTECH_NAND2 port map( A => n8553, B => n8554, Z => n5720);
   U8212 : GTECH_NAND2 port map( A => N300, B => n6891, Z => n8554);
   U8213 : GTECH_NAND2 port map( A => n10987, B => n6233, Z => n8553);
   U8214 : GTECH_NAND2 port map( A => n8555, B => n8556, Z => n5719);
   U8215 : GTECH_NAND2 port map( A => N301, B => n6891, Z => n8556);
   U8216 : GTECH_NAND2 port map( A => n10986, B => n6233, Z => n8555);
   U8217 : GTECH_NAND2 port map( A => n8557, B => n8558, Z => n5718);
   U8218 : GTECH_NAND2 port map( A => N302, B => n6891, Z => n8558);
   U8219 : GTECH_NAND2 port map( A => n10985, B => n6233, Z => n8557);
   U8220 : GTECH_NAND2 port map( A => n8559, B => n8560, Z => n5717);
   U8221 : GTECH_NAND2 port map( A => N303, B => n6891, Z => n8560);
   U8222 : GTECH_NAND2 port map( A => n10984, B => n6233, Z => n8559);
   U8223 : GTECH_NAND2 port map( A => n8561, B => n8562, Z => n5716);
   U8224 : GTECH_NAND2 port map( A => N304, B => n6891, Z => n8562);
   U8225 : GTECH_NAND2 port map( A => n10983, B => n6233, Z => n8561);
   U8226 : GTECH_NAND2 port map( A => n8563, B => n8564, Z => n5715);
   U8227 : GTECH_NAND2 port map( A => N305, B => n6891, Z => n8564);
   U8228 : GTECH_NAND2 port map( A => n10982, B => n6233, Z => n8563);
   U8229 : GTECH_NAND2 port map( A => n8565, B => n8566, Z => n5714);
   U8230 : GTECH_NAND2 port map( A => N306, B => n6891, Z => n8566);
   U8231 : GTECH_NAND2 port map( A => n10981, B => n6233, Z => n8565);
   U8232 : GTECH_NAND2 port map( A => n8567, B => n8568, Z => n5713);
   U8233 : GTECH_NAND2 port map( A => N307, B => n6891, Z => n8568);
   U8234 : GTECH_NAND2 port map( A => n10980, B => n6233, Z => n8567);
   U8235 : GTECH_NAND2 port map( A => n8569, B => n8570, Z => n5712);
   U8236 : GTECH_NAND2 port map( A => N308, B => n6891, Z => n8570);
   U8237 : GTECH_NAND2 port map( A => n10979, B => n6233, Z => n8569);
   U8238 : GTECH_NAND2 port map( A => n8571, B => n8572, Z => n5711);
   U8239 : GTECH_NAND2 port map( A => N309, B => n6891, Z => n8572);
   U8240 : GTECH_NAND2 port map( A => n10978, B => n6233, Z => n8571);
   U8241 : GTECH_NAND2 port map( A => n8573, B => n8574, Z => n5710);
   U8242 : GTECH_NAND2 port map( A => N310, B => n6891, Z => n8574);
   U8243 : GTECH_NAND2 port map( A => n10977, B => n6233, Z => n8573);
   U8244 : GTECH_NAND2 port map( A => n8575, B => n8576, Z => n5709);
   U8245 : GTECH_NAND2 port map( A => N311, B => n6891, Z => n8576);
   U8246 : GTECH_NAND2 port map( A => n10976, B => n6233, Z => n8575);
   U8247 : GTECH_NAND2 port map( A => n8577, B => n8578, Z => n5708);
   U8248 : GTECH_NAND2 port map( A => N312, B => n6891, Z => n8578);
   U8249 : GTECH_NAND2 port map( A => n10975, B => n6233, Z => n8577);
   U8250 : GTECH_NAND2 port map( A => n8579, B => n8580, Z => n5707);
   U8251 : GTECH_NAND2 port map( A => N313, B => n6891, Z => n8580);
   U8252 : GTECH_NAND2 port map( A => n10974, B => n6233, Z => n8579);
   U8253 : GTECH_NAND2 port map( A => n8581, B => n8582, Z => n5706);
   U8254 : GTECH_NAND2 port map( A => N314, B => n6891, Z => n8582);
   U8255 : GTECH_NAND2 port map( A => n10973, B => n6233, Z => n8581);
   U8256 : GTECH_NAND2 port map( A => n8583, B => n8584, Z => n5705);
   U8257 : GTECH_NAND2 port map( A => N315, B => n6891, Z => n8584);
   U8258 : GTECH_NAND2 port map( A => n10972, B => n6233, Z => n8583);
   U8259 : GTECH_NAND2 port map( A => n8585, B => n8586, Z => n5704);
   U8260 : GTECH_NAND2 port map( A => N316, B => n6891, Z => n8586);
   U8261 : GTECH_NAND2 port map( A => n10971, B => n6233, Z => n8585);
   U8262 : GTECH_NAND2 port map( A => n8587, B => n8588, Z => n5703);
   U8263 : GTECH_NAND2 port map( A => N317, B => n6891, Z => n8588);
   U8264 : GTECH_NAND2 port map( A => n10970, B => n6233, Z => n8587);
   U8265 : GTECH_NAND2 port map( A => n8589, B => n8590, Z => n5702);
   U8266 : GTECH_NAND2 port map( A => N318, B => n6891, Z => n8590);
   U8267 : GTECH_NAND2 port map( A => n10969, B => n6233, Z => n8589);
   U8268 : GTECH_NAND2 port map( A => n8591, B => n8592, Z => n5701);
   U8269 : GTECH_NAND2 port map( A => N319, B => n6891, Z => n8592);
   U8270 : GTECH_NAND2 port map( A => n10968, B => n6233, Z => n8591);
   U8271 : GTECH_NAND2 port map( A => n8593, B => n8594, Z => n5700);
   U8272 : GTECH_NAND2 port map( A => N320, B => n6891, Z => n8594);
   U8273 : GTECH_NAND2 port map( A => n10967, B => n6233, Z => n8593);
   U8274 : GTECH_NAND2 port map( A => n8595, B => n8596, Z => n5699);
   U8275 : GTECH_NAND2 port map( A => N321, B => n6891, Z => n8596);
   U8276 : GTECH_NAND2 port map( A => n10966, B => n6233, Z => n8595);
   U8277 : GTECH_NAND2 port map( A => n8597, B => n8598, Z => n5698);
   U8278 : GTECH_NAND2 port map( A => N322, B => n6891, Z => n8598);
   U8279 : GTECH_NAND2 port map( A => n10965, B => n6233, Z => n8597);
   U8280 : GTECH_NAND2 port map( A => n8599, B => n8600, Z => n5697);
   U8281 : GTECH_NAND2 port map( A => N323, B => n6891, Z => n8600);
   U8282 : GTECH_NAND2 port map( A => n10964, B => n6233, Z => n8599);
   U8283 : GTECH_NAND2 port map( A => n8601, B => n8602, Z => n5696);
   U8284 : GTECH_NAND2 port map( A => N324, B => n6891, Z => n8602);
   U8285 : GTECH_NAND2 port map( A => n10963, B => n6233, Z => n8601);
   U8286 : GTECH_NAND2 port map( A => n8603, B => n8604, Z => n5695);
   U8287 : GTECH_NAND2 port map( A => N325, B => n6891, Z => n8604);
   U8288 : GTECH_NAND2 port map( A => n10962, B => n6233, Z => n8603);
   U8289 : GTECH_NAND2 port map( A => n8605, B => n8606, Z => n5694);
   U8290 : GTECH_NAND2 port map( A => N326, B => n6891, Z => n8606);
   U8291 : GTECH_NAND2 port map( A => n10961, B => n6233, Z => n8605);
   U8292 : GTECH_NAND2 port map( A => n8607, B => n8608, Z => n5693);
   U8293 : GTECH_NAND2 port map( A => N327, B => n6891, Z => n8608);
   U8294 : GTECH_NAND2 port map( A => n10960, B => n6233, Z => n8607);
   U8295 : GTECH_NAND2 port map( A => n8609, B => n8610, Z => n5692);
   U8296 : GTECH_NAND2 port map( A => N328, B => n6891, Z => n8610);
   U8297 : GTECH_NAND2 port map( A => n10959, B => n6233, Z => n8609);
   U8298 : GTECH_NAND2 port map( A => n8611, B => n8612, Z => n5691);
   U8299 : GTECH_NAND2 port map( A => N329, B => n6891, Z => n8612);
   U8300 : GTECH_NAND2 port map( A => n10958, B => n6233, Z => n8611);
   U8301 : GTECH_NAND2 port map( A => n8613, B => n8614, Z => n5690);
   U8302 : GTECH_NAND2 port map( A => N330, B => n6891, Z => n8614);
   U8303 : GTECH_NAND2 port map( A => n10957, B => n6233, Z => n8613);
   U8304 : GTECH_NAND2 port map( A => n8615, B => n8616, Z => n5689);
   U8305 : GTECH_NAND2 port map( A => N331, B => n6891, Z => n8616);
   U8306 : GTECH_NAND2 port map( A => n10956, B => n6233, Z => n8615);
   U8307 : GTECH_NOT port map( A => n7439, Z => n6233);
   U8308 : GTECH_NOT port map( A => n8617, Z => n5624);
   U8309 : GTECH_NOR2 port map( A => n8618, B => n8619, Z => n8617);
   U8310 : GTECH_NAND2 port map( A => n8620, B => n8621, Z => n8619);
   U8311 : GTECH_NAND2 port map( A => n8622, B => stackA_2_port, Z => n8621);
   U8312 : GTECH_NOT port map( A => n8623, Z => n8622);
   U8313 : GTECH_NOR2 port map( A => n8624, B => n8625, Z => n8620);
   U8314 : GTECH_NOT port map( A => n8626, Z => n8625);
   U8315 : GTECH_NAND2 port map( A => sp_2_port, B => n8627, Z => n8626);
   U8316 : GTECH_NOR2 port map( A => sp_2_port, B => n8628, Z => n8624);
   U8317 : GTECH_NAND2 port map( A => n8629, B => n8630, Z => n8618);
   U8318 : GTECH_NAND2 port map( A => decSp_2_port, B => n8631, Z => n8630);
   U8319 : GTECH_NAND2 port map( A => incIncSp_2_port, B => n8632, Z => n8629);
   U8320 : GTECH_NAND2 port map( A => n8633, B => n8634, Z => n5623);
   U8321 : GTECH_NOR2 port map( A => n8635, B => n8636, Z => n8634);
   U8322 : GTECH_NAND2 port map( A => n8637, B => n8638, Z => n8636);
   U8323 : GTECH_NAND2 port map( A => decSp_3_port, B => n8631, Z => n8638);
   U8324 : GTECH_NAND2 port map( A => incIncSp_3_port, B => n8632, Z => n8637);
   U8325 : GTECH_NOR2 port map( A => n8628, B => n8639, Z => n8635);
   U8326 : GTECH_NOT port map( A => incSp_3_port, Z => n8639);
   U8327 : GTECH_NOR2 port map( A => n8640, B => n8641, Z => n8633);
   U8328 : GTECH_NOR2 port map( A => n8642, B => n8643, Z => n8641);
   U8329 : GTECH_NOT port map( A => sp_3_port, Z => n8642);
   U8330 : GTECH_NOR2 port map( A => n6698, B => n8623, Z => n8640);
   U8331 : GTECH_NAND2 port map( A => n8644, B => n8645, Z => n5622);
   U8332 : GTECH_NOR2 port map( A => n8646, B => n8647, Z => n8645);
   U8333 : GTECH_NAND2 port map( A => n8648, B => n8649, Z => n8647);
   U8334 : GTECH_NAND2 port map( A => decSp_4_port, B => n8650, Z => n8649);
   U8335 : GTECH_NAND2 port map( A => incIncSp_4_port, B => n8651, Z => n8648);
   U8336 : GTECH_NOR2 port map( A => n8652, B => n8653, Z => n8646);
   U8337 : GTECH_NOT port map( A => incSp_4_port, Z => n8653);
   U8338 : GTECH_NOR2 port map( A => n7182, B => n8654, Z => n8644);
   U8339 : GTECH_NAND2 port map( A => n8655, B => n8656, Z => n8654);
   U8340 : GTECH_NAND2 port map( A => n8657, B => stackA_4_port, Z => n8656);
   U8341 : GTECH_NAND2 port map( A => n8627, B => sp_4_port, Z => n8655);
   U8342 : GTECH_NAND2 port map( A => n8658, B => n8659, Z => n5621);
   U8343 : GTECH_NOR2 port map( A => n8660, B => n8661, Z => n8659);
   U8344 : GTECH_NAND2 port map( A => n8662, B => n8663, Z => n8661);
   U8345 : GTECH_NAND2 port map( A => decSp_5_port, B => n8650, Z => n8663);
   U8346 : GTECH_NAND2 port map( A => incIncSp_5_port, B => n8651, Z => n8662);
   U8347 : GTECH_NOR2 port map( A => n8652, B => n8664, Z => n8660);
   U8348 : GTECH_NOT port map( A => incSp_5_port, Z => n8664);
   U8349 : GTECH_NOR2 port map( A => n7182, B => n8665, Z => n8658);
   U8350 : GTECH_NAND2 port map( A => n8666, B => n8667, Z => n8665);
   U8351 : GTECH_NAND2 port map( A => n8657, B => stackA_5_port, Z => n8667);
   U8352 : GTECH_NAND2 port map( A => n8627, B => sp_5_port, Z => n8666);
   U8353 : GTECH_NAND2 port map( A => n8668, B => n8669, Z => n5620);
   U8354 : GTECH_NOR2 port map( A => n8670, B => n8671, Z => n8669);
   U8355 : GTECH_NAND2 port map( A => n8672, B => n8673, Z => n8671);
   U8356 : GTECH_NAND2 port map( A => decSp_6_port, B => n8650, Z => n8673);
   U8357 : GTECH_NAND2 port map( A => incIncSp_6_port, B => n8651, Z => n8672);
   U8358 : GTECH_NOR2 port map( A => n8652, B => n8674, Z => n8670);
   U8359 : GTECH_NOT port map( A => incSp_6_port, Z => n8674);
   U8360 : GTECH_NOR2 port map( A => n7182, B => n8675, Z => n8668);
   U8361 : GTECH_NAND2 port map( A => n8676, B => n8677, Z => n8675);
   U8362 : GTECH_NAND2 port map( A => n8657, B => stackA_6_port, Z => n8677);
   U8363 : GTECH_NAND2 port map( A => n8627, B => sp_6_port, Z => n8676);
   U8364 : GTECH_NAND2 port map( A => n8678, B => n8679, Z => n5619);
   U8365 : GTECH_NOR2 port map( A => n8680, B => n8681, Z => n8679);
   U8366 : GTECH_NAND2 port map( A => n8682, B => n8683, Z => n8681);
   U8367 : GTECH_NAND2 port map( A => decSp_7_port, B => n8650, Z => n8683);
   U8368 : GTECH_NAND2 port map( A => incIncSp_7_port, B => n8651, Z => n8682);
   U8369 : GTECH_NOR2 port map( A => n8652, B => n8684, Z => n8680);
   U8370 : GTECH_NOT port map( A => incSp_7_port, Z => n8684);
   U8371 : GTECH_NOR2 port map( A => n7182, B => n8685, Z => n8678);
   U8372 : GTECH_NAND2 port map( A => n8686, B => n8687, Z => n8685);
   U8373 : GTECH_NAND2 port map( A => n8657, B => stackA_7_port, Z => n8687);
   U8374 : GTECH_NAND2 port map( A => n8627, B => sp_7_port, Z => n8686);
   U8375 : GTECH_NAND2 port map( A => n8688, B => n8689, Z => n5618);
   U8376 : GTECH_NOR2 port map( A => n8690, B => n8691, Z => n8689);
   U8377 : GTECH_NAND2 port map( A => n8692, B => n8693, Z => n8691);
   U8378 : GTECH_NAND2 port map( A => decSp_8_port, B => n8650, Z => n8693);
   U8379 : GTECH_NAND2 port map( A => incIncSp_8_port, B => n8651, Z => n8692);
   U8380 : GTECH_NOR2 port map( A => n8652, B => n8694, Z => n8690);
   U8381 : GTECH_NOT port map( A => incSp_8_port, Z => n8694);
   U8382 : GTECH_NOR2 port map( A => n7182, B => n8695, Z => n8688);
   U8383 : GTECH_NAND2 port map( A => n8696, B => n8697, Z => n8695);
   U8384 : GTECH_NAND2 port map( A => n8657, B => stackA_8_port, Z => n8697);
   U8385 : GTECH_NAND2 port map( A => sp_8_port, B => n8627, Z => n8696);
   U8386 : GTECH_NAND2 port map( A => n8698, B => n8699, Z => n5617);
   U8387 : GTECH_NOR2 port map( A => n8700, B => n8701, Z => n8699);
   U8388 : GTECH_NAND2 port map( A => n8702, B => n8703, Z => n8701);
   U8389 : GTECH_NAND2 port map( A => decSp_9_port, B => n8650, Z => n8703);
   U8390 : GTECH_NAND2 port map( A => incIncSp_9_port, B => n8651, Z => n8702);
   U8391 : GTECH_NOR2 port map( A => n8652, B => n8704, Z => n8700);
   U8392 : GTECH_NOT port map( A => incSp_9_port, Z => n8704);
   U8393 : GTECH_NOR2 port map( A => n7182, B => n8705, Z => n8698);
   U8394 : GTECH_NAND2 port map( A => n8706, B => n8707, Z => n8705);
   U8395 : GTECH_NAND2 port map( A => n8657, B => stackA_9_port, Z => n8707);
   U8396 : GTECH_NAND2 port map( A => sp_9_port, B => n8627, Z => n8706);
   U8397 : GTECH_NAND2 port map( A => n8708, B => n8709, Z => n5616);
   U8398 : GTECH_NOR2 port map( A => n8710, B => n8711, Z => n8709);
   U8399 : GTECH_NAND2 port map( A => n8712, B => n8713, Z => n8711);
   U8400 : GTECH_NAND2 port map( A => decSp_10_port, B => n8650, Z => n8713);
   U8401 : GTECH_NAND2 port map( A => incIncSp_10_port, B => n8651, Z => n8712)
                           ;
   U8402 : GTECH_NOR2 port map( A => n8652, B => n8714, Z => n8710);
   U8403 : GTECH_NOT port map( A => incSp_10_port, Z => n8714);
   U8404 : GTECH_NOR2 port map( A => n7182, B => n8715, Z => n8708);
   U8405 : GTECH_NAND2 port map( A => n8716, B => n8717, Z => n8715);
   U8406 : GTECH_NAND2 port map( A => n8657, B => stackA_10_port, Z => n8717);
   U8407 : GTECH_NAND2 port map( A => sp_10_port, B => n8627, Z => n8716);
   U8408 : GTECH_NAND2 port map( A => n8718, B => n8719, Z => n5615);
   U8409 : GTECH_NOR2 port map( A => n8720, B => n8721, Z => n8719);
   U8410 : GTECH_NAND2 port map( A => n8722, B => n8723, Z => n8721);
   U8411 : GTECH_NAND2 port map( A => decSp_11_port, B => n8650, Z => n8723);
   U8412 : GTECH_NAND2 port map( A => incIncSp_11_port, B => n8651, Z => n8722)
                           ;
   U8413 : GTECH_NOR2 port map( A => n8652, B => n8724, Z => n8720);
   U8414 : GTECH_NOT port map( A => incSp_11_port, Z => n8724);
   U8415 : GTECH_NOR2 port map( A => n7182, B => n8725, Z => n8718);
   U8416 : GTECH_NAND2 port map( A => n8726, B => n8727, Z => n8725);
   U8417 : GTECH_NAND2 port map( A => n8657, B => stackA_11_port, Z => n8727);
   U8418 : GTECH_NAND2 port map( A => sp_11_port, B => n8627, Z => n8726);
   U8419 : GTECH_NAND2 port map( A => n8728, B => n8729, Z => n5614);
   U8420 : GTECH_NOR2 port map( A => n8730, B => n8731, Z => n8729);
   U8421 : GTECH_NAND2 port map( A => n8732, B => n8733, Z => n8731);
   U8422 : GTECH_NAND2 port map( A => decSp_12_port, B => n8650, Z => n8733);
   U8423 : GTECH_NAND2 port map( A => incIncSp_12_port, B => n8651, Z => n8732)
                           ;
   U8424 : GTECH_NOR2 port map( A => n8652, B => n8734, Z => n8730);
   U8425 : GTECH_NOT port map( A => incSp_12_port, Z => n8734);
   U8426 : GTECH_NOR2 port map( A => n7182, B => n8735, Z => n8728);
   U8427 : GTECH_NAND2 port map( A => n8736, B => n8737, Z => n8735);
   U8428 : GTECH_NAND2 port map( A => n8657, B => stackA_12_port, Z => n8737);
   U8429 : GTECH_NAND2 port map( A => sp_12_port, B => n8627, Z => n8736);
   U8430 : GTECH_NAND2 port map( A => n8738, B => n8739, Z => n5613);
   U8431 : GTECH_NOR2 port map( A => n8740, B => n8741, Z => n8739);
   U8432 : GTECH_NAND2 port map( A => n8742, B => n8743, Z => n8741);
   U8433 : GTECH_NAND2 port map( A => decSp_13_port, B => n8650, Z => n8743);
   U8434 : GTECH_NAND2 port map( A => incIncSp_13_port, B => n8651, Z => n8742)
                           ;
   U8435 : GTECH_NOR2 port map( A => n8652, B => n8744, Z => n8740);
   U8436 : GTECH_NOT port map( A => incSp_13_port, Z => n8744);
   U8437 : GTECH_NOR2 port map( A => n7182, B => n8745, Z => n8738);
   U8438 : GTECH_NAND2 port map( A => n8746, B => n8747, Z => n8745);
   U8439 : GTECH_NAND2 port map( A => n8657, B => stackA_13_port, Z => n8747);
   U8440 : GTECH_NAND2 port map( A => sp_13_port, B => n8627, Z => n8746);
   U8441 : GTECH_NAND2 port map( A => n8748, B => n8749, Z => n5612);
   U8442 : GTECH_NOR2 port map( A => n8750, B => n8751, Z => n8749);
   U8443 : GTECH_NAND2 port map( A => n8752, B => n8753, Z => n8751);
   U8444 : GTECH_NAND2 port map( A => decSp_14_port, B => n8650, Z => n8753);
   U8445 : GTECH_NAND2 port map( A => incIncSp_14_port, B => n8651, Z => n8752)
                           ;
   U8446 : GTECH_NOR2 port map( A => n8652, B => n8754, Z => n8750);
   U8447 : GTECH_NOT port map( A => incSp_14_port, Z => n8754);
   U8448 : GTECH_NOR2 port map( A => n7182, B => n8755, Z => n8748);
   U8449 : GTECH_NAND2 port map( A => n8756, B => n8757, Z => n8755);
   U8450 : GTECH_NAND2 port map( A => n8657, B => stackA_14_port, Z => n8757);
   U8451 : GTECH_NAND2 port map( A => sp_14_port, B => n8627, Z => n8756);
   U8452 : GTECH_NAND2 port map( A => n8758, B => n8759, Z => n5611);
   U8453 : GTECH_NOR2 port map( A => n8760, B => n8761, Z => n8759);
   U8454 : GTECH_NAND2 port map( A => n8762, B => n8763, Z => n8761);
   U8455 : GTECH_NAND2 port map( A => decSp_15_port, B => n8650, Z => n8763);
   U8456 : GTECH_NOT port map( A => n8764, Z => n8650);
   U8457 : GTECH_NAND2 port map( A => incIncSp_15_port, B => n8651, Z => n8762)
                           ;
   U8458 : GTECH_NOT port map( A => n8765, Z => n8651);
   U8459 : GTECH_NOR2 port map( A => n8652, B => n8766, Z => n8760);
   U8460 : GTECH_NOT port map( A => incSp_15_port, Z => n8766);
   U8461 : GTECH_NOR2 port map( A => n7182, B => n8767, Z => n8758);
   U8462 : GTECH_NAND2 port map( A => n8768, B => n8769, Z => n8767);
   U8463 : GTECH_NAND2 port map( A => n8657, B => stackA_15_port, Z => n8769);
   U8464 : GTECH_NAND2 port map( A => sp_15_port, B => n8627, Z => n8768);
   U8465 : GTECH_NAND2 port map( A => n8770, B => n8771, Z => n5610);
   U8466 : GTECH_NOR2 port map( A => n8772, B => n8773, Z => n8771);
   U8467 : GTECH_NAND2 port map( A => n8774, B => n8775, Z => n8773);
   U8468 : GTECH_NAND2 port map( A => decSp_16_port, B => n8631, Z => n8775);
   U8469 : GTECH_NAND2 port map( A => incIncSp_16_port, B => n8632, Z => n8774)
                           ;
   U8470 : GTECH_NOR2 port map( A => n8628, B => n8776, Z => n8772);
   U8471 : GTECH_NOT port map( A => incSp_16_port, Z => n8776);
   U8472 : GTECH_NOR2 port map( A => n8777, B => n8778, Z => n8770);
   U8473 : GTECH_NOR2 port map( A => n8779, B => n8643, Z => n8778);
   U8474 : GTECH_NOT port map( A => sp_16_port, Z => n8779);
   U8475 : GTECH_NOR2 port map( A => n6863, B => n8623, Z => n8777);
   U8476 : GTECH_NAND2 port map( A => n8780, B => n8781, Z => n5609);
   U8477 : GTECH_NOR2 port map( A => n8782, B => n8783, Z => n8781);
   U8478 : GTECH_NAND2 port map( A => n8784, B => n8785, Z => n8783);
   U8479 : GTECH_NAND2 port map( A => decSp_17_port, B => n8631, Z => n8785);
   U8480 : GTECH_NAND2 port map( A => incIncSp_17_port, B => n8632, Z => n8784)
                           ;
   U8481 : GTECH_NOR2 port map( A => n8628, B => n8786, Z => n8782);
   U8482 : GTECH_NOT port map( A => incSp_17_port, Z => n8786);
   U8483 : GTECH_NOR2 port map( A => n8787, B => n8788, Z => n8780);
   U8484 : GTECH_NOR2 port map( A => n8643, B => n8789, Z => n8788);
   U8485 : GTECH_NOR2 port map( A => n8327, B => n8623, Z => n8787);
   U8486 : GTECH_NAND2 port map( A => n8790, B => n8791, Z => n5608);
   U8487 : GTECH_NOR2 port map( A => n8792, B => n8793, Z => n8791);
   U8488 : GTECH_NAND2 port map( A => n8794, B => n8795, Z => n8793);
   U8489 : GTECH_NAND2 port map( A => decSp_18_port, B => n8631, Z => n8795);
   U8490 : GTECH_NAND2 port map( A => incIncSp_18_port, B => n8632, Z => n8794)
                           ;
   U8491 : GTECH_NOR2 port map( A => n8628, B => n8796, Z => n8792);
   U8492 : GTECH_NOT port map( A => incSp_18_port, Z => n8796);
   U8493 : GTECH_NOR2 port map( A => n8797, B => n8798, Z => n8790);
   U8494 : GTECH_NOR2 port map( A => n8643, B => n8799, Z => n8798);
   U8495 : GTECH_NOR2 port map( A => n8332, B => n8623, Z => n8797);
   U8496 : GTECH_NAND2 port map( A => n8800, B => n8801, Z => n5607);
   U8497 : GTECH_NOR2 port map( A => n8802, B => n8803, Z => n8801);
   U8498 : GTECH_NAND2 port map( A => n8804, B => n8805, Z => n8803);
   U8499 : GTECH_NAND2 port map( A => decSp_19_port, B => n8631, Z => n8805);
   U8500 : GTECH_NAND2 port map( A => incIncSp_19_port, B => n8632, Z => n8804)
                           ;
   U8501 : GTECH_NOR2 port map( A => n8628, B => n8806, Z => n8802);
   U8502 : GTECH_NOT port map( A => incSp_19_port, Z => n8806);
   U8503 : GTECH_NOR2 port map( A => n8807, B => n8808, Z => n8800);
   U8504 : GTECH_NOR2 port map( A => n8643, B => n8809, Z => n8808);
   U8505 : GTECH_NOR2 port map( A => n8337, B => n8623, Z => n8807);
   U8506 : GTECH_NAND2 port map( A => n8810, B => n8811, Z => n5606);
   U8507 : GTECH_NOR2 port map( A => n8812, B => n8813, Z => n8811);
   U8508 : GTECH_NAND2 port map( A => n8814, B => n8815, Z => n8813);
   U8509 : GTECH_NAND2 port map( A => decSp_20_port, B => n8631, Z => n8815);
   U8510 : GTECH_NAND2 port map( A => incIncSp_20_port, B => n8632, Z => n8814)
                           ;
   U8511 : GTECH_NOR2 port map( A => n8628, B => n8816, Z => n8812);
   U8512 : GTECH_NOT port map( A => incSp_20_port, Z => n8816);
   U8513 : GTECH_NOR2 port map( A => n8817, B => n8818, Z => n8810);
   U8514 : GTECH_NOR2 port map( A => n8643, B => n8819, Z => n8818);
   U8515 : GTECH_NOR2 port map( A => n8342, B => n8623, Z => n8817);
   U8516 : GTECH_NAND2 port map( A => n8820, B => n8821, Z => n5605);
   U8517 : GTECH_NOR2 port map( A => n8822, B => n8823, Z => n8821);
   U8518 : GTECH_NAND2 port map( A => n8824, B => n8825, Z => n8823);
   U8519 : GTECH_NAND2 port map( A => decSp_21_port, B => n8631, Z => n8825);
   U8520 : GTECH_NAND2 port map( A => incIncSp_21_port, B => n8632, Z => n8824)
                           ;
   U8521 : GTECH_NOR2 port map( A => n8628, B => n8826, Z => n8822);
   U8522 : GTECH_NOT port map( A => incSp_21_port, Z => n8826);
   U8523 : GTECH_NOR2 port map( A => n8827, B => n8828, Z => n8820);
   U8524 : GTECH_NOR2 port map( A => n8643, B => n8829, Z => n8828);
   U8525 : GTECH_NOR2 port map( A => n8348, B => n8623, Z => n8827);
   U8526 : GTECH_NAND2 port map( A => n8830, B => n8831, Z => n5604);
   U8527 : GTECH_NOR2 port map( A => n8832, B => n8833, Z => n8831);
   U8528 : GTECH_NAND2 port map( A => n8834, B => n8835, Z => n8833);
   U8529 : GTECH_NAND2 port map( A => decSp_22_port, B => n8631, Z => n8835);
   U8530 : GTECH_NAND2 port map( A => incIncSp_22_port, B => n8632, Z => n8834)
                           ;
   U8531 : GTECH_NOR2 port map( A => n8628, B => n8836, Z => n8832);
   U8532 : GTECH_NOT port map( A => incSp_22_port, Z => n8836);
   U8533 : GTECH_NOR2 port map( A => n8837, B => n8838, Z => n8830);
   U8534 : GTECH_NOR2 port map( A => n8643, B => n8839, Z => n8838);
   U8535 : GTECH_NOR2 port map( A => n8354, B => n8623, Z => n8837);
   U8536 : GTECH_NAND2 port map( A => n8840, B => n8841, Z => n5603);
   U8537 : GTECH_NOR2 port map( A => n8842, B => n8843, Z => n8841);
   U8538 : GTECH_NAND2 port map( A => n8844, B => n8845, Z => n8843);
   U8539 : GTECH_NAND2 port map( A => decSp_23_port, B => n8631, Z => n8845);
   U8540 : GTECH_NAND2 port map( A => incIncSp_23_port, B => n8632, Z => n8844)
                           ;
   U8541 : GTECH_NOR2 port map( A => n8628, B => n8846, Z => n8842);
   U8542 : GTECH_NOT port map( A => incSp_23_port, Z => n8846);
   U8543 : GTECH_NOR2 port map( A => n8847, B => n8848, Z => n8840);
   U8544 : GTECH_NOR2 port map( A => n8643, B => n8849, Z => n8848);
   U8545 : GTECH_NOR2 port map( A => n8360, B => n8623, Z => n8847);
   U8546 : GTECH_NAND2 port map( A => n8850, B => n8851, Z => n5602);
   U8547 : GTECH_NOR2 port map( A => n8852, B => n8853, Z => n8851);
   U8548 : GTECH_NAND2 port map( A => n8854, B => n8855, Z => n8853);
   U8549 : GTECH_NAND2 port map( A => decSp_24_port, B => n8631, Z => n8855);
   U8550 : GTECH_NAND2 port map( A => incIncSp_24_port, B => n8632, Z => n8854)
                           ;
   U8551 : GTECH_NOR2 port map( A => n8628, B => n8856, Z => n8852);
   U8552 : GTECH_NOT port map( A => incSp_24_port, Z => n8856);
   U8553 : GTECH_NOR2 port map( A => n8857, B => n8858, Z => n8850);
   U8554 : GTECH_NOR2 port map( A => n8643, B => n8859, Z => n8858);
   U8555 : GTECH_NOR2 port map( A => n8165, B => n8623, Z => n8857);
   U8556 : GTECH_NAND2 port map( A => n8860, B => n8861, Z => n5601);
   U8557 : GTECH_NOR2 port map( A => n8862, B => n8863, Z => n8861);
   U8558 : GTECH_NAND2 port map( A => n8864, B => n8865, Z => n8863);
   U8559 : GTECH_NAND2 port map( A => decSp_25_port, B => n8631, Z => n8865);
   U8560 : GTECH_NAND2 port map( A => incIncSp_25_port, B => n8632, Z => n8864)
                           ;
   U8561 : GTECH_NOR2 port map( A => n8628, B => n8866, Z => n8862);
   U8562 : GTECH_NOT port map( A => incSp_25_port, Z => n8866);
   U8563 : GTECH_NOR2 port map( A => n8867, B => n8868, Z => n8860);
   U8564 : GTECH_NOR2 port map( A => n8643, B => n8869, Z => n8868);
   U8565 : GTECH_NOR2 port map( A => n8370, B => n8623, Z => n8867);
   U8566 : GTECH_NAND2 port map( A => n8870, B => n8871, Z => n5600);
   U8567 : GTECH_NOR2 port map( A => n8872, B => n8873, Z => n8871);
   U8568 : GTECH_NAND2 port map( A => n8874, B => n8875, Z => n8873);
   U8569 : GTECH_NAND2 port map( A => decSp_26_port, B => n8631, Z => n8875);
   U8570 : GTECH_NAND2 port map( A => incIncSp_26_port, B => n8632, Z => n8874)
                           ;
   U8571 : GTECH_NOR2 port map( A => n8628, B => n8876, Z => n8872);
   U8572 : GTECH_NOT port map( A => incSp_26_port, Z => n8876);
   U8573 : GTECH_NOR2 port map( A => n8877, B => n8878, Z => n8870);
   U8574 : GTECH_NOR2 port map( A => n8643, B => n8879, Z => n8878);
   U8575 : GTECH_NOR2 port map( A => n6838, B => n8623, Z => n8877);
   U8576 : GTECH_NAND2 port map( A => n8880, B => n8881, Z => n5599);
   U8577 : GTECH_NOR2 port map( A => n8882, B => n8883, Z => n8881);
   U8578 : GTECH_NAND2 port map( A => n8884, B => n8885, Z => n8883);
   U8579 : GTECH_NAND2 port map( A => decSp_27_port, B => n8631, Z => n8885);
   U8580 : GTECH_NAND2 port map( A => incIncSp_27_port, B => n8632, Z => n8884)
                           ;
   U8581 : GTECH_NOR2 port map( A => n8628, B => n8886, Z => n8882);
   U8582 : GTECH_NOT port map( A => incSp_27_port, Z => n8886);
   U8583 : GTECH_NOR2 port map( A => n8887, B => n8888, Z => n8880);
   U8584 : GTECH_NOR2 port map( A => n8643, B => n8889, Z => n8888);
   U8585 : GTECH_NOR2 port map( A => n6784, B => n8623, Z => n8887);
   U8586 : GTECH_NAND2 port map( A => n8890, B => n8891, Z => n5598);
   U8587 : GTECH_NOR2 port map( A => n8892, B => n8893, Z => n8891);
   U8588 : GTECH_NAND2 port map( A => n8894, B => n8895, Z => n8893);
   U8589 : GTECH_NAND2 port map( A => decSp_28_port, B => n8631, Z => n8895);
   U8590 : GTECH_NAND2 port map( A => incIncSp_28_port, B => n8632, Z => n8894)
                           ;
   U8591 : GTECH_NOR2 port map( A => n8628, B => n8896, Z => n8892);
   U8592 : GTECH_NOT port map( A => incSp_28_port, Z => n8896);
   U8593 : GTECH_NOR2 port map( A => n8897, B => n8898, Z => n8890);
   U8594 : GTECH_NOR2 port map( A => n8643, B => n8899, Z => n8898);
   U8595 : GTECH_NOR2 port map( A => n6688, B => n8623, Z => n8897);
   U8596 : GTECH_NAND2 port map( A => n8900, B => n8901, Z => n5597);
   U8597 : GTECH_NOR2 port map( A => n8902, B => n8903, Z => n8901);
   U8598 : GTECH_NAND2 port map( A => n8904, B => n8905, Z => n8903);
   U8599 : GTECH_NAND2 port map( A => decSp_29_port, B => n8631, Z => n8905);
   U8600 : GTECH_NAND2 port map( A => incIncSp_29_port, B => n8632, Z => n8904)
                           ;
   U8601 : GTECH_NOR2 port map( A => n8628, B => n8906, Z => n8902);
   U8602 : GTECH_NOT port map( A => incSp_29_port, Z => n8906);
   U8603 : GTECH_NOR2 port map( A => n8907, B => n8908, Z => n8900);
   U8604 : GTECH_NOR2 port map( A => n8643, B => n8909, Z => n8908);
   U8605 : GTECH_NOR2 port map( A => n6620, B => n8623, Z => n8907);
   U8606 : GTECH_NAND2 port map( A => n8910, B => n8911, Z => n5596);
   U8607 : GTECH_NOR2 port map( A => n8912, B => n8913, Z => n8911);
   U8608 : GTECH_NAND2 port map( A => n8914, B => n8915, Z => n8913);
   U8609 : GTECH_NAND2 port map( A => decSp_30_port, B => n8631, Z => n8915);
   U8610 : GTECH_NAND2 port map( A => incIncSp_30_port, B => n8632, Z => n8914)
                           ;
   U8611 : GTECH_NOR2 port map( A => n8628, B => n8916, Z => n8912);
   U8612 : GTECH_NOT port map( A => incSp_30_port, Z => n8916);
   U8613 : GTECH_NOR2 port map( A => n8917, B => n8918, Z => n8910);
   U8614 : GTECH_NOR2 port map( A => n8643, B => n8919, Z => n8918);
   U8615 : GTECH_NOR2 port map( A => n8393, B => n8623, Z => n8917);
   U8616 : GTECH_NAND2 port map( A => n8920, B => n8921, Z => n5595);
   U8617 : GTECH_NOR2 port map( A => n8922, B => n8923, Z => n8921);
   U8618 : GTECH_NAND2 port map( A => n8924, B => n8925, Z => n8923);
   U8619 : GTECH_NAND2 port map( A => decSp_31_port, B => n8631, Z => n8925);
   U8620 : GTECH_NOR2 port map( A => n8764, B => n7182, Z => n8631);
   U8621 : GTECH_NAND2 port map( A => n8643, B => n8926, Z => n8764);
   U8622 : GTECH_NAND2 port map( A => n8927, B => n8928, Z => n8926);
   U8623 : GTECH_NAND2 port map( A => n6230, B => n8929, Z => n8927);
   U8624 : GTECH_NAND2 port map( A => n8930, B => n8931, Z => n8929);
   U8625 : GTECH_NOR2 port map( A => n8932, B => n8933, Z => n8931);
   U8626 : GTECH_NOR2 port map( A => n8934, B => n7882, Z => n8930);
   U8627 : GTECH_NAND2 port map( A => incIncSp_31_port, B => n8632, Z => n8924)
                           ;
   U8628 : GTECH_NOR2 port map( A => n8765, B => n7182, Z => n8632);
   U8629 : GTECH_NAND2 port map( A => n8643, B => n8935, Z => n8765);
   U8630 : GTECH_NAND2 port map( A => n8936, B => n7124, Z => n8935);
   U8631 : GTECH_NAND2 port map( A => n6230, B => n7149, Z => n8936);
   U8632 : GTECH_NOR2 port map( A => n8628, B => n8937, Z => n8922);
   U8633 : GTECH_NOT port map( A => incSp_31_port, Z => n8937);
   U8634 : GTECH_NOT port map( A => n8938, Z => n8628);
   U8635 : GTECH_NOR2 port map( A => n8652, B => n7182, Z => n8938);
   U8636 : GTECH_NAND2 port map( A => n8939, B => n8643, Z => n8652);
   U8637 : GTECH_NAND2 port map( A => n8940, B => n8941, Z => n8939);
   U8638 : GTECH_NOR2 port map( A => n6883, B => n8942, Z => n8941);
   U8639 : GTECH_NAND2 port map( A => n6878, B => n8943, Z => n8942);
   U8640 : GTECH_NOT port map( A => n6639, Z => n8943);
   U8641 : GTECH_NOT port map( A => n7126, Z => n6883);
   U8642 : GTECH_NOR2 port map( A => n6870, B => n8944, Z => n8940);
   U8643 : GTECH_NOR2 port map( A => n8945, B => n7162, Z => n8944);
   U8644 : GTECH_NOR2 port map( A => n8946, B => n8947, Z => n8945);
   U8645 : GTECH_NAND2 port map( A => n7151, B => n8948, Z => n8947);
   U8646 : GTECH_NAND2 port map( A => n7855, B => n8949, Z => n8946);
   U8647 : GTECH_NOR2 port map( A => n8950, B => n8951, Z => n8920);
   U8648 : GTECH_NOR2 port map( A => n8643, B => n8952, Z => n8951);
   U8649 : GTECH_NOR2 port map( A => n8015, B => n8623, Z => n8950);
   U8650 : GTECH_NAND2 port map( A => n8657, B => reset_b, Z => n8623);
   U8651 : GTECH_NOR2 port map( A => n8953, B => n8954, Z => n8657);
   U8652 : GTECH_NAND2 port map( A => n8643, B => n6230, Z => n8953);
   U8653 : GTECH_NOT port map( A => n8627, Z => n8643);
   U8654 : GTECH_NOR2 port map( A => n7449, B => n8955, Z => n8627);
   U8655 : GTECH_NOR2 port map( A => n7451, B => n8956, Z => n8955);
   U8656 : GTECH_NOR2 port map( A => n8957, B => n8958, Z => n8956);
   U8657 : GTECH_NOT port map( A => n8959, Z => n8958);
   U8658 : GTECH_NOR2 port map( A => n8960, B => n8961, Z => n8959);
   U8659 : GTECH_NOR2 port map( A => in_mem_busy, B => n7124, Z => n8961);
   U8660 : GTECH_NOR2 port map( A => n8962, B => n7162, Z => n8960);
   U8661 : GTECH_NOR2 port map( A => n8963, B => n8964, Z => n8962);
   U8662 : GTECH_NAND2 port map( A => n8965, B => n7883, Z => n8964);
   U8663 : GTECH_NOR2 port map( A => in_mem_busy, B => n8949, Z => n8963);
   U8664 : GTECH_NAND2 port map( A => n8966, B => n7461, Z => n8957);
   U8665 : GTECH_NOR2 port map( A => n8967, B => n8968, Z => n7461);
   U8666 : GTECH_NOR2 port map( A => n8969, B => n6168, Z => n8968);
   U8667 : GTECH_NAND2 port map( A => n8970, B => n6230, Z => n8969);
   U8668 : GTECH_NAND2 port map( A => n8971, B => n8972, Z => n8970);
   U8669 : GTECH_NOR2 port map( A => n7190, B => n8973, Z => n8967);
   U8670 : GTECH_NOR2 port map( A => state_3_port, B => n8974, Z => n8973);
   U8671 : GTECH_NOR2 port map( A => n8975, B => n8976, Z => n8974);
   U8672 : GTECH_NAND2 port map( A => n8977, B => n8978, Z => n5594);
   U8673 : GTECH_NOR2 port map( A => n8979, B => n8980, Z => n8978);
   U8674 : GTECH_NAND2 port map( A => n8981, B => n8982, Z => n8980);
   U8675 : GTECH_NAND2 port map( A => incSp_2_port, B => n8983, Z => n8982);
   U8676 : GTECH_NAND2 port map( A => n8984, B => stackA_2_port, Z => n8981);
   U8677 : GTECH_NAND2 port map( A => n8985, B => n8986, Z => n8979);
   U8678 : GTECH_NAND2 port map( A => n8987, B => incIncSp_2_port, Z => n8986);
   U8679 : GTECH_NAND2 port map( A => N569, B => n8988, Z => n8985);
   U8680 : GTECH_NOR2 port map( A => n8989, B => n8990, Z => n8977);
   U8681 : GTECH_NAND2 port map( A => n8991, B => n8992, Z => n8990);
   U8682 : GTECH_NAND2 port map( A => n8993, B => pc_2_port, Z => n8992);
   U8683 : GTECH_NAND2 port map( A => out_mem_addr_2_port, B => n8994, Z => 
                           n8991);
   U8684 : GTECH_NAND2 port map( A => n8995, B => n8996, Z => n8989);
   U8685 : GTECH_NAND2 port map( A => N1599, B => n8997, Z => n8996);
   U8686 : GTECH_NAND2 port map( A => n8998, B => sp_2_port, Z => n8995);
   U8687 : GTECH_NAND2 port map( A => n8999, B => n9000, Z => n5593);
   U8688 : GTECH_NOR2 port map( A => n9001, B => n9002, Z => n9000);
   U8689 : GTECH_NAND2 port map( A => n9003, B => n9004, Z => n9002);
   U8690 : GTECH_NAND2 port map( A => n8983, B => incSp_3_port, Z => n9004);
   U8691 : GTECH_NAND2 port map( A => n8984, B => stackA_3_port, Z => n9003);
   U8692 : GTECH_NAND2 port map( A => n9005, B => n9006, Z => n9001);
   U8693 : GTECH_NAND2 port map( A => n8987, B => incIncSp_3_port, Z => n9006);
   U8694 : GTECH_NAND2 port map( A => N570, B => n8988, Z => n9005);
   U8695 : GTECH_NOR2 port map( A => n9007, B => n9008, Z => n8999);
   U8696 : GTECH_NAND2 port map( A => n9009, B => n9010, Z => n9008);
   U8697 : GTECH_NAND2 port map( A => n8993, B => pc_3_port, Z => n9010);
   U8698 : GTECH_NAND2 port map( A => out_mem_addr_3_port, B => n8994, Z => 
                           n9009);
   U8699 : GTECH_NAND2 port map( A => n9011, B => n9012, Z => n9007);
   U8700 : GTECH_NAND2 port map( A => N1600, B => n8997, Z => n9012);
   U8701 : GTECH_NAND2 port map( A => n8998, B => sp_3_port, Z => n9011);
   U8702 : GTECH_NAND2 port map( A => n9013, B => n9014, Z => n5592);
   U8703 : GTECH_NOR2 port map( A => n9015, B => n9016, Z => n9014);
   U8704 : GTECH_NAND2 port map( A => n9017, B => n9018, Z => n9016);
   U8705 : GTECH_NAND2 port map( A => n8983, B => incSp_4_port, Z => n9018);
   U8706 : GTECH_NAND2 port map( A => n8984, B => stackA_4_port, Z => n9017);
   U8707 : GTECH_NAND2 port map( A => n9019, B => n9020, Z => n9015);
   U8708 : GTECH_NAND2 port map( A => n8987, B => incIncSp_4_port, Z => n9020);
   U8709 : GTECH_NAND2 port map( A => N571, B => n8988, Z => n9019);
   U8710 : GTECH_NOR2 port map( A => n9021, B => n9022, Z => n9013);
   U8711 : GTECH_NAND2 port map( A => n9023, B => n9024, Z => n9022);
   U8712 : GTECH_NAND2 port map( A => n8993, B => pc_4_port, Z => n9024);
   U8713 : GTECH_NAND2 port map( A => out_mem_addr_4_port, B => n8994, Z => 
                           n9023);
   U8714 : GTECH_NAND2 port map( A => n9025, B => n9026, Z => n9021);
   U8715 : GTECH_NAND2 port map( A => N1601, B => n8997, Z => n9026);
   U8716 : GTECH_NAND2 port map( A => n8998, B => sp_4_port, Z => n9025);
   U8717 : GTECH_NAND2 port map( A => n9027, B => n9028, Z => n5591);
   U8718 : GTECH_NOR2 port map( A => n9029, B => n9030, Z => n9028);
   U8719 : GTECH_NAND2 port map( A => n9031, B => n9032, Z => n9030);
   U8720 : GTECH_NAND2 port map( A => n8983, B => incSp_5_port, Z => n9032);
   U8721 : GTECH_NAND2 port map( A => n8984, B => stackA_5_port, Z => n9031);
   U8722 : GTECH_NAND2 port map( A => n9033, B => n9034, Z => n9029);
   U8723 : GTECH_NAND2 port map( A => n8987, B => incIncSp_5_port, Z => n9034);
   U8724 : GTECH_NAND2 port map( A => N572, B => n8988, Z => n9033);
   U8725 : GTECH_NOR2 port map( A => n9035, B => n9036, Z => n9027);
   U8726 : GTECH_NAND2 port map( A => n9037, B => n9038, Z => n9036);
   U8727 : GTECH_NAND2 port map( A => n8993, B => pc_5_port, Z => n9038);
   U8728 : GTECH_NAND2 port map( A => out_mem_addr_5_port, B => n8994, Z => 
                           n9037);
   U8729 : GTECH_NAND2 port map( A => n9039, B => n9040, Z => n9035);
   U8730 : GTECH_NAND2 port map( A => N1602, B => n8997, Z => n9040);
   U8731 : GTECH_NAND2 port map( A => n8998, B => sp_5_port, Z => n9039);
   U8732 : GTECH_NAND2 port map( A => n9041, B => n9042, Z => n5590);
   U8733 : GTECH_NOR2 port map( A => n9043, B => n9044, Z => n9042);
   U8734 : GTECH_NAND2 port map( A => n9045, B => n9046, Z => n9044);
   U8735 : GTECH_NAND2 port map( A => n8983, B => incSp_6_port, Z => n9046);
   U8736 : GTECH_NAND2 port map( A => n8984, B => stackA_6_port, Z => n9045);
   U8737 : GTECH_NAND2 port map( A => n9047, B => n9048, Z => n9043);
   U8738 : GTECH_NAND2 port map( A => n8987, B => incIncSp_6_port, Z => n9048);
   U8739 : GTECH_NAND2 port map( A => N573, B => n8988, Z => n9047);
   U8740 : GTECH_NOR2 port map( A => n9049, B => n9050, Z => n9041);
   U8741 : GTECH_NAND2 port map( A => n9051, B => n9052, Z => n9050);
   U8742 : GTECH_NAND2 port map( A => n8993, B => pc_6_port, Z => n9052);
   U8743 : GTECH_NAND2 port map( A => out_mem_addr_6_port, B => n8994, Z => 
                           n9051);
   U8744 : GTECH_NAND2 port map( A => n9053, B => n9054, Z => n9049);
   U8745 : GTECH_NAND2 port map( A => N1603, B => n8997, Z => n9054);
   U8746 : GTECH_NAND2 port map( A => n8998, B => sp_6_port, Z => n9053);
   U8747 : GTECH_NAND2 port map( A => n9055, B => n9056, Z => n5589);
   U8748 : GTECH_NOR2 port map( A => n9057, B => n9058, Z => n9056);
   U8749 : GTECH_NAND2 port map( A => n9059, B => n9060, Z => n9058);
   U8750 : GTECH_NAND2 port map( A => n8983, B => incSp_7_port, Z => n9060);
   U8751 : GTECH_NAND2 port map( A => n8984, B => stackA_7_port, Z => n9059);
   U8752 : GTECH_NAND2 port map( A => n9061, B => n9062, Z => n9057);
   U8753 : GTECH_NAND2 port map( A => n8987, B => incIncSp_7_port, Z => n9062);
   U8754 : GTECH_NAND2 port map( A => N574, B => n8988, Z => n9061);
   U8755 : GTECH_NOR2 port map( A => n9063, B => n9064, Z => n9055);
   U8756 : GTECH_NAND2 port map( A => n9065, B => n9066, Z => n9064);
   U8757 : GTECH_NAND2 port map( A => n8993, B => pc_7_port, Z => n9066);
   U8758 : GTECH_NAND2 port map( A => out_mem_addr_7_port, B => n8994, Z => 
                           n9065);
   U8759 : GTECH_NAND2 port map( A => n9067, B => n9068, Z => n9063);
   U8760 : GTECH_NAND2 port map( A => N1604, B => n8997, Z => n9068);
   U8761 : GTECH_NAND2 port map( A => n8998, B => sp_7_port, Z => n9067);
   U8762 : GTECH_NAND2 port map( A => n9069, B => n9070, Z => n5588);
   U8763 : GTECH_NOR2 port map( A => n9071, B => n9072, Z => n9070);
   U8764 : GTECH_NAND2 port map( A => n9073, B => n9074, Z => n9072);
   U8765 : GTECH_NAND2 port map( A => n8983, B => incSp_8_port, Z => n9074);
   U8766 : GTECH_NAND2 port map( A => n8984, B => stackA_8_port, Z => n9073);
   U8767 : GTECH_NAND2 port map( A => n9075, B => n9076, Z => n9071);
   U8768 : GTECH_NAND2 port map( A => n8987, B => incIncSp_8_port, Z => n9076);
   U8769 : GTECH_NAND2 port map( A => N575, B => n8988, Z => n9075);
   U8770 : GTECH_NOR2 port map( A => n9077, B => n9078, Z => n9069);
   U8771 : GTECH_NAND2 port map( A => n9079, B => n9080, Z => n9078);
   U8772 : GTECH_NAND2 port map( A => n8993, B => pc_8_port, Z => n9080);
   U8773 : GTECH_NAND2 port map( A => out_mem_addr_8_port, B => n8994, Z => 
                           n9079);
   U8774 : GTECH_NAND2 port map( A => n9081, B => n9082, Z => n9077);
   U8775 : GTECH_NAND2 port map( A => N1605, B => n8997, Z => n9082);
   U8776 : GTECH_NAND2 port map( A => n8998, B => sp_8_port, Z => n9081);
   U8777 : GTECH_NAND2 port map( A => n9083, B => n9084, Z => n5587);
   U8778 : GTECH_NOR2 port map( A => n9085, B => n9086, Z => n9084);
   U8779 : GTECH_NAND2 port map( A => n9087, B => n9088, Z => n9086);
   U8780 : GTECH_NAND2 port map( A => n8983, B => incSp_9_port, Z => n9088);
   U8781 : GTECH_NAND2 port map( A => n8984, B => stackA_9_port, Z => n9087);
   U8782 : GTECH_NAND2 port map( A => n9089, B => n9090, Z => n9085);
   U8783 : GTECH_NAND2 port map( A => n8987, B => incIncSp_9_port, Z => n9090);
   U8784 : GTECH_NAND2 port map( A => N576, B => n8988, Z => n9089);
   U8785 : GTECH_NOR2 port map( A => n9091, B => n9092, Z => n9083);
   U8786 : GTECH_NAND2 port map( A => n9093, B => n9094, Z => n9092);
   U8787 : GTECH_NAND2 port map( A => n8993, B => pc_9_port, Z => n9094);
   U8788 : GTECH_NAND2 port map( A => out_mem_addr_9_port, B => n8994, Z => 
                           n9093);
   U8789 : GTECH_NAND2 port map( A => n9095, B => n9096, Z => n9091);
   U8790 : GTECH_NAND2 port map( A => N1606, B => n8997, Z => n9096);
   U8791 : GTECH_NAND2 port map( A => n8998, B => sp_9_port, Z => n9095);
   U8792 : GTECH_NAND2 port map( A => n9097, B => n9098, Z => n5586);
   U8793 : GTECH_NOR2 port map( A => n9099, B => n9100, Z => n9098);
   U8794 : GTECH_NAND2 port map( A => n9101, B => n9102, Z => n9100);
   U8795 : GTECH_NAND2 port map( A => n8983, B => incSp_10_port, Z => n9102);
   U8796 : GTECH_NAND2 port map( A => n8984, B => stackA_10_port, Z => n9101);
   U8797 : GTECH_NAND2 port map( A => n9103, B => n9104, Z => n9099);
   U8798 : GTECH_NAND2 port map( A => n8987, B => incIncSp_10_port, Z => n9104)
                           ;
   U8799 : GTECH_NAND2 port map( A => N577, B => n8988, Z => n9103);
   U8800 : GTECH_NOR2 port map( A => n9105, B => n9106, Z => n9097);
   U8801 : GTECH_NAND2 port map( A => n9107, B => n9108, Z => n9106);
   U8802 : GTECH_NAND2 port map( A => n8993, B => pc_10_port, Z => n9108);
   U8803 : GTECH_NAND2 port map( A => out_mem_addr_10_port, B => n8994, Z => 
                           n9107);
   U8804 : GTECH_NAND2 port map( A => n9109, B => n9110, Z => n9105);
   U8805 : GTECH_NAND2 port map( A => N1607, B => n8997, Z => n9110);
   U8806 : GTECH_NAND2 port map( A => n8998, B => sp_10_port, Z => n9109);
   U8807 : GTECH_NAND2 port map( A => n9111, B => n9112, Z => n5585);
   U8808 : GTECH_NOR2 port map( A => n9113, B => n9114, Z => n9112);
   U8809 : GTECH_NAND2 port map( A => n9115, B => n9116, Z => n9114);
   U8810 : GTECH_NAND2 port map( A => n8983, B => incSp_11_port, Z => n9116);
   U8811 : GTECH_NAND2 port map( A => n8984, B => stackA_11_port, Z => n9115);
   U8812 : GTECH_NAND2 port map( A => n9117, B => n9118, Z => n9113);
   U8813 : GTECH_NAND2 port map( A => n8987, B => incIncSp_11_port, Z => n9118)
                           ;
   U8814 : GTECH_NAND2 port map( A => N578, B => n8988, Z => n9117);
   U8815 : GTECH_NOR2 port map( A => n9119, B => n9120, Z => n9111);
   U8816 : GTECH_NAND2 port map( A => n9121, B => n9122, Z => n9120);
   U8817 : GTECH_NAND2 port map( A => n8993, B => pc_11_port, Z => n9122);
   U8818 : GTECH_NAND2 port map( A => out_mem_addr_11_port, B => n8994, Z => 
                           n9121);
   U8819 : GTECH_NAND2 port map( A => n9123, B => n9124, Z => n9119);
   U8820 : GTECH_NAND2 port map( A => N1608, B => n8997, Z => n9124);
   U8821 : GTECH_NAND2 port map( A => n8998, B => sp_11_port, Z => n9123);
   U8822 : GTECH_NAND2 port map( A => n9125, B => n9126, Z => n5584);
   U8823 : GTECH_NOR2 port map( A => n9127, B => n9128, Z => n9126);
   U8824 : GTECH_NAND2 port map( A => n9129, B => n9130, Z => n9128);
   U8825 : GTECH_NAND2 port map( A => n8983, B => incSp_12_port, Z => n9130);
   U8826 : GTECH_NAND2 port map( A => n8984, B => stackA_12_port, Z => n9129);
   U8827 : GTECH_NAND2 port map( A => n9131, B => n9132, Z => n9127);
   U8828 : GTECH_NAND2 port map( A => n8987, B => incIncSp_12_port, Z => n9132)
                           ;
   U8829 : GTECH_NAND2 port map( A => N579, B => n8988, Z => n9131);
   U8830 : GTECH_NOR2 port map( A => n9133, B => n9134, Z => n9125);
   U8831 : GTECH_NAND2 port map( A => n9135, B => n9136, Z => n9134);
   U8832 : GTECH_NAND2 port map( A => n8993, B => pc_12_port, Z => n9136);
   U8833 : GTECH_NAND2 port map( A => out_mem_addr_12_port, B => n8994, Z => 
                           n9135);
   U8834 : GTECH_NAND2 port map( A => n9137, B => n9138, Z => n9133);
   U8835 : GTECH_NAND2 port map( A => N1609, B => n8997, Z => n9138);
   U8836 : GTECH_NAND2 port map( A => n8998, B => sp_12_port, Z => n9137);
   U8837 : GTECH_NAND2 port map( A => n9139, B => n9140, Z => n5583);
   U8838 : GTECH_NOR2 port map( A => n9141, B => n9142, Z => n9140);
   U8839 : GTECH_NAND2 port map( A => n9143, B => n9144, Z => n9142);
   U8840 : GTECH_NAND2 port map( A => n8983, B => incSp_13_port, Z => n9144);
   U8841 : GTECH_NAND2 port map( A => n8984, B => stackA_13_port, Z => n9143);
   U8842 : GTECH_NAND2 port map( A => n9145, B => n9146, Z => n9141);
   U8843 : GTECH_NAND2 port map( A => n8987, B => incIncSp_13_port, Z => n9146)
                           ;
   U8844 : GTECH_NAND2 port map( A => N580, B => n8988, Z => n9145);
   U8845 : GTECH_NOR2 port map( A => n9147, B => n9148, Z => n9139);
   U8846 : GTECH_NAND2 port map( A => n9149, B => n9150, Z => n9148);
   U8847 : GTECH_NAND2 port map( A => n8993, B => pc_13_port, Z => n9150);
   U8848 : GTECH_NAND2 port map( A => out_mem_addr_13_port, B => n8994, Z => 
                           n9149);
   U8849 : GTECH_NAND2 port map( A => n9151, B => n9152, Z => n9147);
   U8850 : GTECH_NAND2 port map( A => N1610, B => n8997, Z => n9152);
   U8851 : GTECH_NAND2 port map( A => n8998, B => sp_13_port, Z => n9151);
   U8852 : GTECH_NAND2 port map( A => n9153, B => n9154, Z => n5582);
   U8853 : GTECH_NOR2 port map( A => n9155, B => n9156, Z => n9154);
   U8854 : GTECH_NAND2 port map( A => n9157, B => n9158, Z => n9156);
   U8855 : GTECH_NAND2 port map( A => n8983, B => incSp_14_port, Z => n9158);
   U8856 : GTECH_NAND2 port map( A => n8984, B => stackA_14_port, Z => n9157);
   U8857 : GTECH_NAND2 port map( A => n9159, B => n9160, Z => n9155);
   U8858 : GTECH_NAND2 port map( A => n8987, B => incIncSp_14_port, Z => n9160)
                           ;
   U8859 : GTECH_NAND2 port map( A => N581, B => n8988, Z => n9159);
   U8860 : GTECH_NOR2 port map( A => n9161, B => n9162, Z => n9153);
   U8861 : GTECH_NAND2 port map( A => n9163, B => n9164, Z => n9162);
   U8862 : GTECH_NAND2 port map( A => n8993, B => pc_14_port, Z => n9164);
   U8863 : GTECH_NAND2 port map( A => out_mem_addr_14_port, B => n8994, Z => 
                           n9163);
   U8864 : GTECH_NAND2 port map( A => n9165, B => n9166, Z => n9161);
   U8865 : GTECH_NAND2 port map( A => N1611, B => n8997, Z => n9166);
   U8866 : GTECH_NAND2 port map( A => n8998, B => sp_14_port, Z => n9165);
   U8867 : GTECH_NAND2 port map( A => n9167, B => n9168, Z => n5581);
   U8868 : GTECH_NOR2 port map( A => n9169, B => n9170, Z => n9168);
   U8869 : GTECH_NAND2 port map( A => n9171, B => n9172, Z => n9170);
   U8870 : GTECH_NAND2 port map( A => n8983, B => incSp_15_port, Z => n9172);
   U8871 : GTECH_NAND2 port map( A => n8984, B => stackA_15_port, Z => n9171);
   U8872 : GTECH_NAND2 port map( A => n9173, B => n9174, Z => n9169);
   U8873 : GTECH_NAND2 port map( A => n8987, B => incIncSp_15_port, Z => n9174)
                           ;
   U8874 : GTECH_NAND2 port map( A => N582, B => n8988, Z => n9173);
   U8875 : GTECH_NOR2 port map( A => n9175, B => n9176, Z => n9167);
   U8876 : GTECH_NAND2 port map( A => n9177, B => n9178, Z => n9176);
   U8877 : GTECH_NAND2 port map( A => n8993, B => pc_15_port, Z => n9178);
   U8878 : GTECH_NAND2 port map( A => out_mem_addr_15_port, B => n8994, Z => 
                           n9177);
   U8879 : GTECH_NAND2 port map( A => n9179, B => n9180, Z => n9175);
   U8880 : GTECH_NAND2 port map( A => N1612, B => n8997, Z => n9180);
   U8881 : GTECH_NAND2 port map( A => n8998, B => sp_15_port, Z => n9179);
   U8882 : GTECH_NAND2 port map( A => n9181, B => n9182, Z => n5580);
   U8883 : GTECH_NOR2 port map( A => n9183, B => n9184, Z => n9182);
   U8884 : GTECH_NAND2 port map( A => n9185, B => n9186, Z => n9184);
   U8885 : GTECH_NAND2 port map( A => n8983, B => incSp_16_port, Z => n9186);
   U8886 : GTECH_NAND2 port map( A => n8984, B => stackA_16_port, Z => n9185);
   U8887 : GTECH_NAND2 port map( A => n9187, B => n9188, Z => n9183);
   U8888 : GTECH_NAND2 port map( A => n8987, B => incIncSp_16_port, Z => n9188)
                           ;
   U8889 : GTECH_NAND2 port map( A => N583, B => n8988, Z => n9187);
   U8890 : GTECH_NOR2 port map( A => n9189, B => n9190, Z => n9181);
   U8891 : GTECH_NAND2 port map( A => n9191, B => n9192, Z => n9190);
   U8892 : GTECH_NAND2 port map( A => n8993, B => pc_16_port, Z => n9192);
   U8893 : GTECH_NAND2 port map( A => out_mem_addr_16_port, B => n8994, Z => 
                           n9191);
   U8894 : GTECH_NAND2 port map( A => n9193, B => n9194, Z => n9189);
   U8895 : GTECH_NAND2 port map( A => N1613, B => n8997, Z => n9194);
   U8896 : GTECH_NAND2 port map( A => n8998, B => sp_16_port, Z => n9193);
   U8897 : GTECH_NAND2 port map( A => n9195, B => n9196, Z => n5579);
   U8898 : GTECH_NOR2 port map( A => n9197, B => n9198, Z => n9196);
   U8899 : GTECH_NAND2 port map( A => n9199, B => n9200, Z => n9198);
   U8900 : GTECH_NAND2 port map( A => n8983, B => incSp_17_port, Z => n9200);
   U8901 : GTECH_NAND2 port map( A => n8984, B => stackA_17_port, Z => n9199);
   U8902 : GTECH_NAND2 port map( A => n9201, B => n9202, Z => n9197);
   U8903 : GTECH_NAND2 port map( A => n8987, B => incIncSp_17_port, Z => n9202)
                           ;
   U8904 : GTECH_NAND2 port map( A => N584, B => n8988, Z => n9201);
   U8905 : GTECH_NOR2 port map( A => n9203, B => n9204, Z => n9195);
   U8906 : GTECH_NAND2 port map( A => n9205, B => n9206, Z => n9204);
   U8907 : GTECH_NAND2 port map( A => n8993, B => pc_17_port, Z => n9206);
   U8908 : GTECH_NAND2 port map( A => out_mem_addr_17_port, B => n8994, Z => 
                           n9205);
   U8909 : GTECH_NAND2 port map( A => n9207, B => n9208, Z => n9203);
   U8910 : GTECH_NAND2 port map( A => N1614, B => n8997, Z => n9208);
   U8911 : GTECH_NAND2 port map( A => n8998, B => sp_17_port, Z => n9207);
   U8912 : GTECH_NAND2 port map( A => n9209, B => n9210, Z => n5578);
   U8913 : GTECH_NOR2 port map( A => n9211, B => n9212, Z => n9210);
   U8914 : GTECH_NAND2 port map( A => n9213, B => n9214, Z => n9212);
   U8915 : GTECH_NAND2 port map( A => n8983, B => incSp_18_port, Z => n9214);
   U8916 : GTECH_NAND2 port map( A => n8984, B => stackA_18_port, Z => n9213);
   U8917 : GTECH_NAND2 port map( A => n9215, B => n9216, Z => n9211);
   U8918 : GTECH_NAND2 port map( A => n8987, B => incIncSp_18_port, Z => n9216)
                           ;
   U8919 : GTECH_NAND2 port map( A => N585, B => n8988, Z => n9215);
   U8920 : GTECH_NOR2 port map( A => n9217, B => n9218, Z => n9209);
   U8921 : GTECH_NAND2 port map( A => n9219, B => n9220, Z => n9218);
   U8922 : GTECH_NAND2 port map( A => n8993, B => pc_18_port, Z => n9220);
   U8923 : GTECH_NAND2 port map( A => out_mem_addr_18_port, B => n8994, Z => 
                           n9219);
   U8924 : GTECH_NAND2 port map( A => n9221, B => n9222, Z => n9217);
   U8925 : GTECH_NAND2 port map( A => N1615, B => n8997, Z => n9222);
   U8926 : GTECH_NAND2 port map( A => n8998, B => sp_18_port, Z => n9221);
   U8927 : GTECH_NAND2 port map( A => n9223, B => n9224, Z => n5577);
   U8928 : GTECH_NOR2 port map( A => n9225, B => n9226, Z => n9224);
   U8929 : GTECH_NAND2 port map( A => n9227, B => n9228, Z => n9226);
   U8930 : GTECH_NAND2 port map( A => n8983, B => incSp_19_port, Z => n9228);
   U8931 : GTECH_NAND2 port map( A => n8984, B => stackA_19_port, Z => n9227);
   U8932 : GTECH_NAND2 port map( A => n9229, B => n9230, Z => n9225);
   U8933 : GTECH_NAND2 port map( A => n8987, B => incIncSp_19_port, Z => n9230)
                           ;
   U8934 : GTECH_NAND2 port map( A => N586, B => n8988, Z => n9229);
   U8935 : GTECH_NOR2 port map( A => n9231, B => n9232, Z => n9223);
   U8936 : GTECH_NAND2 port map( A => n9233, B => n9234, Z => n9232);
   U8937 : GTECH_NAND2 port map( A => n8993, B => pc_19_port, Z => n9234);
   U8938 : GTECH_NAND2 port map( A => out_mem_addr_19_port, B => n8994, Z => 
                           n9233);
   U8939 : GTECH_NAND2 port map( A => n9235, B => n9236, Z => n9231);
   U8940 : GTECH_NAND2 port map( A => N1616, B => n8997, Z => n9236);
   U8941 : GTECH_NAND2 port map( A => n8998, B => sp_19_port, Z => n9235);
   U8942 : GTECH_NAND2 port map( A => n9237, B => n9238, Z => n5576);
   U8943 : GTECH_NOR2 port map( A => n9239, B => n9240, Z => n9238);
   U8944 : GTECH_NAND2 port map( A => n9241, B => n9242, Z => n9240);
   U8945 : GTECH_NAND2 port map( A => n8983, B => incSp_20_port, Z => n9242);
   U8946 : GTECH_NAND2 port map( A => n8984, B => stackA_20_port, Z => n9241);
   U8947 : GTECH_NAND2 port map( A => n9243, B => n9244, Z => n9239);
   U8948 : GTECH_NAND2 port map( A => n8987, B => incIncSp_20_port, Z => n9244)
                           ;
   U8949 : GTECH_NAND2 port map( A => N587, B => n8988, Z => n9243);
   U8950 : GTECH_NOR2 port map( A => n9245, B => n9246, Z => n9237);
   U8951 : GTECH_NAND2 port map( A => n9247, B => n9248, Z => n9246);
   U8952 : GTECH_NAND2 port map( A => n8993, B => pc_20_port, Z => n9248);
   U8953 : GTECH_NAND2 port map( A => out_mem_addr_20_port, B => n8994, Z => 
                           n9247);
   U8954 : GTECH_NAND2 port map( A => n9249, B => n9250, Z => n9245);
   U8955 : GTECH_NAND2 port map( A => N1617, B => n8997, Z => n9250);
   U8956 : GTECH_NAND2 port map( A => n8998, B => sp_20_port, Z => n9249);
   U8957 : GTECH_NAND2 port map( A => n9251, B => n9252, Z => n5575);
   U8958 : GTECH_NOR2 port map( A => n9253, B => n9254, Z => n9252);
   U8959 : GTECH_NAND2 port map( A => n9255, B => n9256, Z => n9254);
   U8960 : GTECH_NAND2 port map( A => n8983, B => incSp_21_port, Z => n9256);
   U8961 : GTECH_NAND2 port map( A => n8984, B => stackA_21_port, Z => n9255);
   U8962 : GTECH_NAND2 port map( A => n9257, B => n9258, Z => n9253);
   U8963 : GTECH_NAND2 port map( A => n8987, B => incIncSp_21_port, Z => n9258)
                           ;
   U8964 : GTECH_NAND2 port map( A => N588, B => n8988, Z => n9257);
   U8965 : GTECH_NOR2 port map( A => n9259, B => n9260, Z => n9251);
   U8966 : GTECH_NAND2 port map( A => n9261, B => n9262, Z => n9260);
   U8967 : GTECH_NAND2 port map( A => n8993, B => pc_21_port, Z => n9262);
   U8968 : GTECH_NAND2 port map( A => out_mem_addr_21_port, B => n8994, Z => 
                           n9261);
   U8969 : GTECH_NAND2 port map( A => n9263, B => n9264, Z => n9259);
   U8970 : GTECH_NAND2 port map( A => N1618, B => n8997, Z => n9264);
   U8971 : GTECH_NAND2 port map( A => n8998, B => sp_21_port, Z => n9263);
   U8972 : GTECH_NAND2 port map( A => n9265, B => n9266, Z => n5574);
   U8973 : GTECH_NOR2 port map( A => n9267, B => n9268, Z => n9266);
   U8974 : GTECH_NAND2 port map( A => n9269, B => n9270, Z => n9268);
   U8975 : GTECH_NAND2 port map( A => n8983, B => incSp_22_port, Z => n9270);
   U8976 : GTECH_NAND2 port map( A => n8984, B => stackA_22_port, Z => n9269);
   U8977 : GTECH_NAND2 port map( A => n9271, B => n9272, Z => n9267);
   U8978 : GTECH_NAND2 port map( A => n8987, B => incIncSp_22_port, Z => n9272)
                           ;
   U8979 : GTECH_NAND2 port map( A => N589, B => n8988, Z => n9271);
   U8980 : GTECH_NOR2 port map( A => n9273, B => n9274, Z => n9265);
   U8981 : GTECH_NAND2 port map( A => n9275, B => n9276, Z => n9274);
   U8982 : GTECH_NAND2 port map( A => n8993, B => pc_22_port, Z => n9276);
   U8983 : GTECH_NAND2 port map( A => out_mem_addr_22_port, B => n8994, Z => 
                           n9275);
   U8984 : GTECH_NAND2 port map( A => n9277, B => n9278, Z => n9273);
   U8985 : GTECH_NAND2 port map( A => N1619, B => n8997, Z => n9278);
   U8986 : GTECH_NAND2 port map( A => n8998, B => sp_22_port, Z => n9277);
   U8987 : GTECH_NAND2 port map( A => n9279, B => n9280, Z => n5573);
   U8988 : GTECH_NOR2 port map( A => n9281, B => n9282, Z => n9280);
   U8989 : GTECH_NAND2 port map( A => n9283, B => n9284, Z => n9282);
   U8990 : GTECH_NAND2 port map( A => n8983, B => incSp_23_port, Z => n9284);
   U8991 : GTECH_NAND2 port map( A => n8984, B => stackA_23_port, Z => n9283);
   U8992 : GTECH_NAND2 port map( A => n9285, B => n9286, Z => n9281);
   U8993 : GTECH_NAND2 port map( A => n8987, B => incIncSp_23_port, Z => n9286)
                           ;
   U8994 : GTECH_NAND2 port map( A => N590, B => n8988, Z => n9285);
   U8995 : GTECH_NOR2 port map( A => n9287, B => n9288, Z => n9279);
   U8996 : GTECH_NAND2 port map( A => n9289, B => n9290, Z => n9288);
   U8997 : GTECH_NAND2 port map( A => n8993, B => pc_23_port, Z => n9290);
   U8998 : GTECH_NAND2 port map( A => out_mem_addr_23_port, B => n8994, Z => 
                           n9289);
   U8999 : GTECH_NAND2 port map( A => n9291, B => n9292, Z => n9287);
   U9000 : GTECH_NAND2 port map( A => N1620, B => n8997, Z => n9292);
   U9001 : GTECH_NAND2 port map( A => n8998, B => sp_23_port, Z => n9291);
   U9002 : GTECH_NAND2 port map( A => n9293, B => n9294, Z => n5572);
   U9003 : GTECH_NOR2 port map( A => n9295, B => n9296, Z => n9294);
   U9004 : GTECH_NAND2 port map( A => n9297, B => n9298, Z => n9296);
   U9005 : GTECH_NAND2 port map( A => n8983, B => incSp_24_port, Z => n9298);
   U9006 : GTECH_NAND2 port map( A => n8984, B => stackA_24_port, Z => n9297);
   U9007 : GTECH_NAND2 port map( A => n9299, B => n9300, Z => n9295);
   U9008 : GTECH_NAND2 port map( A => n8987, B => incIncSp_24_port, Z => n9300)
                           ;
   U9009 : GTECH_NAND2 port map( A => N591, B => n8988, Z => n9299);
   U9010 : GTECH_NOR2 port map( A => n9301, B => n9302, Z => n9293);
   U9011 : GTECH_NAND2 port map( A => n9303, B => n9304, Z => n9302);
   U9012 : GTECH_NAND2 port map( A => n8993, B => pc_24_port, Z => n9304);
   U9013 : GTECH_NAND2 port map( A => out_mem_addr_24_port, B => n8994, Z => 
                           n9303);
   U9014 : GTECH_NAND2 port map( A => n9305, B => n9306, Z => n9301);
   U9015 : GTECH_NAND2 port map( A => N1621, B => n8997, Z => n9306);
   U9016 : GTECH_NAND2 port map( A => n8998, B => sp_24_port, Z => n9305);
   U9017 : GTECH_NAND2 port map( A => n9307, B => n9308, Z => n5571);
   U9018 : GTECH_NOR2 port map( A => n9309, B => n9310, Z => n9308);
   U9019 : GTECH_NAND2 port map( A => n9311, B => n9312, Z => n9310);
   U9020 : GTECH_NAND2 port map( A => n8983, B => incSp_25_port, Z => n9312);
   U9021 : GTECH_NAND2 port map( A => n8984, B => stackA_25_port, Z => n9311);
   U9022 : GTECH_NAND2 port map( A => n9313, B => n9314, Z => n9309);
   U9023 : GTECH_NAND2 port map( A => n8987, B => incIncSp_25_port, Z => n9314)
                           ;
   U9024 : GTECH_NAND2 port map( A => N592, B => n8988, Z => n9313);
   U9025 : GTECH_NOR2 port map( A => n9315, B => n9316, Z => n9307);
   U9026 : GTECH_NAND2 port map( A => n9317, B => n9318, Z => n9316);
   U9027 : GTECH_NAND2 port map( A => n8993, B => pc_25_port, Z => n9318);
   U9028 : GTECH_NAND2 port map( A => out_mem_addr_25_port, B => n8994, Z => 
                           n9317);
   U9029 : GTECH_NAND2 port map( A => n9319, B => n9320, Z => n9315);
   U9030 : GTECH_NAND2 port map( A => N1622, B => n8997, Z => n9320);
   U9031 : GTECH_NAND2 port map( A => n8998, B => sp_25_port, Z => n9319);
   U9032 : GTECH_NAND2 port map( A => n9321, B => n9322, Z => n5570);
   U9033 : GTECH_NOR2 port map( A => n9323, B => n9324, Z => n9322);
   U9034 : GTECH_NAND2 port map( A => n9325, B => n9326, Z => n9324);
   U9035 : GTECH_NAND2 port map( A => n8983, B => incSp_26_port, Z => n9326);
   U9036 : GTECH_NAND2 port map( A => n8984, B => stackA_26_port, Z => n9325);
   U9037 : GTECH_NAND2 port map( A => n9327, B => n9328, Z => n9323);
   U9038 : GTECH_NAND2 port map( A => n8987, B => incIncSp_26_port, Z => n9328)
                           ;
   U9039 : GTECH_NAND2 port map( A => N593, B => n8988, Z => n9327);
   U9040 : GTECH_NOR2 port map( A => n9329, B => n9330, Z => n9321);
   U9041 : GTECH_NAND2 port map( A => n9331, B => n9332, Z => n9330);
   U9042 : GTECH_NAND2 port map( A => n8993, B => pc_26_port, Z => n9332);
   U9043 : GTECH_NAND2 port map( A => out_mem_addr_26_port, B => n8994, Z => 
                           n9331);
   U9044 : GTECH_NAND2 port map( A => n9333, B => n9334, Z => n9329);
   U9045 : GTECH_NAND2 port map( A => N1623, B => n8997, Z => n9334);
   U9046 : GTECH_NAND2 port map( A => n8998, B => sp_26_port, Z => n9333);
   U9047 : GTECH_NAND2 port map( A => n9335, B => n9336, Z => n5569);
   U9048 : GTECH_NOR2 port map( A => n9337, B => n9338, Z => n9336);
   U9049 : GTECH_NAND2 port map( A => n9339, B => n9340, Z => n9338);
   U9050 : GTECH_NAND2 port map( A => n8983, B => incSp_27_port, Z => n9340);
   U9051 : GTECH_NAND2 port map( A => n8984, B => stackA_27_port, Z => n9339);
   U9052 : GTECH_NAND2 port map( A => n9341, B => n9342, Z => n9337);
   U9053 : GTECH_NAND2 port map( A => n8987, B => incIncSp_27_port, Z => n9342)
                           ;
   U9054 : GTECH_NAND2 port map( A => N594, B => n8988, Z => n9341);
   U9055 : GTECH_NOR2 port map( A => n9343, B => n9344, Z => n9335);
   U9056 : GTECH_NAND2 port map( A => n9345, B => n9346, Z => n9344);
   U9057 : GTECH_NAND2 port map( A => n8993, B => pc_27_port, Z => n9346);
   U9058 : GTECH_NAND2 port map( A => out_mem_addr_27_port, B => n8994, Z => 
                           n9345);
   U9059 : GTECH_NAND2 port map( A => n9347, B => n9348, Z => n9343);
   U9060 : GTECH_NAND2 port map( A => N1624, B => n8997, Z => n9348);
   U9061 : GTECH_NAND2 port map( A => n8998, B => sp_27_port, Z => n9347);
   U9062 : GTECH_NAND2 port map( A => n9349, B => n9350, Z => n5568);
   U9063 : GTECH_NOR2 port map( A => n9351, B => n9352, Z => n9350);
   U9064 : GTECH_NAND2 port map( A => n9353, B => n9354, Z => n9352);
   U9065 : GTECH_NAND2 port map( A => n8983, B => incSp_28_port, Z => n9354);
   U9066 : GTECH_NAND2 port map( A => n8984, B => stackA_28_port, Z => n9353);
   U9067 : GTECH_NAND2 port map( A => n9355, B => n9356, Z => n9351);
   U9068 : GTECH_NAND2 port map( A => n8987, B => incIncSp_28_port, Z => n9356)
                           ;
   U9069 : GTECH_NAND2 port map( A => N595, B => n8988, Z => n9355);
   U9070 : GTECH_NOR2 port map( A => n9357, B => n9358, Z => n9349);
   U9071 : GTECH_NAND2 port map( A => n9359, B => n9360, Z => n9358);
   U9072 : GTECH_NAND2 port map( A => n8993, B => pc_28_port, Z => n9360);
   U9073 : GTECH_NAND2 port map( A => out_mem_addr_28_port, B => n8994, Z => 
                           n9359);
   U9074 : GTECH_NAND2 port map( A => n9361, B => n9362, Z => n9357);
   U9075 : GTECH_NAND2 port map( A => N1625, B => n8997, Z => n9362);
   U9076 : GTECH_NAND2 port map( A => n8998, B => sp_28_port, Z => n9361);
   U9077 : GTECH_NAND2 port map( A => n9363, B => n9364, Z => n5567);
   U9078 : GTECH_NOR2 port map( A => n9365, B => n9366, Z => n9364);
   U9079 : GTECH_NAND2 port map( A => n9367, B => n9368, Z => n9366);
   U9080 : GTECH_NAND2 port map( A => n8983, B => incSp_29_port, Z => n9368);
   U9081 : GTECH_NAND2 port map( A => n8984, B => stackA_29_port, Z => n9367);
   U9082 : GTECH_NAND2 port map( A => n9369, B => n9370, Z => n9365);
   U9083 : GTECH_NAND2 port map( A => n8987, B => incIncSp_29_port, Z => n9370)
                           ;
   U9084 : GTECH_NAND2 port map( A => N596, B => n8988, Z => n9369);
   U9085 : GTECH_NOR2 port map( A => n9371, B => n9372, Z => n9363);
   U9086 : GTECH_NAND2 port map( A => n9373, B => n9374, Z => n9372);
   U9087 : GTECH_NAND2 port map( A => n8993, B => pc_29_port, Z => n9374);
   U9088 : GTECH_NAND2 port map( A => out_mem_addr_29_port, B => n8994, Z => 
                           n9373);
   U9089 : GTECH_NAND2 port map( A => n9375, B => n9376, Z => n9371);
   U9090 : GTECH_NAND2 port map( A => N1626, B => n8997, Z => n9376);
   U9091 : GTECH_NAND2 port map( A => n8998, B => sp_29_port, Z => n9375);
   U9092 : GTECH_NAND2 port map( A => n9377, B => n9378, Z => n5566);
   U9093 : GTECH_NOR2 port map( A => n9379, B => n9380, Z => n9378);
   U9094 : GTECH_NAND2 port map( A => n9381, B => n9382, Z => n9380);
   U9095 : GTECH_NAND2 port map( A => n8983, B => incSp_30_port, Z => n9382);
   U9096 : GTECH_NAND2 port map( A => n8984, B => stackA_30_port, Z => n9381);
   U9097 : GTECH_NAND2 port map( A => n9383, B => n9384, Z => n9379);
   U9098 : GTECH_NAND2 port map( A => n8987, B => incIncSp_30_port, Z => n9384)
                           ;
   U9099 : GTECH_NAND2 port map( A => N597, B => n8988, Z => n9383);
   U9100 : GTECH_NOR2 port map( A => n9385, B => n9386, Z => n9377);
   U9101 : GTECH_NAND2 port map( A => n9387, B => n9388, Z => n9386);
   U9102 : GTECH_NAND2 port map( A => n8993, B => pc_30_port, Z => n9388);
   U9103 : GTECH_NAND2 port map( A => out_mem_addr_30_port, B => n8994, Z => 
                           n9387);
   U9104 : GTECH_NAND2 port map( A => n9389, B => n9390, Z => n9385);
   U9105 : GTECH_NAND2 port map( A => N1627, B => n8997, Z => n9390);
   U9106 : GTECH_NAND2 port map( A => n8998, B => sp_30_port, Z => n9389);
   U9107 : GTECH_NAND2 port map( A => n9391, B => n9392, Z => n5565);
   U9108 : GTECH_NOR2 port map( A => n9393, B => n9394, Z => n9392);
   U9109 : GTECH_NAND2 port map( A => n9395, B => n9396, Z => n9394);
   U9110 : GTECH_NAND2 port map( A => n8983, B => incSp_31_port, Z => n9396);
   U9111 : GTECH_NOT port map( A => n9397, Z => n8983);
   U9112 : GTECH_NAND2 port map( A => n9398, B => n9399, Z => n9397);
   U9113 : GTECH_NAND2 port map( A => n9400, B => n7448, Z => n9399);
   U9114 : GTECH_NAND2 port map( A => n7442, B => n9401, Z => n9400);
   U9115 : GTECH_NAND2 port map( A => n9402, B => n9403, Z => n9401);
   U9116 : GTECH_NAND2 port map( A => n6230, B => n9404, Z => n9403);
   U9117 : GTECH_NAND2 port map( A => n9405, B => n9406, Z => n9404);
   U9118 : GTECH_NOT port map( A => n9407, Z => n9402);
   U9119 : GTECH_NAND2 port map( A => n7488, B => n7491, Z => n9407);
   U9120 : GTECH_NAND2 port map( A => n7153, B => n9408, Z => n7491);
   U9121 : GTECH_NAND2 port map( A => n8984, B => stackA_31_port, Z => n9395);
   U9122 : GTECH_NOR2 port map( A => n9409, B => n9410, Z => n8984);
   U9123 : GTECH_NOR2 port map( A => n9411, B => n9412, Z => n9410);
   U9124 : GTECH_NOR2 port map( A => n7162, B => n9413, Z => n9412);
   U9125 : GTECH_NAND2 port map( A => n9414, B => n9415, Z => n9393);
   U9126 : GTECH_NAND2 port map( A => n8987, B => incIncSp_31_port, Z => n9415)
                           ;
   U9127 : GTECH_NOR2 port map( A => n9416, B => n8966, Z => n8987);
   U9128 : GTECH_NOR2 port map( A => n9417, B => n9418, Z => n8966);
   U9129 : GTECH_NOR2 port map( A => n9419, B => n7162, Z => n9418);
   U9130 : GTECH_NOT port map( A => n9398, Z => n9416);
   U9131 : GTECH_NAND2 port map( A => N598, B => n8988, Z => n9414);
   U9132 : GTECH_NOR2 port map( A => n9420, B => n9409, Z => n8988);
   U9133 : GTECH_NOR2 port map( A => n9421, B => n9422, Z => n9391);
   U9134 : GTECH_NAND2 port map( A => n9423, B => n9424, Z => n9422);
   U9135 : GTECH_NAND2 port map( A => n8993, B => pc_31_port, Z => n9424);
   U9136 : GTECH_NOR2 port map( A => n7492, B => n9409, Z => n8993);
   U9137 : GTECH_NAND2 port map( A => out_mem_addr_31_port, B => n8994, Z => 
                           n9423);
   U9138 : GTECH_NAND2 port map( A => n9425, B => n9426, Z => n9421);
   U9139 : GTECH_NAND2 port map( A => N1628, B => n8997, Z => n9426);
   U9140 : GTECH_NOR2 port map( A => n9427, B => n9409, Z => n8997);
   U9141 : GTECH_NAND2 port map( A => n9428, B => n6230, Z => n9427);
   U9142 : GTECH_NAND2 port map( A => n7168, B => n8949, Z => n9428);
   U9143 : GTECH_NAND2 port map( A => n8998, B => sp_31_port, Z => n9425);
   U9144 : GTECH_NOR2 port map( A => n9429, B => n9409, Z => n8998);
   U9145 : GTECH_NAND2 port map( A => n9398, B => n7442, Z => n9409);
   U9146 : GTECH_NOR2 port map( A => n8994, B => n7182, Z => n9398);
   U9147 : GTECH_NAND2 port map( A => n7439, B => n9430, Z => n8994);
   U9148 : GTECH_NAND2 port map( A => n9431, B => n8415, Z => n9430);
   U9149 : GTECH_NOR2 port map( A => n9432, B => n7182, Z => n9431);
   U9150 : GTECH_NAND2 port map( A => n9433, B => n9434, Z => n5525);
   U9151 : GTECH_NOR2 port map( A => n9435, B => n9436, Z => n9434);
   U9152 : GTECH_NOR2 port map( A => n9437, B => n6024, Z => n9436);
   U9153 : GTECH_NOR2 port map( A => n9438, B => n9439, Z => n9437);
   U9154 : GTECH_NAND2 port map( A => n9440, B => n9441, Z => n9439);
   U9155 : GTECH_NAND2 port map( A => n6475, B => n6031, Z => n9441);
   U9156 : GTECH_NOT port map( A => n9442, Z => n6475);
   U9157 : GTECH_NAND2 port map( A => n9443, B => n9444, Z => n9442);
   U9158 : GTECH_NAND2 port map( A => n9445, B => n9446, Z => n9444);
   U9159 : GTECH_NOR2 port map( A => n9447, B => n9448, Z => n9446);
   U9160 : GTECH_NAND2 port map( A => n6451, B => n6396, Z => n9448);
   U9161 : GTECH_NAND2 port map( A => n9449, B => n9450, Z => n6396);
   U9162 : GTECH_NOR2 port map( A => n11123, B => n9451, Z => n9450);
   U9163 : GTECH_NOR2 port map( A => n6465, B => n6466, Z => n9449);
   U9164 : GTECH_NAND2 port map( A => n6486, B => n9452, Z => n6451);
   U9165 : GTECH_NAND2 port map( A => n9453, B => n7223, Z => n9452);
   U9166 : GTECH_NAND2 port map( A => n9454, B => n9455, Z => n7223);
   U9167 : GTECH_NOR2 port map( A => n11119, B => n11121, Z => n9455);
   U9168 : GTECH_NAND2 port map( A => n9456, B => n11119, Z => n9453);
   U9169 : GTECH_NOT port map( A => n6402, Z => n9456);
   U9170 : GTECH_NOT port map( A => n7224, Z => n6486);
   U9171 : GTECH_NOR2 port map( A => n6402, B => n9457, Z => n9447);
   U9172 : GTECH_NAND2 port map( A => n9458, B => n6465, Z => n9457);
   U9173 : GTECH_NAND2 port map( A => n7224, B => n6466, Z => n9458);
   U9174 : GTECH_NAND2 port map( A => n11120, B => n7207, Z => n6466);
   U9175 : GTECH_NAND2 port map( A => n6482, B => n6401, Z => n6402);
   U9176 : GTECH_NAND2 port map( A => n9459, B => n11123, Z => n6401);
   U9177 : GTECH_NOR2 port map( A => n11124, B => n11125, Z => n9459);
   U9178 : GTECH_NAND2 port map( A => n11124, B => n6392, Z => n6482);
   U9179 : GTECH_NOT port map( A => n11125, Z => n6392);
   U9180 : GTECH_NOR2 port map( A => n9460, B => n9461, Z => n9445);
   U9181 : GTECH_NOT port map( A => n6458, Z => n9461);
   U9182 : GTECH_NOR2 port map( A => n9462, B => n9463, Z => n6458);
   U9183 : GTECH_NOR2 port map( A => n9464, B => n6438, Z => n9463);
   U9184 : GTECH_NOT port map( A => n7215, Z => n6438);
   U9185 : GTECH_NOR2 port map( A => n6463, B => n11122, Z => n7215);
   U9186 : GTECH_NAND2 port map( A => n7207, B => n6410, Z => n6463);
   U9187 : GTECH_NAND2 port map( A => n7216, B => n11121, Z => n9464);
   U9188 : GTECH_NAND2 port map( A => n6428, B => n6398, Z => n9462);
   U9189 : GTECH_NAND2 port map( A => n9465, B => n9466, Z => n6398);
   U9190 : GTECH_NOR2 port map( A => n11121, B => n11123, Z => n9466);
   U9191 : GTECH_NOR2 port map( A => n7207, B => n7224, Z => n9465);
   U9192 : GTECH_NOT port map( A => n9467, Z => n6428);
   U9193 : GTECH_NOR2 port map( A => n9468, B => n7229, Z => n9467);
   U9194 : GTECH_NAND2 port map( A => n9469, B => n6443, Z => n7229);
   U9195 : GTECH_NOR2 port map( A => n11121, B => n11122, Z => n6443);
   U9196 : GTECH_NOR2 port map( A => n7216, B => n7207, Z => n9469);
   U9197 : GTECH_NAND2 port map( A => n11124, B => n11120, Z => n9468);
   U9198 : GTECH_NOR2 port map( A => n7226, B => n7224, Z => n9460);
   U9199 : GTECH_NAND2 port map( A => n11122, B => n6410, Z => n7224);
   U9200 : GTECH_NOT port map( A => n11120, Z => n6410);
   U9201 : GTECH_NAND2 port map( A => n9470, B => n9454, Z => n7226);
   U9202 : GTECH_NOR2 port map( A => n9451, B => n7216, Z => n9454);
   U9203 : GTECH_NOT port map( A => n11123, Z => n7216);
   U9204 : GTECH_NOT port map( A => n11124, Z => n9451);
   U9205 : GTECH_NOR2 port map( A => n6465, B => n7207, Z => n9470);
   U9206 : GTECH_NOT port map( A => n11119, Z => n7207);
   U9207 : GTECH_NOT port map( A => n11121, Z => n6465);
   U9208 : GTECH_NOR2 port map( A => n11125, B => n11126, Z => n9443);
   U9209 : GTECH_NAND2 port map( A => n6590, B => n6079, Z => n9440);
   U9210 : GTECH_NOT port map( A => n9471, Z => n6590);
   U9211 : GTECH_NAND2 port map( A => n9472, B => n9473, Z => n9471);
   U9212 : GTECH_NAND2 port map( A => n9474, B => n9475, Z => n9473);
   U9213 : GTECH_NOR2 port map( A => n9476, B => n6569, Z => n9475);
   U9214 : GTECH_NOR2 port map( A => n9477, B => n6527, Z => n6569);
   U9215 : GTECH_NAND2 port map( A => n6526, B => n9478, Z => n9477);
   U9216 : GTECH_NAND2 port map( A => n7309, B => n9479, Z => n9478);
   U9217 : GTECH_NAND2 port map( A => n11127, B => n9480, Z => n9479);
   U9218 : GTECH_NAND2 port map( A => n9481, B => n9482, Z => n7309);
   U9219 : GTECH_NOR2 port map( A => n11127, B => n11129, Z => n9482);
   U9220 : GTECH_NOR2 port map( A => n9483, B => n7300, Z => n9481);
   U9221 : GTECH_NOT port map( A => n6512, Z => n9476);
   U9222 : GTECH_NAND2 port map( A => n9484, B => n9485, Z => n6512);
   U9223 : GTECH_NOR2 port map( A => n11131, B => n9483, Z => n9485);
   U9224 : GTECH_NOR2 port map( A => n6524, B => n6519, Z => n9484);
   U9225 : GTECH_NOT port map( A => n6581, Z => n6519);
   U9226 : GTECH_NOR2 port map( A => n6574, B => n9486, Z => n9474);
   U9227 : GTECH_NAND2 port map( A => n9487, B => n9488, Z => n9486);
   U9228 : GTECH_NAND2 port map( A => n9489, B => n11129, Z => n9488);
   U9229 : GTECH_NOR2 port map( A => n9490, B => n9491, Z => n9489);
   U9230 : GTECH_NAND2 port map( A => n7294, B => n11131, Z => n9491);
   U9231 : GTECH_NOT port map( A => n6557, Z => n7294);
   U9232 : GTECH_NAND2 port map( A => n11132, B => n6526, Z => n9490);
   U9233 : GTECH_NAND2 port map( A => n9492, B => n6524, Z => n9487);
   U9234 : GTECH_NOR2 port map( A => n9493, B => n6515, Z => n9492);
   U9235 : GTECH_NOT port map( A => n9480, Z => n6515);
   U9236 : GTECH_NOR2 port map( A => n6604, B => n6546, Z => n9480);
   U9237 : GTECH_NOT port map( A => n6514, Z => n6546);
   U9238 : GTECH_NAND2 port map( A => n9494, B => n11131, Z => n6514);
   U9239 : GTECH_NOR2 port map( A => n11132, B => n11133, Z => n9494);
   U9240 : GTECH_NOT port map( A => n6573, Z => n6604);
   U9241 : GTECH_NAND2 port map( A => n11132, B => n6507, Z => n6573);
   U9242 : GTECH_NOT port map( A => n11133, Z => n6507);
   U9243 : GTECH_NOR2 port map( A => n6581, B => n9495, Z => n9493);
   U9244 : GTECH_NOR2 port map( A => n11128, B => n6527, Z => n9495);
   U9245 : GTECH_NOR2 port map( A => n6526, B => n11127, Z => n6581);
   U9246 : GTECH_NOT port map( A => n9496, Z => n6574);
   U9247 : GTECH_NOR2 port map( A => n9497, B => n9498, Z => n9496);
   U9248 : GTECH_NOR2 port map( A => n9499, B => n6524, Z => n9498);
   U9249 : GTECH_NOT port map( A => n11129, Z => n6524);
   U9250 : GTECH_NAND2 port map( A => n7300, B => n7301, Z => n9499);
   U9251 : GTECH_NOT port map( A => n6560, Z => n7301);
   U9252 : GTECH_NAND2 port map( A => n7292, B => n6527, Z => n6560);
   U9253 : GTECH_NOT port map( A => n11130, Z => n6527);
   U9254 : GTECH_NOT port map( A => n6579, Z => n7292);
   U9255 : GTECH_NAND2 port map( A => n6525, B => n6526, Z => n6579);
   U9256 : GTECH_NOT port map( A => n11128, Z => n6526);
   U9257 : GTECH_NAND2 port map( A => n6511, B => n6543, Z => n9497);
   U9258 : GTECH_NAND2 port map( A => n9500, B => n11128, Z => n6543);
   U9259 : GTECH_NOR2 port map( A => n9483, B => n7312, Z => n9500);
   U9260 : GTECH_NAND2 port map( A => n9501, B => n9502, Z => n7312);
   U9261 : GTECH_NOR2 port map( A => n11129, B => n11130, Z => n9502);
   U9262 : GTECH_NOR2 port map( A => n7300, B => n6525, Z => n9501);
   U9263 : GTECH_NOT port map( A => n11127, Z => n6525);
   U9264 : GTECH_NOT port map( A => n11131, Z => n7300);
   U9265 : GTECH_NOT port map( A => n11132, Z => n9483);
   U9266 : GTECH_NAND2 port map( A => n9503, B => n9504, Z => n6511);
   U9267 : GTECH_NOR2 port map( A => n11128, B => n11129, Z => n9504);
   U9268 : GTECH_NOR2 port map( A => n11131, B => n6557, Z => n9503);
   U9269 : GTECH_NAND2 port map( A => n11130, B => n11127, Z => n6557);
   U9270 : GTECH_NOR2 port map( A => n11133, B => n11134, Z => n9472);
   U9271 : GTECH_NOR2 port map( A => n6147, B => n6360, Z => n9438);
   U9272 : GTECH_NAND2 port map( A => n9505, B => n9506, Z => n6360);
   U9273 : GTECH_NAND2 port map( A => n9507, B => n9508, Z => n9506);
   U9274 : GTECH_NOR2 port map( A => n9509, B => n9510, Z => n9508);
   U9275 : GTECH_NAND2 port map( A => n6280, B => n6337, Z => n9510);
   U9276 : GTECH_NAND2 port map( A => n9511, B => n6373, Z => n6337);
   U9277 : GTECH_NOR2 port map( A => n9512, B => n9513, Z => n9511);
   U9278 : GTECH_NOR2 port map( A => n11111, B => n7245, Z => n9513);
   U9279 : GTECH_NOR2 port map( A => n6345, B => n6294, Z => n9512);
   U9280 : GTECH_NAND2 port map( A => n9514, B => n9515, Z => n6280);
   U9281 : GTECH_NOR2 port map( A => n11115, B => n9516, Z => n9515);
   U9282 : GTECH_NOR2 port map( A => n6293, B => n6288, Z => n9514);
   U9283 : GTECH_NOT port map( A => n6281, Z => n9509);
   U9284 : GTECH_NAND2 port map( A => n9517, B => n7253, Z => n6281);
   U9285 : GTECH_NOR2 port map( A => n9518, B => n6294, Z => n7253);
   U9286 : GTECH_NAND2 port map( A => n6295, B => n6293, Z => n9518);
   U9287 : GTECH_NOR2 port map( A => n11115, B => n6296, Z => n9517);
   U9288 : GTECH_NOR2 port map( A => n6341, B => n9519, Z => n9507);
   U9289 : GTECH_NAND2 port map( A => n9520, B => n9521, Z => n9519);
   U9290 : GTECH_NAND2 port map( A => n9522, B => n6345, Z => n9521);
   U9291 : GTECH_NOR2 port map( A => n6316, B => n6343, Z => n6345);
   U9292 : GTECH_NOT port map( A => n6368, Z => n6343);
   U9293 : GTECH_NAND2 port map( A => n11116, B => n6276, Z => n6368);
   U9294 : GTECH_NOT port map( A => n11117, Z => n6276);
   U9295 : GTECH_NOT port map( A => n6283, Z => n6316);
   U9296 : GTECH_NAND2 port map( A => n9523, B => n11115, Z => n6283);
   U9297 : GTECH_NOR2 port map( A => n11116, B => n11117, Z => n9523);
   U9298 : GTECH_NOR2 port map( A => n11113, B => n9524, Z => n9522);
   U9299 : GTECH_NOR2 port map( A => n6373, B => n6376, Z => n9524);
   U9300 : GTECH_NOT port map( A => n6288, Z => n6376);
   U9301 : GTECH_NAND2 port map( A => n11112, B => n6294, Z => n6288);
   U9302 : GTECH_NAND2 port map( A => n9525, B => n6373, Z => n9520);
   U9303 : GTECH_NOR2 port map( A => n6296, B => n11112, Z => n6373);
   U9304 : GTECH_NOR2 port map( A => n6294, B => n7239, Z => n9525);
   U9305 : GTECH_NAND2 port map( A => n9526, B => n11113, Z => n7239);
   U9306 : GTECH_NOR2 port map( A => n9516, B => n7254, Z => n9526);
   U9307 : GTECH_NOT port map( A => n11116, Z => n9516);
   U9308 : GTECH_NAND2 port map( A => n6313, B => n9527, Z => n6341);
   U9309 : GTECH_NOT port map( A => n9528, Z => n9527);
   U9310 : GTECH_NOR2 port map( A => n9529, B => n6324, Z => n9528);
   U9311 : GTECH_NAND2 port map( A => n7244, B => n6296, Z => n6324);
   U9312 : GTECH_NOT port map( A => n11114, Z => n6296);
   U9313 : GTECH_NOT port map( A => n6350, Z => n7244);
   U9314 : GTECH_NAND2 port map( A => n6294, B => n6295, Z => n6350);
   U9315 : GTECH_NOT port map( A => n11112, Z => n6295);
   U9316 : GTECH_NOT port map( A => n11111, Z => n6294);
   U9317 : GTECH_NAND2 port map( A => n7254, B => n11113, Z => n9529);
   U9318 : GTECH_NAND2 port map( A => n9530, B => n7245, Z => n6313);
   U9319 : GTECH_NOR2 port map( A => n9531, B => n7254, Z => n7245);
   U9320 : GTECH_NOT port map( A => n11115, Z => n7254);
   U9321 : GTECH_NAND2 port map( A => n6293, B => n11116, Z => n9531);
   U9322 : GTECH_NOT port map( A => n11113, Z => n6293);
   U9323 : GTECH_NOR2 port map( A => n11114, B => n6323, Z => n9530);
   U9324 : GTECH_NAND2 port map( A => n11111, B => n11112, Z => n6323);
   U9325 : GTECH_NOR2 port map( A => n11117, B => n11118, Z => n9505);
   U9326 : GTECH_NOR2 port map( A => n9532, B => n6036, Z => n9435);
   U9327 : GTECH_NAND2 port map( A => n9533, B => n9534, Z => n6036);
   U9328 : GTECH_NOT port map( A => n6024, Z => n9534);
   U9329 : GTECH_NAND2 port map( A => n9535, B => n6071, Z => n6024);
   U9330 : GTECH_NOR2 port map( A => n11142, B => n6080, Z => n9533);
   U9331 : GTECH_NOT port map( A => n6133, Z => n6080);
   U9332 : GTECH_NOR2 port map( A => n9536, B => n9537, Z => n9532);
   U9333 : GTECH_NOR2 port map( A => n11141, B => n9538, Z => n9537);
   U9334 : GTECH_NOR2 port map( A => n9539, B => n9540, Z => n9538);
   U9335 : GTECH_NAND2 port map( A => n6209, B => n9541, Z => n9540);
   U9336 : GTECH_NAND2 port map( A => n6158, B => n9542, Z => n9541);
   U9337 : GTECH_NAND2 port map( A => n6160, B => n9543, Z => n9542);
   U9338 : GTECH_NOT port map( A => n9544, Z => n9543);
   U9339 : GTECH_NOR2 port map( A => n6164, B => n11137, Z => n6158);
   U9340 : GTECH_NOR2 port map( A => n9545, B => n9546, Z => n6209);
   U9341 : GTECH_NOR2 port map( A => n9547, B => n6217, Z => n9546);
   U9342 : GTECH_NAND2 port map( A => n11137, B => n6114, Z => n6217);
   U9343 : GTECH_NAND2 port map( A => n7275, B => n6216, Z => n9547);
   U9344 : GTECH_NOT port map( A => n7276, Z => n6216);
   U9345 : GTECH_NAND2 port map( A => n9548, B => n6054, Z => n7276);
   U9346 : GTECH_NOT port map( A => n11139, Z => n7275);
   U9347 : GTECH_NAND2 port map( A => n6065, B => n6123, Z => n9545);
   U9348 : GTECH_NAND2 port map( A => n9549, B => n9544, Z => n6123);
   U9349 : GTECH_NOR2 port map( A => n11139, B => n7267, Z => n9549);
   U9350 : GTECH_NAND2 port map( A => n9550, B => n9551, Z => n6065);
   U9351 : GTECH_NOR2 port map( A => n11138, B => n7267, Z => n9551);
   U9352 : GTECH_NAND2 port map( A => n11135, B => n9552, Z => n7267);
   U9353 : GTECH_NOR2 port map( A => n6054, B => n7286, Z => n9550);
   U9354 : GTECH_NOT port map( A => n11136, Z => n6054);
   U9355 : GTECH_NAND2 port map( A => n6205, B => n6120, Z => n9539);
   U9356 : GTECH_NAND2 port map( A => n9553, B => n9554, Z => n6120);
   U9357 : GTECH_NOR2 port map( A => n11139, B => n9552, Z => n9554);
   U9358 : GTECH_NOR2 port map( A => n6218, B => n6160, Z => n9553);
   U9359 : GTECH_NAND2 port map( A => n11136, B => n9548, Z => n6160);
   U9360 : GTECH_NOT port map( A => n11140, Z => n6218);
   U9361 : GTECH_NAND2 port map( A => n9555, B => n9544, Z => n6205);
   U9362 : GTECH_NOR2 port map( A => n9556, B => n9557, Z => n9555);
   U9363 : GTECH_NOR2 port map( A => n11135, B => n9558, Z => n9557);
   U9364 : GTECH_NOR2 port map( A => n11137, B => n7286, Z => n9558);
   U9365 : GTECH_NAND2 port map( A => n11140, B => n11139, Z => n7286);
   U9366 : GTECH_NOR2 port map( A => n6046, B => n9548, Z => n9556);
   U9367 : GTECH_NOT port map( A => n6164, Z => n6046);
   U9368 : GTECH_NAND2 port map( A => n7268, B => n9559, Z => n6164);
   U9369 : GTECH_NAND2 port map( A => n9560, B => n11139, Z => n7268);
   U9370 : GTECH_NOR2 port map( A => n11140, B => n11141, Z => n9560);
   U9371 : GTECH_NOR2 port map( A => n9561, B => n9562, Z => n9536);
   U9372 : GTECH_NAND2 port map( A => n9544, B => n6124, Z => n9562);
   U9373 : GTECH_NOT port map( A => n9559, Z => n6124);
   U9374 : GTECH_NAND2 port map( A => n11140, B => n6101, Z => n9559);
   U9375 : GTECH_NOT port map( A => n11141, Z => n6101);
   U9376 : GTECH_NOR2 port map( A => n6114, B => n11136, Z => n9544);
   U9377 : GTECH_NOT port map( A => n11138, Z => n6114);
   U9378 : GTECH_NAND2 port map( A => n6050, B => n11139, Z => n9561);
   U9379 : GTECH_NOR2 port map( A => n9552, B => n9548, Z => n6050);
   U9380 : GTECH_NOT port map( A => n11135, Z => n9548);
   U9381 : GTECH_NOT port map( A => n11137, Z => n9552);
   U9382 : GTECH_NOR2 port map( A => n9563, B => n9564, Z => n9433);
   U9383 : GTECH_NOR2 port map( A => n6071, B => n9565, Z => n9564);
   U9384 : GTECH_NOR2 port map( A => n9566, B => n6074, Z => n9563);
   U9385 : GTECH_NAND2 port map( A => n6230, B => n6071, Z => n6074);
   U9386 : GTECH_NOT port map( A => n6178, Z => n6071);
   U9387 : GTECH_NOR2 port map( A => n7097, B => n9567, Z => n6178);
   U9388 : GTECH_NOR2 port map( A => n7182, B => n7458, Z => n9567);
   U9389 : GTECH_NAND2 port map( A => enable, B => n6230, Z => n7458);
   U9390 : GTECH_NOR2 port map( A => n9568, B => n9569, Z => n7097);
   U9391 : GTECH_NAND2 port map( A => enable, B => reset_b, Z => n9568);
   U9392 : GTECH_NOR2 port map( A => n9570, B => n9571, Z => n9566);
   U9393 : GTECH_NAND2 port map( A => n9572, B => n9573, Z => n9571);
   U9394 : GTECH_NAND2 port map( A => n11102, B => n6031, Z => n9573);
   U9395 : GTECH_NAND2 port map( A => n11104, B => n6079, Z => n9572);
   U9396 : GTECH_NOT port map( A => n9574, Z => n9570);
   U9397 : GTECH_NAND2 port map( A => n6133, B => n11103, Z => n9574);
   U9398 : GTECH_NAND2 port map( A => n9575, B => n9576, Z => n5522);
   U9399 : GTECH_NOR2 port map( A => n9577, B => n9578, Z => n9576);
   U9400 : GTECH_NOR2 port map( A => n9579, B => n7907, Z => n9578);
   U9401 : GTECH_NOR2 port map( A => n8277, B => n9580, Z => n9577);
   U9402 : GTECH_NOT port map( A => mem_read(7), Z => n8277);
   U9403 : GTECH_NOR2 port map( A => n9581, B => n9582, Z => n9575);
   U9404 : GTECH_NOR2 port map( A => n5441, B => n7439, Z => n9582);
   U9405 : GTECH_NOR2 port map( A => n7574, B => n9583, Z => n9581);
   U9406 : GTECH_NAND2 port map( A => n9584, B => n9585, Z => n5521);
   U9407 : GTECH_NOR2 port map( A => n9586, B => n9587, Z => n9585);
   U9408 : GTECH_NOR2 port map( A => n9579, B => n7906, Z => n9587);
   U9409 : GTECH_NOR2 port map( A => n8272, B => n9580, Z => n9586);
   U9410 : GTECH_NOT port map( A => mem_read(6), Z => n8272);
   U9411 : GTECH_NOR2 port map( A => n9588, B => n9589, Z => n9584);
   U9412 : GTECH_NOR2 port map( A => n5440, B => n7439, Z => n9589);
   U9413 : GTECH_NOR2 port map( A => n7555, B => n9583, Z => n9588);
   U9414 : GTECH_NAND2 port map( A => n9590, B => n9591, Z => n5520);
   U9415 : GTECH_NOR2 port map( A => n9592, B => n9593, Z => n9591);
   U9416 : GTECH_NOR2 port map( A => n9579, B => n7915, Z => n9593);
   U9417 : GTECH_NOR2 port map( A => n8267, B => n9580, Z => n9592);
   U9418 : GTECH_NOT port map( A => mem_read(5), Z => n8267);
   U9419 : GTECH_NOR2 port map( A => n9594, B => n9595, Z => n9590);
   U9420 : GTECH_NOR2 port map( A => n5439, B => n7439, Z => n9595);
   U9421 : GTECH_NOR2 port map( A => n6815, B => n9583, Z => n9594);
   U9422 : GTECH_NAND2 port map( A => n9596, B => n9597, Z => n5519);
   U9423 : GTECH_NOR2 port map( A => n9598, B => n9599, Z => n9597);
   U9424 : GTECH_NOR2 port map( A => n9579, B => n7914, Z => n9599);
   U9425 : GTECH_NOR2 port map( A => n8262, B => n9580, Z => n9598);
   U9426 : GTECH_NOT port map( A => mem_read(4), Z => n8262);
   U9427 : GTECH_NOR2 port map( A => n9600, B => n9601, Z => n9596);
   U9428 : GTECH_NOR2 port map( A => n5438, B => n7439, Z => n9601);
   U9429 : GTECH_NOR2 port map( A => n6763, B => n9583, Z => n9600);
   U9430 : GTECH_NAND2 port map( A => n9602, B => n9603, Z => n5518);
   U9431 : GTECH_NOR2 port map( A => n9604, B => n9605, Z => n9603);
   U9432 : GTECH_NOR2 port map( A => n9579, B => n7913, Z => n9605);
   U9433 : GTECH_NOR2 port map( A => n8257, B => n9580, Z => n9604);
   U9434 : GTECH_NOT port map( A => mem_read(3), Z => n8257);
   U9435 : GTECH_NOR2 port map( A => n9606, B => n9607, Z => n9602);
   U9436 : GTECH_NOR2 port map( A => n5437, B => n7439, Z => n9607);
   U9437 : GTECH_NOR2 port map( A => n6698, B => n9583, Z => n9606);
   U9438 : GTECH_NAND2 port map( A => n9608, B => n9609, Z => n5517);
   U9439 : GTECH_NOR2 port map( A => n9610, B => n9611, Z => n9609);
   U9440 : GTECH_NOR2 port map( A => n9579, B => n7894, Z => n9611);
   U9441 : GTECH_NOR2 port map( A => n8252, B => n9580, Z => n9610);
   U9442 : GTECH_NOT port map( A => mem_read(2), Z => n8252);
   U9443 : GTECH_NOR2 port map( A => n9612, B => n9613, Z => n9608);
   U9444 : GTECH_NOR2 port map( A => n5436, B => n7439, Z => n9613);
   U9445 : GTECH_NOR2 port map( A => n6633, B => n9583, Z => n9612);
   U9446 : GTECH_NAND2 port map( A => n9614, B => n9615, Z => n5516);
   U9447 : GTECH_NOR2 port map( A => n9616, B => n9617, Z => n9615);
   U9448 : GTECH_NOR2 port map( A => n9579, B => n7944, Z => n9617);
   U9449 : GTECH_NOR2 port map( A => n8036, B => n9580, Z => n9616);
   U9450 : GTECH_NOT port map( A => mem_read(1), Z => n8036);
   U9451 : GTECH_NOR2 port map( A => n9618, B => n9619, Z => n9614);
   U9452 : GTECH_NOR2 port map( A => n5435, B => n7439, Z => n9619);
   U9453 : GTECH_NOR2 port map( A => n8050, B => n9583, Z => n9618);
   U9454 : GTECH_NAND2 port map( A => n9620, B => n9621, Z => n5515);
   U9455 : GTECH_NOR2 port map( A => n9622, B => n9623, Z => n9621);
   U9456 : GTECH_NOR2 port map( A => n9579, B => n7927, Z => n9623);
   U9457 : GTECH_NOR2 port map( A => n7477, B => n9624, Z => n9579);
   U9458 : GTECH_NOR2 port map( A => n9625, B => n9626, Z => n9624);
   U9459 : GTECH_NOT port map( A => n9627, Z => n7477);
   U9460 : GTECH_NOR2 port map( A => n8242, B => n9580, Z => n9622);
   U9461 : GTECH_NAND2 port map( A => n7474, B => n9625, Z => n9580);
   U9462 : GTECH_NAND2 port map( A => stackA_0_port, B => stackA_1_port, Z => 
                           n9625);
   U9463 : GTECH_NOT port map( A => mem_read(0), Z => n8242);
   U9464 : GTECH_NOR2 port map( A => n9628, B => n9629, Z => n9620);
   U9465 : GTECH_NOR2 port map( A => n5434, B => n7439, Z => n9629);
   U9466 : GTECH_NOR2 port map( A => n8000, B => n9583, Z => n9628);
   U9467 : GTECH_NAND2 port map( A => n9630, B => n9631, Z => n5514);
   U9468 : GTECH_NOR2 port map( A => n9632, B => n9633, Z => n9631);
   U9469 : GTECH_NAND2 port map( A => n9634, B => n9635, Z => n9633);
   U9470 : GTECH_NAND2 port map( A => n9636, B => mem_read(31), Z => n9635);
   U9471 : GTECH_NAND2 port map( A => n9637, B => stackB_7_port, Z => n9634);
   U9472 : GTECH_NOR2 port map( A => n8015, B => n9583, Z => n9632);
   U9473 : GTECH_NOR2 port map( A => n9638, B => n9639, Z => n9630);
   U9474 : GTECH_NOR2 port map( A => n5465, B => n7439, Z => n9639);
   U9475 : GTECH_NOR2 port map( A => n9627, B => n7912, Z => n9638);
   U9476 : GTECH_NAND2 port map( A => n9640, B => n9641, Z => n5513);
   U9477 : GTECH_NOR2 port map( A => n9642, B => n9643, Z => n9641);
   U9478 : GTECH_NAND2 port map( A => n9644, B => n9645, Z => n9643);
   U9479 : GTECH_NAND2 port map( A => n9636, B => mem_read(30), Z => n9645);
   U9480 : GTECH_NAND2 port map( A => n9637, B => stackB_6_port, Z => n9644);
   U9481 : GTECH_NOR2 port map( A => n8393, B => n9583, Z => n9642);
   U9482 : GTECH_NOR2 port map( A => n9646, B => n9647, Z => n9640);
   U9483 : GTECH_NOR2 port map( A => n5464, B => n7439, Z => n9647);
   U9484 : GTECH_NOR2 port map( A => n9627, B => n7895, Z => n9646);
   U9485 : GTECH_NAND2 port map( A => n9648, B => n9649, Z => n5512);
   U9486 : GTECH_NOR2 port map( A => n9650, B => n9651, Z => n9649);
   U9487 : GTECH_NAND2 port map( A => n9652, B => n9653, Z => n9651);
   U9488 : GTECH_NAND2 port map( A => n9636, B => mem_read(29), Z => n9653);
   U9489 : GTECH_NAND2 port map( A => n9637, B => stackB_5_port, Z => n9652);
   U9490 : GTECH_NOR2 port map( A => n6620, B => n9583, Z => n9650);
   U9491 : GTECH_NOR2 port map( A => n9654, B => n9655, Z => n9648);
   U9492 : GTECH_NOR2 port map( A => n5463, B => n7439, Z => n9655);
   U9493 : GTECH_NOR2 port map( A => n9627, B => n7893, Z => n9654);
   U9494 : GTECH_NAND2 port map( A => n9656, B => n9657, Z => n5511);
   U9495 : GTECH_NOR2 port map( A => n9658, B => n9659, Z => n9657);
   U9496 : GTECH_NAND2 port map( A => n9660, B => n9661, Z => n9659);
   U9497 : GTECH_NAND2 port map( A => n9636, B => mem_read(28), Z => n9661);
   U9498 : GTECH_NAND2 port map( A => n9637, B => stackB_4_port, Z => n9660);
   U9499 : GTECH_NOR2 port map( A => n6688, B => n9583, Z => n9658);
   U9500 : GTECH_NOR2 port map( A => n9662, B => n9663, Z => n9656);
   U9501 : GTECH_NOR2 port map( A => n5462, B => n7439, Z => n9663);
   U9502 : GTECH_NOR2 port map( A => n9627, B => n7892, Z => n9662);
   U9503 : GTECH_NAND2 port map( A => n9664, B => n9665, Z => n5510);
   U9504 : GTECH_NOR2 port map( A => n9666, B => n9667, Z => n9665);
   U9505 : GTECH_NAND2 port map( A => n9668, B => n9669, Z => n9667);
   U9506 : GTECH_NAND2 port map( A => n9636, B => mem_read(27), Z => n9669);
   U9507 : GTECH_NAND2 port map( A => n9637, B => stackB_3_port, Z => n9668);
   U9508 : GTECH_NOR2 port map( A => n6784, B => n9583, Z => n9666);
   U9509 : GTECH_NOR2 port map( A => n9670, B => n9671, Z => n9664);
   U9510 : GTECH_NOR2 port map( A => n5461, B => n7439, Z => n9671);
   U9511 : GTECH_NOR2 port map( A => n9627, B => n7901, Z => n9670);
   U9512 : GTECH_NAND2 port map( A => n9672, B => n9673, Z => n5509);
   U9513 : GTECH_NOR2 port map( A => n9674, B => n9675, Z => n9673);
   U9514 : GTECH_NAND2 port map( A => n9676, B => n9677, Z => n9675);
   U9515 : GTECH_NAND2 port map( A => n9636, B => mem_read(26), Z => n9677);
   U9516 : GTECH_NAND2 port map( A => n9637, B => stackB_2_port, Z => n9676);
   U9517 : GTECH_NOR2 port map( A => n6838, B => n9583, Z => n9674);
   U9518 : GTECH_NOR2 port map( A => n9678, B => n9679, Z => n9672);
   U9519 : GTECH_NOR2 port map( A => n5460, B => n7439, Z => n9679);
   U9520 : GTECH_NOR2 port map( A => n9627, B => n7900, Z => n9678);
   U9521 : GTECH_NAND2 port map( A => n9680, B => n9681, Z => n5508);
   U9522 : GTECH_NOR2 port map( A => n9682, B => n9683, Z => n9681);
   U9523 : GTECH_NAND2 port map( A => n9684, B => n9685, Z => n9683);
   U9524 : GTECH_NAND2 port map( A => n9636, B => mem_read(25), Z => n9685);
   U9525 : GTECH_NAND2 port map( A => n9637, B => stackB_1_port, Z => n9684);
   U9526 : GTECH_NOR2 port map( A => n8370, B => n9583, Z => n9682);
   U9527 : GTECH_NOR2 port map( A => n9686, B => n9687, Z => n9680);
   U9528 : GTECH_NOR2 port map( A => n5459, B => n7439, Z => n9687);
   U9529 : GTECH_NOR2 port map( A => n9627, B => n7899, Z => n9686);
   U9530 : GTECH_NAND2 port map( A => n9688, B => n9689, Z => n5507);
   U9531 : GTECH_NOR2 port map( A => n9690, B => n9691, Z => n9689);
   U9532 : GTECH_NAND2 port map( A => n9692, B => n9693, Z => n9691);
   U9533 : GTECH_NAND2 port map( A => n9636, B => mem_read(24), Z => n9693);
   U9534 : GTECH_NOR2 port map( A => n9626, B => n8150, Z => n9636);
   U9535 : GTECH_NAND2 port map( A => n9637, B => stackB_0_port, Z => n9692);
   U9536 : GTECH_NOT port map( A => n9694, Z => n9637);
   U9537 : GTECH_NAND2 port map( A => n7474, B => n8150, Z => n9694);
   U9538 : GTECH_NOR2 port map( A => stackA_1_port, B => stackA_0_port, Z => 
                           n8150);
   U9539 : GTECH_NOR2 port map( A => n8165, B => n9583, Z => n9690);
   U9540 : GTECH_NOR2 port map( A => n9695, B => n9696, Z => n9688);
   U9541 : GTECH_NOR2 port map( A => n5458, B => n7439, Z => n9696);
   U9542 : GTECH_NOR2 port map( A => n9627, B => n7898, Z => n9695);
   U9543 : GTECH_NAND2 port map( A => n9697, B => n9698, Z => n5506);
   U9544 : GTECH_NOR2 port map( A => n9699, B => n9700, Z => n9698);
   U9545 : GTECH_NAND2 port map( A => n9701, B => n9702, Z => n9700);
   U9546 : GTECH_NAND2 port map( A => n9703, B => mem_read(23), Z => n9702);
   U9547 : GTECH_NAND2 port map( A => n9704, B => stackB_7_port, Z => n9701);
   U9548 : GTECH_NOR2 port map( A => n8360, B => n9583, Z => n9699);
   U9549 : GTECH_NOR2 port map( A => n9705, B => n9706, Z => n9697);
   U9550 : GTECH_NOR2 port map( A => n5457, B => n7439, Z => n9706);
   U9551 : GTECH_NOR2 port map( A => n9627, B => n7938, Z => n9705);
   U9552 : GTECH_NAND2 port map( A => n9707, B => n9708, Z => n5505);
   U9553 : GTECH_NOR2 port map( A => n9709, B => n9710, Z => n9708);
   U9554 : GTECH_NAND2 port map( A => n9711, B => n9712, Z => n9710);
   U9555 : GTECH_NAND2 port map( A => n9703, B => mem_read(22), Z => n9712);
   U9556 : GTECH_NAND2 port map( A => n9704, B => stackB_6_port, Z => n9711);
   U9557 : GTECH_NOR2 port map( A => n8354, B => n9583, Z => n9709);
   U9558 : GTECH_NOR2 port map( A => n9713, B => n9714, Z => n9707);
   U9559 : GTECH_NOR2 port map( A => n5456, B => n7439, Z => n9714);
   U9560 : GTECH_NOR2 port map( A => n9627, B => n7937, Z => n9713);
   U9561 : GTECH_NAND2 port map( A => n9715, B => n9716, Z => n5504);
   U9562 : GTECH_NOR2 port map( A => n9717, B => n9718, Z => n9716);
   U9563 : GTECH_NAND2 port map( A => n9719, B => n9720, Z => n9718);
   U9564 : GTECH_NAND2 port map( A => n9703, B => mem_read(21), Z => n9720);
   U9565 : GTECH_NAND2 port map( A => n9704, B => stackB_5_port, Z => n9719);
   U9566 : GTECH_NOR2 port map( A => n8348, B => n9583, Z => n9717);
   U9567 : GTECH_NOR2 port map( A => n9721, B => n9722, Z => n9715);
   U9568 : GTECH_NOR2 port map( A => n5455, B => n7439, Z => n9722);
   U9569 : GTECH_NOR2 port map( A => n9627, B => n7936, Z => n9721);
   U9570 : GTECH_NAND2 port map( A => n9723, B => n9724, Z => n5503);
   U9571 : GTECH_NOR2 port map( A => n9725, B => n9726, Z => n9724);
   U9572 : GTECH_NAND2 port map( A => n9727, B => n9728, Z => n9726);
   U9573 : GTECH_NAND2 port map( A => n9703, B => mem_read(20), Z => n9728);
   U9574 : GTECH_NAND2 port map( A => n9704, B => stackB_4_port, Z => n9727);
   U9575 : GTECH_NOR2 port map( A => n8342, B => n9583, Z => n9725);
   U9576 : GTECH_NOR2 port map( A => n9729, B => n9730, Z => n9723);
   U9577 : GTECH_NOR2 port map( A => n5454, B => n7439, Z => n9730);
   U9578 : GTECH_NOR2 port map( A => n9627, B => n7935, Z => n9729);
   U9579 : GTECH_NAND2 port map( A => n9731, B => n9732, Z => n5502);
   U9580 : GTECH_NOR2 port map( A => n9733, B => n9734, Z => n9732);
   U9581 : GTECH_NAND2 port map( A => n9735, B => n9736, Z => n9734);
   U9582 : GTECH_NAND2 port map( A => n9703, B => mem_read(19), Z => n9736);
   U9583 : GTECH_NAND2 port map( A => n9704, B => stackB_3_port, Z => n9735);
   U9584 : GTECH_NOR2 port map( A => n8337, B => n9583, Z => n9733);
   U9585 : GTECH_NOR2 port map( A => n9737, B => n9738, Z => n9731);
   U9586 : GTECH_NOR2 port map( A => n5453, B => n7439, Z => n9738);
   U9587 : GTECH_NOR2 port map( A => n9627, B => n7943, Z => n9737);
   U9588 : GTECH_NOT port map( A => stackB_19_port, Z => n7943);
   U9589 : GTECH_NAND2 port map( A => n9739, B => n9740, Z => n5501);
   U9590 : GTECH_NOR2 port map( A => n9741, B => n9742, Z => n9740);
   U9591 : GTECH_NAND2 port map( A => n9743, B => n9744, Z => n9742);
   U9592 : GTECH_NAND2 port map( A => n9703, B => mem_read(18), Z => n9744);
   U9593 : GTECH_NAND2 port map( A => n9704, B => stackB_2_port, Z => n9743);
   U9594 : GTECH_NOR2 port map( A => n8332, B => n9583, Z => n9741);
   U9595 : GTECH_NOR2 port map( A => n9745, B => n9746, Z => n9739);
   U9596 : GTECH_NOR2 port map( A => n5452, B => n7439, Z => n9746);
   U9597 : GTECH_NOR2 port map( A => n9627, B => n7942, Z => n9745);
   U9598 : GTECH_NAND2 port map( A => n9747, B => n9748, Z => n5500);
   U9599 : GTECH_NOR2 port map( A => n9749, B => n9750, Z => n9748);
   U9600 : GTECH_NAND2 port map( A => n9751, B => n9752, Z => n9750);
   U9601 : GTECH_NAND2 port map( A => n9703, B => mem_read(17), Z => n9752);
   U9602 : GTECH_NAND2 port map( A => n9704, B => stackB_1_port, Z => n9751);
   U9603 : GTECH_NOR2 port map( A => n8327, B => n9583, Z => n9749);
   U9604 : GTECH_NOR2 port map( A => n9753, B => n9754, Z => n9747);
   U9605 : GTECH_NOR2 port map( A => n5451, B => n7439, Z => n9754);
   U9606 : GTECH_NOR2 port map( A => n9627, B => n7941, Z => n9753);
   U9607 : GTECH_NAND2 port map( A => n9755, B => n9756, Z => n5499);
   U9608 : GTECH_NOR2 port map( A => n9757, B => n9758, Z => n9756);
   U9609 : GTECH_NAND2 port map( A => n9759, B => n9760, Z => n9758);
   U9610 : GTECH_NAND2 port map( A => n9703, B => mem_read(16), Z => n9760);
   U9611 : GTECH_NOR2 port map( A => n9626, B => n8153, Z => n9703);
   U9612 : GTECH_NAND2 port map( A => n9704, B => stackB_0_port, Z => n9759);
   U9613 : GTECH_NOT port map( A => n9761, Z => n9704);
   U9614 : GTECH_NAND2 port map( A => n7474, B => n8153, Z => n9761);
   U9615 : GTECH_NOR2 port map( A => n8000, B => stackA_1_port, Z => n8153);
   U9616 : GTECH_NOR2 port map( A => n6863, B => n9583, Z => n9757);
   U9617 : GTECH_NOR2 port map( A => n9762, B => n9763, Z => n9755);
   U9618 : GTECH_NOR2 port map( A => n5450, B => n7439, Z => n9763);
   U9619 : GTECH_NOR2 port map( A => n9627, B => n6874, Z => n9762);
   U9620 : GTECH_NOT port map( A => stackB_16_port, Z => n6874);
   U9621 : GTECH_NAND2 port map( A => n9764, B => n9765, Z => n5498);
   U9622 : GTECH_NOR2 port map( A => n9766, B => n9767, Z => n9765);
   U9623 : GTECH_NAND2 port map( A => n9768, B => n9769, Z => n9767);
   U9624 : GTECH_NAND2 port map( A => n7475, B => stackA_15_port, Z => n9769);
   U9625 : GTECH_NAND2 port map( A => n9770, B => mem_read(15), Z => n9768);
   U9626 : GTECH_NOR2 port map( A => n7907, B => n9771, Z => n9766);
   U9627 : GTECH_NOT port map( A => stackB_7_port, Z => n7907);
   U9628 : GTECH_NOR2 port map( A => n9772, B => n9773, Z => n9764);
   U9629 : GTECH_NOR2 port map( A => n5449, B => n7439, Z => n9773);
   U9630 : GTECH_NOR2 port map( A => n9627, B => n7924, Z => n9772);
   U9631 : GTECH_NAND2 port map( A => n9774, B => n9775, Z => n5497);
   U9632 : GTECH_NOR2 port map( A => n9776, B => n9777, Z => n9775);
   U9633 : GTECH_NAND2 port map( A => n9778, B => n9779, Z => n9777);
   U9634 : GTECH_NAND2 port map( A => n7475, B => stackA_14_port, Z => n9779);
   U9635 : GTECH_NAND2 port map( A => n9770, B => mem_read(14), Z => n9778);
   U9636 : GTECH_NOR2 port map( A => n7906, B => n9771, Z => n9776);
   U9637 : GTECH_NOT port map( A => stackB_6_port, Z => n7906);
   U9638 : GTECH_NOR2 port map( A => n9780, B => n9781, Z => n9774);
   U9639 : GTECH_NOR2 port map( A => n5448, B => n7439, Z => n9781);
   U9640 : GTECH_NOR2 port map( A => n9627, B => n7923, Z => n9780);
   U9641 : GTECH_NAND2 port map( A => n9782, B => n9783, Z => n5496);
   U9642 : GTECH_NOR2 port map( A => n9784, B => n9785, Z => n9783);
   U9643 : GTECH_NAND2 port map( A => n9786, B => n9787, Z => n9785);
   U9644 : GTECH_NAND2 port map( A => n7475, B => stackA_13_port, Z => n9787);
   U9645 : GTECH_NAND2 port map( A => n9770, B => mem_read(13), Z => n9786);
   U9646 : GTECH_NOR2 port map( A => n7915, B => n9771, Z => n9784);
   U9647 : GTECH_NOT port map( A => stackB_5_port, Z => n7915);
   U9648 : GTECH_NOR2 port map( A => n9788, B => n9789, Z => n9782);
   U9649 : GTECH_NOR2 port map( A => n5447, B => n7439, Z => n9789);
   U9650 : GTECH_NOR2 port map( A => n9627, B => n7922, Z => n9788);
   U9651 : GTECH_NAND2 port map( A => n9790, B => n9791, Z => n5495);
   U9652 : GTECH_NOR2 port map( A => n9792, B => n9793, Z => n9791);
   U9653 : GTECH_NAND2 port map( A => n9794, B => n9795, Z => n9793);
   U9654 : GTECH_NAND2 port map( A => n7475, B => stackA_12_port, Z => n9795);
   U9655 : GTECH_NAND2 port map( A => n9770, B => mem_read(12), Z => n9794);
   U9656 : GTECH_NOR2 port map( A => n7914, B => n9771, Z => n9792);
   U9657 : GTECH_NOT port map( A => stackB_4_port, Z => n7914);
   U9658 : GTECH_NOR2 port map( A => n9796, B => n9797, Z => n9790);
   U9659 : GTECH_NOR2 port map( A => n5446, B => n7439, Z => n9797);
   U9660 : GTECH_NOR2 port map( A => n9627, B => n7930, Z => n9796);
   U9661 : GTECH_NAND2 port map( A => n9798, B => n9799, Z => n5494);
   U9662 : GTECH_NOR2 port map( A => n9800, B => n9801, Z => n9799);
   U9663 : GTECH_NAND2 port map( A => n9802, B => n9803, Z => n9801);
   U9664 : GTECH_NAND2 port map( A => n7475, B => stackA_11_port, Z => n9803);
   U9665 : GTECH_NAND2 port map( A => n9770, B => mem_read(11), Z => n9802);
   U9666 : GTECH_NOR2 port map( A => n7913, B => n9771, Z => n9800);
   U9667 : GTECH_NOT port map( A => stackB_3_port, Z => n7913);
   U9668 : GTECH_NOR2 port map( A => n9804, B => n9805, Z => n9798);
   U9669 : GTECH_NOR2 port map( A => n5445, B => n7439, Z => n9805);
   U9670 : GTECH_NOR2 port map( A => n9627, B => n7929, Z => n9804);
   U9671 : GTECH_NAND2 port map( A => n9806, B => n9807, Z => n5493);
   U9672 : GTECH_NOR2 port map( A => n9808, B => n9809, Z => n9807);
   U9673 : GTECH_NAND2 port map( A => n9810, B => n9811, Z => n9809);
   U9674 : GTECH_NAND2 port map( A => n7475, B => stackA_10_port, Z => n9811);
   U9675 : GTECH_NAND2 port map( A => n9770, B => mem_read(10), Z => n9810);
   U9676 : GTECH_NOR2 port map( A => n7894, B => n9771, Z => n9808);
   U9677 : GTECH_NOT port map( A => stackB_2_port, Z => n7894);
   U9678 : GTECH_NOR2 port map( A => n9812, B => n9813, Z => n9806);
   U9679 : GTECH_NOR2 port map( A => n5444, B => n7439, Z => n9813);
   U9680 : GTECH_NOR2 port map( A => n9627, B => n7928, Z => n9812);
   U9681 : GTECH_NAND2 port map( A => n9814, B => n9815, Z => n5492);
   U9682 : GTECH_NOR2 port map( A => n9816, B => n9817, Z => n9815);
   U9683 : GTECH_NAND2 port map( A => n9818, B => n9819, Z => n9817);
   U9684 : GTECH_NAND2 port map( A => n7475, B => stackA_9_port, Z => n9819);
   U9685 : GTECH_NAND2 port map( A => n9770, B => mem_read(9), Z => n9818);
   U9686 : GTECH_NOR2 port map( A => n7944, B => n9771, Z => n9816);
   U9687 : GTECH_NOT port map( A => stackB_1_port, Z => n7944);
   U9688 : GTECH_NOR2 port map( A => n9820, B => n9821, Z => n9814);
   U9689 : GTECH_NOR2 port map( A => n5443, B => n7439, Z => n9821);
   U9690 : GTECH_NOR2 port map( A => n9627, B => n7909, Z => n9820);
   U9691 : GTECH_NAND2 port map( A => n9822, B => n9823, Z => n5491);
   U9692 : GTECH_NOR2 port map( A => n9824, B => n9825, Z => n9823);
   U9693 : GTECH_NAND2 port map( A => n9826, B => n9827, Z => n9825);
   U9694 : GTECH_NAND2 port map( A => n7475, B => stackA_8_port, Z => n9827);
   U9695 : GTECH_NOT port map( A => n9583, Z => n7475);
   U9696 : GTECH_NAND2 port map( A => n9828, B => n9829, Z => n9583);
   U9697 : GTECH_NOR2 port map( A => in_mem_busy, B => n8552, Z => n9828);
   U9698 : GTECH_NAND2 port map( A => n9770, B => mem_read(8), Z => n9826);
   U9699 : GTECH_NOR2 port map( A => n9626, B => n8149, Z => n9770);
   U9700 : GTECH_NOR2 port map( A => n7927, B => n9771, Z => n9824);
   U9701 : GTECH_NAND2 port map( A => n7474, B => n8149, Z => n9771);
   U9702 : GTECH_NOR2 port map( A => n8050, B => stackA_0_port, Z => n8149);
   U9703 : GTECH_NOT port map( A => n9626, Z => n7474);
   U9704 : GTECH_NAND2 port map( A => n9830, B => n7969, Z => n9626);
   U9705 : GTECH_NOR2 port map( A => in_mem_busy, B => n7089, Z => n9830);
   U9706 : GTECH_NOT port map( A => stackB_0_port, Z => n7927);
   U9707 : GTECH_NOR2 port map( A => n9831, B => n9832, Z => n9822);
   U9708 : GTECH_NOR2 port map( A => n5442, B => n7439, Z => n9832);
   U9709 : GTECH_NOR2 port map( A => n9627, B => n7908, Z => n9831);
   U9710 : GTECH_NOR2 port map( A => n9833, B => n9834, Z => n9627);
   U9711 : GTECH_NOR2 port map( A => n8965, B => n8552, Z => n9834);
   U9712 : GTECH_NAND2 port map( A => n6891, B => n6230, Z => n8552);
   U9713 : GTECH_NOT port map( A => n7089, Z => n6891);
   U9714 : GTECH_NAND2 port map( A => n7442, B => n9835, Z => n8965);
   U9715 : GTECH_NAND2 port map( A => n9836, B => n9405, Z => n9835);
   U9716 : GTECH_NOR2 port map( A => n9837, B => n9838, Z => n9405);
   U9717 : GTECH_NAND2 port map( A => n9839, B => n8948, Z => n9837);
   U9718 : GTECH_NOR2 port map( A => n9840, B => n8414, Z => n9836);
   U9719 : GTECH_NOT port map( A => n9406, Z => n8414);
   U9720 : GTECH_NOR2 port map( A => n9841, B => n7882, Z => n9406);
   U9721 : GTECH_NAND2 port map( A => n9842, B => n9843, Z => n7882);
   U9722 : GTECH_NOR2 port map( A => n9844, B => n9845, Z => n9842);
   U9723 : GTECH_NOR2 port map( A => n9846, B => n9847, Z => n9845);
   U9724 : GTECH_NAND2 port map( A => n7138, B => n9848, Z => n9841);
   U9725 : GTECH_NAND2 port map( A => n9849, B => n8934, Z => n9848);
   U9726 : GTECH_NOR2 port map( A => n7089, B => n7448, Z => n9833);
   U9727 : GTECH_NAND2 port map( A => reset_b, B => n7439, Z => n7089);
   U9728 : GTECH_NAND2 port map( A => reset_b, B => n7451, Z => n7439);
   U9729 : GTECH_NAND2 port map( A => n9850, B => n9851, Z => n5490);
   U9730 : GTECH_NOR2 port map( A => n9852, B => n9853, Z => n9851);
   U9731 : GTECH_NAND2 port map( A => n9854, B => n9855, Z => n9853);
   U9732 : GTECH_NAND2 port map( A => n11093, B => n6673, Z => n9855);
   U9733 : GTECH_NOR2 port map( A => n9856, B => n9857, Z => n9854);
   U9734 : GTECH_NOR2 port map( A => n6683, B => n8393, Z => n9857);
   U9735 : GTECH_NOR2 port map( A => n6682, B => n8952, Z => n9856);
   U9736 : GTECH_NOT port map( A => sp_31_port, Z => n8952);
   U9737 : GTECH_NAND2 port map( A => n9858, B => n9859, Z => n9852);
   U9738 : GTECH_NAND2 port map( A => N3020, B => n6616, Z => n9859);
   U9739 : GTECH_NOR2 port map( A => n9860, B => n9861, Z => n9858);
   U9740 : GTECH_NOR2 port map( A => n8000, B => n6619, Z => n9861);
   U9741 : GTECH_NOT port map( A => stackA_0_port, Z => n8000);
   U9742 : GTECH_NOR2 port map( A => n8403, B => n9862, Z => n9860);
   U9743 : GTECH_NOT port map( A => mem_read(31), Z => n8403);
   U9744 : GTECH_NOR2 port map( A => n9863, B => n9864, Z => n9850);
   U9745 : GTECH_NAND2 port map( A => n9865, B => n9866, Z => n9864);
   U9746 : GTECH_NAND2 port map( A => pc_31_port, B => n6663, Z => n9866);
   U9747 : GTECH_NOR2 port map( A => n9867, B => n9868, Z => n9865);
   U9748 : GTECH_NOR2 port map( A => n6666, B => n8015, Z => n9868);
   U9749 : GTECH_NOR2 port map( A => stackA_31_port, B => n6667, Z => n9867);
   U9750 : GTECH_NAND2 port map( A => n9869, B => n9870, Z => n9863);
   U9751 : GTECH_NOT port map( A => n9871, Z => n9870);
   U9752 : GTECH_NAND2 port map( A => n9872, B => n9873, Z => n9871);
   U9753 : GTECH_NAND2 port map( A => n7976, B => n9874, Z => n9873);
   U9754 : GTECH_NAND2 port map( A => n9875, B => n9876, Z => n9874);
   U9755 : GTECH_NOR2 port map( A => n9877, B => n9878, Z => n9876);
   U9756 : GTECH_NAND2 port map( A => n9879, B => n9880, Z => n9878);
   U9757 : GTECH_NAND2 port map( A => stackA_24_port, B => n6854, Z => n9880);
   U9758 : GTECH_NAND2 port map( A => N1065, B => n6632, Z => n9879);
   U9759 : GTECH_NOT port map( A => n9881, Z => n9877);
   U9760 : GTECH_NOR2 port map( A => n9882, B => n6873, Z => n9881);
   U9761 : GTECH_NOR2 port map( A => n7912, B => n9883, Z => n9882);
   U9762 : GTECH_NOR2 port map( A => n6876, B => n9884, Z => n9883);
   U9763 : GTECH_NOR2 port map( A => n8015, B => n6878, Z => n9884);
   U9764 : GTECH_NOT port map( A => stackA_31_port, Z => n8015);
   U9765 : GTECH_NOT port map( A => stackB_31_port, Z => n7912);
   U9766 : GTECH_NOR2 port map( A => n9885, B => n9886, Z => n9875);
   U9767 : GTECH_NAND2 port map( A => n9887, B => n9888, Z => n9886);
   U9768 : GTECH_NAND2 port map( A => stackA_31_port, B => n6764, Z => n9888);
   U9769 : GTECH_NAND2 port map( A => N1348, B => n6639, Z => n9887);
   U9770 : GTECH_NOR2 port map( A => n8142, B => n7865, Z => n9885);
   U9771 : GTECH_NOT port map( A => n46, Z => n7865);
   U9772 : GTECH_NAND2 port map( A => N726, B => n6674, Z => n9872);
   U9773 : GTECH_NAND2 port map( A => n6675, B => n11092, Z => n9869);
   U9774 : GTECH_NAND2 port map( A => n9889, B => n9890, Z => n5489);
   U9775 : GTECH_NOR2 port map( A => n9891, B => n9892, Z => n9890);
   U9776 : GTECH_NAND2 port map( A => n9893, B => n9894, Z => n9892);
   U9777 : GTECH_NAND2 port map( A => n11091, B => n6673, Z => n9894);
   U9778 : GTECH_NOR2 port map( A => n9895, B => n9896, Z => n9893);
   U9779 : GTECH_NOR2 port map( A => n6620, B => n6683, Z => n9896);
   U9780 : GTECH_NOR2 port map( A => n6682, B => n8919, Z => n9895);
   U9781 : GTECH_NOT port map( A => sp_30_port, Z => n8919);
   U9782 : GTECH_NAND2 port map( A => n9897, B => n9898, Z => n9891);
   U9783 : GTECH_NAND2 port map( A => N3019, B => n6616, Z => n9898);
   U9784 : GTECH_NOR2 port map( A => n9899, B => n9900, Z => n9897);
   U9785 : GTECH_NOR2 port map( A => n8050, B => n6619, Z => n9900);
   U9786 : GTECH_NOT port map( A => stackA_1_port, Z => n8050);
   U9787 : GTECH_NOR2 port map( A => n8394, B => n9862, Z => n9899);
   U9788 : GTECH_NOT port map( A => mem_read(30), Z => n8394);
   U9789 : GTECH_NOR2 port map( A => n9901, B => n9902, Z => n9889);
   U9790 : GTECH_NAND2 port map( A => n9903, B => n9904, Z => n9902);
   U9791 : GTECH_NAND2 port map( A => pc_30_port, B => n6663, Z => n9904);
   U9792 : GTECH_NOR2 port map( A => n9905, B => n9906, Z => n9903);
   U9793 : GTECH_NOR2 port map( A => n6666, B => n8393, Z => n9906);
   U9794 : GTECH_NOR2 port map( A => stackA_30_port, B => n6667, Z => n9905);
   U9795 : GTECH_NAND2 port map( A => n9907, B => n9908, Z => n9901);
   U9796 : GTECH_NOT port map( A => n9909, Z => n9908);
   U9797 : GTECH_NAND2 port map( A => n9910, B => n9911, Z => n9909);
   U9798 : GTECH_NAND2 port map( A => n7976, B => n9912, Z => n9911);
   U9799 : GTECH_NAND2 port map( A => n9913, B => n9914, Z => n9912);
   U9800 : GTECH_NOR2 port map( A => n9915, B => n9916, Z => n9914);
   U9801 : GTECH_NAND2 port map( A => n9917, B => n9918, Z => n9916);
   U9802 : GTECH_NAND2 port map( A => stackA_23_port, B => n6854, Z => n9918);
   U9803 : GTECH_NAND2 port map( A => N1064, B => n6632, Z => n9917);
   U9804 : GTECH_NOT port map( A => n9919, Z => n9915);
   U9805 : GTECH_NOR2 port map( A => n9920, B => n6873, Z => n9919);
   U9806 : GTECH_NOR2 port map( A => n7895, B => n9921, Z => n9920);
   U9807 : GTECH_NOR2 port map( A => n6876, B => n9922, Z => n9921);
   U9808 : GTECH_NOR2 port map( A => n8393, B => n6878, Z => n9922);
   U9809 : GTECH_NOT port map( A => stackA_30_port, Z => n8393);
   U9810 : GTECH_NOT port map( A => stackB_30_port, Z => n7895);
   U9811 : GTECH_NOR2 port map( A => n9923, B => n9924, Z => n9913);
   U9812 : GTECH_NAND2 port map( A => n9925, B => n9926, Z => n9924);
   U9813 : GTECH_NAND2 port map( A => stackA_30_port, B => n6764, Z => n9926);
   U9814 : GTECH_NAND2 port map( A => N1347, B => n6639, Z => n9925);
   U9815 : GTECH_NOR2 port map( A => n8142, B => n7847, Z => n9923);
   U9816 : GTECH_NOT port map( A => n47, Z => n7847);
   U9817 : GTECH_NAND2 port map( A => N725, B => n6674, Z => n9910);
   U9818 : GTECH_NAND2 port map( A => n6675, B => n11090, Z => n9907);
   U9819 : GTECH_NAND2 port map( A => n9927, B => n9928, Z => n5488);
   U9820 : GTECH_NOR2 port map( A => n9929, B => n9930, Z => n9928);
   U9821 : GTECH_NAND2 port map( A => n9931, B => n9932, Z => n9930);
   U9822 : GTECH_NAND2 port map( A => n11089, B => n6673, Z => n9932);
   U9823 : GTECH_NOR2 port map( A => n9933, B => n9934, Z => n9931);
   U9824 : GTECH_NOR2 port map( A => n6683, B => n6688, Z => n9934);
   U9825 : GTECH_NOR2 port map( A => n6682, B => n8909, Z => n9933);
   U9826 : GTECH_NOT port map( A => sp_29_port, Z => n8909);
   U9827 : GTECH_NAND2 port map( A => n9935, B => n9936, Z => n9929);
   U9828 : GTECH_NAND2 port map( A => N3018, B => n6616, Z => n9936);
   U9829 : GTECH_NOR2 port map( A => n9937, B => n9938, Z => n9935);
   U9830 : GTECH_NOR2 port map( A => n6633, B => n6619, Z => n9938);
   U9831 : GTECH_NOT port map( A => stackA_2_port, Z => n6633);
   U9832 : GTECH_NOR2 port map( A => n8388, B => n9862, Z => n9937);
   U9833 : GTECH_NOT port map( A => mem_read(29), Z => n8388);
   U9834 : GTECH_NOR2 port map( A => n9939, B => n9940, Z => n9927);
   U9835 : GTECH_NAND2 port map( A => n9941, B => n9942, Z => n9940);
   U9836 : GTECH_NAND2 port map( A => pc_29_port, B => n6663, Z => n9942);
   U9837 : GTECH_NOR2 port map( A => n9943, B => n9944, Z => n9941);
   U9838 : GTECH_NOR2 port map( A => n6620, B => n6666, Z => n9944);
   U9839 : GTECH_NOR2 port map( A => stackA_29_port, B => n6667, Z => n9943);
   U9840 : GTECH_NAND2 port map( A => n9945, B => n9946, Z => n9939);
   U9841 : GTECH_NOT port map( A => n9947, Z => n9946);
   U9842 : GTECH_NAND2 port map( A => n9948, B => n9949, Z => n9947);
   U9843 : GTECH_NAND2 port map( A => n7976, B => n9950, Z => n9949);
   U9844 : GTECH_NAND2 port map( A => n9951, B => n9952, Z => n9950);
   U9845 : GTECH_NOR2 port map( A => n9953, B => n9954, Z => n9952);
   U9846 : GTECH_NAND2 port map( A => n9955, B => n9956, Z => n9954);
   U9847 : GTECH_NAND2 port map( A => stackA_22_port, B => n6854, Z => n9956);
   U9848 : GTECH_NAND2 port map( A => N1063, B => n6632, Z => n9955);
   U9849 : GTECH_NOT port map( A => n9957, Z => n9953);
   U9850 : GTECH_NOR2 port map( A => n9958, B => n6873, Z => n9957);
   U9851 : GTECH_NOR2 port map( A => n7893, B => n9959, Z => n9958);
   U9852 : GTECH_NOR2 port map( A => n6876, B => n9960, Z => n9959);
   U9853 : GTECH_NOR2 port map( A => n6620, B => n6878, Z => n9960);
   U9854 : GTECH_NOT port map( A => stackA_29_port, Z => n6620);
   U9855 : GTECH_NOT port map( A => stackB_29_port, Z => n7893);
   U9856 : GTECH_NOR2 port map( A => n9961, B => n9962, Z => n9951);
   U9857 : GTECH_NAND2 port map( A => n9963, B => n9964, Z => n9962);
   U9858 : GTECH_NAND2 port map( A => stackA_29_port, B => n6764, Z => n9964);
   U9859 : GTECH_NAND2 port map( A => N1346, B => n6639, Z => n9963);
   U9860 : GTECH_NOR2 port map( A => n8142, B => n7836, Z => n9961);
   U9861 : GTECH_NOT port map( A => n48, Z => n7836);
   U9862 : GTECH_NAND2 port map( A => N724, B => n6674, Z => n9948);
   U9863 : GTECH_NAND2 port map( A => n6675, B => n11088, Z => n9945);
   U9864 : GTECH_NAND2 port map( A => n9965, B => n9966, Z => n5487);
   U9865 : GTECH_NOR2 port map( A => n9967, B => n9968, Z => n9966);
   U9866 : GTECH_NAND2 port map( A => n9969, B => n9970, Z => n9968);
   U9867 : GTECH_NAND2 port map( A => n11087, B => n6673, Z => n9970);
   U9868 : GTECH_NOR2 port map( A => n9971, B => n9972, Z => n9969);
   U9869 : GTECH_NOR2 port map( A => n6683, B => n6784, Z => n9972);
   U9870 : GTECH_NOR2 port map( A => n6682, B => n8899, Z => n9971);
   U9871 : GTECH_NOT port map( A => sp_28_port, Z => n8899);
   U9872 : GTECH_NAND2 port map( A => n9973, B => n9974, Z => n9967);
   U9873 : GTECH_NAND2 port map( A => N3017, B => n6616, Z => n9974);
   U9874 : GTECH_NOR2 port map( A => n9975, B => n9976, Z => n9973);
   U9875 : GTECH_NOR2 port map( A => n6619, B => n6698, Z => n9976);
   U9876 : GTECH_NOT port map( A => stackA_3_port, Z => n6698);
   U9877 : GTECH_NOR2 port map( A => n8383, B => n9862, Z => n9975);
   U9878 : GTECH_NOT port map( A => mem_read(28), Z => n8383);
   U9879 : GTECH_NOR2 port map( A => n9977, B => n9978, Z => n9965);
   U9880 : GTECH_NAND2 port map( A => n9979, B => n9980, Z => n9978);
   U9881 : GTECH_NAND2 port map( A => pc_28_port, B => n6663, Z => n9980);
   U9882 : GTECH_NOR2 port map( A => n9981, B => n9982, Z => n9979);
   U9883 : GTECH_NOR2 port map( A => n6666, B => n6688, Z => n9982);
   U9884 : GTECH_NOR2 port map( A => stackA_28_port, B => n6667, Z => n9981);
   U9885 : GTECH_NAND2 port map( A => n9983, B => n9984, Z => n9977);
   U9886 : GTECH_NOT port map( A => n9985, Z => n9984);
   U9887 : GTECH_NAND2 port map( A => n9986, B => n9987, Z => n9985);
   U9888 : GTECH_NAND2 port map( A => n7976, B => n9988, Z => n9987);
   U9889 : GTECH_NAND2 port map( A => n9989, B => n9990, Z => n9988);
   U9890 : GTECH_NOR2 port map( A => n9991, B => n9992, Z => n9990);
   U9891 : GTECH_NAND2 port map( A => n9993, B => n9994, Z => n9992);
   U9892 : GTECH_NAND2 port map( A => stackA_21_port, B => n6854, Z => n9994);
   U9893 : GTECH_NAND2 port map( A => N1062, B => n6632, Z => n9993);
   U9894 : GTECH_NOT port map( A => n9995, Z => n9991);
   U9895 : GTECH_NOR2 port map( A => n9996, B => n6873, Z => n9995);
   U9896 : GTECH_NOR2 port map( A => n7892, B => n9997, Z => n9996);
   U9897 : GTECH_NOR2 port map( A => n6876, B => n9998, Z => n9997);
   U9898 : GTECH_NOR2 port map( A => n6688, B => n6878, Z => n9998);
   U9899 : GTECH_NOT port map( A => stackA_28_port, Z => n6688);
   U9900 : GTECH_NOT port map( A => stackB_28_port, Z => n7892);
   U9901 : GTECH_NOR2 port map( A => n9999, B => n10000, Z => n9989);
   U9902 : GTECH_NAND2 port map( A => n10001, B => n10002, Z => n10000);
   U9903 : GTECH_NAND2 port map( A => stackA_28_port, B => n6764, Z => n10002);
   U9904 : GTECH_NAND2 port map( A => N1345, B => n6639, Z => n10001);
   U9905 : GTECH_NOR2 port map( A => n8142, B => n7825, Z => n9999);
   U9906 : GTECH_NOT port map( A => n49, Z => n7825);
   U9907 : GTECH_NAND2 port map( A => N723, B => n6674, Z => n9986);
   U9908 : GTECH_NAND2 port map( A => n6675, B => n11086, Z => n9983);
   U9909 : GTECH_NAND2 port map( A => n10003, B => n10004, Z => n5486);
   U9910 : GTECH_NOR2 port map( A => n10005, B => n10006, Z => n10004);
   U9911 : GTECH_NAND2 port map( A => n10007, B => n10008, Z => n10006);
   U9912 : GTECH_NAND2 port map( A => n11085, B => n6673, Z => n10008);
   U9913 : GTECH_NOR2 port map( A => n10009, B => n10010, Z => n10007);
   U9914 : GTECH_NOR2 port map( A => n6683, B => n6838, Z => n10010);
   U9915 : GTECH_NOR2 port map( A => n6682, B => n8889, Z => n10009);
   U9916 : GTECH_NOT port map( A => sp_27_port, Z => n8889);
   U9917 : GTECH_NAND2 port map( A => n10011, B => n10012, Z => n10005);
   U9918 : GTECH_NAND2 port map( A => N3016, B => n6616, Z => n10012);
   U9919 : GTECH_NOR2 port map( A => n10013, B => n10014, Z => n10011);
   U9920 : GTECH_NOR2 port map( A => n6619, B => n6763, Z => n10014);
   U9921 : GTECH_NOT port map( A => stackA_4_port, Z => n6763);
   U9922 : GTECH_NOR2 port map( A => n6713, B => n9862, Z => n10013);
   U9923 : GTECH_NOT port map( A => mem_read(27), Z => n6713);
   U9924 : GTECH_NOR2 port map( A => n10015, B => n10016, Z => n10003);
   U9925 : GTECH_NAND2 port map( A => n10017, B => n10018, Z => n10016);
   U9926 : GTECH_NAND2 port map( A => pc_27_port, B => n6663, Z => n10018);
   U9927 : GTECH_NOR2 port map( A => n10019, B => n10020, Z => n10017);
   U9928 : GTECH_NOR2 port map( A => n6666, B => n6784, Z => n10020);
   U9929 : GTECH_NOR2 port map( A => stackA_27_port, B => n6667, Z => n10019);
   U9930 : GTECH_NAND2 port map( A => n10021, B => n10022, Z => n10015);
   U9931 : GTECH_NOT port map( A => n10023, Z => n10022);
   U9932 : GTECH_NAND2 port map( A => n10024, B => n10025, Z => n10023);
   U9933 : GTECH_NAND2 port map( A => n7976, B => n10026, Z => n10025);
   U9934 : GTECH_NAND2 port map( A => n10027, B => n10028, Z => n10026);
   U9935 : GTECH_NOR2 port map( A => n10029, B => n10030, Z => n10028);
   U9936 : GTECH_NAND2 port map( A => n10031, B => n10032, Z => n10030);
   U9937 : GTECH_NAND2 port map( A => stackA_20_port, B => n6854, Z => n10032);
   U9938 : GTECH_NAND2 port map( A => N1061, B => n6632, Z => n10031);
   U9939 : GTECH_NOT port map( A => n10033, Z => n10029);
   U9940 : GTECH_NOR2 port map( A => n10034, B => n6873, Z => n10033);
   U9941 : GTECH_NOR2 port map( A => n7901, B => n10035, Z => n10034);
   U9942 : GTECH_NOR2 port map( A => n6876, B => n10036, Z => n10035);
   U9943 : GTECH_NOR2 port map( A => n6784, B => n6878, Z => n10036);
   U9944 : GTECH_NOT port map( A => stackA_27_port, Z => n6784);
   U9945 : GTECH_NOT port map( A => stackB_27_port, Z => n7901);
   U9946 : GTECH_NOR2 port map( A => n10037, B => n10038, Z => n10027);
   U9947 : GTECH_NAND2 port map( A => n10039, B => n10040, Z => n10038);
   U9948 : GTECH_NAND2 port map( A => stackA_27_port, B => n6764, Z => n10040);
   U9949 : GTECH_NAND2 port map( A => N1344, B => n6639, Z => n10039);
   U9950 : GTECH_NOR2 port map( A => n8142, B => n7814, Z => n10037);
   U9951 : GTECH_NOT port map( A => n50, Z => n7814);
   U9952 : GTECH_NAND2 port map( A => N722, B => n6674, Z => n10024);
   U9953 : GTECH_NAND2 port map( A => n6675, B => n11084, Z => n10021);
   U9954 : GTECH_NAND2 port map( A => n10041, B => n10042, Z => n5485);
   U9955 : GTECH_NOR2 port map( A => n10043, B => n10044, Z => n10042);
   U9956 : GTECH_NAND2 port map( A => n10045, B => n10046, Z => n10044);
   U9957 : GTECH_NAND2 port map( A => n11083, B => n6673, Z => n10046);
   U9958 : GTECH_NOR2 port map( A => n10047, B => n10048, Z => n10045);
   U9959 : GTECH_NOR2 port map( A => n6683, B => n8370, Z => n10048);
   U9960 : GTECH_NOR2 port map( A => n6682, B => n8879, Z => n10047);
   U9961 : GTECH_NOT port map( A => sp_26_port, Z => n8879);
   U9962 : GTECH_NAND2 port map( A => n10049, B => n10050, Z => n10043);
   U9963 : GTECH_NAND2 port map( A => N3015, B => n6616, Z => n10050);
   U9964 : GTECH_NOR2 port map( A => n10051, B => n10052, Z => n10049);
   U9965 : GTECH_NOR2 port map( A => n6619, B => n6815, Z => n10052);
   U9966 : GTECH_NOT port map( A => stackA_5_port, Z => n6815);
   U9967 : GTECH_NOR2 port map( A => n6656, B => n9862, Z => n10051);
   U9968 : GTECH_NOT port map( A => mem_read(26), Z => n6656);
   U9969 : GTECH_NOR2 port map( A => n10053, B => n10054, Z => n10041);
   U9970 : GTECH_NAND2 port map( A => n10055, B => n10056, Z => n10054);
   U9971 : GTECH_NAND2 port map( A => pc_26_port, B => n6663, Z => n10056);
   U9972 : GTECH_NOR2 port map( A => n10057, B => n10058, Z => n10055);
   U9973 : GTECH_NOR2 port map( A => n6666, B => n6838, Z => n10058);
   U9974 : GTECH_NOR2 port map( A => stackA_26_port, B => n6667, Z => n10057);
   U9975 : GTECH_NAND2 port map( A => n10059, B => n10060, Z => n10053);
   U9976 : GTECH_NOT port map( A => n10061, Z => n10060);
   U9977 : GTECH_NAND2 port map( A => n10062, B => n10063, Z => n10061);
   U9978 : GTECH_NAND2 port map( A => n7976, B => n10064, Z => n10063);
   U9979 : GTECH_NAND2 port map( A => n10065, B => n10066, Z => n10064);
   U9980 : GTECH_NOR2 port map( A => n10067, B => n10068, Z => n10066);
   U9981 : GTECH_NAND2 port map( A => n10069, B => n10070, Z => n10068);
   U9982 : GTECH_NAND2 port map( A => stackA_19_port, B => n6854, Z => n10070);
   U9983 : GTECH_NAND2 port map( A => N1060, B => n6632, Z => n10069);
   U9984 : GTECH_NOT port map( A => n10071, Z => n10067);
   U9985 : GTECH_NOR2 port map( A => n10072, B => n6873, Z => n10071);
   U9986 : GTECH_NOR2 port map( A => n7900, B => n10073, Z => n10072);
   U9987 : GTECH_NOR2 port map( A => n6876, B => n10074, Z => n10073);
   U9988 : GTECH_NOR2 port map( A => n6838, B => n6878, Z => n10074);
   U9989 : GTECH_NOT port map( A => stackA_26_port, Z => n6838);
   U9990 : GTECH_NOT port map( A => stackB_26_port, Z => n7900);
   U9991 : GTECH_NOR2 port map( A => n10075, B => n10076, Z => n10065);
   U9992 : GTECH_NAND2 port map( A => n10077, B => n10078, Z => n10076);
   U9993 : GTECH_NAND2 port map( A => stackA_26_port, B => n6764, Z => n10078);
   U9994 : GTECH_NAND2 port map( A => N1343, B => n6639, Z => n10077);
   U9995 : GTECH_NOR2 port map( A => n8142, B => n7803, Z => n10075);
   U9996 : GTECH_NOT port map( A => n51, Z => n7803);
   U9997 : GTECH_NAND2 port map( A => N721, B => n6674, Z => n10062);
   U9998 : GTECH_NAND2 port map( A => n6675, B => n11082, Z => n10059);
   U9999 : GTECH_NAND2 port map( A => n10079, B => n10080, Z => n5484);
   U10000 : GTECH_NOR2 port map( A => n10081, B => n10082, Z => n10080);
   U10001 : GTECH_NAND2 port map( A => n10083, B => n10084, Z => n10082);
   U10002 : GTECH_NAND2 port map( A => n11081, B => n6673, Z => n10084);
   U10003 : GTECH_NOR2 port map( A => n10085, B => n10086, Z => n10083);
   U10004 : GTECH_NOR2 port map( A => n6683, B => n8165, Z => n10086);
   U10005 : GTECH_NOR2 port map( A => n6682, B => n8869, Z => n10085);
   U10006 : GTECH_NOT port map( A => sp_25_port, Z => n8869);
   U10007 : GTECH_NAND2 port map( A => n10087, B => n10088, Z => n10081);
   U10008 : GTECH_NAND2 port map( A => N3014, B => n6616, Z => n10088);
   U10009 : GTECH_NOR2 port map( A => n10089, B => n10090, Z => n10087);
   U10010 : GTECH_NOR2 port map( A => n6619, B => n7555, Z => n10090);
   U10011 : GTECH_NOT port map( A => stackA_6_port, Z => n7555);
   U10012 : GTECH_NOR2 port map( A => n8037, B => n9862, Z => n10089);
   U10013 : GTECH_NOT port map( A => mem_read(25), Z => n8037);
   U10014 : GTECH_NOR2 port map( A => n10091, B => n10092, Z => n10079);
   U10015 : GTECH_NAND2 port map( A => n10093, B => n10094, Z => n10092);
   U10016 : GTECH_NAND2 port map( A => pc_25_port, B => n6663, Z => n10094);
   U10017 : GTECH_NOR2 port map( A => n10095, B => n10096, Z => n10093);
   U10018 : GTECH_NOR2 port map( A => n6666, B => n8370, Z => n10096);
   U10019 : GTECH_NOR2 port map( A => stackA_25_port, B => n6667, Z => n10095);
   U10020 : GTECH_NAND2 port map( A => n10097, B => n10098, Z => n10091);
   U10021 : GTECH_NOT port map( A => n10099, Z => n10098);
   U10022 : GTECH_NAND2 port map( A => n10100, B => n10101, Z => n10099);
   U10023 : GTECH_NAND2 port map( A => n7976, B => n10102, Z => n10101);
   U10024 : GTECH_NAND2 port map( A => n10103, B => n10104, Z => n10102);
   U10025 : GTECH_NOR2 port map( A => n10105, B => n10106, Z => n10104);
   U10026 : GTECH_NAND2 port map( A => n10107, B => n10108, Z => n10106);
   U10027 : GTECH_NAND2 port map( A => stackA_18_port, B => n6854, Z => n10108)
                           ;
   U10028 : GTECH_NAND2 port map( A => N1059, B => n6632, Z => n10107);
   U10029 : GTECH_NOT port map( A => n10109, Z => n10105);
   U10030 : GTECH_NOR2 port map( A => n10110, B => n6873, Z => n10109);
   U10031 : GTECH_NOR2 port map( A => n7899, B => n10111, Z => n10110);
   U10032 : GTECH_NOR2 port map( A => n6876, B => n10112, Z => n10111);
   U10033 : GTECH_NOR2 port map( A => n8370, B => n6878, Z => n10112);
   U10034 : GTECH_NOT port map( A => stackA_25_port, Z => n8370);
   U10035 : GTECH_NOT port map( A => stackB_25_port, Z => n7899);
   U10036 : GTECH_NOR2 port map( A => n10113, B => n10114, Z => n10103);
   U10037 : GTECH_NAND2 port map( A => n10115, B => n10116, Z => n10114);
   U10038 : GTECH_NAND2 port map( A => stackA_25_port, B => n6764, Z => n10116)
                           ;
   U10039 : GTECH_NAND2 port map( A => N1342, B => n6639, Z => n10115);
   U10040 : GTECH_NOR2 port map( A => n8142, B => n7792, Z => n10113);
   U10041 : GTECH_NOT port map( A => n52, Z => n7792);
   U10042 : GTECH_NAND2 port map( A => N720, B => n6674, Z => n10100);
   U10043 : GTECH_NAND2 port map( A => n6675, B => n11080, Z => n10097);
   U10044 : GTECH_NAND2 port map( A => n10117, B => n10118, Z => n5483);
   U10045 : GTECH_NOR2 port map( A => n10119, B => n10120, Z => n10118);
   U10046 : GTECH_NAND2 port map( A => n10121, B => n10122, Z => n10120);
   U10047 : GTECH_NAND2 port map( A => n11079, B => n6673, Z => n10122);
   U10048 : GTECH_NOR2 port map( A => n10123, B => n10124, Z => n10121);
   U10049 : GTECH_NOR2 port map( A => n6683, B => n8360, Z => n10124);
   U10050 : GTECH_NOR2 port map( A => n6682, B => n8859, Z => n10123);
   U10051 : GTECH_NOT port map( A => sp_24_port, Z => n8859);
   U10052 : GTECH_NAND2 port map( A => n10125, B => n10126, Z => n10119);
   U10053 : GTECH_NAND2 port map( A => N3013, B => n6616, Z => n10126);
   U10054 : GTECH_NOR2 port map( A => n10127, B => n10128, Z => n10125);
   U10055 : GTECH_NOR2 port map( A => n6619, B => n7574, Z => n10128);
   U10056 : GTECH_NOR2 port map( A => n7986, B => n9862, Z => n10127);
   U10057 : GTECH_NOT port map( A => mem_read(24), Z => n7986);
   U10058 : GTECH_NOR2 port map( A => n10129, B => n10130, Z => n10117);
   U10059 : GTECH_NAND2 port map( A => n10131, B => n10132, Z => n10130);
   U10060 : GTECH_NAND2 port map( A => pc_24_port, B => n6663, Z => n10132);
   U10061 : GTECH_NOR2 port map( A => n10133, B => n10134, Z => n10131);
   U10062 : GTECH_NOR2 port map( A => n6666, B => n8165, Z => n10134);
   U10063 : GTECH_NOR2 port map( A => stackA_24_port, B => n6667, Z => n10133);
   U10064 : GTECH_NAND2 port map( A => n10135, B => n10136, Z => n10129);
   U10065 : GTECH_NOT port map( A => n10137, Z => n10136);
   U10066 : GTECH_NAND2 port map( A => n10138, B => n10139, Z => n10137);
   U10067 : GTECH_NAND2 port map( A => n7976, B => n10140, Z => n10139);
   U10068 : GTECH_NAND2 port map( A => n10141, B => n10142, Z => n10140);
   U10069 : GTECH_NOR2 port map( A => n10143, B => n10144, Z => n10142);
   U10070 : GTECH_NAND2 port map( A => n10145, B => n10146, Z => n10144);
   U10071 : GTECH_NAND2 port map( A => stackA_17_port, B => n6854, Z => n10146)
                           ;
   U10072 : GTECH_NAND2 port map( A => N1058, B => n6632, Z => n10145);
   U10073 : GTECH_NOT port map( A => n10147, Z => n10143);
   U10074 : GTECH_NOR2 port map( A => n10148, B => n6873, Z => n10147);
   U10075 : GTECH_NOR2 port map( A => n7898, B => n10149, Z => n10148);
   U10076 : GTECH_NOR2 port map( A => n6876, B => n10150, Z => n10149);
   U10077 : GTECH_NOR2 port map( A => n8165, B => n6878, Z => n10150);
   U10078 : GTECH_NOT port map( A => stackA_24_port, Z => n8165);
   U10079 : GTECH_NOT port map( A => stackB_24_port, Z => n7898);
   U10080 : GTECH_NOR2 port map( A => n10151, B => n10152, Z => n10141);
   U10081 : GTECH_NAND2 port map( A => n10153, B => n10154, Z => n10152);
   U10082 : GTECH_NAND2 port map( A => stackA_24_port, B => n6764, Z => n10154)
                           ;
   U10083 : GTECH_NAND2 port map( A => N1341, B => n6639, Z => n10153);
   U10084 : GTECH_NOR2 port map( A => n8142, B => n7781, Z => n10151);
   U10085 : GTECH_NOT port map( A => n53, Z => n7781);
   U10086 : GTECH_NAND2 port map( A => N719, B => n6674, Z => n10138);
   U10087 : GTECH_NAND2 port map( A => n6675, B => n11078, Z => n10135);
   U10088 : GTECH_NAND2 port map( A => n10155, B => n10156, Z => n5482);
   U10089 : GTECH_NOR2 port map( A => n10157, B => n10158, Z => n10156);
   U10090 : GTECH_NAND2 port map( A => n10159, B => n10160, Z => n10158);
   U10091 : GTECH_NAND2 port map( A => n11077, B => n6673, Z => n10160);
   U10092 : GTECH_NOR2 port map( A => n10161, B => n10162, Z => n10159);
   U10093 : GTECH_NOR2 port map( A => n6683, B => n8354, Z => n10162);
   U10094 : GTECH_NOR2 port map( A => n6682, B => n8849, Z => n10161);
   U10095 : GTECH_NOT port map( A => sp_23_port, Z => n8849);
   U10096 : GTECH_NAND2 port map( A => n10163, B => n10164, Z => n10157);
   U10097 : GTECH_NAND2 port map( A => N3012, B => n6616, Z => n10164);
   U10098 : GTECH_NOR2 port map( A => n10165, B => n10166, Z => n10163);
   U10099 : GTECH_NOR2 port map( A => n6619, B => n7593, Z => n10166);
   U10100 : GTECH_NOR2 port map( A => n8361, B => n9862, Z => n10165);
   U10101 : GTECH_NOT port map( A => mem_read(23), Z => n8361);
   U10102 : GTECH_NOR2 port map( A => n10167, B => n10168, Z => n10155);
   U10103 : GTECH_NAND2 port map( A => n10169, B => n10170, Z => n10168);
   U10104 : GTECH_NAND2 port map( A => pc_23_port, B => n6663, Z => n10170);
   U10105 : GTECH_NOR2 port map( A => n10171, B => n10172, Z => n10169);
   U10106 : GTECH_NOR2 port map( A => n6666, B => n8360, Z => n10172);
   U10107 : GTECH_NOR2 port map( A => stackA_23_port, B => n6667, Z => n10171);
   U10108 : GTECH_NAND2 port map( A => n10173, B => n10174, Z => n10167);
   U10109 : GTECH_NOT port map( A => n10175, Z => n10174);
   U10110 : GTECH_NAND2 port map( A => n10176, B => n10177, Z => n10175);
   U10111 : GTECH_NAND2 port map( A => n7976, B => n10178, Z => n10177);
   U10112 : GTECH_NAND2 port map( A => n10179, B => n10180, Z => n10178);
   U10113 : GTECH_NOR2 port map( A => n10181, B => n10182, Z => n10180);
   U10114 : GTECH_NAND2 port map( A => n10183, B => n10184, Z => n10182);
   U10115 : GTECH_NAND2 port map( A => n6854, B => stackA_16_port, Z => n10184)
                           ;
   U10116 : GTECH_NAND2 port map( A => N1057, B => n6632, Z => n10183);
   U10117 : GTECH_NOT port map( A => n10185, Z => n10181);
   U10118 : GTECH_NOR2 port map( A => n10186, B => n6873, Z => n10185);
   U10119 : GTECH_NOR2 port map( A => n7938, B => n10187, Z => n10186);
   U10120 : GTECH_NOR2 port map( A => n6876, B => n10188, Z => n10187);
   U10121 : GTECH_NOR2 port map( A => n8360, B => n6878, Z => n10188);
   U10122 : GTECH_NOT port map( A => stackB_23_port, Z => n7938);
   U10123 : GTECH_NOR2 port map( A => n10189, B => n10190, Z => n10179);
   U10124 : GTECH_NAND2 port map( A => n10191, B => n10192, Z => n10190);
   U10125 : GTECH_NAND2 port map( A => stackA_23_port, B => n6764, Z => n10192)
                           ;
   U10126 : GTECH_NAND2 port map( A => N1340, B => n6639, Z => n10191);
   U10127 : GTECH_NOR2 port map( A => n8142, B => n7770, Z => n10189);
   U10128 : GTECH_NOT port map( A => n54, Z => n7770);
   U10129 : GTECH_NAND2 port map( A => N718, B => n6674, Z => n10176);
   U10130 : GTECH_NAND2 port map( A => n6675, B => n11076, Z => n10173);
   U10131 : GTECH_NAND2 port map( A => n10193, B => n10194, Z => n5481);
   U10132 : GTECH_NOR2 port map( A => n10195, B => n10196, Z => n10194);
   U10133 : GTECH_NAND2 port map( A => n10197, B => n10198, Z => n10196);
   U10134 : GTECH_NAND2 port map( A => n11075, B => n6673, Z => n10198);
   U10135 : GTECH_NOR2 port map( A => n10199, B => n10200, Z => n10197);
   U10136 : GTECH_NOR2 port map( A => n6683, B => n8348, Z => n10200);
   U10137 : GTECH_NOR2 port map( A => n6682, B => n8839, Z => n10199);
   U10138 : GTECH_NOT port map( A => sp_22_port, Z => n8839);
   U10139 : GTECH_NAND2 port map( A => n10201, B => n10202, Z => n10195);
   U10140 : GTECH_NAND2 port map( A => N3011, B => n6616, Z => n10202);
   U10141 : GTECH_NOR2 port map( A => n10203, B => n10204, Z => n10201);
   U10142 : GTECH_NOR2 port map( A => n6619, B => n7613, Z => n10204);
   U10143 : GTECH_NOR2 port map( A => n8355, B => n9862, Z => n10203);
   U10144 : GTECH_NOT port map( A => mem_read(22), Z => n8355);
   U10145 : GTECH_NOR2 port map( A => n10205, B => n10206, Z => n10193);
   U10146 : GTECH_NAND2 port map( A => n10207, B => n10208, Z => n10206);
   U10147 : GTECH_NAND2 port map( A => pc_22_port, B => n6663, Z => n10208);
   U10148 : GTECH_NOR2 port map( A => n10209, B => n10210, Z => n10207);
   U10149 : GTECH_NOR2 port map( A => n6666, B => n8354, Z => n10210);
   U10150 : GTECH_NOR2 port map( A => stackA_22_port, B => n6667, Z => n10209);
   U10151 : GTECH_NAND2 port map( A => n10211, B => n10212, Z => n10205);
   U10152 : GTECH_NOT port map( A => n10213, Z => n10212);
   U10153 : GTECH_NAND2 port map( A => n10214, B => n10215, Z => n10213);
   U10154 : GTECH_NAND2 port map( A => n7976, B => n10216, Z => n10215);
   U10155 : GTECH_NAND2 port map( A => n10217, B => n10218, Z => n10216);
   U10156 : GTECH_NOR2 port map( A => n10219, B => n10220, Z => n10218);
   U10157 : GTECH_NAND2 port map( A => n10221, B => n10222, Z => n10220);
   U10158 : GTECH_NAND2 port map( A => n6854, B => stackA_15_port, Z => n10222)
                           ;
   U10159 : GTECH_NAND2 port map( A => N1056, B => n6632, Z => n10221);
   U10160 : GTECH_NOT port map( A => n10223, Z => n10219);
   U10161 : GTECH_NOR2 port map( A => n10224, B => n6873, Z => n10223);
   U10162 : GTECH_NOR2 port map( A => n7937, B => n10225, Z => n10224);
   U10163 : GTECH_NOR2 port map( A => n6876, B => n10226, Z => n10225);
   U10164 : GTECH_NOR2 port map( A => n8354, B => n6878, Z => n10226);
   U10165 : GTECH_NOT port map( A => stackB_22_port, Z => n7937);
   U10166 : GTECH_NOR2 port map( A => n10227, B => n10228, Z => n10217);
   U10167 : GTECH_NAND2 port map( A => n10229, B => n10230, Z => n10228);
   U10168 : GTECH_NAND2 port map( A => stackA_22_port, B => n6764, Z => n10230)
                           ;
   U10169 : GTECH_NAND2 port map( A => N1339, B => n6639, Z => n10229);
   U10170 : GTECH_NOR2 port map( A => n8142, B => n7759, Z => n10227);
   U10171 : GTECH_NOT port map( A => n55, Z => n7759);
   U10172 : GTECH_NAND2 port map( A => N717, B => n6674, Z => n10214);
   U10173 : GTECH_NAND2 port map( A => n6675, B => n11074, Z => n10211);
   U10174 : GTECH_NAND2 port map( A => n10231, B => n10232, Z => n5480);
   U10175 : GTECH_NOR2 port map( A => n10233, B => n10234, Z => n10232);
   U10176 : GTECH_NAND2 port map( A => n10235, B => n10236, Z => n10234);
   U10177 : GTECH_NAND2 port map( A => n11073, B => n6673, Z => n10236);
   U10178 : GTECH_NOR2 port map( A => n10237, B => n10238, Z => n10235);
   U10179 : GTECH_NOR2 port map( A => n6683, B => n8342, Z => n10238);
   U10180 : GTECH_NOR2 port map( A => n6682, B => n8829, Z => n10237);
   U10181 : GTECH_NOT port map( A => sp_21_port, Z => n8829);
   U10182 : GTECH_NAND2 port map( A => n10239, B => n10240, Z => n10233);
   U10183 : GTECH_NAND2 port map( A => N3010, B => n6616, Z => n10240);
   U10184 : GTECH_NOR2 port map( A => n10241, B => n10242, Z => n10239);
   U10185 : GTECH_NOR2 port map( A => n6619, B => n8290, Z => n10242);
   U10186 : GTECH_NOR2 port map( A => n8349, B => n9862, Z => n10241);
   U10187 : GTECH_NOT port map( A => mem_read(21), Z => n8349);
   U10188 : GTECH_NOR2 port map( A => n10243, B => n10244, Z => n10231);
   U10189 : GTECH_NAND2 port map( A => n10245, B => n10246, Z => n10244);
   U10190 : GTECH_NAND2 port map( A => pc_21_port, B => n6663, Z => n10246);
   U10191 : GTECH_NOR2 port map( A => n10247, B => n10248, Z => n10245);
   U10192 : GTECH_NOR2 port map( A => n6666, B => n8348, Z => n10248);
   U10193 : GTECH_NOR2 port map( A => stackA_21_port, B => n6667, Z => n10247);
   U10194 : GTECH_NAND2 port map( A => n10249, B => n10250, Z => n10243);
   U10195 : GTECH_NOT port map( A => n10251, Z => n10250);
   U10196 : GTECH_NAND2 port map( A => n10252, B => n10253, Z => n10251);
   U10197 : GTECH_NAND2 port map( A => n7976, B => n10254, Z => n10253);
   U10198 : GTECH_NAND2 port map( A => n10255, B => n10256, Z => n10254);
   U10199 : GTECH_NOR2 port map( A => n10257, B => n10258, Z => n10256);
   U10200 : GTECH_NAND2 port map( A => n10259, B => n10260, Z => n10258);
   U10201 : GTECH_NAND2 port map( A => stackA_14_port, B => n6854, Z => n10260)
                           ;
   U10202 : GTECH_NAND2 port map( A => N1055, B => n6632, Z => n10259);
   U10203 : GTECH_NOT port map( A => n10261, Z => n10257);
   U10204 : GTECH_NOR2 port map( A => n10262, B => n6873, Z => n10261);
   U10205 : GTECH_NOR2 port map( A => n7936, B => n10263, Z => n10262);
   U10206 : GTECH_NOR2 port map( A => n6876, B => n10264, Z => n10263);
   U10207 : GTECH_NOR2 port map( A => n8348, B => n6878, Z => n10264);
   U10208 : GTECH_NOT port map( A => stackB_21_port, Z => n7936);
   U10209 : GTECH_NOR2 port map( A => n10265, B => n10266, Z => n10255);
   U10210 : GTECH_NAND2 port map( A => n10267, B => n10268, Z => n10266);
   U10211 : GTECH_NAND2 port map( A => stackA_21_port, B => n6764, Z => n10268)
                           ;
   U10212 : GTECH_NAND2 port map( A => N1338, B => n6639, Z => n10267);
   U10213 : GTECH_NOR2 port map( A => n8142, B => n7748, Z => n10265);
   U10214 : GTECH_NOT port map( A => n56, Z => n7748);
   U10215 : GTECH_NAND2 port map( A => N716, B => n6674, Z => n10252);
   U10216 : GTECH_NAND2 port map( A => n6675, B => n11072, Z => n10249);
   U10217 : GTECH_NAND2 port map( A => n10269, B => n10270, Z => n5479);
   U10218 : GTECH_NOR2 port map( A => n10271, B => n10272, Z => n10270);
   U10219 : GTECH_NAND2 port map( A => n10273, B => n10274, Z => n10272);
   U10220 : GTECH_NAND2 port map( A => n11071, B => n6673, Z => n10274);
   U10221 : GTECH_NOR2 port map( A => n10275, B => n10276, Z => n10273);
   U10222 : GTECH_NOR2 port map( A => n6683, B => n8337, Z => n10276);
   U10223 : GTECH_NOR2 port map( A => n6682, B => n8819, Z => n10275);
   U10224 : GTECH_NOT port map( A => sp_20_port, Z => n8819);
   U10225 : GTECH_NAND2 port map( A => n10277, B => n10278, Z => n10271);
   U10226 : GTECH_NAND2 port map( A => N3009, B => n6616, Z => n10278);
   U10227 : GTECH_NOR2 port map( A => n10279, B => n10280, Z => n10277);
   U10228 : GTECH_NOR2 port map( A => n6619, B => n8295, Z => n10280);
   U10229 : GTECH_NOR2 port map( A => n8343, B => n9862, Z => n10279);
   U10230 : GTECH_NOT port map( A => mem_read(20), Z => n8343);
   U10231 : GTECH_NOR2 port map( A => n10281, B => n10282, Z => n10269);
   U10232 : GTECH_NAND2 port map( A => n10283, B => n10284, Z => n10282);
   U10233 : GTECH_NAND2 port map( A => pc_20_port, B => n6663, Z => n10284);
   U10234 : GTECH_NOR2 port map( A => n10285, B => n10286, Z => n10283);
   U10235 : GTECH_NOR2 port map( A => n6666, B => n8342, Z => n10286);
   U10236 : GTECH_NOR2 port map( A => stackA_20_port, B => n6667, Z => n10285);
   U10237 : GTECH_NAND2 port map( A => n10287, B => n10288, Z => n10281);
   U10238 : GTECH_NOT port map( A => n10289, Z => n10288);
   U10239 : GTECH_NAND2 port map( A => n10290, B => n10291, Z => n10289);
   U10240 : GTECH_NAND2 port map( A => n7976, B => n10292, Z => n10291);
   U10241 : GTECH_NAND2 port map( A => n10293, B => n10294, Z => n10292);
   U10242 : GTECH_NOR2 port map( A => n10295, B => n10296, Z => n10294);
   U10243 : GTECH_NAND2 port map( A => n10297, B => n10298, Z => n10296);
   U10244 : GTECH_NAND2 port map( A => stackA_13_port, B => n6854, Z => n10298)
                           ;
   U10245 : GTECH_NAND2 port map( A => N1054, B => n6632, Z => n10297);
   U10246 : GTECH_NOT port map( A => n10299, Z => n10295);
   U10247 : GTECH_NOR2 port map( A => n10300, B => n6873, Z => n10299);
   U10248 : GTECH_NOR2 port map( A => n7935, B => n10301, Z => n10300);
   U10249 : GTECH_NOR2 port map( A => n6876, B => n10302, Z => n10301);
   U10250 : GTECH_NOR2 port map( A => n8342, B => n6878, Z => n10302);
   U10251 : GTECH_NOT port map( A => stackB_20_port, Z => n7935);
   U10252 : GTECH_NOR2 port map( A => n10303, B => n10304, Z => n10293);
   U10253 : GTECH_NAND2 port map( A => n10305, B => n10306, Z => n10304);
   U10254 : GTECH_NAND2 port map( A => stackA_20_port, B => n6764, Z => n10306)
                           ;
   U10255 : GTECH_NAND2 port map( A => N1337, B => n6639, Z => n10305);
   U10256 : GTECH_NOR2 port map( A => n8142, B => n7737, Z => n10303);
   U10257 : GTECH_NOT port map( A => n57, Z => n7737);
   U10258 : GTECH_NAND2 port map( A => N715, B => n6674, Z => n10290);
   U10259 : GTECH_NAND2 port map( A => n6675, B => n11070, Z => n10287);
   U10260 : GTECH_NOT port map( A => n10307, Z => n5478);
   U10261 : GTECH_NOR2 port map( A => n10308, B => n10309, Z => n10307);
   U10262 : GTECH_NAND2 port map( A => n10310, B => n10311, Z => n10309);
   U10263 : GTECH_NOR2 port map( A => n10312, B => n10313, Z => n10311);
   U10264 : GTECH_NAND2 port map( A => n10314, B => n10315, Z => n10313);
   U10265 : GTECH_NAND2 port map( A => n11069, B => n6673, Z => n10315);
   U10266 : GTECH_NAND2 port map( A => N714, B => n6674, Z => n10314);
   U10267 : GTECH_NOT port map( A => n10316, Z => n10312);
   U10268 : GTECH_NAND2 port map( A => n6675, B => n11068, Z => n10316);
   U10269 : GTECH_NOR2 port map( A => n10317, B => n10318, Z => n10310);
   U10270 : GTECH_NAND2 port map( A => n10319, B => n10320, Z => n10318);
   U10271 : GTECH_NOT port map( A => n10321, Z => n10320);
   U10272 : GTECH_NOR2 port map( A => n6667, B => stackA_19_port, Z => n10321);
   U10273 : GTECH_NAND2 port map( A => stackA_19_port, B => n6731, Z => n10319)
                           ;
   U10274 : GTECH_NOT port map( A => n10322, Z => n10317);
   U10275 : GTECH_NAND2 port map( A => n6663, B => pc_19_port, Z => n10322);
   U10276 : GTECH_NAND2 port map( A => n10323, B => n10324, Z => n10308);
   U10277 : GTECH_NOT port map( A => n10325, Z => n10324);
   U10278 : GTECH_NAND2 port map( A => n10326, B => n10327, Z => n10325);
   U10279 : GTECH_NOR2 port map( A => n10328, B => n10329, Z => n10327);
   U10280 : GTECH_NOR2 port map( A => n6622, B => n10330, Z => n10329);
   U10281 : GTECH_NOT port map( A => n10331, Z => n10330);
   U10282 : GTECH_NAND2 port map( A => n10332, B => n10333, Z => n10331);
   U10283 : GTECH_NAND2 port map( A => n6230, B => n10334, Z => n10333);
   U10284 : GTECH_NAND2 port map( A => n10335, B => n10336, Z => n10334);
   U10285 : GTECH_NOR2 port map( A => n10337, B => n10338, Z => n10336);
   U10286 : GTECH_NAND2 port map( A => n10339, B => n10340, Z => n10338);
   U10287 : GTECH_NAND2 port map( A => n10341, B => n8934, Z => n10340);
   U10288 : GTECH_NOR2 port map( A => n11094, B => n10342, Z => n10341);
   U10289 : GTECH_NAND2 port map( A => stackA_12_port, B => n10343, Z => n10339
                           );
   U10290 : GTECH_NAND2 port map( A => n10344, B => n10345, Z => n10343);
   U10291 : GTECH_NAND2 port map( A => n11094, B => n8934, Z => n10345);
   U10292 : GTECH_NOT port map( A => n7875, Z => n8934);
   U10293 : GTECH_NOT port map( A => n10346, Z => n10337);
   U10294 : GTECH_NAND2 port map( A => n10347, B => stackB_19_port, Z => n10346
                           );
   U10295 : GTECH_NAND2 port map( A => n10348, B => n10349, Z => n10347);
   U10296 : GTECH_NAND2 port map( A => n7142, B => stackA_19_port, Z => n10348)
                           ;
   U10297 : GTECH_NOR2 port map( A => n10350, B => n10351, Z => n10335);
   U10298 : GTECH_NAND2 port map( A => n10352, B => n10353, Z => n10351);
   U10299 : GTECH_NAND2 port map( A => N1053, B => n10354, Z => n10353);
   U10300 : GTECH_NAND2 port map( A => n58, B => n10355, Z => n10352);
   U10301 : GTECH_NOR2 port map( A => n10356, B => n8337, Z => n10350);
   U10302 : GTECH_NAND2 port map( A => N1336, B => n6639, Z => n10332);
   U10303 : GTECH_NOR2 port map( A => n9862, B => n6710, Z => n10328);
   U10304 : GTECH_NOT port map( A => mem_read(19), Z => n6710);
   U10305 : GTECH_NAND2 port map( A => N3008, B => n6616, Z => n10326);
   U10306 : GTECH_NOR2 port map( A => n10357, B => n10358, Z => n10323);
   U10307 : GTECH_NOR2 port map( A => n6683, B => n8332, Z => n10358);
   U10308 : GTECH_NOR2 port map( A => n6682, B => n8809, Z => n10357);
   U10309 : GTECH_NOT port map( A => sp_19_port, Z => n8809);
   U10310 : GTECH_NAND2 port map( A => n10359, B => n10360, Z => n5477);
   U10311 : GTECH_NOR2 port map( A => n10361, B => n10362, Z => n10360);
   U10312 : GTECH_NAND2 port map( A => n10363, B => n10364, Z => n10362);
   U10313 : GTECH_NAND2 port map( A => n11067, B => n6673, Z => n10364);
   U10314 : GTECH_NOR2 port map( A => n10365, B => n10366, Z => n10363);
   U10315 : GTECH_NOR2 port map( A => n6683, B => n8327, Z => n10366);
   U10316 : GTECH_NOR2 port map( A => n6682, B => n8799, Z => n10365);
   U10317 : GTECH_NOT port map( A => sp_18_port, Z => n8799);
   U10318 : GTECH_NAND2 port map( A => n10367, B => n10368, Z => n10361);
   U10319 : GTECH_NAND2 port map( A => N3007, B => n6616, Z => n10368);
   U10320 : GTECH_NOR2 port map( A => n10369, B => n10370, Z => n10367);
   U10321 : GTECH_NOR2 port map( A => n6619, B => n8306, Z => n10370);
   U10322 : GTECH_NOR2 port map( A => n6652, B => n9862, Z => n10369);
   U10323 : GTECH_NOT port map( A => mem_read(18), Z => n6652);
   U10324 : GTECH_NOR2 port map( A => n10371, B => n10372, Z => n10359);
   U10325 : GTECH_NAND2 port map( A => n10373, B => n10374, Z => n10372);
   U10326 : GTECH_NAND2 port map( A => pc_18_port, B => n6663, Z => n10374);
   U10327 : GTECH_NOR2 port map( A => n10375, B => n10376, Z => n10373);
   U10328 : GTECH_NOR2 port map( A => n6666, B => n8332, Z => n10376);
   U10329 : GTECH_NOR2 port map( A => stackA_18_port, B => n6667, Z => n10375);
   U10330 : GTECH_NAND2 port map( A => n10377, B => n10378, Z => n10371);
   U10331 : GTECH_NOT port map( A => n10379, Z => n10378);
   U10332 : GTECH_NAND2 port map( A => n10380, B => n10381, Z => n10379);
   U10333 : GTECH_NAND2 port map( A => n7976, B => n10382, Z => n10381);
   U10334 : GTECH_NAND2 port map( A => n10383, B => n10384, Z => n10382);
   U10335 : GTECH_NOR2 port map( A => n10385, B => n10386, Z => n10384);
   U10336 : GTECH_NAND2 port map( A => n10387, B => n10388, Z => n10386);
   U10337 : GTECH_NAND2 port map( A => stackA_11_port, B => n6854, Z => n10388)
                           ;
   U10338 : GTECH_NAND2 port map( A => N1052, B => n6632, Z => n10387);
   U10339 : GTECH_NOT port map( A => n10389, Z => n10385);
   U10340 : GTECH_NOR2 port map( A => n10390, B => n6873, Z => n10389);
   U10341 : GTECH_NOR2 port map( A => n7942, B => n10391, Z => n10390);
   U10342 : GTECH_NOR2 port map( A => n6876, B => n10392, Z => n10391);
   U10343 : GTECH_NOR2 port map( A => n8332, B => n6878, Z => n10392);
   U10344 : GTECH_NOT port map( A => stackB_18_port, Z => n7942);
   U10345 : GTECH_NOR2 port map( A => n10393, B => n10394, Z => n10383);
   U10346 : GTECH_NAND2 port map( A => n10395, B => n10396, Z => n10394);
   U10347 : GTECH_NAND2 port map( A => stackA_18_port, B => n6764, Z => n10396)
                           ;
   U10348 : GTECH_NAND2 port map( A => N1335, B => n6639, Z => n10395);
   U10349 : GTECH_NOR2 port map( A => n8142, B => n7716, Z => n10393);
   U10350 : GTECH_NOT port map( A => n59, Z => n7716);
   U10351 : GTECH_NAND2 port map( A => N713, B => n6674, Z => n10380);
   U10352 : GTECH_NAND2 port map( A => n6675, B => n11066, Z => n10377);
   U10353 : GTECH_NAND2 port map( A => n10397, B => n10398, Z => n5476);
   U10354 : GTECH_NOR2 port map( A => n10399, B => n10400, Z => n10398);
   U10355 : GTECH_NAND2 port map( A => n10401, B => n10402, Z => n10400);
   U10356 : GTECH_NAND2 port map( A => n11065, B => n6673, Z => n10402);
   U10357 : GTECH_NOR2 port map( A => n10403, B => n10404, Z => n10401);
   U10358 : GTECH_NOR2 port map( A => n6683, B => n6863, Z => n10404);
   U10359 : GTECH_NOR2 port map( A => n6682, B => n8789, Z => n10403);
   U10360 : GTECH_NOT port map( A => sp_17_port, Z => n8789);
   U10361 : GTECH_NAND2 port map( A => n10405, B => n10406, Z => n10399);
   U10362 : GTECH_NAND2 port map( A => N3006, B => n6616, Z => n10406);
   U10363 : GTECH_NOR2 port map( A => n10407, B => n10408, Z => n10405);
   U10364 : GTECH_NOR2 port map( A => n6619, B => n8312, Z => n10408);
   U10365 : GTECH_NOR2 port map( A => n8054, B => n9862, Z => n10407);
   U10366 : GTECH_NOT port map( A => mem_read(17), Z => n8054);
   U10367 : GTECH_NOR2 port map( A => n10409, B => n10410, Z => n10397);
   U10368 : GTECH_NAND2 port map( A => n10411, B => n10412, Z => n10410);
   U10369 : GTECH_NAND2 port map( A => pc_17_port, B => n6663, Z => n10412);
   U10370 : GTECH_NOR2 port map( A => n10413, B => n10414, Z => n10411);
   U10371 : GTECH_NOR2 port map( A => n6666, B => n8327, Z => n10414);
   U10372 : GTECH_NOR2 port map( A => stackA_17_port, B => n6667, Z => n10413);
   U10373 : GTECH_NAND2 port map( A => n10415, B => n10416, Z => n10409);
   U10374 : GTECH_NOT port map( A => n10417, Z => n10416);
   U10375 : GTECH_NAND2 port map( A => n10418, B => n10419, Z => n10417);
   U10376 : GTECH_NAND2 port map( A => n7976, B => n10420, Z => n10419);
   U10377 : GTECH_NAND2 port map( A => n10421, B => n10422, Z => n10420);
   U10378 : GTECH_NOR2 port map( A => n10423, B => n10424, Z => n10422);
   U10379 : GTECH_NAND2 port map( A => n10425, B => n10426, Z => n10424);
   U10380 : GTECH_NAND2 port map( A => stackA_10_port, B => n6854, Z => n10426)
                           ;
   U10381 : GTECH_NAND2 port map( A => N1051, B => n6632, Z => n10425);
   U10382 : GTECH_NOT port map( A => n10427, Z => n10423);
   U10383 : GTECH_NOR2 port map( A => n10428, B => n6873, Z => n10427);
   U10384 : GTECH_NOR2 port map( A => n7941, B => n10429, Z => n10428);
   U10385 : GTECH_NOR2 port map( A => n6876, B => n10430, Z => n10429);
   U10386 : GTECH_NOR2 port map( A => n8327, B => n6878, Z => n10430);
   U10387 : GTECH_NOT port map( A => stackB_17_port, Z => n7941);
   U10388 : GTECH_NOR2 port map( A => n10431, B => n10432, Z => n10421);
   U10389 : GTECH_NAND2 port map( A => n10433, B => n10434, Z => n10432);
   U10390 : GTECH_NAND2 port map( A => stackA_17_port, B => n6764, Z => n10434)
                           ;
   U10391 : GTECH_NAND2 port map( A => N1334, B => n6639, Z => n10433);
   U10392 : GTECH_NOR2 port map( A => n8142, B => n7705, Z => n10431);
   U10393 : GTECH_NOT port map( A => n60, Z => n7705);
   U10394 : GTECH_NAND2 port map( A => N712, B => n6674, Z => n10418);
   U10395 : GTECH_NAND2 port map( A => n6675, B => n11064, Z => n10415);
   U10396 : GTECH_NAND2 port map( A => n10435, B => n10436, Z => n5475);
   U10397 : GTECH_NOR2 port map( A => n10437, B => n10438, Z => n10436);
   U10398 : GTECH_NAND2 port map( A => n10439, B => n10440, Z => n10438);
   U10399 : GTECH_NAND2 port map( A => n11063, B => n6673, Z => n10440);
   U10400 : GTECH_NOR2 port map( A => n10441, B => n10442, Z => n10439);
   U10401 : GTECH_NOR2 port map( A => n6683, B => n8312, Z => n10442);
   U10402 : GTECH_NOR2 port map( A => n6682, B => n10443, Z => n10441);
   U10403 : GTECH_NOT port map( A => sp_15_port, Z => n10443);
   U10404 : GTECH_NAND2 port map( A => n10444, B => n10445, Z => n10437);
   U10405 : GTECH_NAND2 port map( A => N3004, B => n6616, Z => n10445);
   U10406 : GTECH_NOR2 port map( A => n10446, B => n10447, Z => n10444);
   U10407 : GTECH_NOR2 port map( A => n6619, B => n6863, Z => n10447);
   U10408 : GTECH_NOT port map( A => stackA_16_port, Z => n6863);
   U10409 : GTECH_NOR2 port map( A => n8318, B => n9862, Z => n10446);
   U10410 : GTECH_NOT port map( A => mem_read(15), Z => n8318);
   U10411 : GTECH_NOR2 port map( A => n10448, B => n10449, Z => n10435);
   U10412 : GTECH_NAND2 port map( A => n10450, B => n10451, Z => n10449);
   U10413 : GTECH_NAND2 port map( A => pc_15_port, B => n6663, Z => n10451);
   U10414 : GTECH_NOR2 port map( A => n10452, B => n10453, Z => n10450);
   U10415 : GTECH_NOR2 port map( A => n6666, B => n6887, Z => n10453);
   U10416 : GTECH_NOR2 port map( A => stackA_15_port, B => n6667, Z => n10452);
   U10417 : GTECH_NAND2 port map( A => n10454, B => n10455, Z => n10448);
   U10418 : GTECH_NOT port map( A => n10456, Z => n10455);
   U10419 : GTECH_NAND2 port map( A => n10457, B => n10458, Z => n10456);
   U10420 : GTECH_NAND2 port map( A => n7976, B => n10459, Z => n10458);
   U10421 : GTECH_NAND2 port map( A => n10460, B => n10461, Z => n10459);
   U10422 : GTECH_NOR2 port map( A => n10462, B => n10463, Z => n10461);
   U10423 : GTECH_NAND2 port map( A => n10464, B => n10465, Z => n10463);
   U10424 : GTECH_NAND2 port map( A => stackA_8_port, B => n6854, Z => n10465);
   U10425 : GTECH_NAND2 port map( A => N1049, B => n6632, Z => n10464);
   U10426 : GTECH_NOT port map( A => n10466, Z => n10462);
   U10427 : GTECH_NOR2 port map( A => n10467, B => n6873, Z => n10466);
   U10428 : GTECH_NOR2 port map( A => n7924, B => n10468, Z => n10467);
   U10429 : GTECH_NOR2 port map( A => n6876, B => n10469, Z => n10468);
   U10430 : GTECH_NOR2 port map( A => n6887, B => n6878, Z => n10469);
   U10431 : GTECH_NOT port map( A => stackA_15_port, Z => n6887);
   U10432 : GTECH_NOT port map( A => stackB_15_port, Z => n7924);
   U10433 : GTECH_NOR2 port map( A => n10470, B => n10471, Z => n10460);
   U10434 : GTECH_NAND2 port map( A => n10472, B => n10473, Z => n10471);
   U10435 : GTECH_NAND2 port map( A => stackA_15_port, B => n6764, Z => n10473)
                           ;
   U10436 : GTECH_NAND2 port map( A => N1332, B => n6639, Z => n10472);
   U10437 : GTECH_NOR2 port map( A => n8142, B => n7684, Z => n10470);
   U10438 : GTECH_NOT port map( A => n62, Z => n7684);
   U10439 : GTECH_NAND2 port map( A => N710, B => n6674, Z => n10457);
   U10440 : GTECH_NAND2 port map( A => n6675, B => n11062, Z => n10454);
   U10441 : GTECH_NAND2 port map( A => n10474, B => n10475, Z => n5474);
   U10442 : GTECH_NOR2 port map( A => n10476, B => n10477, Z => n10475);
   U10443 : GTECH_NAND2 port map( A => n10478, B => n10479, Z => n10477);
   U10444 : GTECH_NAND2 port map( A => n11061, B => n6673, Z => n10479);
   U10445 : GTECH_NOR2 port map( A => n10480, B => n10481, Z => n10478);
   U10446 : GTECH_NOR2 port map( A => n6683, B => n8306, Z => n10481);
   U10447 : GTECH_NOR2 port map( A => n6682, B => n10482, Z => n10480);
   U10448 : GTECH_NOT port map( A => sp_14_port, Z => n10482);
   U10449 : GTECH_NAND2 port map( A => n10483, B => n10484, Z => n10476);
   U10450 : GTECH_NAND2 port map( A => N3003, B => n6616, Z => n10484);
   U10451 : GTECH_NOR2 port map( A => n10485, B => n10486, Z => n10483);
   U10452 : GTECH_NOR2 port map( A => n6619, B => n8327, Z => n10486);
   U10453 : GTECH_NOT port map( A => stackA_17_port, Z => n8327);
   U10454 : GTECH_NOR2 port map( A => n8313, B => n9862, Z => n10485);
   U10455 : GTECH_NOT port map( A => mem_read(14), Z => n8313);
   U10456 : GTECH_NOR2 port map( A => n10487, B => n10488, Z => n10474);
   U10457 : GTECH_NAND2 port map( A => n10489, B => n10490, Z => n10488);
   U10458 : GTECH_NAND2 port map( A => pc_14_port, B => n6663, Z => n10490);
   U10459 : GTECH_NOR2 port map( A => n10491, B => n10492, Z => n10489);
   U10460 : GTECH_NOR2 port map( A => n6666, B => n8312, Z => n10492);
   U10461 : GTECH_NOR2 port map( A => stackA_14_port, B => n6667, Z => n10491);
   U10462 : GTECH_NAND2 port map( A => n10493, B => n10494, Z => n10487);
   U10463 : GTECH_NOT port map( A => n10495, Z => n10494);
   U10464 : GTECH_NAND2 port map( A => n10496, B => n10497, Z => n10495);
   U10465 : GTECH_NAND2 port map( A => n7976, B => n10498, Z => n10497);
   U10466 : GTECH_NAND2 port map( A => n10499, B => n10500, Z => n10498);
   U10467 : GTECH_NOR2 port map( A => n10501, B => n10502, Z => n10500);
   U10468 : GTECH_NAND2 port map( A => n10503, B => n10504, Z => n10502);
   U10469 : GTECH_NAND2 port map( A => stackA_7_port, B => n6854, Z => n10504);
   U10470 : GTECH_NAND2 port map( A => N1048, B => n6632, Z => n10503);
   U10471 : GTECH_NOT port map( A => n10505, Z => n10501);
   U10472 : GTECH_NOR2 port map( A => n10506, B => n6873, Z => n10505);
   U10473 : GTECH_NOR2 port map( A => n7923, B => n10507, Z => n10506);
   U10474 : GTECH_NOR2 port map( A => n6876, B => n10508, Z => n10507);
   U10475 : GTECH_NOR2 port map( A => n8312, B => n6878, Z => n10508);
   U10476 : GTECH_NOT port map( A => stackA_14_port, Z => n8312);
   U10477 : GTECH_NOT port map( A => stackB_14_port, Z => n7923);
   U10478 : GTECH_NOR2 port map( A => n10509, B => n10510, Z => n10499);
   U10479 : GTECH_NAND2 port map( A => n10511, B => n10512, Z => n10510);
   U10480 : GTECH_NAND2 port map( A => stackA_14_port, B => n6764, Z => n10512)
                           ;
   U10481 : GTECH_NAND2 port map( A => N1331, B => n6639, Z => n10511);
   U10482 : GTECH_NOR2 port map( A => n8142, B => n7673, Z => n10509);
   U10483 : GTECH_NOT port map( A => n63, Z => n7673);
   U10484 : GTECH_NAND2 port map( A => N709, B => n6674, Z => n10496);
   U10485 : GTECH_NAND2 port map( A => n6675, B => n11060, Z => n10493);
   U10486 : GTECH_NAND2 port map( A => n10513, B => n10514, Z => n5473);
   U10487 : GTECH_NOR2 port map( A => n10515, B => n10516, Z => n10514);
   U10488 : GTECH_NAND2 port map( A => n10517, B => n10518, Z => n10516);
   U10489 : GTECH_NAND2 port map( A => n11059, B => n6673, Z => n10518);
   U10490 : GTECH_NOR2 port map( A => n10519, B => n10520, Z => n10517);
   U10491 : GTECH_NOR2 port map( A => n6683, B => n8300, Z => n10520);
   U10492 : GTECH_NOR2 port map( A => n6682, B => n10521, Z => n10519);
   U10493 : GTECH_NOT port map( A => sp_13_port, Z => n10521);
   U10494 : GTECH_NAND2 port map( A => n10522, B => n10523, Z => n10515);
   U10495 : GTECH_NAND2 port map( A => N3002, B => n6616, Z => n10523);
   U10496 : GTECH_NOR2 port map( A => n10524, B => n10525, Z => n10522);
   U10497 : GTECH_NOR2 port map( A => n6619, B => n8332, Z => n10525);
   U10498 : GTECH_NOT port map( A => stackA_18_port, Z => n8332);
   U10499 : GTECH_NOR2 port map( A => n8307, B => n9862, Z => n10524);
   U10500 : GTECH_NOT port map( A => mem_read(13), Z => n8307);
   U10501 : GTECH_NOR2 port map( A => n10526, B => n10527, Z => n10513);
   U10502 : GTECH_NAND2 port map( A => n10528, B => n10529, Z => n10527);
   U10503 : GTECH_NAND2 port map( A => pc_13_port, B => n6663, Z => n10529);
   U10504 : GTECH_NOR2 port map( A => n10530, B => n10531, Z => n10528);
   U10505 : GTECH_NOR2 port map( A => n6666, B => n8306, Z => n10531);
   U10506 : GTECH_NOR2 port map( A => stackA_13_port, B => n6667, Z => n10530);
   U10507 : GTECH_NAND2 port map( A => n10532, B => n10533, Z => n10526);
   U10508 : GTECH_NOT port map( A => n10534, Z => n10533);
   U10509 : GTECH_NAND2 port map( A => n10535, B => n10536, Z => n10534);
   U10510 : GTECH_NAND2 port map( A => n7976, B => n10537, Z => n10536);
   U10511 : GTECH_NAND2 port map( A => n10538, B => n10539, Z => n10537);
   U10512 : GTECH_NOR2 port map( A => n10540, B => n10541, Z => n10539);
   U10513 : GTECH_NAND2 port map( A => n10542, B => n10543, Z => n10541);
   U10514 : GTECH_NAND2 port map( A => stackA_6_port, B => n6854, Z => n10543);
   U10515 : GTECH_NAND2 port map( A => N1047, B => n6632, Z => n10542);
   U10516 : GTECH_NOT port map( A => n10544, Z => n10540);
   U10517 : GTECH_NOR2 port map( A => n10545, B => n6873, Z => n10544);
   U10518 : GTECH_NOR2 port map( A => n7922, B => n10546, Z => n10545);
   U10519 : GTECH_NOR2 port map( A => n6876, B => n10547, Z => n10546);
   U10520 : GTECH_NOR2 port map( A => n8306, B => n6878, Z => n10547);
   U10521 : GTECH_NOT port map( A => stackA_13_port, Z => n8306);
   U10522 : GTECH_NOT port map( A => stackB_13_port, Z => n7922);
   U10523 : GTECH_NOR2 port map( A => n10548, B => n10549, Z => n10538);
   U10524 : GTECH_NAND2 port map( A => n10550, B => n10551, Z => n10549);
   U10525 : GTECH_NAND2 port map( A => stackA_13_port, B => n6764, Z => n10551)
                           ;
   U10526 : GTECH_NAND2 port map( A => N1330, B => n6639, Z => n10550);
   U10527 : GTECH_NOR2 port map( A => n8142, B => n7662, Z => n10548);
   U10528 : GTECH_NOT port map( A => n64, Z => n7662);
   U10529 : GTECH_NAND2 port map( A => N708, B => n6674, Z => n10535);
   U10530 : GTECH_NAND2 port map( A => n6675, B => n11058, Z => n10532);
   U10531 : GTECH_NAND2 port map( A => n10552, B => n10553, Z => n5472);
   U10532 : GTECH_NOR2 port map( A => n10554, B => n10555, Z => n10553);
   U10533 : GTECH_NAND2 port map( A => n10556, B => n10557, Z => n10555);
   U10534 : GTECH_NAND2 port map( A => n11057, B => n6673, Z => n10557);
   U10535 : GTECH_NOR2 port map( A => n10558, B => n10559, Z => n10556);
   U10536 : GTECH_NOR2 port map( A => n6683, B => n8295, Z => n10559);
   U10537 : GTECH_NOR2 port map( A => n6682, B => n10560, Z => n10558);
   U10538 : GTECH_NOT port map( A => sp_12_port, Z => n10560);
   U10539 : GTECH_NAND2 port map( A => n10561, B => n10562, Z => n10554);
   U10540 : GTECH_NAND2 port map( A => N3001, B => n6616, Z => n10562);
   U10541 : GTECH_NOR2 port map( A => n10563, B => n10564, Z => n10561);
   U10542 : GTECH_NOR2 port map( A => n6619, B => n8337, Z => n10564);
   U10543 : GTECH_NOT port map( A => stackA_19_port, Z => n8337);
   U10544 : GTECH_NOR2 port map( A => n8301, B => n9862, Z => n10563);
   U10545 : GTECH_NOT port map( A => mem_read(12), Z => n8301);
   U10546 : GTECH_NOR2 port map( A => n10565, B => n10566, Z => n10552);
   U10547 : GTECH_NAND2 port map( A => n10567, B => n10568, Z => n10566);
   U10548 : GTECH_NAND2 port map( A => pc_12_port, B => n6663, Z => n10568);
   U10549 : GTECH_NOR2 port map( A => n10569, B => n10570, Z => n10567);
   U10550 : GTECH_NOR2 port map( A => n6666, B => n8300, Z => n10570);
   U10551 : GTECH_NOR2 port map( A => stackA_12_port, B => n6667, Z => n10569);
   U10552 : GTECH_NAND2 port map( A => n10571, B => n10572, Z => n10565);
   U10553 : GTECH_NOT port map( A => n10573, Z => n10572);
   U10554 : GTECH_NAND2 port map( A => n10574, B => n10575, Z => n10573);
   U10555 : GTECH_NAND2 port map( A => n7976, B => n10576, Z => n10575);
   U10556 : GTECH_NAND2 port map( A => n10577, B => n10578, Z => n10576);
   U10557 : GTECH_NOR2 port map( A => n10579, B => n10580, Z => n10578);
   U10558 : GTECH_NAND2 port map( A => n10581, B => n10582, Z => n10580);
   U10559 : GTECH_NAND2 port map( A => n6854, B => stackA_5_port, Z => n10582);
   U10560 : GTECH_NAND2 port map( A => N1046, B => n6632, Z => n10581);
   U10561 : GTECH_NOT port map( A => n10583, Z => n10579);
   U10562 : GTECH_NOR2 port map( A => n10584, B => n6873, Z => n10583);
   U10563 : GTECH_NOR2 port map( A => n7930, B => n10585, Z => n10584);
   U10564 : GTECH_NOR2 port map( A => n6876, B => n10586, Z => n10585);
   U10565 : GTECH_NOR2 port map( A => n8300, B => n6878, Z => n10586);
   U10566 : GTECH_NOT port map( A => stackA_12_port, Z => n8300);
   U10567 : GTECH_NOT port map( A => stackB_12_port, Z => n7930);
   U10568 : GTECH_NOR2 port map( A => n10587, B => n10588, Z => n10577);
   U10569 : GTECH_NAND2 port map( A => n10589, B => n10590, Z => n10588);
   U10570 : GTECH_NAND2 port map( A => stackA_12_port, B => n6764, Z => n10590)
                           ;
   U10571 : GTECH_NAND2 port map( A => N1329, B => n6639, Z => n10589);
   U10572 : GTECH_NOR2 port map( A => n8142, B => n7651, Z => n10587);
   U10573 : GTECH_NOT port map( A => n65, Z => n7651);
   U10574 : GTECH_NAND2 port map( A => N707, B => n6674, Z => n10574);
   U10575 : GTECH_NAND2 port map( A => n6675, B => n11056, Z => n10571);
   U10576 : GTECH_NAND2 port map( A => n10591, B => n10592, Z => n5471);
   U10577 : GTECH_NOR2 port map( A => n10593, B => n10594, Z => n10592);
   U10578 : GTECH_NAND2 port map( A => n10595, B => n10596, Z => n10594);
   U10579 : GTECH_NAND2 port map( A => n11055, B => n6673, Z => n10596);
   U10580 : GTECH_NOR2 port map( A => n10597, B => n10598, Z => n10595);
   U10581 : GTECH_NOR2 port map( A => n6683, B => n8290, Z => n10598);
   U10582 : GTECH_NOR2 port map( A => n6682, B => n10599, Z => n10597);
   U10583 : GTECH_NOT port map( A => sp_11_port, Z => n10599);
   U10584 : GTECH_NAND2 port map( A => n10600, B => n10601, Z => n10593);
   U10585 : GTECH_NAND2 port map( A => N3000, B => n6616, Z => n10601);
   U10586 : GTECH_NOR2 port map( A => n10602, B => n10603, Z => n10600);
   U10587 : GTECH_NOR2 port map( A => n6619, B => n8342, Z => n10603);
   U10588 : GTECH_NOT port map( A => stackA_20_port, Z => n8342);
   U10589 : GTECH_NOR2 port map( A => n6714, B => n9862, Z => n10602);
   U10590 : GTECH_NOT port map( A => mem_read(11), Z => n6714);
   U10591 : GTECH_NOR2 port map( A => n10604, B => n10605, Z => n10591);
   U10592 : GTECH_NAND2 port map( A => n10606, B => n10607, Z => n10605);
   U10593 : GTECH_NAND2 port map( A => pc_11_port, B => n6663, Z => n10607);
   U10594 : GTECH_NOR2 port map( A => n10608, B => n10609, Z => n10606);
   U10595 : GTECH_NOR2 port map( A => n6666, B => n8295, Z => n10609);
   U10596 : GTECH_NOR2 port map( A => stackA_11_port, B => n6667, Z => n10608);
   U10597 : GTECH_NAND2 port map( A => n10610, B => n10611, Z => n10604);
   U10598 : GTECH_NOT port map( A => n10612, Z => n10611);
   U10599 : GTECH_NAND2 port map( A => n10613, B => n10614, Z => n10612);
   U10600 : GTECH_NAND2 port map( A => n7976, B => n10615, Z => n10614);
   U10601 : GTECH_NAND2 port map( A => n10616, B => n10617, Z => n10615);
   U10602 : GTECH_NOR2 port map( A => n10618, B => n10619, Z => n10617);
   U10603 : GTECH_NAND2 port map( A => n10620, B => n10621, Z => n10619);
   U10604 : GTECH_NAND2 port map( A => n6854, B => stackA_4_port, Z => n10621);
   U10605 : GTECH_NAND2 port map( A => N1045, B => n6632, Z => n10620);
   U10606 : GTECH_NOT port map( A => n10622, Z => n10618);
   U10607 : GTECH_NOR2 port map( A => n10623, B => n6873, Z => n10622);
   U10608 : GTECH_NOR2 port map( A => n7929, B => n10624, Z => n10623);
   U10609 : GTECH_NOR2 port map( A => n6876, B => n10625, Z => n10624);
   U10610 : GTECH_NOR2 port map( A => n8295, B => n6878, Z => n10625);
   U10611 : GTECH_NOT port map( A => stackA_11_port, Z => n8295);
   U10612 : GTECH_NOT port map( A => stackB_11_port, Z => n7929);
   U10613 : GTECH_NOR2 port map( A => n10626, B => n10627, Z => n10616);
   U10614 : GTECH_NAND2 port map( A => n10628, B => n10629, Z => n10627);
   U10615 : GTECH_NAND2 port map( A => stackA_11_port, B => n6764, Z => n10629)
                           ;
   U10616 : GTECH_NAND2 port map( A => N1328, B => n6639, Z => n10628);
   U10617 : GTECH_NOR2 port map( A => n8142, B => n7640, Z => n10626);
   U10618 : GTECH_NOT port map( A => n66, Z => n7640);
   U10619 : GTECH_NAND2 port map( A => N706, B => n6674, Z => n10613);
   U10620 : GTECH_NAND2 port map( A => n6675, B => n11054, Z => n10610);
   U10621 : GTECH_NAND2 port map( A => n10630, B => n10631, Z => n5470);
   U10622 : GTECH_NOR2 port map( A => n10632, B => n10633, Z => n10631);
   U10623 : GTECH_NAND2 port map( A => n10634, B => n10635, Z => n10633);
   U10624 : GTECH_NAND2 port map( A => n11053, B => n6673, Z => n10635);
   U10625 : GTECH_NOR2 port map( A => n10636, B => n10637, Z => n10634);
   U10626 : GTECH_NOR2 port map( A => n6683, B => n7613, Z => n10637);
   U10627 : GTECH_NOR2 port map( A => n6682, B => n10638, Z => n10636);
   U10628 : GTECH_NOT port map( A => sp_10_port, Z => n10638);
   U10629 : GTECH_NAND2 port map( A => n10639, B => n10640, Z => n10632);
   U10630 : GTECH_NAND2 port map( A => N2999, B => n6616, Z => n10640);
   U10631 : GTECH_NOR2 port map( A => n10641, B => n10642, Z => n10639);
   U10632 : GTECH_NOR2 port map( A => n6619, B => n8348, Z => n10642);
   U10633 : GTECH_NOT port map( A => stackA_21_port, Z => n8348);
   U10634 : GTECH_NOR2 port map( A => n6658, B => n9862, Z => n10641);
   U10635 : GTECH_NOT port map( A => mem_read(10), Z => n6658);
   U10636 : GTECH_NOR2 port map( A => n10643, B => n10644, Z => n10630);
   U10637 : GTECH_NAND2 port map( A => n10645, B => n10646, Z => n10644);
   U10638 : GTECH_NAND2 port map( A => pc_10_port, B => n6663, Z => n10646);
   U10639 : GTECH_NOR2 port map( A => n10647, B => n10648, Z => n10645);
   U10640 : GTECH_NOR2 port map( A => n6666, B => n8290, Z => n10648);
   U10641 : GTECH_NOR2 port map( A => stackA_10_port, B => n6667, Z => n10647);
   U10642 : GTECH_NAND2 port map( A => n10649, B => n10650, Z => n10643);
   U10643 : GTECH_NOT port map( A => n10651, Z => n10650);
   U10644 : GTECH_NAND2 port map( A => n10652, B => n10653, Z => n10651);
   U10645 : GTECH_NAND2 port map( A => n7976, B => n10654, Z => n10653);
   U10646 : GTECH_NAND2 port map( A => n10655, B => n10656, Z => n10654);
   U10647 : GTECH_NOR2 port map( A => n10657, B => n10658, Z => n10656);
   U10648 : GTECH_NAND2 port map( A => n10659, B => n10660, Z => n10658);
   U10649 : GTECH_NAND2 port map( A => n6854, B => stackA_3_port, Z => n10660);
   U10650 : GTECH_NAND2 port map( A => N1044, B => n6632, Z => n10659);
   U10651 : GTECH_NOT port map( A => n10661, Z => n10657);
   U10652 : GTECH_NOR2 port map( A => n10662, B => n6873, Z => n10661);
   U10653 : GTECH_NOR2 port map( A => n7928, B => n10663, Z => n10662);
   U10654 : GTECH_NOR2 port map( A => n6876, B => n10664, Z => n10663);
   U10655 : GTECH_NOR2 port map( A => n8290, B => n6878, Z => n10664);
   U10656 : GTECH_NOT port map( A => stackA_10_port, Z => n8290);
   U10657 : GTECH_NOT port map( A => stackB_10_port, Z => n7928);
   U10658 : GTECH_NOR2 port map( A => n10665, B => n10666, Z => n10655);
   U10659 : GTECH_NAND2 port map( A => n10667, B => n10668, Z => n10666);
   U10660 : GTECH_NAND2 port map( A => stackA_10_port, B => n6764, Z => n10668)
                           ;
   U10661 : GTECH_NAND2 port map( A => N1327, B => n6639, Z => n10667);
   U10662 : GTECH_NOR2 port map( A => n8142, B => n7629, Z => n10665);
   U10663 : GTECH_NOT port map( A => n67, Z => n7629);
   U10664 : GTECH_NAND2 port map( A => N705, B => n6674, Z => n10652);
   U10665 : GTECH_NAND2 port map( A => n6675, B => n11052, Z => n10649);
   U10666 : GTECH_NAND2 port map( A => n10669, B => n10670, Z => n5469);
   U10667 : GTECH_NOR2 port map( A => n10671, B => n10672, Z => n10670);
   U10668 : GTECH_NAND2 port map( A => n10673, B => n10674, Z => n10672);
   U10669 : GTECH_NAND2 port map( A => n11051, B => n6673, Z => n10674);
   U10670 : GTECH_NOR2 port map( A => n10675, B => n10676, Z => n10673);
   U10671 : GTECH_NOR2 port map( A => n6683, B => n7593, Z => n10676);
   U10672 : GTECH_NOR2 port map( A => n6682, B => n10677, Z => n10675);
   U10673 : GTECH_NOT port map( A => sp_9_port, Z => n10677);
   U10674 : GTECH_NAND2 port map( A => n10678, B => n10679, Z => n10671);
   U10675 : GTECH_NAND2 port map( A => N2998, B => n6616, Z => n10679);
   U10676 : GTECH_NOR2 port map( A => n10680, B => n10681, Z => n10678);
   U10677 : GTECH_NOR2 port map( A => n6619, B => n8354, Z => n10681);
   U10678 : GTECH_NOT port map( A => stackA_22_port, Z => n8354);
   U10679 : GTECH_NOR2 port map( A => n8053, B => n9862, Z => n10680);
   U10680 : GTECH_NOT port map( A => mem_read(9), Z => n8053);
   U10681 : GTECH_NOR2 port map( A => n10682, B => n10683, Z => n10669);
   U10682 : GTECH_NAND2 port map( A => n10684, B => n10685, Z => n10683);
   U10683 : GTECH_NAND2 port map( A => pc_9_port, B => n6663, Z => n10685);
   U10684 : GTECH_NOT port map( A => n6734, Z => n6663);
   U10685 : GTECH_NOR2 port map( A => n10686, B => n10687, Z => n10684);
   U10686 : GTECH_NOR2 port map( A => n6666, B => n7613, Z => n10687);
   U10687 : GTECH_NOR2 port map( A => stackA_9_port, B => n6667, Z => n10686);
   U10688 : GTECH_NAND2 port map( A => n10688, B => n10689, Z => n10682);
   U10689 : GTECH_NOT port map( A => n10690, Z => n10689);
   U10690 : GTECH_NAND2 port map( A => n10691, B => n10692, Z => n10690);
   U10691 : GTECH_NAND2 port map( A => n7976, B => n10693, Z => n10692);
   U10692 : GTECH_NAND2 port map( A => n10694, B => n10695, Z => n10693);
   U10693 : GTECH_NOR2 port map( A => n10696, B => n10697, Z => n10695);
   U10694 : GTECH_NAND2 port map( A => n10698, B => n10699, Z => n10697);
   U10695 : GTECH_NAND2 port map( A => n6854, B => stackA_2_port, Z => n10699);
   U10696 : GTECH_NAND2 port map( A => N1043, B => n6632, Z => n10698);
   U10697 : GTECH_NOT port map( A => n10700, Z => n10696);
   U10698 : GTECH_NOR2 port map( A => n10701, B => n6873, Z => n10700);
   U10699 : GTECH_NOR2 port map( A => n7909, B => n10702, Z => n10701);
   U10700 : GTECH_NOR2 port map( A => n6876, B => n10703, Z => n10702);
   U10701 : GTECH_NOR2 port map( A => n7613, B => n6878, Z => n10703);
   U10702 : GTECH_NOT port map( A => stackA_9_port, Z => n7613);
   U10703 : GTECH_NOT port map( A => stackB_9_port, Z => n7909);
   U10704 : GTECH_NOR2 port map( A => n10704, B => n10705, Z => n10694);
   U10705 : GTECH_NAND2 port map( A => n10706, B => n10707, Z => n10705);
   U10706 : GTECH_NAND2 port map( A => stackA_9_port, B => n6764, Z => n10707);
   U10707 : GTECH_NAND2 port map( A => N1326, B => n6639, Z => n10706);
   U10708 : GTECH_NOR2 port map( A => n8142, B => n10708, Z => n10704);
   U10709 : GTECH_NOT port map( A => n68, Z => n10708);
   U10710 : GTECH_NAND2 port map( A => N704, B => n6674, Z => n10691);
   U10711 : GTECH_NAND2 port map( A => n6675, B => n11050, Z => n10688);
   U10712 : GTECH_NAND2 port map( A => n10709, B => n10710, Z => n5468);
   U10713 : GTECH_NOR2 port map( A => n10711, B => n10712, Z => n10710);
   U10714 : GTECH_NAND2 port map( A => n10713, B => n10714, Z => n10712);
   U10715 : GTECH_NAND2 port map( A => n11049, B => n6673, Z => n10714);
   U10716 : GTECH_NOR2 port map( A => n7126, B => n6622, Z => n6673);
   U10717 : GTECH_NOR2 port map( A => n10715, B => n10716, Z => n10713);
   U10718 : GTECH_NOR2 port map( A => n6683, B => n7574, Z => n10716);
   U10719 : GTECH_NOT port map( A => stackA_7_port, Z => n7574);
   U10720 : GTECH_NAND2 port map( A => n6754, B => n7976, Z => n6683);
   U10721 : GTECH_NOR2 port map( A => n10717, B => n7459, Z => n6754);
   U10722 : GTECH_NAND2 port map( A => n6230, B => n7956, Z => n10717);
   U10723 : GTECH_NOR2 port map( A => n6682, B => n10718, Z => n10715);
   U10724 : GTECH_NOT port map( A => sp_8_port, Z => n10718);
   U10725 : GTECH_NAND2 port map( A => n6751, B => n7976, Z => n6682);
   U10726 : GTECH_NOT port map( A => n10719, Z => n6751);
   U10727 : GTECH_NAND2 port map( A => n9844, B => n6230, Z => n10719);
   U10728 : GTECH_NAND2 port map( A => n10720, B => n10721, Z => n10711);
   U10729 : GTECH_NAND2 port map( A => N2997, B => n6616, Z => n10721);
   U10730 : GTECH_NOT port map( A => n10722, Z => n6616);
   U10731 : GTECH_NAND2 port map( A => n6755, B => n7976, Z => n10722);
   U10732 : GTECH_NOR2 port map( A => n10723, B => n7162, Z => n6755);
   U10733 : GTECH_NOR2 port map( A => n10724, B => n10725, Z => n10720);
   U10734 : GTECH_NOR2 port map( A => n6619, B => n8360, Z => n10725);
   U10735 : GTECH_NOT port map( A => stackA_23_port, Z => n8360);
   U10736 : GTECH_NAND2 port map( A => n8032, B => n7976, Z => n6619);
   U10737 : GTECH_NOR2 port map( A => n10344, B => n7162, Z => n8032);
   U10738 : GTECH_NOT port map( A => n10726, Z => n10344);
   U10739 : GTECH_NOR2 port map( A => n7987, B => n9862, Z => n10724);
   U10740 : GTECH_NAND2 port map( A => n7976, B => n8170, Z => n9862);
   U10741 : GTECH_NOT port map( A => mem_read(8), Z => n7987);
   U10742 : GTECH_NOR2 port map( A => n10727, B => n10728, Z => n10709);
   U10743 : GTECH_NAND2 port map( A => n10729, B => n10730, Z => n10728);
   U10744 : GTECH_NAND2 port map( A => n7976, B => n10731, Z => n10730);
   U10745 : GTECH_NAND2 port map( A => n10732, B => n10733, Z => n10731);
   U10746 : GTECH_NOR2 port map( A => n10734, B => n10735, Z => n10733);
   U10747 : GTECH_NAND2 port map( A => n10736, B => n10737, Z => n10735);
   U10748 : GTECH_NAND2 port map( A => n6854, B => stackA_1_port, Z => n10737);
   U10749 : GTECH_NOR2 port map( A => n9849, B => n6227, Z => n6854);
   U10750 : GTECH_NAND2 port map( A => N1042, B => n6632, Z => n10736);
   U10751 : GTECH_NOR2 port map( A => n10738, B => n7162, Z => n6632);
   U10752 : GTECH_NOT port map( A => n10354, Z => n10738);
   U10753 : GTECH_NOT port map( A => n10739, Z => n10734);
   U10754 : GTECH_NOR2 port map( A => n10740, B => n6873, Z => n10739);
   U10755 : GTECH_NOR2 port map( A => n10741, B => n6227, Z => n6873);
   U10756 : GTECH_NOT port map( A => n6650, Z => n6227);
   U10757 : GTECH_NOR2 port map( A => n7875, B => n7162, Z => n6650);
   U10758 : GTECH_NAND2 port map( A => n9849, B => n8112, Z => n10741);
   U10759 : GTECH_NOT port map( A => n10342, Z => n8112);
   U10760 : GTECH_NOR2 port map( A => n10742, B => n10743, Z => n10342);
   U10761 : GTECH_NAND2 port map( A => n10744, B => n10745, Z => n10743);
   U10762 : GTECH_NAND2 port map( A => n6031, B => opcode_2_6_port, Z => n10745
                           );
   U10763 : GTECH_NOT port map( A => n6149, Z => n6031);
   U10764 : GTECH_NAND2 port map( A => pc_1_port, B => n7469, Z => n6149);
   U10765 : GTECH_NAND2 port map( A => n6029, B => opcode_3_6_port, Z => n10744
                           );
   U10766 : GTECH_NOT port map( A => n6147, Z => n6029);
   U10767 : GTECH_NAND2 port map( A => pc_1_port, B => pc_0_port, Z => n6147);
   U10768 : GTECH_NAND2 port map( A => n10746, B => n10747, Z => n10742);
   U10769 : GTECH_NAND2 port map( A => n6133, B => opcode_0_6_port, Z => n10747
                           );
   U10770 : GTECH_NOR2 port map( A => pc_1_port, B => pc_0_port, Z => n6133);
   U10771 : GTECH_NAND2 port map( A => n6079, B => opcode_1_6_port, Z => n10746
                           );
   U10772 : GTECH_NOR2 port map( A => n7469, B => pc_1_port, Z => n6079);
   U10773 : GTECH_NOT port map( A => pc_0_port, Z => n7469);
   U10774 : GTECH_NOT port map( A => n11094, Z => n9849);
   U10775 : GTECH_NOR2 port map( A => n7908, B => n10748, Z => n10740);
   U10776 : GTECH_NOR2 port map( A => n6876, B => n10749, Z => n10748);
   U10777 : GTECH_NOR2 port map( A => n7593, B => n6878, Z => n10749);
   U10778 : GTECH_NAND2 port map( A => n7142, B => n6230, Z => n6878);
   U10779 : GTECH_NOR2 port map( A => n7162, B => n10349, Z => n6876);
   U10780 : GTECH_NOT port map( A => stackB_8_port, Z => n7908);
   U10781 : GTECH_NOR2 port map( A => n10750, B => n10751, Z => n10732);
   U10782 : GTECH_NAND2 port map( A => n10752, B => n10753, Z => n10751);
   U10783 : GTECH_NAND2 port map( A => stackA_8_port, B => n6764, Z => n10753);
   U10784 : GTECH_NOR2 port map( A => n10356, B => n7162, Z => n6764);
   U10785 : GTECH_NAND2 port map( A => N1325, B => n6639, Z => n10752);
   U10786 : GTECH_NOR2 port map( A => n7137, B => n7162, Z => n6639);
   U10787 : GTECH_NOR2 port map( A => n8142, B => n10754, Z => n10750);
   U10788 : GTECH_NOT port map( A => n69, Z => n10754);
   U10789 : GTECH_NAND2 port map( A => n6230, B => n10355, Z => n8142);
   U10790 : GTECH_NOR2 port map( A => n10755, B => n10756, Z => n10729);
   U10791 : GTECH_NOR2 port map( A => n6666, B => n7593, Z => n10756);
   U10792 : GTECH_NOT port map( A => stackA_8_port, Z => n7593);
   U10793 : GTECH_NOR2 port map( A => stackA_8_port, B => n6667, Z => n10755);
   U10794 : GTECH_NAND2 port map( A => n6762, B => n7976, Z => n6667);
   U10795 : GTECH_NOR2 port map( A => n10757, B => n7162, Z => n6762);
   U10796 : GTECH_NOT port map( A => n10758, Z => n10727);
   U10797 : GTECH_NOR2 port map( A => n10759, B => n10760, Z => n10758);
   U10798 : GTECH_NAND2 port map( A => n10761, B => n10762, Z => n10760);
   U10799 : GTECH_NAND2 port map( A => N703, B => n6674, Z => n10762);
   U10800 : GTECH_NOR2 port map( A => n10763, B => n6622, Z => n6674);
   U10801 : GTECH_NAND2 port map( A => n11048, B => n6675, Z => n10761);
   U10802 : GTECH_NOR2 port map( A => n6622, B => n7125, Z => n6675);
   U10803 : GTECH_NOR2 port map( A => n6734, B => n7598, Z => n10759);
   U10804 : GTECH_NOT port map( A => pc_8_port, Z => n7598);
   U10805 : GTECH_NAND2 port map( A => n7976, B => n6860, Z => n6734);
   U10806 : GTECH_NOT port map( A => n6622, Z => n7976);
   U10807 : GTECH_NAND2 port map( A => reset_b, B => n6666, Z => n6622);
   U10808 : GTECH_NOT port map( A => n6731, Z => n6666);
   U10809 : GTECH_NOR2 port map( A => n7449, B => n10764, Z => n6731);
   U10810 : GTECH_NOR2 port map( A => n7451, B => n10765, Z => n10764);
   U10811 : GTECH_NOR2 port map( A => n10766, B => n10767, Z => n10765);
   U10812 : GTECH_NAND2 port map( A => n10768, B => n10769, Z => n10767);
   U10813 : GTECH_NAND2 port map( A => n7442, B => n8170, Z => n10769);
   U10814 : GTECH_NAND2 port map( A => n7966, B => n7488, Z => n8170);
   U10815 : GTECH_NAND2 port map( A => n10770, B => n6230, Z => n10768);
   U10816 : GTECH_NOT port map( A => n10771, Z => n10770);
   U10817 : GTECH_NOR2 port map( A => n7873, B => n10772, Z => n10771);
   U10818 : GTECH_NAND2 port map( A => n10773, B => n10774, Z => n10772);
   U10819 : GTECH_NAND2 port map( A => n10775, B => n7442, Z => n10774);
   U10820 : GTECH_NAND2 port map( A => n10776, B => n10777, Z => n10775);
   U10821 : GTECH_NOR2 port map( A => n9844, B => n10778, Z => n10777);
   U10822 : GTECH_NAND2 port map( A => n7875, B => n10779, Z => n10778);
   U10823 : GTECH_NOT port map( A => n7142, Z => n10779);
   U10824 : GTECH_NAND2 port map( A => n6250, B => n7956, Z => n7875);
   U10825 : GTECH_NOR2 port map( A => n10780, B => n9846, Z => n9844);
   U10826 : GTECH_NOR2 port map( A => n10355, B => n10781, Z => n10776);
   U10827 : GTECH_NAND2 port map( A => n10349, B => n7137, Z => n10781);
   U10828 : GTECH_NOT port map( A => n10782, Z => n7137);
   U10829 : GTECH_NOR2 port map( A => n10783, B => n10784, Z => n10349);
   U10830 : GTECH_NAND2 port map( A => n8949, B => n9843, Z => n10783);
   U10831 : GTECH_NAND2 port map( A => n6249, B => n10785, Z => n9843);
   U10832 : GTECH_NAND2 port map( A => n10786, B => n10787, Z => n10355);
   U10833 : GTECH_NOR2 port map( A => n7141, B => n8933, Z => n10786);
   U10834 : GTECH_NAND2 port map( A => n6249, B => n7956, Z => n10773);
   U10835 : GTECH_NAND2 port map( A => n10788, B => n10789, Z => n7873);
   U10836 : GTECH_NOR2 port map( A => n10354, B => n10726, Z => n10789);
   U10837 : GTECH_NOR2 port map( A => n10780, B => n10790, Z => n10726);
   U10838 : GTECH_NOR2 port map( A => n10791, B => n9846, Z => n10354);
   U10839 : GTECH_NOR2 port map( A => n10792, B => n10793, Z => n10788);
   U10840 : GTECH_NOR2 port map( A => n10790, B => n10757, Z => n10793);
   U10841 : GTECH_NOR2 port map( A => n10723, B => n8971, Z => n10792);
   U10842 : GTECH_NAND2 port map( A => n10794, B => n7482, Z => n10766);
   U10843 : GTECH_NOT port map( A => n9417, Z => n7482);
   U10844 : GTECH_NAND2 port map( A => n7126, B => n10795, Z => n9417);
   U10845 : GTECH_NAND2 port map( A => n6870, B => n7442, Z => n10795);
   U10846 : GTECH_NOT port map( A => n7125, Z => n6870);
   U10847 : GTECH_NAND2 port map( A => n7152, B => n10796, Z => n7125);
   U10848 : GTECH_NAND2 port map( A => n7152, B => n8402, Z => n7126);
   U10849 : GTECH_NOT port map( A => n7184, Z => n7152);
   U10850 : GTECH_NAND2 port map( A => n10797, B => n7442, Z => n10794);
   U10851 : GTECH_NAND2 port map( A => n10763, B => n8154, Z => n10797);
   U10852 : GTECH_NOT port map( A => n7946, Z => n7449);
   U10853 : GTECH_NOR2 port map( A => n7182, B => n10798, Z => n7946);
   U10854 : GTECH_NOR2 port map( A => n7448, B => n7451, Z => n10798);
   U10855 : GTECH_NAND2 port map( A => n10799, B => n7442, Z => n7448);
   U10856 : GTECH_NAND2 port map( A => n10800, B => n10801, Z => n5467);
   U10857 : GTECH_NAND2 port map( A => n10802, B => n7118, Z => n10801);
   U10858 : GTECH_NOR2 port map( A => n10803, B => n7182, Z => n10802);
   U10859 : GTECH_NOR2 port map( A => n10804, B => n10805, Z => n10803);
   U10860 : GTECH_NAND2 port map( A => n10806, B => n10807, Z => n10805);
   U10861 : GTECH_NOT port map( A => n9411, Z => n10807);
   U10862 : GTECH_NAND2 port map( A => n7124, B => n10808, Z => n9411);
   U10863 : GTECH_NAND2 port map( A => n9840, B => n6230, Z => n10808);
   U10864 : GTECH_NOT port map( A => n7874, Z => n9840);
   U10865 : GTECH_NOR2 port map( A => n10809, B => n10810, Z => n10806);
   U10866 : GTECH_NOR2 port map( A => n10811, B => n7123, Z => n10810);
   U10867 : GTECH_NOR2 port map( A => n10812, B => n8928, Z => n10809);
   U10868 : GTECH_NAND2 port map( A => n10813, B => n10814, Z => n10804);
   U10869 : GTECH_NAND2 port map( A => n6230, B => n10815, Z => n10814);
   U10870 : GTECH_NAND2 port map( A => n10816, B => n10817, Z => n10815);
   U10871 : GTECH_NOR2 port map( A => n7857, B => n10818, Z => n10817);
   U10872 : GTECH_NOR2 port map( A => n7146, B => n10819, Z => n10816);
   U10873 : GTECH_NOT port map( A => n10820, Z => n7146);
   U10874 : GTECH_NOR2 port map( A => n9838, B => n10821, Z => n10820);
   U10875 : GTECH_NOR2 port map( A => n10723, B => n9846, Z => n10821);
   U10876 : GTECH_NOT port map( A => n7162, Z => n6230);
   U10877 : GTECH_NOT port map( A => n10822, Z => n10813);
   U10878 : GTECH_NAND2 port map( A => n7488, B => n9429, Z => n10822);
   U10879 : GTECH_NAND2 port map( A => n8402, B => n9408, Z => n7488);
   U10880 : GTECH_NAND2 port map( A => n7116, B => state_3_port, Z => n10800);
   U10881 : GTECH_NAND2 port map( A => n10823, B => n10824, Z => n5466);
   U10882 : GTECH_NAND2 port map( A => n10825, B => n7118, Z => n10824);
   U10883 : GTECH_NOR2 port map( A => n10826, B => n7182, Z => n10825);
   U10884 : GTECH_NOR2 port map( A => n10827, B => n10828, Z => n10826);
   U10885 : GTECH_NAND2 port map( A => n7172, B => n10829, Z => n10828);
   U10886 : GTECH_NOT port map( A => n7490, Z => n10829);
   U10887 : GTECH_NAND2 port map( A => n9429, B => n9420, Z => n7490);
   U10888 : GTECH_NAND2 port map( A => n7153, B => n8415, Z => n9420);
   U10889 : GTECH_NAND2 port map( A => n10796, B => n9408, Z => n9429);
   U10890 : GTECH_NOR2 port map( A => n10830, B => n10831, Z => n7172);
   U10891 : GTECH_NAND2 port map( A => n7492, B => n10832, Z => n10831);
   U10892 : GTECH_NOR2 port map( A => n8420, B => n9535, Z => n10832);
   U10893 : GTECH_NOT port map( A => n9569, Z => n9535);
   U10894 : GTECH_NOT port map( A => n7967, Z => n8420);
   U10895 : GTECH_NAND2 port map( A => n8415, B => n10796, Z => n7967);
   U10896 : GTECH_NAND2 port map( A => state_2_port, B => n10833, Z => n7492);
   U10897 : GTECH_NAND2 port map( A => n10834, B => n10835, Z => n10833);
   U10898 : GTECH_NAND2 port map( A => n10836, B => n8418, Z => n10835);
   U10899 : GTECH_NOT port map( A => n10837, Z => n10834);
   U10900 : GTECH_NAND2 port map( A => n10838, B => n10839, Z => n10837);
   U10901 : GTECH_NAND2 port map( A => n10840, B => n10796, Z => n10839);
   U10902 : GTECH_NAND2 port map( A => n7153, B => n10841, Z => n10838);
   U10903 : GTECH_NOT port map( A => n10842, Z => n7153);
   U10904 : GTECH_NAND2 port map( A => n8154, B => n10843, Z => n10830);
   U10905 : GTECH_NOR2 port map( A => n6859, B => n10799, Z => n10843);
   U10906 : GTECH_NOT port map( A => n7189, Z => n10799);
   U10907 : GTECH_NAND2 port map( A => n10812, B => n6860, Z => n7189);
   U10908 : GTECH_NOT port map( A => n8928, Z => n6860);
   U10909 : GTECH_NAND2 port map( A => n10844, B => n8402, Z => n8928);
   U10910 : GTECH_NOR2 port map( A => n8976, B => n10845, Z => n10844);
   U10911 : GTECH_NOT port map( A => n10846, Z => n10812);
   U10912 : GTECH_NAND2 port map( A => n10847, B => interrupt, Z => n10846);
   U10913 : GTECH_NOR2 port map( A => n11094, B => n11109, Z => n10847);
   U10914 : GTECH_NOT port map( A => n10763, Z => n6859);
   U10915 : GTECH_NAND2 port map( A => n8417, B => n10840, Z => n10763);
   U10916 : GTECH_NOR2 port map( A => n8976, B => n9432, Z => n8417);
   U10917 : GTECH_NAND2 port map( A => n10848, B => n10796, Z => n8154);
   U10918 : GTECH_NOR2 port map( A => n10811, B => state_1_port, Z => n10796);
   U10919 : GTECH_NOT port map( A => n10849, Z => n10827);
   U10920 : GTECH_NOR2 port map( A => n10850, B => n10851, Z => n10849);
   U10921 : GTECH_NOR2 port map( A => n7162, B => n10852, Z => n10851);
   U10922 : GTECH_NOR2 port map( A => n10819, B => n8932, Z => n10852);
   U10923 : GTECH_NAND2 port map( A => n10853, B => n10854, Z => n10819);
   U10924 : GTECH_NOR2 port map( A => n10855, B => n9829, Z => n10853);
   U10925 : GTECH_NAND2 port map( A => n10856, B => n10840, Z => n7162);
   U10926 : GTECH_NAND2 port map( A => n9432, B => n7966, Z => n10850);
   U10927 : GTECH_NAND2 port map( A => n8415, B => n10857, Z => n7966);
   U10928 : GTECH_NAND2 port map( A => n8975, B => n9432, Z => n10857);
   U10929 : GTECH_NOR2 port map( A => n10845, B => state_2_port, Z => n8415);
   U10930 : GTECH_NOT port map( A => n10840, Z => n10845);
   U10931 : GTECH_NOR2 port map( A => state_4_port, B => state_3_port, Z => 
                           n10840);
   U10932 : GTECH_NAND2 port map( A => n7116, B => state_1_port, Z => n10823);
   U10933 : GTECH_NOT port map( A => n7118, Z => n7116);
   U10934 : GTECH_NAND2 port map( A => n6298, B => n10858, Z => n7118);
   U10935 : GTECH_NAND2 port map( A => enable, B => n10859, Z => n10858);
   U10936 : GTECH_NAND2 port map( A => n10860, B => n10861, Z => n10859);
   U10937 : GTECH_NOR2 port map( A => n10862, B => n10863, Z => n10861);
   U10938 : GTECH_NAND2 port map( A => n7123, B => n7188, Z => n10863);
   U10939 : GTECH_NAND2 port map( A => n10848, B => n8402, Z => n7188);
   U10940 : GTECH_NOT port map( A => n8975, Z => n8402);
   U10941 : GTECH_NAND2 port map( A => state_0_port, B => state_1_port, Z => 
                           n8975);
   U10942 : GTECH_NOR2 port map( A => n10864, B => n8976, Z => n10848);
   U10943 : GTECH_NAND2 port map( A => n10865, B => n10841, Z => n7123);
   U10944 : GTECH_NOR2 port map( A => state_1_port, B => n8976, Z => n10865);
   U10945 : GTECH_NOR2 port map( A => in_mem_busy, B => n10866, Z => n10862);
   U10946 : GTECH_NOR2 port map( A => n10867, B => n7969, Z => n10866);
   U10947 : GTECH_NOT port map( A => n7124, Z => n7969);
   U10948 : GTECH_NAND2 port map( A => n10856, B => n8418, Z => n7124);
   U10949 : GTECH_NOT port map( A => n10864, Z => n8418);
   U10950 : GTECH_NOR2 port map( A => state_4_port, B => n10856, Z => n10867);
   U10951 : GTECH_NOR2 port map( A => n10868, B => n10869, Z => n10860);
   U10952 : GTECH_NOR2 port map( A => n10870, B => n7184, Z => n10869);
   U10953 : GTECH_NAND2 port map( A => n10841, B => n8976, Z => n7184);
   U10954 : GTECH_NOR2 port map( A => state_3_port, B => n10871, Z => n10868);
   U10955 : GTECH_NOR2 port map( A => n10872, B => n10873, Z => n10871);
   U10956 : GTECH_NAND2 port map( A => n10874, B => n10875, Z => n10873);
   U10957 : GTECH_NAND2 port map( A => n10876, B => n10856, Z => n10875);
   U10958 : GTECH_NOR2 port map( A => n10841, B => n10877, Z => n10876);
   U10959 : GTECH_NOR2 port map( A => n10878, B => n10879, Z => n10877);
   U10960 : GTECH_NAND2 port map( A => n6232, B => n10880, Z => n10879);
   U10961 : GTECH_NAND2 port map( A => n7962, B => n10881, Z => n10880);
   U10962 : GTECH_NAND2 port map( A => in_mem_busy, B => n7883, Z => n10881);
   U10963 : GTECH_NAND2 port map( A => n10882, B => n10883, Z => n7962);
   U10964 : GTECH_NOR2 port map( A => n7141, B => n9838, Z => n10883);
   U10965 : GTECH_NAND2 port map( A => n7855, B => n8954, Z => n9838);
   U10966 : GTECH_NOT port map( A => n7879, Z => n8954);
   U10967 : GTECH_NOR2 port map( A => n8971, B => n10757, Z => n7879);
   U10968 : GTECH_NOT port map( A => n10884, Z => n7855);
   U10969 : GTECH_NOR2 port map( A => n10780, B => n7459, Z => n10884);
   U10970 : GTECH_NOT port map( A => n7861, Z => n7141);
   U10971 : GTECH_NAND2 port map( A => n10885, B => n10886, Z => n7861);
   U10972 : GTECH_NOR2 port map( A => n9846, B => n10887, Z => n10885);
   U10973 : GTECH_NOR2 port map( A => n7149, B => n7147, Z => n10882);
   U10974 : GTECH_NAND2 port map( A => n10787, B => n8948, Z => n7147);
   U10975 : GTECH_NOT port map( A => n10818, Z => n8948);
   U10976 : GTECH_NOR2 port map( A => n10757, B => n7459, Z => n10818);
   U10977 : GTECH_NAND2 port map( A => n8485, B => n6258, Z => n10787);
   U10978 : GTECH_NAND2 port map( A => n7883, B => n7874, Z => n7149);
   U10979 : GTECH_NAND2 port map( A => n6258, B => n7956, Z => n7874);
   U10980 : GTECH_NOT port map( A => n7857, Z => n7883);
   U10981 : GTECH_NOR2 port map( A => n10780, B => n8971, Z => n7857);
   U10982 : GTECH_NAND2 port map( A => n10888, B => n10889, Z => n10780);
   U10983 : GTECH_NOR2 port map( A => n11106, B => n6127, Z => n10888);
   U10984 : GTECH_NOR2 port map( A => n10890, B => n7486, Z => n6232);
   U10985 : GTECH_NAND2 port map( A => n9419, B => n10891, Z => n7486);
   U10986 : GTECH_NAND2 port map( A => n10892, B => n7442, Z => n10891);
   U10987 : GTECH_NAND2 port map( A => n9413, B => n7168, Z => n10892);
   U10988 : GTECH_NAND2 port map( A => n6258, B => n7957, Z => n7168);
   U10989 : GTECH_NOR2 port map( A => n7170, B => n10893, Z => n9413);
   U10990 : GTECH_NOR2 port map( A => n10757, B => n9846, Z => n10893);
   U10991 : GTECH_NOT port map( A => n6258, Z => n9846);
   U10992 : GTECH_NAND2 port map( A => n10894, B => n10889, Z => n10757);
   U10993 : GTECH_NOR2 port map( A => n11106, B => n11107, Z => n10894);
   U10994 : GTECH_NAND2 port map( A => n10854, B => n10895, Z => n7170);
   U10995 : GTECH_NAND2 port map( A => n6245, B => n6258, Z => n10895);
   U10996 : GTECH_NAND2 port map( A => n8485, B => n6250, Z => n10854);
   U10997 : GTECH_NAND2 port map( A => n7442, B => n10896, Z => n9419);
   U10998 : GTECH_NAND2 port map( A => n10897, B => n7151, Z => n10896);
   U10999 : GTECH_NOR2 port map( A => n10784, B => n10898, Z => n7151);
   U11000 : GTECH_NOR2 port map( A => n10791, B => n10790, Z => n10898);
   U11001 : GTECH_NAND2 port map( A => n10356, B => n10899, Z => n10784);
   U11002 : GTECH_NAND2 port map( A => n10900, B => n6249, Z => n10899);
   U11003 : GTECH_NOT port map( A => n9847, Z => n10900);
   U11004 : GTECH_NAND2 port map( A => n10785, B => n6259, Z => n10356);
   U11005 : GTECH_NOT port map( A => n10791, Z => n10785);
   U11006 : GTECH_NAND2 port map( A => n10901, B => n8972, Z => n10791);
   U11007 : GTECH_NOR2 port map( A => n11107, B => n11143, Z => n10901);
   U11008 : GTECH_NOR2 port map( A => n7142, B => n10782, Z => n10897);
   U11009 : GTECH_NOR2 port map( A => n9847, B => n10790, Z => n10782);
   U11010 : GTECH_NOR2 port map( A => n8971, B => n9847, Z => n7142);
   U11011 : GTECH_NAND2 port map( A => n10902, B => n8972, Z => n9847);
   U11012 : GTECH_NOT port map( A => n10887, Z => n8972);
   U11013 : GTECH_NOR2 port map( A => n11143, B => n6127, Z => n10902);
   U11014 : GTECH_NAND2 port map( A => n7140, B => n10903, Z => n10890);
   U11015 : GTECH_NAND2 port map( A => n7442, B => n10904, Z => n10903);
   U11016 : GTECH_NAND2 port map( A => n7187, B => n10905, Z => n10904);
   U11017 : GTECH_NOR2 port map( A => n9829, B => n8932, Z => n10905);
   U11018 : GTECH_NOT port map( A => n9839, Z => n8932);
   U11019 : GTECH_NAND2 port map( A => n7957, B => n6250, Z => n9839);
   U11020 : GTECH_NOT port map( A => n8949, Z => n9829);
   U11021 : GTECH_NAND2 port map( A => n6259, B => n7956, Z => n8949);
   U11022 : GTECH_NOR2 port map( A => n10906, B => n11107, Z => n7956);
   U11023 : GTECH_NOT port map( A => n7171, Z => n7187);
   U11024 : GTECH_NAND2 port map( A => n10907, B => n10908, Z => n7171);
   U11025 : GTECH_NAND2 port map( A => n6245, B => n6250, Z => n10908);
   U11026 : GTECH_NOT port map( A => n10790, Z => n6250);
   U11027 : GTECH_NOR2 port map( A => n10909, B => n10910, Z => n10907);
   U11028 : GTECH_NOR2 port map( A => n10911, B => n6253, Z => n10910);
   U11029 : GTECH_NOR2 port map( A => n6258, B => n10912, Z => n10911);
   U11030 : GTECH_NAND2 port map( A => n8971, B => n10790, Z => n10912);
   U11031 : GTECH_NOR2 port map( A => n11105, B => n11110, Z => n6258);
   U11032 : GTECH_NOR2 port map( A => n10913, B => n7459, Z => n10909);
   U11033 : GTECH_NOR2 port map( A => n6245, B => n8485, Z => n10913);
   U11034 : GTECH_NOR2 port map( A => n10914, B => n10887, Z => n8485);
   U11035 : GTECH_NAND2 port map( A => n6127, B => n11143, Z => n10914);
   U11036 : GTECH_NOT port map( A => n10723, Z => n6245);
   U11037 : GTECH_NAND2 port map( A => n10915, B => n10889, Z => n10723);
   U11038 : GTECH_NOR2 port map( A => n6127, B => n10916, Z => n10915);
   U11039 : GTECH_NOT port map( A => n10855, Z => n7140);
   U11040 : GTECH_NOR2 port map( A => n6253, B => n7459, Z => n10855);
   U11041 : GTECH_NOT port map( A => n6249, Z => n7459);
   U11042 : GTECH_NOR2 port map( A => n6072, B => n11105, Z => n6249);
   U11043 : GTECH_NAND2 port map( A => n10917, B => n10889, Z => n6253);
   U11044 : GTECH_NOR2 port map( A => n9565, B => n11143, Z => n10889);
   U11045 : GTECH_NOR2 port map( A => n11107, B => n10916, Z => n10917);
   U11046 : GTECH_NAND2 port map( A => n10918, B => n7150, Z => n10878);
   U11047 : GTECH_NAND2 port map( A => n10919, B => n10886, Z => n7150);
   U11048 : GTECH_NOR2 port map( A => n6127, B => n6168, Z => n10886);
   U11049 : GTECH_NOT port map( A => n11143, Z => n6168);
   U11050 : GTECH_NOR2 port map( A => n10790, B => n10887, Z => n10919);
   U11051 : GTECH_NAND2 port map( A => n10916, B => n9565, Z => n10887);
   U11052 : GTECH_NOT port map( A => n11144, Z => n9565);
   U11053 : GTECH_NOT port map( A => n11106, Z => n10916);
   U11054 : GTECH_NAND2 port map( A => n11105, B => n6072, Z => n10790);
   U11055 : GTECH_NOT port map( A => n11110, Z => n6072);
   U11056 : GTECH_NAND2 port map( A => n8933, B => n7442, Z => n10918);
   U11057 : GTECH_NOT port map( A => n7138, Z => n8933);
   U11058 : GTECH_NAND2 port map( A => n6259, B => n7957, Z => n7138);
   U11059 : GTECH_NOR2 port map( A => n10906, B => n6127, Z => n7957);
   U11060 : GTECH_NOT port map( A => n11107, Z => n6127);
   U11061 : GTECH_NAND2 port map( A => n10920, B => n11106, Z => n10906);
   U11062 : GTECH_NOR2 port map( A => n11143, B => n11144, Z => n10920);
   U11063 : GTECH_NOT port map( A => n8971, Z => n6259);
   U11064 : GTECH_NAND2 port map( A => n11105, B => n11110, Z => n8971);
   U11065 : GTECH_NOR2 port map( A => n7190, B => state_3_port, Z => n10841);
   U11066 : GTECH_NAND2 port map( A => state_4_port, B => n10921, Z => n10874);
   U11067 : GTECH_NAND2 port map( A => n9432, B => n10922, Z => n10921);
   U11068 : GTECH_NAND2 port map( A => n10856, B => n7442, Z => n10922);
   U11069 : GTECH_NOT port map( A => in_mem_busy, Z => n7442);
   U11070 : GTECH_NOR2 port map( A => n8976, B => n10842, Z => n10856);
   U11071 : GTECH_NAND2 port map( A => state_1_port, B => n10811, Z => n10842);
   U11072 : GTECH_NOT port map( A => state_2_port, Z => n8976);
   U11073 : GTECH_NOR2 port map( A => state_1_port, B => in_mem_busy, Z => 
                           n10872);
   U11074 : GTECH_NOR2 port map( A => n7182, B => n10923, Z => n6298);
   U11075 : GTECH_NOR2 port map( A => n9569, B => n7451, Z => n10923);
   U11076 : GTECH_NOT port map( A => enable, Z => n7451);
   U11077 : GTECH_NAND2 port map( A => n9408, B => n10836, Z => n9569);
   U11078 : GTECH_NOT port map( A => n9432, Z => n10836);
   U11079 : GTECH_NAND2 port map( A => n10870, B => n10811, Z => n9432);
   U11080 : GTECH_NOT port map( A => state_0_port, Z => n10811);
   U11081 : GTECH_NOT port map( A => state_1_port, Z => n10870);
   U11082 : GTECH_NOR2 port map( A => n10864, B => state_2_port, Z => n9408);
   U11083 : GTECH_NAND2 port map( A => state_3_port, B => n7190, Z => n10864);
   U11084 : GTECH_NOT port map( A => state_4_port, Z => n7190);
   U11085 : GTECH_NOT port map( A => reset_b, Z => n7182);

end SYN_beh;

library IEEE;

use IEEE.std_logic_1164.all;

package CONV_PACK_zpu_perf_mon is

-- define attributes
attribute ENUM_ENCODING : STRING;

end CONV_PACK_zpu_perf_mon;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_zpu_perf_mon.all;

entity zpu_perf_mon_DW01_inc_1 is

   port( A : in std_logic_vector (63 downto 0);  SUM : out std_logic_vector (63
         downto 0));

end zpu_perf_mon_DW01_inc_1;

architecture SYN_rpl of zpu_perf_mon_DW01_inc_1 is

   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   signal SUM_63_port, SUM_62_port, SUM_61_port, SUM_60_port, SUM_59_port, 
      SUM_58_port, SUM_57_port, SUM_56_port, SUM_55_port, SUM_54_port, 
      SUM_53_port, SUM_52_port, SUM_51_port, SUM_50_port, SUM_49_port, 
      SUM_48_port, SUM_47_port, SUM_46_port, SUM_45_port, SUM_44_port, 
      SUM_43_port, SUM_42_port, SUM_41_port, SUM_40_port, SUM_39_port, 
      SUM_38_port, SUM_37_port, SUM_36_port, SUM_35_port, SUM_34_port, 
      SUM_33_port, SUM_32_port, SUM_31_port, SUM_30_port, SUM_29_port, 
      SUM_28_port, SUM_27_port, SUM_26_port, SUM_25_port, SUM_24_port, 
      SUM_23_port, SUM_22_port, SUM_21_port, SUM_20_port, SUM_19_port, 
      SUM_18_port, SUM_17_port, SUM_16_port, SUM_15_port, SUM_14_port, 
      SUM_13_port, SUM_12_port, SUM_11_port, SUM_10_port, SUM_9_port, 
      SUM_8_port, SUM_7_port, SUM_6_port, SUM_5_port, SUM_4_port, SUM_3_port, 
      SUM_2_port, SUM_1_port, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12
      , n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, 
      n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41
      , n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, 
      n56, n57, n58, n59, n60, n61, SUM_0_port, n63, n64, n65, n66, n67, n68, 
      n69, n70, n71, n72, n73, n74, n75, n76, n77, n78, n79, n80, n81, n82, n83
      , n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94, n95, n96, n97, 
      n98, n99, n100, n101, n102, n103, n104, n105, n106, n107, n108, n109, 
      n110, n111, n112, n113, n114, n115, n116, n117, n118, n119, n120, n121, 
      n122, n123, n124, n125, n126, n127, n128, n129, n130, n131, n132, n133, 
      n134, n135, n136, n137, n138, n139, n140, n141, n142, n143, n144, n145, 
      n146, n147, n148, n149, n150, n151, n152, n153, n154, n155, n156, n157, 
      n158, n159, n160, n161, n162, n163, n164, n165, n166, n167, n168, n169, 
      n170, n171, n172, n173, n174, n175, n176, n177, n178, n179, n180, n181, 
      n182, n183, n184, n185, n186, n187, n188, n189, n190, n191, n192, n193, 
      n194, n195, n196, n197, n198, n199, n200, n201, n202, n203, n204, n205, 
      n206, n207, n208, n209, n210, n211, n212, n213, n214, n215, n216, n217, 
      n218, n219, n220, n221, n222, n223, n224, n225, n226, n227, n228, n229, 
      n230, n231, n232, n233, n234, n235, n236, n237, n238, n239, n240, n241, 
      n242, n243, n244, n245, n246, n247, n248, n249, n250, n251, n252, n253, 
      n254, n255, n256, n257, n258, n259, n260, n261, n262, n263, n264, n265, 
      n266, n267, n268, n269, n270, n271, n272, n273, n274, n275, n276, n277, 
      n278, n279, n280, n281, n282, n283, n284, n285, n286, n287, n288, n289, 
      n290, n291, n292, n293, n294, n295, n296, n297, n298, n299, n300, n301, 
      n302, n303, n304, n305, n306, n307, n308, n309, n310, n311, n312, n313 : 
      std_logic;

begin
   SUM <= ( SUM_63_port, SUM_62_port, SUM_61_port, SUM_60_port, SUM_59_port, 
      SUM_58_port, SUM_57_port, SUM_56_port, SUM_55_port, SUM_54_port, 
      SUM_53_port, SUM_52_port, SUM_51_port, SUM_50_port, SUM_49_port, 
      SUM_48_port, SUM_47_port, SUM_46_port, SUM_45_port, SUM_44_port, 
      SUM_43_port, SUM_42_port, SUM_41_port, SUM_40_port, SUM_39_port, 
      SUM_38_port, SUM_37_port, SUM_36_port, SUM_35_port, SUM_34_port, 
      SUM_33_port, SUM_32_port, SUM_31_port, SUM_30_port, SUM_29_port, 
      SUM_28_port, SUM_27_port, SUM_26_port, SUM_25_port, SUM_24_port, 
      SUM_23_port, SUM_22_port, SUM_21_port, SUM_20_port, SUM_19_port, 
      SUM_18_port, SUM_17_port, SUM_16_port, SUM_15_port, SUM_14_port, 
      SUM_13_port, SUM_12_port, SUM_11_port, SUM_10_port, SUM_9_port, 
      SUM_8_port, SUM_7_port, SUM_6_port, SUM_5_port, SUM_4_port, SUM_3_port, 
      SUM_2_port, SUM_1_port, SUM_0_port );
   
   U1 : GTECH_NOT port map( A => n162, Z => n1);
   U2 : GTECH_NOT port map( A => n200, Z => n2);
   U3 : GTECH_NOT port map( A => n107, Z => n3);
   U4 : GTECH_NOT port map( A => n124, Z => n4);
   U5 : GTECH_NOT port map( A => n101, Z => n5);
   U6 : GTECH_NOT port map( A => n104, Z => n6);
   U7 : GTECH_NOT port map( A => n309, Z => n7);
   U8 : GTECH_NOT port map( A => n98, Z => n8);
   U9 : GTECH_NOT port map( A => n303, Z => n9);
   U10 : GTECH_NOT port map( A => n300, Z => n10);
   U11 : GTECH_NOT port map( A => n296, Z => n11);
   U12 : GTECH_NOT port map( A => n293, Z => n12);
   U13 : GTECH_NOT port map( A => n289, Z => n13);
   U14 : GTECH_NOT port map( A => n286, Z => n14);
   U15 : GTECH_NOT port map( A => n282, Z => n15);
   U16 : GTECH_NOT port map( A => n279, Z => n16);
   U17 : GTECH_NOT port map( A => n273, Z => n17);
   U18 : GTECH_NOT port map( A => n270, Z => n18);
   U19 : GTECH_NOT port map( A => n266, Z => n19);
   U20 : GTECH_NOT port map( A => n263, Z => n20);
   U21 : GTECH_NOT port map( A => n259, Z => n21);
   U22 : GTECH_NOT port map( A => n256, Z => n22);
   U23 : GTECH_NOT port map( A => n252, Z => n23);
   U24 : GTECH_NOT port map( A => n249, Z => n24);
   U25 : GTECH_NOT port map( A => n245, Z => n25);
   U26 : GTECH_NOT port map( A => n242, Z => n26);
   U27 : GTECH_NOT port map( A => n235, Z => n27);
   U28 : GTECH_NOT port map( A => n232, Z => n28);
   U29 : GTECH_NOT port map( A => n228, Z => n29);
   U30 : GTECH_NOT port map( A => n225, Z => n30);
   U31 : GTECH_NOT port map( A => n221, Z => n31);
   U32 : GTECH_NOT port map( A => n218, Z => n32);
   U33 : GTECH_NOT port map( A => n214, Z => n33);
   U34 : GTECH_NOT port map( A => n211, Z => n34);
   U35 : GTECH_NOT port map( A => n207, Z => n35);
   U36 : GTECH_NOT port map( A => n204, Z => n36);
   U37 : GTECH_NOT port map( A => n197, Z => n37);
   U38 : GTECH_NOT port map( A => n194, Z => n38);
   U39 : GTECH_NOT port map( A => n190, Z => n39);
   U40 : GTECH_NOT port map( A => n187, Z => n40);
   U41 : GTECH_NOT port map( A => n183, Z => n41);
   U42 : GTECH_NOT port map( A => n180, Z => n42);
   U43 : GTECH_NOT port map( A => n176, Z => n43);
   U44 : GTECH_NOT port map( A => n173, Z => n44);
   U45 : GTECH_NOT port map( A => n169, Z => n45);
   U46 : GTECH_NOT port map( A => n166, Z => n46);
   U47 : GTECH_NOT port map( A => n159, Z => n47);
   U48 : GTECH_NOT port map( A => n156, Z => n48);
   U49 : GTECH_NOT port map( A => n152, Z => n49);
   U50 : GTECH_NOT port map( A => n149, Z => n50);
   U51 : GTECH_NOT port map( A => n145, Z => n51);
   U52 : GTECH_NOT port map( A => n142, Z => n52);
   U53 : GTECH_NOT port map( A => n138, Z => n53);
   U54 : GTECH_NOT port map( A => n135, Z => n54);
   U55 : GTECH_NOT port map( A => n131, Z => n55);
   U56 : GTECH_NOT port map( A => n128, Z => n56);
   U57 : GTECH_NOT port map( A => n121, Z => n57);
   U58 : GTECH_NOT port map( A => n118, Z => n58);
   U59 : GTECH_NOT port map( A => n116, Z => n59);
   U60 : GTECH_NOT port map( A => n111, Z => n60);
   U61 : GTECH_NOT port map( A => n110, Z => n61);
   U62 : GTECH_NOT port map( A => A(0), Z => SUM_0_port);
   U63 : GTECH_NOT port map( A => n238, Z => n63);
   U64 : GTECH_NOT port map( A => A(1), Z => n64);
   U65 : GTECH_NOT port map( A => A(3), Z => n65);
   U66 : GTECH_NOT port map( A => A(5), Z => n66);
   U67 : GTECH_NOT port map( A => A(7), Z => n67);
   U68 : GTECH_NOT port map( A => A(9), Z => n68);
   U69 : GTECH_NOT port map( A => A(11), Z => n69);
   U70 : GTECH_NOT port map( A => A(13), Z => n70);
   U71 : GTECH_NOT port map( A => A(15), Z => n71);
   U72 : GTECH_NOT port map( A => A(17), Z => n72);
   U73 : GTECH_NOT port map( A => A(19), Z => n73);
   U74 : GTECH_NOT port map( A => A(21), Z => n74);
   U75 : GTECH_NOT port map( A => A(23), Z => n75);
   U76 : GTECH_NOT port map( A => A(25), Z => n76);
   U77 : GTECH_NOT port map( A => A(27), Z => n77);
   U78 : GTECH_NOT port map( A => A(29), Z => n78);
   U79 : GTECH_NOT port map( A => A(31), Z => n79);
   U80 : GTECH_NOT port map( A => A(33), Z => n80);
   U81 : GTECH_NOT port map( A => A(35), Z => n81);
   U82 : GTECH_NOT port map( A => A(37), Z => n82);
   U83 : GTECH_NOT port map( A => A(39), Z => n83);
   U84 : GTECH_NOT port map( A => A(41), Z => n84);
   U85 : GTECH_NOT port map( A => A(43), Z => n85);
   U86 : GTECH_NOT port map( A => A(45), Z => n86);
   U87 : GTECH_NOT port map( A => A(47), Z => n87);
   U88 : GTECH_NOT port map( A => A(49), Z => n88);
   U89 : GTECH_NOT port map( A => A(51), Z => n89);
   U90 : GTECH_NOT port map( A => A(53), Z => n90);
   U91 : GTECH_NOT port map( A => A(55), Z => n91);
   U92 : GTECH_NOT port map( A => A(57), Z => n92);
   U93 : GTECH_NOT port map( A => A(59), Z => n93);
   U94 : GTECH_NOT port map( A => A(61), Z => n94);
   U95 : GTECH_NOT port map( A => A(62), Z => n95);
   U96 : GTECH_NAND2 port map( A => n96, B => n97, Z => SUM_9_port);
   U97 : GTECH_NAND2 port map( A => A(9), B => n98, Z => n97);
   U98 : GTECH_NAND2 port map( A => n8, B => n68, Z => n96);
   U99 : GTECH_NAND2 port map( A => n5, B => n99, Z => SUM_8_port);
   U100 : GTECH_NAND2 port map( A => A(8), B => n100, Z => n99);
   U101 : GTECH_NOR2 port map( A => n100, B => A(8), Z => n101);
   U102 : GTECH_NAND2 port map( A => A(7), B => n6, Z => n100);
   U103 : GTECH_NAND2 port map( A => n102, B => n103, Z => SUM_7_port);
   U104 : GTECH_NAND2 port map( A => A(7), B => n104, Z => n103);
   U105 : GTECH_NAND2 port map( A => n6, B => n67, Z => n102);
   U106 : GTECH_NAND2 port map( A => n3, B => n105, Z => SUM_6_port);
   U107 : GTECH_NAND2 port map( A => A(6), B => n106, Z => n105);
   U108 : GTECH_NOR2 port map( A => n106, B => A(6), Z => n107);
   U109 : GTECH_NAND2 port map( A => A(5), B => n4, Z => n106);
   U110 : GTECH_NAND2 port map( A => n61, B => n108, Z => SUM_63_port);
   U111 : GTECH_NAND2 port map( A => A(63), B => n109, Z => n108);
   U112 : GTECH_NOR2 port map( A => n109, B => A(63), Z => n110);
   U113 : GTECH_NAND2 port map( A => A(62), B => n111, Z => n109);
   U114 : GTECH_NAND2 port map( A => n112, B => n113, Z => SUM_62_port);
   U115 : GTECH_NAND2 port map( A => A(62), B => n60, Z => n113);
   U116 : GTECH_NAND2 port map( A => n111, B => n95, Z => n112);
   U117 : GTECH_NOR2 port map( A => n94, B => n114, Z => n111);
   U118 : GTECH_NAND2 port map( A => n59, B => n115, Z => SUM_61_port);
   U119 : GTECH_NAND2 port map( A => A(61), B => n114, Z => n115);
   U120 : GTECH_NOR2 port map( A => n114, B => A(61), Z => n116);
   U121 : GTECH_NAND2 port map( A => n117, B => A(60), Z => n114);
   U122 : GTECH_NOR2 port map( A => n118, B => n93, Z => n117);
   U123 : GTECH_NAND2 port map( A => n57, B => n119, Z => SUM_60_port);
   U124 : GTECH_NAND2 port map( A => A(60), B => n120, Z => n119);
   U125 : GTECH_NOR2 port map( A => n120, B => A(60), Z => n121);
   U126 : GTECH_NAND2 port map( A => A(59), B => n58, Z => n120);
   U127 : GTECH_NAND2 port map( A => n122, B => n123, Z => SUM_5_port);
   U128 : GTECH_NAND2 port map( A => A(5), B => n124, Z => n123);
   U129 : GTECH_NAND2 port map( A => n4, B => n66, Z => n122);
   U130 : GTECH_NAND2 port map( A => n125, B => n126, Z => SUM_59_port);
   U131 : GTECH_NAND2 port map( A => A(59), B => n118, Z => n126);
   U132 : GTECH_NAND2 port map( A => n58, B => n93, Z => n125);
   U133 : GTECH_NAND2 port map( A => n127, B => A(58), Z => n118);
   U134 : GTECH_NOR2 port map( A => n128, B => n92, Z => n127);
   U135 : GTECH_NAND2 port map( A => n55, B => n129, Z => SUM_58_port);
   U136 : GTECH_NAND2 port map( A => A(58), B => n130, Z => n129);
   U137 : GTECH_NOR2 port map( A => n130, B => A(58), Z => n131);
   U138 : GTECH_NAND2 port map( A => A(57), B => n56, Z => n130);
   U139 : GTECH_NAND2 port map( A => n132, B => n133, Z => SUM_57_port);
   U140 : GTECH_NAND2 port map( A => A(57), B => n128, Z => n133);
   U141 : GTECH_NAND2 port map( A => n56, B => n92, Z => n132);
   U142 : GTECH_NAND2 port map( A => n134, B => A(56), Z => n128);
   U143 : GTECH_NOR2 port map( A => n135, B => n91, Z => n134);
   U144 : GTECH_NAND2 port map( A => n53, B => n136, Z => SUM_56_port);
   U145 : GTECH_NAND2 port map( A => A(56), B => n137, Z => n136);
   U146 : GTECH_NOR2 port map( A => n137, B => A(56), Z => n138);
   U147 : GTECH_NAND2 port map( A => A(55), B => n54, Z => n137);
   U148 : GTECH_NAND2 port map( A => n139, B => n140, Z => SUM_55_port);
   U149 : GTECH_NAND2 port map( A => A(55), B => n135, Z => n140);
   U150 : GTECH_NAND2 port map( A => n54, B => n91, Z => n139);
   U151 : GTECH_NAND2 port map( A => n141, B => A(54), Z => n135);
   U152 : GTECH_NOR2 port map( A => n142, B => n90, Z => n141);
   U153 : GTECH_NAND2 port map( A => n51, B => n143, Z => SUM_54_port);
   U154 : GTECH_NAND2 port map( A => A(54), B => n144, Z => n143);
   U155 : GTECH_NOR2 port map( A => n144, B => A(54), Z => n145);
   U156 : GTECH_NAND2 port map( A => A(53), B => n52, Z => n144);
   U157 : GTECH_NAND2 port map( A => n146, B => n147, Z => SUM_53_port);
   U158 : GTECH_NAND2 port map( A => A(53), B => n142, Z => n147);
   U159 : GTECH_NAND2 port map( A => n52, B => n90, Z => n146);
   U160 : GTECH_NAND2 port map( A => n148, B => A(52), Z => n142);
   U161 : GTECH_NOR2 port map( A => n149, B => n89, Z => n148);
   U162 : GTECH_NAND2 port map( A => n49, B => n150, Z => SUM_52_port);
   U163 : GTECH_NAND2 port map( A => A(52), B => n151, Z => n150);
   U164 : GTECH_NOR2 port map( A => n151, B => A(52), Z => n152);
   U165 : GTECH_NAND2 port map( A => A(51), B => n50, Z => n151);
   U166 : GTECH_NAND2 port map( A => n153, B => n154, Z => SUM_51_port);
   U167 : GTECH_NAND2 port map( A => A(51), B => n149, Z => n154);
   U168 : GTECH_NAND2 port map( A => n50, B => n89, Z => n153);
   U169 : GTECH_NAND2 port map( A => n155, B => A(50), Z => n149);
   U170 : GTECH_NOR2 port map( A => n156, B => n88, Z => n155);
   U171 : GTECH_NAND2 port map( A => n47, B => n157, Z => SUM_50_port);
   U172 : GTECH_NAND2 port map( A => A(50), B => n158, Z => n157);
   U173 : GTECH_NOR2 port map( A => n158, B => A(50), Z => n159);
   U174 : GTECH_NAND2 port map( A => A(49), B => n48, Z => n158);
   U175 : GTECH_NAND2 port map( A => n1, B => n160, Z => SUM_4_port);
   U176 : GTECH_NAND2 port map( A => A(4), B => n161, Z => n160);
   U177 : GTECH_NOR2 port map( A => n161, B => A(4), Z => n162);
   U178 : GTECH_NAND2 port map( A => A(3), B => n2, Z => n161);
   U179 : GTECH_NAND2 port map( A => n163, B => n164, Z => SUM_49_port);
   U180 : GTECH_NAND2 port map( A => A(49), B => n156, Z => n164);
   U181 : GTECH_NAND2 port map( A => n48, B => n88, Z => n163);
   U182 : GTECH_NAND2 port map( A => n165, B => A(48), Z => n156);
   U183 : GTECH_NOR2 port map( A => n166, B => n87, Z => n165);
   U184 : GTECH_NAND2 port map( A => n45, B => n167, Z => SUM_48_port);
   U185 : GTECH_NAND2 port map( A => A(48), B => n168, Z => n167);
   U186 : GTECH_NOR2 port map( A => n168, B => A(48), Z => n169);
   U187 : GTECH_NAND2 port map( A => A(47), B => n46, Z => n168);
   U188 : GTECH_NAND2 port map( A => n170, B => n171, Z => SUM_47_port);
   U189 : GTECH_NAND2 port map( A => A(47), B => n166, Z => n171);
   U190 : GTECH_NAND2 port map( A => n46, B => n87, Z => n170);
   U191 : GTECH_NAND2 port map( A => n172, B => A(46), Z => n166);
   U192 : GTECH_NOR2 port map( A => n173, B => n86, Z => n172);
   U193 : GTECH_NAND2 port map( A => n43, B => n174, Z => SUM_46_port);
   U194 : GTECH_NAND2 port map( A => A(46), B => n175, Z => n174);
   U195 : GTECH_NOR2 port map( A => n175, B => A(46), Z => n176);
   U196 : GTECH_NAND2 port map( A => A(45), B => n44, Z => n175);
   U197 : GTECH_NAND2 port map( A => n177, B => n178, Z => SUM_45_port);
   U198 : GTECH_NAND2 port map( A => A(45), B => n173, Z => n178);
   U199 : GTECH_NAND2 port map( A => n44, B => n86, Z => n177);
   U200 : GTECH_NAND2 port map( A => n179, B => A(44), Z => n173);
   U201 : GTECH_NOR2 port map( A => n180, B => n85, Z => n179);
   U202 : GTECH_NAND2 port map( A => n41, B => n181, Z => SUM_44_port);
   U203 : GTECH_NAND2 port map( A => A(44), B => n182, Z => n181);
   U204 : GTECH_NOR2 port map( A => n182, B => A(44), Z => n183);
   U205 : GTECH_NAND2 port map( A => A(43), B => n42, Z => n182);
   U206 : GTECH_NAND2 port map( A => n184, B => n185, Z => SUM_43_port);
   U207 : GTECH_NAND2 port map( A => A(43), B => n180, Z => n185);
   U208 : GTECH_NAND2 port map( A => n42, B => n85, Z => n184);
   U209 : GTECH_NAND2 port map( A => n186, B => A(42), Z => n180);
   U210 : GTECH_NOR2 port map( A => n187, B => n84, Z => n186);
   U211 : GTECH_NAND2 port map( A => n39, B => n188, Z => SUM_42_port);
   U212 : GTECH_NAND2 port map( A => A(42), B => n189, Z => n188);
   U213 : GTECH_NOR2 port map( A => n189, B => A(42), Z => n190);
   U214 : GTECH_NAND2 port map( A => A(41), B => n40, Z => n189);
   U215 : GTECH_NAND2 port map( A => n191, B => n192, Z => SUM_41_port);
   U216 : GTECH_NAND2 port map( A => A(41), B => n187, Z => n192);
   U217 : GTECH_NAND2 port map( A => n40, B => n84, Z => n191);
   U218 : GTECH_NAND2 port map( A => n193, B => A(40), Z => n187);
   U219 : GTECH_NOR2 port map( A => n194, B => n83, Z => n193);
   U220 : GTECH_NAND2 port map( A => n37, B => n195, Z => SUM_40_port);
   U221 : GTECH_NAND2 port map( A => A(40), B => n196, Z => n195);
   U222 : GTECH_NOR2 port map( A => n196, B => A(40), Z => n197);
   U223 : GTECH_NAND2 port map( A => A(39), B => n38, Z => n196);
   U224 : GTECH_NAND2 port map( A => n198, B => n199, Z => SUM_3_port);
   U225 : GTECH_NAND2 port map( A => A(3), B => n200, Z => n199);
   U226 : GTECH_NAND2 port map( A => n2, B => n65, Z => n198);
   U227 : GTECH_NAND2 port map( A => n201, B => n202, Z => SUM_39_port);
   U228 : GTECH_NAND2 port map( A => A(39), B => n194, Z => n202);
   U229 : GTECH_NAND2 port map( A => n38, B => n83, Z => n201);
   U230 : GTECH_NAND2 port map( A => n203, B => A(38), Z => n194);
   U231 : GTECH_NOR2 port map( A => n204, B => n82, Z => n203);
   U232 : GTECH_NAND2 port map( A => n35, B => n205, Z => SUM_38_port);
   U233 : GTECH_NAND2 port map( A => A(38), B => n206, Z => n205);
   U234 : GTECH_NOR2 port map( A => n206, B => A(38), Z => n207);
   U235 : GTECH_NAND2 port map( A => A(37), B => n36, Z => n206);
   U236 : GTECH_NAND2 port map( A => n208, B => n209, Z => SUM_37_port);
   U237 : GTECH_NAND2 port map( A => A(37), B => n204, Z => n209);
   U238 : GTECH_NAND2 port map( A => n36, B => n82, Z => n208);
   U239 : GTECH_NAND2 port map( A => n210, B => A(36), Z => n204);
   U240 : GTECH_NOR2 port map( A => n211, B => n81, Z => n210);
   U241 : GTECH_NAND2 port map( A => n33, B => n212, Z => SUM_36_port);
   U242 : GTECH_NAND2 port map( A => A(36), B => n213, Z => n212);
   U243 : GTECH_NOR2 port map( A => n213, B => A(36), Z => n214);
   U244 : GTECH_NAND2 port map( A => A(35), B => n34, Z => n213);
   U245 : GTECH_NAND2 port map( A => n215, B => n216, Z => SUM_35_port);
   U246 : GTECH_NAND2 port map( A => A(35), B => n211, Z => n216);
   U247 : GTECH_NAND2 port map( A => n34, B => n81, Z => n215);
   U248 : GTECH_NAND2 port map( A => n217, B => A(34), Z => n211);
   U249 : GTECH_NOR2 port map( A => n218, B => n80, Z => n217);
   U250 : GTECH_NAND2 port map( A => n31, B => n219, Z => SUM_34_port);
   U251 : GTECH_NAND2 port map( A => A(34), B => n220, Z => n219);
   U252 : GTECH_NOR2 port map( A => n220, B => A(34), Z => n221);
   U253 : GTECH_NAND2 port map( A => A(33), B => n32, Z => n220);
   U254 : GTECH_NAND2 port map( A => n222, B => n223, Z => SUM_33_port);
   U255 : GTECH_NAND2 port map( A => A(33), B => n218, Z => n223);
   U256 : GTECH_NAND2 port map( A => n32, B => n80, Z => n222);
   U257 : GTECH_NAND2 port map( A => n224, B => A(32), Z => n218);
   U258 : GTECH_NOR2 port map( A => n225, B => n79, Z => n224);
   U259 : GTECH_NAND2 port map( A => n29, B => n226, Z => SUM_32_port);
   U260 : GTECH_NAND2 port map( A => A(32), B => n227, Z => n226);
   U261 : GTECH_NOR2 port map( A => n227, B => A(32), Z => n228);
   U262 : GTECH_NAND2 port map( A => A(31), B => n30, Z => n227);
   U263 : GTECH_NAND2 port map( A => n229, B => n230, Z => SUM_31_port);
   U264 : GTECH_NAND2 port map( A => A(31), B => n225, Z => n230);
   U265 : GTECH_NAND2 port map( A => n30, B => n79, Z => n229);
   U266 : GTECH_NAND2 port map( A => n231, B => A(30), Z => n225);
   U267 : GTECH_NOR2 port map( A => n232, B => n78, Z => n231);
   U268 : GTECH_NAND2 port map( A => n27, B => n233, Z => SUM_30_port);
   U269 : GTECH_NAND2 port map( A => A(30), B => n234, Z => n233);
   U270 : GTECH_NOR2 port map( A => n234, B => A(30), Z => n235);
   U271 : GTECH_NAND2 port map( A => A(29), B => n28, Z => n234);
   U272 : GTECH_NAND2 port map( A => n63, B => n236, Z => SUM_2_port);
   U273 : GTECH_NAND2 port map( A => A(2), B => n237, Z => n236);
   U274 : GTECH_NOR2 port map( A => n237, B => A(2), Z => n238);
   U275 : GTECH_NAND2 port map( A => A(1), B => A(0), Z => n237);
   U276 : GTECH_NAND2 port map( A => n239, B => n240, Z => SUM_29_port);
   U277 : GTECH_NAND2 port map( A => A(29), B => n232, Z => n240);
   U278 : GTECH_NAND2 port map( A => n28, B => n78, Z => n239);
   U279 : GTECH_NAND2 port map( A => n241, B => A(28), Z => n232);
   U280 : GTECH_NOR2 port map( A => n242, B => n77, Z => n241);
   U281 : GTECH_NAND2 port map( A => n25, B => n243, Z => SUM_28_port);
   U282 : GTECH_NAND2 port map( A => A(28), B => n244, Z => n243);
   U283 : GTECH_NOR2 port map( A => n244, B => A(28), Z => n245);
   U284 : GTECH_NAND2 port map( A => A(27), B => n26, Z => n244);
   U285 : GTECH_NAND2 port map( A => n246, B => n247, Z => SUM_27_port);
   U286 : GTECH_NAND2 port map( A => A(27), B => n242, Z => n247);
   U287 : GTECH_NAND2 port map( A => n26, B => n77, Z => n246);
   U288 : GTECH_NAND2 port map( A => n248, B => A(26), Z => n242);
   U289 : GTECH_NOR2 port map( A => n249, B => n76, Z => n248);
   U290 : GTECH_NAND2 port map( A => n23, B => n250, Z => SUM_26_port);
   U291 : GTECH_NAND2 port map( A => A(26), B => n251, Z => n250);
   U292 : GTECH_NOR2 port map( A => n251, B => A(26), Z => n252);
   U293 : GTECH_NAND2 port map( A => A(25), B => n24, Z => n251);
   U294 : GTECH_NAND2 port map( A => n253, B => n254, Z => SUM_25_port);
   U295 : GTECH_NAND2 port map( A => A(25), B => n249, Z => n254);
   U296 : GTECH_NAND2 port map( A => n24, B => n76, Z => n253);
   U297 : GTECH_NAND2 port map( A => n255, B => A(24), Z => n249);
   U298 : GTECH_NOR2 port map( A => n256, B => n75, Z => n255);
   U299 : GTECH_NAND2 port map( A => n21, B => n257, Z => SUM_24_port);
   U300 : GTECH_NAND2 port map( A => A(24), B => n258, Z => n257);
   U301 : GTECH_NOR2 port map( A => n258, B => A(24), Z => n259);
   U302 : GTECH_NAND2 port map( A => A(23), B => n22, Z => n258);
   U303 : GTECH_NAND2 port map( A => n260, B => n261, Z => SUM_23_port);
   U304 : GTECH_NAND2 port map( A => A(23), B => n256, Z => n261);
   U305 : GTECH_NAND2 port map( A => n22, B => n75, Z => n260);
   U306 : GTECH_NAND2 port map( A => n262, B => A(22), Z => n256);
   U307 : GTECH_NOR2 port map( A => n263, B => n74, Z => n262);
   U308 : GTECH_NAND2 port map( A => n19, B => n264, Z => SUM_22_port);
   U309 : GTECH_NAND2 port map( A => A(22), B => n265, Z => n264);
   U310 : GTECH_NOR2 port map( A => n265, B => A(22), Z => n266);
   U311 : GTECH_NAND2 port map( A => A(21), B => n20, Z => n265);
   U312 : GTECH_NAND2 port map( A => n267, B => n268, Z => SUM_21_port);
   U313 : GTECH_NAND2 port map( A => A(21), B => n263, Z => n268);
   U314 : GTECH_NAND2 port map( A => n20, B => n74, Z => n267);
   U315 : GTECH_NAND2 port map( A => n269, B => A(20), Z => n263);
   U316 : GTECH_NOR2 port map( A => n270, B => n73, Z => n269);
   U317 : GTECH_NAND2 port map( A => n17, B => n271, Z => SUM_20_port);
   U318 : GTECH_NAND2 port map( A => A(20), B => n272, Z => n271);
   U319 : GTECH_NOR2 port map( A => n272, B => A(20), Z => n273);
   U320 : GTECH_NAND2 port map( A => A(19), B => n18, Z => n272);
   U321 : GTECH_NAND2 port map( A => n274, B => n275, Z => SUM_1_port);
   U322 : GTECH_NAND2 port map( A => A(1), B => SUM_0_port, Z => n275);
   U323 : GTECH_NAND2 port map( A => A(0), B => n64, Z => n274);
   U324 : GTECH_NAND2 port map( A => n276, B => n277, Z => SUM_19_port);
   U325 : GTECH_NAND2 port map( A => A(19), B => n270, Z => n277);
   U326 : GTECH_NAND2 port map( A => n18, B => n73, Z => n276);
   U327 : GTECH_NAND2 port map( A => n278, B => A(18), Z => n270);
   U328 : GTECH_NOR2 port map( A => n279, B => n72, Z => n278);
   U329 : GTECH_NAND2 port map( A => n15, B => n280, Z => SUM_18_port);
   U330 : GTECH_NAND2 port map( A => A(18), B => n281, Z => n280);
   U331 : GTECH_NOR2 port map( A => n281, B => A(18), Z => n282);
   U332 : GTECH_NAND2 port map( A => A(17), B => n16, Z => n281);
   U333 : GTECH_NAND2 port map( A => n283, B => n284, Z => SUM_17_port);
   U334 : GTECH_NAND2 port map( A => A(17), B => n279, Z => n284);
   U335 : GTECH_NAND2 port map( A => n16, B => n72, Z => n283);
   U336 : GTECH_NAND2 port map( A => n285, B => A(16), Z => n279);
   U337 : GTECH_NOR2 port map( A => n286, B => n71, Z => n285);
   U338 : GTECH_NAND2 port map( A => n13, B => n287, Z => SUM_16_port);
   U339 : GTECH_NAND2 port map( A => A(16), B => n288, Z => n287);
   U340 : GTECH_NOR2 port map( A => n288, B => A(16), Z => n289);
   U341 : GTECH_NAND2 port map( A => A(15), B => n14, Z => n288);
   U342 : GTECH_NAND2 port map( A => n290, B => n291, Z => SUM_15_port);
   U343 : GTECH_NAND2 port map( A => A(15), B => n286, Z => n291);
   U344 : GTECH_NAND2 port map( A => n14, B => n71, Z => n290);
   U345 : GTECH_NAND2 port map( A => n292, B => A(14), Z => n286);
   U346 : GTECH_NOR2 port map( A => n293, B => n70, Z => n292);
   U347 : GTECH_NAND2 port map( A => n11, B => n294, Z => SUM_14_port);
   U348 : GTECH_NAND2 port map( A => A(14), B => n295, Z => n294);
   U349 : GTECH_NOR2 port map( A => n295, B => A(14), Z => n296);
   U350 : GTECH_NAND2 port map( A => A(13), B => n12, Z => n295);
   U351 : GTECH_NAND2 port map( A => n297, B => n298, Z => SUM_13_port);
   U352 : GTECH_NAND2 port map( A => A(13), B => n293, Z => n298);
   U353 : GTECH_NAND2 port map( A => n12, B => n70, Z => n297);
   U354 : GTECH_NAND2 port map( A => n299, B => A(12), Z => n293);
   U355 : GTECH_NOR2 port map( A => n300, B => n69, Z => n299);
   U356 : GTECH_NAND2 port map( A => n9, B => n301, Z => SUM_12_port);
   U357 : GTECH_NAND2 port map( A => A(12), B => n302, Z => n301);
   U358 : GTECH_NOR2 port map( A => n302, B => A(12), Z => n303);
   U359 : GTECH_NAND2 port map( A => A(11), B => n10, Z => n302);
   U360 : GTECH_NAND2 port map( A => n304, B => n305, Z => SUM_11_port);
   U361 : GTECH_NAND2 port map( A => A(11), B => n300, Z => n305);
   U362 : GTECH_NAND2 port map( A => n10, B => n69, Z => n304);
   U363 : GTECH_NAND2 port map( A => n306, B => A(10), Z => n300);
   U364 : GTECH_NOR2 port map( A => n68, B => n98, Z => n306);
   U365 : GTECH_NAND2 port map( A => n7, B => n307, Z => SUM_10_port);
   U366 : GTECH_NAND2 port map( A => A(10), B => n308, Z => n307);
   U367 : GTECH_NOR2 port map( A => n308, B => A(10), Z => n309);
   U368 : GTECH_NAND2 port map( A => n8, B => A(9), Z => n308);
   U369 : GTECH_NAND2 port map( A => n310, B => A(8), Z => n98);
   U370 : GTECH_NOR2 port map( A => n104, B => n67, Z => n310);
   U371 : GTECH_NAND2 port map( A => n311, B => A(6), Z => n104);
   U372 : GTECH_NOR2 port map( A => n124, B => n66, Z => n311);
   U373 : GTECH_NAND2 port map( A => n312, B => A(4), Z => n124);
   U374 : GTECH_NOR2 port map( A => n200, B => n65, Z => n312);
   U375 : GTECH_NAND2 port map( A => n313, B => A(2), Z => n200);
   U376 : GTECH_NOR2 port map( A => SUM_0_port, B => n64, Z => n313);

end SYN_rpl;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_zpu_perf_mon.all;

entity zpu_perf_mon_DW01_inc_0 is

   port( A : in std_logic_vector (63 downto 0);  SUM : out std_logic_vector (63
         downto 0));

end zpu_perf_mon_DW01_inc_0;

architecture SYN_rpl of zpu_perf_mon_DW01_inc_0 is

   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   signal SUM_63_port, SUM_62_port, SUM_61_port, SUM_60_port, SUM_59_port, 
      SUM_58_port, SUM_57_port, SUM_56_port, SUM_55_port, SUM_54_port, 
      SUM_53_port, SUM_52_port, SUM_51_port, SUM_50_port, SUM_49_port, 
      SUM_48_port, SUM_47_port, SUM_46_port, SUM_45_port, SUM_44_port, 
      SUM_43_port, SUM_42_port, SUM_41_port, SUM_40_port, SUM_39_port, 
      SUM_38_port, SUM_37_port, SUM_36_port, SUM_35_port, SUM_34_port, 
      SUM_33_port, SUM_32_port, SUM_31_port, SUM_30_port, SUM_29_port, 
      SUM_28_port, SUM_27_port, SUM_26_port, SUM_25_port, SUM_24_port, 
      SUM_23_port, SUM_22_port, SUM_21_port, SUM_20_port, SUM_19_port, 
      SUM_18_port, SUM_17_port, SUM_16_port, SUM_15_port, SUM_14_port, 
      SUM_13_port, SUM_12_port, SUM_11_port, SUM_10_port, SUM_9_port, 
      SUM_8_port, SUM_7_port, SUM_6_port, SUM_5_port, SUM_4_port, SUM_3_port, 
      SUM_2_port, SUM_1_port, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12
      , n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, 
      n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41
      , n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, 
      n56, n57, n58, n59, n60, n61, SUM_0_port, n63, n64, n65, n66, n67, n68, 
      n69, n70, n71, n72, n73, n74, n75, n76, n77, n78, n79, n80, n81, n82, n83
      , n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94, n95, n96, n97, 
      n98, n99, n100, n101, n102, n103, n104, n105, n106, n107, n108, n109, 
      n110, n111, n112, n113, n114, n115, n116, n117, n118, n119, n120, n121, 
      n122, n123, n124, n125, n126, n127, n128, n129, n130, n131, n132, n133, 
      n134, n135, n136, n137, n138, n139, n140, n141, n142, n143, n144, n145, 
      n146, n147, n148, n149, n150, n151, n152, n153, n154, n155, n156, n157, 
      n158, n159, n160, n161, n162, n163, n164, n165, n166, n167, n168, n169, 
      n170, n171, n172, n173, n174, n175, n176, n177, n178, n179, n180, n181, 
      n182, n183, n184, n185, n186, n187, n188, n189, n190, n191, n192, n193, 
      n194, n195, n196, n197, n198, n199, n200, n201, n202, n203, n204, n205, 
      n206, n207, n208, n209, n210, n211, n212, n213, n214, n215, n216, n217, 
      n218, n219, n220, n221, n222, n223, n224, n225, n226, n227, n228, n229, 
      n230, n231, n232, n233, n234, n235, n236, n237, n238, n239, n240, n241, 
      n242, n243, n244, n245, n246, n247, n248, n249, n250, n251, n252, n253, 
      n254, n255, n256, n257, n258, n259, n260, n261, n262, n263, n264, n265, 
      n266, n267, n268, n269, n270, n271, n272, n273, n274, n275, n276, n277, 
      n278, n279, n280, n281, n282, n283, n284, n285, n286, n287, n288, n289, 
      n290, n291, n292, n293, n294, n295, n296, n297, n298, n299, n300, n301, 
      n302, n303, n304, n305, n306, n307, n308, n309, n310, n311, n312, n313 : 
      std_logic;

begin
   SUM <= ( SUM_63_port, SUM_62_port, SUM_61_port, SUM_60_port, SUM_59_port, 
      SUM_58_port, SUM_57_port, SUM_56_port, SUM_55_port, SUM_54_port, 
      SUM_53_port, SUM_52_port, SUM_51_port, SUM_50_port, SUM_49_port, 
      SUM_48_port, SUM_47_port, SUM_46_port, SUM_45_port, SUM_44_port, 
      SUM_43_port, SUM_42_port, SUM_41_port, SUM_40_port, SUM_39_port, 
      SUM_38_port, SUM_37_port, SUM_36_port, SUM_35_port, SUM_34_port, 
      SUM_33_port, SUM_32_port, SUM_31_port, SUM_30_port, SUM_29_port, 
      SUM_28_port, SUM_27_port, SUM_26_port, SUM_25_port, SUM_24_port, 
      SUM_23_port, SUM_22_port, SUM_21_port, SUM_20_port, SUM_19_port, 
      SUM_18_port, SUM_17_port, SUM_16_port, SUM_15_port, SUM_14_port, 
      SUM_13_port, SUM_12_port, SUM_11_port, SUM_10_port, SUM_9_port, 
      SUM_8_port, SUM_7_port, SUM_6_port, SUM_5_port, SUM_4_port, SUM_3_port, 
      SUM_2_port, SUM_1_port, SUM_0_port );
   
   U1 : GTECH_NOT port map( A => n162, Z => n1);
   U2 : GTECH_NOT port map( A => n200, Z => n2);
   U3 : GTECH_NOT port map( A => n107, Z => n3);
   U4 : GTECH_NOT port map( A => n124, Z => n4);
   U5 : GTECH_NOT port map( A => n101, Z => n5);
   U6 : GTECH_NOT port map( A => n104, Z => n6);
   U7 : GTECH_NOT port map( A => n309, Z => n7);
   U8 : GTECH_NOT port map( A => n98, Z => n8);
   U9 : GTECH_NOT port map( A => n303, Z => n9);
   U10 : GTECH_NOT port map( A => n300, Z => n10);
   U11 : GTECH_NOT port map( A => n296, Z => n11);
   U12 : GTECH_NOT port map( A => n293, Z => n12);
   U13 : GTECH_NOT port map( A => n289, Z => n13);
   U14 : GTECH_NOT port map( A => n286, Z => n14);
   U15 : GTECH_NOT port map( A => n282, Z => n15);
   U16 : GTECH_NOT port map( A => n279, Z => n16);
   U17 : GTECH_NOT port map( A => n273, Z => n17);
   U18 : GTECH_NOT port map( A => n270, Z => n18);
   U19 : GTECH_NOT port map( A => n266, Z => n19);
   U20 : GTECH_NOT port map( A => n263, Z => n20);
   U21 : GTECH_NOT port map( A => n259, Z => n21);
   U22 : GTECH_NOT port map( A => n256, Z => n22);
   U23 : GTECH_NOT port map( A => n252, Z => n23);
   U24 : GTECH_NOT port map( A => n249, Z => n24);
   U25 : GTECH_NOT port map( A => n245, Z => n25);
   U26 : GTECH_NOT port map( A => n242, Z => n26);
   U27 : GTECH_NOT port map( A => n235, Z => n27);
   U28 : GTECH_NOT port map( A => n232, Z => n28);
   U29 : GTECH_NOT port map( A => n228, Z => n29);
   U30 : GTECH_NOT port map( A => n225, Z => n30);
   U31 : GTECH_NOT port map( A => n221, Z => n31);
   U32 : GTECH_NOT port map( A => n218, Z => n32);
   U33 : GTECH_NOT port map( A => n214, Z => n33);
   U34 : GTECH_NOT port map( A => n211, Z => n34);
   U35 : GTECH_NOT port map( A => n207, Z => n35);
   U36 : GTECH_NOT port map( A => n204, Z => n36);
   U37 : GTECH_NOT port map( A => n197, Z => n37);
   U38 : GTECH_NOT port map( A => n194, Z => n38);
   U39 : GTECH_NOT port map( A => n190, Z => n39);
   U40 : GTECH_NOT port map( A => n187, Z => n40);
   U41 : GTECH_NOT port map( A => n183, Z => n41);
   U42 : GTECH_NOT port map( A => n180, Z => n42);
   U43 : GTECH_NOT port map( A => n176, Z => n43);
   U44 : GTECH_NOT port map( A => n173, Z => n44);
   U45 : GTECH_NOT port map( A => n169, Z => n45);
   U46 : GTECH_NOT port map( A => n166, Z => n46);
   U47 : GTECH_NOT port map( A => n159, Z => n47);
   U48 : GTECH_NOT port map( A => n156, Z => n48);
   U49 : GTECH_NOT port map( A => n152, Z => n49);
   U50 : GTECH_NOT port map( A => n149, Z => n50);
   U51 : GTECH_NOT port map( A => n145, Z => n51);
   U52 : GTECH_NOT port map( A => n142, Z => n52);
   U53 : GTECH_NOT port map( A => n138, Z => n53);
   U54 : GTECH_NOT port map( A => n135, Z => n54);
   U55 : GTECH_NOT port map( A => n131, Z => n55);
   U56 : GTECH_NOT port map( A => n128, Z => n56);
   U57 : GTECH_NOT port map( A => n121, Z => n57);
   U58 : GTECH_NOT port map( A => n118, Z => n58);
   U59 : GTECH_NOT port map( A => n116, Z => n59);
   U60 : GTECH_NOT port map( A => n111, Z => n60);
   U61 : GTECH_NOT port map( A => n110, Z => n61);
   U62 : GTECH_NOT port map( A => A(0), Z => SUM_0_port);
   U63 : GTECH_NOT port map( A => n238, Z => n63);
   U64 : GTECH_NOT port map( A => A(1), Z => n64);
   U65 : GTECH_NOT port map( A => A(3), Z => n65);
   U66 : GTECH_NOT port map( A => A(5), Z => n66);
   U67 : GTECH_NOT port map( A => A(7), Z => n67);
   U68 : GTECH_NOT port map( A => A(9), Z => n68);
   U69 : GTECH_NOT port map( A => A(11), Z => n69);
   U70 : GTECH_NOT port map( A => A(13), Z => n70);
   U71 : GTECH_NOT port map( A => A(15), Z => n71);
   U72 : GTECH_NOT port map( A => A(17), Z => n72);
   U73 : GTECH_NOT port map( A => A(19), Z => n73);
   U74 : GTECH_NOT port map( A => A(21), Z => n74);
   U75 : GTECH_NOT port map( A => A(23), Z => n75);
   U76 : GTECH_NOT port map( A => A(25), Z => n76);
   U77 : GTECH_NOT port map( A => A(27), Z => n77);
   U78 : GTECH_NOT port map( A => A(29), Z => n78);
   U79 : GTECH_NOT port map( A => A(31), Z => n79);
   U80 : GTECH_NOT port map( A => A(33), Z => n80);
   U81 : GTECH_NOT port map( A => A(35), Z => n81);
   U82 : GTECH_NOT port map( A => A(37), Z => n82);
   U83 : GTECH_NOT port map( A => A(39), Z => n83);
   U84 : GTECH_NOT port map( A => A(41), Z => n84);
   U85 : GTECH_NOT port map( A => A(43), Z => n85);
   U86 : GTECH_NOT port map( A => A(45), Z => n86);
   U87 : GTECH_NOT port map( A => A(47), Z => n87);
   U88 : GTECH_NOT port map( A => A(49), Z => n88);
   U89 : GTECH_NOT port map( A => A(51), Z => n89);
   U90 : GTECH_NOT port map( A => A(53), Z => n90);
   U91 : GTECH_NOT port map( A => A(55), Z => n91);
   U92 : GTECH_NOT port map( A => A(57), Z => n92);
   U93 : GTECH_NOT port map( A => A(59), Z => n93);
   U94 : GTECH_NOT port map( A => A(61), Z => n94);
   U95 : GTECH_NOT port map( A => A(62), Z => n95);
   U96 : GTECH_NAND2 port map( A => n96, B => n97, Z => SUM_9_port);
   U97 : GTECH_NAND2 port map( A => A(9), B => n98, Z => n97);
   U98 : GTECH_NAND2 port map( A => n8, B => n68, Z => n96);
   U99 : GTECH_NAND2 port map( A => n5, B => n99, Z => SUM_8_port);
   U100 : GTECH_NAND2 port map( A => A(8), B => n100, Z => n99);
   U101 : GTECH_NOR2 port map( A => n100, B => A(8), Z => n101);
   U102 : GTECH_NAND2 port map( A => A(7), B => n6, Z => n100);
   U103 : GTECH_NAND2 port map( A => n102, B => n103, Z => SUM_7_port);
   U104 : GTECH_NAND2 port map( A => A(7), B => n104, Z => n103);
   U105 : GTECH_NAND2 port map( A => n6, B => n67, Z => n102);
   U106 : GTECH_NAND2 port map( A => n3, B => n105, Z => SUM_6_port);
   U107 : GTECH_NAND2 port map( A => A(6), B => n106, Z => n105);
   U108 : GTECH_NOR2 port map( A => n106, B => A(6), Z => n107);
   U109 : GTECH_NAND2 port map( A => A(5), B => n4, Z => n106);
   U110 : GTECH_NAND2 port map( A => n61, B => n108, Z => SUM_63_port);
   U111 : GTECH_NAND2 port map( A => A(63), B => n109, Z => n108);
   U112 : GTECH_NOR2 port map( A => n109, B => A(63), Z => n110);
   U113 : GTECH_NAND2 port map( A => A(62), B => n111, Z => n109);
   U114 : GTECH_NAND2 port map( A => n112, B => n113, Z => SUM_62_port);
   U115 : GTECH_NAND2 port map( A => A(62), B => n60, Z => n113);
   U116 : GTECH_NAND2 port map( A => n111, B => n95, Z => n112);
   U117 : GTECH_NOR2 port map( A => n94, B => n114, Z => n111);
   U118 : GTECH_NAND2 port map( A => n59, B => n115, Z => SUM_61_port);
   U119 : GTECH_NAND2 port map( A => A(61), B => n114, Z => n115);
   U120 : GTECH_NOR2 port map( A => n114, B => A(61), Z => n116);
   U121 : GTECH_NAND2 port map( A => n117, B => A(60), Z => n114);
   U122 : GTECH_NOR2 port map( A => n118, B => n93, Z => n117);
   U123 : GTECH_NAND2 port map( A => n57, B => n119, Z => SUM_60_port);
   U124 : GTECH_NAND2 port map( A => A(60), B => n120, Z => n119);
   U125 : GTECH_NOR2 port map( A => n120, B => A(60), Z => n121);
   U126 : GTECH_NAND2 port map( A => A(59), B => n58, Z => n120);
   U127 : GTECH_NAND2 port map( A => n122, B => n123, Z => SUM_5_port);
   U128 : GTECH_NAND2 port map( A => A(5), B => n124, Z => n123);
   U129 : GTECH_NAND2 port map( A => n4, B => n66, Z => n122);
   U130 : GTECH_NAND2 port map( A => n125, B => n126, Z => SUM_59_port);
   U131 : GTECH_NAND2 port map( A => A(59), B => n118, Z => n126);
   U132 : GTECH_NAND2 port map( A => n58, B => n93, Z => n125);
   U133 : GTECH_NAND2 port map( A => n127, B => A(58), Z => n118);
   U134 : GTECH_NOR2 port map( A => n128, B => n92, Z => n127);
   U135 : GTECH_NAND2 port map( A => n55, B => n129, Z => SUM_58_port);
   U136 : GTECH_NAND2 port map( A => A(58), B => n130, Z => n129);
   U137 : GTECH_NOR2 port map( A => n130, B => A(58), Z => n131);
   U138 : GTECH_NAND2 port map( A => A(57), B => n56, Z => n130);
   U139 : GTECH_NAND2 port map( A => n132, B => n133, Z => SUM_57_port);
   U140 : GTECH_NAND2 port map( A => A(57), B => n128, Z => n133);
   U141 : GTECH_NAND2 port map( A => n56, B => n92, Z => n132);
   U142 : GTECH_NAND2 port map( A => n134, B => A(56), Z => n128);
   U143 : GTECH_NOR2 port map( A => n135, B => n91, Z => n134);
   U144 : GTECH_NAND2 port map( A => n53, B => n136, Z => SUM_56_port);
   U145 : GTECH_NAND2 port map( A => A(56), B => n137, Z => n136);
   U146 : GTECH_NOR2 port map( A => n137, B => A(56), Z => n138);
   U147 : GTECH_NAND2 port map( A => A(55), B => n54, Z => n137);
   U148 : GTECH_NAND2 port map( A => n139, B => n140, Z => SUM_55_port);
   U149 : GTECH_NAND2 port map( A => A(55), B => n135, Z => n140);
   U150 : GTECH_NAND2 port map( A => n54, B => n91, Z => n139);
   U151 : GTECH_NAND2 port map( A => n141, B => A(54), Z => n135);
   U152 : GTECH_NOR2 port map( A => n142, B => n90, Z => n141);
   U153 : GTECH_NAND2 port map( A => n51, B => n143, Z => SUM_54_port);
   U154 : GTECH_NAND2 port map( A => A(54), B => n144, Z => n143);
   U155 : GTECH_NOR2 port map( A => n144, B => A(54), Z => n145);
   U156 : GTECH_NAND2 port map( A => A(53), B => n52, Z => n144);
   U157 : GTECH_NAND2 port map( A => n146, B => n147, Z => SUM_53_port);
   U158 : GTECH_NAND2 port map( A => A(53), B => n142, Z => n147);
   U159 : GTECH_NAND2 port map( A => n52, B => n90, Z => n146);
   U160 : GTECH_NAND2 port map( A => n148, B => A(52), Z => n142);
   U161 : GTECH_NOR2 port map( A => n149, B => n89, Z => n148);
   U162 : GTECH_NAND2 port map( A => n49, B => n150, Z => SUM_52_port);
   U163 : GTECH_NAND2 port map( A => A(52), B => n151, Z => n150);
   U164 : GTECH_NOR2 port map( A => n151, B => A(52), Z => n152);
   U165 : GTECH_NAND2 port map( A => A(51), B => n50, Z => n151);
   U166 : GTECH_NAND2 port map( A => n153, B => n154, Z => SUM_51_port);
   U167 : GTECH_NAND2 port map( A => A(51), B => n149, Z => n154);
   U168 : GTECH_NAND2 port map( A => n50, B => n89, Z => n153);
   U169 : GTECH_NAND2 port map( A => n155, B => A(50), Z => n149);
   U170 : GTECH_NOR2 port map( A => n156, B => n88, Z => n155);
   U171 : GTECH_NAND2 port map( A => n47, B => n157, Z => SUM_50_port);
   U172 : GTECH_NAND2 port map( A => A(50), B => n158, Z => n157);
   U173 : GTECH_NOR2 port map( A => n158, B => A(50), Z => n159);
   U174 : GTECH_NAND2 port map( A => A(49), B => n48, Z => n158);
   U175 : GTECH_NAND2 port map( A => n1, B => n160, Z => SUM_4_port);
   U176 : GTECH_NAND2 port map( A => A(4), B => n161, Z => n160);
   U177 : GTECH_NOR2 port map( A => n161, B => A(4), Z => n162);
   U178 : GTECH_NAND2 port map( A => A(3), B => n2, Z => n161);
   U179 : GTECH_NAND2 port map( A => n163, B => n164, Z => SUM_49_port);
   U180 : GTECH_NAND2 port map( A => A(49), B => n156, Z => n164);
   U181 : GTECH_NAND2 port map( A => n48, B => n88, Z => n163);
   U182 : GTECH_NAND2 port map( A => n165, B => A(48), Z => n156);
   U183 : GTECH_NOR2 port map( A => n166, B => n87, Z => n165);
   U184 : GTECH_NAND2 port map( A => n45, B => n167, Z => SUM_48_port);
   U185 : GTECH_NAND2 port map( A => A(48), B => n168, Z => n167);
   U186 : GTECH_NOR2 port map( A => n168, B => A(48), Z => n169);
   U187 : GTECH_NAND2 port map( A => A(47), B => n46, Z => n168);
   U188 : GTECH_NAND2 port map( A => n170, B => n171, Z => SUM_47_port);
   U189 : GTECH_NAND2 port map( A => A(47), B => n166, Z => n171);
   U190 : GTECH_NAND2 port map( A => n46, B => n87, Z => n170);
   U191 : GTECH_NAND2 port map( A => n172, B => A(46), Z => n166);
   U192 : GTECH_NOR2 port map( A => n173, B => n86, Z => n172);
   U193 : GTECH_NAND2 port map( A => n43, B => n174, Z => SUM_46_port);
   U194 : GTECH_NAND2 port map( A => A(46), B => n175, Z => n174);
   U195 : GTECH_NOR2 port map( A => n175, B => A(46), Z => n176);
   U196 : GTECH_NAND2 port map( A => A(45), B => n44, Z => n175);
   U197 : GTECH_NAND2 port map( A => n177, B => n178, Z => SUM_45_port);
   U198 : GTECH_NAND2 port map( A => A(45), B => n173, Z => n178);
   U199 : GTECH_NAND2 port map( A => n44, B => n86, Z => n177);
   U200 : GTECH_NAND2 port map( A => n179, B => A(44), Z => n173);
   U201 : GTECH_NOR2 port map( A => n180, B => n85, Z => n179);
   U202 : GTECH_NAND2 port map( A => n41, B => n181, Z => SUM_44_port);
   U203 : GTECH_NAND2 port map( A => A(44), B => n182, Z => n181);
   U204 : GTECH_NOR2 port map( A => n182, B => A(44), Z => n183);
   U205 : GTECH_NAND2 port map( A => A(43), B => n42, Z => n182);
   U206 : GTECH_NAND2 port map( A => n184, B => n185, Z => SUM_43_port);
   U207 : GTECH_NAND2 port map( A => A(43), B => n180, Z => n185);
   U208 : GTECH_NAND2 port map( A => n42, B => n85, Z => n184);
   U209 : GTECH_NAND2 port map( A => n186, B => A(42), Z => n180);
   U210 : GTECH_NOR2 port map( A => n187, B => n84, Z => n186);
   U211 : GTECH_NAND2 port map( A => n39, B => n188, Z => SUM_42_port);
   U212 : GTECH_NAND2 port map( A => A(42), B => n189, Z => n188);
   U213 : GTECH_NOR2 port map( A => n189, B => A(42), Z => n190);
   U214 : GTECH_NAND2 port map( A => A(41), B => n40, Z => n189);
   U215 : GTECH_NAND2 port map( A => n191, B => n192, Z => SUM_41_port);
   U216 : GTECH_NAND2 port map( A => A(41), B => n187, Z => n192);
   U217 : GTECH_NAND2 port map( A => n40, B => n84, Z => n191);
   U218 : GTECH_NAND2 port map( A => n193, B => A(40), Z => n187);
   U219 : GTECH_NOR2 port map( A => n194, B => n83, Z => n193);
   U220 : GTECH_NAND2 port map( A => n37, B => n195, Z => SUM_40_port);
   U221 : GTECH_NAND2 port map( A => A(40), B => n196, Z => n195);
   U222 : GTECH_NOR2 port map( A => n196, B => A(40), Z => n197);
   U223 : GTECH_NAND2 port map( A => A(39), B => n38, Z => n196);
   U224 : GTECH_NAND2 port map( A => n198, B => n199, Z => SUM_3_port);
   U225 : GTECH_NAND2 port map( A => A(3), B => n200, Z => n199);
   U226 : GTECH_NAND2 port map( A => n2, B => n65, Z => n198);
   U227 : GTECH_NAND2 port map( A => n201, B => n202, Z => SUM_39_port);
   U228 : GTECH_NAND2 port map( A => A(39), B => n194, Z => n202);
   U229 : GTECH_NAND2 port map( A => n38, B => n83, Z => n201);
   U230 : GTECH_NAND2 port map( A => n203, B => A(38), Z => n194);
   U231 : GTECH_NOR2 port map( A => n204, B => n82, Z => n203);
   U232 : GTECH_NAND2 port map( A => n35, B => n205, Z => SUM_38_port);
   U233 : GTECH_NAND2 port map( A => A(38), B => n206, Z => n205);
   U234 : GTECH_NOR2 port map( A => n206, B => A(38), Z => n207);
   U235 : GTECH_NAND2 port map( A => A(37), B => n36, Z => n206);
   U236 : GTECH_NAND2 port map( A => n208, B => n209, Z => SUM_37_port);
   U237 : GTECH_NAND2 port map( A => A(37), B => n204, Z => n209);
   U238 : GTECH_NAND2 port map( A => n36, B => n82, Z => n208);
   U239 : GTECH_NAND2 port map( A => n210, B => A(36), Z => n204);
   U240 : GTECH_NOR2 port map( A => n211, B => n81, Z => n210);
   U241 : GTECH_NAND2 port map( A => n33, B => n212, Z => SUM_36_port);
   U242 : GTECH_NAND2 port map( A => A(36), B => n213, Z => n212);
   U243 : GTECH_NOR2 port map( A => n213, B => A(36), Z => n214);
   U244 : GTECH_NAND2 port map( A => A(35), B => n34, Z => n213);
   U245 : GTECH_NAND2 port map( A => n215, B => n216, Z => SUM_35_port);
   U246 : GTECH_NAND2 port map( A => A(35), B => n211, Z => n216);
   U247 : GTECH_NAND2 port map( A => n34, B => n81, Z => n215);
   U248 : GTECH_NAND2 port map( A => n217, B => A(34), Z => n211);
   U249 : GTECH_NOR2 port map( A => n218, B => n80, Z => n217);
   U250 : GTECH_NAND2 port map( A => n31, B => n219, Z => SUM_34_port);
   U251 : GTECH_NAND2 port map( A => A(34), B => n220, Z => n219);
   U252 : GTECH_NOR2 port map( A => n220, B => A(34), Z => n221);
   U253 : GTECH_NAND2 port map( A => A(33), B => n32, Z => n220);
   U254 : GTECH_NAND2 port map( A => n222, B => n223, Z => SUM_33_port);
   U255 : GTECH_NAND2 port map( A => A(33), B => n218, Z => n223);
   U256 : GTECH_NAND2 port map( A => n32, B => n80, Z => n222);
   U257 : GTECH_NAND2 port map( A => n224, B => A(32), Z => n218);
   U258 : GTECH_NOR2 port map( A => n225, B => n79, Z => n224);
   U259 : GTECH_NAND2 port map( A => n29, B => n226, Z => SUM_32_port);
   U260 : GTECH_NAND2 port map( A => A(32), B => n227, Z => n226);
   U261 : GTECH_NOR2 port map( A => n227, B => A(32), Z => n228);
   U262 : GTECH_NAND2 port map( A => A(31), B => n30, Z => n227);
   U263 : GTECH_NAND2 port map( A => n229, B => n230, Z => SUM_31_port);
   U264 : GTECH_NAND2 port map( A => A(31), B => n225, Z => n230);
   U265 : GTECH_NAND2 port map( A => n30, B => n79, Z => n229);
   U266 : GTECH_NAND2 port map( A => n231, B => A(30), Z => n225);
   U267 : GTECH_NOR2 port map( A => n232, B => n78, Z => n231);
   U268 : GTECH_NAND2 port map( A => n27, B => n233, Z => SUM_30_port);
   U269 : GTECH_NAND2 port map( A => A(30), B => n234, Z => n233);
   U270 : GTECH_NOR2 port map( A => n234, B => A(30), Z => n235);
   U271 : GTECH_NAND2 port map( A => A(29), B => n28, Z => n234);
   U272 : GTECH_NAND2 port map( A => n63, B => n236, Z => SUM_2_port);
   U273 : GTECH_NAND2 port map( A => A(2), B => n237, Z => n236);
   U274 : GTECH_NOR2 port map( A => n237, B => A(2), Z => n238);
   U275 : GTECH_NAND2 port map( A => A(1), B => A(0), Z => n237);
   U276 : GTECH_NAND2 port map( A => n239, B => n240, Z => SUM_29_port);
   U277 : GTECH_NAND2 port map( A => A(29), B => n232, Z => n240);
   U278 : GTECH_NAND2 port map( A => n28, B => n78, Z => n239);
   U279 : GTECH_NAND2 port map( A => n241, B => A(28), Z => n232);
   U280 : GTECH_NOR2 port map( A => n242, B => n77, Z => n241);
   U281 : GTECH_NAND2 port map( A => n25, B => n243, Z => SUM_28_port);
   U282 : GTECH_NAND2 port map( A => A(28), B => n244, Z => n243);
   U283 : GTECH_NOR2 port map( A => n244, B => A(28), Z => n245);
   U284 : GTECH_NAND2 port map( A => A(27), B => n26, Z => n244);
   U285 : GTECH_NAND2 port map( A => n246, B => n247, Z => SUM_27_port);
   U286 : GTECH_NAND2 port map( A => A(27), B => n242, Z => n247);
   U287 : GTECH_NAND2 port map( A => n26, B => n77, Z => n246);
   U288 : GTECH_NAND2 port map( A => n248, B => A(26), Z => n242);
   U289 : GTECH_NOR2 port map( A => n249, B => n76, Z => n248);
   U290 : GTECH_NAND2 port map( A => n23, B => n250, Z => SUM_26_port);
   U291 : GTECH_NAND2 port map( A => A(26), B => n251, Z => n250);
   U292 : GTECH_NOR2 port map( A => n251, B => A(26), Z => n252);
   U293 : GTECH_NAND2 port map( A => A(25), B => n24, Z => n251);
   U294 : GTECH_NAND2 port map( A => n253, B => n254, Z => SUM_25_port);
   U295 : GTECH_NAND2 port map( A => A(25), B => n249, Z => n254);
   U296 : GTECH_NAND2 port map( A => n24, B => n76, Z => n253);
   U297 : GTECH_NAND2 port map( A => n255, B => A(24), Z => n249);
   U298 : GTECH_NOR2 port map( A => n256, B => n75, Z => n255);
   U299 : GTECH_NAND2 port map( A => n21, B => n257, Z => SUM_24_port);
   U300 : GTECH_NAND2 port map( A => A(24), B => n258, Z => n257);
   U301 : GTECH_NOR2 port map( A => n258, B => A(24), Z => n259);
   U302 : GTECH_NAND2 port map( A => A(23), B => n22, Z => n258);
   U303 : GTECH_NAND2 port map( A => n260, B => n261, Z => SUM_23_port);
   U304 : GTECH_NAND2 port map( A => A(23), B => n256, Z => n261);
   U305 : GTECH_NAND2 port map( A => n22, B => n75, Z => n260);
   U306 : GTECH_NAND2 port map( A => n262, B => A(22), Z => n256);
   U307 : GTECH_NOR2 port map( A => n263, B => n74, Z => n262);
   U308 : GTECH_NAND2 port map( A => n19, B => n264, Z => SUM_22_port);
   U309 : GTECH_NAND2 port map( A => A(22), B => n265, Z => n264);
   U310 : GTECH_NOR2 port map( A => n265, B => A(22), Z => n266);
   U311 : GTECH_NAND2 port map( A => A(21), B => n20, Z => n265);
   U312 : GTECH_NAND2 port map( A => n267, B => n268, Z => SUM_21_port);
   U313 : GTECH_NAND2 port map( A => A(21), B => n263, Z => n268);
   U314 : GTECH_NAND2 port map( A => n20, B => n74, Z => n267);
   U315 : GTECH_NAND2 port map( A => n269, B => A(20), Z => n263);
   U316 : GTECH_NOR2 port map( A => n270, B => n73, Z => n269);
   U317 : GTECH_NAND2 port map( A => n17, B => n271, Z => SUM_20_port);
   U318 : GTECH_NAND2 port map( A => A(20), B => n272, Z => n271);
   U319 : GTECH_NOR2 port map( A => n272, B => A(20), Z => n273);
   U320 : GTECH_NAND2 port map( A => A(19), B => n18, Z => n272);
   U321 : GTECH_NAND2 port map( A => n274, B => n275, Z => SUM_1_port);
   U322 : GTECH_NAND2 port map( A => A(1), B => SUM_0_port, Z => n275);
   U323 : GTECH_NAND2 port map( A => A(0), B => n64, Z => n274);
   U324 : GTECH_NAND2 port map( A => n276, B => n277, Z => SUM_19_port);
   U325 : GTECH_NAND2 port map( A => A(19), B => n270, Z => n277);
   U326 : GTECH_NAND2 port map( A => n18, B => n73, Z => n276);
   U327 : GTECH_NAND2 port map( A => n278, B => A(18), Z => n270);
   U328 : GTECH_NOR2 port map( A => n279, B => n72, Z => n278);
   U329 : GTECH_NAND2 port map( A => n15, B => n280, Z => SUM_18_port);
   U330 : GTECH_NAND2 port map( A => A(18), B => n281, Z => n280);
   U331 : GTECH_NOR2 port map( A => n281, B => A(18), Z => n282);
   U332 : GTECH_NAND2 port map( A => A(17), B => n16, Z => n281);
   U333 : GTECH_NAND2 port map( A => n283, B => n284, Z => SUM_17_port);
   U334 : GTECH_NAND2 port map( A => A(17), B => n279, Z => n284);
   U335 : GTECH_NAND2 port map( A => n16, B => n72, Z => n283);
   U336 : GTECH_NAND2 port map( A => n285, B => A(16), Z => n279);
   U337 : GTECH_NOR2 port map( A => n286, B => n71, Z => n285);
   U338 : GTECH_NAND2 port map( A => n13, B => n287, Z => SUM_16_port);
   U339 : GTECH_NAND2 port map( A => A(16), B => n288, Z => n287);
   U340 : GTECH_NOR2 port map( A => n288, B => A(16), Z => n289);
   U341 : GTECH_NAND2 port map( A => A(15), B => n14, Z => n288);
   U342 : GTECH_NAND2 port map( A => n290, B => n291, Z => SUM_15_port);
   U343 : GTECH_NAND2 port map( A => A(15), B => n286, Z => n291);
   U344 : GTECH_NAND2 port map( A => n14, B => n71, Z => n290);
   U345 : GTECH_NAND2 port map( A => n292, B => A(14), Z => n286);
   U346 : GTECH_NOR2 port map( A => n293, B => n70, Z => n292);
   U347 : GTECH_NAND2 port map( A => n11, B => n294, Z => SUM_14_port);
   U348 : GTECH_NAND2 port map( A => A(14), B => n295, Z => n294);
   U349 : GTECH_NOR2 port map( A => n295, B => A(14), Z => n296);
   U350 : GTECH_NAND2 port map( A => A(13), B => n12, Z => n295);
   U351 : GTECH_NAND2 port map( A => n297, B => n298, Z => SUM_13_port);
   U352 : GTECH_NAND2 port map( A => A(13), B => n293, Z => n298);
   U353 : GTECH_NAND2 port map( A => n12, B => n70, Z => n297);
   U354 : GTECH_NAND2 port map( A => n299, B => A(12), Z => n293);
   U355 : GTECH_NOR2 port map( A => n300, B => n69, Z => n299);
   U356 : GTECH_NAND2 port map( A => n9, B => n301, Z => SUM_12_port);
   U357 : GTECH_NAND2 port map( A => A(12), B => n302, Z => n301);
   U358 : GTECH_NOR2 port map( A => n302, B => A(12), Z => n303);
   U359 : GTECH_NAND2 port map( A => A(11), B => n10, Z => n302);
   U360 : GTECH_NAND2 port map( A => n304, B => n305, Z => SUM_11_port);
   U361 : GTECH_NAND2 port map( A => A(11), B => n300, Z => n305);
   U362 : GTECH_NAND2 port map( A => n10, B => n69, Z => n304);
   U363 : GTECH_NAND2 port map( A => n306, B => A(10), Z => n300);
   U364 : GTECH_NOR2 port map( A => n68, B => n98, Z => n306);
   U365 : GTECH_NAND2 port map( A => n7, B => n307, Z => SUM_10_port);
   U366 : GTECH_NAND2 port map( A => A(10), B => n308, Z => n307);
   U367 : GTECH_NOR2 port map( A => n308, B => A(10), Z => n309);
   U368 : GTECH_NAND2 port map( A => n8, B => A(9), Z => n308);
   U369 : GTECH_NAND2 port map( A => n310, B => A(8), Z => n98);
   U370 : GTECH_NOR2 port map( A => n104, B => n67, Z => n310);
   U371 : GTECH_NAND2 port map( A => n311, B => A(6), Z => n104);
   U372 : GTECH_NOR2 port map( A => n124, B => n66, Z => n311);
   U373 : GTECH_NAND2 port map( A => n312, B => A(4), Z => n124);
   U374 : GTECH_NOR2 port map( A => n200, B => n65, Z => n312);
   U375 : GTECH_NAND2 port map( A => n313, B => A(2), Z => n200);
   U376 : GTECH_NOR2 port map( A => SUM_0_port, B => n64, Z => n313);

end SYN_rpl;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_zpu_perf_mon.all;

entity zpu_perf_mon_DW01_add_0 is

   port( A, B : in std_logic_vector (31 downto 0);  CI : in std_logic;  SUM : 
         out std_logic_vector (31 downto 0);  CO : out std_logic);

end zpu_perf_mon_DW01_add_0;

architecture SYN_rpl of zpu_perf_mon_DW01_add_0 is

   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   signal n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16
      , n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, 
      n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45
      , n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, 
      n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n73, n74
      , n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86, n87, n88, 
      n89, n90, n91, n92, n93, n94, n95, n96, n97, n98, n99, n100, n101, n102, 
      n103, n104, n105, n106, n107, n108, n109, n110, n111, n112, n113, n114, 
      n115, n116, n117, n118, n119, n120, n121, n122, n123, n124, n125, n126, 
      n127, n128, n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, 
      n139, n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150, 
      n151, n152, n153, n154, n155, n156, n157, n158 : std_logic;

begin
   
   U1 : GTECH_NOT port map( A => n63, Z => n1);
   U2 : GTECH_NOT port map( A => n66, Z => n2);
   U3 : GTECH_NOT port map( A => n57, Z => n3);
   U4 : GTECH_NOT port map( A => n60, Z => n4);
   U5 : GTECH_NOT port map( A => n51, Z => n5);
   U6 : GTECH_NOT port map( A => n54, Z => n6);
   U7 : GTECH_NOT port map( A => n149, Z => n7);
   U8 : GTECH_NOT port map( A => n146, Z => n8);
   U9 : GTECH_NOT port map( A => n142, Z => n9);
   U10 : GTECH_NOT port map( A => n139, Z => n10);
   U11 : GTECH_NOT port map( A => n135, Z => n11);
   U12 : GTECH_NOT port map( A => n132, Z => n12);
   U13 : GTECH_NOT port map( A => n128, Z => n13);
   U14 : GTECH_NOT port map( A => n125, Z => n14);
   U15 : GTECH_NOT port map( A => n121, Z => n15);
   U16 : GTECH_NOT port map( A => n115, Z => n16);
   U17 : GTECH_NOT port map( A => n111, Z => n17);
   U18 : GTECH_NOT port map( A => n108, Z => n18);
   U19 : GTECH_NOT port map( A => n104, Z => n19);
   U20 : GTECH_NOT port map( A => n101, Z => n20);
   U21 : GTECH_NOT port map( A => n97, Z => n21);
   U22 : GTECH_NOT port map( A => n94, Z => n22);
   U23 : GTECH_NOT port map( A => n90, Z => n23);
   U24 : GTECH_NOT port map( A => n87, Z => n24);
   U25 : GTECH_NOT port map( A => n83, Z => n25);
   U26 : GTECH_NOT port map( A => n78, Z => n26);
   U27 : GTECH_NOT port map( A => n73, Z => n27);
   U28 : GTECH_NOT port map( A => n74, Z => n28);
   U29 : GTECH_NOT port map( A => n76, Z => n29);
   U30 : GTECH_NOT port map( A => n70, Z => n30);
   U31 : GTECH_NOT port map( A => n69, Z => n31);
   U32 : GTECH_NOT port map( A => B(0), Z => n32);
   U33 : GTECH_NOT port map( A => n118, Z => n33);
   U34 : GTECH_NOT port map( A => A(0), Z => n34);
   U35 : GTECH_NOT port map( A => A(2), Z => n35);
   U36 : GTECH_NOT port map( A => A(4), Z => n36);
   U37 : GTECH_NOT port map( A => A(6), Z => n37);
   U38 : GTECH_NOT port map( A => A(8), Z => n38);
   U39 : GTECH_NOT port map( A => A(10), Z => n39);
   U40 : GTECH_NOT port map( A => A(12), Z => n40);
   U41 : GTECH_NOT port map( A => A(14), Z => n41);
   U42 : GTECH_NOT port map( A => A(16), Z => n42);
   U43 : GTECH_NOT port map( A => A(18), Z => n43);
   U44 : GTECH_NOT port map( A => A(20), Z => n44);
   U45 : GTECH_NOT port map( A => A(22), Z => n45);
   U46 : GTECH_NOT port map( A => A(24), Z => n46);
   U47 : GTECH_NOT port map( A => A(26), Z => n47);
   U48 : GTECH_NOT port map( A => A(28), Z => n48);
   U49 : GTECH_NAND2 port map( A => n5, B => n49, Z => SUM(9));
   U50 : GTECH_NAND2 port map( A => A(9), B => n50, Z => n49);
   U51 : GTECH_NOR2 port map( A => n50, B => A(9), Z => n51);
   U52 : GTECH_NAND2 port map( A => A(8), B => n6, Z => n50);
   U53 : GTECH_NAND2 port map( A => n52, B => n53, Z => SUM(8));
   U54 : GTECH_NAND2 port map( A => A(8), B => n54, Z => n53);
   U55 : GTECH_NAND2 port map( A => n6, B => n38, Z => n52);
   U56 : GTECH_NAND2 port map( A => n3, B => n55, Z => SUM(7));
   U57 : GTECH_NAND2 port map( A => A(7), B => n56, Z => n55);
   U58 : GTECH_NOR2 port map( A => n56, B => A(7), Z => n57);
   U59 : GTECH_NAND2 port map( A => A(6), B => n4, Z => n56);
   U60 : GTECH_NAND2 port map( A => n58, B => n59, Z => SUM(6));
   U61 : GTECH_NAND2 port map( A => A(6), B => n60, Z => n59);
   U62 : GTECH_NAND2 port map( A => n4, B => n37, Z => n58);
   U63 : GTECH_NAND2 port map( A => n1, B => n61, Z => SUM(5));
   U64 : GTECH_NAND2 port map( A => A(5), B => n62, Z => n61);
   U65 : GTECH_NOR2 port map( A => n62, B => A(5), Z => n63);
   U66 : GTECH_NAND2 port map( A => A(4), B => n2, Z => n62);
   U67 : GTECH_NAND2 port map( A => n64, B => n65, Z => SUM(4));
   U68 : GTECH_NAND2 port map( A => A(4), B => n66, Z => n65);
   U69 : GTECH_NAND2 port map( A => n2, B => n36, Z => n64);
   U70 : GTECH_NAND2 port map( A => n31, B => n67, Z => SUM(3));
   U71 : GTECH_NAND2 port map( A => A(3), B => n68, Z => n67);
   U72 : GTECH_NOR2 port map( A => n68, B => A(3), Z => n69);
   U73 : GTECH_NAND2 port map( A => A(2), B => n70, Z => n68);
   U74 : GTECH_NAND2 port map( A => n27, B => n71, Z => SUM(31));
   U75 : GTECH_NAND2 port map( A => A(31), B => n72, Z => n71);
   U76 : GTECH_NOR2 port map( A => n72, B => A(31), Z => n73);
   U77 : GTECH_NAND2 port map( A => A(30), B => n28, Z => n72);
   U78 : GTECH_NAND2 port map( A => n29, B => n75, Z => SUM(30));
   U79 : GTECH_NAND2 port map( A => A(30), B => n74, Z => n75);
   U80 : GTECH_NOR2 port map( A => n74, B => A(30), Z => n76);
   U81 : GTECH_NAND2 port map( A => n77, B => A(29), Z => n74);
   U82 : GTECH_NOR2 port map( A => n78, B => n48, Z => n77);
   U83 : GTECH_NAND2 port map( A => n79, B => n80, Z => SUM(2));
   U84 : GTECH_NAND2 port map( A => A(2), B => n30, Z => n80);
   U85 : GTECH_NAND2 port map( A => n70, B => n35, Z => n79);
   U86 : GTECH_NAND2 port map( A => n25, B => n81, Z => SUM(29));
   U87 : GTECH_NAND2 port map( A => A(29), B => n82, Z => n81);
   U88 : GTECH_NOR2 port map( A => n82, B => A(29), Z => n83);
   U89 : GTECH_NAND2 port map( A => A(28), B => n26, Z => n82);
   U90 : GTECH_NAND2 port map( A => n84, B => n85, Z => SUM(28));
   U91 : GTECH_NAND2 port map( A => A(28), B => n78, Z => n85);
   U92 : GTECH_NAND2 port map( A => n26, B => n48, Z => n84);
   U93 : GTECH_NAND2 port map( A => n86, B => A(27), Z => n78);
   U94 : GTECH_NOR2 port map( A => n87, B => n47, Z => n86);
   U95 : GTECH_NAND2 port map( A => n23, B => n88, Z => SUM(27));
   U96 : GTECH_NAND2 port map( A => A(27), B => n89, Z => n88);
   U97 : GTECH_NOR2 port map( A => n89, B => A(27), Z => n90);
   U98 : GTECH_NAND2 port map( A => A(26), B => n24, Z => n89);
   U99 : GTECH_NAND2 port map( A => n91, B => n92, Z => SUM(26));
   U100 : GTECH_NAND2 port map( A => A(26), B => n87, Z => n92);
   U101 : GTECH_NAND2 port map( A => n24, B => n47, Z => n91);
   U102 : GTECH_NAND2 port map( A => n93, B => A(25), Z => n87);
   U103 : GTECH_NOR2 port map( A => n94, B => n46, Z => n93);
   U104 : GTECH_NAND2 port map( A => n21, B => n95, Z => SUM(25));
   U105 : GTECH_NAND2 port map( A => A(25), B => n96, Z => n95);
   U106 : GTECH_NOR2 port map( A => n96, B => A(25), Z => n97);
   U107 : GTECH_NAND2 port map( A => A(24), B => n22, Z => n96);
   U108 : GTECH_NAND2 port map( A => n98, B => n99, Z => SUM(24));
   U109 : GTECH_NAND2 port map( A => A(24), B => n94, Z => n99);
   U110 : GTECH_NAND2 port map( A => n22, B => n46, Z => n98);
   U111 : GTECH_NAND2 port map( A => n100, B => A(23), Z => n94);
   U112 : GTECH_NOR2 port map( A => n101, B => n45, Z => n100);
   U113 : GTECH_NAND2 port map( A => n19, B => n102, Z => SUM(23));
   U114 : GTECH_NAND2 port map( A => A(23), B => n103, Z => n102);
   U115 : GTECH_NOR2 port map( A => n103, B => A(23), Z => n104);
   U116 : GTECH_NAND2 port map( A => A(22), B => n20, Z => n103);
   U117 : GTECH_NAND2 port map( A => n105, B => n106, Z => SUM(22));
   U118 : GTECH_NAND2 port map( A => A(22), B => n101, Z => n106);
   U119 : GTECH_NAND2 port map( A => n20, B => n45, Z => n105);
   U120 : GTECH_NAND2 port map( A => n107, B => A(21), Z => n101);
   U121 : GTECH_NOR2 port map( A => n108, B => n44, Z => n107);
   U122 : GTECH_NAND2 port map( A => n17, B => n109, Z => SUM(21));
   U123 : GTECH_NAND2 port map( A => A(21), B => n110, Z => n109);
   U124 : GTECH_NOR2 port map( A => n110, B => A(21), Z => n111);
   U125 : GTECH_NAND2 port map( A => A(20), B => n18, Z => n110);
   U126 : GTECH_NAND2 port map( A => n112, B => n113, Z => SUM(20));
   U127 : GTECH_NAND2 port map( A => A(20), B => n108, Z => n113);
   U128 : GTECH_NAND2 port map( A => n18, B => n44, Z => n112);
   U129 : GTECH_NAND2 port map( A => n114, B => A(19), Z => n108);
   U130 : GTECH_NOR2 port map( A => n115, B => n43, Z => n114);
   U131 : GTECH_NAND2 port map( A => n33, B => n116, Z => SUM(1));
   U132 : GTECH_NAND2 port map( A => A(1), B => n117, Z => n116);
   U133 : GTECH_NOR2 port map( A => n117, B => A(1), Z => n118);
   U134 : GTECH_NAND2 port map( A => B(0), B => A(0), Z => n117);
   U135 : GTECH_NAND2 port map( A => n15, B => n119, Z => SUM(19));
   U136 : GTECH_NAND2 port map( A => A(19), B => n120, Z => n119);
   U137 : GTECH_NOR2 port map( A => n120, B => A(19), Z => n121);
   U138 : GTECH_NAND2 port map( A => A(18), B => n16, Z => n120);
   U139 : GTECH_NAND2 port map( A => n122, B => n123, Z => SUM(18));
   U140 : GTECH_NAND2 port map( A => A(18), B => n115, Z => n123);
   U141 : GTECH_NAND2 port map( A => n16, B => n43, Z => n122);
   U142 : GTECH_NAND2 port map( A => n124, B => A(17), Z => n115);
   U143 : GTECH_NOR2 port map( A => n125, B => n42, Z => n124);
   U144 : GTECH_NAND2 port map( A => n13, B => n126, Z => SUM(17));
   U145 : GTECH_NAND2 port map( A => A(17), B => n127, Z => n126);
   U146 : GTECH_NOR2 port map( A => n127, B => A(17), Z => n128);
   U147 : GTECH_NAND2 port map( A => A(16), B => n14, Z => n127);
   U148 : GTECH_NAND2 port map( A => n129, B => n130, Z => SUM(16));
   U149 : GTECH_NAND2 port map( A => A(16), B => n125, Z => n130);
   U150 : GTECH_NAND2 port map( A => n14, B => n42, Z => n129);
   U151 : GTECH_NAND2 port map( A => n131, B => A(15), Z => n125);
   U152 : GTECH_NOR2 port map( A => n132, B => n41, Z => n131);
   U153 : GTECH_NAND2 port map( A => n11, B => n133, Z => SUM(15));
   U154 : GTECH_NAND2 port map( A => A(15), B => n134, Z => n133);
   U155 : GTECH_NOR2 port map( A => n134, B => A(15), Z => n135);
   U156 : GTECH_NAND2 port map( A => A(14), B => n12, Z => n134);
   U157 : GTECH_NAND2 port map( A => n136, B => n137, Z => SUM(14));
   U158 : GTECH_NAND2 port map( A => A(14), B => n132, Z => n137);
   U159 : GTECH_NAND2 port map( A => n12, B => n41, Z => n136);
   U160 : GTECH_NAND2 port map( A => n138, B => A(13), Z => n132);
   U161 : GTECH_NOR2 port map( A => n139, B => n40, Z => n138);
   U162 : GTECH_NAND2 port map( A => n9, B => n140, Z => SUM(13));
   U163 : GTECH_NAND2 port map( A => A(13), B => n141, Z => n140);
   U164 : GTECH_NOR2 port map( A => n141, B => A(13), Z => n142);
   U165 : GTECH_NAND2 port map( A => A(12), B => n10, Z => n141);
   U166 : GTECH_NAND2 port map( A => n143, B => n144, Z => SUM(12));
   U167 : GTECH_NAND2 port map( A => A(12), B => n139, Z => n144);
   U168 : GTECH_NAND2 port map( A => n10, B => n40, Z => n143);
   U169 : GTECH_NAND2 port map( A => n145, B => A(11), Z => n139);
   U170 : GTECH_NOR2 port map( A => n146, B => n39, Z => n145);
   U171 : GTECH_NAND2 port map( A => n7, B => n147, Z => SUM(11));
   U172 : GTECH_NAND2 port map( A => A(11), B => n148, Z => n147);
   U173 : GTECH_NOR2 port map( A => n148, B => A(11), Z => n149);
   U174 : GTECH_NAND2 port map( A => A(10), B => n8, Z => n148);
   U175 : GTECH_NAND2 port map( A => n150, B => n151, Z => SUM(10));
   U176 : GTECH_NAND2 port map( A => A(10), B => n146, Z => n151);
   U177 : GTECH_NAND2 port map( A => n8, B => n39, Z => n150);
   U178 : GTECH_NAND2 port map( A => n152, B => A(9), Z => n146);
   U179 : GTECH_NOR2 port map( A => n54, B => n38, Z => n152);
   U180 : GTECH_NAND2 port map( A => n153, B => A(7), Z => n54);
   U181 : GTECH_NOR2 port map( A => n60, B => n37, Z => n153);
   U182 : GTECH_NAND2 port map( A => n154, B => A(5), Z => n60);
   U183 : GTECH_NOR2 port map( A => n66, B => n36, Z => n154);
   U184 : GTECH_NAND2 port map( A => n155, B => A(3), Z => n66);
   U185 : GTECH_NOR2 port map( A => n30, B => n35, Z => n155);
   U186 : GTECH_NOR2 port map( A => n156, B => n32, Z => n70);
   U187 : GTECH_NAND2 port map( A => A(0), B => A(1), Z => n156);
   U188 : GTECH_NAND2 port map( A => n157, B => n158, Z => SUM(0));
   U189 : GTECH_NAND2 port map( A => B(0), B => n34, Z => n158);
   U190 : GTECH_NAND2 port map( A => A(0), B => n32, Z => n157);

end SYN_rpl;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_zpu_perf_mon.all;

entity zpu_perf_mon is

   port( clk, reset_b, cpuwait : in std_logic;  pc, inst : in std_logic_vector 
         (31 downto 0);  ll_rx_sof_n, ll_rx_eof_n, ll_rx_src_rdy_n : in 
         std_logic;  ll_rx_dst_rdy_n : out std_logic;  ll_rx_data : in 
         std_logic_vector (31 downto 0);  ll_tx_sof_n, ll_tx_eof_n, 
         ll_tx_src_rdy_n : out std_logic;  ll_tx_dst_rdy_n : in std_logic;  
         ll_tx_data : out std_logic_vector (31 downto 0));

end zpu_perf_mon;

architecture SYN_IMP of zpu_perf_mon is

   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component zpu_perf_mon_DW01_inc_1
      port( A : in std_logic_vector (63 downto 0);  SUM : out std_logic_vector 
            (63 downto 0));
   end component;
   
   component zpu_perf_mon_DW01_inc_0
      port( A : in std_logic_vector (63 downto 0);  SUM : out std_logic_vector 
            (63 downto 0));
   end component;
   
   component zpu_perf_mon_DW01_add_0
      port( A, B : in std_logic_vector (31 downto 0);  CI : in std_logic;  SUM 
            : out std_logic_vector (31 downto 0);  CO : out std_logic);
   end component;
   
   component GTECH_FD1
      port( D, CP : in std_logic;  Q, QN : out std_logic);
   end component;
   
   signal X_Logic0_port, perf_cmd_7_port, perf_cmd_6_port, perf_cmd_1_port, 
      perf_cmd_0_port, run_timer_63_port, run_timer_62_port, run_timer_61_port,
      run_timer_60_port, run_timer_59_port, run_timer_58_port, 
      run_timer_57_port, run_timer_56_port, run_timer_55_port, 
      run_timer_54_port, run_timer_53_port, run_timer_52_port, 
      run_timer_51_port, run_timer_50_port, run_timer_49_port, 
      run_timer_48_port, run_timer_47_port, run_timer_46_port, 
      run_timer_45_port, run_timer_44_port, run_timer_43_port, 
      run_timer_42_port, run_timer_41_port, run_timer_40_port, 
      run_timer_39_port, run_timer_38_port, run_timer_37_port, 
      run_timer_36_port, run_timer_35_port, run_timer_34_port, 
      run_timer_33_port, run_timer_32_port, run_timer_31_port, 
      run_timer_30_port, run_timer_29_port, run_timer_28_port, 
      run_timer_27_port, run_timer_26_port, run_timer_25_port, 
      run_timer_24_port, run_timer_23_port, run_timer_22_port, 
      run_timer_21_port, run_timer_20_port, run_timer_19_port, 
      run_timer_18_port, run_timer_17_port, run_timer_16_port, 
      run_timer_15_port, run_timer_14_port, run_timer_13_port, 
      run_timer_12_port, run_timer_11_port, run_timer_10_port, run_timer_9_port
      , run_timer_8_port, run_timer_7_port, run_timer_6_port, run_timer_5_port,
      run_timer_4_port, run_timer_3_port, run_timer_2_port, run_timer_1_port, 
      run_timer_0_port, wait_timer_63_port, wait_timer_62_port, 
      wait_timer_61_port, wait_timer_60_port, wait_timer_59_port, 
      wait_timer_58_port, wait_timer_57_port, wait_timer_56_port, 
      wait_timer_55_port, wait_timer_54_port, wait_timer_53_port, 
      wait_timer_52_port, wait_timer_51_port, wait_timer_50_port, 
      wait_timer_49_port, wait_timer_48_port, wait_timer_47_port, 
      wait_timer_46_port, wait_timer_45_port, wait_timer_44_port, 
      wait_timer_43_port, wait_timer_42_port, wait_timer_41_port, 
      wait_timer_40_port, wait_timer_39_port, wait_timer_38_port, 
      wait_timer_37_port, wait_timer_36_port, wait_timer_35_port, 
      wait_timer_34_port, wait_timer_33_port, wait_timer_32_port, 
      wait_timer_31_port, wait_timer_30_port, wait_timer_29_port, 
      wait_timer_28_port, wait_timer_27_port, wait_timer_26_port, 
      wait_timer_25_port, wait_timer_24_port, wait_timer_23_port, 
      wait_timer_22_port, wait_timer_21_port, wait_timer_20_port, 
      wait_timer_19_port, wait_timer_18_port, wait_timer_17_port, 
      wait_timer_16_port, wait_timer_15_port, wait_timer_14_port, 
      wait_timer_13_port, wait_timer_12_port, wait_timer_11_port, 
      wait_timer_10_port, wait_timer_9_port, wait_timer_8_port, 
      wait_timer_7_port, wait_timer_6_port, wait_timer_5_port, 
      wait_timer_4_port, wait_timer_3_port, wait_timer_2_port, 
      wait_timer_1_port, wait_timer_0_port, N51, N52, N53, N54, N55, N56, N57, 
      N58, N59, N60, N61, N62, N63, N64, N65, N66, N67, N68, N69, N70, N71, N72
      , N73, N74, N75, N76, N77, N78, N79, N80, N81, N82, N83, N84, N85, N86, 
      N87, N88, N89, N90, N91, N92, N93, N94, N95, N96, N97, N98, N99, N100, 
      N101, N102, N103, N104, N105, N106, N107, N108, N109, N110, N111, N112, 
      N113, N114, N125, N126, N127, N128, N129, N130, N131, N132, N133, N134, 
      N135, N136, N137, N138, N139, N140, N141, N142, N143, N144, N145, N146, 
      N147, N148, N149, N150, N151, N152, N153, N154, N155, N156, N157, N158, 
      N159, N160, N161, N162, N163, N164, N165, N166, N167, N168, N169, N170, 
      N171, N172, N173, N174, N175, N176, N177, N178, N179, N180, N181, N182, 
      N183, N184, N185, N186, N187, N188, word_count_31_port, 
      word_count_30_port, word_count_29_port, word_count_28_port, 
      word_count_27_port, word_count_26_port, word_count_25_port, 
      word_count_24_port, word_count_23_port, word_count_22_port, 
      word_count_21_port, word_count_20_port, word_count_19_port, 
      word_count_18_port, word_count_17_port, word_count_16_port, 
      word_count_15_port, word_count_14_port, word_count_13_port, 
      word_count_12_port, word_count_11_port, word_count_10_port, 
      word_count_9_port, word_count_8_port, word_count_7_port, 
      word_count_6_port, word_count_5_port, word_count_4_port, 
      word_count_3_port, word_count_2_port, word_count_1_port, 
      word_count_0_port, pc_i_31_port, pc_i_30_port, pc_i_29_port, pc_i_28_port
      , pc_i_27_port, pc_i_26_port, pc_i_25_port, pc_i_24_port, pc_i_23_port, 
      pc_i_22_port, pc_i_21_port, pc_i_20_port, pc_i_19_port, pc_i_18_port, 
      pc_i_17_port, pc_i_16_port, pc_i_15_port, pc_i_14_port, pc_i_13_port, 
      pc_i_12_port, pc_i_11_port, pc_i_10_port, pc_i_9_port, pc_i_8_port, 
      pc_i_7_port, pc_i_6_port, pc_i_5_port, pc_i_4_port, pc_i_3_port, 
      pc_i_2_port, pc_i_1_port, pc_i_0_port, inst_i_31_port, inst_i_30_port, 
      inst_i_29_port, inst_i_28_port, inst_i_27_port, inst_i_26_port, 
      inst_i_25_port, inst_i_24_port, inst_i_23_port, inst_i_22_port, 
      inst_i_21_port, inst_i_20_port, inst_i_19_port, inst_i_18_port, 
      inst_i_17_port, inst_i_16_port, inst_i_15_port, inst_i_14_port, 
      inst_i_13_port, inst_i_12_port, inst_i_11_port, inst_i_10_port, 
      inst_i_9_port, inst_i_8_port, inst_i_7_port, inst_i_6_port, inst_i_5_port
      , inst_i_4_port, inst_i_3_port, inst_i_2_port, inst_i_1_port, 
      inst_i_0_port, N715, N716, N717, N718, N719, N720, N721, N722, N723, N724
      , N725, N726, N727, N728, N729, N730, N731, N732, N733, N734, N735, N736,
      N737, N738, N739, N740, N741, N742, N743, N744, N745, N746, N811, n1, 
      n930, n931, n932, n933, n934, n935, n936, n937, n938, n939, n940, n941, 
      n942, n943, n944, n945, n946, n947, n948, n949, n950, n951, n952, n953, 
      n954, n955, n956, n957, n958, n959, n960, n961, n962, n963, n964, n965, 
      n966, n967, n968, n969, n970, n971, n972, n973, n974, n975, n976, n977, 
      n978, n979, n980, n981, n982, n983, n984, n985, n986, n987, n988, n989, 
      n990, n991, n992, n993, n994, n995, n996, n997, n998, n999, n1000, n1001,
      n1002, n1003, n1004, n1005, n1006, n1007, n1008, n1009, n1010, n1011, 
      n1012, n1013, n1014, n1015, n1016, n1017, n1018, n1019, n1020, n1021, 
      n1022, n1023, n1024, n1025, n1026, n1027, n1028, n1029, n1030, n1031, 
      n1032, n1033, n1034, n1035, n1036, n1037, n1038, n1039, n1040, n1041, 
      n1042, n1043, n1044, n1045, n1046, n1047, n1048, n1049, n1050, n1051, 
      n1052, n1053, n1054, n1055, n1056, n1057, n1058, n1059, n1060, n1061, 
      n1062, n1063, n1064, n1065, n1066, n1067, n1068, n1069, n1070, n1071, 
      n1072, n1073, n1074, n1075, n1076, n1077, n1078, n1079, n1080, n1081, 
      n1082, n1083, n1084, n1085, n1086, n1087, n1088, n1089, n1090, n1091, 
      n1092, n1093, n1094, n1095, n1096, n1097, n1098, n1099, n1100, n1101, 
      n1102, n1103, n1104, n1105, n1106, n1107, n1108, n1109, n1110, n1111, 
      n1112, n1113, n1114, n1115, n1116, n1117, n1118, n1119, n1120, n1121, 
      n1128, n1129, n1130, n1131, n1132, n1133, n1134, n1135, n1136, n1137, 
      n1138, n1139, n1140, n1141, n1142, n1143, n1144, n1145, n1146, n1147, 
      n1148, n1149, n1150, n1151, n1152, n1153, n1154, n1155, n1156, n1157, 
      n1158, n1159, n1160, n1161, n1162, n1163, n1164, n1165, n1166, n1167, 
      n1168, n1169, n1170, n1171, n1172, n1173, n1174, n1175, n1176, n1177, 
      n1178, n1179, n1180, n1181, n1182, n1183, n1184, n1185, n1186, n1187, 
      n1188, n1189, n1190, n1191, n1192, n1193, n1194, n1195, n1196, n1197, 
      n1198, n1199, n1200, n1201, n1202, n1203, n1204, n1205, n1206, n1207, 
      n1208, n1209, n1210, n1211, n1212, n1213, n1214, n1215, n1216, n1217, 
      n1218, n1219, n1220, n1221, n1222, n1223, n1224, n1225, n1226, n1227, 
      n1228, n1229, n1230, n1231, n1232, n1233, n1234, n1235, n1236, n1237, 
      n1238, n1239, n1240, n1241, n1242, n1243, n1244, n1245, n1246, n1247, 
      n1248, n1249, n1250, n1251, n1252, n1253, n1254, n1255, n1256, n1257, 
      n1258, n1259, n1260, n1261, n1262, n1263, n1264, n1265, n1266, n1267, 
      n1268, n1269, n1270, n1271, n1272, n1273, n1274, n1275, n1276, n1277, 
      n1278, n1279, n1280, n1281, n1282, n1283, n1284, n1285, n1286, n1287, 
      n1288, n1289, n1290, n1291, n1292, n1293, n1294, n1295, n1296, n1297, 
      n1298, n1299, n1300, n1301, n1302, n1303, n1304, n1305, n1306, n1307, 
      n1308, n1309, n1310, n1311, n1312, n1313, n1314, n1315, n1316, n1317, 
      n1318, n1319, n1320, n1321, n1322, n1323, n1324, n1325, n1326, n1327, 
      n1328, n1329, n1330, n1331, n1332, n1333, n1334, n1335, n1336, n1337, 
      n1338, n1339, n1340, n1341, n1342, n1343, n1344, n1345, n1346, n1347, 
      n1348, n1349, n1350, n1351, n1352, n1353, n1354, n1355, n1356, n1357, 
      n1358, n1359, n1360, n1361, n1362, n1363, n1364, n1365, n1366, n1367, 
      n1368, n1369, n1370, n1371, n1372, n1373, n1374, n1375, n1376, n1377, 
      n1378, n1379, n1380, n1381, n1382, n1383, n1384, n1385, n1386, n1387, 
      n1388, n1389, n1390, n1391, n1392, n1393, n1394, n1395, n1396, n1397, 
      n1398, n1399, n1400, n1401, n1402, n1403, n1404, n1405, n1406, n1407, 
      n1408, n1409, n1410, n1411, n1412, n1413, n1414, n1415, n1416, n1417, 
      n1418, n1419, n1420, n1421, n1422, n1423, n1424, n1425, n1426, n1427, 
      n1428, n1429, n1430, n1431, n1432, n1433, n1434, n1435, n1436, n1437, 
      n1438, n1439, n1440, n1441, n1442, n1443, n1444, n1445, n1446, n1447, 
      n1448, n1449, n1450, n1451, n1452, n1453, n1454, n1455, n1456, n1457, 
      n1458, n1459, n1460, n1461, n1462, n1463, n1464, n1465, n1466, n1467, 
      n1468, n1469, n1470, n1471, n1472, n1473, n1474, n1475, n1476, n1477, 
      n1478, n1479, n1480, n1481, n1482, n1483, n1484, n1485, n1486, n1487, 
      n1488, n1489, n1490, n1491, n1492, n1493, n1494, n1495, n1496, n1497, 
      n1498, n1499, n1500, n1501, n1502, n1503, n1504, n1505, n1506, n1507, 
      n1508, n1509, n1510, n1511, n1512, n1513, n1514, n1515, n1516, n1517, 
      n1518, n1519, n1520, n1521, n1522, n1523, n1524, n1525, n1526, n1527, 
      n1528, n1529, n1530, n1531, n1532, n1533, n1534, n1535, n1536, n1537, 
      n1538, n1539, n1540, n1541, n1542, n1543, n1544, n1545, n1546, n1547, 
      n1548, n1549, n1550, n1551, n1552, n1553, n1554, n1555, n1556, n1557, 
      n1558, n1559, n1560, n1561, n1562, n1563, n1564, n1565, n1566, n1567, 
      n1568, n1569, n1570, n1571, n1572, n1573, n1574, n1575, n1576, n1577, 
      n1578, n1579, n1580, n1581, n1582, n1583, n1584, n1585, n1586, n1587, 
      n1588, n1589, n1590, n1591, n1592, n1593, n1594, n1595, n1596, n1597, 
      n1598, n1599, n1600, n1601, n1602, n1603, n1604, n1605, n1606, n1607, 
      n1608, n1609, n1610, n1611, n1612, n1613, n1614, n1615, n1616, n1617, 
      n1618, n1619, n1620, n1621, n1622, n1623, n1624, n1625, n1626, n1627, 
      n1628, n1629, n1630, n1631, n1632, n1633, n1634, n1635, n1636, n1637, 
      n1638, n1639, n1640, n1641, n1642, n1643, n1644, n1645, n1646, n1647, 
      n1648, n1649, n1650, n1651, n1652, n1653, n1654, n1655, n1656, n1657, 
      n1658, n1659, n1660, n1661, n1662, n1663, n1664, n1665, n1666, n1667, 
      n1668, n1669, n1670, n1671, n1672, n1673, n1674, n1675, n1676, n1677, 
      n1678, n1679, n1680, n1681, n1682, n1683, n1684, n1685, n1686, n1687, 
      n1688, n1689, n1690, n1691, n1692, n1693, n1694, n1695, n1696, n1697, 
      n1698, n1699, n1700, n1701, n1702, n1703, n1704, n1705, n1706, n1707, 
      n1708, n1709, n1710, n1711, n1712, n1713, n1714, n1715, n1716, n1717, 
      n1718, n1719, n1720, n1721, n1722, n1723, n1724, n1725, n1726, n1727, 
      n1728, n1729, n1730, n1731, n1732, n1733, n1734, n1735, n1736, n1737, 
      n1738, n1739, n1740, n1741, n1742, n1743, n1744, n1745, n1746, n1747, 
      n1748, n1749, n1750, n1751, n1752, n1753, n1754, n1755, n1756, n1757, 
      n1758, n1759, n1760, n1761, n1762, n1763, n1764, n1765, n1766, n1767, 
      n1768, n1769, n1770, n1771, n1772, n1773, n1774, n1775, n1776, n1777, 
      n1778, n1779, n1780, n1781, n1782, n1783, n1784, n1785, n1786, n1787, 
      n1788, n1789, n1790, n1791, n1792, n1793, n1794, n1795, n1796, n1797, 
      n1798, n1799, n1800, n1801, n1802, n1803, n1804, n1805, n1806, n1807, 
      n1808, n1809, n1810, n1811, n1812, n1813, n1814, n1815, n1816, n1817, 
      n1818, n1819, n1820, n1821, n1822, n1823, n1824, n1825, n1826, n1827, 
      n1828, n1829, n1830, n1831, n1832, n1833, n1834, n1835, n1836, n1837, 
      n1838, n1839, n1840, n1841, n1842, n1843, n1844, n1845, n1846, n1847, 
      n1848, n1849, n1850, n1851, n1852, n1853, n1854, n1855, n1856, n1857, 
      n1858, n1859, n1860, n1861, n1862, n1863, n1864, n1865, n1866, n1867, 
      n1868, n1869, n1870, n1871, n1872, n1873, n1874, n1875, n1876, n1877, 
      n1878, n1879, n1880, n1881, n1882, n1883, n1884, n1885, n1886, n1887, 
      n1888, n1889, n1890, n1891, n1892, n1893, n1894, n1895, n1896, n1897, 
      n1898, n1899, n1900, n1901, n1902, n1903, n1904, n1905, n1906, n1907, 
      n1908, n1909, n1910, n1911, n1912, n1913, n1914, n1915, n1916, n1917, 
      n1918, n1919, n1920, n1921, n1922, n1923, n1924, n1925, n1926, n1927, 
      n1928, n1929, n1930, n1931, n1932, n1933, n1934, n1935, n1936, n1937, 
      n1938, n1939, n1940, n1941, n1942, n1943, n1944, n1945, n1946, n1947, 
      n1948, n1949, n1950, n1951, n1952, n1953, n1954, n1955, n1956, n1957, 
      n1958, n1959, n1960, n1961, n1962, n1963, n1964, n1965, n1966, n1967, 
      n1968, n1969, n1970, n1971, n1972, n1973, n1974, n1975, n1976, n1977, 
      n1978, n1979, n1980, n1981, n1982, n1983, n1984, n1985, n1986, n1987, 
      n1988, n1989, n1990, n1991, n1992, n1993, n1994, n1995, n1996, n1997, 
      n1998, n1999, n2000, n2001, n2002, n2003, n2004, n2005, n2006, n2007, 
      n2008, n2009, n2010, n2011, n2012, n2013, n2014, n2015, n2016, n2017, 
      n2018, n2019, n2020, n2021, n2022, n2023, n2024, n2025, n2026, n2027, 
      n2028, n2029, n2030, n2031, n2032, n2033, n2034, n2035, n2036, n2037, 
      n2038, n2039, n2040, n2041, n2042, n2043, n2044, n2045, n2046, n2047, 
      n2048, n2049, n2050, n2051, n2052, n2053, n2054, n2055, n2056, n2057, 
      n2058, n2059, n2060, n2061, n2062, n2063, n2064, n2065, n2066, n2067, 
      n2068, n2069, n2070, n2071, n2072, n2073, n2074, n2075, n2076, n2077, 
      n2078, n2079, n2080, n2081, n2082, n2083, n2084, n2085, n2086, n2087, 
      n2088, n2089, n2090, n2091, n2092, n2093, n2094, n2095, n2096, n_1033, 
      n_1034, n_1035, n_1036, n_1037, n_1038, n_1039, n_1040, n_1041, n_1042, 
      n_1043, n_1044, n_1045, n_1046, n_1047, n_1048, n_1049, n_1050, n_1051, 
      n_1052, n_1053, n_1054, n_1055, n_1056, n_1057, n_1058, n_1059, n_1060, 
      n_1061, n_1062, n_1063, n_1064, n_1065, n_1066, n_1067, n_1068, n_1069, 
      n_1070, n_1071, n_1072, n_1073, n_1074, n_1075, n_1076, n_1077, n_1078, 
      n_1079, n_1080, n_1081, n_1082, n_1083, n_1084, n_1085, n_1086, n_1087, 
      n_1088, n_1089, n_1090, n_1091, n_1092, n_1093, n_1094, n_1095, n_1096, 
      n_1097, n_1098, n_1099, n_1100, n_1101, n_1102, n_1103, n_1104, n_1105, 
      n_1106, n_1107, n_1108, n_1109, n_1110, n_1111, n_1112, n_1113, n_1114, 
      n_1115, n_1116, n_1117, n_1118, n_1119, n_1120, n_1121, n_1122, n_1123, 
      n_1124, n_1125, n_1126, n_1127, n_1128, n_1129, n_1130, n_1131, n_1132, 
      n_1133, n_1134, n_1135, n_1136, n_1137, n_1138, n_1139, n_1140, n_1141, 
      n_1142, n_1143, n_1144, n_1145, n_1146, n_1147, n_1148, n_1149, n_1150, 
      n_1151, n_1152, n_1153, n_1154, n_1155, n_1156, n_1157, n_1158, n_1159, 
      n_1160, n_1161, n_1162, n_1163, n_1164, n_1165, n_1166, n_1167, n_1168, 
      n_1169, n_1170, n_1171, n_1172, n_1173, n_1174, n_1175, n_1176, n_1177, 
      n_1178, n_1179, n_1180, n_1181, n_1182, n_1183, n_1184, n_1185, n_1186, 
      n_1187, n_1188, n_1189, n_1190, n_1191, n_1192, n_1193, n_1194, n_1195, 
      n_1196, n_1197, n_1198, n_1199, n_1200, n_1201, n_1202, n_1203, n_1204, 
      n_1205, n_1206, n_1207, n_1208, n_1209, n_1210, n_1211, n_1212, n_1213, 
      n_1214, n_1215, n_1216, n_1217, n_1218, n_1219, n_1220, n_1221, n_1222, 
      n_1223, n_1224, n_1225, n_1226, n_1227, n_1228, n_1229, n_1230, n_1231, 
      n_1232, n_1233, n_1234, n_1235, n_1236, n_1237, n_1238, n_1239, n_1240, 
      n_1241, n_1242, n_1243, n_1244, n_1245, n_1246, n_1247, n_1248, n_1249, 
      n_1250, n_1251, n_1252, n_1253, n_1254, n_1255, n_1256, n_1257, n_1258, 
      n_1259, n_1260, n_1261, n_1262, n_1263, n_1264, n_1265, n_1266, n_1267, 
      n_1268 : std_logic;

begin
   
   X_Logic0_port <= '0';
   n1 <= '0';
   fsm_cs_reg_0_inst : GTECH_FD1 port map( D => n1164, CP => clk, Q => n2090, 
                           QN => n_1033);
   fsm_cs_reg_2_inst : GTECH_FD1 port map( D => n1162, CP => clk, Q => n2089, 
                           QN => n_1034);
   word_count_reg_0_inst : GTECH_FD1 port map( D => n1161, CP => clk, Q => 
                           word_count_0_port, QN => n_1035);
   fsm_cs_reg_1_inst : GTECH_FD1 port map( D => n1163, CP => clk, Q => n2088, 
                           QN => n_1036);
   word_count_reg_1_inst : GTECH_FD1 port map( D => n1160, CP => clk, Q => 
                           word_count_1_port, QN => n_1037);
   word_count_reg_2_inst : GTECH_FD1 port map( D => n1159, CP => clk, Q => 
                           word_count_2_port, QN => n_1038);
   word_count_reg_3_inst : GTECH_FD1 port map( D => n1158, CP => clk, Q => 
                           word_count_3_port, QN => n_1039);
   word_count_reg_4_inst : GTECH_FD1 port map( D => n1157, CP => clk, Q => 
                           word_count_4_port, QN => n_1040);
   word_count_reg_5_inst : GTECH_FD1 port map( D => n1156, CP => clk, Q => 
                           word_count_5_port, QN => n_1041);
   word_count_reg_6_inst : GTECH_FD1 port map( D => n1155, CP => clk, Q => 
                           word_count_6_port, QN => n_1042);
   word_count_reg_7_inst : GTECH_FD1 port map( D => n1154, CP => clk, Q => 
                           word_count_7_port, QN => n_1043);
   word_count_reg_8_inst : GTECH_FD1 port map( D => n1153, CP => clk, Q => 
                           word_count_8_port, QN => n_1044);
   word_count_reg_9_inst : GTECH_FD1 port map( D => n1152, CP => clk, Q => 
                           word_count_9_port, QN => n_1045);
   word_count_reg_10_inst : GTECH_FD1 port map( D => n1151, CP => clk, Q => 
                           word_count_10_port, QN => n_1046);
   word_count_reg_11_inst : GTECH_FD1 port map( D => n1150, CP => clk, Q => 
                           word_count_11_port, QN => n_1047);
   word_count_reg_12_inst : GTECH_FD1 port map( D => n1149, CP => clk, Q => 
                           word_count_12_port, QN => n_1048);
   word_count_reg_13_inst : GTECH_FD1 port map( D => n1148, CP => clk, Q => 
                           word_count_13_port, QN => n_1049);
   word_count_reg_14_inst : GTECH_FD1 port map( D => n1147, CP => clk, Q => 
                           word_count_14_port, QN => n_1050);
   word_count_reg_15_inst : GTECH_FD1 port map( D => n1146, CP => clk, Q => 
                           word_count_15_port, QN => n_1051);
   word_count_reg_16_inst : GTECH_FD1 port map( D => n1145, CP => clk, Q => 
                           word_count_16_port, QN => n_1052);
   word_count_reg_17_inst : GTECH_FD1 port map( D => n1144, CP => clk, Q => 
                           word_count_17_port, QN => n_1053);
   word_count_reg_18_inst : GTECH_FD1 port map( D => n1143, CP => clk, Q => 
                           word_count_18_port, QN => n_1054);
   word_count_reg_19_inst : GTECH_FD1 port map( D => n1142, CP => clk, Q => 
                           word_count_19_port, QN => n_1055);
   word_count_reg_20_inst : GTECH_FD1 port map( D => n1141, CP => clk, Q => 
                           word_count_20_port, QN => n_1056);
   word_count_reg_21_inst : GTECH_FD1 port map( D => n1140, CP => clk, Q => 
                           word_count_21_port, QN => n_1057);
   word_count_reg_22_inst : GTECH_FD1 port map( D => n1139, CP => clk, Q => 
                           word_count_22_port, QN => n_1058);
   word_count_reg_23_inst : GTECH_FD1 port map( D => n1138, CP => clk, Q => 
                           word_count_23_port, QN => n_1059);
   word_count_reg_24_inst : GTECH_FD1 port map( D => n1137, CP => clk, Q => 
                           word_count_24_port, QN => n_1060);
   word_count_reg_25_inst : GTECH_FD1 port map( D => n1136, CP => clk, Q => 
                           word_count_25_port, QN => n_1061);
   word_count_reg_26_inst : GTECH_FD1 port map( D => n1135, CP => clk, Q => 
                           word_count_26_port, QN => n_1062);
   word_count_reg_27_inst : GTECH_FD1 port map( D => n1134, CP => clk, Q => 
                           word_count_27_port, QN => n_1063);
   word_count_reg_28_inst : GTECH_FD1 port map( D => n1133, CP => clk, Q => 
                           word_count_28_port, QN => n_1064);
   word_count_reg_29_inst : GTECH_FD1 port map( D => n1132, CP => clk, Q => 
                           word_count_29_port, QN => n_1065);
   word_count_reg_30_inst : GTECH_FD1 port map( D => n1131, CP => clk, Q => 
                           word_count_30_port, QN => n_1066);
   word_count_reg_31_inst : GTECH_FD1 port map( D => n1130, CP => clk, Q => 
                           word_count_31_port, QN => n_1067);
   perf_cmd_reg_7_inst : GTECH_FD1 port map( D => n2096, CP => clk, Q => 
                           perf_cmd_7_port, QN => n_1068);
   perf_cmd_reg_6_inst : GTECH_FD1 port map( D => n2095, CP => clk, Q => 
                           perf_cmd_6_port, QN => n_1069);
   perf_cmd_reg_5_inst : GTECH_FD1 port map( D => n2094, CP => clk, Q => n_1070
                           , QN => n2084);
   perf_cmd_reg_4_inst : GTECH_FD1 port map( D => n2093, CP => clk, Q => n_1071
                           , QN => n2085);
   perf_cmd_reg_3_inst : GTECH_FD1 port map( D => n2092, CP => clk, Q => n_1072
                           , QN => n2086);
   perf_cmd_reg_2_inst : GTECH_FD1 port map( D => n2091, CP => clk, Q => n_1073
                           , QN => n2087);
   perf_cmd_reg_1_inst : GTECH_FD1 port map( D => n1128, CP => clk, Q => 
                           perf_cmd_1_port, QN => n_1074);
   perf_cmd_reg_0_inst : GTECH_FD1 port map( D => n1129, CP => clk, Q => 
                           perf_cmd_0_port, QN => n_1075);
   wait_timer_reg_0_inst : GTECH_FD1 port map( D => n1057, CP => clk, Q => 
                           wait_timer_0_port, QN => n_1076);
   wait_timer_reg_1_inst : GTECH_FD1 port map( D => n1056, CP => clk, Q => 
                           wait_timer_1_port, QN => n_1077);
   wait_timer_reg_2_inst : GTECH_FD1 port map( D => n1055, CP => clk, Q => 
                           wait_timer_2_port, QN => n_1078);
   wait_timer_reg_3_inst : GTECH_FD1 port map( D => n1054, CP => clk, Q => 
                           wait_timer_3_port, QN => n_1079);
   wait_timer_reg_4_inst : GTECH_FD1 port map( D => n1053, CP => clk, Q => 
                           wait_timer_4_port, QN => n_1080);
   wait_timer_reg_5_inst : GTECH_FD1 port map( D => n1052, CP => clk, Q => 
                           wait_timer_5_port, QN => n_1081);
   wait_timer_reg_6_inst : GTECH_FD1 port map( D => n1051, CP => clk, Q => 
                           wait_timer_6_port, QN => n_1082);
   wait_timer_reg_7_inst : GTECH_FD1 port map( D => n1050, CP => clk, Q => 
                           wait_timer_7_port, QN => n_1083);
   wait_timer_reg_8_inst : GTECH_FD1 port map( D => n1049, CP => clk, Q => 
                           wait_timer_8_port, QN => n_1084);
   wait_timer_reg_9_inst : GTECH_FD1 port map( D => n1048, CP => clk, Q => 
                           wait_timer_9_port, QN => n_1085);
   wait_timer_reg_10_inst : GTECH_FD1 port map( D => n1047, CP => clk, Q => 
                           wait_timer_10_port, QN => n_1086);
   wait_timer_reg_11_inst : GTECH_FD1 port map( D => n1046, CP => clk, Q => 
                           wait_timer_11_port, QN => n_1087);
   wait_timer_reg_12_inst : GTECH_FD1 port map( D => n1045, CP => clk, Q => 
                           wait_timer_12_port, QN => n_1088);
   wait_timer_reg_13_inst : GTECH_FD1 port map( D => n1044, CP => clk, Q => 
                           wait_timer_13_port, QN => n_1089);
   wait_timer_reg_14_inst : GTECH_FD1 port map( D => n1043, CP => clk, Q => 
                           wait_timer_14_port, QN => n_1090);
   wait_timer_reg_15_inst : GTECH_FD1 port map( D => n1042, CP => clk, Q => 
                           wait_timer_15_port, QN => n_1091);
   wait_timer_reg_16_inst : GTECH_FD1 port map( D => n1041, CP => clk, Q => 
                           wait_timer_16_port, QN => n_1092);
   wait_timer_reg_17_inst : GTECH_FD1 port map( D => n1040, CP => clk, Q => 
                           wait_timer_17_port, QN => n_1093);
   wait_timer_reg_18_inst : GTECH_FD1 port map( D => n1039, CP => clk, Q => 
                           wait_timer_18_port, QN => n_1094);
   wait_timer_reg_19_inst : GTECH_FD1 port map( D => n1038, CP => clk, Q => 
                           wait_timer_19_port, QN => n_1095);
   wait_timer_reg_20_inst : GTECH_FD1 port map( D => n1037, CP => clk, Q => 
                           wait_timer_20_port, QN => n_1096);
   wait_timer_reg_21_inst : GTECH_FD1 port map( D => n1036, CP => clk, Q => 
                           wait_timer_21_port, QN => n_1097);
   wait_timer_reg_22_inst : GTECH_FD1 port map( D => n1035, CP => clk, Q => 
                           wait_timer_22_port, QN => n_1098);
   wait_timer_reg_23_inst : GTECH_FD1 port map( D => n1034, CP => clk, Q => 
                           wait_timer_23_port, QN => n_1099);
   wait_timer_reg_24_inst : GTECH_FD1 port map( D => n1033, CP => clk, Q => 
                           wait_timer_24_port, QN => n_1100);
   wait_timer_reg_25_inst : GTECH_FD1 port map( D => n1032, CP => clk, Q => 
                           wait_timer_25_port, QN => n_1101);
   wait_timer_reg_26_inst : GTECH_FD1 port map( D => n1031, CP => clk, Q => 
                           wait_timer_26_port, QN => n_1102);
   wait_timer_reg_27_inst : GTECH_FD1 port map( D => n1030, CP => clk, Q => 
                           wait_timer_27_port, QN => n_1103);
   wait_timer_reg_28_inst : GTECH_FD1 port map( D => n1029, CP => clk, Q => 
                           wait_timer_28_port, QN => n_1104);
   wait_timer_reg_29_inst : GTECH_FD1 port map( D => n1028, CP => clk, Q => 
                           wait_timer_29_port, QN => n_1105);
   wait_timer_reg_30_inst : GTECH_FD1 port map( D => n1027, CP => clk, Q => 
                           wait_timer_30_port, QN => n_1106);
   wait_timer_reg_31_inst : GTECH_FD1 port map( D => n1026, CP => clk, Q => 
                           wait_timer_31_port, QN => n_1107);
   wait_timer_reg_32_inst : GTECH_FD1 port map( D => n1025, CP => clk, Q => 
                           wait_timer_32_port, QN => n_1108);
   wait_timer_reg_33_inst : GTECH_FD1 port map( D => n1024, CP => clk, Q => 
                           wait_timer_33_port, QN => n_1109);
   wait_timer_reg_34_inst : GTECH_FD1 port map( D => n1023, CP => clk, Q => 
                           wait_timer_34_port, QN => n_1110);
   wait_timer_reg_35_inst : GTECH_FD1 port map( D => n1022, CP => clk, Q => 
                           wait_timer_35_port, QN => n_1111);
   wait_timer_reg_36_inst : GTECH_FD1 port map( D => n1021, CP => clk, Q => 
                           wait_timer_36_port, QN => n_1112);
   wait_timer_reg_37_inst : GTECH_FD1 port map( D => n1020, CP => clk, Q => 
                           wait_timer_37_port, QN => n_1113);
   wait_timer_reg_38_inst : GTECH_FD1 port map( D => n1019, CP => clk, Q => 
                           wait_timer_38_port, QN => n_1114);
   wait_timer_reg_39_inst : GTECH_FD1 port map( D => n1018, CP => clk, Q => 
                           wait_timer_39_port, QN => n_1115);
   wait_timer_reg_40_inst : GTECH_FD1 port map( D => n1017, CP => clk, Q => 
                           wait_timer_40_port, QN => n_1116);
   wait_timer_reg_41_inst : GTECH_FD1 port map( D => n1016, CP => clk, Q => 
                           wait_timer_41_port, QN => n_1117);
   wait_timer_reg_42_inst : GTECH_FD1 port map( D => n1015, CP => clk, Q => 
                           wait_timer_42_port, QN => n_1118);
   wait_timer_reg_43_inst : GTECH_FD1 port map( D => n1014, CP => clk, Q => 
                           wait_timer_43_port, QN => n_1119);
   wait_timer_reg_44_inst : GTECH_FD1 port map( D => n1013, CP => clk, Q => 
                           wait_timer_44_port, QN => n_1120);
   wait_timer_reg_45_inst : GTECH_FD1 port map( D => n1012, CP => clk, Q => 
                           wait_timer_45_port, QN => n_1121);
   wait_timer_reg_46_inst : GTECH_FD1 port map( D => n1011, CP => clk, Q => 
                           wait_timer_46_port, QN => n_1122);
   wait_timer_reg_47_inst : GTECH_FD1 port map( D => n1010, CP => clk, Q => 
                           wait_timer_47_port, QN => n_1123);
   wait_timer_reg_48_inst : GTECH_FD1 port map( D => n1009, CP => clk, Q => 
                           wait_timer_48_port, QN => n_1124);
   wait_timer_reg_49_inst : GTECH_FD1 port map( D => n1008, CP => clk, Q => 
                           wait_timer_49_port, QN => n_1125);
   wait_timer_reg_50_inst : GTECH_FD1 port map( D => n1007, CP => clk, Q => 
                           wait_timer_50_port, QN => n_1126);
   wait_timer_reg_51_inst : GTECH_FD1 port map( D => n1006, CP => clk, Q => 
                           wait_timer_51_port, QN => n_1127);
   wait_timer_reg_52_inst : GTECH_FD1 port map( D => n1005, CP => clk, Q => 
                           wait_timer_52_port, QN => n_1128);
   wait_timer_reg_53_inst : GTECH_FD1 port map( D => n1004, CP => clk, Q => 
                           wait_timer_53_port, QN => n_1129);
   wait_timer_reg_54_inst : GTECH_FD1 port map( D => n1003, CP => clk, Q => 
                           wait_timer_54_port, QN => n_1130);
   wait_timer_reg_55_inst : GTECH_FD1 port map( D => n1002, CP => clk, Q => 
                           wait_timer_55_port, QN => n_1131);
   wait_timer_reg_56_inst : GTECH_FD1 port map( D => n1001, CP => clk, Q => 
                           wait_timer_56_port, QN => n_1132);
   wait_timer_reg_57_inst : GTECH_FD1 port map( D => n1000, CP => clk, Q => 
                           wait_timer_57_port, QN => n_1133);
   wait_timer_reg_58_inst : GTECH_FD1 port map( D => n999, CP => clk, Q => 
                           wait_timer_58_port, QN => n_1134);
   wait_timer_reg_59_inst : GTECH_FD1 port map( D => n998, CP => clk, Q => 
                           wait_timer_59_port, QN => n_1135);
   wait_timer_reg_60_inst : GTECH_FD1 port map( D => n997, CP => clk, Q => 
                           wait_timer_60_port, QN => n_1136);
   wait_timer_reg_61_inst : GTECH_FD1 port map( D => n996, CP => clk, Q => 
                           wait_timer_61_port, QN => n_1137);
   wait_timer_reg_62_inst : GTECH_FD1 port map( D => n995, CP => clk, Q => 
                           wait_timer_62_port, QN => n_1138);
   wait_timer_reg_63_inst : GTECH_FD1 port map( D => n994, CP => clk, Q => 
                           wait_timer_63_port, QN => n_1139);
   run_timer_reg_0_inst : GTECH_FD1 port map( D => n1121, CP => clk, Q => 
                           run_timer_0_port, QN => n_1140);
   run_timer_reg_1_inst : GTECH_FD1 port map( D => n1120, CP => clk, Q => 
                           run_timer_1_port, QN => n_1141);
   run_timer_reg_2_inst : GTECH_FD1 port map( D => n1119, CP => clk, Q => 
                           run_timer_2_port, QN => n_1142);
   run_timer_reg_3_inst : GTECH_FD1 port map( D => n1118, CP => clk, Q => 
                           run_timer_3_port, QN => n_1143);
   run_timer_reg_4_inst : GTECH_FD1 port map( D => n1117, CP => clk, Q => 
                           run_timer_4_port, QN => n_1144);
   run_timer_reg_5_inst : GTECH_FD1 port map( D => n1116, CP => clk, Q => 
                           run_timer_5_port, QN => n_1145);
   run_timer_reg_6_inst : GTECH_FD1 port map( D => n1115, CP => clk, Q => 
                           run_timer_6_port, QN => n_1146);
   run_timer_reg_7_inst : GTECH_FD1 port map( D => n1114, CP => clk, Q => 
                           run_timer_7_port, QN => n_1147);
   run_timer_reg_8_inst : GTECH_FD1 port map( D => n1113, CP => clk, Q => 
                           run_timer_8_port, QN => n_1148);
   run_timer_reg_9_inst : GTECH_FD1 port map( D => n1112, CP => clk, Q => 
                           run_timer_9_port, QN => n_1149);
   run_timer_reg_10_inst : GTECH_FD1 port map( D => n1111, CP => clk, Q => 
                           run_timer_10_port, QN => n_1150);
   run_timer_reg_11_inst : GTECH_FD1 port map( D => n1110, CP => clk, Q => 
                           run_timer_11_port, QN => n_1151);
   run_timer_reg_12_inst : GTECH_FD1 port map( D => n1109, CP => clk, Q => 
                           run_timer_12_port, QN => n_1152);
   run_timer_reg_13_inst : GTECH_FD1 port map( D => n1108, CP => clk, Q => 
                           run_timer_13_port, QN => n_1153);
   run_timer_reg_14_inst : GTECH_FD1 port map( D => n1107, CP => clk, Q => 
                           run_timer_14_port, QN => n_1154);
   run_timer_reg_15_inst : GTECH_FD1 port map( D => n1106, CP => clk, Q => 
                           run_timer_15_port, QN => n_1155);
   run_timer_reg_16_inst : GTECH_FD1 port map( D => n1105, CP => clk, Q => 
                           run_timer_16_port, QN => n_1156);
   run_timer_reg_17_inst : GTECH_FD1 port map( D => n1104, CP => clk, Q => 
                           run_timer_17_port, QN => n_1157);
   run_timer_reg_18_inst : GTECH_FD1 port map( D => n1103, CP => clk, Q => 
                           run_timer_18_port, QN => n_1158);
   run_timer_reg_19_inst : GTECH_FD1 port map( D => n1102, CP => clk, Q => 
                           run_timer_19_port, QN => n_1159);
   run_timer_reg_20_inst : GTECH_FD1 port map( D => n1101, CP => clk, Q => 
                           run_timer_20_port, QN => n_1160);
   run_timer_reg_21_inst : GTECH_FD1 port map( D => n1100, CP => clk, Q => 
                           run_timer_21_port, QN => n_1161);
   run_timer_reg_22_inst : GTECH_FD1 port map( D => n1099, CP => clk, Q => 
                           run_timer_22_port, QN => n_1162);
   run_timer_reg_23_inst : GTECH_FD1 port map( D => n1098, CP => clk, Q => 
                           run_timer_23_port, QN => n_1163);
   run_timer_reg_24_inst : GTECH_FD1 port map( D => n1097, CP => clk, Q => 
                           run_timer_24_port, QN => n_1164);
   run_timer_reg_25_inst : GTECH_FD1 port map( D => n1096, CP => clk, Q => 
                           run_timer_25_port, QN => n_1165);
   run_timer_reg_26_inst : GTECH_FD1 port map( D => n1095, CP => clk, Q => 
                           run_timer_26_port, QN => n_1166);
   run_timer_reg_27_inst : GTECH_FD1 port map( D => n1094, CP => clk, Q => 
                           run_timer_27_port, QN => n_1167);
   run_timer_reg_28_inst : GTECH_FD1 port map( D => n1093, CP => clk, Q => 
                           run_timer_28_port, QN => n_1168);
   run_timer_reg_29_inst : GTECH_FD1 port map( D => n1092, CP => clk, Q => 
                           run_timer_29_port, QN => n_1169);
   run_timer_reg_30_inst : GTECH_FD1 port map( D => n1091, CP => clk, Q => 
                           run_timer_30_port, QN => n_1170);
   run_timer_reg_31_inst : GTECH_FD1 port map( D => n1090, CP => clk, Q => 
                           run_timer_31_port, QN => n_1171);
   run_timer_reg_32_inst : GTECH_FD1 port map( D => n1089, CP => clk, Q => 
                           run_timer_32_port, QN => n_1172);
   run_timer_reg_33_inst : GTECH_FD1 port map( D => n1088, CP => clk, Q => 
                           run_timer_33_port, QN => n_1173);
   run_timer_reg_34_inst : GTECH_FD1 port map( D => n1087, CP => clk, Q => 
                           run_timer_34_port, QN => n_1174);
   run_timer_reg_35_inst : GTECH_FD1 port map( D => n1086, CP => clk, Q => 
                           run_timer_35_port, QN => n_1175);
   run_timer_reg_36_inst : GTECH_FD1 port map( D => n1085, CP => clk, Q => 
                           run_timer_36_port, QN => n_1176);
   run_timer_reg_37_inst : GTECH_FD1 port map( D => n1084, CP => clk, Q => 
                           run_timer_37_port, QN => n_1177);
   run_timer_reg_38_inst : GTECH_FD1 port map( D => n1083, CP => clk, Q => 
                           run_timer_38_port, QN => n_1178);
   run_timer_reg_39_inst : GTECH_FD1 port map( D => n1082, CP => clk, Q => 
                           run_timer_39_port, QN => n_1179);
   run_timer_reg_40_inst : GTECH_FD1 port map( D => n1081, CP => clk, Q => 
                           run_timer_40_port, QN => n_1180);
   run_timer_reg_41_inst : GTECH_FD1 port map( D => n1080, CP => clk, Q => 
                           run_timer_41_port, QN => n_1181);
   run_timer_reg_42_inst : GTECH_FD1 port map( D => n1079, CP => clk, Q => 
                           run_timer_42_port, QN => n_1182);
   run_timer_reg_43_inst : GTECH_FD1 port map( D => n1078, CP => clk, Q => 
                           run_timer_43_port, QN => n_1183);
   run_timer_reg_44_inst : GTECH_FD1 port map( D => n1077, CP => clk, Q => 
                           run_timer_44_port, QN => n_1184);
   run_timer_reg_45_inst : GTECH_FD1 port map( D => n1076, CP => clk, Q => 
                           run_timer_45_port, QN => n_1185);
   run_timer_reg_46_inst : GTECH_FD1 port map( D => n1075, CP => clk, Q => 
                           run_timer_46_port, QN => n_1186);
   run_timer_reg_47_inst : GTECH_FD1 port map( D => n1074, CP => clk, Q => 
                           run_timer_47_port, QN => n_1187);
   run_timer_reg_48_inst : GTECH_FD1 port map( D => n1073, CP => clk, Q => 
                           run_timer_48_port, QN => n_1188);
   run_timer_reg_49_inst : GTECH_FD1 port map( D => n1072, CP => clk, Q => 
                           run_timer_49_port, QN => n_1189);
   run_timer_reg_50_inst : GTECH_FD1 port map( D => n1071, CP => clk, Q => 
                           run_timer_50_port, QN => n_1190);
   run_timer_reg_51_inst : GTECH_FD1 port map( D => n1070, CP => clk, Q => 
                           run_timer_51_port, QN => n_1191);
   run_timer_reg_52_inst : GTECH_FD1 port map( D => n1069, CP => clk, Q => 
                           run_timer_52_port, QN => n_1192);
   run_timer_reg_53_inst : GTECH_FD1 port map( D => n1068, CP => clk, Q => 
                           run_timer_53_port, QN => n_1193);
   run_timer_reg_54_inst : GTECH_FD1 port map( D => n1067, CP => clk, Q => 
                           run_timer_54_port, QN => n_1194);
   run_timer_reg_55_inst : GTECH_FD1 port map( D => n1066, CP => clk, Q => 
                           run_timer_55_port, QN => n_1195);
   run_timer_reg_56_inst : GTECH_FD1 port map( D => n1065, CP => clk, Q => 
                           run_timer_56_port, QN => n_1196);
   run_timer_reg_57_inst : GTECH_FD1 port map( D => n1064, CP => clk, Q => 
                           run_timer_57_port, QN => n_1197);
   run_timer_reg_58_inst : GTECH_FD1 port map( D => n1063, CP => clk, Q => 
                           run_timer_58_port, QN => n_1198);
   run_timer_reg_59_inst : GTECH_FD1 port map( D => n1062, CP => clk, Q => 
                           run_timer_59_port, QN => n_1199);
   run_timer_reg_60_inst : GTECH_FD1 port map( D => n1061, CP => clk, Q => 
                           run_timer_60_port, QN => n_1200);
   run_timer_reg_61_inst : GTECH_FD1 port map( D => n1060, CP => clk, Q => 
                           run_timer_61_port, QN => n_1201);
   run_timer_reg_62_inst : GTECH_FD1 port map( D => n1059, CP => clk, Q => 
                           run_timer_62_port, QN => n_1202);
   run_timer_reg_63_inst : GTECH_FD1 port map( D => n1058, CP => clk, Q => 
                           run_timer_63_port, QN => n_1203);
   pc_i_reg_31_inst : GTECH_FD1 port map( D => n962, CP => clk, Q => 
                           pc_i_31_port, QN => n_1204);
   pc_i_reg_30_inst : GTECH_FD1 port map( D => n963, CP => clk, Q => 
                           pc_i_30_port, QN => n_1205);
   pc_i_reg_29_inst : GTECH_FD1 port map( D => n964, CP => clk, Q => 
                           pc_i_29_port, QN => n_1206);
   pc_i_reg_28_inst : GTECH_FD1 port map( D => n965, CP => clk, Q => 
                           pc_i_28_port, QN => n_1207);
   pc_i_reg_27_inst : GTECH_FD1 port map( D => n966, CP => clk, Q => 
                           pc_i_27_port, QN => n_1208);
   pc_i_reg_26_inst : GTECH_FD1 port map( D => n967, CP => clk, Q => 
                           pc_i_26_port, QN => n_1209);
   pc_i_reg_25_inst : GTECH_FD1 port map( D => n968, CP => clk, Q => 
                           pc_i_25_port, QN => n_1210);
   pc_i_reg_24_inst : GTECH_FD1 port map( D => n969, CP => clk, Q => 
                           pc_i_24_port, QN => n_1211);
   pc_i_reg_23_inst : GTECH_FD1 port map( D => n970, CP => clk, Q => 
                           pc_i_23_port, QN => n_1212);
   pc_i_reg_22_inst : GTECH_FD1 port map( D => n971, CP => clk, Q => 
                           pc_i_22_port, QN => n_1213);
   pc_i_reg_21_inst : GTECH_FD1 port map( D => n972, CP => clk, Q => 
                           pc_i_21_port, QN => n_1214);
   pc_i_reg_20_inst : GTECH_FD1 port map( D => n973, CP => clk, Q => 
                           pc_i_20_port, QN => n_1215);
   pc_i_reg_19_inst : GTECH_FD1 port map( D => n974, CP => clk, Q => 
                           pc_i_19_port, QN => n_1216);
   pc_i_reg_18_inst : GTECH_FD1 port map( D => n975, CP => clk, Q => 
                           pc_i_18_port, QN => n_1217);
   pc_i_reg_17_inst : GTECH_FD1 port map( D => n976, CP => clk, Q => 
                           pc_i_17_port, QN => n_1218);
   pc_i_reg_16_inst : GTECH_FD1 port map( D => n977, CP => clk, Q => 
                           pc_i_16_port, QN => n_1219);
   pc_i_reg_15_inst : GTECH_FD1 port map( D => n978, CP => clk, Q => 
                           pc_i_15_port, QN => n_1220);
   pc_i_reg_14_inst : GTECH_FD1 port map( D => n979, CP => clk, Q => 
                           pc_i_14_port, QN => n_1221);
   pc_i_reg_13_inst : GTECH_FD1 port map( D => n980, CP => clk, Q => 
                           pc_i_13_port, QN => n_1222);
   pc_i_reg_12_inst : GTECH_FD1 port map( D => n981, CP => clk, Q => 
                           pc_i_12_port, QN => n_1223);
   pc_i_reg_11_inst : GTECH_FD1 port map( D => n982, CP => clk, Q => 
                           pc_i_11_port, QN => n_1224);
   pc_i_reg_10_inst : GTECH_FD1 port map( D => n983, CP => clk, Q => 
                           pc_i_10_port, QN => n_1225);
   pc_i_reg_9_inst : GTECH_FD1 port map( D => n984, CP => clk, Q => pc_i_9_port
                           , QN => n_1226);
   pc_i_reg_8_inst : GTECH_FD1 port map( D => n985, CP => clk, Q => pc_i_8_port
                           , QN => n_1227);
   pc_i_reg_7_inst : GTECH_FD1 port map( D => n986, CP => clk, Q => pc_i_7_port
                           , QN => n_1228);
   pc_i_reg_6_inst : GTECH_FD1 port map( D => n987, CP => clk, Q => pc_i_6_port
                           , QN => n_1229);
   pc_i_reg_5_inst : GTECH_FD1 port map( D => n988, CP => clk, Q => pc_i_5_port
                           , QN => n_1230);
   pc_i_reg_4_inst : GTECH_FD1 port map( D => n989, CP => clk, Q => pc_i_4_port
                           , QN => n_1231);
   pc_i_reg_3_inst : GTECH_FD1 port map( D => n990, CP => clk, Q => pc_i_3_port
                           , QN => n_1232);
   pc_i_reg_2_inst : GTECH_FD1 port map( D => n991, CP => clk, Q => pc_i_2_port
                           , QN => n_1233);
   pc_i_reg_1_inst : GTECH_FD1 port map( D => n992, CP => clk, Q => pc_i_1_port
                           , QN => n_1234);
   pc_i_reg_0_inst : GTECH_FD1 port map( D => n993, CP => clk, Q => pc_i_0_port
                           , QN => n_1235);
   inst_i_reg_31_inst : GTECH_FD1 port map( D => n930, CP => clk, Q => 
                           inst_i_31_port, QN => n_1236);
   inst_i_reg_30_inst : GTECH_FD1 port map( D => n931, CP => clk, Q => 
                           inst_i_30_port, QN => n_1237);
   inst_i_reg_29_inst : GTECH_FD1 port map( D => n932, CP => clk, Q => 
                           inst_i_29_port, QN => n_1238);
   inst_i_reg_28_inst : GTECH_FD1 port map( D => n933, CP => clk, Q => 
                           inst_i_28_port, QN => n_1239);
   inst_i_reg_27_inst : GTECH_FD1 port map( D => n934, CP => clk, Q => 
                           inst_i_27_port, QN => n_1240);
   inst_i_reg_26_inst : GTECH_FD1 port map( D => n935, CP => clk, Q => 
                           inst_i_26_port, QN => n_1241);
   inst_i_reg_25_inst : GTECH_FD1 port map( D => n936, CP => clk, Q => 
                           inst_i_25_port, QN => n_1242);
   inst_i_reg_24_inst : GTECH_FD1 port map( D => n937, CP => clk, Q => 
                           inst_i_24_port, QN => n_1243);
   inst_i_reg_23_inst : GTECH_FD1 port map( D => n938, CP => clk, Q => 
                           inst_i_23_port, QN => n_1244);
   inst_i_reg_22_inst : GTECH_FD1 port map( D => n939, CP => clk, Q => 
                           inst_i_22_port, QN => n_1245);
   inst_i_reg_21_inst : GTECH_FD1 port map( D => n940, CP => clk, Q => 
                           inst_i_21_port, QN => n_1246);
   inst_i_reg_20_inst : GTECH_FD1 port map( D => n941, CP => clk, Q => 
                           inst_i_20_port, QN => n_1247);
   inst_i_reg_19_inst : GTECH_FD1 port map( D => n942, CP => clk, Q => 
                           inst_i_19_port, QN => n_1248);
   inst_i_reg_18_inst : GTECH_FD1 port map( D => n943, CP => clk, Q => 
                           inst_i_18_port, QN => n_1249);
   inst_i_reg_17_inst : GTECH_FD1 port map( D => n944, CP => clk, Q => 
                           inst_i_17_port, QN => n_1250);
   inst_i_reg_16_inst : GTECH_FD1 port map( D => n945, CP => clk, Q => 
                           inst_i_16_port, QN => n_1251);
   inst_i_reg_15_inst : GTECH_FD1 port map( D => n946, CP => clk, Q => 
                           inst_i_15_port, QN => n_1252);
   inst_i_reg_14_inst : GTECH_FD1 port map( D => n947, CP => clk, Q => 
                           inst_i_14_port, QN => n_1253);
   inst_i_reg_13_inst : GTECH_FD1 port map( D => n948, CP => clk, Q => 
                           inst_i_13_port, QN => n_1254);
   inst_i_reg_12_inst : GTECH_FD1 port map( D => n949, CP => clk, Q => 
                           inst_i_12_port, QN => n_1255);
   inst_i_reg_11_inst : GTECH_FD1 port map( D => n950, CP => clk, Q => 
                           inst_i_11_port, QN => n_1256);
   inst_i_reg_10_inst : GTECH_FD1 port map( D => n951, CP => clk, Q => 
                           inst_i_10_port, QN => n_1257);
   inst_i_reg_9_inst : GTECH_FD1 port map( D => n952, CP => clk, Q => 
                           inst_i_9_port, QN => n_1258);
   inst_i_reg_8_inst : GTECH_FD1 port map( D => n953, CP => clk, Q => 
                           inst_i_8_port, QN => n_1259);
   inst_i_reg_7_inst : GTECH_FD1 port map( D => n954, CP => clk, Q => 
                           inst_i_7_port, QN => n_1260);
   inst_i_reg_6_inst : GTECH_FD1 port map( D => n955, CP => clk, Q => 
                           inst_i_6_port, QN => n_1261);
   inst_i_reg_5_inst : GTECH_FD1 port map( D => n956, CP => clk, Q => 
                           inst_i_5_port, QN => n_1262);
   inst_i_reg_4_inst : GTECH_FD1 port map( D => n957, CP => clk, Q => 
                           inst_i_4_port, QN => n_1263);
   inst_i_reg_3_inst : GTECH_FD1 port map( D => n958, CP => clk, Q => 
                           inst_i_3_port, QN => n_1264);
   inst_i_reg_2_inst : GTECH_FD1 port map( D => n959, CP => clk, Q => 
                           inst_i_2_port, QN => n_1265);
   inst_i_reg_1_inst : GTECH_FD1 port map( D => n960, CP => clk, Q => 
                           inst_i_1_port, QN => n_1266);
   inst_i_reg_0_inst : GTECH_FD1 port map( D => n961, CP => clk, Q => 
                           inst_i_0_port, QN => n_1267);
   add_213_aco : zpu_perf_mon_DW01_add_0 port map( A(31) => word_count_31_port,
                           A(30) => word_count_30_port, A(29) => 
                           word_count_29_port, A(28) => word_count_28_port, 
                           A(27) => word_count_27_port, A(26) => 
                           word_count_26_port, A(25) => word_count_25_port, 
                           A(24) => word_count_24_port, A(23) => 
                           word_count_23_port, A(22) => word_count_22_port, 
                           A(21) => word_count_21_port, A(20) => 
                           word_count_20_port, A(19) => word_count_19_port, 
                           A(18) => word_count_18_port, A(17) => 
                           word_count_17_port, A(16) => word_count_16_port, 
                           A(15) => word_count_15_port, A(14) => 
                           word_count_14_port, A(13) => word_count_13_port, 
                           A(12) => word_count_12_port, A(11) => 
                           word_count_11_port, A(10) => word_count_10_port, 
                           A(9) => word_count_9_port, A(8) => word_count_8_port
                           , A(7) => word_count_7_port, A(6) => 
                           word_count_6_port, A(5) => word_count_5_port, A(4) 
                           => word_count_4_port, A(3) => word_count_3_port, 
                           A(2) => word_count_2_port, A(1) => word_count_1_port
                           , A(0) => word_count_0_port, B(31) => X_Logic0_port,
                           B(30) => X_Logic0_port, B(29) => X_Logic0_port, 
                           B(28) => X_Logic0_port, B(27) => X_Logic0_port, 
                           B(26) => X_Logic0_port, B(25) => X_Logic0_port, 
                           B(24) => X_Logic0_port, B(23) => X_Logic0_port, 
                           B(22) => X_Logic0_port, B(21) => X_Logic0_port, 
                           B(20) => X_Logic0_port, B(19) => X_Logic0_port, 
                           B(18) => X_Logic0_port, B(17) => X_Logic0_port, 
                           B(16) => X_Logic0_port, B(15) => X_Logic0_port, 
                           B(14) => X_Logic0_port, B(13) => X_Logic0_port, 
                           B(12) => X_Logic0_port, B(11) => X_Logic0_port, 
                           B(10) => X_Logic0_port, B(9) => X_Logic0_port, B(8) 
                           => X_Logic0_port, B(7) => X_Logic0_port, B(6) => 
                           X_Logic0_port, B(5) => X_Logic0_port, B(4) => 
                           X_Logic0_port, B(3) => X_Logic0_port, B(2) => 
                           X_Logic0_port, B(1) => X_Logic0_port, B(0) => N811, 
                           CI => n1, SUM(31) => N746, SUM(30) => N745, SUM(29) 
                           => N744, SUM(28) => N743, SUM(27) => N742, SUM(26) 
                           => N741, SUM(25) => N740, SUM(24) => N739, SUM(23) 
                           => N738, SUM(22) => N737, SUM(21) => N736, SUM(20) 
                           => N735, SUM(19) => N734, SUM(18) => N733, SUM(17) 
                           => N732, SUM(16) => N731, SUM(15) => N730, SUM(14) 
                           => N729, SUM(13) => N728, SUM(12) => N727, SUM(11) 
                           => N726, SUM(10) => N725, SUM(9) => N724, SUM(8) => 
                           N723, SUM(7) => N722, SUM(6) => N721, SUM(5) => N720
                           , SUM(4) => N719, SUM(3) => N718, SUM(2) => N717, 
                           SUM(1) => N716, SUM(0) => N715, CO => n_1268);
   add_99 : zpu_perf_mon_DW01_inc_0 port map( A(63) => wait_timer_63_port, 
                           A(62) => wait_timer_62_port, A(61) => 
                           wait_timer_61_port, A(60) => wait_timer_60_port, 
                           A(59) => wait_timer_59_port, A(58) => 
                           wait_timer_58_port, A(57) => wait_timer_57_port, 
                           A(56) => wait_timer_56_port, A(55) => 
                           wait_timer_55_port, A(54) => wait_timer_54_port, 
                           A(53) => wait_timer_53_port, A(52) => 
                           wait_timer_52_port, A(51) => wait_timer_51_port, 
                           A(50) => wait_timer_50_port, A(49) => 
                           wait_timer_49_port, A(48) => wait_timer_48_port, 
                           A(47) => wait_timer_47_port, A(46) => 
                           wait_timer_46_port, A(45) => wait_timer_45_port, 
                           A(44) => wait_timer_44_port, A(43) => 
                           wait_timer_43_port, A(42) => wait_timer_42_port, 
                           A(41) => wait_timer_41_port, A(40) => 
                           wait_timer_40_port, A(39) => wait_timer_39_port, 
                           A(38) => wait_timer_38_port, A(37) => 
                           wait_timer_37_port, A(36) => wait_timer_36_port, 
                           A(35) => wait_timer_35_port, A(34) => 
                           wait_timer_34_port, A(33) => wait_timer_33_port, 
                           A(32) => wait_timer_32_port, A(31) => 
                           wait_timer_31_port, A(30) => wait_timer_30_port, 
                           A(29) => wait_timer_29_port, A(28) => 
                           wait_timer_28_port, A(27) => wait_timer_27_port, 
                           A(26) => wait_timer_26_port, A(25) => 
                           wait_timer_25_port, A(24) => wait_timer_24_port, 
                           A(23) => wait_timer_23_port, A(22) => 
                           wait_timer_22_port, A(21) => wait_timer_21_port, 
                           A(20) => wait_timer_20_port, A(19) => 
                           wait_timer_19_port, A(18) => wait_timer_18_port, 
                           A(17) => wait_timer_17_port, A(16) => 
                           wait_timer_16_port, A(15) => wait_timer_15_port, 
                           A(14) => wait_timer_14_port, A(13) => 
                           wait_timer_13_port, A(12) => wait_timer_12_port, 
                           A(11) => wait_timer_11_port, A(10) => 
                           wait_timer_10_port, A(9) => wait_timer_9_port, A(8) 
                           => wait_timer_8_port, A(7) => wait_timer_7_port, 
                           A(6) => wait_timer_6_port, A(5) => wait_timer_5_port
                           , A(4) => wait_timer_4_port, A(3) => 
                           wait_timer_3_port, A(2) => wait_timer_2_port, A(1) 
                           => wait_timer_1_port, A(0) => wait_timer_0_port, 
                           SUM(63) => N188, SUM(62) => N187, SUM(61) => N186, 
                           SUM(60) => N185, SUM(59) => N184, SUM(58) => N183, 
                           SUM(57) => N182, SUM(56) => N181, SUM(55) => N180, 
                           SUM(54) => N179, SUM(53) => N178, SUM(52) => N177, 
                           SUM(51) => N176, SUM(50) => N175, SUM(49) => N174, 
                           SUM(48) => N173, SUM(47) => N172, SUM(46) => N171, 
                           SUM(45) => N170, SUM(44) => N169, SUM(43) => N168, 
                           SUM(42) => N167, SUM(41) => N166, SUM(40) => N165, 
                           SUM(39) => N164, SUM(38) => N163, SUM(37) => N162, 
                           SUM(36) => N161, SUM(35) => N160, SUM(34) => N159, 
                           SUM(33) => N158, SUM(32) => N157, SUM(31) => N156, 
                           SUM(30) => N155, SUM(29) => N154, SUM(28) => N153, 
                           SUM(27) => N152, SUM(26) => N151, SUM(25) => N150, 
                           SUM(24) => N149, SUM(23) => N148, SUM(22) => N147, 
                           SUM(21) => N146, SUM(20) => N145, SUM(19) => N144, 
                           SUM(18) => N143, SUM(17) => N142, SUM(16) => N141, 
                           SUM(15) => N140, SUM(14) => N139, SUM(13) => N138, 
                           SUM(12) => N137, SUM(11) => N136, SUM(10) => N135, 
                           SUM(9) => N134, SUM(8) => N133, SUM(7) => N132, 
                           SUM(6) => N131, SUM(5) => N130, SUM(4) => N129, 
                           SUM(3) => N128, SUM(2) => N127, SUM(1) => N126, 
                           SUM(0) => N125);
   add_97 : zpu_perf_mon_DW01_inc_1 port map( A(63) => run_timer_63_port, A(62)
                           => run_timer_62_port, A(61) => run_timer_61_port, 
                           A(60) => run_timer_60_port, A(59) => 
                           run_timer_59_port, A(58) => run_timer_58_port, A(57)
                           => run_timer_57_port, A(56) => run_timer_56_port, 
                           A(55) => run_timer_55_port, A(54) => 
                           run_timer_54_port, A(53) => run_timer_53_port, A(52)
                           => run_timer_52_port, A(51) => run_timer_51_port, 
                           A(50) => run_timer_50_port, A(49) => 
                           run_timer_49_port, A(48) => run_timer_48_port, A(47)
                           => run_timer_47_port, A(46) => run_timer_46_port, 
                           A(45) => run_timer_45_port, A(44) => 
                           run_timer_44_port, A(43) => run_timer_43_port, A(42)
                           => run_timer_42_port, A(41) => run_timer_41_port, 
                           A(40) => run_timer_40_port, A(39) => 
                           run_timer_39_port, A(38) => run_timer_38_port, A(37)
                           => run_timer_37_port, A(36) => run_timer_36_port, 
                           A(35) => run_timer_35_port, A(34) => 
                           run_timer_34_port, A(33) => run_timer_33_port, A(32)
                           => run_timer_32_port, A(31) => run_timer_31_port, 
                           A(30) => run_timer_30_port, A(29) => 
                           run_timer_29_port, A(28) => run_timer_28_port, A(27)
                           => run_timer_27_port, A(26) => run_timer_26_port, 
                           A(25) => run_timer_25_port, A(24) => 
                           run_timer_24_port, A(23) => run_timer_23_port, A(22)
                           => run_timer_22_port, A(21) => run_timer_21_port, 
                           A(20) => run_timer_20_port, A(19) => 
                           run_timer_19_port, A(18) => run_timer_18_port, A(17)
                           => run_timer_17_port, A(16) => run_timer_16_port, 
                           A(15) => run_timer_15_port, A(14) => 
                           run_timer_14_port, A(13) => run_timer_13_port, A(12)
                           => run_timer_12_port, A(11) => run_timer_11_port, 
                           A(10) => run_timer_10_port, A(9) => run_timer_9_port
                           , A(8) => run_timer_8_port, A(7) => run_timer_7_port
                           , A(6) => run_timer_6_port, A(5) => run_timer_5_port
                           , A(4) => run_timer_4_port, A(3) => run_timer_3_port
                           , A(2) => run_timer_2_port, A(1) => run_timer_1_port
                           , A(0) => run_timer_0_port, SUM(63) => N114, SUM(62)
                           => N113, SUM(61) => N112, SUM(60) => N111, SUM(59) 
                           => N110, SUM(58) => N109, SUM(57) => N108, SUM(56) 
                           => N107, SUM(55) => N106, SUM(54) => N105, SUM(53) 
                           => N104, SUM(52) => N103, SUM(51) => N102, SUM(50) 
                           => N101, SUM(49) => N100, SUM(48) => N99, SUM(47) =>
                           N98, SUM(46) => N97, SUM(45) => N96, SUM(44) => N95,
                           SUM(43) => N94, SUM(42) => N93, SUM(41) => N92, 
                           SUM(40) => N91, SUM(39) => N90, SUM(38) => N89, 
                           SUM(37) => N88, SUM(36) => N87, SUM(35) => N86, 
                           SUM(34) => N85, SUM(33) => N84, SUM(32) => N83, 
                           SUM(31) => N82, SUM(30) => N81, SUM(29) => N80, 
                           SUM(28) => N79, SUM(27) => N78, SUM(26) => N77, 
                           SUM(25) => N76, SUM(24) => N75, SUM(23) => N74, 
                           SUM(22) => N73, SUM(21) => N72, SUM(20) => N71, 
                           SUM(19) => N70, SUM(18) => N69, SUM(17) => N68, 
                           SUM(16) => N67, SUM(15) => N66, SUM(14) => N65, 
                           SUM(13) => N64, SUM(12) => N63, SUM(11) => N62, 
                           SUM(10) => N61, SUM(9) => N60, SUM(8) => N59, SUM(7)
                           => N58, SUM(6) => N57, SUM(5) => N56, SUM(4) => N55,
                           SUM(3) => N54, SUM(2) => N53, SUM(1) => N52, SUM(0) 
                           => N51);
   U1192 : GTECH_NOR2 port map( A => n2087, B => n1165, Z => n2091);
   U1193 : GTECH_NOR2 port map( A => n2086, B => n1165, Z => n2092);
   U1194 : GTECH_NOR2 port map( A => n2085, B => n1165, Z => n2093);
   U1195 : GTECH_NOR2 port map( A => n2084, B => n1165, Z => n2094);
   U1196 : GTECH_NOR2 port map( A => n1165, B => n1166, Z => n2095);
   U1197 : GTECH_NOR2 port map( A => n1165, B => n1167, Z => n2096);
   U1198 : GTECH_NOT port map( A => n1168, Z => ll_tx_src_rdy_n);
   U1199 : GTECH_NAND2 port map( A => n1169, B => n1170, Z => n999);
   U1200 : GTECH_NAND2 port map( A => N183, B => n1171, Z => n1170);
   U1201 : GTECH_NAND2 port map( A => wait_timer_58_port, B => n1172, Z => 
                           n1169);
   U1202 : GTECH_NAND2 port map( A => n1173, B => n1174, Z => n998);
   U1203 : GTECH_NAND2 port map( A => N184, B => n1171, Z => n1174);
   U1204 : GTECH_NAND2 port map( A => wait_timer_59_port, B => n1172, Z => 
                           n1173);
   U1205 : GTECH_NAND2 port map( A => n1175, B => n1176, Z => n997);
   U1206 : GTECH_NAND2 port map( A => N185, B => n1171, Z => n1176);
   U1207 : GTECH_NAND2 port map( A => wait_timer_60_port, B => n1172, Z => 
                           n1175);
   U1208 : GTECH_NAND2 port map( A => n1177, B => n1178, Z => n996);
   U1209 : GTECH_NAND2 port map( A => N186, B => n1171, Z => n1178);
   U1210 : GTECH_NAND2 port map( A => wait_timer_61_port, B => n1172, Z => 
                           n1177);
   U1211 : GTECH_NAND2 port map( A => n1179, B => n1180, Z => n995);
   U1212 : GTECH_NAND2 port map( A => N187, B => n1171, Z => n1180);
   U1213 : GTECH_NAND2 port map( A => wait_timer_62_port, B => n1172, Z => 
                           n1179);
   U1214 : GTECH_NAND2 port map( A => n1181, B => n1182, Z => n994);
   U1215 : GTECH_NAND2 port map( A => N188, B => n1171, Z => n1182);
   U1216 : GTECH_NAND2 port map( A => wait_timer_63_port, B => n1172, Z => 
                           n1181);
   U1217 : GTECH_NOR2 port map( A => n1183, B => n1184, Z => n993);
   U1218 : GTECH_NOT port map( A => pc(0), Z => n1183);
   U1219 : GTECH_NOR2 port map( A => n1185, B => n1184, Z => n992);
   U1220 : GTECH_NOT port map( A => pc(1), Z => n1185);
   U1221 : GTECH_NOR2 port map( A => n1186, B => n1184, Z => n991);
   U1222 : GTECH_NOT port map( A => pc(2), Z => n1186);
   U1223 : GTECH_NOR2 port map( A => n1187, B => n1184, Z => n990);
   U1224 : GTECH_NOT port map( A => pc(3), Z => n1187);
   U1225 : GTECH_NOR2 port map( A => n1188, B => n1184, Z => n989);
   U1226 : GTECH_NOT port map( A => pc(4), Z => n1188);
   U1227 : GTECH_NOR2 port map( A => n1189, B => n1184, Z => n988);
   U1228 : GTECH_NOT port map( A => pc(5), Z => n1189);
   U1229 : GTECH_NOR2 port map( A => n1190, B => n1184, Z => n987);
   U1230 : GTECH_NOT port map( A => pc(6), Z => n1190);
   U1231 : GTECH_NOR2 port map( A => n1191, B => n1184, Z => n986);
   U1232 : GTECH_NOT port map( A => pc(7), Z => n1191);
   U1233 : GTECH_NOR2 port map( A => n1192, B => n1184, Z => n985);
   U1234 : GTECH_NOT port map( A => pc(8), Z => n1192);
   U1235 : GTECH_NOR2 port map( A => n1193, B => n1184, Z => n984);
   U1236 : GTECH_NOT port map( A => pc(9), Z => n1193);
   U1237 : GTECH_NOR2 port map( A => n1194, B => n1184, Z => n983);
   U1238 : GTECH_NOT port map( A => pc(10), Z => n1194);
   U1239 : GTECH_NOR2 port map( A => n1195, B => n1184, Z => n982);
   U1240 : GTECH_NOT port map( A => pc(11), Z => n1195);
   U1241 : GTECH_NOR2 port map( A => n1196, B => n1184, Z => n981);
   U1242 : GTECH_NOT port map( A => pc(12), Z => n1196);
   U1243 : GTECH_NOR2 port map( A => n1197, B => n1184, Z => n980);
   U1244 : GTECH_NOT port map( A => pc(13), Z => n1197);
   U1245 : GTECH_NOR2 port map( A => n1198, B => n1184, Z => n979);
   U1246 : GTECH_NOT port map( A => pc(14), Z => n1198);
   U1247 : GTECH_NOR2 port map( A => n1199, B => n1184, Z => n978);
   U1248 : GTECH_NOT port map( A => pc(15), Z => n1199);
   U1249 : GTECH_NOR2 port map( A => n1200, B => n1184, Z => n977);
   U1250 : GTECH_NOT port map( A => pc(16), Z => n1200);
   U1251 : GTECH_NOR2 port map( A => n1201, B => n1184, Z => n976);
   U1252 : GTECH_NOT port map( A => pc(17), Z => n1201);
   U1253 : GTECH_NOR2 port map( A => n1202, B => n1184, Z => n975);
   U1254 : GTECH_NOT port map( A => pc(18), Z => n1202);
   U1255 : GTECH_NOR2 port map( A => n1203, B => n1184, Z => n974);
   U1256 : GTECH_NOT port map( A => pc(19), Z => n1203);
   U1257 : GTECH_NOR2 port map( A => n1204, B => n1184, Z => n973);
   U1258 : GTECH_NOT port map( A => pc(20), Z => n1204);
   U1259 : GTECH_NOR2 port map( A => n1205, B => n1184, Z => n972);
   U1260 : GTECH_NOT port map( A => pc(21), Z => n1205);
   U1261 : GTECH_NOR2 port map( A => n1206, B => n1184, Z => n971);
   U1262 : GTECH_NOT port map( A => pc(22), Z => n1206);
   U1263 : GTECH_NOR2 port map( A => n1207, B => n1184, Z => n970);
   U1264 : GTECH_NOT port map( A => pc(23), Z => n1207);
   U1265 : GTECH_NOR2 port map( A => n1208, B => n1184, Z => n969);
   U1266 : GTECH_NOT port map( A => pc(24), Z => n1208);
   U1267 : GTECH_NOR2 port map( A => n1209, B => n1184, Z => n968);
   U1268 : GTECH_NOT port map( A => pc(25), Z => n1209);
   U1269 : GTECH_NOR2 port map( A => n1210, B => n1184, Z => n967);
   U1270 : GTECH_NOT port map( A => pc(26), Z => n1210);
   U1271 : GTECH_NOR2 port map( A => n1211, B => n1184, Z => n966);
   U1272 : GTECH_NOT port map( A => pc(27), Z => n1211);
   U1273 : GTECH_NOR2 port map( A => n1212, B => n1184, Z => n965);
   U1274 : GTECH_NOT port map( A => pc(28), Z => n1212);
   U1275 : GTECH_NOR2 port map( A => n1213, B => n1184, Z => n964);
   U1276 : GTECH_NOT port map( A => pc(29), Z => n1213);
   U1277 : GTECH_NOR2 port map( A => n1214, B => n1184, Z => n963);
   U1278 : GTECH_NOT port map( A => pc(30), Z => n1214);
   U1279 : GTECH_NOR2 port map( A => n1215, B => n1184, Z => n962);
   U1280 : GTECH_NOT port map( A => pc(31), Z => n1215);
   U1281 : GTECH_NOR2 port map( A => n1216, B => n1184, Z => n961);
   U1282 : GTECH_NOT port map( A => inst(0), Z => n1216);
   U1283 : GTECH_NOR2 port map( A => n1217, B => n1184, Z => n960);
   U1284 : GTECH_NOT port map( A => inst(1), Z => n1217);
   U1285 : GTECH_NOR2 port map( A => n1218, B => n1184, Z => n959);
   U1286 : GTECH_NOT port map( A => inst(2), Z => n1218);
   U1287 : GTECH_NOR2 port map( A => n1219, B => n1184, Z => n958);
   U1288 : GTECH_NOT port map( A => inst(3), Z => n1219);
   U1289 : GTECH_NOR2 port map( A => n1220, B => n1184, Z => n957);
   U1290 : GTECH_NOT port map( A => inst(4), Z => n1220);
   U1291 : GTECH_NOR2 port map( A => n1221, B => n1184, Z => n956);
   U1292 : GTECH_NOT port map( A => inst(5), Z => n1221);
   U1293 : GTECH_NOR2 port map( A => n1222, B => n1184, Z => n955);
   U1294 : GTECH_NOT port map( A => inst(6), Z => n1222);
   U1295 : GTECH_NOR2 port map( A => n1223, B => n1184, Z => n954);
   U1296 : GTECH_NOT port map( A => inst(7), Z => n1223);
   U1297 : GTECH_NOR2 port map( A => n1224, B => n1184, Z => n953);
   U1298 : GTECH_NOT port map( A => inst(8), Z => n1224);
   U1299 : GTECH_NOR2 port map( A => n1225, B => n1184, Z => n952);
   U1300 : GTECH_NOT port map( A => inst(9), Z => n1225);
   U1301 : GTECH_NOR2 port map( A => n1226, B => n1184, Z => n951);
   U1302 : GTECH_NOT port map( A => inst(10), Z => n1226);
   U1303 : GTECH_NOR2 port map( A => n1227, B => n1184, Z => n950);
   U1304 : GTECH_NOT port map( A => inst(11), Z => n1227);
   U1305 : GTECH_NOR2 port map( A => n1228, B => n1184, Z => n949);
   U1306 : GTECH_NOT port map( A => inst(12), Z => n1228);
   U1307 : GTECH_NOR2 port map( A => n1229, B => n1184, Z => n948);
   U1308 : GTECH_NOT port map( A => inst(13), Z => n1229);
   U1309 : GTECH_NOR2 port map( A => n1230, B => n1184, Z => n947);
   U1310 : GTECH_NOT port map( A => inst(14), Z => n1230);
   U1311 : GTECH_NOR2 port map( A => n1231, B => n1184, Z => n946);
   U1312 : GTECH_NOT port map( A => inst(15), Z => n1231);
   U1313 : GTECH_NOR2 port map( A => n1232, B => n1184, Z => n945);
   U1314 : GTECH_NOT port map( A => inst(16), Z => n1232);
   U1315 : GTECH_NOR2 port map( A => n1233, B => n1184, Z => n944);
   U1316 : GTECH_NOT port map( A => inst(17), Z => n1233);
   U1317 : GTECH_NOR2 port map( A => n1234, B => n1184, Z => n943);
   U1318 : GTECH_NOT port map( A => inst(18), Z => n1234);
   U1319 : GTECH_NOR2 port map( A => n1235, B => n1184, Z => n942);
   U1320 : GTECH_NOT port map( A => inst(19), Z => n1235);
   U1321 : GTECH_NOR2 port map( A => n1236, B => n1184, Z => n941);
   U1322 : GTECH_NOT port map( A => inst(20), Z => n1236);
   U1323 : GTECH_NOR2 port map( A => n1237, B => n1184, Z => n940);
   U1324 : GTECH_NOT port map( A => inst(21), Z => n1237);
   U1325 : GTECH_NOR2 port map( A => n1238, B => n1184, Z => n939);
   U1326 : GTECH_NOT port map( A => inst(22), Z => n1238);
   U1327 : GTECH_NOR2 port map( A => n1239, B => n1184, Z => n938);
   U1328 : GTECH_NOT port map( A => inst(23), Z => n1239);
   U1329 : GTECH_NOR2 port map( A => n1240, B => n1184, Z => n937);
   U1330 : GTECH_NOT port map( A => inst(24), Z => n1240);
   U1331 : GTECH_NOR2 port map( A => n1241, B => n1184, Z => n936);
   U1332 : GTECH_NOT port map( A => inst(25), Z => n1241);
   U1333 : GTECH_NOR2 port map( A => n1242, B => n1184, Z => n935);
   U1334 : GTECH_NOT port map( A => inst(26), Z => n1242);
   U1335 : GTECH_NOR2 port map( A => n1243, B => n1184, Z => n934);
   U1336 : GTECH_NOT port map( A => inst(27), Z => n1243);
   U1337 : GTECH_NOR2 port map( A => n1244, B => n1184, Z => n933);
   U1338 : GTECH_NOT port map( A => inst(28), Z => n1244);
   U1339 : GTECH_NOR2 port map( A => n1245, B => n1184, Z => n932);
   U1340 : GTECH_NOT port map( A => inst(29), Z => n1245);
   U1341 : GTECH_NOR2 port map( A => n1246, B => n1184, Z => n931);
   U1342 : GTECH_NOT port map( A => inst(30), Z => n1246);
   U1343 : GTECH_NOR2 port map( A => n1247, B => n1184, Z => n930);
   U1344 : GTECH_NOT port map( A => inst(31), Z => n1247);
   U1345 : GTECH_NAND2 port map( A => n1248, B => n1249, Z => n1164);
   U1346 : GTECH_NAND2 port map( A => n2090, B => n1250, Z => n1249);
   U1347 : GTECH_NAND2 port map( A => n1251, B => n1252, Z => n1248);
   U1348 : GTECH_NOR2 port map( A => n1253, B => n1250, Z => n1163);
   U1349 : GTECH_NOR2 port map( A => n1254, B => n1255, Z => n1253);
   U1350 : GTECH_NAND2 port map( A => n1256, B => n1257, Z => n1255);
   U1351 : GTECH_NAND2 port map( A => n1251, B => ll_rx_data(0), Z => n1256);
   U1352 : GTECH_NOR2 port map( A => ll_rx_data(1), B => n1258, Z => n1251);
   U1353 : GTECH_NOR2 port map( A => n1259, B => n1260, Z => n1254);
   U1354 : GTECH_NOR2 port map( A => n1261, B => n1250, Z => n1162);
   U1355 : GTECH_NOT port map( A => n1252, Z => n1250);
   U1356 : GTECH_NOR2 port map( A => n1262, B => n1263, Z => n1252);
   U1357 : GTECH_NOR2 port map( A => n1257, B => n1264, Z => n1263);
   U1358 : GTECH_NOR2 port map( A => n1265, B => n1266, Z => n1261);
   U1359 : GTECH_NAND2 port map( A => n1267, B => n1268, Z => n1266);
   U1360 : GTECH_NAND2 port map( A => n1269, B => n1270, Z => n1268);
   U1361 : GTECH_NOR2 port map( A => n2089, B => n1271, Z => n1270);
   U1362 : GTECH_NOT port map( A => n2088, Z => n1271);
   U1363 : GTECH_NOR2 port map( A => n1184, B => n1272, Z => n1269);
   U1364 : GTECH_NAND2 port map( A => ll_rx_data(1), B => n1273, Z => n1267);
   U1365 : GTECH_NOT port map( A => n1258, Z => n1273);
   U1366 : GTECH_NOT port map( A => n1274, Z => n1265);
   U1367 : GTECH_NAND2 port map( A => n1275, B => n1259, Z => n1274);
   U1368 : GTECH_NAND2 port map( A => n1276, B => n1277, Z => n1161);
   U1369 : GTECH_NAND2 port map( A => word_count_0_port, B => n1278, Z => n1277
                           );
   U1370 : GTECH_NAND2 port map( A => N715, B => n1275, Z => n1276);
   U1371 : GTECH_NAND2 port map( A => n1279, B => n1280, Z => n1160);
   U1372 : GTECH_NAND2 port map( A => word_count_1_port, B => n1278, Z => n1280
                           );
   U1373 : GTECH_NAND2 port map( A => N716, B => n1275, Z => n1279);
   U1374 : GTECH_NAND2 port map( A => n1281, B => n1282, Z => n1159);
   U1375 : GTECH_NAND2 port map( A => word_count_2_port, B => n1278, Z => n1282
                           );
   U1376 : GTECH_NAND2 port map( A => N717, B => n1275, Z => n1281);
   U1377 : GTECH_NAND2 port map( A => n1283, B => n1284, Z => n1158);
   U1378 : GTECH_NAND2 port map( A => word_count_3_port, B => n1278, Z => n1284
                           );
   U1379 : GTECH_NAND2 port map( A => N718, B => n1275, Z => n1283);
   U1380 : GTECH_NAND2 port map( A => n1285, B => n1286, Z => n1157);
   U1381 : GTECH_NAND2 port map( A => word_count_4_port, B => n1278, Z => n1286
                           );
   U1382 : GTECH_NAND2 port map( A => N719, B => n1275, Z => n1285);
   U1383 : GTECH_NAND2 port map( A => n1287, B => n1288, Z => n1156);
   U1384 : GTECH_NAND2 port map( A => word_count_5_port, B => n1278, Z => n1288
                           );
   U1385 : GTECH_NAND2 port map( A => N720, B => n1275, Z => n1287);
   U1386 : GTECH_NAND2 port map( A => n1289, B => n1290, Z => n1155);
   U1387 : GTECH_NAND2 port map( A => word_count_6_port, B => n1278, Z => n1290
                           );
   U1388 : GTECH_NAND2 port map( A => N721, B => n1275, Z => n1289);
   U1389 : GTECH_NAND2 port map( A => n1291, B => n1292, Z => n1154);
   U1390 : GTECH_NAND2 port map( A => word_count_7_port, B => n1278, Z => n1292
                           );
   U1391 : GTECH_NAND2 port map( A => N722, B => n1275, Z => n1291);
   U1392 : GTECH_NAND2 port map( A => n1293, B => n1294, Z => n1153);
   U1393 : GTECH_NAND2 port map( A => word_count_8_port, B => n1278, Z => n1294
                           );
   U1394 : GTECH_NAND2 port map( A => N723, B => n1275, Z => n1293);
   U1395 : GTECH_NAND2 port map( A => n1295, B => n1296, Z => n1152);
   U1396 : GTECH_NAND2 port map( A => word_count_9_port, B => n1278, Z => n1296
                           );
   U1397 : GTECH_NAND2 port map( A => N724, B => n1275, Z => n1295);
   U1398 : GTECH_NAND2 port map( A => n1297, B => n1298, Z => n1151);
   U1399 : GTECH_NAND2 port map( A => word_count_10_port, B => n1278, Z => 
                           n1298);
   U1400 : GTECH_NAND2 port map( A => N725, B => n1275, Z => n1297);
   U1401 : GTECH_NAND2 port map( A => n1299, B => n1300, Z => n1150);
   U1402 : GTECH_NAND2 port map( A => word_count_11_port, B => n1278, Z => 
                           n1300);
   U1403 : GTECH_NAND2 port map( A => N726, B => n1275, Z => n1299);
   U1404 : GTECH_NAND2 port map( A => n1301, B => n1302, Z => n1149);
   U1405 : GTECH_NAND2 port map( A => word_count_12_port, B => n1278, Z => 
                           n1302);
   U1406 : GTECH_NAND2 port map( A => N727, B => n1275, Z => n1301);
   U1407 : GTECH_NAND2 port map( A => n1303, B => n1304, Z => n1148);
   U1408 : GTECH_NAND2 port map( A => word_count_13_port, B => n1278, Z => 
                           n1304);
   U1409 : GTECH_NAND2 port map( A => N728, B => n1275, Z => n1303);
   U1410 : GTECH_NAND2 port map( A => n1305, B => n1306, Z => n1147);
   U1411 : GTECH_NAND2 port map( A => word_count_14_port, B => n1278, Z => 
                           n1306);
   U1412 : GTECH_NAND2 port map( A => N729, B => n1275, Z => n1305);
   U1413 : GTECH_NAND2 port map( A => n1307, B => n1308, Z => n1146);
   U1414 : GTECH_NAND2 port map( A => word_count_15_port, B => n1278, Z => 
                           n1308);
   U1415 : GTECH_NAND2 port map( A => N730, B => n1275, Z => n1307);
   U1416 : GTECH_NAND2 port map( A => n1309, B => n1310, Z => n1145);
   U1417 : GTECH_NAND2 port map( A => word_count_16_port, B => n1278, Z => 
                           n1310);
   U1418 : GTECH_NAND2 port map( A => N731, B => n1275, Z => n1309);
   U1419 : GTECH_NAND2 port map( A => n1311, B => n1312, Z => n1144);
   U1420 : GTECH_NAND2 port map( A => word_count_17_port, B => n1278, Z => 
                           n1312);
   U1421 : GTECH_NAND2 port map( A => N732, B => n1275, Z => n1311);
   U1422 : GTECH_NAND2 port map( A => n1313, B => n1314, Z => n1143);
   U1423 : GTECH_NAND2 port map( A => word_count_18_port, B => n1278, Z => 
                           n1314);
   U1424 : GTECH_NAND2 port map( A => N733, B => n1275, Z => n1313);
   U1425 : GTECH_NAND2 port map( A => n1315, B => n1316, Z => n1142);
   U1426 : GTECH_NAND2 port map( A => word_count_19_port, B => n1278, Z => 
                           n1316);
   U1427 : GTECH_NAND2 port map( A => N734, B => n1275, Z => n1315);
   U1428 : GTECH_NAND2 port map( A => n1317, B => n1318, Z => n1141);
   U1429 : GTECH_NAND2 port map( A => word_count_20_port, B => n1278, Z => 
                           n1318);
   U1430 : GTECH_NAND2 port map( A => N735, B => n1275, Z => n1317);
   U1431 : GTECH_NAND2 port map( A => n1319, B => n1320, Z => n1140);
   U1432 : GTECH_NAND2 port map( A => word_count_21_port, B => n1278, Z => 
                           n1320);
   U1433 : GTECH_NAND2 port map( A => N736, B => n1275, Z => n1319);
   U1434 : GTECH_NAND2 port map( A => n1321, B => n1322, Z => n1139);
   U1435 : GTECH_NAND2 port map( A => word_count_22_port, B => n1278, Z => 
                           n1322);
   U1436 : GTECH_NAND2 port map( A => N737, B => n1275, Z => n1321);
   U1437 : GTECH_NAND2 port map( A => n1323, B => n1324, Z => n1138);
   U1438 : GTECH_NAND2 port map( A => word_count_23_port, B => n1278, Z => 
                           n1324);
   U1439 : GTECH_NAND2 port map( A => N738, B => n1275, Z => n1323);
   U1440 : GTECH_NAND2 port map( A => n1325, B => n1326, Z => n1137);
   U1441 : GTECH_NAND2 port map( A => word_count_24_port, B => n1278, Z => 
                           n1326);
   U1442 : GTECH_NAND2 port map( A => N739, B => n1275, Z => n1325);
   U1443 : GTECH_NAND2 port map( A => n1327, B => n1328, Z => n1136);
   U1444 : GTECH_NAND2 port map( A => word_count_25_port, B => n1278, Z => 
                           n1328);
   U1445 : GTECH_NAND2 port map( A => N740, B => n1275, Z => n1327);
   U1446 : GTECH_NAND2 port map( A => n1329, B => n1330, Z => n1135);
   U1447 : GTECH_NAND2 port map( A => word_count_26_port, B => n1278, Z => 
                           n1330);
   U1448 : GTECH_NAND2 port map( A => N741, B => n1275, Z => n1329);
   U1449 : GTECH_NAND2 port map( A => n1331, B => n1332, Z => n1134);
   U1450 : GTECH_NAND2 port map( A => word_count_27_port, B => n1278, Z => 
                           n1332);
   U1451 : GTECH_NAND2 port map( A => N742, B => n1275, Z => n1331);
   U1452 : GTECH_NAND2 port map( A => n1333, B => n1334, Z => n1133);
   U1453 : GTECH_NAND2 port map( A => word_count_28_port, B => n1278, Z => 
                           n1334);
   U1454 : GTECH_NAND2 port map( A => N743, B => n1275, Z => n1333);
   U1455 : GTECH_NAND2 port map( A => n1335, B => n1336, Z => n1132);
   U1456 : GTECH_NAND2 port map( A => word_count_29_port, B => n1278, Z => 
                           n1336);
   U1457 : GTECH_NAND2 port map( A => N744, B => n1275, Z => n1335);
   U1458 : GTECH_NAND2 port map( A => n1337, B => n1338, Z => n1131);
   U1459 : GTECH_NAND2 port map( A => word_count_30_port, B => n1278, Z => 
                           n1338);
   U1460 : GTECH_NAND2 port map( A => N745, B => n1275, Z => n1337);
   U1461 : GTECH_NAND2 port map( A => n1339, B => n1340, Z => n1130);
   U1462 : GTECH_NAND2 port map( A => word_count_31_port, B => n1278, Z => 
                           n1340);
   U1463 : GTECH_NAND2 port map( A => N746, B => n1275, Z => n1339);
   U1464 : GTECH_NAND2 port map( A => n1341, B => n1342, Z => n1129);
   U1465 : GTECH_NAND2 port map( A => n1343, B => ll_rx_data(0), Z => n1342);
   U1466 : GTECH_NAND2 port map( A => perf_cmd_0_port, B => n1344, Z => n1341);
   U1467 : GTECH_NAND2 port map( A => n1345, B => n1346, Z => n1128);
   U1468 : GTECH_NAND2 port map( A => n1343, B => ll_rx_data(1), Z => n1346);
   U1469 : GTECH_NOR2 port map( A => n1262, B => n1258, Z => n1343);
   U1470 : GTECH_NAND2 port map( A => n1347, B => n1348, Z => n1258);
   U1471 : GTECH_NOR2 port map( A => ll_rx_data(3), B => ll_rx_data(2), Z => 
                           n1347);
   U1472 : GTECH_NOR2 port map( A => n1349, B => n1350, Z => n1262);
   U1473 : GTECH_NAND2 port map( A => perf_cmd_1_port, B => n1344, Z => n1345);
   U1474 : GTECH_NOT port map( A => n1165, Z => n1344);
   U1475 : GTECH_NOR2 port map( A => n1351, B => n1278, Z => n1165);
   U1476 : GTECH_NAND2 port map( A => n1257, B => n1352, Z => n1278);
   U1477 : GTECH_NAND2 port map( A => n2089, B => reset_b, Z => n1352);
   U1478 : GTECH_NAND2 port map( A => n1353, B => reset_b, Z => n1257);
   U1479 : GTECH_NAND2 port map( A => n1260, B => n1354, Z => n1351);
   U1480 : GTECH_NAND2 port map( A => n1355, B => n1348, Z => n1354);
   U1481 : GTECH_NOT port map( A => n1349, Z => n1348);
   U1482 : GTECH_NAND2 port map( A => n1356, B => n1357, Z => n1349);
   U1483 : GTECH_NOR2 port map( A => n2090, B => n1184, Z => n1356);
   U1484 : GTECH_NAND2 port map( A => n1358, B => n1359, Z => n1355);
   U1485 : GTECH_NOR2 port map( A => n1360, B => ll_rx_data(2), Z => n1359);
   U1486 : GTECH_NOR2 port map( A => ll_rx_data(0), B => ll_rx_data(1), Z => 
                           n1360);
   U1487 : GTECH_NOR2 port map( A => n1361, B => ll_rx_data(3), Z => n1358);
   U1488 : GTECH_NOT port map( A => n1350, Z => n1361);
   U1489 : GTECH_NOR2 port map( A => ll_rx_sof_n, B => ll_rx_src_rdy_n, Z => 
                           n1350);
   U1490 : GTECH_NOT port map( A => n1275, Z => n1260);
   U1491 : GTECH_NOR2 port map( A => n1184, B => n1362, Z => n1275);
   U1492 : GTECH_NOT port map( A => reset_b, Z => n1184);
   U1493 : GTECH_NAND2 port map( A => n1363, B => n1364, Z => n1121);
   U1494 : GTECH_NAND2 port map( A => N51, B => n1365, Z => n1364);
   U1495 : GTECH_NAND2 port map( A => run_timer_0_port, B => n1366, Z => n1363)
                           ;
   U1496 : GTECH_NAND2 port map( A => n1367, B => n1368, Z => n1120);
   U1497 : GTECH_NAND2 port map( A => N52, B => n1365, Z => n1368);
   U1498 : GTECH_NAND2 port map( A => run_timer_1_port, B => n1366, Z => n1367)
                           ;
   U1499 : GTECH_NAND2 port map( A => n1369, B => n1370, Z => n1119);
   U1500 : GTECH_NAND2 port map( A => N53, B => n1365, Z => n1370);
   U1501 : GTECH_NAND2 port map( A => run_timer_2_port, B => n1366, Z => n1369)
                           ;
   U1502 : GTECH_NAND2 port map( A => n1371, B => n1372, Z => n1118);
   U1503 : GTECH_NAND2 port map( A => N54, B => n1365, Z => n1372);
   U1504 : GTECH_NAND2 port map( A => run_timer_3_port, B => n1366, Z => n1371)
                           ;
   U1505 : GTECH_NAND2 port map( A => n1373, B => n1374, Z => n1117);
   U1506 : GTECH_NAND2 port map( A => N55, B => n1365, Z => n1374);
   U1507 : GTECH_NAND2 port map( A => run_timer_4_port, B => n1366, Z => n1373)
                           ;
   U1508 : GTECH_NAND2 port map( A => n1375, B => n1376, Z => n1116);
   U1509 : GTECH_NAND2 port map( A => N56, B => n1365, Z => n1376);
   U1510 : GTECH_NAND2 port map( A => run_timer_5_port, B => n1366, Z => n1375)
                           ;
   U1511 : GTECH_NAND2 port map( A => n1377, B => n1378, Z => n1115);
   U1512 : GTECH_NAND2 port map( A => N57, B => n1365, Z => n1378);
   U1513 : GTECH_NAND2 port map( A => run_timer_6_port, B => n1366, Z => n1377)
                           ;
   U1514 : GTECH_NAND2 port map( A => n1379, B => n1380, Z => n1114);
   U1515 : GTECH_NAND2 port map( A => N58, B => n1365, Z => n1380);
   U1516 : GTECH_NAND2 port map( A => run_timer_7_port, B => n1366, Z => n1379)
                           ;
   U1517 : GTECH_NAND2 port map( A => n1381, B => n1382, Z => n1113);
   U1518 : GTECH_NAND2 port map( A => N59, B => n1365, Z => n1382);
   U1519 : GTECH_NAND2 port map( A => run_timer_8_port, B => n1366, Z => n1381)
                           ;
   U1520 : GTECH_NAND2 port map( A => n1383, B => n1384, Z => n1112);
   U1521 : GTECH_NAND2 port map( A => N60, B => n1365, Z => n1384);
   U1522 : GTECH_NAND2 port map( A => run_timer_9_port, B => n1366, Z => n1383)
                           ;
   U1523 : GTECH_NAND2 port map( A => n1385, B => n1386, Z => n1111);
   U1524 : GTECH_NAND2 port map( A => N61, B => n1365, Z => n1386);
   U1525 : GTECH_NAND2 port map( A => run_timer_10_port, B => n1366, Z => n1385
                           );
   U1526 : GTECH_NAND2 port map( A => n1387, B => n1388, Z => n1110);
   U1527 : GTECH_NAND2 port map( A => N62, B => n1365, Z => n1388);
   U1528 : GTECH_NAND2 port map( A => run_timer_11_port, B => n1366, Z => n1387
                           );
   U1529 : GTECH_NAND2 port map( A => n1389, B => n1390, Z => n1109);
   U1530 : GTECH_NAND2 port map( A => N63, B => n1365, Z => n1390);
   U1531 : GTECH_NAND2 port map( A => run_timer_12_port, B => n1366, Z => n1389
                           );
   U1532 : GTECH_NAND2 port map( A => n1391, B => n1392, Z => n1108);
   U1533 : GTECH_NAND2 port map( A => N64, B => n1365, Z => n1392);
   U1534 : GTECH_NAND2 port map( A => run_timer_13_port, B => n1366, Z => n1391
                           );
   U1535 : GTECH_NAND2 port map( A => n1393, B => n1394, Z => n1107);
   U1536 : GTECH_NAND2 port map( A => N65, B => n1365, Z => n1394);
   U1537 : GTECH_NAND2 port map( A => run_timer_14_port, B => n1366, Z => n1393
                           );
   U1538 : GTECH_NAND2 port map( A => n1395, B => n1396, Z => n1106);
   U1539 : GTECH_NAND2 port map( A => N66, B => n1365, Z => n1396);
   U1540 : GTECH_NAND2 port map( A => run_timer_15_port, B => n1366, Z => n1395
                           );
   U1541 : GTECH_NAND2 port map( A => n1397, B => n1398, Z => n1105);
   U1542 : GTECH_NAND2 port map( A => N67, B => n1365, Z => n1398);
   U1543 : GTECH_NAND2 port map( A => run_timer_16_port, B => n1366, Z => n1397
                           );
   U1544 : GTECH_NAND2 port map( A => n1399, B => n1400, Z => n1104);
   U1545 : GTECH_NAND2 port map( A => N68, B => n1365, Z => n1400);
   U1546 : GTECH_NAND2 port map( A => run_timer_17_port, B => n1366, Z => n1399
                           );
   U1547 : GTECH_NAND2 port map( A => n1401, B => n1402, Z => n1103);
   U1548 : GTECH_NAND2 port map( A => N69, B => n1365, Z => n1402);
   U1549 : GTECH_NAND2 port map( A => run_timer_18_port, B => n1366, Z => n1401
                           );
   U1550 : GTECH_NAND2 port map( A => n1403, B => n1404, Z => n1102);
   U1551 : GTECH_NAND2 port map( A => N70, B => n1365, Z => n1404);
   U1552 : GTECH_NAND2 port map( A => run_timer_19_port, B => n1366, Z => n1403
                           );
   U1553 : GTECH_NAND2 port map( A => n1405, B => n1406, Z => n1101);
   U1554 : GTECH_NAND2 port map( A => N71, B => n1365, Z => n1406);
   U1555 : GTECH_NAND2 port map( A => run_timer_20_port, B => n1366, Z => n1405
                           );
   U1556 : GTECH_NAND2 port map( A => n1407, B => n1408, Z => n1100);
   U1557 : GTECH_NAND2 port map( A => N72, B => n1365, Z => n1408);
   U1558 : GTECH_NAND2 port map( A => run_timer_21_port, B => n1366, Z => n1407
                           );
   U1559 : GTECH_NAND2 port map( A => n1409, B => n1410, Z => n1099);
   U1560 : GTECH_NAND2 port map( A => N73, B => n1365, Z => n1410);
   U1561 : GTECH_NAND2 port map( A => run_timer_22_port, B => n1366, Z => n1409
                           );
   U1562 : GTECH_NAND2 port map( A => n1411, B => n1412, Z => n1098);
   U1563 : GTECH_NAND2 port map( A => N74, B => n1365, Z => n1412);
   U1564 : GTECH_NAND2 port map( A => run_timer_23_port, B => n1366, Z => n1411
                           );
   U1565 : GTECH_NAND2 port map( A => n1413, B => n1414, Z => n1097);
   U1566 : GTECH_NAND2 port map( A => N75, B => n1365, Z => n1414);
   U1567 : GTECH_NAND2 port map( A => run_timer_24_port, B => n1366, Z => n1413
                           );
   U1568 : GTECH_NAND2 port map( A => n1415, B => n1416, Z => n1096);
   U1569 : GTECH_NAND2 port map( A => N76, B => n1365, Z => n1416);
   U1570 : GTECH_NAND2 port map( A => run_timer_25_port, B => n1366, Z => n1415
                           );
   U1571 : GTECH_NAND2 port map( A => n1417, B => n1418, Z => n1095);
   U1572 : GTECH_NAND2 port map( A => N77, B => n1365, Z => n1418);
   U1573 : GTECH_NAND2 port map( A => run_timer_26_port, B => n1366, Z => n1417
                           );
   U1574 : GTECH_NAND2 port map( A => n1419, B => n1420, Z => n1094);
   U1575 : GTECH_NAND2 port map( A => N78, B => n1365, Z => n1420);
   U1576 : GTECH_NAND2 port map( A => run_timer_27_port, B => n1366, Z => n1419
                           );
   U1577 : GTECH_NAND2 port map( A => n1421, B => n1422, Z => n1093);
   U1578 : GTECH_NAND2 port map( A => N79, B => n1365, Z => n1422);
   U1579 : GTECH_NAND2 port map( A => run_timer_28_port, B => n1366, Z => n1421
                           );
   U1580 : GTECH_NAND2 port map( A => n1423, B => n1424, Z => n1092);
   U1581 : GTECH_NAND2 port map( A => N80, B => n1365, Z => n1424);
   U1582 : GTECH_NAND2 port map( A => run_timer_29_port, B => n1366, Z => n1423
                           );
   U1583 : GTECH_NAND2 port map( A => n1425, B => n1426, Z => n1091);
   U1584 : GTECH_NAND2 port map( A => N81, B => n1365, Z => n1426);
   U1585 : GTECH_NAND2 port map( A => run_timer_30_port, B => n1366, Z => n1425
                           );
   U1586 : GTECH_NAND2 port map( A => n1427, B => n1428, Z => n1090);
   U1587 : GTECH_NAND2 port map( A => N82, B => n1365, Z => n1428);
   U1588 : GTECH_NAND2 port map( A => run_timer_31_port, B => n1366, Z => n1427
                           );
   U1589 : GTECH_NAND2 port map( A => n1429, B => n1430, Z => n1089);
   U1590 : GTECH_NAND2 port map( A => N83, B => n1365, Z => n1430);
   U1591 : GTECH_NAND2 port map( A => run_timer_32_port, B => n1366, Z => n1429
                           );
   U1592 : GTECH_NAND2 port map( A => n1431, B => n1432, Z => n1088);
   U1593 : GTECH_NAND2 port map( A => N84, B => n1365, Z => n1432);
   U1594 : GTECH_NAND2 port map( A => run_timer_33_port, B => n1366, Z => n1431
                           );
   U1595 : GTECH_NAND2 port map( A => n1433, B => n1434, Z => n1087);
   U1596 : GTECH_NAND2 port map( A => N85, B => n1365, Z => n1434);
   U1597 : GTECH_NAND2 port map( A => run_timer_34_port, B => n1366, Z => n1433
                           );
   U1598 : GTECH_NAND2 port map( A => n1435, B => n1436, Z => n1086);
   U1599 : GTECH_NAND2 port map( A => N86, B => n1365, Z => n1436);
   U1600 : GTECH_NAND2 port map( A => run_timer_35_port, B => n1366, Z => n1435
                           );
   U1601 : GTECH_NAND2 port map( A => n1437, B => n1438, Z => n1085);
   U1602 : GTECH_NAND2 port map( A => N87, B => n1365, Z => n1438);
   U1603 : GTECH_NAND2 port map( A => run_timer_36_port, B => n1366, Z => n1437
                           );
   U1604 : GTECH_NAND2 port map( A => n1439, B => n1440, Z => n1084);
   U1605 : GTECH_NAND2 port map( A => N88, B => n1365, Z => n1440);
   U1606 : GTECH_NAND2 port map( A => run_timer_37_port, B => n1366, Z => n1439
                           );
   U1607 : GTECH_NAND2 port map( A => n1441, B => n1442, Z => n1083);
   U1608 : GTECH_NAND2 port map( A => N89, B => n1365, Z => n1442);
   U1609 : GTECH_NAND2 port map( A => run_timer_38_port, B => n1366, Z => n1441
                           );
   U1610 : GTECH_NAND2 port map( A => n1443, B => n1444, Z => n1082);
   U1611 : GTECH_NAND2 port map( A => N90, B => n1365, Z => n1444);
   U1612 : GTECH_NAND2 port map( A => run_timer_39_port, B => n1366, Z => n1443
                           );
   U1613 : GTECH_NAND2 port map( A => n1445, B => n1446, Z => n1081);
   U1614 : GTECH_NAND2 port map( A => N91, B => n1365, Z => n1446);
   U1615 : GTECH_NAND2 port map( A => run_timer_40_port, B => n1366, Z => n1445
                           );
   U1616 : GTECH_NAND2 port map( A => n1447, B => n1448, Z => n1080);
   U1617 : GTECH_NAND2 port map( A => N92, B => n1365, Z => n1448);
   U1618 : GTECH_NAND2 port map( A => run_timer_41_port, B => n1366, Z => n1447
                           );
   U1619 : GTECH_NAND2 port map( A => n1449, B => n1450, Z => n1079);
   U1620 : GTECH_NAND2 port map( A => N93, B => n1365, Z => n1450);
   U1621 : GTECH_NAND2 port map( A => run_timer_42_port, B => n1366, Z => n1449
                           );
   U1622 : GTECH_NAND2 port map( A => n1451, B => n1452, Z => n1078);
   U1623 : GTECH_NAND2 port map( A => N94, B => n1365, Z => n1452);
   U1624 : GTECH_NAND2 port map( A => run_timer_43_port, B => n1366, Z => n1451
                           );
   U1625 : GTECH_NAND2 port map( A => n1453, B => n1454, Z => n1077);
   U1626 : GTECH_NAND2 port map( A => N95, B => n1365, Z => n1454);
   U1627 : GTECH_NAND2 port map( A => run_timer_44_port, B => n1366, Z => n1453
                           );
   U1628 : GTECH_NAND2 port map( A => n1455, B => n1456, Z => n1076);
   U1629 : GTECH_NAND2 port map( A => N96, B => n1365, Z => n1456);
   U1630 : GTECH_NAND2 port map( A => run_timer_45_port, B => n1366, Z => n1455
                           );
   U1631 : GTECH_NAND2 port map( A => n1457, B => n1458, Z => n1075);
   U1632 : GTECH_NAND2 port map( A => N97, B => n1365, Z => n1458);
   U1633 : GTECH_NAND2 port map( A => run_timer_46_port, B => n1366, Z => n1457
                           );
   U1634 : GTECH_NAND2 port map( A => n1459, B => n1460, Z => n1074);
   U1635 : GTECH_NAND2 port map( A => N98, B => n1365, Z => n1460);
   U1636 : GTECH_NAND2 port map( A => run_timer_47_port, B => n1366, Z => n1459
                           );
   U1637 : GTECH_NAND2 port map( A => n1461, B => n1462, Z => n1073);
   U1638 : GTECH_NAND2 port map( A => N99, B => n1365, Z => n1462);
   U1639 : GTECH_NAND2 port map( A => run_timer_48_port, B => n1366, Z => n1461
                           );
   U1640 : GTECH_NAND2 port map( A => n1463, B => n1464, Z => n1072);
   U1641 : GTECH_NAND2 port map( A => N100, B => n1365, Z => n1464);
   U1642 : GTECH_NAND2 port map( A => run_timer_49_port, B => n1366, Z => n1463
                           );
   U1643 : GTECH_NAND2 port map( A => n1465, B => n1466, Z => n1071);
   U1644 : GTECH_NAND2 port map( A => N101, B => n1365, Z => n1466);
   U1645 : GTECH_NAND2 port map( A => run_timer_50_port, B => n1366, Z => n1465
                           );
   U1646 : GTECH_NAND2 port map( A => n1467, B => n1468, Z => n1070);
   U1647 : GTECH_NAND2 port map( A => N102, B => n1365, Z => n1468);
   U1648 : GTECH_NAND2 port map( A => run_timer_51_port, B => n1366, Z => n1467
                           );
   U1649 : GTECH_NAND2 port map( A => n1469, B => n1470, Z => n1069);
   U1650 : GTECH_NAND2 port map( A => N103, B => n1365, Z => n1470);
   U1651 : GTECH_NAND2 port map( A => run_timer_52_port, B => n1366, Z => n1469
                           );
   U1652 : GTECH_NAND2 port map( A => n1471, B => n1472, Z => n1068);
   U1653 : GTECH_NAND2 port map( A => N104, B => n1365, Z => n1472);
   U1654 : GTECH_NAND2 port map( A => run_timer_53_port, B => n1366, Z => n1471
                           );
   U1655 : GTECH_NAND2 port map( A => n1473, B => n1474, Z => n1067);
   U1656 : GTECH_NAND2 port map( A => N105, B => n1365, Z => n1474);
   U1657 : GTECH_NAND2 port map( A => run_timer_54_port, B => n1366, Z => n1473
                           );
   U1658 : GTECH_NAND2 port map( A => n1475, B => n1476, Z => n1066);
   U1659 : GTECH_NAND2 port map( A => N106, B => n1365, Z => n1476);
   U1660 : GTECH_NAND2 port map( A => run_timer_55_port, B => n1366, Z => n1475
                           );
   U1661 : GTECH_NAND2 port map( A => n1477, B => n1478, Z => n1065);
   U1662 : GTECH_NAND2 port map( A => N107, B => n1365, Z => n1478);
   U1663 : GTECH_NAND2 port map( A => run_timer_56_port, B => n1366, Z => n1477
                           );
   U1664 : GTECH_NAND2 port map( A => n1479, B => n1480, Z => n1064);
   U1665 : GTECH_NAND2 port map( A => N108, B => n1365, Z => n1480);
   U1666 : GTECH_NAND2 port map( A => run_timer_57_port, B => n1366, Z => n1479
                           );
   U1667 : GTECH_NAND2 port map( A => n1481, B => n1482, Z => n1063);
   U1668 : GTECH_NAND2 port map( A => N109, B => n1365, Z => n1482);
   U1669 : GTECH_NAND2 port map( A => run_timer_58_port, B => n1366, Z => n1481
                           );
   U1670 : GTECH_NAND2 port map( A => n1483, B => n1484, Z => n1062);
   U1671 : GTECH_NAND2 port map( A => N110, B => n1365, Z => n1484);
   U1672 : GTECH_NAND2 port map( A => run_timer_59_port, B => n1366, Z => n1483
                           );
   U1673 : GTECH_NAND2 port map( A => n1485, B => n1486, Z => n1061);
   U1674 : GTECH_NAND2 port map( A => N111, B => n1365, Z => n1486);
   U1675 : GTECH_NAND2 port map( A => run_timer_60_port, B => n1366, Z => n1485
                           );
   U1676 : GTECH_NAND2 port map( A => n1487, B => n1488, Z => n1060);
   U1677 : GTECH_NAND2 port map( A => N112, B => n1365, Z => n1488);
   U1678 : GTECH_NAND2 port map( A => run_timer_61_port, B => n1366, Z => n1487
                           );
   U1679 : GTECH_NAND2 port map( A => n1489, B => n1490, Z => n1059);
   U1680 : GTECH_NAND2 port map( A => N113, B => n1365, Z => n1490);
   U1681 : GTECH_NAND2 port map( A => run_timer_62_port, B => n1366, Z => n1489
                           );
   U1682 : GTECH_NAND2 port map( A => n1491, B => n1492, Z => n1058);
   U1683 : GTECH_NAND2 port map( A => N114, B => n1365, Z => n1492);
   U1684 : GTECH_NOR2 port map( A => n1493, B => n1366, Z => n1365);
   U1685 : GTECH_NAND2 port map( A => run_timer_63_port, B => n1366, Z => n1491
                           );
   U1686 : GTECH_NOR2 port map( A => n1493, B => n1494, Z => n1366);
   U1687 : GTECH_NOR2 port map( A => n1495, B => n1496, Z => n1494);
   U1688 : GTECH_NOT port map( A => cpuwait, Z => n1495);
   U1689 : GTECH_NAND2 port map( A => n1497, B => n1498, Z => n1057);
   U1690 : GTECH_NAND2 port map( A => N125, B => n1171, Z => n1498);
   U1691 : GTECH_NAND2 port map( A => wait_timer_0_port, B => n1172, Z => n1497
                           );
   U1692 : GTECH_NAND2 port map( A => n1499, B => n1500, Z => n1056);
   U1693 : GTECH_NAND2 port map( A => N126, B => n1171, Z => n1500);
   U1694 : GTECH_NAND2 port map( A => wait_timer_1_port, B => n1172, Z => n1499
                           );
   U1695 : GTECH_NAND2 port map( A => n1501, B => n1502, Z => n1055);
   U1696 : GTECH_NAND2 port map( A => N127, B => n1171, Z => n1502);
   U1697 : GTECH_NAND2 port map( A => wait_timer_2_port, B => n1172, Z => n1501
                           );
   U1698 : GTECH_NAND2 port map( A => n1503, B => n1504, Z => n1054);
   U1699 : GTECH_NAND2 port map( A => N128, B => n1171, Z => n1504);
   U1700 : GTECH_NAND2 port map( A => wait_timer_3_port, B => n1172, Z => n1503
                           );
   U1701 : GTECH_NAND2 port map( A => n1505, B => n1506, Z => n1053);
   U1702 : GTECH_NAND2 port map( A => N129, B => n1171, Z => n1506);
   U1703 : GTECH_NAND2 port map( A => wait_timer_4_port, B => n1172, Z => n1505
                           );
   U1704 : GTECH_NAND2 port map( A => n1507, B => n1508, Z => n1052);
   U1705 : GTECH_NAND2 port map( A => N130, B => n1171, Z => n1508);
   U1706 : GTECH_NAND2 port map( A => wait_timer_5_port, B => n1172, Z => n1507
                           );
   U1707 : GTECH_NAND2 port map( A => n1509, B => n1510, Z => n1051);
   U1708 : GTECH_NAND2 port map( A => N131, B => n1171, Z => n1510);
   U1709 : GTECH_NAND2 port map( A => wait_timer_6_port, B => n1172, Z => n1509
                           );
   U1710 : GTECH_NAND2 port map( A => n1511, B => n1512, Z => n1050);
   U1711 : GTECH_NAND2 port map( A => N132, B => n1171, Z => n1512);
   U1712 : GTECH_NAND2 port map( A => wait_timer_7_port, B => n1172, Z => n1511
                           );
   U1713 : GTECH_NAND2 port map( A => n1513, B => n1514, Z => n1049);
   U1714 : GTECH_NAND2 port map( A => N133, B => n1171, Z => n1514);
   U1715 : GTECH_NAND2 port map( A => wait_timer_8_port, B => n1172, Z => n1513
                           );
   U1716 : GTECH_NAND2 port map( A => n1515, B => n1516, Z => n1048);
   U1717 : GTECH_NAND2 port map( A => N134, B => n1171, Z => n1516);
   U1718 : GTECH_NAND2 port map( A => wait_timer_9_port, B => n1172, Z => n1515
                           );
   U1719 : GTECH_NAND2 port map( A => n1517, B => n1518, Z => n1047);
   U1720 : GTECH_NAND2 port map( A => N135, B => n1171, Z => n1518);
   U1721 : GTECH_NAND2 port map( A => wait_timer_10_port, B => n1172, Z => 
                           n1517);
   U1722 : GTECH_NAND2 port map( A => n1519, B => n1520, Z => n1046);
   U1723 : GTECH_NAND2 port map( A => N136, B => n1171, Z => n1520);
   U1724 : GTECH_NAND2 port map( A => wait_timer_11_port, B => n1172, Z => 
                           n1519);
   U1725 : GTECH_NAND2 port map( A => n1521, B => n1522, Z => n1045);
   U1726 : GTECH_NAND2 port map( A => N137, B => n1171, Z => n1522);
   U1727 : GTECH_NAND2 port map( A => wait_timer_12_port, B => n1172, Z => 
                           n1521);
   U1728 : GTECH_NAND2 port map( A => n1523, B => n1524, Z => n1044);
   U1729 : GTECH_NAND2 port map( A => N138, B => n1171, Z => n1524);
   U1730 : GTECH_NAND2 port map( A => wait_timer_13_port, B => n1172, Z => 
                           n1523);
   U1731 : GTECH_NAND2 port map( A => n1525, B => n1526, Z => n1043);
   U1732 : GTECH_NAND2 port map( A => N139, B => n1171, Z => n1526);
   U1733 : GTECH_NAND2 port map( A => wait_timer_14_port, B => n1172, Z => 
                           n1525);
   U1734 : GTECH_NAND2 port map( A => n1527, B => n1528, Z => n1042);
   U1735 : GTECH_NAND2 port map( A => N140, B => n1171, Z => n1528);
   U1736 : GTECH_NAND2 port map( A => wait_timer_15_port, B => n1172, Z => 
                           n1527);
   U1737 : GTECH_NAND2 port map( A => n1529, B => n1530, Z => n1041);
   U1738 : GTECH_NAND2 port map( A => N141, B => n1171, Z => n1530);
   U1739 : GTECH_NAND2 port map( A => wait_timer_16_port, B => n1172, Z => 
                           n1529);
   U1740 : GTECH_NAND2 port map( A => n1531, B => n1532, Z => n1040);
   U1741 : GTECH_NAND2 port map( A => N142, B => n1171, Z => n1532);
   U1742 : GTECH_NAND2 port map( A => wait_timer_17_port, B => n1172, Z => 
                           n1531);
   U1743 : GTECH_NAND2 port map( A => n1533, B => n1534, Z => n1039);
   U1744 : GTECH_NAND2 port map( A => N143, B => n1171, Z => n1534);
   U1745 : GTECH_NAND2 port map( A => wait_timer_18_port, B => n1172, Z => 
                           n1533);
   U1746 : GTECH_NAND2 port map( A => n1535, B => n1536, Z => n1038);
   U1747 : GTECH_NAND2 port map( A => N144, B => n1171, Z => n1536);
   U1748 : GTECH_NAND2 port map( A => wait_timer_19_port, B => n1172, Z => 
                           n1535);
   U1749 : GTECH_NAND2 port map( A => n1537, B => n1538, Z => n1037);
   U1750 : GTECH_NAND2 port map( A => N145, B => n1171, Z => n1538);
   U1751 : GTECH_NAND2 port map( A => wait_timer_20_port, B => n1172, Z => 
                           n1537);
   U1752 : GTECH_NAND2 port map( A => n1539, B => n1540, Z => n1036);
   U1753 : GTECH_NAND2 port map( A => N146, B => n1171, Z => n1540);
   U1754 : GTECH_NAND2 port map( A => wait_timer_21_port, B => n1172, Z => 
                           n1539);
   U1755 : GTECH_NAND2 port map( A => n1541, B => n1542, Z => n1035);
   U1756 : GTECH_NAND2 port map( A => N147, B => n1171, Z => n1542);
   U1757 : GTECH_NAND2 port map( A => wait_timer_22_port, B => n1172, Z => 
                           n1541);
   U1758 : GTECH_NAND2 port map( A => n1543, B => n1544, Z => n1034);
   U1759 : GTECH_NAND2 port map( A => N148, B => n1171, Z => n1544);
   U1760 : GTECH_NAND2 port map( A => wait_timer_23_port, B => n1172, Z => 
                           n1543);
   U1761 : GTECH_NAND2 port map( A => n1545, B => n1546, Z => n1033);
   U1762 : GTECH_NAND2 port map( A => N149, B => n1171, Z => n1546);
   U1763 : GTECH_NAND2 port map( A => wait_timer_24_port, B => n1172, Z => 
                           n1545);
   U1764 : GTECH_NAND2 port map( A => n1547, B => n1548, Z => n1032);
   U1765 : GTECH_NAND2 port map( A => N150, B => n1171, Z => n1548);
   U1766 : GTECH_NAND2 port map( A => wait_timer_25_port, B => n1172, Z => 
                           n1547);
   U1767 : GTECH_NAND2 port map( A => n1549, B => n1550, Z => n1031);
   U1768 : GTECH_NAND2 port map( A => N151, B => n1171, Z => n1550);
   U1769 : GTECH_NAND2 port map( A => wait_timer_26_port, B => n1172, Z => 
                           n1549);
   U1770 : GTECH_NAND2 port map( A => n1551, B => n1552, Z => n1030);
   U1771 : GTECH_NAND2 port map( A => N152, B => n1171, Z => n1552);
   U1772 : GTECH_NAND2 port map( A => wait_timer_27_port, B => n1172, Z => 
                           n1551);
   U1773 : GTECH_NAND2 port map( A => n1553, B => n1554, Z => n1029);
   U1774 : GTECH_NAND2 port map( A => N153, B => n1171, Z => n1554);
   U1775 : GTECH_NAND2 port map( A => wait_timer_28_port, B => n1172, Z => 
                           n1553);
   U1776 : GTECH_NAND2 port map( A => n1555, B => n1556, Z => n1028);
   U1777 : GTECH_NAND2 port map( A => N154, B => n1171, Z => n1556);
   U1778 : GTECH_NAND2 port map( A => wait_timer_29_port, B => n1172, Z => 
                           n1555);
   U1779 : GTECH_NAND2 port map( A => n1557, B => n1558, Z => n1027);
   U1780 : GTECH_NAND2 port map( A => N155, B => n1171, Z => n1558);
   U1781 : GTECH_NAND2 port map( A => wait_timer_30_port, B => n1172, Z => 
                           n1557);
   U1782 : GTECH_NAND2 port map( A => n1559, B => n1560, Z => n1026);
   U1783 : GTECH_NAND2 port map( A => N156, B => n1171, Z => n1560);
   U1784 : GTECH_NAND2 port map( A => wait_timer_31_port, B => n1172, Z => 
                           n1559);
   U1785 : GTECH_NAND2 port map( A => n1561, B => n1562, Z => n1025);
   U1786 : GTECH_NAND2 port map( A => N157, B => n1171, Z => n1562);
   U1787 : GTECH_NAND2 port map( A => wait_timer_32_port, B => n1172, Z => 
                           n1561);
   U1788 : GTECH_NAND2 port map( A => n1563, B => n1564, Z => n1024);
   U1789 : GTECH_NAND2 port map( A => N158, B => n1171, Z => n1564);
   U1790 : GTECH_NAND2 port map( A => wait_timer_33_port, B => n1172, Z => 
                           n1563);
   U1791 : GTECH_NAND2 port map( A => n1565, B => n1566, Z => n1023);
   U1792 : GTECH_NAND2 port map( A => N159, B => n1171, Z => n1566);
   U1793 : GTECH_NAND2 port map( A => wait_timer_34_port, B => n1172, Z => 
                           n1565);
   U1794 : GTECH_NAND2 port map( A => n1567, B => n1568, Z => n1022);
   U1795 : GTECH_NAND2 port map( A => N160, B => n1171, Z => n1568);
   U1796 : GTECH_NAND2 port map( A => wait_timer_35_port, B => n1172, Z => 
                           n1567);
   U1797 : GTECH_NAND2 port map( A => n1569, B => n1570, Z => n1021);
   U1798 : GTECH_NAND2 port map( A => N161, B => n1171, Z => n1570);
   U1799 : GTECH_NAND2 port map( A => wait_timer_36_port, B => n1172, Z => 
                           n1569);
   U1800 : GTECH_NAND2 port map( A => n1571, B => n1572, Z => n1020);
   U1801 : GTECH_NAND2 port map( A => N162, B => n1171, Z => n1572);
   U1802 : GTECH_NAND2 port map( A => wait_timer_37_port, B => n1172, Z => 
                           n1571);
   U1803 : GTECH_NAND2 port map( A => n1573, B => n1574, Z => n1019);
   U1804 : GTECH_NAND2 port map( A => N163, B => n1171, Z => n1574);
   U1805 : GTECH_NAND2 port map( A => wait_timer_38_port, B => n1172, Z => 
                           n1573);
   U1806 : GTECH_NAND2 port map( A => n1575, B => n1576, Z => n1018);
   U1807 : GTECH_NAND2 port map( A => N164, B => n1171, Z => n1576);
   U1808 : GTECH_NAND2 port map( A => wait_timer_39_port, B => n1172, Z => 
                           n1575);
   U1809 : GTECH_NAND2 port map( A => n1577, B => n1578, Z => n1017);
   U1810 : GTECH_NAND2 port map( A => N165, B => n1171, Z => n1578);
   U1811 : GTECH_NAND2 port map( A => wait_timer_40_port, B => n1172, Z => 
                           n1577);
   U1812 : GTECH_NAND2 port map( A => n1579, B => n1580, Z => n1016);
   U1813 : GTECH_NAND2 port map( A => N166, B => n1171, Z => n1580);
   U1814 : GTECH_NAND2 port map( A => wait_timer_41_port, B => n1172, Z => 
                           n1579);
   U1815 : GTECH_NAND2 port map( A => n1581, B => n1582, Z => n1015);
   U1816 : GTECH_NAND2 port map( A => N167, B => n1171, Z => n1582);
   U1817 : GTECH_NAND2 port map( A => wait_timer_42_port, B => n1172, Z => 
                           n1581);
   U1818 : GTECH_NAND2 port map( A => n1583, B => n1584, Z => n1014);
   U1819 : GTECH_NAND2 port map( A => N168, B => n1171, Z => n1584);
   U1820 : GTECH_NAND2 port map( A => wait_timer_43_port, B => n1172, Z => 
                           n1583);
   U1821 : GTECH_NAND2 port map( A => n1585, B => n1586, Z => n1013);
   U1822 : GTECH_NAND2 port map( A => N169, B => n1171, Z => n1586);
   U1823 : GTECH_NAND2 port map( A => wait_timer_44_port, B => n1172, Z => 
                           n1585);
   U1824 : GTECH_NAND2 port map( A => n1587, B => n1588, Z => n1012);
   U1825 : GTECH_NAND2 port map( A => N170, B => n1171, Z => n1588);
   U1826 : GTECH_NAND2 port map( A => wait_timer_45_port, B => n1172, Z => 
                           n1587);
   U1827 : GTECH_NAND2 port map( A => n1589, B => n1590, Z => n1011);
   U1828 : GTECH_NAND2 port map( A => N171, B => n1171, Z => n1590);
   U1829 : GTECH_NAND2 port map( A => wait_timer_46_port, B => n1172, Z => 
                           n1589);
   U1830 : GTECH_NAND2 port map( A => n1591, B => n1592, Z => n1010);
   U1831 : GTECH_NAND2 port map( A => N172, B => n1171, Z => n1592);
   U1832 : GTECH_NAND2 port map( A => wait_timer_47_port, B => n1172, Z => 
                           n1591);
   U1833 : GTECH_NAND2 port map( A => n1593, B => n1594, Z => n1009);
   U1834 : GTECH_NAND2 port map( A => N173, B => n1171, Z => n1594);
   U1835 : GTECH_NAND2 port map( A => wait_timer_48_port, B => n1172, Z => 
                           n1593);
   U1836 : GTECH_NAND2 port map( A => n1595, B => n1596, Z => n1008);
   U1837 : GTECH_NAND2 port map( A => N174, B => n1171, Z => n1596);
   U1838 : GTECH_NAND2 port map( A => wait_timer_49_port, B => n1172, Z => 
                           n1595);
   U1839 : GTECH_NAND2 port map( A => n1597, B => n1598, Z => n1007);
   U1840 : GTECH_NAND2 port map( A => N175, B => n1171, Z => n1598);
   U1841 : GTECH_NAND2 port map( A => wait_timer_50_port, B => n1172, Z => 
                           n1597);
   U1842 : GTECH_NAND2 port map( A => n1599, B => n1600, Z => n1006);
   U1843 : GTECH_NAND2 port map( A => N176, B => n1171, Z => n1600);
   U1844 : GTECH_NAND2 port map( A => wait_timer_51_port, B => n1172, Z => 
                           n1599);
   U1845 : GTECH_NAND2 port map( A => n1601, B => n1602, Z => n1005);
   U1846 : GTECH_NAND2 port map( A => N177, B => n1171, Z => n1602);
   U1847 : GTECH_NAND2 port map( A => wait_timer_52_port, B => n1172, Z => 
                           n1601);
   U1848 : GTECH_NAND2 port map( A => n1603, B => n1604, Z => n1004);
   U1849 : GTECH_NAND2 port map( A => N178, B => n1171, Z => n1604);
   U1850 : GTECH_NAND2 port map( A => wait_timer_53_port, B => n1172, Z => 
                           n1603);
   U1851 : GTECH_NAND2 port map( A => n1605, B => n1606, Z => n1003);
   U1852 : GTECH_NAND2 port map( A => N179, B => n1171, Z => n1606);
   U1853 : GTECH_NAND2 port map( A => wait_timer_54_port, B => n1172, Z => 
                           n1605);
   U1854 : GTECH_NAND2 port map( A => n1607, B => n1608, Z => n1002);
   U1855 : GTECH_NAND2 port map( A => N180, B => n1171, Z => n1608);
   U1856 : GTECH_NAND2 port map( A => wait_timer_55_port, B => n1172, Z => 
                           n1607);
   U1857 : GTECH_NAND2 port map( A => n1609, B => n1610, Z => n1001);
   U1858 : GTECH_NAND2 port map( A => N181, B => n1171, Z => n1610);
   U1859 : GTECH_NAND2 port map( A => wait_timer_56_port, B => n1172, Z => 
                           n1609);
   U1860 : GTECH_NAND2 port map( A => n1611, B => n1612, Z => n1000);
   U1861 : GTECH_NAND2 port map( A => N182, B => n1171, Z => n1612);
   U1862 : GTECH_NOR2 port map( A => n1493, B => n1172, Z => n1171);
   U1863 : GTECH_NAND2 port map( A => wait_timer_57_port, B => n1172, Z => 
                           n1611);
   U1864 : GTECH_NOR2 port map( A => n1493, B => n1613, Z => n1172);
   U1865 : GTECH_NOR2 port map( A => n1496, B => cpuwait, Z => n1613);
   U1866 : GTECH_NAND2 port map( A => n1614, B => n1615, Z => n1496);
   U1867 : GTECH_NOT port map( A => n1616, Z => n1615);
   U1868 : GTECH_NAND2 port map( A => n1617, B => n1618, Z => n1616);
   U1869 : GTECH_NOR2 port map( A => n1619, B => perf_cmd_0_port, Z => n1618);
   U1870 : GTECH_NOR2 port map( A => perf_cmd_6_port, B => perf_cmd_7_port, Z 
                           => n1617);
   U1871 : GTECH_NOR2 port map( A => n1620, B => n1621, Z => n1614);
   U1872 : GTECH_NAND2 port map( A => perf_cmd_1_port, B => n2084, Z => n1621);
   U1873 : GTECH_NAND2 port map( A => reset_b, B => n1622, Z => n1493);
   U1874 : GTECH_NAND2 port map( A => n1623, B => n1624, Z => n1622);
   U1875 : GTECH_NOR2 port map( A => n1625, B => n1626, Z => n1624);
   U1876 : GTECH_NOT port map( A => n1627, Z => n1626);
   U1877 : GTECH_NOR2 port map( A => n1619, B => perf_cmd_1_port, Z => n1627);
   U1878 : GTECH_NOT port map( A => n2087, Z => n1619);
   U1879 : GTECH_NAND2 port map( A => n1166, B => n1167, Z => n1625);
   U1880 : GTECH_NOT port map( A => perf_cmd_7_port, Z => n1167);
   U1881 : GTECH_NOT port map( A => perf_cmd_6_port, Z => n1166);
   U1882 : GTECH_NOR2 port map( A => n1620, B => n1628, Z => n1623);
   U1883 : GTECH_NAND2 port map( A => perf_cmd_0_port, B => n2084, Z => n1628);
   U1884 : GTECH_NAND2 port map( A => n2085, B => n2086, Z => n1620);
   U1885 : GTECH_NAND2 port map( A => n1362, B => n1168, Z => ll_tx_sof_n);
   U1886 : GTECH_NOR2 port map( A => n1629, B => n1630, Z => n1168);
   U1887 : GTECH_NOR2 port map( A => n1264, B => n1631, Z => n1630);
   U1888 : GTECH_NOT port map( A => ll_tx_dst_rdy_n, Z => n1264);
   U1889 : GTECH_NAND2 port map( A => n1632, B => n1259, Z => ll_tx_eof_n);
   U1890 : GTECH_NOR2 port map( A => n1353, B => n1629, Z => n1632);
   U1891 : GTECH_NAND2 port map( A => n1633, B => n1634, Z => n1629);
   U1892 : GTECH_NAND2 port map( A => n1357, B => n1272, Z => n1634);
   U1893 : GTECH_NOT port map( A => n2090, Z => n1272);
   U1894 : GTECH_NAND2 port map( A => n1635, B => n1636, Z => ll_tx_data(9));
   U1895 : GTECH_NOR2 port map( A => n1637, B => n1638, Z => n1636);
   U1896 : GTECH_NAND2 port map( A => n1639, B => n1640, Z => n1638);
   U1897 : GTECH_NAND2 port map( A => n1641, B => inst_i_9_port, Z => n1640);
   U1898 : GTECH_NAND2 port map( A => pc_i_9_port, B => n1642, Z => n1639);
   U1899 : GTECH_NOR2 port map( A => n1643, B => n1644, Z => n1637);
   U1900 : GTECH_NOT port map( A => wait_timer_9_port, Z => n1643);
   U1901 : GTECH_NOR2 port map( A => n1645, B => n1646, Z => n1635);
   U1902 : GTECH_NAND2 port map( A => n1647, B => n1648, Z => n1646);
   U1903 : GTECH_NAND2 port map( A => n1649, B => wait_timer_41_port, Z => 
                           n1648);
   U1904 : GTECH_NAND2 port map( A => n1650, B => run_timer_9_port, Z => n1647)
                           ;
   U1905 : GTECH_NOR2 port map( A => n1651, B => n1652, Z => n1645);
   U1906 : GTECH_NOT port map( A => run_timer_41_port, Z => n1651);
   U1907 : GTECH_NAND2 port map( A => n1653, B => n1654, Z => ll_tx_data(8));
   U1908 : GTECH_NOR2 port map( A => n1655, B => n1656, Z => n1654);
   U1909 : GTECH_NAND2 port map( A => n1657, B => n1658, Z => n1656);
   U1910 : GTECH_NAND2 port map( A => n1641, B => inst_i_8_port, Z => n1658);
   U1911 : GTECH_NAND2 port map( A => pc_i_8_port, B => n1642, Z => n1657);
   U1912 : GTECH_NOR2 port map( A => n1659, B => n1644, Z => n1655);
   U1913 : GTECH_NOT port map( A => wait_timer_8_port, Z => n1659);
   U1914 : GTECH_NOR2 port map( A => n1660, B => n1661, Z => n1653);
   U1915 : GTECH_NAND2 port map( A => n1662, B => n1663, Z => n1661);
   U1916 : GTECH_NAND2 port map( A => n1649, B => wait_timer_40_port, Z => 
                           n1663);
   U1917 : GTECH_NAND2 port map( A => n1650, B => run_timer_8_port, Z => n1662)
                           ;
   U1918 : GTECH_NOR2 port map( A => n1664, B => n1652, Z => n1660);
   U1919 : GTECH_NOT port map( A => run_timer_40_port, Z => n1664);
   U1920 : GTECH_NAND2 port map( A => n1665, B => n1666, Z => ll_tx_data(7));
   U1921 : GTECH_NOR2 port map( A => n1667, B => n1668, Z => n1666);
   U1922 : GTECH_NAND2 port map( A => n1669, B => n1670, Z => n1668);
   U1923 : GTECH_NAND2 port map( A => n1641, B => inst_i_7_port, Z => n1670);
   U1924 : GTECH_NAND2 port map( A => pc_i_7_port, B => n1642, Z => n1669);
   U1925 : GTECH_NOR2 port map( A => n1671, B => n1644, Z => n1667);
   U1926 : GTECH_NOT port map( A => wait_timer_7_port, Z => n1671);
   U1927 : GTECH_NOR2 port map( A => n1672, B => n1673, Z => n1665);
   U1928 : GTECH_NAND2 port map( A => n1674, B => n1675, Z => n1673);
   U1929 : GTECH_NAND2 port map( A => n1649, B => wait_timer_39_port, Z => 
                           n1675);
   U1930 : GTECH_NAND2 port map( A => n1650, B => run_timer_7_port, Z => n1674)
                           ;
   U1931 : GTECH_NOR2 port map( A => n1676, B => n1652, Z => n1672);
   U1932 : GTECH_NOT port map( A => run_timer_39_port, Z => n1676);
   U1933 : GTECH_NAND2 port map( A => n1677, B => n1678, Z => ll_tx_data(6));
   U1934 : GTECH_NOR2 port map( A => n1679, B => n1680, Z => n1678);
   U1935 : GTECH_NAND2 port map( A => n1681, B => n1682, Z => n1680);
   U1936 : GTECH_NAND2 port map( A => n1641, B => inst_i_6_port, Z => n1682);
   U1937 : GTECH_NAND2 port map( A => pc_i_6_port, B => n1642, Z => n1681);
   U1938 : GTECH_NOR2 port map( A => n1683, B => n1644, Z => n1679);
   U1939 : GTECH_NOT port map( A => wait_timer_6_port, Z => n1683);
   U1940 : GTECH_NOR2 port map( A => n1684, B => n1685, Z => n1677);
   U1941 : GTECH_NAND2 port map( A => n1686, B => n1687, Z => n1685);
   U1942 : GTECH_NAND2 port map( A => n1649, B => wait_timer_38_port, Z => 
                           n1687);
   U1943 : GTECH_NAND2 port map( A => n1650, B => run_timer_6_port, Z => n1686)
                           ;
   U1944 : GTECH_NOR2 port map( A => n1688, B => n1652, Z => n1684);
   U1945 : GTECH_NOT port map( A => run_timer_38_port, Z => n1688);
   U1946 : GTECH_NAND2 port map( A => n1689, B => n1690, Z => ll_tx_data(5));
   U1947 : GTECH_NOR2 port map( A => n1691, B => n1692, Z => n1690);
   U1948 : GTECH_NAND2 port map( A => n1693, B => n1694, Z => n1692);
   U1949 : GTECH_NAND2 port map( A => n1641, B => inst_i_5_port, Z => n1694);
   U1950 : GTECH_NAND2 port map( A => pc_i_5_port, B => n1642, Z => n1693);
   U1951 : GTECH_NOR2 port map( A => n1695, B => n1644, Z => n1691);
   U1952 : GTECH_NOT port map( A => wait_timer_5_port, Z => n1695);
   U1953 : GTECH_NOR2 port map( A => n1696, B => n1697, Z => n1689);
   U1954 : GTECH_NAND2 port map( A => n1698, B => n1699, Z => n1697);
   U1955 : GTECH_NAND2 port map( A => n1649, B => wait_timer_37_port, Z => 
                           n1699);
   U1956 : GTECH_NAND2 port map( A => n1650, B => run_timer_5_port, Z => n1698)
                           ;
   U1957 : GTECH_NOR2 port map( A => n1700, B => n1652, Z => n1696);
   U1958 : GTECH_NOT port map( A => run_timer_37_port, Z => n1700);
   U1959 : GTECH_NAND2 port map( A => n1701, B => n1702, Z => ll_tx_data(4));
   U1960 : GTECH_NOR2 port map( A => n1703, B => n1704, Z => n1702);
   U1961 : GTECH_NAND2 port map( A => n1705, B => n1706, Z => n1704);
   U1962 : GTECH_NAND2 port map( A => n1641, B => inst_i_4_port, Z => n1706);
   U1963 : GTECH_NAND2 port map( A => pc_i_4_port, B => n1642, Z => n1705);
   U1964 : GTECH_NOR2 port map( A => n1707, B => n1644, Z => n1703);
   U1965 : GTECH_NOT port map( A => wait_timer_4_port, Z => n1707);
   U1966 : GTECH_NOR2 port map( A => n1708, B => n1709, Z => n1701);
   U1967 : GTECH_NAND2 port map( A => n1710, B => n1711, Z => n1709);
   U1968 : GTECH_NAND2 port map( A => n1649, B => wait_timer_36_port, Z => 
                           n1711);
   U1969 : GTECH_NAND2 port map( A => n1650, B => run_timer_4_port, Z => n1710)
                           ;
   U1970 : GTECH_NOR2 port map( A => n1712, B => n1652, Z => n1708);
   U1971 : GTECH_NOT port map( A => run_timer_36_port, Z => n1712);
   U1972 : GTECH_NAND2 port map( A => n1713, B => n1714, Z => ll_tx_data(3));
   U1973 : GTECH_NOR2 port map( A => n1715, B => n1716, Z => n1714);
   U1974 : GTECH_NAND2 port map( A => n1717, B => n1718, Z => n1716);
   U1975 : GTECH_NAND2 port map( A => n1641, B => inst_i_3_port, Z => n1718);
   U1976 : GTECH_NAND2 port map( A => pc_i_3_port, B => n1642, Z => n1717);
   U1977 : GTECH_NOR2 port map( A => n1719, B => n1644, Z => n1715);
   U1978 : GTECH_NOT port map( A => wait_timer_3_port, Z => n1719);
   U1979 : GTECH_NOR2 port map( A => n1720, B => n1721, Z => n1713);
   U1980 : GTECH_NAND2 port map( A => n1722, B => n1723, Z => n1721);
   U1981 : GTECH_NAND2 port map( A => n1649, B => wait_timer_35_port, Z => 
                           n1723);
   U1982 : GTECH_NAND2 port map( A => n1650, B => run_timer_3_port, Z => n1722)
                           ;
   U1983 : GTECH_NOR2 port map( A => n1724, B => n1652, Z => n1720);
   U1984 : GTECH_NOT port map( A => run_timer_35_port, Z => n1724);
   U1985 : GTECH_NAND2 port map( A => n1725, B => n1726, Z => ll_tx_data(31));
   U1986 : GTECH_NOR2 port map( A => n1727, B => n1728, Z => n1726);
   U1987 : GTECH_NAND2 port map( A => n1729, B => n1730, Z => n1728);
   U1988 : GTECH_NAND2 port map( A => n1641, B => inst_i_31_port, Z => n1730);
   U1989 : GTECH_NAND2 port map( A => pc_i_31_port, B => n1642, Z => n1729);
   U1990 : GTECH_NOR2 port map( A => n1731, B => n1644, Z => n1727);
   U1991 : GTECH_NOT port map( A => wait_timer_31_port, Z => n1731);
   U1992 : GTECH_NOR2 port map( A => n1732, B => n1733, Z => n1725);
   U1993 : GTECH_NAND2 port map( A => n1734, B => n1735, Z => n1733);
   U1994 : GTECH_NAND2 port map( A => n1649, B => wait_timer_63_port, Z => 
                           n1735);
   U1995 : GTECH_NAND2 port map( A => n1650, B => run_timer_31_port, Z => n1734
                           );
   U1996 : GTECH_NOR2 port map( A => n1736, B => n1652, Z => n1732);
   U1997 : GTECH_NOT port map( A => run_timer_63_port, Z => n1736);
   U1998 : GTECH_NAND2 port map( A => n1737, B => n1738, Z => ll_tx_data(30));
   U1999 : GTECH_NOR2 port map( A => n1739, B => n1740, Z => n1738);
   U2000 : GTECH_NAND2 port map( A => n1741, B => n1742, Z => n1740);
   U2001 : GTECH_NAND2 port map( A => n1641, B => inst_i_30_port, Z => n1742);
   U2002 : GTECH_NAND2 port map( A => pc_i_30_port, B => n1642, Z => n1741);
   U2003 : GTECH_NOR2 port map( A => n1743, B => n1644, Z => n1739);
   U2004 : GTECH_NOT port map( A => wait_timer_30_port, Z => n1743);
   U2005 : GTECH_NOR2 port map( A => n1744, B => n1745, Z => n1737);
   U2006 : GTECH_NAND2 port map( A => n1746, B => n1747, Z => n1745);
   U2007 : GTECH_NAND2 port map( A => n1649, B => wait_timer_62_port, Z => 
                           n1747);
   U2008 : GTECH_NAND2 port map( A => n1650, B => run_timer_30_port, Z => n1746
                           );
   U2009 : GTECH_NOR2 port map( A => n1748, B => n1652, Z => n1744);
   U2010 : GTECH_NOT port map( A => run_timer_62_port, Z => n1748);
   U2011 : GTECH_NAND2 port map( A => n1749, B => n1750, Z => ll_tx_data(2));
   U2012 : GTECH_NOR2 port map( A => n1751, B => n1752, Z => n1750);
   U2013 : GTECH_NAND2 port map( A => n1753, B => n1754, Z => n1752);
   U2014 : GTECH_NAND2 port map( A => pc_i_2_port, B => n1642, Z => n1754);
   U2015 : GTECH_NAND2 port map( A => n1755, B => wait_timer_2_port, Z => n1753
                           );
   U2016 : GTECH_NAND2 port map( A => n1756, B => n1631, Z => n1751);
   U2017 : GTECH_NAND2 port map( A => n1641, B => inst_i_2_port, Z => n1756);
   U2018 : GTECH_NOR2 port map( A => n1757, B => n1758, Z => n1749);
   U2019 : GTECH_NAND2 port map( A => n1759, B => n1760, Z => n1758);
   U2020 : GTECH_NAND2 port map( A => n1649, B => wait_timer_34_port, Z => 
                           n1760);
   U2021 : GTECH_NAND2 port map( A => n1650, B => run_timer_2_port, Z => n1759)
                           ;
   U2022 : GTECH_NOR2 port map( A => n1761, B => n1652, Z => n1757);
   U2023 : GTECH_NOT port map( A => run_timer_34_port, Z => n1761);
   U2024 : GTECH_NAND2 port map( A => n1762, B => n1763, Z => ll_tx_data(29));
   U2025 : GTECH_NOR2 port map( A => n1764, B => n1765, Z => n1763);
   U2026 : GTECH_NAND2 port map( A => n1766, B => n1767, Z => n1765);
   U2027 : GTECH_NAND2 port map( A => n1641, B => inst_i_29_port, Z => n1767);
   U2028 : GTECH_NAND2 port map( A => pc_i_29_port, B => n1642, Z => n1766);
   U2029 : GTECH_NOR2 port map( A => n1768, B => n1644, Z => n1764);
   U2030 : GTECH_NOT port map( A => wait_timer_29_port, Z => n1768);
   U2031 : GTECH_NOR2 port map( A => n1769, B => n1770, Z => n1762);
   U2032 : GTECH_NAND2 port map( A => n1771, B => n1772, Z => n1770);
   U2033 : GTECH_NAND2 port map( A => n1649, B => wait_timer_61_port, Z => 
                           n1772);
   U2034 : GTECH_NAND2 port map( A => n1650, B => run_timer_29_port, Z => n1771
                           );
   U2035 : GTECH_NOR2 port map( A => n1773, B => n1652, Z => n1769);
   U2036 : GTECH_NOT port map( A => run_timer_61_port, Z => n1773);
   U2037 : GTECH_NAND2 port map( A => n1774, B => n1775, Z => ll_tx_data(28));
   U2038 : GTECH_NOR2 port map( A => n1776, B => n1777, Z => n1775);
   U2039 : GTECH_NAND2 port map( A => n1778, B => n1779, Z => n1777);
   U2040 : GTECH_NAND2 port map( A => n1641, B => inst_i_28_port, Z => n1779);
   U2041 : GTECH_NAND2 port map( A => pc_i_28_port, B => n1642, Z => n1778);
   U2042 : GTECH_NOR2 port map( A => n1780, B => n1644, Z => n1776);
   U2043 : GTECH_NOT port map( A => wait_timer_28_port, Z => n1780);
   U2044 : GTECH_NOR2 port map( A => n1781, B => n1782, Z => n1774);
   U2045 : GTECH_NAND2 port map( A => n1783, B => n1784, Z => n1782);
   U2046 : GTECH_NAND2 port map( A => n1649, B => wait_timer_60_port, Z => 
                           n1784);
   U2047 : GTECH_NAND2 port map( A => n1650, B => run_timer_28_port, Z => n1783
                           );
   U2048 : GTECH_NOR2 port map( A => n1785, B => n1652, Z => n1781);
   U2049 : GTECH_NOT port map( A => run_timer_60_port, Z => n1785);
   U2050 : GTECH_NAND2 port map( A => n1786, B => n1787, Z => ll_tx_data(27));
   U2051 : GTECH_NOR2 port map( A => n1788, B => n1789, Z => n1787);
   U2052 : GTECH_NAND2 port map( A => n1790, B => n1791, Z => n1789);
   U2053 : GTECH_NAND2 port map( A => n1641, B => inst_i_27_port, Z => n1791);
   U2054 : GTECH_NAND2 port map( A => pc_i_27_port, B => n1642, Z => n1790);
   U2055 : GTECH_NOR2 port map( A => n1792, B => n1644, Z => n1788);
   U2056 : GTECH_NOT port map( A => wait_timer_27_port, Z => n1792);
   U2057 : GTECH_NOR2 port map( A => n1793, B => n1794, Z => n1786);
   U2058 : GTECH_NAND2 port map( A => n1795, B => n1796, Z => n1794);
   U2059 : GTECH_NAND2 port map( A => n1649, B => wait_timer_59_port, Z => 
                           n1796);
   U2060 : GTECH_NAND2 port map( A => n1650, B => run_timer_27_port, Z => n1795
                           );
   U2061 : GTECH_NOR2 port map( A => n1797, B => n1652, Z => n1793);
   U2062 : GTECH_NOT port map( A => run_timer_59_port, Z => n1797);
   U2063 : GTECH_NAND2 port map( A => n1798, B => n1799, Z => ll_tx_data(26));
   U2064 : GTECH_NOR2 port map( A => n1800, B => n1801, Z => n1799);
   U2065 : GTECH_NAND2 port map( A => n1802, B => n1803, Z => n1801);
   U2066 : GTECH_NAND2 port map( A => n1641, B => inst_i_26_port, Z => n1803);
   U2067 : GTECH_NAND2 port map( A => pc_i_26_port, B => n1642, Z => n1802);
   U2068 : GTECH_NOR2 port map( A => n1804, B => n1644, Z => n1800);
   U2069 : GTECH_NOT port map( A => wait_timer_26_port, Z => n1804);
   U2070 : GTECH_NOR2 port map( A => n1805, B => n1806, Z => n1798);
   U2071 : GTECH_NAND2 port map( A => n1807, B => n1808, Z => n1806);
   U2072 : GTECH_NAND2 port map( A => n1649, B => wait_timer_58_port, Z => 
                           n1808);
   U2073 : GTECH_NAND2 port map( A => n1650, B => run_timer_26_port, Z => n1807
                           );
   U2074 : GTECH_NOR2 port map( A => n1809, B => n1652, Z => n1805);
   U2075 : GTECH_NOT port map( A => run_timer_58_port, Z => n1809);
   U2076 : GTECH_NAND2 port map( A => n1810, B => n1811, Z => ll_tx_data(25));
   U2077 : GTECH_NOR2 port map( A => n1812, B => n1813, Z => n1811);
   U2078 : GTECH_NAND2 port map( A => n1814, B => n1815, Z => n1813);
   U2079 : GTECH_NAND2 port map( A => n1641, B => inst_i_25_port, Z => n1815);
   U2080 : GTECH_NAND2 port map( A => pc_i_25_port, B => n1642, Z => n1814);
   U2081 : GTECH_NOR2 port map( A => n1816, B => n1644, Z => n1812);
   U2082 : GTECH_NOT port map( A => wait_timer_25_port, Z => n1816);
   U2083 : GTECH_NOR2 port map( A => n1817, B => n1818, Z => n1810);
   U2084 : GTECH_NAND2 port map( A => n1819, B => n1820, Z => n1818);
   U2085 : GTECH_NAND2 port map( A => n1649, B => wait_timer_57_port, Z => 
                           n1820);
   U2086 : GTECH_NAND2 port map( A => n1650, B => run_timer_25_port, Z => n1819
                           );
   U2087 : GTECH_NOR2 port map( A => n1821, B => n1652, Z => n1817);
   U2088 : GTECH_NOT port map( A => run_timer_57_port, Z => n1821);
   U2089 : GTECH_NAND2 port map( A => n1822, B => n1823, Z => ll_tx_data(24));
   U2090 : GTECH_NOR2 port map( A => n1824, B => n1825, Z => n1823);
   U2091 : GTECH_NAND2 port map( A => n1826, B => n1827, Z => n1825);
   U2092 : GTECH_NAND2 port map( A => n1641, B => inst_i_24_port, Z => n1827);
   U2093 : GTECH_NAND2 port map( A => pc_i_24_port, B => n1642, Z => n1826);
   U2094 : GTECH_NOR2 port map( A => n1828, B => n1644, Z => n1824);
   U2095 : GTECH_NOT port map( A => wait_timer_24_port, Z => n1828);
   U2096 : GTECH_NOR2 port map( A => n1829, B => n1830, Z => n1822);
   U2097 : GTECH_NAND2 port map( A => n1831, B => n1832, Z => n1830);
   U2098 : GTECH_NAND2 port map( A => n1649, B => wait_timer_56_port, Z => 
                           n1832);
   U2099 : GTECH_NAND2 port map( A => n1650, B => run_timer_24_port, Z => n1831
                           );
   U2100 : GTECH_NOR2 port map( A => n1833, B => n1652, Z => n1829);
   U2101 : GTECH_NOT port map( A => run_timer_56_port, Z => n1833);
   U2102 : GTECH_NAND2 port map( A => n1834, B => n1835, Z => ll_tx_data(23));
   U2103 : GTECH_NOR2 port map( A => n1836, B => n1837, Z => n1835);
   U2104 : GTECH_NAND2 port map( A => n1838, B => n1839, Z => n1837);
   U2105 : GTECH_NAND2 port map( A => n1641, B => inst_i_23_port, Z => n1839);
   U2106 : GTECH_NAND2 port map( A => pc_i_23_port, B => n1642, Z => n1838);
   U2107 : GTECH_NOR2 port map( A => n1840, B => n1644, Z => n1836);
   U2108 : GTECH_NOT port map( A => wait_timer_23_port, Z => n1840);
   U2109 : GTECH_NOR2 port map( A => n1841, B => n1842, Z => n1834);
   U2110 : GTECH_NAND2 port map( A => n1843, B => n1844, Z => n1842);
   U2111 : GTECH_NAND2 port map( A => n1649, B => wait_timer_55_port, Z => 
                           n1844);
   U2112 : GTECH_NAND2 port map( A => n1650, B => run_timer_23_port, Z => n1843
                           );
   U2113 : GTECH_NOR2 port map( A => n1845, B => n1652, Z => n1841);
   U2114 : GTECH_NOT port map( A => run_timer_55_port, Z => n1845);
   U2115 : GTECH_NAND2 port map( A => n1846, B => n1847, Z => ll_tx_data(22));
   U2116 : GTECH_NOR2 port map( A => n1848, B => n1849, Z => n1847);
   U2117 : GTECH_NAND2 port map( A => n1850, B => n1851, Z => n1849);
   U2118 : GTECH_NAND2 port map( A => n1641, B => inst_i_22_port, Z => n1851);
   U2119 : GTECH_NAND2 port map( A => pc_i_22_port, B => n1642, Z => n1850);
   U2120 : GTECH_NOR2 port map( A => n1852, B => n1644, Z => n1848);
   U2121 : GTECH_NOT port map( A => wait_timer_22_port, Z => n1852);
   U2122 : GTECH_NOR2 port map( A => n1853, B => n1854, Z => n1846);
   U2123 : GTECH_NAND2 port map( A => n1855, B => n1856, Z => n1854);
   U2124 : GTECH_NAND2 port map( A => n1649, B => wait_timer_54_port, Z => 
                           n1856);
   U2125 : GTECH_NAND2 port map( A => n1650, B => run_timer_22_port, Z => n1855
                           );
   U2126 : GTECH_NOR2 port map( A => n1857, B => n1652, Z => n1853);
   U2127 : GTECH_NOT port map( A => run_timer_54_port, Z => n1857);
   U2128 : GTECH_NAND2 port map( A => n1858, B => n1859, Z => ll_tx_data(21));
   U2129 : GTECH_NOR2 port map( A => n1860, B => n1861, Z => n1859);
   U2130 : GTECH_NAND2 port map( A => n1862, B => n1863, Z => n1861);
   U2131 : GTECH_NAND2 port map( A => n1641, B => inst_i_21_port, Z => n1863);
   U2132 : GTECH_NAND2 port map( A => pc_i_21_port, B => n1642, Z => n1862);
   U2133 : GTECH_NOR2 port map( A => n1864, B => n1644, Z => n1860);
   U2134 : GTECH_NOT port map( A => wait_timer_21_port, Z => n1864);
   U2135 : GTECH_NOR2 port map( A => n1865, B => n1866, Z => n1858);
   U2136 : GTECH_NAND2 port map( A => n1867, B => n1868, Z => n1866);
   U2137 : GTECH_NAND2 port map( A => n1649, B => wait_timer_53_port, Z => 
                           n1868);
   U2138 : GTECH_NAND2 port map( A => n1650, B => run_timer_21_port, Z => n1867
                           );
   U2139 : GTECH_NOR2 port map( A => n1869, B => n1652, Z => n1865);
   U2140 : GTECH_NOT port map( A => run_timer_53_port, Z => n1869);
   U2141 : GTECH_NAND2 port map( A => n1870, B => n1871, Z => ll_tx_data(20));
   U2142 : GTECH_NOR2 port map( A => n1872, B => n1873, Z => n1871);
   U2143 : GTECH_NAND2 port map( A => n1874, B => n1875, Z => n1873);
   U2144 : GTECH_NAND2 port map( A => n1641, B => inst_i_20_port, Z => n1875);
   U2145 : GTECH_NAND2 port map( A => pc_i_20_port, B => n1642, Z => n1874);
   U2146 : GTECH_NOR2 port map( A => n1876, B => n1644, Z => n1872);
   U2147 : GTECH_NOT port map( A => wait_timer_20_port, Z => n1876);
   U2148 : GTECH_NOR2 port map( A => n1877, B => n1878, Z => n1870);
   U2149 : GTECH_NAND2 port map( A => n1879, B => n1880, Z => n1878);
   U2150 : GTECH_NAND2 port map( A => n1649, B => wait_timer_52_port, Z => 
                           n1880);
   U2151 : GTECH_NAND2 port map( A => n1650, B => run_timer_20_port, Z => n1879
                           );
   U2152 : GTECH_NOR2 port map( A => n1881, B => n1652, Z => n1877);
   U2153 : GTECH_NOT port map( A => run_timer_52_port, Z => n1881);
   U2154 : GTECH_NAND2 port map( A => n1882, B => n1883, Z => ll_tx_data(1));
   U2155 : GTECH_NOR2 port map( A => n1884, B => n1885, Z => n1883);
   U2156 : GTECH_NAND2 port map( A => n1886, B => n1887, Z => n1885);
   U2157 : GTECH_NAND2 port map( A => pc_i_1_port, B => n1642, Z => n1887);
   U2158 : GTECH_NAND2 port map( A => n1755, B => wait_timer_1_port, Z => n1886
                           );
   U2159 : GTECH_NOT port map( A => n1644, Z => n1755);
   U2160 : GTECH_NAND2 port map( A => n1888, B => n1631, Z => n1884);
   U2161 : GTECH_NAND2 port map( A => n1641, B => inst_i_1_port, Z => n1888);
   U2162 : GTECH_NOR2 port map( A => n1889, B => n1890, Z => n1882);
   U2163 : GTECH_NAND2 port map( A => n1891, B => n1892, Z => n1890);
   U2164 : GTECH_NAND2 port map( A => n1649, B => wait_timer_33_port, Z => 
                           n1892);
   U2165 : GTECH_NAND2 port map( A => n1650, B => run_timer_1_port, Z => n1891)
                           ;
   U2166 : GTECH_NOR2 port map( A => n1893, B => n1652, Z => n1889);
   U2167 : GTECH_NOT port map( A => run_timer_33_port, Z => n1893);
   U2168 : GTECH_NAND2 port map( A => n1894, B => n1895, Z => ll_tx_data(19));
   U2169 : GTECH_NOR2 port map( A => n1896, B => n1897, Z => n1895);
   U2170 : GTECH_NAND2 port map( A => n1898, B => n1899, Z => n1897);
   U2171 : GTECH_NAND2 port map( A => n1641, B => inst_i_19_port, Z => n1899);
   U2172 : GTECH_NAND2 port map( A => pc_i_19_port, B => n1642, Z => n1898);
   U2173 : GTECH_NOR2 port map( A => n1900, B => n1644, Z => n1896);
   U2174 : GTECH_NOT port map( A => wait_timer_19_port, Z => n1900);
   U2175 : GTECH_NOR2 port map( A => n1901, B => n1902, Z => n1894);
   U2176 : GTECH_NAND2 port map( A => n1903, B => n1904, Z => n1902);
   U2177 : GTECH_NAND2 port map( A => n1649, B => wait_timer_51_port, Z => 
                           n1904);
   U2178 : GTECH_NAND2 port map( A => n1650, B => run_timer_19_port, Z => n1903
                           );
   U2179 : GTECH_NOR2 port map( A => n1905, B => n1652, Z => n1901);
   U2180 : GTECH_NOT port map( A => run_timer_51_port, Z => n1905);
   U2181 : GTECH_NAND2 port map( A => n1906, B => n1907, Z => ll_tx_data(18));
   U2182 : GTECH_NOR2 port map( A => n1908, B => n1909, Z => n1907);
   U2183 : GTECH_NAND2 port map( A => n1910, B => n1911, Z => n1909);
   U2184 : GTECH_NAND2 port map( A => n1641, B => inst_i_18_port, Z => n1911);
   U2185 : GTECH_NAND2 port map( A => pc_i_18_port, B => n1642, Z => n1910);
   U2186 : GTECH_NOR2 port map( A => n1912, B => n1644, Z => n1908);
   U2187 : GTECH_NOT port map( A => wait_timer_18_port, Z => n1912);
   U2188 : GTECH_NOR2 port map( A => n1913, B => n1914, Z => n1906);
   U2189 : GTECH_NAND2 port map( A => n1915, B => n1916, Z => n1914);
   U2190 : GTECH_NAND2 port map( A => n1649, B => wait_timer_50_port, Z => 
                           n1916);
   U2191 : GTECH_NAND2 port map( A => n1650, B => run_timer_18_port, Z => n1915
                           );
   U2192 : GTECH_NOR2 port map( A => n1917, B => n1652, Z => n1913);
   U2193 : GTECH_NOT port map( A => run_timer_50_port, Z => n1917);
   U2194 : GTECH_NAND2 port map( A => n1918, B => n1919, Z => ll_tx_data(17));
   U2195 : GTECH_NOR2 port map( A => n1920, B => n1921, Z => n1919);
   U2196 : GTECH_NAND2 port map( A => n1922, B => n1923, Z => n1921);
   U2197 : GTECH_NAND2 port map( A => n1641, B => inst_i_17_port, Z => n1923);
   U2198 : GTECH_NAND2 port map( A => pc_i_17_port, B => n1642, Z => n1922);
   U2199 : GTECH_NOR2 port map( A => n1924, B => n1644, Z => n1920);
   U2200 : GTECH_NOT port map( A => wait_timer_17_port, Z => n1924);
   U2201 : GTECH_NOR2 port map( A => n1925, B => n1926, Z => n1918);
   U2202 : GTECH_NAND2 port map( A => n1927, B => n1928, Z => n1926);
   U2203 : GTECH_NAND2 port map( A => n1649, B => wait_timer_49_port, Z => 
                           n1928);
   U2204 : GTECH_NAND2 port map( A => n1650, B => run_timer_17_port, Z => n1927
                           );
   U2205 : GTECH_NOR2 port map( A => n1929, B => n1652, Z => n1925);
   U2206 : GTECH_NOT port map( A => run_timer_49_port, Z => n1929);
   U2207 : GTECH_NAND2 port map( A => n1930, B => n1931, Z => ll_tx_data(16));
   U2208 : GTECH_NOR2 port map( A => n1932, B => n1933, Z => n1931);
   U2209 : GTECH_NAND2 port map( A => n1934, B => n1935, Z => n1933);
   U2210 : GTECH_NAND2 port map( A => n1641, B => inst_i_16_port, Z => n1935);
   U2211 : GTECH_NAND2 port map( A => pc_i_16_port, B => n1642, Z => n1934);
   U2212 : GTECH_NOR2 port map( A => n1936, B => n1644, Z => n1932);
   U2213 : GTECH_NOT port map( A => wait_timer_16_port, Z => n1936);
   U2214 : GTECH_NOR2 port map( A => n1937, B => n1938, Z => n1930);
   U2215 : GTECH_NAND2 port map( A => n1939, B => n1940, Z => n1938);
   U2216 : GTECH_NAND2 port map( A => n1649, B => wait_timer_48_port, Z => 
                           n1940);
   U2217 : GTECH_NAND2 port map( A => n1650, B => run_timer_16_port, Z => n1939
                           );
   U2218 : GTECH_NOR2 port map( A => n1941, B => n1652, Z => n1937);
   U2219 : GTECH_NOT port map( A => run_timer_48_port, Z => n1941);
   U2220 : GTECH_NAND2 port map( A => n1942, B => n1943, Z => ll_tx_data(15));
   U2221 : GTECH_NOR2 port map( A => n1944, B => n1945, Z => n1943);
   U2222 : GTECH_NAND2 port map( A => n1946, B => n1947, Z => n1945);
   U2223 : GTECH_NAND2 port map( A => n1641, B => inst_i_15_port, Z => n1947);
   U2224 : GTECH_NAND2 port map( A => pc_i_15_port, B => n1642, Z => n1946);
   U2225 : GTECH_NOR2 port map( A => n1948, B => n1644, Z => n1944);
   U2226 : GTECH_NOT port map( A => wait_timer_15_port, Z => n1948);
   U2227 : GTECH_NOR2 port map( A => n1949, B => n1950, Z => n1942);
   U2228 : GTECH_NAND2 port map( A => n1951, B => n1952, Z => n1950);
   U2229 : GTECH_NAND2 port map( A => n1649, B => wait_timer_47_port, Z => 
                           n1952);
   U2230 : GTECH_NAND2 port map( A => n1650, B => run_timer_15_port, Z => n1951
                           );
   U2231 : GTECH_NOR2 port map( A => n1953, B => n1652, Z => n1949);
   U2232 : GTECH_NOT port map( A => run_timer_47_port, Z => n1953);
   U2233 : GTECH_NAND2 port map( A => n1954, B => n1955, Z => ll_tx_data(14));
   U2234 : GTECH_NOR2 port map( A => n1956, B => n1957, Z => n1955);
   U2235 : GTECH_NAND2 port map( A => n1958, B => n1959, Z => n1957);
   U2236 : GTECH_NAND2 port map( A => n1641, B => inst_i_14_port, Z => n1959);
   U2237 : GTECH_NAND2 port map( A => pc_i_14_port, B => n1642, Z => n1958);
   U2238 : GTECH_NOR2 port map( A => n1960, B => n1644, Z => n1956);
   U2239 : GTECH_NOT port map( A => wait_timer_14_port, Z => n1960);
   U2240 : GTECH_NOR2 port map( A => n1961, B => n1962, Z => n1954);
   U2241 : GTECH_NAND2 port map( A => n1963, B => n1964, Z => n1962);
   U2242 : GTECH_NAND2 port map( A => n1649, B => wait_timer_46_port, Z => 
                           n1964);
   U2243 : GTECH_NAND2 port map( A => n1650, B => run_timer_14_port, Z => n1963
                           );
   U2244 : GTECH_NOR2 port map( A => n1965, B => n1652, Z => n1961);
   U2245 : GTECH_NOT port map( A => run_timer_46_port, Z => n1965);
   U2246 : GTECH_NAND2 port map( A => n1966, B => n1967, Z => ll_tx_data(13));
   U2247 : GTECH_NOR2 port map( A => n1968, B => n1969, Z => n1967);
   U2248 : GTECH_NAND2 port map( A => n1970, B => n1971, Z => n1969);
   U2249 : GTECH_NAND2 port map( A => n1641, B => inst_i_13_port, Z => n1971);
   U2250 : GTECH_NAND2 port map( A => pc_i_13_port, B => n1642, Z => n1970);
   U2251 : GTECH_NOR2 port map( A => n1972, B => n1644, Z => n1968);
   U2252 : GTECH_NOT port map( A => wait_timer_13_port, Z => n1972);
   U2253 : GTECH_NOR2 port map( A => n1973, B => n1974, Z => n1966);
   U2254 : GTECH_NAND2 port map( A => n1975, B => n1976, Z => n1974);
   U2255 : GTECH_NAND2 port map( A => n1649, B => wait_timer_45_port, Z => 
                           n1976);
   U2256 : GTECH_NAND2 port map( A => n1650, B => run_timer_13_port, Z => n1975
                           );
   U2257 : GTECH_NOR2 port map( A => n1977, B => n1652, Z => n1973);
   U2258 : GTECH_NOT port map( A => run_timer_45_port, Z => n1977);
   U2259 : GTECH_NAND2 port map( A => n1978, B => n1979, Z => ll_tx_data(12));
   U2260 : GTECH_NOR2 port map( A => n1980, B => n1981, Z => n1979);
   U2261 : GTECH_NAND2 port map( A => n1982, B => n1983, Z => n1981);
   U2262 : GTECH_NAND2 port map( A => n1641, B => inst_i_12_port, Z => n1983);
   U2263 : GTECH_NAND2 port map( A => pc_i_12_port, B => n1642, Z => n1982);
   U2264 : GTECH_NOR2 port map( A => n1984, B => n1644, Z => n1980);
   U2265 : GTECH_NOT port map( A => wait_timer_12_port, Z => n1984);
   U2266 : GTECH_NOR2 port map( A => n1985, B => n1986, Z => n1978);
   U2267 : GTECH_NAND2 port map( A => n1987, B => n1988, Z => n1986);
   U2268 : GTECH_NAND2 port map( A => n1649, B => wait_timer_44_port, Z => 
                           n1988);
   U2269 : GTECH_NAND2 port map( A => n1650, B => run_timer_12_port, Z => n1987
                           );
   U2270 : GTECH_NOR2 port map( A => n1989, B => n1652, Z => n1985);
   U2271 : GTECH_NOT port map( A => run_timer_44_port, Z => n1989);
   U2272 : GTECH_NAND2 port map( A => n1990, B => n1991, Z => ll_tx_data(11));
   U2273 : GTECH_NOR2 port map( A => n1992, B => n1993, Z => n1991);
   U2274 : GTECH_NAND2 port map( A => n1994, B => n1995, Z => n1993);
   U2275 : GTECH_NAND2 port map( A => n1641, B => inst_i_11_port, Z => n1995);
   U2276 : GTECH_NAND2 port map( A => pc_i_11_port, B => n1642, Z => n1994);
   U2277 : GTECH_NOR2 port map( A => n1996, B => n1644, Z => n1992);
   U2278 : GTECH_NOT port map( A => wait_timer_11_port, Z => n1996);
   U2279 : GTECH_NOR2 port map( A => n1997, B => n1998, Z => n1990);
   U2280 : GTECH_NAND2 port map( A => n1999, B => n2000, Z => n1998);
   U2281 : GTECH_NAND2 port map( A => n1649, B => wait_timer_43_port, Z => 
                           n2000);
   U2282 : GTECH_NAND2 port map( A => n1650, B => run_timer_11_port, Z => n1999
                           );
   U2283 : GTECH_NOR2 port map( A => n2001, B => n1652, Z => n1997);
   U2284 : GTECH_NOT port map( A => run_timer_43_port, Z => n2001);
   U2285 : GTECH_NAND2 port map( A => n2002, B => n2003, Z => ll_tx_data(10));
   U2286 : GTECH_NOR2 port map( A => n2004, B => n2005, Z => n2003);
   U2287 : GTECH_NAND2 port map( A => n2006, B => n2007, Z => n2005);
   U2288 : GTECH_NAND2 port map( A => n1641, B => inst_i_10_port, Z => n2007);
   U2289 : GTECH_NAND2 port map( A => pc_i_10_port, B => n1642, Z => n2006);
   U2290 : GTECH_NOR2 port map( A => n2008, B => n1644, Z => n2004);
   U2291 : GTECH_NOT port map( A => wait_timer_10_port, Z => n2008);
   U2292 : GTECH_NOR2 port map( A => n2009, B => n2010, Z => n2002);
   U2293 : GTECH_NAND2 port map( A => n2011, B => n2012, Z => n2010);
   U2294 : GTECH_NAND2 port map( A => n1649, B => wait_timer_42_port, Z => 
                           n2012);
   U2295 : GTECH_NAND2 port map( A => n1650, B => run_timer_10_port, Z => n2011
                           );
   U2296 : GTECH_NOR2 port map( A => n2013, B => n1652, Z => n2009);
   U2297 : GTECH_NOT port map( A => run_timer_42_port, Z => n2013);
   U2298 : GTECH_NAND2 port map( A => n2014, B => n2015, Z => ll_tx_data(0));
   U2299 : GTECH_NOR2 port map( A => n2016, B => n2017, Z => n2015);
   U2300 : GTECH_NAND2 port map( A => n2018, B => n2019, Z => n2017);
   U2301 : GTECH_NAND2 port map( A => n1641, B => inst_i_0_port, Z => n2019);
   U2302 : GTECH_NOT port map( A => n2020, Z => n1641);
   U2303 : GTECH_NAND2 port map( A => n2021, B => n2022, Z => n2020);
   U2304 : GTECH_NOR2 port map( A => n2023, B => n2024, Z => n2022);
   U2305 : GTECH_NAND2 port map( A => n2025, B => n2026, Z => n2024);
   U2306 : GTECH_NOR2 port map( A => n2027, B => n2028, Z => n2021);
   U2307 : GTECH_NAND2 port map( A => pc_i_0_port, B => n1642, Z => n2018);
   U2308 : GTECH_NOT port map( A => n2029, Z => n1642);
   U2309 : GTECH_NAND2 port map( A => n2030, B => n2031, Z => n2029);
   U2310 : GTECH_NOR2 port map( A => n1362, B => n2032, Z => n2031);
   U2311 : GTECH_NAND2 port map( A => n2027, B => n2026, Z => n2032);
   U2312 : GTECH_NOR2 port map( A => n2023, B => n2028, Z => n2030);
   U2313 : GTECH_NOR2 port map( A => n2033, B => n1644, Z => n2016);
   U2314 : GTECH_NAND2 port map( A => n2034, B => n2035, Z => n1644);
   U2315 : GTECH_NOR2 port map( A => n2027, B => n2026, Z => n2034);
   U2316 : GTECH_NOT port map( A => wait_timer_0_port, Z => n2033);
   U2317 : GTECH_NOR2 port map( A => n2036, B => n2037, Z => n2014);
   U2318 : GTECH_NAND2 port map( A => n2038, B => n2039, Z => n2037);
   U2319 : GTECH_NAND2 port map( A => n1649, B => wait_timer_32_port, Z => 
                           n2039);
   U2320 : GTECH_NOT port map( A => n2040, Z => n1649);
   U2321 : GTECH_NAND2 port map( A => n2041, B => n2035, Z => n2040);
   U2322 : GTECH_NOR2 port map( A => word_count_0_port, B => n2026, Z => n2041)
                           ;
   U2323 : GTECH_NOT port map( A => word_count_1_port, Z => n2026);
   U2324 : GTECH_NAND2 port map( A => n1650, B => run_timer_0_port, Z => n2038)
                           ;
   U2325 : GTECH_NOT port map( A => n2042, Z => n1650);
   U2326 : GTECH_NAND2 port map( A => n2043, B => n2035, Z => n2042);
   U2327 : GTECH_NOR2 port map( A => word_count_1_port, B => n2027, Z => n2043)
                           ;
   U2328 : GTECH_NOT port map( A => word_count_0_port, Z => n2027);
   U2329 : GTECH_NOR2 port map( A => n2044, B => n1652, Z => n2036);
   U2330 : GTECH_NAND2 port map( A => n2045, B => n2035, Z => n1652);
   U2331 : GTECH_NOR2 port map( A => n2046, B => n2023, Z => n2035);
   U2332 : GTECH_NOT port map( A => n2047, Z => n2023);
   U2333 : GTECH_NAND2 port map( A => n2028, B => n2025, Z => n2046);
   U2334 : GTECH_NOT port map( A => word_count_2_port, Z => n2028);
   U2335 : GTECH_NOR2 port map( A => word_count_1_port, B => word_count_0_port,
                           Z => n2045);
   U2336 : GTECH_NOT port map( A => run_timer_32_port, Z => n2044);
   U2337 : GTECH_NAND2 port map( A => n2048, B => n1633, Z => ll_rx_dst_rdy_n);
   U2338 : GTECH_NOT port map( A => n2049, Z => n1633);
   U2339 : GTECH_NOR2 port map( A => n1357, B => n2050, Z => n2049);
   U2340 : GTECH_NOR2 port map( A => n2025, B => n1353, Z => n2048);
   U2341 : GTECH_NOT port map( A => n1631, Z => n1353);
   U2342 : GTECH_NAND2 port map( A => n2090, B => n1357, Z => n1631);
   U2343 : GTECH_NOR2 port map( A => n2089, B => n2088, Z => n1357);
   U2344 : GTECH_NOT port map( A => n1362, Z => n2025);
   U2345 : GTECH_NAND2 port map( A => n2050, B => n2088, Z => n1362);
   U2346 : GTECH_NOR2 port map( A => n2090, B => n2089, Z => n2050);
   U2347 : GTECH_NOR2 port map( A => ll_tx_dst_rdy_n, B => n1259, Z => N811);
   U2348 : GTECH_NOR2 port map( A => n2051, B => n2052, Z => n1259);
   U2349 : GTECH_NAND2 port map( A => n2047, B => n2053, Z => n2052);
   U2350 : GTECH_NOR2 port map( A => ll_tx_dst_rdy_n, B => word_count_1_port, Z
                           => n2053);
   U2351 : GTECH_NOR2 port map( A => n2054, B => n2055, Z => n2047);
   U2352 : GTECH_NAND2 port map( A => n2056, B => n2057, Z => n2055);
   U2353 : GTECH_NOR2 port map( A => n2058, B => n2059, Z => n2057);
   U2354 : GTECH_NAND2 port map( A => n2060, B => n2061, Z => n2059);
   U2355 : GTECH_NOR2 port map( A => word_count_27_port, B => 
                           word_count_28_port, Z => n2061);
   U2356 : GTECH_NOR2 port map( A => word_count_29_port, B => 
                           word_count_30_port, Z => n2060);
   U2357 : GTECH_NAND2 port map( A => n2062, B => n2063, Z => n2058);
   U2358 : GTECH_NOR2 port map( A => word_count_25_port, B => 
                           word_count_26_port, Z => n2063);
   U2359 : GTECH_NOT port map( A => word_count_24_port, Z => n2062);
   U2360 : GTECH_NOR2 port map( A => n2064, B => n2065, Z => n2056);
   U2361 : GTECH_NAND2 port map( A => n2066, B => n2067, Z => n2065);
   U2362 : GTECH_NOR2 port map( A => word_count_6_port, B => word_count_7_port,
                           Z => n2067);
   U2363 : GTECH_NOR2 port map( A => word_count_8_port, B => word_count_9_port,
                           Z => n2066);
   U2364 : GTECH_NAND2 port map( A => n2068, B => n2069, Z => n2064);
   U2365 : GTECH_NOR2 port map( A => word_count_31_port, B => word_count_3_port
                           , Z => n2069);
   U2366 : GTECH_NOR2 port map( A => word_count_4_port, B => word_count_5_port,
                           Z => n2068);
   U2367 : GTECH_NAND2 port map( A => n2070, B => n2071, Z => n2054);
   U2368 : GTECH_NOR2 port map( A => n2072, B => n2073, Z => n2071);
   U2369 : GTECH_NAND2 port map( A => n2074, B => n2075, Z => n2073);
   U2370 : GTECH_NOR2 port map( A => word_count_13_port, B => 
                           word_count_14_port, Z => n2075);
   U2371 : GTECH_NOR2 port map( A => word_count_15_port, B => 
                           word_count_16_port, Z => n2074);
   U2372 : GTECH_NAND2 port map( A => n2076, B => n2077, Z => n2072);
   U2373 : GTECH_NOR2 port map( A => word_count_11_port, B => 
                           word_count_12_port, Z => n2077);
   U2374 : GTECH_NOT port map( A => word_count_10_port, Z => n2076);
   U2375 : GTECH_NOR2 port map( A => n2078, B => n2079, Z => n2070);
   U2376 : GTECH_NAND2 port map( A => n2080, B => n2081, Z => n2079);
   U2377 : GTECH_NOR2 port map( A => word_count_20_port, B => 
                           word_count_21_port, Z => n2081);
   U2378 : GTECH_NOR2 port map( A => word_count_22_port, B => 
                           word_count_23_port, Z => n2080);
   U2379 : GTECH_NAND2 port map( A => n2082, B => n2083, Z => n2078);
   U2380 : GTECH_NOR2 port map( A => word_count_18_port, B => 
                           word_count_19_port, Z => n2083);
   U2381 : GTECH_NOT port map( A => word_count_17_port, Z => n2082);
   U2382 : GTECH_NAND2 port map( A => word_count_0_port, B => word_count_2_port
                           , Z => n2051);

end SYN_IMP;

library IEEE;

use IEEE.std_logic_1164.all;

package CONV_PACK_itag3a is

-- define attributes
attribute ENUM_ENCODING : STRING;

end CONV_PACK_itag3a;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_itag3a.all;

entity axi4s_to_ll_bridge_DW01_add_0 is

   port( A, B : in std_logic_vector (31 downto 0);  CI : in std_logic;  SUM : 
         out std_logic_vector (31 downto 0);  CO : out std_logic);

end axi4s_to_ll_bridge_DW01_add_0;

architecture SYN_rpl of axi4s_to_ll_bridge_DW01_add_0 is

   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   signal SUM_31_port, SUM_30_port, SUM_29_port, SUM_28_port, SUM_27_port, 
      SUM_26_port, SUM_25_port, SUM_24_port, SUM_23_port, SUM_22_port, 
      SUM_21_port, SUM_20_port, SUM_19_port, SUM_18_port, SUM_17_port, 
      SUM_16_port, SUM_15_port, SUM_14_port, SUM_13_port, SUM_12_port, 
      SUM_11_port, SUM_10_port, SUM_9_port, SUM_8_port, SUM_7_port, SUM_6_port,
      SUM_5_port, SUM_4_port, SUM_3_port, n1, n2, n3, n4, n5, n6, n7, n8, n9, 
      n10, n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24
      , n25, n26, n27, SUM_2_port, n29, n30, n31, n32, n33, n34, n35, n36, n37,
      n38, n39, n40, n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52
      , n53, n54, n55, n56, n57, n58, n59, n60, n61, n62, n63, n64, n65, n66, 
      n67, n68, n69, n70, n71, n72, n73, n74, n75, n76, n77, n78, n79, n80, n81
      , n82, n83, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94, n95, 
      n96, n97, n98, n99, n100, n101, n102, n103, n104, n105, n106, n107, n108,
      n109, n110, n111, n112, n113, n114, n115, n116, n117, n118, n119, n120, 
      n121, n122, n123, n124, n125, n126, n127, n128, n129, n130, n131, n132, 
      n133, n134, n135, n136, n137, n138, n139, n140, n141, n142, n143 : 
      std_logic;

begin
   SUM <= ( SUM_31_port, SUM_30_port, SUM_29_port, SUM_28_port, SUM_27_port, 
      SUM_26_port, SUM_25_port, SUM_24_port, SUM_23_port, SUM_22_port, 
      SUM_21_port, SUM_20_port, SUM_19_port, SUM_18_port, SUM_17_port, 
      SUM_16_port, SUM_15_port, SUM_14_port, SUM_13_port, SUM_12_port, 
      SUM_11_port, SUM_10_port, SUM_9_port, SUM_8_port, SUM_7_port, SUM_6_port,
      SUM_5_port, SUM_4_port, SUM_3_port, SUM_2_port, A(1), A(0) );
   
   U1 : GTECH_NOT port map( A => n56, Z => n1);
   U2 : GTECH_NOT port map( A => n59, Z => n2);
   U3 : GTECH_NOT port map( A => n50, Z => n3);
   U4 : GTECH_NOT port map( A => n53, Z => n4);
   U5 : GTECH_NOT port map( A => n140, Z => n5);
   U6 : GTECH_NOT port map( A => n47, Z => n6);
   U7 : GTECH_NOT port map( A => n134, Z => n7);
   U8 : GTECH_NOT port map( A => n131, Z => n8);
   U9 : GTECH_NOT port map( A => n127, Z => n9);
   U10 : GTECH_NOT port map( A => n124, Z => n10);
   U11 : GTECH_NOT port map( A => n120, Z => n11);
   U12 : GTECH_NOT port map( A => n117, Z => n12);
   U13 : GTECH_NOT port map( A => n113, Z => n13);
   U14 : GTECH_NOT port map( A => n110, Z => n14);
   U15 : GTECH_NOT port map( A => n106, Z => n15);
   U16 : GTECH_NOT port map( A => n103, Z => n16);
   U17 : GTECH_NOT port map( A => n99, Z => n17);
   U18 : GTECH_NOT port map( A => n96, Z => n18);
   U19 : GTECH_NOT port map( A => n92, Z => n19);
   U20 : GTECH_NOT port map( A => n89, Z => n20);
   U21 : GTECH_NOT port map( A => n85, Z => n21);
   U22 : GTECH_NOT port map( A => n82, Z => n22);
   U23 : GTECH_NOT port map( A => n78, Z => n23);
   U24 : GTECH_NOT port map( A => n75, Z => n24);
   U25 : GTECH_NOT port map( A => n73, Z => n25);
   U26 : GTECH_NOT port map( A => n68, Z => n26);
   U27 : GTECH_NOT port map( A => n67, Z => n27);
   U28 : GTECH_NOT port map( A => A(2), Z => SUM_2_port);
   U29 : GTECH_NOT port map( A => n62, Z => n29);
   U30 : GTECH_NOT port map( A => A(3), Z => n30);
   U31 : GTECH_NOT port map( A => A(5), Z => n31);
   U32 : GTECH_NOT port map( A => A(7), Z => n32);
   U33 : GTECH_NOT port map( A => A(9), Z => n33);
   U34 : GTECH_NOT port map( A => A(11), Z => n34);
   U35 : GTECH_NOT port map( A => A(13), Z => n35);
   U36 : GTECH_NOT port map( A => A(15), Z => n36);
   U37 : GTECH_NOT port map( A => A(17), Z => n37);
   U38 : GTECH_NOT port map( A => A(19), Z => n38);
   U39 : GTECH_NOT port map( A => A(21), Z => n39);
   U40 : GTECH_NOT port map( A => A(23), Z => n40);
   U41 : GTECH_NOT port map( A => A(25), Z => n41);
   U42 : GTECH_NOT port map( A => A(27), Z => n42);
   U43 : GTECH_NOT port map( A => A(29), Z => n43);
   U44 : GTECH_NOT port map( A => A(30), Z => n44);
   U45 : GTECH_NAND2 port map( A => n45, B => n46, Z => SUM_9_port);
   U46 : GTECH_NAND2 port map( A => A(9), B => n47, Z => n46);
   U47 : GTECH_NAND2 port map( A => n6, B => n33, Z => n45);
   U48 : GTECH_NAND2 port map( A => n3, B => n48, Z => SUM_8_port);
   U49 : GTECH_NAND2 port map( A => A(8), B => n49, Z => n48);
   U50 : GTECH_NOR2 port map( A => n49, B => A(8), Z => n50);
   U51 : GTECH_NAND2 port map( A => A(7), B => n4, Z => n49);
   U52 : GTECH_NAND2 port map( A => n51, B => n52, Z => SUM_7_port);
   U53 : GTECH_NAND2 port map( A => A(7), B => n53, Z => n52);
   U54 : GTECH_NAND2 port map( A => n4, B => n32, Z => n51);
   U55 : GTECH_NAND2 port map( A => n1, B => n54, Z => SUM_6_port);
   U56 : GTECH_NAND2 port map( A => A(6), B => n55, Z => n54);
   U57 : GTECH_NOR2 port map( A => n55, B => A(6), Z => n56);
   U58 : GTECH_NAND2 port map( A => A(5), B => n2, Z => n55);
   U59 : GTECH_NAND2 port map( A => n57, B => n58, Z => SUM_5_port);
   U60 : GTECH_NAND2 port map( A => A(5), B => n59, Z => n58);
   U61 : GTECH_NAND2 port map( A => n2, B => n31, Z => n57);
   U62 : GTECH_NAND2 port map( A => n29, B => n60, Z => SUM_4_port);
   U63 : GTECH_NAND2 port map( A => A(4), B => n61, Z => n60);
   U64 : GTECH_NOR2 port map( A => n61, B => A(4), Z => n62);
   U65 : GTECH_NAND2 port map( A => A(3), B => A(2), Z => n61);
   U66 : GTECH_NAND2 port map( A => n63, B => n64, Z => SUM_3_port);
   U67 : GTECH_NAND2 port map( A => A(3), B => SUM_2_port, Z => n64);
   U68 : GTECH_NAND2 port map( A => A(2), B => n30, Z => n63);
   U69 : GTECH_NAND2 port map( A => n27, B => n65, Z => SUM_31_port);
   U70 : GTECH_NAND2 port map( A => A(31), B => n66, Z => n65);
   U71 : GTECH_NOR2 port map( A => n66, B => A(31), Z => n67);
   U72 : GTECH_NAND2 port map( A => A(30), B => n68, Z => n66);
   U73 : GTECH_NAND2 port map( A => n69, B => n70, Z => SUM_30_port);
   U74 : GTECH_NAND2 port map( A => A(30), B => n26, Z => n70);
   U75 : GTECH_NAND2 port map( A => n68, B => n44, Z => n69);
   U76 : GTECH_NOR2 port map( A => n43, B => n71, Z => n68);
   U77 : GTECH_NAND2 port map( A => n25, B => n72, Z => SUM_29_port);
   U78 : GTECH_NAND2 port map( A => A(29), B => n71, Z => n72);
   U79 : GTECH_NOR2 port map( A => n71, B => A(29), Z => n73);
   U80 : GTECH_NAND2 port map( A => n74, B => A(28), Z => n71);
   U81 : GTECH_NOR2 port map( A => n75, B => n42, Z => n74);
   U82 : GTECH_NAND2 port map( A => n23, B => n76, Z => SUM_28_port);
   U83 : GTECH_NAND2 port map( A => A(28), B => n77, Z => n76);
   U84 : GTECH_NOR2 port map( A => n77, B => A(28), Z => n78);
   U85 : GTECH_NAND2 port map( A => A(27), B => n24, Z => n77);
   U86 : GTECH_NAND2 port map( A => n79, B => n80, Z => SUM_27_port);
   U87 : GTECH_NAND2 port map( A => A(27), B => n75, Z => n80);
   U88 : GTECH_NAND2 port map( A => n24, B => n42, Z => n79);
   U89 : GTECH_NAND2 port map( A => n81, B => A(26), Z => n75);
   U90 : GTECH_NOR2 port map( A => n82, B => n41, Z => n81);
   U91 : GTECH_NAND2 port map( A => n21, B => n83, Z => SUM_26_port);
   U92 : GTECH_NAND2 port map( A => A(26), B => n84, Z => n83);
   U93 : GTECH_NOR2 port map( A => n84, B => A(26), Z => n85);
   U94 : GTECH_NAND2 port map( A => A(25), B => n22, Z => n84);
   U95 : GTECH_NAND2 port map( A => n86, B => n87, Z => SUM_25_port);
   U96 : GTECH_NAND2 port map( A => A(25), B => n82, Z => n87);
   U97 : GTECH_NAND2 port map( A => n22, B => n41, Z => n86);
   U98 : GTECH_NAND2 port map( A => n88, B => A(24), Z => n82);
   U99 : GTECH_NOR2 port map( A => n89, B => n40, Z => n88);
   U100 : GTECH_NAND2 port map( A => n19, B => n90, Z => SUM_24_port);
   U101 : GTECH_NAND2 port map( A => A(24), B => n91, Z => n90);
   U102 : GTECH_NOR2 port map( A => n91, B => A(24), Z => n92);
   U103 : GTECH_NAND2 port map( A => A(23), B => n20, Z => n91);
   U104 : GTECH_NAND2 port map( A => n93, B => n94, Z => SUM_23_port);
   U105 : GTECH_NAND2 port map( A => A(23), B => n89, Z => n94);
   U106 : GTECH_NAND2 port map( A => n20, B => n40, Z => n93);
   U107 : GTECH_NAND2 port map( A => n95, B => A(22), Z => n89);
   U108 : GTECH_NOR2 port map( A => n96, B => n39, Z => n95);
   U109 : GTECH_NAND2 port map( A => n17, B => n97, Z => SUM_22_port);
   U110 : GTECH_NAND2 port map( A => A(22), B => n98, Z => n97);
   U111 : GTECH_NOR2 port map( A => n98, B => A(22), Z => n99);
   U112 : GTECH_NAND2 port map( A => A(21), B => n18, Z => n98);
   U113 : GTECH_NAND2 port map( A => n100, B => n101, Z => SUM_21_port);
   U114 : GTECH_NAND2 port map( A => A(21), B => n96, Z => n101);
   U115 : GTECH_NAND2 port map( A => n18, B => n39, Z => n100);
   U116 : GTECH_NAND2 port map( A => n102, B => A(20), Z => n96);
   U117 : GTECH_NOR2 port map( A => n103, B => n38, Z => n102);
   U118 : GTECH_NAND2 port map( A => n15, B => n104, Z => SUM_20_port);
   U119 : GTECH_NAND2 port map( A => A(20), B => n105, Z => n104);
   U120 : GTECH_NOR2 port map( A => n105, B => A(20), Z => n106);
   U121 : GTECH_NAND2 port map( A => A(19), B => n16, Z => n105);
   U122 : GTECH_NAND2 port map( A => n107, B => n108, Z => SUM_19_port);
   U123 : GTECH_NAND2 port map( A => A(19), B => n103, Z => n108);
   U124 : GTECH_NAND2 port map( A => n16, B => n38, Z => n107);
   U125 : GTECH_NAND2 port map( A => n109, B => A(18), Z => n103);
   U126 : GTECH_NOR2 port map( A => n110, B => n37, Z => n109);
   U127 : GTECH_NAND2 port map( A => n13, B => n111, Z => SUM_18_port);
   U128 : GTECH_NAND2 port map( A => A(18), B => n112, Z => n111);
   U129 : GTECH_NOR2 port map( A => n112, B => A(18), Z => n113);
   U130 : GTECH_NAND2 port map( A => A(17), B => n14, Z => n112);
   U131 : GTECH_NAND2 port map( A => n114, B => n115, Z => SUM_17_port);
   U132 : GTECH_NAND2 port map( A => A(17), B => n110, Z => n115);
   U133 : GTECH_NAND2 port map( A => n14, B => n37, Z => n114);
   U134 : GTECH_NAND2 port map( A => n116, B => A(16), Z => n110);
   U135 : GTECH_NOR2 port map( A => n117, B => n36, Z => n116);
   U136 : GTECH_NAND2 port map( A => n11, B => n118, Z => SUM_16_port);
   U137 : GTECH_NAND2 port map( A => A(16), B => n119, Z => n118);
   U138 : GTECH_NOR2 port map( A => n119, B => A(16), Z => n120);
   U139 : GTECH_NAND2 port map( A => A(15), B => n12, Z => n119);
   U140 : GTECH_NAND2 port map( A => n121, B => n122, Z => SUM_15_port);
   U141 : GTECH_NAND2 port map( A => A(15), B => n117, Z => n122);
   U142 : GTECH_NAND2 port map( A => n12, B => n36, Z => n121);
   U143 : GTECH_NAND2 port map( A => n123, B => A(14), Z => n117);
   U144 : GTECH_NOR2 port map( A => n124, B => n35, Z => n123);
   U145 : GTECH_NAND2 port map( A => n9, B => n125, Z => SUM_14_port);
   U146 : GTECH_NAND2 port map( A => A(14), B => n126, Z => n125);
   U147 : GTECH_NOR2 port map( A => n126, B => A(14), Z => n127);
   U148 : GTECH_NAND2 port map( A => A(13), B => n10, Z => n126);
   U149 : GTECH_NAND2 port map( A => n128, B => n129, Z => SUM_13_port);
   U150 : GTECH_NAND2 port map( A => A(13), B => n124, Z => n129);
   U151 : GTECH_NAND2 port map( A => n10, B => n35, Z => n128);
   U152 : GTECH_NAND2 port map( A => n130, B => A(12), Z => n124);
   U153 : GTECH_NOR2 port map( A => n131, B => n34, Z => n130);
   U154 : GTECH_NAND2 port map( A => n7, B => n132, Z => SUM_12_port);
   U155 : GTECH_NAND2 port map( A => A(12), B => n133, Z => n132);
   U156 : GTECH_NOR2 port map( A => n133, B => A(12), Z => n134);
   U157 : GTECH_NAND2 port map( A => A(11), B => n8, Z => n133);
   U158 : GTECH_NAND2 port map( A => n135, B => n136, Z => SUM_11_port);
   U159 : GTECH_NAND2 port map( A => A(11), B => n131, Z => n136);
   U160 : GTECH_NAND2 port map( A => n8, B => n34, Z => n135);
   U161 : GTECH_NAND2 port map( A => n137, B => A(10), Z => n131);
   U162 : GTECH_NOR2 port map( A => n33, B => n47, Z => n137);
   U163 : GTECH_NAND2 port map( A => n5, B => n138, Z => SUM_10_port);
   U164 : GTECH_NAND2 port map( A => A(10), B => n139, Z => n138);
   U165 : GTECH_NOR2 port map( A => n139, B => A(10), Z => n140);
   U166 : GTECH_NAND2 port map( A => n6, B => A(9), Z => n139);
   U167 : GTECH_NAND2 port map( A => n141, B => A(8), Z => n47);
   U168 : GTECH_NOR2 port map( A => n53, B => n32, Z => n141);
   U169 : GTECH_NAND2 port map( A => n142, B => A(6), Z => n53);
   U170 : GTECH_NOR2 port map( A => n59, B => n31, Z => n142);
   U171 : GTECH_NAND2 port map( A => n143, B => A(4), Z => n59);
   U172 : GTECH_NOR2 port map( A => SUM_2_port, B => n30, Z => n143);

end SYN_rpl;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_itag3a.all;

entity axi4s_to_ll_bridge_DW01_sub_2 is

   port( A, B : in std_logic_vector (7 downto 0);  CI : in std_logic;  DIFF : 
         out std_logic_vector (7 downto 0);  CO : out std_logic);

end axi4s_to_ll_bridge_DW01_sub_2;

architecture SYN_rpl of axi4s_to_ll_bridge_DW01_sub_2 is

   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   signal n1, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, 
      n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31
      , n32, n33, n34, n35 : std_logic;

begin
   
   U1 : GTECH_NOT port map( A => n31, Z => n1);
   U2 : GTECH_NOT port map( A => n25, Z => DIFF(5));
   U3 : GTECH_NOT port map( A => n24, Z => n3);
   U4 : GTECH_NOT port map( A => n23, Z => n4);
   U5 : GTECH_NOT port map( A => n34, Z => n5);
   U6 : GTECH_NOT port map( A => n20, Z => n6);
   U7 : GTECH_NOT port map( A => n14, Z => n7);
   U8 : GTECH_NOT port map( A => B(0), Z => n8);
   U9 : GTECH_NOT port map( A => A(3), Z => n9);
   U10 : GTECH_NOT port map( A => A(5), Z => n10);
   U11 : GTECH_NOT port map( A => A(7), Z => n11);
   U12 : GTECH_NAND2 port map( A => n12, B => n13, Z => DIFF(7));
   U13 : GTECH_NAND2 port map( A => A(7), B => n7, Z => n13);
   U14 : GTECH_NAND2 port map( A => n14, B => n11, Z => n12);
   U15 : GTECH_NOR2 port map( A => n15, B => n16, Z => n14);
   U16 : GTECH_NAND2 port map( A => n17, B => n18, Z => n16);
   U17 : GTECH_NOR2 port map( A => A(3), B => A(4), Z => n18);
   U18 : GTECH_NOR2 port map( A => A(5), B => A(6), Z => n17);
   U19 : GTECH_NAND2 port map( A => n19, B => n20, Z => n15);
   U20 : GTECH_NOR2 port map( A => A(1), B => A(2), Z => n19);
   U21 : GTECH_NAND2 port map( A => n4, B => n21, Z => DIFF(6));
   U22 : GTECH_NAND2 port map( A => A(6), B => n22, Z => n21);
   U23 : GTECH_NOR2 port map( A => n22, B => A(6), Z => n23);
   U24 : GTECH_NAND2 port map( A => n24, B => n10, Z => n22);
   U25 : GTECH_NOR2 port map( A => n26, B => n27, Z => n25);
   U26 : GTECH_NOR2 port map( A => n10, B => n24, Z => n27);
   U27 : GTECH_NOR2 port map( A => n3, B => A(5), Z => n26);
   U28 : GTECH_NAND2 port map( A => n3, B => n28, Z => DIFF(4));
   U29 : GTECH_NAND2 port map( A => A(4), B => n29, Z => n28);
   U30 : GTECH_NOR2 port map( A => n29, B => A(4), Z => n24);
   U31 : GTECH_NAND2 port map( A => n29, B => n30, Z => DIFF(3));
   U32 : GTECH_NAND2 port map( A => A(3), B => n1, Z => n30);
   U33 : GTECH_NAND2 port map( A => n31, B => n9, Z => n29);
   U34 : GTECH_NAND2 port map( A => n1, B => n32, Z => DIFF(2));
   U35 : GTECH_NAND2 port map( A => A(2), B => n5, Z => n32);
   U36 : GTECH_NOR2 port map( A => n5, B => A(2), Z => n31);
   U37 : GTECH_NAND2 port map( A => n5, B => n33, Z => DIFF(1));
   U38 : GTECH_NAND2 port map( A => A(1), B => n6, Z => n33);
   U39 : GTECH_NOR2 port map( A => n6, B => A(1), Z => n34);
   U40 : GTECH_NAND2 port map( A => n6, B => n35, Z => DIFF(0));
   U41 : GTECH_NAND2 port map( A => A(0), B => n8, Z => n35);
   U42 : GTECH_NOR2 port map( A => n8, B => A(0), Z => n20);

end SYN_rpl;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_itag3a.all;

entity axi4s_to_ll_bridge_DW01_sub_1 is

   port( A, B : in std_logic_vector (31 downto 0);  CI : in std_logic;  DIFF : 
         out std_logic_vector (31 downto 0);  CO : out std_logic);

end axi4s_to_ll_bridge_DW01_sub_1;

architecture SYN_rpl of axi4s_to_ll_bridge_DW01_sub_1 is

   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   signal DIFF_31_port, DIFF_30_port, DIFF_29_port, DIFF_28_port, DIFF_27_port,
      DIFF_26_port, DIFF_25_port, DIFF_24_port, DIFF_23_port, DIFF_22_port, 
      DIFF_21_port, DIFF_20_port, DIFF_19_port, DIFF_18_port, DIFF_17_port, 
      DIFF_16_port, DIFF_15_port, DIFF_14_port, DIFF_13_port, DIFF_12_port, 
      DIFF_11_port, DIFF_10_port, DIFF_9_port, DIFF_8_port, DIFF_7_port, 
      DIFF_6_port, DIFF_5_port, DIFF_4_port, DIFF_3_port, n1, n2, n3, n4, n5, 
      n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, DIFF_2_port, n17, n18, n19,
      n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34
      , n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47, n48, 
      n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61, n62, n63
      , n64, n65, n66, n67, n68, n69, n70, n71, n72, n73, n74, n75, n76, n77, 
      n78, n79, n80, n81, n82, n83, n84, n85, n86, n87, n88 : std_logic;

begin
   DIFF <= ( DIFF_31_port, DIFF_30_port, DIFF_29_port, DIFF_28_port, 
      DIFF_27_port, DIFF_26_port, DIFF_25_port, DIFF_24_port, DIFF_23_port, 
      DIFF_22_port, DIFF_21_port, DIFF_20_port, DIFF_19_port, DIFF_18_port, 
      DIFF_17_port, DIFF_16_port, DIFF_15_port, DIFF_14_port, DIFF_13_port, 
      DIFF_12_port, DIFF_11_port, DIFF_10_port, DIFF_9_port, DIFF_8_port, 
      DIFF_7_port, DIFF_6_port, DIFF_5_port, DIFF_4_port, DIFF_3_port, 
      DIFF_2_port, A(1), A(0) );
   
   U1 : GTECH_NOT port map( A => n43, Z => n1);
   U2 : GTECH_NOT port map( A => n39, Z => n2);
   U3 : GTECH_NOT port map( A => n35, Z => n3);
   U4 : GTECH_NOT port map( A => n87, Z => n4);
   U5 : GTECH_NOT port map( A => n83, Z => n5);
   U6 : GTECH_NOT port map( A => n79, Z => n6);
   U7 : GTECH_NOT port map( A => n75, Z => n7);
   U8 : GTECH_NOT port map( A => n71, Z => n8);
   U9 : GTECH_NOT port map( A => n67, Z => n9);
   U10 : GTECH_NOT port map( A => n63, Z => n10);
   U11 : GTECH_NOT port map( A => n59, Z => n11);
   U12 : GTECH_NOT port map( A => n55, Z => n12);
   U13 : GTECH_NOT port map( A => n49, Z => n13);
   U14 : GTECH_NOT port map( A => n47, Z => n14);
   U15 : GTECH_NOT port map( A => n53, Z => n15);
   U16 : GTECH_NOT port map( A => A(2), Z => DIFF_2_port);
   U17 : GTECH_NOT port map( A => A(3), Z => n17);
   U18 : GTECH_NOT port map( A => A(5), Z => n18);
   U19 : GTECH_NOT port map( A => A(7), Z => n19);
   U20 : GTECH_NOT port map( A => A(9), Z => n20);
   U21 : GTECH_NOT port map( A => A(11), Z => n21);
   U22 : GTECH_NOT port map( A => A(13), Z => n22);
   U23 : GTECH_NOT port map( A => A(15), Z => n23);
   U24 : GTECH_NOT port map( A => A(17), Z => n24);
   U25 : GTECH_NOT port map( A => A(19), Z => n25);
   U26 : GTECH_NOT port map( A => A(21), Z => n26);
   U27 : GTECH_NOT port map( A => A(23), Z => n27);
   U28 : GTECH_NOT port map( A => A(25), Z => n28);
   U29 : GTECH_NOT port map( A => A(27), Z => n29);
   U30 : GTECH_NOT port map( A => A(30), Z => n30);
   U31 : GTECH_NAND2 port map( A => n31, B => n32, Z => DIFF_9_port);
   U32 : GTECH_NAND2 port map( A => A(9), B => n3, Z => n32);
   U33 : GTECH_NAND2 port map( A => n3, B => n33, Z => DIFF_8_port);
   U34 : GTECH_NAND2 port map( A => A(8), B => n34, Z => n33);
   U35 : GTECH_NAND2 port map( A => n34, B => n36, Z => DIFF_7_port);
   U36 : GTECH_NAND2 port map( A => A(7), B => n2, Z => n36);
   U37 : GTECH_NAND2 port map( A => n2, B => n37, Z => DIFF_6_port);
   U38 : GTECH_NAND2 port map( A => A(6), B => n38, Z => n37);
   U39 : GTECH_NAND2 port map( A => n38, B => n40, Z => DIFF_5_port);
   U40 : GTECH_NAND2 port map( A => A(5), B => n1, Z => n40);
   U41 : GTECH_NAND2 port map( A => n1, B => n41, Z => DIFF_4_port);
   U42 : GTECH_NAND2 port map( A => A(4), B => n42, Z => n41);
   U43 : GTECH_NAND2 port map( A => n42, B => n44, Z => DIFF_3_port);
   U44 : GTECH_NAND2 port map( A => A(3), B => A(2), Z => n44);
   U45 : GTECH_NAND2 port map( A => n14, B => n45, Z => DIFF_31_port);
   U46 : GTECH_NAND2 port map( A => A(31), B => n46, Z => n45);
   U47 : GTECH_NOR2 port map( A => n46, B => A(31), Z => n47);
   U48 : GTECH_NAND2 port map( A => n46, B => n48, Z => DIFF_30_port);
   U49 : GTECH_NAND2 port map( A => A(30), B => n13, Z => n48);
   U50 : GTECH_NAND2 port map( A => n49, B => n30, Z => n46);
   U51 : GTECH_NAND2 port map( A => n13, B => n50, Z => DIFF_29_port);
   U52 : GTECH_NAND2 port map( A => A(29), B => n15, Z => n50);
   U53 : GTECH_NOR2 port map( A => n15, B => A(29), Z => n49);
   U54 : GTECH_NAND2 port map( A => n15, B => n51, Z => DIFF_28_port);
   U55 : GTECH_NAND2 port map( A => A(28), B => n52, Z => n51);
   U56 : GTECH_NOR2 port map( A => n52, B => A(28), Z => n53);
   U57 : GTECH_NAND2 port map( A => n52, B => n54, Z => DIFF_27_port);
   U58 : GTECH_NAND2 port map( A => A(27), B => n12, Z => n54);
   U59 : GTECH_NAND2 port map( A => n55, B => n29, Z => n52);
   U60 : GTECH_NAND2 port map( A => n12, B => n56, Z => DIFF_26_port);
   U61 : GTECH_NAND2 port map( A => A(26), B => n57, Z => n56);
   U62 : GTECH_NOR2 port map( A => n57, B => A(26), Z => n55);
   U63 : GTECH_NAND2 port map( A => n57, B => n58, Z => DIFF_25_port);
   U64 : GTECH_NAND2 port map( A => A(25), B => n11, Z => n58);
   U65 : GTECH_NAND2 port map( A => n59, B => n28, Z => n57);
   U66 : GTECH_NAND2 port map( A => n11, B => n60, Z => DIFF_24_port);
   U67 : GTECH_NAND2 port map( A => A(24), B => n61, Z => n60);
   U68 : GTECH_NOR2 port map( A => n61, B => A(24), Z => n59);
   U69 : GTECH_NAND2 port map( A => n61, B => n62, Z => DIFF_23_port);
   U70 : GTECH_NAND2 port map( A => A(23), B => n10, Z => n62);
   U71 : GTECH_NAND2 port map( A => n63, B => n27, Z => n61);
   U72 : GTECH_NAND2 port map( A => n10, B => n64, Z => DIFF_22_port);
   U73 : GTECH_NAND2 port map( A => A(22), B => n65, Z => n64);
   U74 : GTECH_NOR2 port map( A => n65, B => A(22), Z => n63);
   U75 : GTECH_NAND2 port map( A => n65, B => n66, Z => DIFF_21_port);
   U76 : GTECH_NAND2 port map( A => A(21), B => n9, Z => n66);
   U77 : GTECH_NAND2 port map( A => n67, B => n26, Z => n65);
   U78 : GTECH_NAND2 port map( A => n9, B => n68, Z => DIFF_20_port);
   U79 : GTECH_NAND2 port map( A => A(20), B => n69, Z => n68);
   U80 : GTECH_NOR2 port map( A => n69, B => A(20), Z => n67);
   U81 : GTECH_NAND2 port map( A => n69, B => n70, Z => DIFF_19_port);
   U82 : GTECH_NAND2 port map( A => A(19), B => n8, Z => n70);
   U83 : GTECH_NAND2 port map( A => n71, B => n25, Z => n69);
   U84 : GTECH_NAND2 port map( A => n8, B => n72, Z => DIFF_18_port);
   U85 : GTECH_NAND2 port map( A => A(18), B => n73, Z => n72);
   U86 : GTECH_NOR2 port map( A => n73, B => A(18), Z => n71);
   U87 : GTECH_NAND2 port map( A => n73, B => n74, Z => DIFF_17_port);
   U88 : GTECH_NAND2 port map( A => A(17), B => n7, Z => n74);
   U89 : GTECH_NAND2 port map( A => n75, B => n24, Z => n73);
   U90 : GTECH_NAND2 port map( A => n7, B => n76, Z => DIFF_16_port);
   U91 : GTECH_NAND2 port map( A => A(16), B => n77, Z => n76);
   U92 : GTECH_NOR2 port map( A => n77, B => A(16), Z => n75);
   U93 : GTECH_NAND2 port map( A => n77, B => n78, Z => DIFF_15_port);
   U94 : GTECH_NAND2 port map( A => A(15), B => n6, Z => n78);
   U95 : GTECH_NAND2 port map( A => n79, B => n23, Z => n77);
   U96 : GTECH_NAND2 port map( A => n6, B => n80, Z => DIFF_14_port);
   U97 : GTECH_NAND2 port map( A => A(14), B => n81, Z => n80);
   U98 : GTECH_NOR2 port map( A => n81, B => A(14), Z => n79);
   U99 : GTECH_NAND2 port map( A => n81, B => n82, Z => DIFF_13_port);
   U100 : GTECH_NAND2 port map( A => A(13), B => n5, Z => n82);
   U101 : GTECH_NAND2 port map( A => n83, B => n22, Z => n81);
   U102 : GTECH_NAND2 port map( A => n5, B => n84, Z => DIFF_12_port);
   U103 : GTECH_NAND2 port map( A => A(12), B => n85, Z => n84);
   U104 : GTECH_NOR2 port map( A => n85, B => A(12), Z => n83);
   U105 : GTECH_NAND2 port map( A => n85, B => n86, Z => DIFF_11_port);
   U106 : GTECH_NAND2 port map( A => A(11), B => n4, Z => n86);
   U107 : GTECH_NAND2 port map( A => n87, B => n21, Z => n85);
   U108 : GTECH_NAND2 port map( A => n4, B => n88, Z => DIFF_10_port);
   U109 : GTECH_NAND2 port map( A => A(10), B => n31, Z => n88);
   U110 : GTECH_NOR2 port map( A => n31, B => A(10), Z => n87);
   U111 : GTECH_NAND2 port map( A => n35, B => n20, Z => n31);
   U112 : GTECH_NOR2 port map( A => n34, B => A(8), Z => n35);
   U113 : GTECH_NAND2 port map( A => n39, B => n19, Z => n34);
   U114 : GTECH_NOR2 port map( A => n38, B => A(6), Z => n39);
   U115 : GTECH_NAND2 port map( A => n43, B => n18, Z => n38);
   U116 : GTECH_NOR2 port map( A => n42, B => A(4), Z => n43);
   U117 : GTECH_NAND2 port map( A => n17, B => DIFF_2_port, Z => n42);

end SYN_rpl;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_itag3a.all;

entity axi4s_to_ll_bridge_DW01_sub_0 is

   port( A, B : in std_logic_vector (7 downto 0);  CI : in std_logic;  DIFF : 
         out std_logic_vector (7 downto 0);  CO : out std_logic);

end axi4s_to_ll_bridge_DW01_sub_0;

architecture SYN_rpl of axi4s_to_ll_bridge_DW01_sub_0 is

   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   signal DIFF_7_port, DIFF_6_port, DIFF_5_port, DIFF_4_port, DIFF_3_port, n2, 
      n3, n4, DIFF_2_port, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, 
      n17, n18, n19, n20, n21, n22, n23, n24, n25 : std_logic;

begin
   DIFF <= ( DIFF_7_port, DIFF_6_port, DIFF_5_port, DIFF_4_port, DIFF_3_port, 
      DIFF_2_port, A(1), A(0) );
   
   U1 : GTECH_NOT port map( A => n15, Z => DIFF_3_port);
   U2 : GTECH_NOT port map( A => n10, Z => n2);
   U3 : GTECH_NOT port map( A => n18, Z => n3);
   U4 : GTECH_NOT port map( A => n21, Z => n4);
   U5 : GTECH_NOT port map( A => A(2), Z => DIFF_2_port);
   U6 : GTECH_NOT port map( A => A(3), Z => n6);
   U7 : GTECH_NOT port map( A => A(5), Z => n7);
   U8 : GTECH_NOT port map( A => A(6), Z => n8);
   U9 : GTECH_NAND2 port map( A => n9, B => n2, Z => DIFF_7_port);
   U10 : GTECH_NOR2 port map( A => n11, B => A(7), Z => n10);
   U11 : GTECH_NAND2 port map( A => A(7), B => n11, Z => n9);
   U12 : GTECH_NAND2 port map( A => n12, B => n13, Z => n11);
   U13 : GTECH_NOR2 port map( A => n14, B => A(4), Z => n13);
   U14 : GTECH_NAND2 port map( A => n8, B => n7, Z => n14);
   U15 : GTECH_NOR2 port map( A => A(2), B => n15, Z => n12);
   U16 : GTECH_NAND2 port map( A => n16, B => n17, Z => DIFF_6_port);
   U17 : GTECH_NAND2 port map( A => A(6), B => n3, Z => n17);
   U18 : GTECH_NAND2 port map( A => n18, B => n8, Z => n16);
   U19 : GTECH_NOR2 port map( A => n4, B => A(5), Z => n18);
   U20 : GTECH_NAND2 port map( A => n19, B => n20, Z => DIFF_5_port);
   U21 : GTECH_NAND2 port map( A => A(5), B => n4, Z => n20);
   U22 : GTECH_NAND2 port map( A => n21, B => n7, Z => n19);
   U23 : GTECH_NAND2 port map( A => n4, B => n22, Z => DIFF_4_port);
   U24 : GTECH_NAND2 port map( A => A(4), B => n23, Z => n22);
   U25 : GTECH_NOR2 port map( A => n23, B => A(4), Z => n21);
   U26 : GTECH_NAND2 port map( A => n6, B => DIFF_2_port, Z => n23);
   U27 : GTECH_NAND2 port map( A => n24, B => n25, Z => n15);
   U28 : GTECH_NAND2 port map( A => A(3), B => DIFF_2_port, Z => n25);
   U29 : GTECH_NAND2 port map( A => A(2), B => n6, Z => n24);

end SYN_rpl;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_itag3a.all;

entity axi4s_to_ll_bridge_DW01_cmp6_0 is

   port( A, B : in std_logic_vector (32 downto 0);  TC : in std_logic;  LT, GT,
         EQ, LE, GE, NE : out std_logic);

end axi4s_to_ll_bridge_DW01_cmp6_0;

architecture SYN_rpl of axi4s_to_ll_bridge_DW01_cmp6_0 is

   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   signal n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16
      , n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, 
      n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45
      , n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, 
      n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71 : std_logic;

begin
   
   U1 : GTECH_NOT port map( A => n48, Z => n1);
   U2 : GTECH_NOT port map( A => A(1), Z => n2);
   U3 : GTECH_NOT port map( A => A(2), Z => n3);
   U4 : GTECH_NOT port map( A => A(3), Z => n4);
   U5 : GTECH_NOT port map( A => A(4), Z => n5);
   U6 : GTECH_NOT port map( A => A(5), Z => n6);
   U7 : GTECH_NOT port map( A => A(6), Z => n7);
   U8 : GTECH_NOT port map( A => A(7), Z => n8);
   U9 : GTECH_NOT port map( A => B(7), Z => n9);
   U10 : GTECH_NOT port map( A => B(6), Z => n10);
   U11 : GTECH_NOT port map( A => B(5), Z => n11);
   U12 : GTECH_NOT port map( A => B(4), Z => n12);
   U13 : GTECH_NOT port map( A => B(3), Z => n13);
   U14 : GTECH_NOT port map( A => B(2), Z => n14);
   U15 : GTECH_NOT port map( A => B(0), Z => n15);
   U16 : GTECH_NOR2 port map( A => n16, B => n17, Z => EQ);
   U17 : GTECH_NAND2 port map( A => n18, B => n19, Z => n17);
   U18 : GTECH_NOR2 port map( A => n20, B => n21, Z => n19);
   U19 : GTECH_NAND2 port map( A => n22, B => n23, Z => n21);
   U20 : GTECH_NOR2 port map( A => B(13), B => B(12), Z => n23);
   U21 : GTECH_NOR2 port map( A => B(11), B => B(10), Z => n22);
   U22 : GTECH_NAND2 port map( A => n24, B => n25, Z => n20);
   U23 : GTECH_NOR2 port map( A => B(17), B => B(16), Z => n25);
   U24 : GTECH_NOR2 port map( A => B(15), B => B(14), Z => n24);
   U25 : GTECH_NOR2 port map( A => n26, B => n27, Z => n18);
   U26 : GTECH_NAND2 port map( A => n28, B => n29, Z => n27);
   U27 : GTECH_NOR2 port map( A => n30, B => n31, Z => n29);
   U28 : GTECH_NAND2 port map( A => n32, B => n33, Z => n31);
   U29 : GTECH_NAND2 port map( A => B(5), B => n6, Z => n33);
   U30 : GTECH_NAND2 port map( A => A(5), B => n11, Z => n32);
   U31 : GTECH_NAND2 port map( A => n34, B => n35, Z => n30);
   U32 : GTECH_NAND2 port map( A => B(4), B => n5, Z => n35);
   U33 : GTECH_NAND2 port map( A => A(4), B => n12, Z => n34);
   U34 : GTECH_NOR2 port map( A => n36, B => n37, Z => n28);
   U35 : GTECH_NAND2 port map( A => n38, B => n39, Z => n37);
   U36 : GTECH_NAND2 port map( A => B(7), B => n8, Z => n39);
   U37 : GTECH_NAND2 port map( A => A(7), B => n9, Z => n38);
   U38 : GTECH_NAND2 port map( A => n40, B => n41, Z => n36);
   U39 : GTECH_NAND2 port map( A => B(6), B => n7, Z => n41);
   U40 : GTECH_NAND2 port map( A => A(6), B => n10, Z => n40);
   U41 : GTECH_NAND2 port map( A => n42, B => n43, Z => n26);
   U42 : GTECH_NOR2 port map( A => n1, B => n44, Z => n43);
   U43 : GTECH_NOR2 port map( A => n45, B => n46, Z => n44);
   U44 : GTECH_NOR2 port map( A => n47, B => n2, Z => n46);
   U45 : GTECH_NOR2 port map( A => B(1), B => n47, Z => n45);
   U46 : GTECH_NOR2 port map( A => n15, B => A(0), Z => n47);
   U47 : GTECH_NAND2 port map( A => n49, B => n50, Z => n48);
   U48 : GTECH_NAND2 port map( A => n2, B => n51, Z => n50);
   U49 : GTECH_NAND2 port map( A => n51, B => B(1), Z => n49);
   U50 : GTECH_NAND2 port map( A => A(0), B => n15, Z => n51);
   U51 : GTECH_NOR2 port map( A => n52, B => n53, Z => n42);
   U52 : GTECH_NAND2 port map( A => n54, B => n55, Z => n53);
   U53 : GTECH_NAND2 port map( A => B(3), B => n4, Z => n55);
   U54 : GTECH_NAND2 port map( A => A(3), B => n13, Z => n54);
   U55 : GTECH_NAND2 port map( A => n56, B => n57, Z => n52);
   U56 : GTECH_NAND2 port map( A => B(2), B => n3, Z => n57);
   U57 : GTECH_NAND2 port map( A => A(2), B => n14, Z => n56);
   U58 : GTECH_NAND2 port map( A => n58, B => n59, Z => n16);
   U59 : GTECH_NOR2 port map( A => n60, B => n61, Z => n59);
   U60 : GTECH_NAND2 port map( A => n62, B => n63, Z => n61);
   U61 : GTECH_NOR2 port map( A => B(29), B => B(28), Z => n63);
   U62 : GTECH_NOR2 port map( A => B(27), B => B(26), Z => n62);
   U63 : GTECH_NAND2 port map( A => n64, B => n65, Z => n60);
   U64 : GTECH_NOR2 port map( A => B(9), B => B(8), Z => n65);
   U65 : GTECH_NOR2 port map( A => B(31), B => B(30), Z => n64);
   U66 : GTECH_NOR2 port map( A => n66, B => n67, Z => n58);
   U67 : GTECH_NAND2 port map( A => n68, B => n69, Z => n67);
   U68 : GTECH_NOR2 port map( A => B(21), B => B(20), Z => n69);
   U69 : GTECH_NOR2 port map( A => B(19), B => B(18), Z => n68);
   U70 : GTECH_NAND2 port map( A => n70, B => n71, Z => n66);
   U71 : GTECH_NOR2 port map( A => B(25), B => B(24), Z => n71);
   U72 : GTECH_NOR2 port map( A => B(23), B => B(22), Z => n70);

end SYN_rpl;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_itag3a.all;

entity axi4s_to_ll_bridge_DW01_dec_0 is

   port( A : in std_logic_vector (7 downto 0);  SUM : out std_logic_vector (7 
         downto 0));

end axi4s_to_ll_bridge_DW01_dec_0;

architecture SYN_rpl of axi4s_to_ll_bridge_DW01_dec_0 is

   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   signal SUM_7_port, SUM_6_port, SUM_5_port, SUM_4_port, SUM_3_port, 
      SUM_2_port, SUM_1_port, n1, n2, n3, n4, SUM_0_port, n6, n7, n8, n9, n10, 
      n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22 : std_logic;

begin
   SUM <= ( SUM_7_port, SUM_6_port, SUM_5_port, SUM_4_port, SUM_3_port, 
      SUM_2_port, SUM_1_port, SUM_0_port );
   
   U1 : GTECH_NOT port map( A => n19, Z => n1);
   U2 : GTECH_NOT port map( A => n13, Z => n2);
   U3 : GTECH_NOT port map( A => n11, Z => n3);
   U4 : GTECH_NOT port map( A => n17, Z => n4);
   U5 : GTECH_NOT port map( A => A(0), Z => SUM_0_port);
   U6 : GTECH_NOT port map( A => A(1), Z => n6);
   U7 : GTECH_NOT port map( A => A(3), Z => n7);
   U8 : GTECH_NOT port map( A => A(6), Z => n8);
   U9 : GTECH_NAND2 port map( A => n3, B => n9, Z => SUM_7_port);
   U10 : GTECH_NAND2 port map( A => A(7), B => n10, Z => n9);
   U11 : GTECH_NOR2 port map( A => n10, B => A(7), Z => n11);
   U12 : GTECH_NAND2 port map( A => n10, B => n12, Z => SUM_6_port);
   U13 : GTECH_NAND2 port map( A => A(6), B => n2, Z => n12);
   U14 : GTECH_NAND2 port map( A => n13, B => n8, Z => n10);
   U15 : GTECH_NAND2 port map( A => n2, B => n14, Z => SUM_5_port);
   U16 : GTECH_NAND2 port map( A => A(5), B => n4, Z => n14);
   U17 : GTECH_NOR2 port map( A => n4, B => A(5), Z => n13);
   U18 : GTECH_NAND2 port map( A => n4, B => n15, Z => SUM_4_port);
   U19 : GTECH_NAND2 port map( A => A(4), B => n16, Z => n15);
   U20 : GTECH_NOR2 port map( A => n16, B => A(4), Z => n17);
   U21 : GTECH_NAND2 port map( A => n16, B => n18, Z => SUM_3_port);
   U22 : GTECH_NAND2 port map( A => A(3), B => n1, Z => n18);
   U23 : GTECH_NAND2 port map( A => n19, B => n7, Z => n16);
   U24 : GTECH_NAND2 port map( A => n1, B => n20, Z => SUM_2_port);
   U25 : GTECH_NAND2 port map( A => A(2), B => n21, Z => n20);
   U26 : GTECH_NOR2 port map( A => n21, B => A(2), Z => n19);
   U27 : GTECH_NAND2 port map( A => n21, B => n22, Z => SUM_1_port);
   U28 : GTECH_NAND2 port map( A => A(1), B => A(0), Z => n22);
   U29 : GTECH_NAND2 port map( A => n6, B => SUM_0_port, Z => n21);

end SYN_rpl;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_itag3a.all;

entity wb_to_axi4s_bridge_08_1000000 is

   port( clk, reset_b : in std_logic;  SLV_DAT_O : out std_logic_vector (31 
         downto 0);  SLV_DAT_I : in std_logic_vector (31 downto 0);  SEL_I : in
         std_logic_vector (3 downto 0);  CYC_I, STB_I, WE_I : in std_logic;  
         ACK_O, RTY_O : out std_logic;  ADR_I : in std_logic_vector (0 to 31); 
         axi4s_tx_tdata : out std_logic_vector (31 downto 0);  axi4s_tx_tstrb, 
         axi4s_tx_tkeep : out std_logic_vector (3 downto 0);  axi4s_tx_tvalid, 
         axi4s_tx_tlast : out std_logic;  axi4s_tx_tid : out std_logic_vector 
         (2 downto 0);  axi4s_tx_tdest : out std_logic_vector (4 downto 0);  
         axi4s_tx_tuser : out std_logic_vector (3 downto 0);  axi4s_tx_tready :
         in std_logic;  axi4s_rx_tdata : in std_logic_vector (31 downto 0);  
         axi4s_rx_tstrb, axi4s_rx_tkeep : in std_logic_vector (3 downto 0);  
         axi4s_rx_tvalid, axi4s_rx_tlast : in std_logic;  axi4s_rx_tid : in 
         std_logic_vector (2 downto 0);  axi4s_rx_tdest : in std_logic_vector 
         (4 downto 0);  axi4s_rx_tuser : in std_logic_vector (3 downto 0);  
         axi4s_rx_tready : out std_logic);

end wb_to_axi4s_bridge_08_1000000;

architecture SYN_beh of wb_to_axi4s_bridge_08_1000000 is

   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_FD1
      port( D, CP : in std_logic;  Q, QN : out std_logic);
   end component;
   
   signal X_Logic0_port, SLV_DAT_O_31_port, SLV_DAT_O_30_port, 
      SLV_DAT_O_29_port, SLV_DAT_O_28_port, SLV_DAT_O_27_port, 
      SLV_DAT_O_26_port, SLV_DAT_O_25_port, SLV_DAT_O_24_port, 
      SLV_DAT_O_23_port, SLV_DAT_O_22_port, SLV_DAT_O_21_port, 
      SLV_DAT_O_20_port, SLV_DAT_O_19_port, SLV_DAT_O_18_port, 
      SLV_DAT_O_17_port, SLV_DAT_O_16_port, SLV_DAT_O_15_port, 
      SLV_DAT_O_14_port, SLV_DAT_O_13_port, SLV_DAT_O_12_port, 
      SLV_DAT_O_11_port, SLV_DAT_O_10_port, SLV_DAT_O_9_port, SLV_DAT_O_8_port,
      SLV_DAT_O_7_port, SLV_DAT_O_6_port, SLV_DAT_O_5_port, SLV_DAT_O_4_port, 
      SLV_DAT_O_3_port, SLV_DAT_O_2_port, SLV_DAT_O_1_port, SLV_DAT_O_0_port, 
      axi4s_tx_tstrb_0_port, axi4s_tx_tstrb_1_port, axi4s_tx_tstrb_2_port, 
      axi4s_tx_tstrb_3_port, n404, n405, n406, n407, n408, n409, n410, n411, 
      n412, n413, n414, n415, n416, n417, n418, n419, n420, n421, n422, n423, 
      n424, n425, n426, n427, n428, n429, n430, n431, n432, n433, n434, n435, 
      n436, n437, n438, n439, n440, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, 
      n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25
      , n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, 
      n40, n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54
      , n55, n56, n57, n58, n59, n60, n61, n62, n63, n64, n65, n66, n67, n68, 
      n69, n70, n71, n72, n73, n74, n75, n76, n77, n78, n79, n80, n81, n82, n83
      , n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94, n95, n96, n97, 
      n98, n99, n100, n101, n102, n103, n104, n105, n106, n107, n108, n109, 
      n110, n111, n112, n113, n114, n115, n116, n117, n118, n119, n120, n121, 
      n122, n123, n124, n125, n126, n127, n128, n129, n130, n131, n132, n133, 
      n134, n135, n136, n137, n138, n139, n140, n141, n142, n143, n144, n145, 
      n146, n147, n148, n149, n150, n151, n152, n153, n154, n155, n156, n157, 
      n158, n159, n160, n161, n162, n163, n164, n165, n166, n167, n168, n169, 
      n170, n171, n172, n173, n174, n175, n176, n177, n178, n179, n180, n181, 
      n182, n183, n184, n185, n186, n187, n188, n189, n190, n191, n192, n193, 
      n194, n195, n196, n197, n198, n199, n200, n201, n202, n203, n204, n205, 
      n206, n207, n208, n209, n210, n211, n212, n213, n214, n215, n216, n217, 
      n218, n219, n220, n221, n222, n223, n224, n225, n226, n227, n228, n229, 
      n230, n231, n232, n233, n234, n235, n236, n237, n238, n239, n240, n241, 
      n242, n243, n244, n245, n246, n247, n248, n249, n250, n251, n252, n253, 
      n254, n255, n256, n257, n258, n259, n260, n261, n262, n263, n264, n265, 
      n266, n267, n268, n269, n270, n271, n272, n273, n274, n275, n276, n277, 
      n278, n279, n280, n281, n282, n283, n284, n285, n286, n287, n288, n289, 
      n290, n291, n292, n293, n294, n295, n296, n297, n298, n299, n300, n301, 
      n302, n303, n304, n305, n306, n307, n308, n309, n310, n311, n312, n313, 
      n314, n315, n316, n317, n318, n319, n320, n321, n322, n323, n324, n325, 
      n326, n327, n328, n329, n330, n331, n332, n333, n334, n335, n336, n337, 
      n338, n339, n340, n341, n342, n343, n344, n345, n346, n347, n348, n349, 
      n350, n351, n352, n353, n354, n355, n356, n357, n358, n359, n360, n361, 
      n362, n363, n364, n365, n366, n367, n368, n369, n370, n371, n372, n373, 
      n374, n375, n376, n_1119, n_1120, n_1121, n_1122, n_1123, n_1124, n_1125,
      n_1126, n_1127, n_1128, n_1129, n_1130, n_1131, n_1132, n_1133, n_1134, 
      n_1135, n_1136, n_1137, n_1138, n_1139, n_1140, n_1141, n_1142, n_1143, 
      n_1144, n_1145, n_1146, n_1147, n_1148, n_1149, n_1150, n_1151, n_1152, 
      n_1153, n_1154, n_1155 : std_logic;

begin
   SLV_DAT_O <= ( SLV_DAT_O_31_port, SLV_DAT_O_30_port, SLV_DAT_O_29_port, 
      SLV_DAT_O_28_port, SLV_DAT_O_27_port, SLV_DAT_O_26_port, 
      SLV_DAT_O_25_port, SLV_DAT_O_24_port, SLV_DAT_O_23_port, 
      SLV_DAT_O_22_port, SLV_DAT_O_21_port, SLV_DAT_O_20_port, 
      SLV_DAT_O_19_port, SLV_DAT_O_18_port, SLV_DAT_O_17_port, 
      SLV_DAT_O_16_port, SLV_DAT_O_15_port, SLV_DAT_O_14_port, 
      SLV_DAT_O_13_port, SLV_DAT_O_12_port, SLV_DAT_O_11_port, 
      SLV_DAT_O_10_port, SLV_DAT_O_9_port, SLV_DAT_O_8_port, SLV_DAT_O_7_port, 
      SLV_DAT_O_6_port, SLV_DAT_O_5_port, SLV_DAT_O_4_port, SLV_DAT_O_3_port, 
      SLV_DAT_O_2_port, SLV_DAT_O_1_port, SLV_DAT_O_0_port );
   RTY_O <= X_Logic0_port;
   axi4s_tx_tstrb <= ( axi4s_tx_tstrb_3_port, axi4s_tx_tstrb_2_port, 
      axi4s_tx_tstrb_1_port, axi4s_tx_tstrb_0_port );
   axi4s_tx_tkeep <= ( axi4s_tx_tstrb_3_port, axi4s_tx_tstrb_2_port, 
      axi4s_tx_tstrb_1_port, axi4s_tx_tstrb_0_port );
   axi4s_tx_tid <= ( X_Logic0_port, X_Logic0_port, X_Logic0_port );
   axi4s_tx_tuser <= ( X_Logic0_port, X_Logic0_port, X_Logic0_port, 
      X_Logic0_port );
   
   X_Logic0_port <= '0';
   axi4s_fsm_cs_reg_0_inst : GTECH_FD1 port map( D => n440, CP => clk, Q => 
                           n376, QN => n_1119);
   axi4s_fsm_cs_reg_1_inst : GTECH_FD1 port map( D => n436, CP => clk, Q => 
                           n375, QN => n_1120);
   axi4s_fsm_cs_reg_4_inst : GTECH_FD1 port map( D => n439, CP => clk, Q => 
                           n374, QN => n_1121);
   axi4s_fsm_cs_reg_3_inst : GTECH_FD1 port map( D => n438, CP => clk, Q => 
                           n373, QN => n_1122);
   axi4s_fsm_cs_reg_2_inst : GTECH_FD1 port map( D => n437, CP => clk, Q => 
                           n372, QN => n_1123);
   data_out_reg_reg_0_inst : GTECH_FD1 port map( D => n404, CP => clk, Q => 
                           SLV_DAT_O_0_port, QN => n_1124);
   data_out_reg_reg_1_inst : GTECH_FD1 port map( D => n405, CP => clk, Q => 
                           SLV_DAT_O_1_port, QN => n_1125);
   data_out_reg_reg_2_inst : GTECH_FD1 port map( D => n406, CP => clk, Q => 
                           SLV_DAT_O_2_port, QN => n_1126);
   data_out_reg_reg_3_inst : GTECH_FD1 port map( D => n407, CP => clk, Q => 
                           SLV_DAT_O_3_port, QN => n_1127);
   data_out_reg_reg_4_inst : GTECH_FD1 port map( D => n408, CP => clk, Q => 
                           SLV_DAT_O_4_port, QN => n_1128);
   data_out_reg_reg_5_inst : GTECH_FD1 port map( D => n409, CP => clk, Q => 
                           SLV_DAT_O_5_port, QN => n_1129);
   data_out_reg_reg_6_inst : GTECH_FD1 port map( D => n410, CP => clk, Q => 
                           SLV_DAT_O_6_port, QN => n_1130);
   data_out_reg_reg_7_inst : GTECH_FD1 port map( D => n411, CP => clk, Q => 
                           SLV_DAT_O_7_port, QN => n_1131);
   data_out_reg_reg_8_inst : GTECH_FD1 port map( D => n412, CP => clk, Q => 
                           SLV_DAT_O_8_port, QN => n_1132);
   data_out_reg_reg_9_inst : GTECH_FD1 port map( D => n413, CP => clk, Q => 
                           SLV_DAT_O_9_port, QN => n_1133);
   data_out_reg_reg_10_inst : GTECH_FD1 port map( D => n414, CP => clk, Q => 
                           SLV_DAT_O_10_port, QN => n_1134);
   data_out_reg_reg_11_inst : GTECH_FD1 port map( D => n415, CP => clk, Q => 
                           SLV_DAT_O_11_port, QN => n_1135);
   data_out_reg_reg_12_inst : GTECH_FD1 port map( D => n416, CP => clk, Q => 
                           SLV_DAT_O_12_port, QN => n_1136);
   data_out_reg_reg_13_inst : GTECH_FD1 port map( D => n417, CP => clk, Q => 
                           SLV_DAT_O_13_port, QN => n_1137);
   data_out_reg_reg_14_inst : GTECH_FD1 port map( D => n418, CP => clk, Q => 
                           SLV_DAT_O_14_port, QN => n_1138);
   data_out_reg_reg_15_inst : GTECH_FD1 port map( D => n419, CP => clk, Q => 
                           SLV_DAT_O_15_port, QN => n_1139);
   data_out_reg_reg_16_inst : GTECH_FD1 port map( D => n420, CP => clk, Q => 
                           SLV_DAT_O_16_port, QN => n_1140);
   data_out_reg_reg_17_inst : GTECH_FD1 port map( D => n421, CP => clk, Q => 
                           SLV_DAT_O_17_port, QN => n_1141);
   data_out_reg_reg_18_inst : GTECH_FD1 port map( D => n422, CP => clk, Q => 
                           SLV_DAT_O_18_port, QN => n_1142);
   data_out_reg_reg_19_inst : GTECH_FD1 port map( D => n423, CP => clk, Q => 
                           SLV_DAT_O_19_port, QN => n_1143);
   data_out_reg_reg_20_inst : GTECH_FD1 port map( D => n424, CP => clk, Q => 
                           SLV_DAT_O_20_port, QN => n_1144);
   data_out_reg_reg_21_inst : GTECH_FD1 port map( D => n425, CP => clk, Q => 
                           SLV_DAT_O_21_port, QN => n_1145);
   data_out_reg_reg_22_inst : GTECH_FD1 port map( D => n426, CP => clk, Q => 
                           SLV_DAT_O_22_port, QN => n_1146);
   data_out_reg_reg_23_inst : GTECH_FD1 port map( D => n427, CP => clk, Q => 
                           SLV_DAT_O_23_port, QN => n_1147);
   data_out_reg_reg_24_inst : GTECH_FD1 port map( D => n428, CP => clk, Q => 
                           SLV_DAT_O_24_port, QN => n_1148);
   data_out_reg_reg_25_inst : GTECH_FD1 port map( D => n429, CP => clk, Q => 
                           SLV_DAT_O_25_port, QN => n_1149);
   data_out_reg_reg_26_inst : GTECH_FD1 port map( D => n430, CP => clk, Q => 
                           SLV_DAT_O_26_port, QN => n_1150);
   data_out_reg_reg_27_inst : GTECH_FD1 port map( D => n431, CP => clk, Q => 
                           SLV_DAT_O_27_port, QN => n_1151);
   data_out_reg_reg_28_inst : GTECH_FD1 port map( D => n432, CP => clk, Q => 
                           SLV_DAT_O_28_port, QN => n_1152);
   data_out_reg_reg_29_inst : GTECH_FD1 port map( D => n433, CP => clk, Q => 
                           SLV_DAT_O_29_port, QN => n_1153);
   data_out_reg_reg_30_inst : GTECH_FD1 port map( D => n434, CP => clk, Q => 
                           SLV_DAT_O_30_port, QN => n_1154);
   data_out_reg_reg_31_inst : GTECH_FD1 port map( D => n435, CP => clk, Q => 
                           SLV_DAT_O_31_port, QN => n_1155);
   U3 : GTECH_NOT port map( A => n1, Z => axi4s_tx_tdata(1));
   U4 : GTECH_NOR2 port map( A => n2, B => n3, Z => n1);
   U5 : GTECH_NAND2 port map( A => n4, B => n5, Z => n3);
   U6 : GTECH_NAND2 port map( A => ADR_I(30), B => n6, Z => n5);
   U7 : GTECH_NAND2 port map( A => n7, B => n8, Z => n2);
   U8 : GTECH_NAND2 port map( A => n9, B => ADR_I(3), Z => n8);
   U9 : GTECH_NOR2 port map( A => n10, B => n11, Z => n9);
   U10 : GTECH_NAND2 port map( A => SLV_DAT_I(1), B => n12, Z => n7);
   U11 : GTECH_NOT port map( A => n13, Z => axi4s_tx_tdata(2));
   U12 : GTECH_NOR2 port map( A => n14, B => n15, Z => n13);
   U13 : GTECH_NAND2 port map( A => n4, B => n16, Z => n15);
   U14 : GTECH_NAND2 port map( A => ADR_I(29), B => n6, Z => n16);
   U15 : GTECH_NAND2 port map( A => n17, B => n18, Z => n14);
   U16 : GTECH_NAND2 port map( A => n19, B => ADR_I(2), Z => n18);
   U17 : GTECH_NOR2 port map( A => ADR_I(3), B => n10, Z => n19);
   U18 : GTECH_NAND2 port map( A => SLV_DAT_I(2), B => n12, Z => n17);
   U19 : GTECH_NOT port map( A => n20, Z => axi4s_tx_tdata(28));
   U20 : GTECH_NOR2 port map( A => n21, B => n22, Z => n20);
   U21 : GTECH_NAND2 port map( A => n23, B => n24, Z => n22);
   U22 : GTECH_NAND2 port map( A => SLV_DAT_I(28), B => n12, Z => n24);
   U23 : GTECH_NAND2 port map( A => n6, B => ADR_I(3), Z => n23);
   U24 : GTECH_NAND2 port map( A => n25, B => n26, Z => n21);
   U25 : GTECH_NAND2 port map( A => WE_I, B => n27, Z => n25);
   U26 : GTECH_NAND2 port map( A => n28, B => n29, Z => n440);
   U27 : GTECH_NAND2 port map( A => n30, B => n376, Z => n29);
   U28 : GTECH_NAND2 port map( A => n31, B => n32, Z => n28);
   U29 : GTECH_NAND2 port map( A => n33, B => n34, Z => n32);
   U30 : GTECH_NOR2 port map( A => n35, B => n36, Z => n33);
   U31 : GTECH_NOR2 port map( A => n37, B => n38, Z => n36);
   U32 : GTECH_NOR2 port map( A => WE_I, B => n39, Z => n37);
   U33 : GTECH_NOR2 port map( A => n40, B => n41, Z => n35);
   U34 : GTECH_NAND2 port map( A => n42, B => n43, Z => n41);
   U35 : GTECH_NAND2 port map( A => n44, B => n45, Z => n43);
   U36 : GTECH_NOR2 port map( A => n46, B => n47, Z => n44);
   U37 : GTECH_NAND2 port map( A => n48, B => n49, Z => n47);
   U38 : GTECH_NAND2 port map( A => n50, B => n51, Z => n42);
   U39 : GTECH_NOR2 port map( A => n52, B => n53, Z => n50);
   U40 : GTECH_NAND2 port map( A => n54, B => n55, Z => n53);
   U41 : GTECH_NAND2 port map( A => n27, B => n56, Z => n54);
   U42 : GTECH_NOT port map( A => WE_I, Z => n56);
   U43 : GTECH_NOT port map( A => n57, Z => n52);
   U44 : GTECH_NOR2 port map( A => n58, B => n12, Z => n57);
   U45 : GTECH_NAND2 port map( A => n59, B => n60, Z => n58);
   U46 : GTECH_NOR2 port map( A => n61, B => n62, Z => n439);
   U47 : GTECH_NOR2 port map( A => n63, B => n374, Z => n61);
   U48 : GTECH_NOR2 port map( A => n64, B => n65, Z => n63);
   U49 : GTECH_NAND2 port map( A => n66, B => n67, Z => n438);
   U50 : GTECH_NAND2 port map( A => n31, B => n68, Z => n67);
   U51 : GTECH_NAND2 port map( A => n69, B => n70, Z => n68);
   U52 : GTECH_NOR2 port map( A => n71, B => n72, Z => n69);
   U53 : GTECH_NOR2 port map( A => n26, B => n73, Z => n72);
   U54 : GTECH_NAND2 port map( A => n51, B => n64, Z => n73);
   U55 : GTECH_NOT port map( A => n74, Z => n437);
   U56 : GTECH_NOR2 port map( A => n75, B => n76, Z => n74);
   U57 : GTECH_NOR2 port map( A => n62, B => n77, Z => n76);
   U58 : GTECH_NOR2 port map( A => n78, B => n79, Z => n77);
   U59 : GTECH_NOT port map( A => n80, Z => n79);
   U60 : GTECH_NOR2 port map( A => n81, B => n82, Z => n80);
   U61 : GTECH_NAND2 port map( A => n83, B => n84, Z => n82);
   U62 : GTECH_NAND2 port map( A => n85, B => n64, Z => n83);
   U63 : GTECH_NOT port map( A => n86, Z => n85);
   U64 : GTECH_NAND2 port map( A => n87, B => n88, Z => n86);
   U65 : GTECH_NAND2 port map( A => n45, B => n89, Z => n88);
   U66 : GTECH_NOR2 port map( A => n89, B => n90, Z => n81);
   U67 : GTECH_NAND2 port map( A => n91, B => n92, Z => n78);
   U68 : GTECH_NOT port map( A => n93, Z => n92);
   U69 : GTECH_NAND2 port map( A => n94, B => n95, Z => n91);
   U70 : GTECH_NOR2 port map( A => n66, B => n89, Z => n75);
   U71 : GTECH_NAND2 port map( A => n96, B => n97, Z => n436);
   U72 : GTECH_NAND2 port map( A => n31, B => n98, Z => n97);
   U73 : GTECH_NAND2 port map( A => n99, B => n100, Z => n98);
   U74 : GTECH_NOR2 port map( A => n101, B => n102, Z => n100);
   U75 : GTECH_NAND2 port map( A => n103, B => n90, Z => n102);
   U76 : GTECH_NAND2 port map( A => n104, B => n51, Z => n103);
   U77 : GTECH_NOR2 port map( A => n105, B => n40, Z => n104);
   U78 : GTECH_NOT port map( A => n106, Z => n105);
   U79 : GTECH_NOR2 port map( A => n107, B => n108, Z => n101);
   U80 : GTECH_NOR2 port map( A => n109, B => n93, Z => n107);
   U81 : GTECH_NAND2 port map( A => n38, B => n110, Z => n93);
   U82 : GTECH_NAND2 port map( A => n64, B => n111, Z => n110);
   U83 : GTECH_NAND2 port map( A => n112, B => n113, Z => n111);
   U84 : GTECH_NAND2 port map( A => n114, B => n45, Z => n113);
   U85 : GTECH_NOR2 port map( A => n12, B => n27, Z => n112);
   U86 : GTECH_NOT port map( A => n48, Z => n27);
   U87 : GTECH_NOR2 port map( A => n115, B => n40, Z => n109);
   U88 : GTECH_NOR2 port map( A => n116, B => n117, Z => n115);
   U89 : GTECH_NOT port map( A => n118, Z => n116);
   U90 : GTECH_NAND2 port map( A => n45, B => n87, Z => n118);
   U91 : GTECH_NOT port map( A => n51, Z => n45);
   U92 : GTECH_NOR2 port map( A => n119, B => n120, Z => n51);
   U93 : GTECH_NOT port map( A => axi4s_tx_tready, Z => n119);
   U94 : GTECH_NOR2 port map( A => n121, B => n122, Z => n99);
   U95 : GTECH_NOR2 port map( A => n123, B => n124, Z => n122);
   U96 : GTECH_NOR2 port map( A => n39, B => n38, Z => n121);
   U97 : GTECH_NOT port map( A => n62, Z => n31);
   U98 : GTECH_NAND2 port map( A => reset_b, B => n66, Z => n62);
   U99 : GTECH_NOT port map( A => n30, Z => n66);
   U100 : GTECH_NAND2 port map( A => n30, B => n375, Z => n96);
   U101 : GTECH_NOR2 port map( A => n125, B => n126, Z => n30);
   U102 : GTECH_NAND2 port map( A => n39, B => n127, Z => n125);
   U103 : GTECH_NAND2 port map( A => n128, B => n70, Z => n127);
   U104 : GTECH_NAND2 port map( A => n129, B => n130, Z => n435);
   U105 : GTECH_NAND2 port map( A => axi4s_rx_tdata(31), B => n131, Z => n130);
   U106 : GTECH_NAND2 port map( A => n132, B => SLV_DAT_O_31_port, Z => n129);
   U107 : GTECH_NAND2 port map( A => n133, B => n134, Z => n434);
   U108 : GTECH_NAND2 port map( A => axi4s_rx_tdata(30), B => n131, Z => n134);
   U109 : GTECH_NAND2 port map( A => n132, B => SLV_DAT_O_30_port, Z => n133);
   U110 : GTECH_NAND2 port map( A => n135, B => n136, Z => n433);
   U111 : GTECH_NAND2 port map( A => axi4s_rx_tdata(29), B => n131, Z => n136);
   U112 : GTECH_NAND2 port map( A => n132, B => SLV_DAT_O_29_port, Z => n135);
   U113 : GTECH_NAND2 port map( A => n137, B => n138, Z => n432);
   U114 : GTECH_NAND2 port map( A => axi4s_rx_tdata(28), B => n131, Z => n138);
   U115 : GTECH_NAND2 port map( A => n132, B => SLV_DAT_O_28_port, Z => n137);
   U116 : GTECH_NAND2 port map( A => n139, B => n140, Z => n431);
   U117 : GTECH_NAND2 port map( A => axi4s_rx_tdata(27), B => n131, Z => n140);
   U118 : GTECH_NAND2 port map( A => n132, B => SLV_DAT_O_27_port, Z => n139);
   U119 : GTECH_NAND2 port map( A => n141, B => n142, Z => n430);
   U120 : GTECH_NAND2 port map( A => axi4s_rx_tdata(26), B => n131, Z => n142);
   U121 : GTECH_NAND2 port map( A => n132, B => SLV_DAT_O_26_port, Z => n141);
   U122 : GTECH_NAND2 port map( A => n143, B => n144, Z => n429);
   U123 : GTECH_NAND2 port map( A => axi4s_rx_tdata(25), B => n131, Z => n144);
   U124 : GTECH_NAND2 port map( A => n132, B => SLV_DAT_O_25_port, Z => n143);
   U125 : GTECH_NAND2 port map( A => n145, B => n146, Z => n428);
   U126 : GTECH_NAND2 port map( A => axi4s_rx_tdata(24), B => n131, Z => n146);
   U127 : GTECH_NAND2 port map( A => n132, B => SLV_DAT_O_24_port, Z => n145);
   U128 : GTECH_NAND2 port map( A => n147, B => n148, Z => n427);
   U129 : GTECH_NAND2 port map( A => axi4s_rx_tdata(23), B => n131, Z => n148);
   U130 : GTECH_NAND2 port map( A => n132, B => SLV_DAT_O_23_port, Z => n147);
   U131 : GTECH_NAND2 port map( A => n149, B => n150, Z => n426);
   U132 : GTECH_NAND2 port map( A => axi4s_rx_tdata(22), B => n131, Z => n150);
   U133 : GTECH_NAND2 port map( A => n132, B => SLV_DAT_O_22_port, Z => n149);
   U134 : GTECH_NAND2 port map( A => n151, B => n152, Z => n425);
   U135 : GTECH_NAND2 port map( A => axi4s_rx_tdata(21), B => n131, Z => n152);
   U136 : GTECH_NAND2 port map( A => n132, B => SLV_DAT_O_21_port, Z => n151);
   U137 : GTECH_NAND2 port map( A => n153, B => n154, Z => n424);
   U138 : GTECH_NAND2 port map( A => axi4s_rx_tdata(20), B => n131, Z => n154);
   U139 : GTECH_NAND2 port map( A => n132, B => SLV_DAT_O_20_port, Z => n153);
   U140 : GTECH_NAND2 port map( A => n155, B => n156, Z => n423);
   U141 : GTECH_NAND2 port map( A => axi4s_rx_tdata(19), B => n131, Z => n156);
   U142 : GTECH_NAND2 port map( A => n132, B => SLV_DAT_O_19_port, Z => n155);
   U143 : GTECH_NAND2 port map( A => n157, B => n158, Z => n422);
   U144 : GTECH_NAND2 port map( A => axi4s_rx_tdata(18), B => n131, Z => n158);
   U145 : GTECH_NAND2 port map( A => n132, B => SLV_DAT_O_18_port, Z => n157);
   U146 : GTECH_NAND2 port map( A => n159, B => n160, Z => n421);
   U147 : GTECH_NAND2 port map( A => axi4s_rx_tdata(17), B => n131, Z => n160);
   U148 : GTECH_NAND2 port map( A => n132, B => SLV_DAT_O_17_port, Z => n159);
   U149 : GTECH_NAND2 port map( A => n161, B => n162, Z => n420);
   U150 : GTECH_NAND2 port map( A => axi4s_rx_tdata(16), B => n131, Z => n162);
   U151 : GTECH_NAND2 port map( A => n132, B => SLV_DAT_O_16_port, Z => n161);
   U152 : GTECH_NAND2 port map( A => n163, B => n164, Z => n419);
   U153 : GTECH_NAND2 port map( A => axi4s_rx_tdata(15), B => n131, Z => n164);
   U154 : GTECH_NAND2 port map( A => n132, B => SLV_DAT_O_15_port, Z => n163);
   U155 : GTECH_NAND2 port map( A => n165, B => n166, Z => n418);
   U156 : GTECH_NAND2 port map( A => axi4s_rx_tdata(14), B => n131, Z => n166);
   U157 : GTECH_NAND2 port map( A => n132, B => SLV_DAT_O_14_port, Z => n165);
   U158 : GTECH_NAND2 port map( A => n167, B => n168, Z => n417);
   U159 : GTECH_NAND2 port map( A => axi4s_rx_tdata(13), B => n131, Z => n168);
   U160 : GTECH_NAND2 port map( A => n132, B => SLV_DAT_O_13_port, Z => n167);
   U161 : GTECH_NAND2 port map( A => n169, B => n170, Z => n416);
   U162 : GTECH_NAND2 port map( A => axi4s_rx_tdata(12), B => n131, Z => n170);
   U163 : GTECH_NAND2 port map( A => n132, B => SLV_DAT_O_12_port, Z => n169);
   U164 : GTECH_NAND2 port map( A => n171, B => n172, Z => n415);
   U165 : GTECH_NAND2 port map( A => axi4s_rx_tdata(11), B => n131, Z => n172);
   U166 : GTECH_NAND2 port map( A => n132, B => SLV_DAT_O_11_port, Z => n171);
   U167 : GTECH_NAND2 port map( A => n173, B => n174, Z => n414);
   U168 : GTECH_NAND2 port map( A => axi4s_rx_tdata(10), B => n131, Z => n174);
   U169 : GTECH_NAND2 port map( A => n132, B => SLV_DAT_O_10_port, Z => n173);
   U170 : GTECH_NAND2 port map( A => n175, B => n176, Z => n413);
   U171 : GTECH_NAND2 port map( A => axi4s_rx_tdata(9), B => n131, Z => n176);
   U172 : GTECH_NAND2 port map( A => n132, B => SLV_DAT_O_9_port, Z => n175);
   U173 : GTECH_NAND2 port map( A => n177, B => n178, Z => n412);
   U174 : GTECH_NAND2 port map( A => axi4s_rx_tdata(8), B => n131, Z => n178);
   U175 : GTECH_NAND2 port map( A => n132, B => SLV_DAT_O_8_port, Z => n177);
   U176 : GTECH_NAND2 port map( A => n179, B => n180, Z => n411);
   U177 : GTECH_NAND2 port map( A => axi4s_rx_tdata(7), B => n131, Z => n180);
   U178 : GTECH_NAND2 port map( A => n132, B => SLV_DAT_O_7_port, Z => n179);
   U179 : GTECH_NAND2 port map( A => n181, B => n182, Z => n410);
   U180 : GTECH_NAND2 port map( A => axi4s_rx_tdata(6), B => n131, Z => n182);
   U181 : GTECH_NAND2 port map( A => n132, B => SLV_DAT_O_6_port, Z => n181);
   U182 : GTECH_NAND2 port map( A => n183, B => n184, Z => n409);
   U183 : GTECH_NAND2 port map( A => axi4s_rx_tdata(5), B => n131, Z => n184);
   U184 : GTECH_NAND2 port map( A => n132, B => SLV_DAT_O_5_port, Z => n183);
   U185 : GTECH_NAND2 port map( A => n185, B => n186, Z => n408);
   U186 : GTECH_NAND2 port map( A => axi4s_rx_tdata(4), B => n131, Z => n186);
   U187 : GTECH_NAND2 port map( A => n132, B => SLV_DAT_O_4_port, Z => n185);
   U188 : GTECH_NAND2 port map( A => n187, B => n188, Z => n407);
   U189 : GTECH_NAND2 port map( A => axi4s_rx_tdata(3), B => n131, Z => n188);
   U190 : GTECH_NAND2 port map( A => n132, B => SLV_DAT_O_3_port, Z => n187);
   U191 : GTECH_NAND2 port map( A => n189, B => n190, Z => n406);
   U192 : GTECH_NAND2 port map( A => axi4s_rx_tdata(2), B => n131, Z => n190);
   U193 : GTECH_NAND2 port map( A => n132, B => SLV_DAT_O_2_port, Z => n189);
   U194 : GTECH_NAND2 port map( A => n191, B => n192, Z => n405);
   U195 : GTECH_NAND2 port map( A => axi4s_rx_tdata(1), B => n131, Z => n192);
   U196 : GTECH_NAND2 port map( A => n132, B => SLV_DAT_O_1_port, Z => n191);
   U197 : GTECH_NAND2 port map( A => n193, B => n194, Z => n404);
   U198 : GTECH_NAND2 port map( A => axi4s_rx_tdata(0), B => n131, Z => n194);
   U199 : GTECH_NOR2 port map( A => n126, B => n132, Z => n131);
   U200 : GTECH_NOT port map( A => reset_b, Z => n126);
   U201 : GTECH_NAND2 port map( A => n132, B => SLV_DAT_O_0_port, Z => n193);
   U202 : GTECH_NOT port map( A => n195, Z => n132);
   U203 : GTECH_NAND2 port map( A => reset_b, B => n196, Z => n195);
   U204 : GTECH_NAND2 port map( A => n197, B => n198, Z => n196);
   U205 : GTECH_NOR2 port map( A => n199, B => n200, Z => n198);
   U206 : GTECH_NAND2 port map( A => n124, B => n201, Z => n200);
   U207 : GTECH_NOR2 port map( A => n202, B => n203, Z => n197);
   U208 : GTECH_NAND2 port map( A => n38, B => n84, Z => n203);
   U209 : GTECH_NOR2 port map( A => n204, B => n120, Z => axi4s_tx_tvalid);
   U210 : GTECH_NOT port map( A => n202, Z => n204);
   U211 : GTECH_NOR2 port map( A => n120, B => n26, Z => axi4s_tx_tlast);
   U212 : GTECH_NOR2 port map( A => n205, B => n65, Z => axi4s_tx_tstrb_3_port)
                           ;
   U213 : GTECH_NOT port map( A => SEL_I(3), Z => n205);
   U214 : GTECH_NOR2 port map( A => n206, B => n65, Z => axi4s_tx_tstrb_2_port)
                           ;
   U215 : GTECH_NOT port map( A => SEL_I(2), Z => n206);
   U216 : GTECH_NOR2 port map( A => n207, B => n65, Z => axi4s_tx_tstrb_1_port)
                           ;
   U217 : GTECH_NOT port map( A => SEL_I(1), Z => n207);
   U218 : GTECH_NOR2 port map( A => n208, B => n65, Z => axi4s_tx_tstrb_0_port)
                           ;
   U219 : GTECH_NAND2 port map( A => n202, B => n209, Z => n65);
   U220 : GTECH_NAND2 port map( A => n210, B => n120, Z => n209);
   U221 : GTECH_NAND2 port map( A => n210, B => n60, Z => n202);
   U222 : GTECH_NOT port map( A => SEL_I(0), Z => n208);
   U223 : GTECH_NOR2 port map( A => n211, B => n212, Z => axi4s_tx_tdest(4));
   U224 : GTECH_NAND2 port map( A => n213, B => n214, Z => n212);
   U225 : GTECH_NOR2 port map( A => n215, B => n216, Z => axi4s_tx_tdest(3));
   U226 : GTECH_NAND2 port map( A => n213, B => n11, Z => n216);
   U227 : GTECH_NOR2 port map( A => n11, B => n217, Z => axi4s_tx_tdest(2));
   U228 : GTECH_NAND2 port map( A => n213, B => n215, Z => n217);
   U229 : GTECH_NOR2 port map( A => n215, B => n218, Z => axi4s_tx_tdest(1));
   U230 : GTECH_NAND2 port map( A => ADR_I(2), B => n213, Z => n218);
   U231 : GTECH_NOT port map( A => n219, Z => n213);
   U232 : GTECH_NOR2 port map( A => n219, B => n214, Z => axi4s_tx_tdest(0));
   U233 : GTECH_NOR2 port map( A => n220, B => n221, Z => n219);
   U234 : GTECH_NOR2 port map( A => n40, B => n210, Z => n221);
   U235 : GTECH_NOT port map( A => n222, Z => n210);
   U236 : GTECH_NAND2 port map( A => n223, B => n224, Z => n222);
   U237 : GTECH_NOR2 port map( A => n114, B => n12, Z => n224);
   U238 : GTECH_NOR2 port map( A => n106, B => n87, Z => n223);
   U239 : GTECH_NAND2 port map( A => n49, B => n59, Z => n87);
   U240 : GTECH_NAND2 port map( A => n225, B => n48, Z => n106);
   U241 : GTECH_NOT port map( A => n117, Z => n225);
   U242 : GTECH_NAND2 port map( A => n55, B => n226, Z => n117);
   U243 : GTECH_NOT port map( A => n64, Z => n40);
   U244 : GTECH_NAND2 port map( A => n227, B => n228, Z => axi4s_tx_tdata(9));
   U245 : GTECH_NAND2 port map( A => ADR_I(22), B => n6, Z => n228);
   U246 : GTECH_NOT port map( A => n229, Z => n227);
   U247 : GTECH_NAND2 port map( A => n26, B => n230, Z => n229);
   U248 : GTECH_NAND2 port map( A => SLV_DAT_I(9), B => n12, Z => n230);
   U249 : GTECH_NAND2 port map( A => n231, B => n232, Z => axi4s_tx_tdata(8));
   U250 : GTECH_NAND2 port map( A => SLV_DAT_I(8), B => n12, Z => n232);
   U251 : GTECH_NAND2 port map( A => ADR_I(23), B => n6, Z => n231);
   U252 : GTECH_NAND2 port map( A => n233, B => n234, Z => axi4s_tx_tdata(7));
   U253 : GTECH_NAND2 port map( A => ADR_I(24), B => n6, Z => n234);
   U254 : GTECH_NOT port map( A => n235, Z => n233);
   U255 : GTECH_NAND2 port map( A => n26, B => n236, Z => n235);
   U256 : GTECH_NAND2 port map( A => SLV_DAT_I(7), B => n12, Z => n236);
   U257 : GTECH_NAND2 port map( A => n237, B => n238, Z => axi4s_tx_tdata(6));
   U258 : GTECH_NAND2 port map( A => ADR_I(25), B => n6, Z => n238);
   U259 : GTECH_NOT port map( A => n239, Z => n237);
   U260 : GTECH_NAND2 port map( A => n26, B => n240, Z => n239);
   U261 : GTECH_NAND2 port map( A => SLV_DAT_I(6), B => n12, Z => n240);
   U262 : GTECH_NAND2 port map( A => n241, B => n242, Z => axi4s_tx_tdata(5));
   U263 : GTECH_NAND2 port map( A => ADR_I(26), B => n6, Z => n242);
   U264 : GTECH_NOT port map( A => n243, Z => n241);
   U265 : GTECH_NAND2 port map( A => n26, B => n244, Z => n243);
   U266 : GTECH_NAND2 port map( A => SLV_DAT_I(5), B => n12, Z => n244);
   U267 : GTECH_NAND2 port map( A => n245, B => n246, Z => axi4s_tx_tdata(4));
   U268 : GTECH_NAND2 port map( A => ADR_I(27), B => n6, Z => n246);
   U269 : GTECH_NOR2 port map( A => n247, B => n248, Z => n245);
   U270 : GTECH_NOR2 port map( A => n249, B => n250, Z => n248);
   U271 : GTECH_NOT port map( A => SLV_DAT_I(4), Z => n249);
   U272 : GTECH_NOR2 port map( A => n211, B => n251, Z => n247);
   U273 : GTECH_NAND2 port map( A => n220, B => n214, Z => n251);
   U274 : GTECH_NAND2 port map( A => n252, B => n253, Z => axi4s_tx_tdata(3));
   U275 : GTECH_NOR2 port map( A => n254, B => n46, Z => n253);
   U276 : GTECH_NAND2 port map( A => n226, B => n26, Z => n46);
   U277 : GTECH_NAND2 port map( A => n255, B => n256, Z => n226);
   U278 : GTECH_NOR2 port map( A => n215, B => n257, Z => n254);
   U279 : GTECH_NAND2 port map( A => n220, B => n11, Z => n257);
   U280 : GTECH_NOR2 port map( A => n258, B => n259, Z => n252);
   U281 : GTECH_NAND2 port map( A => n260, B => n261, Z => n259);
   U282 : GTECH_NAND2 port map( A => SLV_DAT_I(3), B => n12, Z => n261);
   U283 : GTECH_NAND2 port map( A => WE_I, B => n262, Z => n260);
   U284 : GTECH_NOT port map( A => n55, Z => n262);
   U285 : GTECH_NOT port map( A => n263, Z => n258);
   U286 : GTECH_NAND2 port map( A => ADR_I(28), B => n6, Z => n263);
   U287 : GTECH_NAND2 port map( A => n264, B => n265, Z => axi4s_tx_tdata(31));
   U288 : GTECH_NOR2 port map( A => n266, B => n114, Z => n265);
   U289 : GTECH_NOT port map( A => n267, Z => n266);
   U290 : GTECH_NAND2 port map( A => SLV_DAT_I(31), B => n12, Z => n267);
   U291 : GTECH_NAND2 port map( A => n6, B => ADR_I(0), Z => n264);
   U292 : GTECH_NOT port map( A => n268, Z => axi4s_tx_tdata(30));
   U293 : GTECH_NOR2 port map( A => n269, B => n270, Z => n268);
   U294 : GTECH_NAND2 port map( A => n271, B => n26, Z => n270);
   U295 : GTECH_NAND2 port map( A => SLV_DAT_I(30), B => n12, Z => n271);
   U296 : GTECH_NOR2 port map( A => n214, B => n49, Z => n269);
   U297 : GTECH_NAND2 port map( A => n272, B => n273, Z => axi4s_tx_tdata(29));
   U298 : GTECH_NAND2 port map( A => SLV_DAT_I(29), B => n12, Z => n273);
   U299 : GTECH_NAND2 port map( A => n6, B => ADR_I(2), Z => n272);
   U300 : GTECH_NAND2 port map( A => n274, B => n275, Z => axi4s_tx_tdata(27));
   U301 : GTECH_NAND2 port map( A => ADR_I(4), B => n6, Z => n275);
   U302 : GTECH_NOT port map( A => n276, Z => n274);
   U303 : GTECH_NAND2 port map( A => n26, B => n277, Z => n276);
   U304 : GTECH_NAND2 port map( A => SLV_DAT_I(27), B => n12, Z => n277);
   U305 : GTECH_NAND2 port map( A => n278, B => n279, Z => axi4s_tx_tdata(26));
   U306 : GTECH_NAND2 port map( A => ADR_I(5), B => n6, Z => n279);
   U307 : GTECH_NOT port map( A => n280, Z => n278);
   U308 : GTECH_NAND2 port map( A => n26, B => n281, Z => n280);
   U309 : GTECH_NAND2 port map( A => SLV_DAT_I(26), B => n12, Z => n281);
   U310 : GTECH_NAND2 port map( A => n282, B => n283, Z => axi4s_tx_tdata(25));
   U311 : GTECH_NAND2 port map( A => ADR_I(6), B => n6, Z => n283);
   U312 : GTECH_NOT port map( A => n284, Z => n282);
   U313 : GTECH_NAND2 port map( A => n26, B => n285, Z => n284);
   U314 : GTECH_NAND2 port map( A => SLV_DAT_I(25), B => n12, Z => n285);
   U315 : GTECH_NAND2 port map( A => n286, B => n287, Z => axi4s_tx_tdata(24));
   U316 : GTECH_NAND2 port map( A => ADR_I(7), B => n6, Z => n287);
   U317 : GTECH_NOT port map( A => n288, Z => n286);
   U318 : GTECH_NAND2 port map( A => n48, B => n289, Z => n288);
   U319 : GTECH_NAND2 port map( A => SLV_DAT_I(24), B => n12, Z => n289);
   U320 : GTECH_NAND2 port map( A => n290, B => n255, Z => n48);
   U321 : GTECH_NAND2 port map( A => n291, B => n292, Z => axi4s_tx_tdata(23));
   U322 : GTECH_NAND2 port map( A => ADR_I(8), B => n6, Z => n292);
   U323 : GTECH_NOT port map( A => n293, Z => n291);
   U324 : GTECH_NAND2 port map( A => n26, B => n294, Z => n293);
   U325 : GTECH_NAND2 port map( A => SLV_DAT_I(23), B => n12, Z => n294);
   U326 : GTECH_NAND2 port map( A => n295, B => n296, Z => axi4s_tx_tdata(22));
   U327 : GTECH_NAND2 port map( A => SLV_DAT_I(22), B => n12, Z => n296);
   U328 : GTECH_NAND2 port map( A => ADR_I(9), B => n6, Z => n295);
   U329 : GTECH_NAND2 port map( A => n297, B => n298, Z => axi4s_tx_tdata(21));
   U330 : GTECH_NAND2 port map( A => ADR_I(10), B => n6, Z => n298);
   U331 : GTECH_NOT port map( A => n299, Z => n297);
   U332 : GTECH_NAND2 port map( A => n26, B => n300, Z => n299);
   U333 : GTECH_NAND2 port map( A => SLV_DAT_I(21), B => n12, Z => n300);
   U334 : GTECH_NAND2 port map( A => n301, B => n302, Z => axi4s_tx_tdata(20));
   U335 : GTECH_NAND2 port map( A => SLV_DAT_I(20), B => n12, Z => n302);
   U336 : GTECH_NAND2 port map( A => ADR_I(11), B => n6, Z => n301);
   U337 : GTECH_NAND2 port map( A => n303, B => n304, Z => axi4s_tx_tdata(19));
   U338 : GTECH_NAND2 port map( A => ADR_I(12), B => n6, Z => n304);
   U339 : GTECH_NOT port map( A => n305, Z => n303);
   U340 : GTECH_NAND2 port map( A => n26, B => n306, Z => n305);
   U341 : GTECH_NAND2 port map( A => SLV_DAT_I(19), B => n12, Z => n306);
   U342 : GTECH_NAND2 port map( A => n307, B => n308, Z => axi4s_tx_tdata(18));
   U343 : GTECH_NAND2 port map( A => ADR_I(13), B => n6, Z => n308);
   U344 : GTECH_NOT port map( A => n309, Z => n307);
   U345 : GTECH_NAND2 port map( A => n26, B => n310, Z => n309);
   U346 : GTECH_NAND2 port map( A => SLV_DAT_I(18), B => n12, Z => n310);
   U347 : GTECH_NAND2 port map( A => n311, B => n312, Z => axi4s_tx_tdata(17));
   U348 : GTECH_NAND2 port map( A => SLV_DAT_I(17), B => n12, Z => n312);
   U349 : GTECH_NAND2 port map( A => ADR_I(14), B => n6, Z => n311);
   U350 : GTECH_NAND2 port map( A => n313, B => n314, Z => axi4s_tx_tdata(16));
   U351 : GTECH_NAND2 port map( A => ADR_I(15), B => n6, Z => n314);
   U352 : GTECH_NOT port map( A => n315, Z => n313);
   U353 : GTECH_NAND2 port map( A => n26, B => n316, Z => n315);
   U354 : GTECH_NAND2 port map( A => SLV_DAT_I(16), B => n12, Z => n316);
   U355 : GTECH_NAND2 port map( A => n317, B => n318, Z => axi4s_tx_tdata(15));
   U356 : GTECH_NAND2 port map( A => ADR_I(16), B => n6, Z => n318);
   U357 : GTECH_NOT port map( A => n319, Z => n317);
   U358 : GTECH_NAND2 port map( A => n26, B => n320, Z => n319);
   U359 : GTECH_NAND2 port map( A => SLV_DAT_I(15), B => n12, Z => n320);
   U360 : GTECH_NAND2 port map( A => n321, B => n322, Z => axi4s_tx_tdata(14));
   U361 : GTECH_NAND2 port map( A => SLV_DAT_I(14), B => n12, Z => n322);
   U362 : GTECH_NAND2 port map( A => ADR_I(17), B => n6, Z => n321);
   U363 : GTECH_NAND2 port map( A => n323, B => n324, Z => axi4s_tx_tdata(13));
   U364 : GTECH_NAND2 port map( A => ADR_I(18), B => n6, Z => n324);
   U365 : GTECH_NOT port map( A => n325, Z => n323);
   U366 : GTECH_NAND2 port map( A => n26, B => n326, Z => n325);
   U367 : GTECH_NAND2 port map( A => SLV_DAT_I(13), B => n12, Z => n326);
   U368 : GTECH_NAND2 port map( A => n327, B => n328, Z => axi4s_tx_tdata(12));
   U369 : GTECH_NAND2 port map( A => ADR_I(19), B => n6, Z => n328);
   U370 : GTECH_NOT port map( A => n329, Z => n327);
   U371 : GTECH_NAND2 port map( A => n26, B => n330, Z => n329);
   U372 : GTECH_NAND2 port map( A => SLV_DAT_I(12), B => n12, Z => n330);
   U373 : GTECH_NAND2 port map( A => n331, B => n332, Z => axi4s_tx_tdata(11));
   U374 : GTECH_NAND2 port map( A => ADR_I(20), B => n6, Z => n332);
   U375 : GTECH_NOT port map( A => n333, Z => n331);
   U376 : GTECH_NAND2 port map( A => n26, B => n334, Z => n333);
   U377 : GTECH_NAND2 port map( A => SLV_DAT_I(11), B => n12, Z => n334);
   U378 : GTECH_NAND2 port map( A => n335, B => n336, Z => axi4s_tx_tdata(10));
   U379 : GTECH_NAND2 port map( A => ADR_I(21), B => n6, Z => n336);
   U380 : GTECH_NOT port map( A => n49, Z => n6);
   U381 : GTECH_NOT port map( A => n337, Z => n335);
   U382 : GTECH_NAND2 port map( A => n26, B => n338, Z => n337);
   U383 : GTECH_NAND2 port map( A => SLV_DAT_I(10), B => n12, Z => n338);
   U384 : GTECH_NAND2 port map( A => n339, B => n340, Z => axi4s_tx_tdata(0));
   U385 : GTECH_NOR2 port map( A => n341, B => n342, Z => n340);
   U386 : GTECH_NAND2 port map( A => n343, B => n59, Z => n342);
   U387 : GTECH_NAND2 port map( A => n290, B => n344, Z => n59);
   U388 : GTECH_NOR2 port map( A => n373, B => n89, Z => n290);
   U389 : GTECH_NAND2 port map( A => SLV_DAT_I(0), B => n12, Z => n343);
   U390 : GTECH_NOT port map( A => n250, Z => n12);
   U391 : GTECH_NAND2 port map( A => n345, B => n372, Z => n250);
   U392 : GTECH_NOR2 port map( A => n373, B => n346, Z => n345);
   U393 : GTECH_NOR2 port map( A => n347, B => n49, Z => n341);
   U394 : GTECH_NAND2 port map( A => n94, B => n256, Z => n49);
   U395 : GTECH_NOT port map( A => ADR_I(31), Z => n347);
   U396 : GTECH_NOT port map( A => n348, Z => n339);
   U397 : GTECH_NAND2 port map( A => n349, B => n4, Z => n348);
   U398 : GTECH_NOR2 port map( A => n114, B => n350, Z => n4);
   U399 : GTECH_NOR2 port map( A => n55, B => WE_I, Z => n350);
   U400 : GTECH_NAND2 port map( A => n256, B => n351, Z => n55);
   U401 : GTECH_NOT port map( A => n26, Z => n114);
   U402 : GTECH_NAND2 port map( A => n352, B => n372, Z => n26);
   U403 : GTECH_NOR2 port map( A => n373, B => n353, Z => n352);
   U404 : GTECH_NAND2 port map( A => ADR_I(1), B => n220, Z => n349);
   U405 : GTECH_NOT port map( A => n10, Z => n220);
   U406 : GTECH_NAND2 port map( A => n354, B => n64, Z => n10);
   U407 : GTECH_NOR2 port map( A => n355, B => ADR_I(0), Z => n64);
   U408 : GTECH_NOR2 port map( A => n214, B => n356, Z => n355);
   U409 : GTECH_NOT port map( A => n211, Z => n356);
   U410 : GTECH_NAND2 port map( A => n11, B => n215, Z => n211);
   U411 : GTECH_NOT port map( A => ADR_I(3), Z => n215);
   U412 : GTECH_NOT port map( A => ADR_I(2), Z => n11);
   U413 : GTECH_NOT port map( A => ADR_I(1), Z => n214);
   U414 : GTECH_NOR2 port map( A => n120, B => n60, Z => n354);
   U415 : GTECH_NAND2 port map( A => n344, B => n256, Z => n60);
   U416 : GTECH_NOR2 port map( A => n372, B => n373, Z => n256);
   U417 : GTECH_NAND2 port map( A => STB_I, B => CYC_I, Z => n120);
   U418 : GTECH_NAND2 port map( A => n357, B => n70, Z => axi4s_rx_tready);
   U419 : GTECH_NOR2 port map( A => n358, B => n359, Z => n70);
   U420 : GTECH_NOR2 port map( A => n124, B => n360, Z => n359);
   U421 : GTECH_NOR2 port map( A => n94, B => n255, Z => n360);
   U422 : GTECH_NOT port map( A => n123, Z => n255);
   U423 : GTECH_NOT port map( A => n353, Z => n94);
   U424 : GTECH_NOT port map( A => n34, Z => n358);
   U425 : GTECH_NOR2 port map( A => n361, B => n362, Z => n34);
   U426 : GTECH_NOT port map( A => n84, Z => n362);
   U427 : GTECH_NAND2 port map( A => n363, B => n373, Z => n84);
   U428 : GTECH_NOR2 port map( A => n89, B => n364, Z => n363);
   U429 : GTECH_NOT port map( A => n344, Z => n364);
   U430 : GTECH_NAND2 port map( A => n90, B => n365, Z => n361);
   U431 : GTECH_NAND2 port map( A => n344, B => n95, Z => n365);
   U432 : GTECH_NOT port map( A => n124, Z => n95);
   U433 : GTECH_NAND2 port map( A => n373, B => n89, Z => n124);
   U434 : GTECH_NOR2 port map( A => n366, B => n376, Z => n344);
   U435 : GTECH_NAND2 port map( A => n201, B => n108, Z => n366);
   U436 : GTECH_NOT port map( A => n374, Z => n201);
   U437 : GTECH_NAND2 port map( A => n373, B => n351, Z => n90);
   U438 : GTECH_NOT port map( A => n346, Z => n351);
   U439 : GTECH_NAND2 port map( A => n367, B => n375, Z => n346);
   U440 : GTECH_NOR2 port map( A => n374, B => n376, Z => n367);
   U441 : GTECH_NOR2 port map( A => n199, B => n71, Z => n357);
   U442 : GTECH_NOT port map( A => n38, Z => n71);
   U443 : GTECH_NAND2 port map( A => n368, B => n373, Z => n38);
   U444 : GTECH_NOR2 port map( A => n89, B => n123, Z => n368);
   U445 : GTECH_NAND2 port map( A => n369, B => n376, Z => n123);
   U446 : GTECH_NOR2 port map( A => n374, B => n375, Z => n369);
   U447 : GTECH_NOT port map( A => n128, Z => n199);
   U448 : GTECH_NOR2 port map( A => n39, B => n128, Z => ACK_O);
   U449 : GTECH_NAND2 port map( A => n370, B => n373, Z => n128);
   U450 : GTECH_NOR2 port map( A => n353, B => n89, Z => n370);
   U451 : GTECH_NOT port map( A => n372, Z => n89);
   U452 : GTECH_NAND2 port map( A => n371, B => n376, Z => n353);
   U453 : GTECH_NOR2 port map( A => n374, B => n108, Z => n371);
   U454 : GTECH_NOT port map( A => n375, Z => n108);
   U455 : GTECH_NOT port map( A => axi4s_rx_tvalid, Z => n39);

end SYN_beh;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_itag3a.all;

entity axi4s_to_ll_bridge is

   port( clk, reset_b : in std_logic;  axi4s_tx_tdata : out std_logic_vector 
         (31 downto 0);  axi4s_tx_tstrb, axi4s_tx_tkeep : out std_logic_vector 
         (3 downto 0);  axi4s_tx_tvalid, axi4s_tx_tlast : out std_logic;  
         axi4s_tx_tid : out std_logic_vector (2 downto 0);  axi4s_tx_tdest : 
         out std_logic_vector (4 downto 0);  axi4s_tx_tuser : out 
         std_logic_vector (3 downto 0);  axi4s_tx_tready : in std_logic;  
         axi4s_rx_tdata : in std_logic_vector (31 downto 0);  axi4s_rx_tstrb, 
         axi4s_rx_tkeep : in std_logic_vector (3 downto 0);  axi4s_rx_tvalid, 
         axi4s_rx_tlast : in std_logic;  axi4s_rx_tid : in std_logic_vector (2 
         downto 0);  axi4s_rx_tdest : in std_logic_vector (4 downto 0);  
         axi4s_rx_tuser : in std_logic_vector (3 downto 0);  axi4s_rx_tready : 
         out std_logic;  ll_rx_data : out std_logic_vector (31 downto 0);  
         ll_rx_data_be : out std_logic_vector (3 downto 0);  ll_rx_sof_n, 
         ll_rx_eof_n, ll_rx_src_rdy_n : out std_logic;  ll_rx_dst_rdy_n : in 
         std_logic;  ll_tx_data : in std_logic_vector (31 downto 0);  
         ll_tx_data_be : in std_logic_vector (3 downto 0);  ll_tx_sof_n, 
         ll_tx_eof_n, ll_tx_src_rdy_n : in std_logic;  ll_tx_dst_rdy_n : out 
         std_logic;  rx_dst, rx_src : out std_logic_vector (4 downto 0);  
         rx_len : out std_logic_vector (31 downto 0);  tx_dst, tx_src : in 
         std_logic_vector (4 downto 0);  tx_len : in std_logic_vector (31 
         downto 0));

end axi4s_to_ll_bridge;

architecture SYN_beh of axi4s_to_ll_bridge is

   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component axi4s_to_ll_bridge_DW01_add_0
      port( A, B : in std_logic_vector (31 downto 0);  CI : in std_logic;  SUM 
            : out std_logic_vector (31 downto 0);  CO : out std_logic);
   end component;
   
   component axi4s_to_ll_bridge_DW01_sub_2
      port( A, B : in std_logic_vector (7 downto 0);  CI : in std_logic;  DIFF 
            : out std_logic_vector (7 downto 0);  CO : out std_logic);
   end component;
   
   component axi4s_to_ll_bridge_DW01_sub_1
      port( A, B : in std_logic_vector (31 downto 0);  CI : in std_logic;  DIFF
            : out std_logic_vector (31 downto 0);  CO : out std_logic);
   end component;
   
   component axi4s_to_ll_bridge_DW01_sub_0
      port( A, B : in std_logic_vector (7 downto 0);  CI : in std_logic;  DIFF 
            : out std_logic_vector (7 downto 0);  CO : out std_logic);
   end component;
   
   component axi4s_to_ll_bridge_DW01_cmp6_0
      port( A, B : in std_logic_vector (32 downto 0);  TC : in std_logic;  LT, 
            GT, EQ, LE, GE, NE : out std_logic);
   end component;
   
   component axi4s_to_ll_bridge_DW01_dec_0
      port( A : in std_logic_vector (7 downto 0);  SUM : out std_logic_vector 
            (7 downto 0));
   end component;
   
   component GTECH_FD1
      port( D, CP : in std_logic;  Q, QN : out std_logic);
   end component;
   
   signal X_Logic1_port, X_Logic0_port, axi4s_tx_tstrb_3_port, 
      axi4s_tx_tstrb_2_port, axi4s_tx_tstrb_1_port, axi4s_tx_tstrb_0_port, 
      rx_dst_4_port, rx_dst_3_port, rx_dst_2_port, rx_dst_1_port, rx_dst_0_port
      , rx_src_4_port, rx_src_3_port, rx_src_2_port, rx_src_1_port, 
      rx_src_0_port, rx_len_31_port, rx_len_30_port, rx_len_29_port, 
      rx_len_28_port, rx_len_27_port, rx_len_26_port, rx_len_25_port, 
      rx_len_24_port, rx_len_23_port, rx_len_22_port, rx_len_21_port, 
      rx_len_20_port, rx_len_19_port, rx_len_18_port, rx_len_17_port, 
      rx_len_16_port, rx_len_15_port, rx_len_14_port, rx_len_13_port, 
      rx_len_12_port, rx_len_11_port, rx_len_10_port, rx_len_9_port, 
      rx_len_8_port, rx_len_7_port, rx_len_6_port, rx_len_5_port, rx_len_4_port
      , rx_len_3_port, rx_len_2_port, rx_len_1_port, rx_len_0_port, 
      tx_len_curr_7_port, tx_len_curr_6_port, tx_len_curr_5_port, 
      tx_len_curr_4_port, tx_len_curr_3_port, tx_len_curr_2_port, 
      tx_len_curr_1_port, tx_len_curr_0_port, tx_dst_curr_4_port, 
      tx_dst_curr_3_port, tx_dst_curr_2_port, tx_dst_curr_1_port, 
      tx_dst_curr_0_port, N77, N78, N79, N80, N81, N82, N83, N84, N85, N86, N87
      , N88, N89, N90, N91, N92, N93, N94, N95, N96, N97, N98, N99, N100, N101,
      N102, N103, N104, N105, N106, N107, N108, N129, N130, N131, N132, N133, 
      N134, N135, N136, rx_counter_7_port, rx_counter_6_port, rx_counter_5_port
      , rx_counter_4_port, rx_counter_3_port, rx_counter_2_port, 
      rx_counter_1_port, rx_counter_0_port, N215, N216, N217, N218, N219, N220,
      N221, N222, N223, N224, N225, N226, N227, N228, N229, N230, N231, N232, 
      N233, N234, N235, N236, N237, N238, N239, N240, N241, N242, N243, N244, 
      N245, N246, N247, N248, N249, N250, N251, N252, N253, N254, N257, N262, 
      N263, N264, N265, N266, N267, N268, N269, n1, n2, n3, n4, n5, 
      ll_rx_src_rdy_n_port, n588, n589, n590, n591, n592, n593, n594, n595, 
      n596, n597, n598, n599, n600, n601, n602, n603, n604, n605, n606, n607, 
      n608, n609, n610, n611, n612, n613, n614, n615, n616, n617, n618, n619, 
      n620, n621, n622, n623, n624, n625, n626, n627, n628, n629, n630, n631, 
      n632, n633, n634, n635, n636, n637, n638, n639, n640, n641, n642, n643, 
      n644, n646, n647, n648, n649, n650, n651, n652, n653, n654, n655, n6, n7,
      n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, 
      n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37
      , n38, n39, n40, n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, 
      n52, n53, n54, n55, n56, n57, n58, n59, n60, n61, n62, n63, n64, n65, n66
      , n67, n68, n69, n70, n71, n72, n73, n74, n75, n76, n77_port, n78_port, 
      n79_port, n80_port, n81_port, n82_port, n83_port, n84_port, n85_port, 
      n86_port, n87_port, n88_port, n89_port, n90_port, n91_port, n92_port, 
      n93_port, n94_port, n95_port, n96_port, n97_port, n98_port, n99_port, 
      n100_port, n101_port, n102_port, n103_port, n104_port, n105_port, 
      n106_port, n107_port, n108_port, n109, n110, n111, n112, n113, n114, n115
      , n116, n117, n118, n119, n120, n121, n122, n123, n124, n125, n126, n127,
      n128, n129_port, n130_port, n131_port, n132_port, n133_port, n134_port, 
      n135_port, n136_port, n137, n138, n139, n140, n141, n142, n143, n144, 
      n145, n146, n147, n148, n149, n150, n151, n152, n153, n154, n155, n156, 
      n157, n158, n159, n160, n161, n162, n163, n164, n165, n166, n167, n168, 
      n169, n170, n171, n172, n173, n174, n175, n176, n177, n178, n179, n180, 
      n181, n182, n183, n184, n185, n186, n187, n188, n189, n190, n191, n192, 
      n193, n194, n195, n196, n197, n198, n199, n200, n201, n202, n203, n204, 
      n205, n206, n207, n208, n209, n210, n211, n212, n213, n214, n215_port, 
      n216_port, n217_port, n218_port, n219_port, n220_port, n221_port, 
      n222_port, n223_port, n224_port, n225_port, n226_port, n227_port, 
      n228_port, n229_port, n230_port, n231_port, n232_port, n233_port, 
      n234_port, n235_port, n236_port, n237_port, n238_port, n239_port, 
      n240_port, n241_port, n242_port, n243_port, n244_port, n245_port, 
      n246_port, n247_port, n248_port, n249_port, n250_port, n251_port, 
      n252_port, n253_port, n254_port, n255, n256, n257_port, n258, n259, n260,
      n261, n262_port, n263_port, n264_port, n265_port, n266_port, n267_port, 
      n268_port, n269_port, n270, n271, n272, n273, n274, n275, n276, n277, 
      n278, n279, n280, n281, n282, n283, n284, n285, n286, n287, n288, n289, 
      n290, n291, n292, n293, n294, n295, n296, n297, n298, n299, n300, n301, 
      n302, n303, n304, n305, n306, n307, n308, n309, n310, n311, n312, n313, 
      n314, n315, n316, n317, n318, n319, n320, n321, n322, n323, n324, n325, 
      n326, n327, n328, n329, n330, n331, n332, n333, n334, n335, n336, n337, 
      n338, n339, n340, n341, n342, n343, n344, n345, n346, n347, n348, n349, 
      n350, n351, n352, n353, n354, n355, n356, n357, n358, n359, n360, n361, 
      n362, n363, n364, n365, n366, n367, n368, n369, n370, n371, n372, n373, 
      n374, n375, n376, n377, n378, n379, n380, n381, n382, n383, n384, n385, 
      n386, n387, n388, n389, n390, n391, n392, n393, n394, n395, n396, n397, 
      n398, n399, n400, n401, n402, n403, n404, n405, n406, n407, n408, n409, 
      n410, n411, n412, n413, n414, n415, n416, n417, n418, n419, n420, n421, 
      n422, n423, n424, n425, n426, n427, n428, n429, n430, n431, n432, n433, 
      n434, n435, n436, n437, n438, n439, n440, n441, n442, n443, n444, n445, 
      n446, n447, n448, n449, n450, n451, n452, n453, n454, n455, n456, n457, 
      n458, n459, n460, n461, n462, n463, n464, n465, n466, n467, n468, n469, 
      n470, n471, n472, n473, n474, n475, n476, n477, n478, n479, n480, n481, 
      n482, n483, n484, n485, n486, n487, n488, n489, n490, n491, n492, n493, 
      n494, n495, n496, n497, n498, n499, n500, n501, n502, n503, n504, n505, 
      n506, n507, n508, n509, n510, n511, n512, n513, n514, n515, n516, n517, 
      n518, n519, n520, n521, n522, n523, n524, n525, n526, n527, n528, n529, 
      n530, n531, n532, n533, n534, n535, n536, n537, n538, n539, n540, n541, 
      n542, n543, n544, n545, n546, n547, n548, n549, n550, axi4s_tx_tlast_port
      , n552, n554, n555, n_1156, n_1157, n_1158, n_1159, n_1160, n_1161, 
      n_1162, n_1163, n_1164, n_1165, n_1166, n_1167, n_1168, n_1169, n_1170, 
      n_1171, n_1172, n_1173, n_1174, n_1175, n_1176, n_1177, n_1178, n_1179, 
      n_1180, n_1181, n_1182, n_1183, n_1184, n_1185, n_1186, n_1187, n_1188, 
      n_1189, n_1190, n_1191, n_1192, n_1193, n_1194, n_1195, n_1196, n_1197, 
      n_1198, n_1199, n_1200, n_1201, n_1202, n_1203, n_1204, n_1205, n_1206, 
      n_1207, n_1208, n_1209, n_1210, n_1211, n_1212, n_1213, n_1214, n_1215, 
      n_1216, n_1217, n_1218, n_1219, n_1220, n_1221, n_1222, n_1223, n_1224, 
      n_1225, n_1226, n_1227, n_1228, n_1229, n_1230, n_1231, n_1232, n_1233 : 
      std_logic;

begin
   axi4s_tx_tstrb <= ( axi4s_tx_tstrb_3_port, axi4s_tx_tstrb_2_port, 
      axi4s_tx_tstrb_1_port, axi4s_tx_tstrb_0_port );
   axi4s_tx_tkeep <= ( axi4s_tx_tstrb_3_port, axi4s_tx_tstrb_2_port, 
      axi4s_tx_tstrb_1_port, axi4s_tx_tstrb_0_port );
   axi4s_tx_tlast <= axi4s_tx_tlast_port;
   axi4s_tx_tid <= ( X_Logic0_port, X_Logic0_port, X_Logic0_port );
   axi4s_tx_tuser <= ( X_Logic0_port, X_Logic0_port, X_Logic0_port, 
      X_Logic0_port );
   ll_rx_src_rdy_n <= ll_rx_src_rdy_n_port;
   rx_dst <= ( rx_dst_4_port, rx_dst_3_port, rx_dst_2_port, rx_dst_1_port, 
      rx_dst_0_port );
   rx_src <= ( rx_src_4_port, rx_src_3_port, rx_src_2_port, rx_src_1_port, 
      rx_src_0_port );
   rx_len <= ( rx_len_31_port, rx_len_30_port, rx_len_29_port, rx_len_28_port, 
      rx_len_27_port, rx_len_26_port, rx_len_25_port, rx_len_24_port, 
      rx_len_23_port, rx_len_22_port, rx_len_21_port, rx_len_20_port, 
      rx_len_19_port, rx_len_18_port, rx_len_17_port, rx_len_16_port, 
      rx_len_15_port, rx_len_14_port, rx_len_13_port, rx_len_12_port, 
      rx_len_11_port, rx_len_10_port, rx_len_9_port, rx_len_8_port, 
      rx_len_7_port, rx_len_6_port, rx_len_5_port, rx_len_4_port, rx_len_3_port
      , rx_len_2_port, rx_len_1_port, rx_len_0_port );
   
   X_Logic1_port <= '1';
   X_Logic0_port <= '0';
   n1 <= '1';
   n2 <= '0';
   n3 <= '0';
   n4 <= '0';
   n5 <= '0';
   axi4s_tx_fsm_cs_reg_0_inst : GTECH_FD1 port map( D => n552, CP => clk, Q => 
                           n550, QN => n_1156);
   axi4s_tx_fsm_cs_reg_2_inst : GTECH_FD1 port map( D => n655, CP => clk, Q => 
                           n549, QN => n_1157);
   tx_len_curr_reg_0_inst : GTECH_FD1 port map( D => n653, CP => clk, Q => 
                           tx_len_curr_0_port, QN => n_1158);
   axi4s_tx_fsm_cs_reg_1_inst : GTECH_FD1 port map( D => n654, CP => clk, Q => 
                           n548, QN => n_1159);
   tx_len_curr_reg_1_inst : GTECH_FD1 port map( D => n652, CP => clk, Q => 
                           tx_len_curr_1_port, QN => n_1160);
   tx_len_curr_reg_2_inst : GTECH_FD1 port map( D => n651, CP => clk, Q => 
                           tx_len_curr_2_port, QN => n_1161);
   tx_len_curr_reg_3_inst : GTECH_FD1 port map( D => n650, CP => clk, Q => 
                           tx_len_curr_3_port, QN => n_1162);
   tx_len_curr_reg_4_inst : GTECH_FD1 port map( D => n649, CP => clk, Q => 
                           tx_len_curr_4_port, QN => n_1163);
   tx_len_curr_reg_5_inst : GTECH_FD1 port map( D => n648, CP => clk, Q => 
                           tx_len_curr_5_port, QN => n_1164);
   tx_len_curr_reg_6_inst : GTECH_FD1 port map( D => n647, CP => clk, Q => 
                           tx_len_curr_6_port, QN => n_1165);
   tx_len_curr_reg_7_inst : GTECH_FD1 port map( D => n646, CP => clk, Q => 
                           tx_len_curr_7_port, QN => n_1166);
   axi4s_rx_fsm_cs_reg_0_inst : GTECH_FD1 port map( D => n555, CP => clk, Q => 
                           n547, QN => n_1167);
   axi4s_rx_fsm_cs_reg_1_inst : GTECH_FD1 port map( D => n644, CP => clk, Q => 
                           n545, QN => n_1168);
   rx_counter_reg_0_inst : GTECH_FD1 port map( D => n642, CP => clk, Q => 
                           rx_counter_0_port, QN => n_1169);
   axi4s_rx_fsm_cs_reg_2_inst : GTECH_FD1 port map( D => n643, CP => clk, Q => 
                           n546, QN => n_1170);
   rx_counter_reg_1_inst : GTECH_FD1 port map( D => n641, CP => clk, Q => 
                           rx_counter_1_port, QN => n_1171);
   rx_counter_reg_2_inst : GTECH_FD1 port map( D => n640, CP => clk, Q => 
                           rx_counter_2_port, QN => n_1172);
   rx_counter_reg_3_inst : GTECH_FD1 port map( D => n639, CP => clk, Q => 
                           rx_counter_3_port, QN => n_1173);
   rx_counter_reg_4_inst : GTECH_FD1 port map( D => n638, CP => clk, Q => 
                           rx_counter_4_port, QN => n_1174);
   rx_counter_reg_5_inst : GTECH_FD1 port map( D => n637, CP => clk, Q => 
                           rx_counter_5_port, QN => n_1175);
   rx_counter_reg_6_inst : GTECH_FD1 port map( D => n636, CP => clk, Q => 
                           rx_counter_6_port, QN => n_1176);
   rx_counter_reg_7_inst : GTECH_FD1 port map( D => n635, CP => clk, Q => 
                           rx_counter_7_port, QN => n_1177);
   tx_dst_curr_reg_4_inst : GTECH_FD1 port map( D => n634, CP => clk, Q => 
                           tx_dst_curr_4_port, QN => n_1178);
   tx_dst_curr_reg_3_inst : GTECH_FD1 port map( D => n633, CP => clk, Q => 
                           tx_dst_curr_3_port, QN => n_1179);
   tx_dst_curr_reg_2_inst : GTECH_FD1 port map( D => n632, CP => clk, Q => 
                           tx_dst_curr_2_port, QN => n_1180);
   tx_dst_curr_reg_1_inst : GTECH_FD1 port map( D => n631, CP => clk, Q => 
                           tx_dst_curr_1_port, QN => n_1181);
   tx_dst_curr_reg_0_inst : GTECH_FD1 port map( D => n630, CP => clk, Q => 
                           tx_dst_curr_0_port, QN => n_1182);
   rx_dst_curr_reg_4_inst : GTECH_FD1 port map( D => n629, CP => clk, Q => 
                           rx_dst_4_port, QN => n_1183);
   rx_dst_curr_reg_3_inst : GTECH_FD1 port map( D => n628, CP => clk, Q => 
                           rx_dst_3_port, QN => n_1184);
   rx_dst_curr_reg_2_inst : GTECH_FD1 port map( D => n627, CP => clk, Q => 
                           rx_dst_2_port, QN => n_1185);
   rx_dst_curr_reg_1_inst : GTECH_FD1 port map( D => n626, CP => clk, Q => 
                           rx_dst_1_port, QN => n_1186);
   rx_dst_curr_reg_0_inst : GTECH_FD1 port map( D => n625, CP => clk, Q => 
                           rx_dst_0_port, QN => n_1187);
   rx_src_curr_reg_4_inst : GTECH_FD1 port map( D => n624, CP => clk, Q => 
                           rx_src_4_port, QN => n_1188);
   rx_src_curr_reg_3_inst : GTECH_FD1 port map( D => n623, CP => clk, Q => 
                           rx_src_3_port, QN => n_1189);
   rx_src_curr_reg_2_inst : GTECH_FD1 port map( D => n622, CP => clk, Q => 
                           rx_src_2_port, QN => n_1190);
   rx_src_curr_reg_1_inst : GTECH_FD1 port map( D => n621, CP => clk, Q => 
                           rx_src_1_port, QN => n_1191);
   rx_src_curr_reg_0_inst : GTECH_FD1 port map( D => n620, CP => clk, Q => 
                           rx_src_0_port, QN => n_1192);
   rx_len_curr_reg_31_inst : GTECH_FD1 port map( D => n619, CP => clk, Q => 
                           rx_len_31_port, QN => n_1193);
   rx_len_curr_reg_30_inst : GTECH_FD1 port map( D => n618, CP => clk, Q => 
                           rx_len_30_port, QN => n_1194);
   rx_len_curr_reg_29_inst : GTECH_FD1 port map( D => n617, CP => clk, Q => 
                           rx_len_29_port, QN => n_1195);
   rx_len_curr_reg_28_inst : GTECH_FD1 port map( D => n616, CP => clk, Q => 
                           rx_len_28_port, QN => n_1196);
   rx_len_curr_reg_27_inst : GTECH_FD1 port map( D => n615, CP => clk, Q => 
                           rx_len_27_port, QN => n_1197);
   rx_len_curr_reg_26_inst : GTECH_FD1 port map( D => n614, CP => clk, Q => 
                           rx_len_26_port, QN => n_1198);
   rx_len_curr_reg_25_inst : GTECH_FD1 port map( D => n613, CP => clk, Q => 
                           rx_len_25_port, QN => n_1199);
   rx_len_curr_reg_24_inst : GTECH_FD1 port map( D => n612, CP => clk, Q => 
                           rx_len_24_port, QN => n_1200);
   rx_len_curr_reg_23_inst : GTECH_FD1 port map( D => n611, CP => clk, Q => 
                           rx_len_23_port, QN => n_1201);
   rx_len_curr_reg_22_inst : GTECH_FD1 port map( D => n610, CP => clk, Q => 
                           rx_len_22_port, QN => n_1202);
   rx_len_curr_reg_21_inst : GTECH_FD1 port map( D => n609, CP => clk, Q => 
                           rx_len_21_port, QN => n_1203);
   rx_len_curr_reg_20_inst : GTECH_FD1 port map( D => n608, CP => clk, Q => 
                           rx_len_20_port, QN => n_1204);
   rx_len_curr_reg_19_inst : GTECH_FD1 port map( D => n607, CP => clk, Q => 
                           rx_len_19_port, QN => n_1205);
   rx_len_curr_reg_18_inst : GTECH_FD1 port map( D => n606, CP => clk, Q => 
                           rx_len_18_port, QN => n_1206);
   rx_len_curr_reg_17_inst : GTECH_FD1 port map( D => n605, CP => clk, Q => 
                           rx_len_17_port, QN => n_1207);
   rx_len_curr_reg_16_inst : GTECH_FD1 port map( D => n604, CP => clk, Q => 
                           rx_len_16_port, QN => n_1208);
   rx_len_curr_reg_15_inst : GTECH_FD1 port map( D => n603, CP => clk, Q => 
                           rx_len_15_port, QN => n_1209);
   rx_len_curr_reg_14_inst : GTECH_FD1 port map( D => n602, CP => clk, Q => 
                           rx_len_14_port, QN => n_1210);
   rx_len_curr_reg_13_inst : GTECH_FD1 port map( D => n601, CP => clk, Q => 
                           rx_len_13_port, QN => n_1211);
   rx_len_curr_reg_12_inst : GTECH_FD1 port map( D => n600, CP => clk, Q => 
                           rx_len_12_port, QN => n_1212);
   rx_len_curr_reg_11_inst : GTECH_FD1 port map( D => n599, CP => clk, Q => 
                           rx_len_11_port, QN => n_1213);
   rx_len_curr_reg_10_inst : GTECH_FD1 port map( D => n598, CP => clk, Q => 
                           rx_len_10_port, QN => n_1214);
   rx_len_curr_reg_9_inst : GTECH_FD1 port map( D => n597, CP => clk, Q => 
                           rx_len_9_port, QN => n_1215);
   rx_len_curr_reg_8_inst : GTECH_FD1 port map( D => n596, CP => clk, Q => 
                           rx_len_8_port, QN => n_1216);
   rx_len_curr_reg_7_inst : GTECH_FD1 port map( D => n595, CP => clk, Q => 
                           rx_len_7_port, QN => n_1217);
   rx_len_curr_reg_6_inst : GTECH_FD1 port map( D => n594, CP => clk, Q => 
                           rx_len_6_port, QN => n_1218);
   rx_len_curr_reg_5_inst : GTECH_FD1 port map( D => n593, CP => clk, Q => 
                           rx_len_5_port, QN => n_1219);
   rx_len_curr_reg_4_inst : GTECH_FD1 port map( D => n592, CP => clk, Q => 
                           rx_len_4_port, QN => n_1220);
   rx_len_curr_reg_3_inst : GTECH_FD1 port map( D => n591, CP => clk, Q => 
                           rx_len_3_port, QN => n_1221);
   rx_len_curr_reg_2_inst : GTECH_FD1 port map( D => n590, CP => clk, Q => 
                           rx_len_2_port, QN => n_1222);
   rx_len_curr_reg_1_inst : GTECH_FD1 port map( D => n589, CP => clk, Q => 
                           rx_len_1_port, QN => n_1223);
   rx_len_curr_reg_0_inst : GTECH_FD1 port map( D => n588, CP => clk, Q => 
                           rx_len_0_port, QN => n_1224);
   sub_438 : axi4s_to_ll_bridge_DW01_dec_0 port map( A(7) => rx_counter_7_port,
                           A(6) => rx_counter_6_port, A(5) => rx_counter_5_port
                           , A(4) => rx_counter_4_port, A(3) => 
                           rx_counter_3_port, A(2) => rx_counter_2_port, A(1) 
                           => rx_counter_1_port, A(0) => rx_counter_0_port, 
                           SUM(7) => N269, SUM(6) => N268, SUM(5) => N267, 
                           SUM(4) => N266, SUM(3) => N265, SUM(2) => N264, 
                           SUM(1) => N263, SUM(0) => N262);
   eq_424 : axi4s_to_ll_bridge_DW01_cmp6_0 port map( A(32) => X_Logic0_port, 
                           A(31) => X_Logic0_port, A(30) => X_Logic0_port, 
                           A(29) => X_Logic0_port, A(28) => X_Logic0_port, 
                           A(27) => X_Logic0_port, A(26) => X_Logic0_port, 
                           A(25) => X_Logic0_port, A(24) => X_Logic0_port, 
                           A(23) => X_Logic0_port, A(22) => X_Logic0_port, 
                           A(21) => X_Logic0_port, A(20) => X_Logic0_port, 
                           A(19) => X_Logic0_port, A(18) => X_Logic0_port, 
                           A(17) => X_Logic0_port, A(16) => X_Logic0_port, 
                           A(15) => X_Logic0_port, A(14) => X_Logic0_port, 
                           A(13) => X_Logic0_port, A(12) => X_Logic0_port, 
                           A(11) => X_Logic0_port, A(10) => X_Logic0_port, A(9)
                           => X_Logic0_port, A(8) => X_Logic0_port, A(7) => 
                           rx_counter_7_port, A(6) => rx_counter_6_port, A(5) 
                           => rx_counter_5_port, A(4) => rx_counter_4_port, 
                           A(3) => rx_counter_3_port, A(2) => rx_counter_2_port
                           , A(1) => rx_counter_1_port, A(0) => 
                           rx_counter_0_port, B(32) => X_Logic0_port, B(31) => 
                           rx_len_31_port, B(30) => rx_len_30_port, B(29) => 
                           rx_len_29_port, B(28) => rx_len_28_port, B(27) => 
                           rx_len_27_port, B(26) => rx_len_26_port, B(25) => 
                           rx_len_25_port, B(24) => rx_len_24_port, B(23) => 
                           rx_len_23_port, B(22) => rx_len_22_port, B(21) => 
                           rx_len_21_port, B(20) => rx_len_20_port, B(19) => 
                           rx_len_19_port, B(18) => rx_len_18_port, B(17) => 
                           rx_len_17_port, B(16) => rx_len_16_port, B(15) => 
                           rx_len_15_port, B(14) => rx_len_14_port, B(13) => 
                           rx_len_13_port, B(12) => rx_len_12_port, B(11) => 
                           rx_len_11_port, B(10) => rx_len_10_port, B(9) => 
                           rx_len_9_port, B(8) => rx_len_8_port, B(7) => 
                           rx_len_7_port, B(6) => rx_len_6_port, B(5) => 
                           rx_len_5_port, B(4) => rx_len_4_port, B(3) => 
                           rx_len_3_port, B(2) => rx_len_2_port, B(1) => 
                           rx_len_1_port, B(0) => rx_len_0_port, TC => n1, LT 
                           => n_1225, GT => n_1226, EQ => N257, LE => n_1227, 
                           GE => n_1228, NE => n_1229);
   sub_406 : axi4s_to_ll_bridge_DW01_sub_0 port map( A(7) => axi4s_rx_tdata(7),
                           A(6) => axi4s_rx_tdata(6), A(5) => axi4s_rx_tdata(5)
                           , A(4) => axi4s_rx_tdata(4), A(3) => 
                           axi4s_rx_tdata(3), A(2) => axi4s_rx_tdata(2), A(1) 
                           => axi4s_rx_tdata(1), A(0) => axi4s_rx_tdata(0), 
                           B(7) => X_Logic0_port, B(6) => X_Logic0_port, B(5) 
                           => X_Logic0_port, B(4) => X_Logic0_port, B(3) => 
                           X_Logic0_port, B(2) => X_Logic1_port, B(1) => 
                           X_Logic0_port, B(0) => X_Logic0_port, CI => n2, 
                           DIFF(7) => N254, DIFF(6) => N253, DIFF(5) => N252, 
                           DIFF(4) => N251, DIFF(3) => N250, DIFF(2) => N249, 
                           DIFF(1) => N248, DIFF(0) => N247, CO => n_1230);
   sub_405 : axi4s_to_ll_bridge_DW01_sub_1 port map( A(31) => 
                           axi4s_rx_tdata(31), A(30) => axi4s_rx_tdata(30), 
                           A(29) => axi4s_rx_tdata(29), A(28) => 
                           axi4s_rx_tdata(28), A(27) => axi4s_rx_tdata(27), 
                           A(26) => axi4s_rx_tdata(26), A(25) => 
                           axi4s_rx_tdata(25), A(24) => axi4s_rx_tdata(24), 
                           A(23) => axi4s_rx_tdata(23), A(22) => 
                           axi4s_rx_tdata(22), A(21) => axi4s_rx_tdata(21), 
                           A(20) => axi4s_rx_tdata(20), A(19) => 
                           axi4s_rx_tdata(19), A(18) => axi4s_rx_tdata(18), 
                           A(17) => axi4s_rx_tdata(17), A(16) => 
                           axi4s_rx_tdata(16), A(15) => axi4s_rx_tdata(15), 
                           A(14) => axi4s_rx_tdata(14), A(13) => 
                           axi4s_rx_tdata(13), A(12) => axi4s_rx_tdata(12), 
                           A(11) => axi4s_rx_tdata(11), A(10) => 
                           axi4s_rx_tdata(10), A(9) => axi4s_rx_tdata(9), A(8) 
                           => axi4s_rx_tdata(8), A(7) => axi4s_rx_tdata(7), 
                           A(6) => axi4s_rx_tdata(6), A(5) => axi4s_rx_tdata(5)
                           , A(4) => axi4s_rx_tdata(4), A(3) => 
                           axi4s_rx_tdata(3), A(2) => axi4s_rx_tdata(2), A(1) 
                           => axi4s_rx_tdata(1), A(0) => axi4s_rx_tdata(0), 
                           B(31) => X_Logic0_port, B(30) => X_Logic0_port, 
                           B(29) => X_Logic0_port, B(28) => X_Logic0_port, 
                           B(27) => X_Logic0_port, B(26) => X_Logic0_port, 
                           B(25) => X_Logic0_port, B(24) => X_Logic0_port, 
                           B(23) => X_Logic0_port, B(22) => X_Logic0_port, 
                           B(21) => X_Logic0_port, B(20) => X_Logic0_port, 
                           B(19) => X_Logic0_port, B(18) => X_Logic0_port, 
                           B(17) => X_Logic0_port, B(16) => X_Logic0_port, 
                           B(15) => X_Logic0_port, B(14) => X_Logic0_port, 
                           B(13) => X_Logic0_port, B(12) => X_Logic0_port, 
                           B(11) => X_Logic0_port, B(10) => X_Logic0_port, B(9)
                           => X_Logic0_port, B(8) => X_Logic0_port, B(7) => 
                           X_Logic0_port, B(6) => X_Logic0_port, B(5) => 
                           X_Logic0_port, B(4) => X_Logic0_port, B(3) => 
                           X_Logic0_port, B(2) => X_Logic1_port, B(1) => 
                           X_Logic0_port, B(0) => X_Logic0_port, CI => n3, 
                           DIFF(31) => N246, DIFF(30) => N245, DIFF(29) => N244
                           , DIFF(28) => N243, DIFF(27) => N242, DIFF(26) => 
                           N241, DIFF(25) => N240, DIFF(24) => N239, DIFF(23) 
                           => N238, DIFF(22) => N237, DIFF(21) => N236, 
                           DIFF(20) => N235, DIFF(19) => N234, DIFF(18) => N233
                           , DIFF(17) => N232, DIFF(16) => N231, DIFF(15) => 
                           N230, DIFF(14) => N229, DIFF(13) => N228, DIFF(12) 
                           => N227, DIFF(11) => N226, DIFF(10) => N225, DIFF(9)
                           => N224, DIFF(8) => N223, DIFF(7) => N222, DIFF(6) 
                           => N221, DIFF(5) => N220, DIFF(4) => N219, DIFF(3) 
                           => N218, DIFF(2) => N217, DIFF(1) => N216, DIFF(0) 
                           => N215, CO => n_1231);
   sub_233_aco : axi4s_to_ll_bridge_DW01_sub_2 port map( A(7) => 
                           tx_len_curr_7_port, A(6) => tx_len_curr_6_port, A(5)
                           => tx_len_curr_5_port, A(4) => tx_len_curr_4_port, 
                           A(3) => tx_len_curr_3_port, A(2) => 
                           tx_len_curr_2_port, A(1) => tx_len_curr_1_port, A(0)
                           => tx_len_curr_0_port, B(7) => X_Logic0_port, B(6) 
                           => X_Logic0_port, B(5) => X_Logic0_port, B(4) => 
                           X_Logic0_port, B(3) => X_Logic0_port, B(2) => 
                           X_Logic0_port, B(1) => X_Logic0_port, B(0) => n554, 
                           CI => n4, DIFF(7) => N136, DIFF(6) => N135, DIFF(5) 
                           => N134, DIFF(4) => N133, DIFF(3) => N132, DIFF(2) 
                           => N131, DIFF(1) => N130, DIFF(0) => N129, CO => 
                           n_1232);
   add_191 : axi4s_to_ll_bridge_DW01_add_0 port map( A(31) => tx_len(31), A(30)
                           => tx_len(30), A(29) => tx_len(29), A(28) => 
                           tx_len(28), A(27) => tx_len(27), A(26) => tx_len(26)
                           , A(25) => tx_len(25), A(24) => tx_len(24), A(23) =>
                           tx_len(23), A(22) => tx_len(22), A(21) => tx_len(21)
                           , A(20) => tx_len(20), A(19) => tx_len(19), A(18) =>
                           tx_len(18), A(17) => tx_len(17), A(16) => tx_len(16)
                           , A(15) => tx_len(15), A(14) => tx_len(14), A(13) =>
                           tx_len(13), A(12) => tx_len(12), A(11) => tx_len(11)
                           , A(10) => tx_len(10), A(9) => tx_len(9), A(8) => 
                           tx_len(8), A(7) => tx_len(7), A(6) => tx_len(6), 
                           A(5) => tx_len(5), A(4) => tx_len(4), A(3) => 
                           tx_len(3), A(2) => tx_len(2), A(1) => tx_len(1), 
                           A(0) => tx_len(0), B(31) => X_Logic0_port, B(30) => 
                           X_Logic0_port, B(29) => X_Logic0_port, B(28) => 
                           X_Logic0_port, B(27) => X_Logic0_port, B(26) => 
                           X_Logic0_port, B(25) => X_Logic0_port, B(24) => 
                           X_Logic0_port, B(23) => X_Logic0_port, B(22) => 
                           X_Logic0_port, B(21) => X_Logic0_port, B(20) => 
                           X_Logic0_port, B(19) => X_Logic0_port, B(18) => 
                           X_Logic0_port, B(17) => X_Logic0_port, B(16) => 
                           X_Logic0_port, B(15) => X_Logic0_port, B(14) => 
                           X_Logic0_port, B(13) => X_Logic0_port, B(12) => 
                           X_Logic0_port, B(11) => X_Logic0_port, B(10) => 
                           X_Logic0_port, B(9) => X_Logic0_port, B(8) => 
                           X_Logic0_port, B(7) => X_Logic0_port, B(6) => 
                           X_Logic0_port, B(5) => X_Logic0_port, B(4) => 
                           X_Logic0_port, B(3) => X_Logic0_port, B(2) => 
                           X_Logic1_port, B(1) => X_Logic0_port, B(0) => 
                           X_Logic0_port, CI => n5, SUM(31) => N108, SUM(30) =>
                           N107, SUM(29) => N106, SUM(28) => N105, SUM(27) => 
                           N104, SUM(26) => N103, SUM(25) => N102, SUM(24) => 
                           N101, SUM(23) => N100, SUM(22) => N99, SUM(21) => 
                           N98, SUM(20) => N97, SUM(19) => N96, SUM(18) => N95,
                           SUM(17) => N94, SUM(16) => N93, SUM(15) => N92, 
                           SUM(14) => N91, SUM(13) => N90, SUM(12) => N89, 
                           SUM(11) => N88, SUM(10) => N87, SUM(9) => N86, 
                           SUM(8) => N85, SUM(7) => N84, SUM(6) => N83, SUM(5) 
                           => N82, SUM(4) => N81, SUM(3) => N80, SUM(2) => N79,
                           SUM(1) => N78, SUM(0) => N77, CO => n_1233);
   U3 : GTECH_NOR2 port map( A => n6, B => n7, Z => n552);
   U4 : GTECH_NOT port map( A => n8, Z => n6);
   U5 : GTECH_NOR2 port map( A => n9, B => n10, Z => n8);
   U6 : GTECH_NOR2 port map( A => n11, B => n12, Z => n10);
   U7 : GTECH_NAND2 port map( A => n13, B => n14, Z => n12);
   U8 : GTECH_NOR2 port map( A => n15, B => n16, Z => n14);
   U14 : GTECH_NOR2 port map( A => n17, B => n18, Z => n13);
   U15 : GTECH_NOR2 port map( A => n19, B => n20, Z => n18);
   U16 : GTECH_NOR2 port map( A => n21, B => n22, Z => n17);
   U17 : GTECH_NOR2 port map( A => ll_tx_eof_n, B => n23, Z => n21);
   U18 : GTECH_NOT port map( A => n24, Z => n11);
   U19 : GTECH_NOR2 port map( A => n550, B => n24, Z => n9);
   U20 : GTECH_NOT port map( A => n25, Z => axi4s_tx_tdata(4));
   U21 : GTECH_NOR2 port map( A => n26, B => n27, Z => n25);
   U22 : GTECH_NAND2 port map( A => n28, B => n29, Z => n27);
   U23 : GTECH_NAND2 port map( A => tx_src(4), B => n30, Z => n29);
   U24 : GTECH_NAND2 port map( A => tx_dst(4), B => n16, Z => n28);
   U25 : GTECH_NAND2 port map( A => n31, B => n32, Z => n26);
   U26 : GTECH_NAND2 port map( A => N81, B => n15, Z => n32);
   U27 : GTECH_NAND2 port map( A => ll_tx_data(4), B => n33, Z => n31);
   U28 : GTECH_NOT port map( A => n34, Z => n554);
   U29 : GTECH_NAND2 port map( A => n23, B => n35, Z => n34);
   U30 : GTECH_NAND2 port map( A => n36, B => n37, Z => n555);
   U31 : GTECH_NOR2 port map( A => n38, B => n39, Z => n37);
   U32 : GTECH_NOR2 port map( A => n40, B => n41, Z => n39);
   U33 : GTECH_NOR2 port map( A => n42, B => n43, Z => n38);
   U34 : GTECH_NOR2 port map( A => n44, B => n45, Z => n36);
   U35 : GTECH_NOR2 port map( A => n46, B => n7, Z => n45);
   U36 : GTECH_NOT port map( A => n47, Z => n46);
   U37 : GTECH_NOR2 port map( A => n48, B => n49, Z => n44);
   U38 : GTECH_NOR2 port map( A => n50, B => n51, Z => ll_rx_data(4));
   U39 : GTECH_NOT port map( A => axi4s_rx_tdata(4), Z => n51);
   U40 : GTECH_NOR2 port map( A => n50, B => n52, Z => ll_rx_data(3));
   U41 : GTECH_NOT port map( A => axi4s_rx_tdata(3), Z => n52);
   U42 : GTECH_NOR2 port map( A => n50, B => n53, Z => ll_rx_data(2));
   U43 : GTECH_NOT port map( A => axi4s_rx_tdata(2), Z => n53);
   U44 : GTECH_NOR2 port map( A => n50, B => n54, Z => ll_rx_data(1));
   U45 : GTECH_NOT port map( A => axi4s_rx_tdata(1), Z => n54);
   U46 : GTECH_NOR2 port map( A => n50, B => n55, Z => ll_rx_data(0));
   U47 : GTECH_NOT port map( A => axi4s_rx_tdata(0), Z => n55);
   U48 : GTECH_NAND2 port map( A => n56, B => n57, Z => n655);
   U49 : GTECH_NAND2 port map( A => reset_b, B => n58, Z => n57);
   U50 : GTECH_NAND2 port map( A => n59, B => n60, Z => n58);
   U51 : GTECH_NAND2 port map( A => n550, B => n549, Z => n60);
   U52 : GTECH_NAND2 port map( A => n61, B => n62, Z => n56);
   U53 : GTECH_NAND2 port map( A => n63, B => n64, Z => n654);
   U54 : GTECH_NAND2 port map( A => n65, B => n548, Z => n64);
   U55 : GTECH_NOT port map( A => n66, Z => n63);
   U56 : GTECH_NOR2 port map( A => n65, B => n67, Z => n66);
   U57 : GTECH_NOR2 port map( A => n68, B => n69, Z => n67);
   U58 : GTECH_NOT port map( A => n70, Z => n69);
   U59 : GTECH_NAND2 port map( A => n61, B => n23, Z => n70);
   U60 : GTECH_NOT port map( A => n62, Z => n23);
   U61 : GTECH_NOR2 port map( A => n71, B => n72, Z => n62);
   U62 : GTECH_NAND2 port map( A => n73, B => n74, Z => n72);
   U63 : GTECH_NOR2 port map( A => tx_len_curr_3_port, B => tx_len_curr_4_port,
                           Z => n74);
   U64 : GTECH_NOR2 port map( A => n75, B => tx_len_curr_5_port, Z => n73);
   U65 : GTECH_NAND2 port map( A => n76, B => n77_port, Z => n75);
   U66 : GTECH_NAND2 port map( A => n78_port, B => n79_port, Z => n71);
   U67 : GTECH_NOT port map( A => n80_port, Z => n79_port);
   U68 : GTECH_NAND2 port map( A => tx_len_curr_0_port, B => n35, Z => n80_port
                           );
   U69 : GTECH_NOR2 port map( A => tx_len_curr_1_port, B => tx_len_curr_2_port,
                           Z => n78_port);
   U70 : GTECH_NAND2 port map( A => n81_port, B => n82_port, Z => n68);
   U71 : GTECH_NAND2 port map( A => n83_port, B => reset_b, Z => n82_port);
   U72 : GTECH_NAND2 port map( A => n59, B => n84_port, Z => n83_port);
   U73 : GTECH_NOR2 port map( A => n7, B => n24, Z => n65);
   U74 : GTECH_NAND2 port map( A => n85_port, B => n86_port, Z => n24);
   U75 : GTECH_NAND2 port map( A => n87_port, B => n88_port, Z => n86_port);
   U76 : GTECH_NOT port map( A => n89_port, Z => n88_port);
   U77 : GTECH_NOR2 port map( A => n15, B => n90_port, Z => n87_port);
   U78 : GTECH_NOR2 port map( A => axi4s_tx_tready, B => n59, Z => n90_port);
   U79 : GTECH_NAND2 port map( A => n35, B => n91_port, Z => n85_port);
   U80 : GTECH_NAND2 port map( A => ll_tx_sof_n, B => n16, Z => n91_port);
   U81 : GTECH_NOR2 port map( A => n92_port, B => ll_tx_src_rdy_n, Z => n35);
   U82 : GTECH_NAND2 port map( A => n93_port, B => n94_port, Z => n653);
   U83 : GTECH_NOT port map( A => n95_port, Z => n94_port);
   U84 : GTECH_NAND2 port map( A => n96_port, B => n97_port, Z => n95_port);
   U85 : GTECH_NAND2 port map( A => N129, B => n61, Z => n97_port);
   U86 : GTECH_NAND2 port map( A => tx_len(0), B => n98_port, Z => n96_port);
   U87 : GTECH_NAND2 port map( A => tx_len_curr_0_port, B => n99_port, Z => 
                           n93_port);
   U88 : GTECH_NAND2 port map( A => n100_port, B => n101_port, Z => n652);
   U89 : GTECH_NOT port map( A => n102_port, Z => n101_port);
   U90 : GTECH_NAND2 port map( A => n103_port, B => n104_port, Z => n102_port);
   U91 : GTECH_NAND2 port map( A => N130, B => n61, Z => n104_port);
   U92 : GTECH_NAND2 port map( A => tx_len(1), B => n98_port, Z => n103_port);
   U93 : GTECH_NAND2 port map( A => n99_port, B => tx_len_curr_1_port, Z => 
                           n100_port);
   U94 : GTECH_NAND2 port map( A => n105_port, B => n106_port, Z => n651);
   U95 : GTECH_NOT port map( A => n107_port, Z => n106_port);
   U96 : GTECH_NAND2 port map( A => n108_port, B => n109, Z => n107_port);
   U97 : GTECH_NAND2 port map( A => N131, B => n61, Z => n109);
   U98 : GTECH_NAND2 port map( A => tx_len(2), B => n98_port, Z => n108_port);
   U99 : GTECH_NAND2 port map( A => n99_port, B => tx_len_curr_2_port, Z => 
                           n105_port);
   U100 : GTECH_NAND2 port map( A => n110, B => n111, Z => n650);
   U101 : GTECH_NOT port map( A => n112, Z => n111);
   U102 : GTECH_NAND2 port map( A => n113, B => n114, Z => n112);
   U103 : GTECH_NAND2 port map( A => N132, B => n61, Z => n114);
   U104 : GTECH_NAND2 port map( A => tx_len(3), B => n98_port, Z => n113);
   U105 : GTECH_NAND2 port map( A => n99_port, B => tx_len_curr_3_port, Z => 
                           n110);
   U106 : GTECH_NAND2 port map( A => n115, B => n116, Z => n649);
   U107 : GTECH_NOT port map( A => n117, Z => n116);
   U108 : GTECH_NAND2 port map( A => n118, B => n119, Z => n117);
   U109 : GTECH_NAND2 port map( A => N133, B => n61, Z => n119);
   U110 : GTECH_NAND2 port map( A => tx_len(4), B => n98_port, Z => n118);
   U111 : GTECH_NAND2 port map( A => n99_port, B => tx_len_curr_4_port, Z => 
                           n115);
   U112 : GTECH_NAND2 port map( A => n120, B => n121, Z => n648);
   U113 : GTECH_NOT port map( A => n122, Z => n121);
   U114 : GTECH_NAND2 port map( A => n123, B => n124, Z => n122);
   U115 : GTECH_NAND2 port map( A => N134, B => n61, Z => n124);
   U116 : GTECH_NAND2 port map( A => tx_len(5), B => n98_port, Z => n123);
   U117 : GTECH_NAND2 port map( A => n99_port, B => tx_len_curr_5_port, Z => 
                           n120);
   U118 : GTECH_NOT port map( A => n125, Z => n647);
   U119 : GTECH_NOR2 port map( A => n126, B => n127, Z => n125);
   U120 : GTECH_NAND2 port map( A => n128, B => n129_port, Z => n127);
   U121 : GTECH_NAND2 port map( A => N135, B => n61, Z => n129_port);
   U122 : GTECH_NAND2 port map( A => tx_len(6), B => n98_port, Z => n128);
   U123 : GTECH_NOR2 port map( A => n130_port, B => n77_port, Z => n126);
   U124 : GTECH_NOT port map( A => tx_len_curr_6_port, Z => n77_port);
   U125 : GTECH_NOT port map( A => n131_port, Z => n646);
   U126 : GTECH_NOR2 port map( A => n132_port, B => n133_port, Z => n131_port);
   U127 : GTECH_NAND2 port map( A => n134_port, B => n135_port, Z => n133_port)
                           ;
   U128 : GTECH_NAND2 port map( A => N136, B => n61, Z => n135_port);
   U129 : GTECH_NOR2 port map( A => n7, B => n22, Z => n61);
   U130 : GTECH_NAND2 port map( A => tx_len(7), B => n98_port, Z => n134_port);
   U131 : GTECH_NOT port map( A => n81_port, Z => n98_port);
   U132 : GTECH_NAND2 port map( A => n15, B => reset_b, Z => n81_port);
   U133 : GTECH_NOR2 port map( A => n130_port, B => n76, Z => n132_port);
   U134 : GTECH_NOT port map( A => tx_len_curr_7_port, Z => n76);
   U135 : GTECH_NOT port map( A => n99_port, Z => n130_port);
   U136 : GTECH_NOR2 port map( A => n7, B => n136_port, Z => n99_port);
   U137 : GTECH_NAND2 port map( A => n137, B => n138, Z => n644);
   U138 : GTECH_NAND2 port map( A => n139, B => n140, Z => n138);
   U139 : GTECH_NOR2 port map( A => axi4s_rx_tlast, B => n48, Z => n139);
   U140 : GTECH_NOR2 port map( A => n141, B => n142, Z => n137);
   U141 : GTECH_NOR2 port map( A => n40, B => n143, Z => n142);
   U142 : GTECH_NOR2 port map( A => n144, B => n145, Z => n143);
   U143 : GTECH_NOR2 port map( A => n146, B => n7, Z => n144);
   U144 : GTECH_NOT port map( A => n147, Z => n146);
   U145 : GTECH_NOT port map( A => n43, Z => n40);
   U146 : GTECH_NOR2 port map( A => n148, B => n43, Z => n141);
   U147 : GTECH_NAND2 port map( A => n149, B => reset_b, Z => n43);
   U148 : GTECH_NOR2 port map( A => axi4s_rx_tvalid, B => n150, Z => n149);
   U149 : GTECH_NOR2 port map( A => n147, B => n151, Z => n150);
   U150 : GTECH_NOT port map( A => n152, Z => n151);
   U151 : GTECH_NOR2 port map( A => n153, B => n7, Z => n643);
   U152 : GTECH_NOR2 port map( A => n47, B => n154, Z => n153);
   U153 : GTECH_NAND2 port map( A => n155, B => n156, Z => n154);
   U154 : GTECH_NAND2 port map( A => n48, B => n157, Z => n155);
   U155 : GTECH_NOR2 port map( A => n158, B => n159, Z => n48);
   U156 : GTECH_NAND2 port map( A => n160, B => n161, Z => n158);
   U157 : GTECH_NOT port map( A => ll_rx_dst_rdy_n, Z => n160);
   U158 : GTECH_NAND2 port map( A => n162, B => n163, Z => n47);
   U159 : GTECH_NAND2 port map( A => axi4s_rx_tlast, B => n157, Z => n163);
   U160 : GTECH_NAND2 port map( A => n546, B => n547, Z => n162);
   U161 : GTECH_NAND2 port map( A => n164, B => n165, Z => n642);
   U162 : GTECH_NOT port map( A => n166, Z => n165);
   U163 : GTECH_NAND2 port map( A => n167, B => n168, Z => n166);
   U164 : GTECH_NAND2 port map( A => N262, B => n169, Z => n168);
   U165 : GTECH_NAND2 port map( A => N247, B => n145, Z => n167);
   U166 : GTECH_NAND2 port map( A => rx_counter_0_port, B => n170, Z => n164);
   U167 : GTECH_NAND2 port map( A => n171, B => n172, Z => n641);
   U168 : GTECH_NOT port map( A => n173, Z => n172);
   U169 : GTECH_NAND2 port map( A => n174, B => n175, Z => n173);
   U170 : GTECH_NAND2 port map( A => N263, B => n169, Z => n175);
   U171 : GTECH_NAND2 port map( A => N248, B => n145, Z => n174);
   U172 : GTECH_NAND2 port map( A => n170, B => rx_counter_1_port, Z => n171);
   U173 : GTECH_NAND2 port map( A => n176, B => n177, Z => n640);
   U174 : GTECH_NOT port map( A => n178, Z => n177);
   U175 : GTECH_NAND2 port map( A => n179, B => n180, Z => n178);
   U176 : GTECH_NAND2 port map( A => N264, B => n169, Z => n180);
   U177 : GTECH_NAND2 port map( A => N249, B => n145, Z => n179);
   U178 : GTECH_NAND2 port map( A => n170, B => rx_counter_2_port, Z => n176);
   U179 : GTECH_NAND2 port map( A => n181, B => n182, Z => n639);
   U180 : GTECH_NOT port map( A => n183, Z => n182);
   U181 : GTECH_NAND2 port map( A => n184, B => n185, Z => n183);
   U182 : GTECH_NAND2 port map( A => N265, B => n169, Z => n185);
   U183 : GTECH_NAND2 port map( A => N250, B => n145, Z => n184);
   U184 : GTECH_NAND2 port map( A => n170, B => rx_counter_3_port, Z => n181);
   U185 : GTECH_NAND2 port map( A => n186, B => n187, Z => n638);
   U186 : GTECH_NOT port map( A => n188, Z => n187);
   U187 : GTECH_NAND2 port map( A => n189, B => n190, Z => n188);
   U188 : GTECH_NAND2 port map( A => N266, B => n169, Z => n190);
   U189 : GTECH_NAND2 port map( A => N251, B => n145, Z => n189);
   U190 : GTECH_NAND2 port map( A => n170, B => rx_counter_4_port, Z => n186);
   U191 : GTECH_NAND2 port map( A => n191, B => n192, Z => n637);
   U192 : GTECH_NOT port map( A => n193, Z => n192);
   U193 : GTECH_NAND2 port map( A => n194, B => n195, Z => n193);
   U194 : GTECH_NAND2 port map( A => N267, B => n169, Z => n195);
   U195 : GTECH_NAND2 port map( A => N252, B => n145, Z => n194);
   U196 : GTECH_NAND2 port map( A => n170, B => rx_counter_5_port, Z => n191);
   U197 : GTECH_NAND2 port map( A => n196, B => n197, Z => n636);
   U198 : GTECH_NOT port map( A => n198, Z => n197);
   U199 : GTECH_NAND2 port map( A => n199, B => n200, Z => n198);
   U200 : GTECH_NAND2 port map( A => N268, B => n169, Z => n200);
   U201 : GTECH_NAND2 port map( A => N253, B => n145, Z => n199);
   U202 : GTECH_NAND2 port map( A => n170, B => rx_counter_6_port, Z => n196);
   U203 : GTECH_NAND2 port map( A => n201, B => n202, Z => n635);
   U204 : GTECH_NOT port map( A => n203, Z => n202);
   U205 : GTECH_NAND2 port map( A => n204, B => n205, Z => n203);
   U206 : GTECH_NAND2 port map( A => N269, B => n169, Z => n205);
   U207 : GTECH_NOR2 port map( A => n49, B => n170, Z => n169);
   U208 : GTECH_NAND2 port map( A => N254, B => n145, Z => n204);
   U209 : GTECH_NAND2 port map( A => n170, B => rx_counter_7_port, Z => n201);
   U210 : GTECH_NOR2 port map( A => n206, B => n207, Z => n170);
   U211 : GTECH_NOT port map( A => n208, Z => n207);
   U212 : GTECH_NAND2 port map( A => n209, B => n210, Z => n208);
   U213 : GTECH_NOR2 port map( A => ll_rx_dst_rdy_n, B => n211, Z => n209);
   U214 : GTECH_NAND2 port map( A => n212, B => n213, Z => n634);
   U215 : GTECH_NAND2 port map( A => n214, B => tx_dst(4), Z => n213);
   U216 : GTECH_NAND2 port map( A => tx_dst_curr_4_port, B => n215_port, Z => 
                           n212);
   U217 : GTECH_NAND2 port map( A => n216_port, B => n217_port, Z => n633);
   U218 : GTECH_NAND2 port map( A => tx_dst(3), B => n214, Z => n217_port);
   U219 : GTECH_NAND2 port map( A => tx_dst_curr_3_port, B => n215_port, Z => 
                           n216_port);
   U220 : GTECH_NAND2 port map( A => n218_port, B => n219_port, Z => n632);
   U221 : GTECH_NAND2 port map( A => tx_dst(2), B => n214, Z => n219_port);
   U222 : GTECH_NAND2 port map( A => tx_dst_curr_2_port, B => n215_port, Z => 
                           n218_port);
   U223 : GTECH_NAND2 port map( A => n220_port, B => n221_port, Z => n631);
   U224 : GTECH_NAND2 port map( A => tx_dst(1), B => n214, Z => n221_port);
   U225 : GTECH_NAND2 port map( A => tx_dst_curr_1_port, B => n215_port, Z => 
                           n220_port);
   U226 : GTECH_NAND2 port map( A => n222_port, B => n223_port, Z => n630);
   U227 : GTECH_NAND2 port map( A => tx_dst(0), B => n214, Z => n223_port);
   U228 : GTECH_NOR2 port map( A => n7, B => n215_port, Z => n214);
   U229 : GTECH_NAND2 port map( A => tx_dst_curr_0_port, B => n215_port, Z => 
                           n222_port);
   U230 : GTECH_NOR2 port map( A => n7, B => n224_port, Z => n215_port);
   U231 : GTECH_NOR2 port map( A => n225_port, B => n226_port, Z => n224_port);
   U232 : GTECH_NAND2 port map( A => n19, B => n227_port, Z => n225_port);
   U233 : GTECH_NAND2 port map( A => n228_port, B => n229_port, Z => n629);
   U234 : GTECH_NAND2 port map( A => n230_port, B => axi4s_rx_tdata(4), Z => 
                           n229_port);
   U235 : GTECH_NAND2 port map( A => rx_dst_4_port, B => n231_port, Z => 
                           n228_port);
   U236 : GTECH_NAND2 port map( A => n232_port, B => n233_port, Z => n628);
   U237 : GTECH_NAND2 port map( A => n230_port, B => axi4s_rx_tdata(3), Z => 
                           n233_port);
   U238 : GTECH_NAND2 port map( A => rx_dst_3_port, B => n231_port, Z => 
                           n232_port);
   U239 : GTECH_NAND2 port map( A => n234_port, B => n235_port, Z => n627);
   U240 : GTECH_NAND2 port map( A => n230_port, B => axi4s_rx_tdata(2), Z => 
                           n235_port);
   U241 : GTECH_NAND2 port map( A => rx_dst_2_port, B => n231_port, Z => 
                           n234_port);
   U242 : GTECH_NAND2 port map( A => n236_port, B => n237_port, Z => n626);
   U243 : GTECH_NAND2 port map( A => n230_port, B => axi4s_rx_tdata(1), Z => 
                           n237_port);
   U244 : GTECH_NAND2 port map( A => rx_dst_1_port, B => n231_port, Z => 
                           n236_port);
   U245 : GTECH_NAND2 port map( A => n238_port, B => n239_port, Z => n625);
   U246 : GTECH_NAND2 port map( A => n230_port, B => axi4s_rx_tdata(0), Z => 
                           n239_port);
   U247 : GTECH_NOR2 port map( A => n231_port, B => n7, Z => n230_port);
   U248 : GTECH_NAND2 port map( A => rx_dst_0_port, B => n231_port, Z => 
                           n238_port);
   U249 : GTECH_NAND2 port map( A => n49, B => n240_port, Z => n231_port);
   U250 : GTECH_NAND2 port map( A => n241_port, B => n242_port, Z => n240_port)
                           ;
   U251 : GTECH_NAND2 port map( A => n243_port, B => n244_port, Z => n241_port)
                           ;
   U252 : GTECH_NOT port map( A => n245_port, Z => n244_port);
   U253 : GTECH_NOR2 port map( A => n7, B => n210, Z => n245_port);
   U254 : GTECH_NOR2 port map( A => n246_port, B => n159, Z => n210);
   U255 : GTECH_NOT port map( A => axi4s_rx_tvalid, Z => n159);
   U256 : GTECH_NAND2 port map( A => n247_port, B => n248_port, Z => n246_port)
                           ;
   U257 : GTECH_NOT port map( A => n140, Z => n49);
   U258 : GTECH_NAND2 port map( A => n249_port, B => n250_port, Z => n624);
   U259 : GTECH_NAND2 port map( A => n251_port, B => axi4s_rx_tdata(4), Z => 
                           n250_port);
   U260 : GTECH_NAND2 port map( A => rx_src_4_port, B => n252_port, Z => 
                           n249_port);
   U261 : GTECH_NAND2 port map( A => n253_port, B => n254_port, Z => n623);
   U262 : GTECH_NAND2 port map( A => n251_port, B => axi4s_rx_tdata(3), Z => 
                           n254_port);
   U263 : GTECH_NAND2 port map( A => rx_src_3_port, B => n252_port, Z => 
                           n253_port);
   U264 : GTECH_NAND2 port map( A => n255, B => n256, Z => n622);
   U265 : GTECH_NAND2 port map( A => n251_port, B => axi4s_rx_tdata(2), Z => 
                           n256);
   U266 : GTECH_NAND2 port map( A => rx_src_2_port, B => n252_port, Z => n255);
   U267 : GTECH_NAND2 port map( A => n257_port, B => n258, Z => n621);
   U268 : GTECH_NAND2 port map( A => n251_port, B => axi4s_rx_tdata(1), Z => 
                           n258);
   U269 : GTECH_NAND2 port map( A => rx_src_1_port, B => n252_port, Z => 
                           n257_port);
   U270 : GTECH_NAND2 port map( A => n259, B => n260, Z => n620);
   U271 : GTECH_NAND2 port map( A => n251_port, B => axi4s_rx_tdata(0), Z => 
                           n260);
   U272 : GTECH_NOR2 port map( A => n252_port, B => n7, Z => n251_port);
   U273 : GTECH_NAND2 port map( A => rx_src_0_port, B => n252_port, Z => n259);
   U274 : GTECH_NAND2 port map( A => n261, B => n41, Z => n252_port);
   U275 : GTECH_NOR2 port map( A => n145, B => n262_port, Z => n41);
   U276 : GTECH_NOT port map( A => n263_port, Z => n262_port);
   U277 : GTECH_NAND2 port map( A => n211, B => reset_b, Z => n263_port);
   U278 : GTECH_NOT port map( A => n243_port, Z => n145);
   U279 : GTECH_NAND2 port map( A => n264_port, B => reset_b, Z => n243_port);
   U280 : GTECH_NOR2 port map( A => n140, B => n265_port, Z => n261);
   U281 : GTECH_NOR2 port map( A => n7, B => n247_port, Z => n265_port);
   U282 : GTECH_NOR2 port map( A => n50, B => n7, Z => n140);
   U283 : GTECH_NAND2 port map( A => n266_port, B => n267_port, Z => n619);
   U284 : GTECH_NAND2 port map( A => N246, B => n268_port, Z => n267_port);
   U285 : GTECH_NAND2 port map( A => rx_len_31_port, B => n269_port, Z => 
                           n266_port);
   U286 : GTECH_NAND2 port map( A => n270, B => n271, Z => n618);
   U287 : GTECH_NAND2 port map( A => N245, B => n268_port, Z => n271);
   U288 : GTECH_NAND2 port map( A => rx_len_30_port, B => n269_port, Z => n270)
                           ;
   U289 : GTECH_NAND2 port map( A => n272, B => n273, Z => n617);
   U290 : GTECH_NAND2 port map( A => N244, B => n268_port, Z => n273);
   U291 : GTECH_NAND2 port map( A => rx_len_29_port, B => n269_port, Z => n272)
                           ;
   U292 : GTECH_NAND2 port map( A => n274, B => n275, Z => n616);
   U293 : GTECH_NAND2 port map( A => N243, B => n268_port, Z => n275);
   U294 : GTECH_NAND2 port map( A => rx_len_28_port, B => n269_port, Z => n274)
                           ;
   U295 : GTECH_NAND2 port map( A => n276, B => n277, Z => n615);
   U296 : GTECH_NAND2 port map( A => N242, B => n268_port, Z => n277);
   U297 : GTECH_NAND2 port map( A => rx_len_27_port, B => n269_port, Z => n276)
                           ;
   U298 : GTECH_NAND2 port map( A => n278, B => n279, Z => n614);
   U299 : GTECH_NAND2 port map( A => N241, B => n268_port, Z => n279);
   U300 : GTECH_NAND2 port map( A => rx_len_26_port, B => n269_port, Z => n278)
                           ;
   U301 : GTECH_NAND2 port map( A => n280, B => n281, Z => n613);
   U302 : GTECH_NAND2 port map( A => N240, B => n268_port, Z => n281);
   U303 : GTECH_NAND2 port map( A => rx_len_25_port, B => n269_port, Z => n280)
                           ;
   U304 : GTECH_NAND2 port map( A => n282, B => n283, Z => n612);
   U305 : GTECH_NAND2 port map( A => N239, B => n268_port, Z => n283);
   U306 : GTECH_NAND2 port map( A => rx_len_24_port, B => n269_port, Z => n282)
                           ;
   U307 : GTECH_NAND2 port map( A => n284, B => n285, Z => n611);
   U308 : GTECH_NAND2 port map( A => N238, B => n268_port, Z => n285);
   U309 : GTECH_NAND2 port map( A => rx_len_23_port, B => n269_port, Z => n284)
                           ;
   U310 : GTECH_NAND2 port map( A => n286, B => n287, Z => n610);
   U311 : GTECH_NAND2 port map( A => N237, B => n268_port, Z => n287);
   U312 : GTECH_NAND2 port map( A => rx_len_22_port, B => n269_port, Z => n286)
                           ;
   U313 : GTECH_NAND2 port map( A => n288, B => n289, Z => n609);
   U314 : GTECH_NAND2 port map( A => N236, B => n268_port, Z => n289);
   U315 : GTECH_NAND2 port map( A => rx_len_21_port, B => n269_port, Z => n288)
                           ;
   U316 : GTECH_NAND2 port map( A => n290, B => n291, Z => n608);
   U317 : GTECH_NAND2 port map( A => N235, B => n268_port, Z => n291);
   U318 : GTECH_NAND2 port map( A => rx_len_20_port, B => n269_port, Z => n290)
                           ;
   U319 : GTECH_NAND2 port map( A => n292, B => n293, Z => n607);
   U320 : GTECH_NAND2 port map( A => N234, B => n268_port, Z => n293);
   U321 : GTECH_NAND2 port map( A => rx_len_19_port, B => n269_port, Z => n292)
                           ;
   U322 : GTECH_NAND2 port map( A => n294, B => n295, Z => n606);
   U323 : GTECH_NAND2 port map( A => N233, B => n268_port, Z => n295);
   U324 : GTECH_NAND2 port map( A => rx_len_18_port, B => n269_port, Z => n294)
                           ;
   U325 : GTECH_NAND2 port map( A => n296, B => n297, Z => n605);
   U326 : GTECH_NAND2 port map( A => N232, B => n268_port, Z => n297);
   U327 : GTECH_NAND2 port map( A => rx_len_17_port, B => n269_port, Z => n296)
                           ;
   U328 : GTECH_NAND2 port map( A => n298, B => n299, Z => n604);
   U329 : GTECH_NAND2 port map( A => N231, B => n268_port, Z => n299);
   U330 : GTECH_NAND2 port map( A => rx_len_16_port, B => n269_port, Z => n298)
                           ;
   U331 : GTECH_NAND2 port map( A => n300, B => n301, Z => n603);
   U332 : GTECH_NAND2 port map( A => N230, B => n268_port, Z => n301);
   U333 : GTECH_NAND2 port map( A => rx_len_15_port, B => n269_port, Z => n300)
                           ;
   U334 : GTECH_NAND2 port map( A => n302, B => n303, Z => n602);
   U335 : GTECH_NAND2 port map( A => N229, B => n268_port, Z => n303);
   U336 : GTECH_NAND2 port map( A => rx_len_14_port, B => n269_port, Z => n302)
                           ;
   U337 : GTECH_NAND2 port map( A => n304, B => n305, Z => n601);
   U338 : GTECH_NAND2 port map( A => N228, B => n268_port, Z => n305);
   U339 : GTECH_NAND2 port map( A => rx_len_13_port, B => n269_port, Z => n304)
                           ;
   U340 : GTECH_NAND2 port map( A => n306, B => n307, Z => n600);
   U341 : GTECH_NAND2 port map( A => N227, B => n268_port, Z => n307);
   U342 : GTECH_NAND2 port map( A => rx_len_12_port, B => n269_port, Z => n306)
                           ;
   U343 : GTECH_NAND2 port map( A => n308, B => n309, Z => n599);
   U344 : GTECH_NAND2 port map( A => N226, B => n268_port, Z => n309);
   U345 : GTECH_NAND2 port map( A => rx_len_11_port, B => n269_port, Z => n308)
                           ;
   U346 : GTECH_NAND2 port map( A => n310, B => n311, Z => n598);
   U347 : GTECH_NAND2 port map( A => N225, B => n268_port, Z => n311);
   U348 : GTECH_NAND2 port map( A => rx_len_10_port, B => n269_port, Z => n310)
                           ;
   U349 : GTECH_NAND2 port map( A => n312, B => n313, Z => n597);
   U350 : GTECH_NAND2 port map( A => N224, B => n268_port, Z => n313);
   U351 : GTECH_NAND2 port map( A => rx_len_9_port, B => n269_port, Z => n312);
   U352 : GTECH_NAND2 port map( A => n314, B => n315, Z => n596);
   U353 : GTECH_NAND2 port map( A => N223, B => n268_port, Z => n315);
   U354 : GTECH_NAND2 port map( A => rx_len_8_port, B => n269_port, Z => n314);
   U355 : GTECH_NAND2 port map( A => n316, B => n317, Z => n595);
   U356 : GTECH_NAND2 port map( A => N222, B => n268_port, Z => n317);
   U357 : GTECH_NAND2 port map( A => rx_len_7_port, B => n269_port, Z => n316);
   U358 : GTECH_NAND2 port map( A => n318, B => n319, Z => n594);
   U359 : GTECH_NAND2 port map( A => N221, B => n268_port, Z => n319);
   U360 : GTECH_NAND2 port map( A => rx_len_6_port, B => n269_port, Z => n318);
   U361 : GTECH_NAND2 port map( A => n320, B => n321, Z => n593);
   U362 : GTECH_NAND2 port map( A => N220, B => n268_port, Z => n321);
   U363 : GTECH_NAND2 port map( A => rx_len_5_port, B => n269_port, Z => n320);
   U364 : GTECH_NAND2 port map( A => n322, B => n323, Z => n592);
   U365 : GTECH_NAND2 port map( A => N219, B => n268_port, Z => n323);
   U366 : GTECH_NAND2 port map( A => rx_len_4_port, B => n269_port, Z => n322);
   U367 : GTECH_NAND2 port map( A => n324, B => n325, Z => n591);
   U368 : GTECH_NAND2 port map( A => N218, B => n268_port, Z => n325);
   U369 : GTECH_NAND2 port map( A => rx_len_3_port, B => n269_port, Z => n324);
   U370 : GTECH_NAND2 port map( A => n326, B => n327, Z => n590);
   U371 : GTECH_NAND2 port map( A => N217, B => n268_port, Z => n327);
   U372 : GTECH_NAND2 port map( A => rx_len_2_port, B => n269_port, Z => n326);
   U373 : GTECH_NAND2 port map( A => n328, B => n329, Z => n589);
   U374 : GTECH_NAND2 port map( A => N216, B => n268_port, Z => n329);
   U375 : GTECH_NAND2 port map( A => rx_len_1_port, B => n269_port, Z => n328);
   U376 : GTECH_NAND2 port map( A => n330, B => n331, Z => n588);
   U377 : GTECH_NAND2 port map( A => N215, B => n268_port, Z => n331);
   U378 : GTECH_NOR2 port map( A => n7, B => n269_port, Z => n268_port);
   U379 : GTECH_NOT port map( A => reset_b, Z => n7);
   U380 : GTECH_NAND2 port map( A => rx_len_0_port, B => n269_port, Z => n330);
   U381 : GTECH_NOT port map( A => n206, Z => n269_port);
   U382 : GTECH_NAND2 port map( A => reset_b, B => n332, Z => n206);
   U383 : GTECH_NAND2 port map( A => n333, B => n334, Z => n332);
   U384 : GTECH_NOR2 port map( A => n335, B => n157, Z => n333);
   U385 : GTECH_NOT port map( A => n50, Z => n157);
   U386 : GTECH_NAND2 port map( A => n336, B => n136_port, Z => ll_tx_dst_rdy_n
                           );
   U387 : GTECH_NOR2 port map( A => n89_port, B => n549, Z => n136_port);
   U388 : GTECH_NOR2 port map( A => n15, B => n92_port, Z => n336);
   U389 : GTECH_NOT port map( A => axi4s_tx_tready, Z => n92_port);
   U390 : GTECH_NAND2 port map( A => N257, B => n337, Z => ll_rx_sof_n);
   U391 : GTECH_NOT port map( A => ll_rx_src_rdy_n_port, Z => n337);
   U392 : GTECH_NAND2 port map( A => n338, B => axi4s_rx_tvalid, Z => 
                           ll_rx_src_rdy_n_port);
   U393 : GTECH_NAND2 port map( A => n338, B => n161, Z => ll_rx_eof_n);
   U394 : GTECH_NOR2 port map( A => n339, B => n340, Z => n161);
   U395 : GTECH_NAND2 port map( A => n341, B => n342, Z => n340);
   U396 : GTECH_NOR2 port map( A => rx_counter_4_port, B => rx_counter_5_port, 
                           Z => n342);
   U397 : GTECH_NOR2 port map( A => rx_counter_6_port, B => rx_counter_7_port, 
                           Z => n341);
   U398 : GTECH_NAND2 port map( A => n343, B => n344, Z => n339);
   U399 : GTECH_NOR2 port map( A => n345, B => rx_counter_1_port, Z => n344);
   U400 : GTECH_NOT port map( A => rx_counter_0_port, Z => n345);
   U401 : GTECH_NOR2 port map( A => rx_counter_2_port, B => rx_counter_3_port, 
                           Z => n343);
   U402 : GTECH_NOT port map( A => n242_port, Z => n338);
   U403 : GTECH_NAND2 port map( A => n346, B => n334, Z => n242_port);
   U404 : GTECH_NOR2 port map( A => n546, B => n211, Z => n334);
   U405 : GTECH_NOR2 port map( A => n264_port, B => n335, Z => n346);
   U406 : GTECH_NOT port map( A => n248_port, Z => n335);
   U407 : GTECH_NOR2 port map( A => n347, B => n50, Z => ll_rx_data_be(3));
   U408 : GTECH_NOT port map( A => axi4s_rx_tkeep(3), Z => n347);
   U409 : GTECH_NOR2 port map( A => n348, B => n50, Z => ll_rx_data_be(2));
   U410 : GTECH_NOT port map( A => axi4s_rx_tkeep(2), Z => n348);
   U411 : GTECH_NOR2 port map( A => n349, B => n50, Z => ll_rx_data_be(1));
   U412 : GTECH_NOT port map( A => axi4s_rx_tkeep(1), Z => n349);
   U413 : GTECH_NOR2 port map( A => n350, B => n50, Z => ll_rx_data_be(0));
   U414 : GTECH_NOT port map( A => axi4s_rx_tkeep(0), Z => n350);
   U415 : GTECH_NOR2 port map( A => n351, B => n50, Z => ll_rx_data(9));
   U416 : GTECH_NOT port map( A => axi4s_rx_tdata(9), Z => n351);
   U417 : GTECH_NOR2 port map( A => n352, B => n50, Z => ll_rx_data(8));
   U418 : GTECH_NOT port map( A => axi4s_rx_tdata(8), Z => n352);
   U419 : GTECH_NOR2 port map( A => n353, B => n50, Z => ll_rx_data(7));
   U420 : GTECH_NOT port map( A => axi4s_rx_tdata(7), Z => n353);
   U421 : GTECH_NOR2 port map( A => n354, B => n50, Z => ll_rx_data(6));
   U422 : GTECH_NOT port map( A => axi4s_rx_tdata(6), Z => n354);
   U423 : GTECH_NOR2 port map( A => n355, B => n50, Z => ll_rx_data(5));
   U424 : GTECH_NOT port map( A => axi4s_rx_tdata(5), Z => n355);
   U425 : GTECH_NOR2 port map( A => n356, B => n50, Z => ll_rx_data(31));
   U426 : GTECH_NOT port map( A => axi4s_rx_tdata(31), Z => n356);
   U427 : GTECH_NOR2 port map( A => n357, B => n50, Z => ll_rx_data(30));
   U428 : GTECH_NOT port map( A => axi4s_rx_tdata(30), Z => n357);
   U429 : GTECH_NOR2 port map( A => n358, B => n50, Z => ll_rx_data(29));
   U430 : GTECH_NOT port map( A => axi4s_rx_tdata(29), Z => n358);
   U431 : GTECH_NOR2 port map( A => n359, B => n50, Z => ll_rx_data(28));
   U432 : GTECH_NOT port map( A => axi4s_rx_tdata(28), Z => n359);
   U433 : GTECH_NOR2 port map( A => n360, B => n50, Z => ll_rx_data(27));
   U434 : GTECH_NOT port map( A => axi4s_rx_tdata(27), Z => n360);
   U435 : GTECH_NOR2 port map( A => n361, B => n50, Z => ll_rx_data(26));
   U436 : GTECH_NOT port map( A => axi4s_rx_tdata(26), Z => n361);
   U437 : GTECH_NOR2 port map( A => n362, B => n50, Z => ll_rx_data(25));
   U438 : GTECH_NOT port map( A => axi4s_rx_tdata(25), Z => n362);
   U439 : GTECH_NOR2 port map( A => n363, B => n50, Z => ll_rx_data(24));
   U440 : GTECH_NOT port map( A => axi4s_rx_tdata(24), Z => n363);
   U441 : GTECH_NOR2 port map( A => n364, B => n50, Z => ll_rx_data(23));
   U442 : GTECH_NOT port map( A => axi4s_rx_tdata(23), Z => n364);
   U443 : GTECH_NOR2 port map( A => n365, B => n50, Z => ll_rx_data(22));
   U444 : GTECH_NOT port map( A => axi4s_rx_tdata(22), Z => n365);
   U445 : GTECH_NOR2 port map( A => n366, B => n50, Z => ll_rx_data(21));
   U446 : GTECH_NOT port map( A => axi4s_rx_tdata(21), Z => n366);
   U447 : GTECH_NOR2 port map( A => n367, B => n50, Z => ll_rx_data(20));
   U448 : GTECH_NOT port map( A => axi4s_rx_tdata(20), Z => n367);
   U449 : GTECH_NOR2 port map( A => n368, B => n50, Z => ll_rx_data(19));
   U450 : GTECH_NOT port map( A => axi4s_rx_tdata(19), Z => n368);
   U451 : GTECH_NOR2 port map( A => n369, B => n50, Z => ll_rx_data(18));
   U452 : GTECH_NOT port map( A => axi4s_rx_tdata(18), Z => n369);
   U453 : GTECH_NOR2 port map( A => n370, B => n50, Z => ll_rx_data(17));
   U454 : GTECH_NOT port map( A => axi4s_rx_tdata(17), Z => n370);
   U455 : GTECH_NOR2 port map( A => n371, B => n50, Z => ll_rx_data(16));
   U456 : GTECH_NOT port map( A => axi4s_rx_tdata(16), Z => n371);
   U457 : GTECH_NOR2 port map( A => n372, B => n50, Z => ll_rx_data(15));
   U458 : GTECH_NOT port map( A => axi4s_rx_tdata(15), Z => n372);
   U459 : GTECH_NOR2 port map( A => n373, B => n50, Z => ll_rx_data(14));
   U460 : GTECH_NOT port map( A => axi4s_rx_tdata(14), Z => n373);
   U461 : GTECH_NOR2 port map( A => n374, B => n50, Z => ll_rx_data(13));
   U462 : GTECH_NOT port map( A => axi4s_rx_tdata(13), Z => n374);
   U463 : GTECH_NOR2 port map( A => n375, B => n50, Z => ll_rx_data(12));
   U464 : GTECH_NOT port map( A => axi4s_rx_tdata(12), Z => n375);
   U465 : GTECH_NOR2 port map( A => n376, B => n50, Z => ll_rx_data(11));
   U466 : GTECH_NOT port map( A => axi4s_rx_tdata(11), Z => n376);
   U467 : GTECH_NOR2 port map( A => n377, B => n50, Z => ll_rx_data(10));
   U468 : GTECH_NOT port map( A => axi4s_rx_tdata(10), Z => n377);
   U469 : GTECH_NOT port map( A => n378, Z => axi4s_tx_tvalid);
   U470 : GTECH_NOR2 port map( A => axi4s_tx_tlast_port, B => n379, Z => n378);
   U471 : GTECH_NOR2 port map( A => n380, B => ll_tx_src_rdy_n, Z => n379);
   U472 : GTECH_NOR2 port map( A => n381, B => n382, Z => n380);
   U473 : GTECH_NAND2 port map( A => n84_port, B => n383, Z => n382);
   U474 : GTECH_NAND2 port map( A => n22, B => n384, Z => n381);
   U475 : GTECH_NAND2 port map( A => n385, B => n16, Z => n384);
   U476 : GTECH_NOT port map( A => ll_tx_sof_n, Z => n385);
   U477 : GTECH_NAND2 port map( A => n386, B => n387, Z => 
                           axi4s_tx_tstrb_3_port);
   U478 : GTECH_NAND2 port map( A => ll_tx_data_be(3), B => n33, Z => n387);
   U479 : GTECH_NAND2 port map( A => n386, B => n388, Z => 
                           axi4s_tx_tstrb_2_port);
   U480 : GTECH_NAND2 port map( A => ll_tx_data_be(2), B => n33, Z => n388);
   U481 : GTECH_NAND2 port map( A => n386, B => n389, Z => 
                           axi4s_tx_tstrb_1_port);
   U482 : GTECH_NAND2 port map( A => ll_tx_data_be(1), B => n33, Z => n389);
   U483 : GTECH_NAND2 port map( A => n386, B => n390, Z => 
                           axi4s_tx_tstrb_0_port);
   U484 : GTECH_NAND2 port map( A => ll_tx_data_be(0), B => n33, Z => n390);
   U485 : GTECH_NOR2 port map( A => n391, B => axi4s_tx_tlast_port, Z => n386);
   U486 : GTECH_NOR2 port map( A => ll_tx_src_rdy_n, B => n392, Z => n391);
   U487 : GTECH_NOR2 port map( A => n89_port, B => n15, Z => n392);
   U488 : GTECH_NAND2 port map( A => n393, B => n394, Z => axi4s_tx_tdest(4));
   U489 : GTECH_NAND2 port map( A => tx_dst_curr_4_port, B => n226_port, Z => 
                           n394);
   U490 : GTECH_NAND2 port map( A => tx_dst(4), B => n89_port, Z => n393);
   U491 : GTECH_NAND2 port map( A => n395, B => n396, Z => axi4s_tx_tdest(3));
   U492 : GTECH_NAND2 port map( A => tx_dst_curr_3_port, B => n226_port, Z => 
                           n396);
   U493 : GTECH_NAND2 port map( A => tx_dst(3), B => n89_port, Z => n395);
   U494 : GTECH_NAND2 port map( A => n397, B => n398, Z => axi4s_tx_tdest(2));
   U495 : GTECH_NAND2 port map( A => tx_dst_curr_2_port, B => n226_port, Z => 
                           n398);
   U496 : GTECH_NAND2 port map( A => tx_dst(2), B => n89_port, Z => n397);
   U497 : GTECH_NAND2 port map( A => n399, B => n400, Z => axi4s_tx_tdest(1));
   U498 : GTECH_NAND2 port map( A => tx_dst_curr_1_port, B => n226_port, Z => 
                           n400);
   U499 : GTECH_NAND2 port map( A => tx_dst(1), B => n89_port, Z => n399);
   U500 : GTECH_NAND2 port map( A => n401, B => n402, Z => axi4s_tx_tdest(0));
   U501 : GTECH_NAND2 port map( A => tx_dst_curr_0_port, B => n226_port, Z => 
                           n402);
   U502 : GTECH_NAND2 port map( A => n403, B => n22, Z => n226_port);
   U503 : GTECH_NOT port map( A => n33, Z => n22);
   U504 : GTECH_NOR2 port map( A => axi4s_tx_tlast_port, B => n15, Z => n403);
   U505 : GTECH_NAND2 port map( A => tx_dst(0), B => n89_port, Z => n401);
   U506 : GTECH_NAND2 port map( A => n227_port, B => n84_port, Z => n89_port);
   U507 : GTECH_NAND2 port map( A => n404, B => n405, Z => axi4s_tx_tdata(9));
   U508 : GTECH_NAND2 port map( A => ll_tx_data(9), B => n33, Z => n405);
   U509 : GTECH_NOR2 port map( A => axi4s_tx_tlast_port, B => n406, Z => n404);
   U510 : GTECH_NOT port map( A => n407, Z => n406);
   U511 : GTECH_NAND2 port map( A => N86, B => n15, Z => n407);
   U512 : GTECH_NAND2 port map( A => n408, B => n409, Z => axi4s_tx_tdata(8));
   U513 : GTECH_NAND2 port map( A => N85, B => n15, Z => n409);
   U514 : GTECH_NAND2 port map( A => ll_tx_data(8), B => n33, Z => n408);
   U515 : GTECH_NAND2 port map( A => n410, B => n411, Z => axi4s_tx_tdata(7));
   U516 : GTECH_NAND2 port map( A => ll_tx_data(7), B => n33, Z => n411);
   U517 : GTECH_NOR2 port map( A => axi4s_tx_tlast_port, B => n412, Z => n410);
   U518 : GTECH_NOT port map( A => n413, Z => n412);
   U519 : GTECH_NAND2 port map( A => N84, B => n15, Z => n413);
   U520 : GTECH_NAND2 port map( A => n414, B => n415, Z => axi4s_tx_tdata(6));
   U521 : GTECH_NAND2 port map( A => ll_tx_data(6), B => n33, Z => n415);
   U522 : GTECH_NOR2 port map( A => axi4s_tx_tlast_port, B => n416, Z => n414);
   U523 : GTECH_NOT port map( A => n417, Z => n416);
   U524 : GTECH_NAND2 port map( A => N83, B => n15, Z => n417);
   U525 : GTECH_NAND2 port map( A => n418, B => n419, Z => axi4s_tx_tdata(5));
   U526 : GTECH_NAND2 port map( A => ll_tx_data(5), B => n33, Z => n419);
   U527 : GTECH_NOR2 port map( A => axi4s_tx_tlast_port, B => n420, Z => n418);
   U528 : GTECH_NOT port map( A => n421, Z => n420);
   U529 : GTECH_NAND2 port map( A => N82, B => n15, Z => n421);
   U530 : GTECH_NOT port map( A => n422, Z => axi4s_tx_tdata(3));
   U531 : GTECH_NOR2 port map( A => n423, B => n424, Z => n422);
   U532 : GTECH_NAND2 port map( A => n425, B => n426, Z => n424);
   U533 : GTECH_NAND2 port map( A => tx_src(3), B => n30, Z => n426);
   U534 : GTECH_NAND2 port map( A => tx_dst(3), B => n16, Z => n425);
   U535 : GTECH_NAND2 port map( A => n427, B => n428, Z => n423);
   U536 : GTECH_NAND2 port map( A => ll_tx_data(3), B => n33, Z => n428);
   U537 : GTECH_NOR2 port map( A => axi4s_tx_tlast_port, B => n429, Z => n427);
   U538 : GTECH_NOT port map( A => n430, Z => n429);
   U539 : GTECH_NAND2 port map( A => N80, B => n15, Z => n430);
   U540 : GTECH_NAND2 port map( A => n431, B => n432, Z => axi4s_tx_tdata(31));
   U541 : GTECH_NAND2 port map( A => ll_tx_data(31), B => n33, Z => n432);
   U542 : GTECH_NOR2 port map( A => axi4s_tx_tlast_port, B => n433, Z => n431);
   U543 : GTECH_NOT port map( A => n434, Z => n433);
   U544 : GTECH_NAND2 port map( A => N108, B => n15, Z => n434);
   U545 : GTECH_NAND2 port map( A => n435, B => n436, Z => axi4s_tx_tdata(30));
   U546 : GTECH_NAND2 port map( A => ll_tx_data(30), B => n33, Z => n436);
   U547 : GTECH_NOR2 port map( A => axi4s_tx_tlast_port, B => n437, Z => n435);
   U548 : GTECH_NOT port map( A => n438, Z => n437);
   U549 : GTECH_NAND2 port map( A => N107, B => n15, Z => n438);
   U550 : GTECH_NOT port map( A => n439, Z => axi4s_tx_tdata(2));
   U551 : GTECH_NOR2 port map( A => n440, B => n441, Z => n439);
   U552 : GTECH_NAND2 port map( A => n442, B => n443, Z => n441);
   U553 : GTECH_NAND2 port map( A => tx_src(2), B => n30, Z => n443);
   U554 : GTECH_NAND2 port map( A => tx_dst(2), B => n16, Z => n442);
   U555 : GTECH_NAND2 port map( A => n444, B => n445, Z => n440);
   U556 : GTECH_NAND2 port map( A => ll_tx_data(2), B => n33, Z => n445);
   U557 : GTECH_NOR2 port map( A => axi4s_tx_tlast_port, B => n446, Z => n444);
   U558 : GTECH_NOT port map( A => n447, Z => n446);
   U559 : GTECH_NAND2 port map( A => N79, B => n15, Z => n447);
   U560 : GTECH_NAND2 port map( A => n448, B => n449, Z => axi4s_tx_tdata(29));
   U561 : GTECH_NAND2 port map( A => N106, B => n15, Z => n449);
   U562 : GTECH_NAND2 port map( A => ll_tx_data(29), B => n33, Z => n448);
   U563 : GTECH_NAND2 port map( A => n450, B => n451, Z => axi4s_tx_tdata(28));
   U564 : GTECH_NAND2 port map( A => ll_tx_data(28), B => n33, Z => n451);
   U565 : GTECH_NOR2 port map( A => axi4s_tx_tlast_port, B => n452, Z => n450);
   U566 : GTECH_NOT port map( A => n453, Z => n452);
   U567 : GTECH_NAND2 port map( A => N105, B => n15, Z => n453);
   U568 : GTECH_NAND2 port map( A => n454, B => n455, Z => axi4s_tx_tdata(27));
   U569 : GTECH_NAND2 port map( A => ll_tx_data(27), B => n33, Z => n455);
   U570 : GTECH_NOR2 port map( A => axi4s_tx_tlast_port, B => n456, Z => n454);
   U571 : GTECH_NOT port map( A => n457, Z => n456);
   U572 : GTECH_NAND2 port map( A => N104, B => n15, Z => n457);
   U573 : GTECH_NAND2 port map( A => n458, B => n459, Z => axi4s_tx_tdata(26));
   U574 : GTECH_NAND2 port map( A => ll_tx_data(26), B => n33, Z => n459);
   U575 : GTECH_NOR2 port map( A => axi4s_tx_tlast_port, B => n460, Z => n458);
   U576 : GTECH_NOT port map( A => n461, Z => n460);
   U577 : GTECH_NAND2 port map( A => N103, B => n15, Z => n461);
   U578 : GTECH_NAND2 port map( A => n462, B => n463, Z => axi4s_tx_tdata(25));
   U579 : GTECH_NAND2 port map( A => ll_tx_data(25), B => n33, Z => n463);
   U580 : GTECH_NOR2 port map( A => axi4s_tx_tlast_port, B => n464, Z => n462);
   U581 : GTECH_NOT port map( A => n465, Z => n464);
   U582 : GTECH_NAND2 port map( A => N102, B => n15, Z => n465);
   U583 : GTECH_NAND2 port map( A => n466, B => n467, Z => axi4s_tx_tdata(24));
   U584 : GTECH_NAND2 port map( A => N101, B => n15, Z => n467);
   U585 : GTECH_NAND2 port map( A => ll_tx_data(24), B => n33, Z => n466);
   U586 : GTECH_NAND2 port map( A => n468, B => n469, Z => axi4s_tx_tdata(23));
   U587 : GTECH_NAND2 port map( A => ll_tx_data(23), B => n33, Z => n469);
   U588 : GTECH_NOR2 port map( A => axi4s_tx_tlast_port, B => n470, Z => n468);
   U589 : GTECH_NOT port map( A => n471, Z => n470);
   U590 : GTECH_NAND2 port map( A => N100, B => n15, Z => n471);
   U591 : GTECH_NAND2 port map( A => n472, B => n473, Z => axi4s_tx_tdata(22));
   U592 : GTECH_NAND2 port map( A => N99, B => n15, Z => n473);
   U593 : GTECH_NAND2 port map( A => ll_tx_data(22), B => n33, Z => n472);
   U594 : GTECH_NAND2 port map( A => n474, B => n475, Z => axi4s_tx_tdata(21));
   U595 : GTECH_NAND2 port map( A => ll_tx_data(21), B => n33, Z => n475);
   U596 : GTECH_NOR2 port map( A => axi4s_tx_tlast_port, B => n476, Z => n474);
   U597 : GTECH_NOT port map( A => n477, Z => n476);
   U598 : GTECH_NAND2 port map( A => N98, B => n15, Z => n477);
   U599 : GTECH_NAND2 port map( A => n478, B => n479, Z => axi4s_tx_tdata(20));
   U600 : GTECH_NAND2 port map( A => N97, B => n15, Z => n479);
   U601 : GTECH_NAND2 port map( A => ll_tx_data(20), B => n33, Z => n478);
   U602 : GTECH_NOT port map( A => n480, Z => axi4s_tx_tdata(1));
   U603 : GTECH_NOR2 port map( A => n481, B => n482, Z => n480);
   U604 : GTECH_NAND2 port map( A => n483, B => n484, Z => n482);
   U605 : GTECH_NAND2 port map( A => tx_src(1), B => n30, Z => n484);
   U606 : GTECH_NAND2 port map( A => tx_dst(1), B => n16, Z => n483);
   U607 : GTECH_NAND2 port map( A => n485, B => n486, Z => n481);
   U608 : GTECH_NAND2 port map( A => ll_tx_data(1), B => n33, Z => n486);
   U609 : GTECH_NOR2 port map( A => axi4s_tx_tlast_port, B => n487, Z => n485);
   U610 : GTECH_NOT port map( A => n488, Z => n487);
   U611 : GTECH_NAND2 port map( A => N78, B => n15, Z => n488);
   U612 : GTECH_NAND2 port map( A => n489, B => n490, Z => axi4s_tx_tdata(19));
   U613 : GTECH_NAND2 port map( A => ll_tx_data(19), B => n33, Z => n490);
   U614 : GTECH_NOR2 port map( A => axi4s_tx_tlast_port, B => n491, Z => n489);
   U615 : GTECH_NOT port map( A => n492, Z => n491);
   U616 : GTECH_NAND2 port map( A => N96, B => n15, Z => n492);
   U617 : GTECH_NAND2 port map( A => n493, B => n494, Z => axi4s_tx_tdata(18));
   U618 : GTECH_NAND2 port map( A => ll_tx_data(18), B => n33, Z => n494);
   U619 : GTECH_NOR2 port map( A => axi4s_tx_tlast_port, B => n495, Z => n493);
   U620 : GTECH_NOT port map( A => n496, Z => n495);
   U621 : GTECH_NAND2 port map( A => N95, B => n15, Z => n496);
   U622 : GTECH_NAND2 port map( A => n497, B => n498, Z => axi4s_tx_tdata(17));
   U623 : GTECH_NAND2 port map( A => N94, B => n15, Z => n498);
   U624 : GTECH_NAND2 port map( A => ll_tx_data(17), B => n33, Z => n497);
   U625 : GTECH_NAND2 port map( A => n499, B => n500, Z => axi4s_tx_tdata(16));
   U626 : GTECH_NAND2 port map( A => ll_tx_data(16), B => n33, Z => n500);
   U627 : GTECH_NOR2 port map( A => axi4s_tx_tlast_port, B => n501, Z => n499);
   U628 : GTECH_NOT port map( A => n502, Z => n501);
   U629 : GTECH_NAND2 port map( A => N93, B => n15, Z => n502);
   U630 : GTECH_NAND2 port map( A => n503, B => n504, Z => axi4s_tx_tdata(15));
   U631 : GTECH_NAND2 port map( A => ll_tx_data(15), B => n33, Z => n504);
   U632 : GTECH_NOR2 port map( A => axi4s_tx_tlast_port, B => n505, Z => n503);
   U633 : GTECH_NOT port map( A => n506, Z => n505);
   U634 : GTECH_NAND2 port map( A => N92, B => n15, Z => n506);
   U635 : GTECH_NAND2 port map( A => n507, B => n508, Z => axi4s_tx_tdata(14));
   U636 : GTECH_NAND2 port map( A => N91, B => n15, Z => n508);
   U637 : GTECH_NAND2 port map( A => ll_tx_data(14), B => n33, Z => n507);
   U638 : GTECH_NAND2 port map( A => n509, B => n510, Z => axi4s_tx_tdata(13));
   U639 : GTECH_NAND2 port map( A => ll_tx_data(13), B => n33, Z => n510);
   U640 : GTECH_NOR2 port map( A => axi4s_tx_tlast_port, B => n511, Z => n509);
   U641 : GTECH_NOT port map( A => n512, Z => n511);
   U642 : GTECH_NAND2 port map( A => N90, B => n15, Z => n512);
   U643 : GTECH_NAND2 port map( A => n513, B => n514, Z => axi4s_tx_tdata(12));
   U644 : GTECH_NAND2 port map( A => ll_tx_data(12), B => n33, Z => n514);
   U645 : GTECH_NOR2 port map( A => axi4s_tx_tlast_port, B => n515, Z => n513);
   U646 : GTECH_NOT port map( A => n516, Z => n515);
   U647 : GTECH_NAND2 port map( A => N89, B => n15, Z => n516);
   U648 : GTECH_NAND2 port map( A => n517, B => n518, Z => axi4s_tx_tdata(11));
   U649 : GTECH_NAND2 port map( A => ll_tx_data(11), B => n33, Z => n518);
   U650 : GTECH_NOR2 port map( A => axi4s_tx_tlast_port, B => n519, Z => n517);
   U651 : GTECH_NOT port map( A => n520, Z => n519);
   U652 : GTECH_NAND2 port map( A => N88, B => n15, Z => n520);
   U653 : GTECH_NAND2 port map( A => n521, B => n522, Z => axi4s_tx_tdata(10));
   U654 : GTECH_NAND2 port map( A => ll_tx_data(10), B => n33, Z => n522);
   U655 : GTECH_NOR2 port map( A => axi4s_tx_tlast_port, B => n523, Z => n521);
   U656 : GTECH_NOT port map( A => n524, Z => n523);
   U657 : GTECH_NAND2 port map( A => N87, B => n15, Z => n524);
   U658 : GTECH_NOT port map( A => n525, Z => axi4s_tx_tdata(0));
   U659 : GTECH_NOR2 port map( A => n526, B => n527, Z => n525);
   U660 : GTECH_NAND2 port map( A => n528, B => n529, Z => n527);
   U661 : GTECH_NAND2 port map( A => tx_src(0), B => n30, Z => n529);
   U662 : GTECH_NOT port map( A => n84_port, Z => n30);
   U663 : GTECH_NAND2 port map( A => n530, B => n550, Z => n84_port);
   U664 : GTECH_NAND2 port map( A => tx_dst(0), B => n16, Z => n528);
   U665 : GTECH_NOT port map( A => n227_port, Z => n16);
   U666 : GTECH_NAND2 port map( A => n530, B => n20, Z => n227_port);
   U667 : GTECH_NOR2 port map( A => n548, B => n549, Z => n530);
   U668 : GTECH_NAND2 port map( A => n531, B => n532, Z => n526);
   U669 : GTECH_NAND2 port map( A => ll_tx_data(0), B => n33, Z => n532);
   U670 : GTECH_NOR2 port map( A => n533, B => n20, Z => n33);
   U671 : GTECH_NOT port map( A => n550, Z => n20);
   U672 : GTECH_NAND2 port map( A => n19, B => n548, Z => n533);
   U673 : GTECH_NOT port map( A => n549, Z => n19);
   U674 : GTECH_NOR2 port map( A => axi4s_tx_tlast_port, B => n534, Z => n531);
   U675 : GTECH_NOT port map( A => n535, Z => n534);
   U676 : GTECH_NAND2 port map( A => N77, B => n15, Z => n535);
   U677 : GTECH_NOT port map( A => n383, Z => n15);
   U678 : GTECH_NAND2 port map( A => n536, B => n548, Z => n383);
   U679 : GTECH_NOR2 port map( A => n549, B => n550, Z => n536);
   U680 : GTECH_NOT port map( A => n59, Z => axi4s_tx_tlast_port);
   U681 : GTECH_NAND2 port map( A => n537, B => n549, Z => n59);
   U682 : GTECH_NOR2 port map( A => n548, B => n550, Z => n537);
   U683 : GTECH_NAND2 port map( A => n538, B => n152, Z => axi4s_rx_tready);
   U684 : GTECH_NOR2 port map( A => n211, B => n264_port, Z => n152);
   U685 : GTECH_NOR2 port map( A => n539, B => n148, Z => n264_port);
   U686 : GTECH_NAND2 port map( A => n247_port, B => n42, Z => n539);
   U687 : GTECH_NOR2 port map( A => n540, B => n547, Z => n211);
   U688 : GTECH_NAND2 port map( A => n148, B => n247_port, Z => n540);
   U689 : GTECH_NOT port map( A => n546, Z => n247_port);
   U690 : GTECH_NOT port map( A => n545, Z => n148);
   U691 : GTECH_NOR2 port map( A => n541, B => n147, Z => n538);
   U692 : GTECH_NAND2 port map( A => n248_port, B => n156, Z => n147);
   U693 : GTECH_NAND2 port map( A => n542, B => n546, Z => n156);
   U694 : GTECH_NOR2 port map( A => n545, B => n547, Z => n542);
   U695 : GTECH_NAND2 port map( A => n543, B => n547, Z => n248_port);
   U696 : GTECH_NOR2 port map( A => n545, B => n546, Z => n543);
   U697 : GTECH_NOR2 port map( A => ll_rx_dst_rdy_n, B => n50, Z => n541);
   U698 : GTECH_NAND2 port map( A => n544, B => n545, Z => n50);
   U699 : GTECH_NOR2 port map( A => n546, B => n42, Z => n544);
   U700 : GTECH_NOT port map( A => n547, Z => n42);

end SYN_beh;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_itag3a.all;

entity arm_lite is

   port( clk, reset_b, irq, firq : in std_logic;  axi4s_tx_tdata : out 
         std_logic_vector (31 downto 0);  axi4s_tx_tstrb, axi4s_tx_tkeep : out 
         std_logic_vector (3 downto 0);  axi4s_tx_tvalid, axi4s_tx_tlast : out 
         std_logic;  axi4s_tx_tid : out std_logic_vector (2 downto 0);  
         axi4s_tx_tdest : out std_logic_vector (4 downto 0);  axi4s_tx_tuser : 
         out std_logic_vector (3 downto 0);  axi4s_tx_tready : in std_logic;  
         axi4s_rx_tdata : in std_logic_vector (31 downto 0);  axi4s_rx_tstrb, 
         axi4s_rx_tkeep : in std_logic_vector (3 downto 0);  axi4s_rx_tvalid, 
         axi4s_rx_tlast : in std_logic;  axi4s_rx_tid : in std_logic_vector (2 
         downto 0);  axi4s_rx_tdest : in std_logic_vector (4 downto 0);  
         axi4s_rx_tuser : in std_logic_vector (3 downto 0);  axi4s_rx_tready, 
         o_cpuwait : out std_logic);

end arm_lite;

architecture SYN_beh of arm_lite is

   component wb_to_axi4s_bridge_08_1000000
      port( clk, reset_b : in std_logic;  SLV_DAT_O : out std_logic_vector (31 
            downto 0);  SLV_DAT_I : in std_logic_vector (31 downto 0);  SEL_I :
            in std_logic_vector (3 downto 0);  CYC_I, STB_I, WE_I : in 
            std_logic;  ACK_O, RTY_O : out std_logic;  ADR_I : in 
            std_logic_vector (0 to 31);  axi4s_tx_tdata : out std_logic_vector 
            (31 downto 0);  axi4s_tx_tstrb, axi4s_tx_tkeep : out 
            std_logic_vector (3 downto 0);  axi4s_tx_tvalid, axi4s_tx_tlast : 
            out std_logic;  axi4s_tx_tid : out std_logic_vector (2 downto 0);  
            axi4s_tx_tdest : out std_logic_vector (4 downto 0);  axi4s_tx_tuser
            : out std_logic_vector (3 downto 0);  axi4s_tx_tready : in 
            std_logic;  axi4s_rx_tdata : in std_logic_vector (31 downto 0);  
            axi4s_rx_tstrb, axi4s_rx_tkeep : in std_logic_vector (3 downto 0); 
            axi4s_rx_tvalid, axi4s_rx_tlast : in std_logic;  axi4s_rx_tid : in 
            std_logic_vector (2 downto 0);  axi4s_rx_tdest : in 
            std_logic_vector (4 downto 0);  axi4s_rx_tuser : in 
            std_logic_vector (3 downto 0);  axi4s_rx_tready : out std_logic);
   end component;
   
   component a23_core
      port( reset_b, i_clk, i_irq, i_firq, i_system_rdy : in std_logic;  
            o_jtag_pc : out std_logic_vector (31 downto 0);  i_wb_dat : in 
            std_logic_vector (31 downto 0);  o_wb_dat : out std_logic_vector 
            (31 downto 0);  o_wb_sel : out std_logic_vector (3 downto 0);  
            o_wb_cyc, o_wb_stb, o_wb_we : out std_logic;  i_wb_ack : in 
            std_logic;  o_wb_adr : out std_logic_vector (31 downto 0);  
            i_wb_err : in std_logic;  o_cpuwait : out std_logic);
   end component;
   
   signal wb_mst_din_31_port, wb_mst_din_30_port, wb_mst_din_29_port, 
      wb_mst_din_28_port, wb_mst_din_27_port, wb_mst_din_26_port, 
      wb_mst_din_25_port, wb_mst_din_24_port, wb_mst_din_23_port, 
      wb_mst_din_22_port, wb_mst_din_21_port, wb_mst_din_20_port, 
      wb_mst_din_19_port, wb_mst_din_18_port, wb_mst_din_17_port, 
      wb_mst_din_16_port, wb_mst_din_15_port, wb_mst_din_14_port, 
      wb_mst_din_13_port, wb_mst_din_12_port, wb_mst_din_11_port, 
      wb_mst_din_10_port, wb_mst_din_9_port, wb_mst_din_8_port, 
      wb_mst_din_7_port, wb_mst_din_6_port, wb_mst_din_5_port, 
      wb_mst_din_4_port, wb_mst_din_3_port, wb_mst_din_2_port, 
      wb_mst_din_1_port, wb_mst_din_0_port, wb_mst_dout_31_port, 
      wb_mst_dout_30_port, wb_mst_dout_29_port, wb_mst_dout_28_port, 
      wb_mst_dout_27_port, wb_mst_dout_26_port, wb_mst_dout_25_port, 
      wb_mst_dout_24_port, wb_mst_dout_23_port, wb_mst_dout_22_port, 
      wb_mst_dout_21_port, wb_mst_dout_20_port, wb_mst_dout_19_port, 
      wb_mst_dout_18_port, wb_mst_dout_17_port, wb_mst_dout_16_port, 
      wb_mst_dout_15_port, wb_mst_dout_14_port, wb_mst_dout_13_port, 
      wb_mst_dout_12_port, wb_mst_dout_11_port, wb_mst_dout_10_port, 
      wb_mst_dout_9_port, wb_mst_dout_8_port, wb_mst_dout_7_port, 
      wb_mst_dout_6_port, wb_mst_dout_5_port, wb_mst_dout_4_port, 
      wb_mst_dout_3_port, wb_mst_dout_2_port, wb_mst_dout_1_port, 
      wb_mst_dout_0_port, wb_mst_sel_3_port, wb_mst_sel_2_port, 
      wb_mst_sel_1_port, wb_mst_sel_0_port, wb_mst_cyc, wb_mst_stb, wb_mst_we, 
      wb_mst_ack, wb_mst_addr_0_port, wb_mst_addr_1_port, wb_mst_addr_2_port, 
      wb_mst_addr_3_port, wb_mst_addr_4_port, wb_mst_addr_5_port, 
      wb_mst_addr_6_port, wb_mst_addr_7_port, wb_mst_addr_8_port, 
      wb_mst_addr_9_port, wb_mst_addr_10_port, wb_mst_addr_11_port, 
      wb_mst_addr_12_port, wb_mst_addr_13_port, wb_mst_addr_14_port, 
      wb_mst_addr_15_port, wb_mst_addr_16_port, wb_mst_addr_17_port, 
      wb_mst_addr_18_port, wb_mst_addr_19_port, wb_mst_addr_20_port, 
      wb_mst_addr_21_port, wb_mst_addr_22_port, wb_mst_addr_23_port, 
      wb_mst_addr_24_port, wb_mst_addr_25_port, wb_mst_addr_26_port, 
      wb_mst_addr_27_port, wb_mst_addr_28_port, wb_mst_addr_29_port, 
      wb_mst_addr_30_port, wb_mst_addr_31_port, n1, n_1234, n_1235, n_1236, 
      n_1237, n_1238, n_1239, n_1240, n_1241, n_1242, n_1243, n_1244, n_1245, 
      n_1246, n_1247, n_1248, n_1249, n_1250, n_1251, n_1252, n_1253, n_1254, 
      n_1255, n_1256, n_1257, n_1258, n_1259, n_1260, n_1261, n_1262, n_1263, 
      n_1264, n_1265, n_1266, n_1267, n_1268, n_1269, n_1270, n_1271, n_1272, 
      n_1273 : std_logic;

begin
   
   arm_i : a23_core port map( reset_b => reset_b, i_clk => clk, i_irq => irq, 
                           i_firq => firq, i_system_rdy => reset_b, 
                           o_jtag_pc(31) => n_1234, o_jtag_pc(30) => n_1235, 
                           o_jtag_pc(29) => n_1236, o_jtag_pc(28) => n_1237, 
                           o_jtag_pc(27) => n_1238, o_jtag_pc(26) => n_1239, 
                           o_jtag_pc(25) => n_1240, o_jtag_pc(24) => n_1241, 
                           o_jtag_pc(23) => n_1242, o_jtag_pc(22) => n_1243, 
                           o_jtag_pc(21) => n_1244, o_jtag_pc(20) => n_1245, 
                           o_jtag_pc(19) => n_1246, o_jtag_pc(18) => n_1247, 
                           o_jtag_pc(17) => n_1248, o_jtag_pc(16) => n_1249, 
                           o_jtag_pc(15) => n_1250, o_jtag_pc(14) => n_1251, 
                           o_jtag_pc(13) => n_1252, o_jtag_pc(12) => n_1253, 
                           o_jtag_pc(11) => n_1254, o_jtag_pc(10) => n_1255, 
                           o_jtag_pc(9) => n_1256, o_jtag_pc(8) => n_1257, 
                           o_jtag_pc(7) => n_1258, o_jtag_pc(6) => n_1259, 
                           o_jtag_pc(5) => n_1260, o_jtag_pc(4) => n_1261, 
                           o_jtag_pc(3) => n_1262, o_jtag_pc(2) => n_1263, 
                           o_jtag_pc(1) => n_1264, o_jtag_pc(0) => n_1265, 
                           i_wb_dat(31) => wb_mst_din_31_port, i_wb_dat(30) => 
                           wb_mst_din_30_port, i_wb_dat(29) => 
                           wb_mst_din_29_port, i_wb_dat(28) => 
                           wb_mst_din_28_port, i_wb_dat(27) => 
                           wb_mst_din_27_port, i_wb_dat(26) => 
                           wb_mst_din_26_port, i_wb_dat(25) => 
                           wb_mst_din_25_port, i_wb_dat(24) => 
                           wb_mst_din_24_port, i_wb_dat(23) => 
                           wb_mst_din_23_port, i_wb_dat(22) => 
                           wb_mst_din_22_port, i_wb_dat(21) => 
                           wb_mst_din_21_port, i_wb_dat(20) => 
                           wb_mst_din_20_port, i_wb_dat(19) => 
                           wb_mst_din_19_port, i_wb_dat(18) => 
                           wb_mst_din_18_port, i_wb_dat(17) => 
                           wb_mst_din_17_port, i_wb_dat(16) => 
                           wb_mst_din_16_port, i_wb_dat(15) => 
                           wb_mst_din_15_port, i_wb_dat(14) => 
                           wb_mst_din_14_port, i_wb_dat(13) => 
                           wb_mst_din_13_port, i_wb_dat(12) => 
                           wb_mst_din_12_port, i_wb_dat(11) => 
                           wb_mst_din_11_port, i_wb_dat(10) => 
                           wb_mst_din_10_port, i_wb_dat(9) => wb_mst_din_9_port
                           , i_wb_dat(8) => wb_mst_din_8_port, i_wb_dat(7) => 
                           wb_mst_din_7_port, i_wb_dat(6) => wb_mst_din_6_port,
                           i_wb_dat(5) => wb_mst_din_5_port, i_wb_dat(4) => 
                           wb_mst_din_4_port, i_wb_dat(3) => wb_mst_din_3_port,
                           i_wb_dat(2) => wb_mst_din_2_port, i_wb_dat(1) => 
                           wb_mst_din_1_port, i_wb_dat(0) => wb_mst_din_0_port,
                           o_wb_dat(31) => wb_mst_dout_31_port, o_wb_dat(30) =>
                           wb_mst_dout_30_port, o_wb_dat(29) => 
                           wb_mst_dout_29_port, o_wb_dat(28) => 
                           wb_mst_dout_28_port, o_wb_dat(27) => 
                           wb_mst_dout_27_port, o_wb_dat(26) => 
                           wb_mst_dout_26_port, o_wb_dat(25) => 
                           wb_mst_dout_25_port, o_wb_dat(24) => 
                           wb_mst_dout_24_port, o_wb_dat(23) => 
                           wb_mst_dout_23_port, o_wb_dat(22) => 
                           wb_mst_dout_22_port, o_wb_dat(21) => 
                           wb_mst_dout_21_port, o_wb_dat(20) => 
                           wb_mst_dout_20_port, o_wb_dat(19) => 
                           wb_mst_dout_19_port, o_wb_dat(18) => 
                           wb_mst_dout_18_port, o_wb_dat(17) => 
                           wb_mst_dout_17_port, o_wb_dat(16) => 
                           wb_mst_dout_16_port, o_wb_dat(15) => 
                           wb_mst_dout_15_port, o_wb_dat(14) => 
                           wb_mst_dout_14_port, o_wb_dat(13) => 
                           wb_mst_dout_13_port, o_wb_dat(12) => 
                           wb_mst_dout_12_port, o_wb_dat(11) => 
                           wb_mst_dout_11_port, o_wb_dat(10) => 
                           wb_mst_dout_10_port, o_wb_dat(9) => 
                           wb_mst_dout_9_port, o_wb_dat(8) => 
                           wb_mst_dout_8_port, o_wb_dat(7) => 
                           wb_mst_dout_7_port, o_wb_dat(6) => 
                           wb_mst_dout_6_port, o_wb_dat(5) => 
                           wb_mst_dout_5_port, o_wb_dat(4) => 
                           wb_mst_dout_4_port, o_wb_dat(3) => 
                           wb_mst_dout_3_port, o_wb_dat(2) => 
                           wb_mst_dout_2_port, o_wb_dat(1) => 
                           wb_mst_dout_1_port, o_wb_dat(0) => 
                           wb_mst_dout_0_port, o_wb_sel(3) => wb_mst_sel_3_port
                           , o_wb_sel(2) => wb_mst_sel_2_port, o_wb_sel(1) => 
                           wb_mst_sel_1_port, o_wb_sel(0) => wb_mst_sel_0_port,
                           o_wb_cyc => wb_mst_cyc, o_wb_stb => wb_mst_stb, 
                           o_wb_we => wb_mst_we, i_wb_ack => wb_mst_ack, 
                           o_wb_adr(31) => wb_mst_addr_0_port, o_wb_adr(30) => 
                           wb_mst_addr_1_port, o_wb_adr(29) => 
                           wb_mst_addr_2_port, o_wb_adr(28) => 
                           wb_mst_addr_3_port, o_wb_adr(27) => 
                           wb_mst_addr_4_port, o_wb_adr(26) => 
                           wb_mst_addr_5_port, o_wb_adr(25) => 
                           wb_mst_addr_6_port, o_wb_adr(24) => 
                           wb_mst_addr_7_port, o_wb_adr(23) => 
                           wb_mst_addr_8_port, o_wb_adr(22) => 
                           wb_mst_addr_9_port, o_wb_adr(21) => 
                           wb_mst_addr_10_port, o_wb_adr(20) => 
                           wb_mst_addr_11_port, o_wb_adr(19) => 
                           wb_mst_addr_12_port, o_wb_adr(18) => 
                           wb_mst_addr_13_port, o_wb_adr(17) => 
                           wb_mst_addr_14_port, o_wb_adr(16) => 
                           wb_mst_addr_15_port, o_wb_adr(15) => 
                           wb_mst_addr_16_port, o_wb_adr(14) => 
                           wb_mst_addr_17_port, o_wb_adr(13) => 
                           wb_mst_addr_18_port, o_wb_adr(12) => 
                           wb_mst_addr_19_port, o_wb_adr(11) => 
                           wb_mst_addr_20_port, o_wb_adr(10) => 
                           wb_mst_addr_21_port, o_wb_adr(9) => 
                           wb_mst_addr_22_port, o_wb_adr(8) => 
                           wb_mst_addr_23_port, o_wb_adr(7) => 
                           wb_mst_addr_24_port, o_wb_adr(6) => 
                           wb_mst_addr_25_port, o_wb_adr(5) => 
                           wb_mst_addr_26_port, o_wb_adr(4) => 
                           wb_mst_addr_27_port, o_wb_adr(3) => 
                           wb_mst_addr_28_port, o_wb_adr(2) => 
                           wb_mst_addr_29_port, o_wb_adr(1) => 
                           wb_mst_addr_30_port, o_wb_adr(0) => 
                           wb_mst_addr_31_port, i_wb_err => n1, o_cpuwait => 
                           o_cpuwait);
   wb_to_axi4s_bridge_1 : wb_to_axi4s_bridge_08_1000000 port map( clk => clk, 
                           reset_b => reset_b, SLV_DAT_O(31) => 
                           wb_mst_din_31_port, SLV_DAT_O(30) => 
                           wb_mst_din_30_port, SLV_DAT_O(29) => 
                           wb_mst_din_29_port, SLV_DAT_O(28) => 
                           wb_mst_din_28_port, SLV_DAT_O(27) => 
                           wb_mst_din_27_port, SLV_DAT_O(26) => 
                           wb_mst_din_26_port, SLV_DAT_O(25) => 
                           wb_mst_din_25_port, SLV_DAT_O(24) => 
                           wb_mst_din_24_port, SLV_DAT_O(23) => 
                           wb_mst_din_23_port, SLV_DAT_O(22) => 
                           wb_mst_din_22_port, SLV_DAT_O(21) => 
                           wb_mst_din_21_port, SLV_DAT_O(20) => 
                           wb_mst_din_20_port, SLV_DAT_O(19) => 
                           wb_mst_din_19_port, SLV_DAT_O(18) => 
                           wb_mst_din_18_port, SLV_DAT_O(17) => 
                           wb_mst_din_17_port, SLV_DAT_O(16) => 
                           wb_mst_din_16_port, SLV_DAT_O(15) => 
                           wb_mst_din_15_port, SLV_DAT_O(14) => 
                           wb_mst_din_14_port, SLV_DAT_O(13) => 
                           wb_mst_din_13_port, SLV_DAT_O(12) => 
                           wb_mst_din_12_port, SLV_DAT_O(11) => 
                           wb_mst_din_11_port, SLV_DAT_O(10) => 
                           wb_mst_din_10_port, SLV_DAT_O(9) => 
                           wb_mst_din_9_port, SLV_DAT_O(8) => wb_mst_din_8_port
                           , SLV_DAT_O(7) => wb_mst_din_7_port, SLV_DAT_O(6) =>
                           wb_mst_din_6_port, SLV_DAT_O(5) => wb_mst_din_5_port
                           , SLV_DAT_O(4) => wb_mst_din_4_port, SLV_DAT_O(3) =>
                           wb_mst_din_3_port, SLV_DAT_O(2) => wb_mst_din_2_port
                           , SLV_DAT_O(1) => wb_mst_din_1_port, SLV_DAT_O(0) =>
                           wb_mst_din_0_port, SLV_DAT_I(31) => 
                           wb_mst_dout_31_port, SLV_DAT_I(30) => 
                           wb_mst_dout_30_port, SLV_DAT_I(29) => 
                           wb_mst_dout_29_port, SLV_DAT_I(28) => 
                           wb_mst_dout_28_port, SLV_DAT_I(27) => 
                           wb_mst_dout_27_port, SLV_DAT_I(26) => 
                           wb_mst_dout_26_port, SLV_DAT_I(25) => 
                           wb_mst_dout_25_port, SLV_DAT_I(24) => 
                           wb_mst_dout_24_port, SLV_DAT_I(23) => 
                           wb_mst_dout_23_port, SLV_DAT_I(22) => 
                           wb_mst_dout_22_port, SLV_DAT_I(21) => 
                           wb_mst_dout_21_port, SLV_DAT_I(20) => 
                           wb_mst_dout_20_port, SLV_DAT_I(19) => 
                           wb_mst_dout_19_port, SLV_DAT_I(18) => 
                           wb_mst_dout_18_port, SLV_DAT_I(17) => 
                           wb_mst_dout_17_port, SLV_DAT_I(16) => 
                           wb_mst_dout_16_port, SLV_DAT_I(15) => 
                           wb_mst_dout_15_port, SLV_DAT_I(14) => 
                           wb_mst_dout_14_port, SLV_DAT_I(13) => 
                           wb_mst_dout_13_port, SLV_DAT_I(12) => 
                           wb_mst_dout_12_port, SLV_DAT_I(11) => 
                           wb_mst_dout_11_port, SLV_DAT_I(10) => 
                           wb_mst_dout_10_port, SLV_DAT_I(9) => 
                           wb_mst_dout_9_port, SLV_DAT_I(8) => 
                           wb_mst_dout_8_port, SLV_DAT_I(7) => 
                           wb_mst_dout_7_port, SLV_DAT_I(6) => 
                           wb_mst_dout_6_port, SLV_DAT_I(5) => 
                           wb_mst_dout_5_port, SLV_DAT_I(4) => 
                           wb_mst_dout_4_port, SLV_DAT_I(3) => 
                           wb_mst_dout_3_port, SLV_DAT_I(2) => 
                           wb_mst_dout_2_port, SLV_DAT_I(1) => 
                           wb_mst_dout_1_port, SLV_DAT_I(0) => 
                           wb_mst_dout_0_port, SEL_I(3) => wb_mst_sel_3_port, 
                           SEL_I(2) => wb_mst_sel_2_port, SEL_I(1) => 
                           wb_mst_sel_1_port, SEL_I(0) => wb_mst_sel_0_port, 
                           CYC_I => wb_mst_cyc, STB_I => wb_mst_stb, WE_I => 
                           wb_mst_we, ACK_O => wb_mst_ack, RTY_O => n_1266, 
                           ADR_I(0) => wb_mst_addr_0_port, ADR_I(1) => 
                           wb_mst_addr_1_port, ADR_I(2) => wb_mst_addr_2_port, 
                           ADR_I(3) => wb_mst_addr_3_port, ADR_I(4) => 
                           wb_mst_addr_4_port, ADR_I(5) => wb_mst_addr_5_port, 
                           ADR_I(6) => wb_mst_addr_6_port, ADR_I(7) => 
                           wb_mst_addr_7_port, ADR_I(8) => wb_mst_addr_8_port, 
                           ADR_I(9) => wb_mst_addr_9_port, ADR_I(10) => 
                           wb_mst_addr_10_port, ADR_I(11) => 
                           wb_mst_addr_11_port, ADR_I(12) => 
                           wb_mst_addr_12_port, ADR_I(13) => 
                           wb_mst_addr_13_port, ADR_I(14) => 
                           wb_mst_addr_14_port, ADR_I(15) => 
                           wb_mst_addr_15_port, ADR_I(16) => 
                           wb_mst_addr_16_port, ADR_I(17) => 
                           wb_mst_addr_17_port, ADR_I(18) => 
                           wb_mst_addr_18_port, ADR_I(19) => 
                           wb_mst_addr_19_port, ADR_I(20) => 
                           wb_mst_addr_20_port, ADR_I(21) => 
                           wb_mst_addr_21_port, ADR_I(22) => 
                           wb_mst_addr_22_port, ADR_I(23) => 
                           wb_mst_addr_23_port, ADR_I(24) => 
                           wb_mst_addr_24_port, ADR_I(25) => 
                           wb_mst_addr_25_port, ADR_I(26) => 
                           wb_mst_addr_26_port, ADR_I(27) => 
                           wb_mst_addr_27_port, ADR_I(28) => 
                           wb_mst_addr_28_port, ADR_I(29) => 
                           wb_mst_addr_29_port, ADR_I(30) => 
                           wb_mst_addr_30_port, ADR_I(31) => 
                           wb_mst_addr_31_port, axi4s_tx_tdata(31) => 
                           axi4s_tx_tdata(31), axi4s_tx_tdata(30) => 
                           axi4s_tx_tdata(30), axi4s_tx_tdata(29) => 
                           axi4s_tx_tdata(29), axi4s_tx_tdata(28) => 
                           axi4s_tx_tdata(28), axi4s_tx_tdata(27) => 
                           axi4s_tx_tdata(27), axi4s_tx_tdata(26) => 
                           axi4s_tx_tdata(26), axi4s_tx_tdata(25) => 
                           axi4s_tx_tdata(25), axi4s_tx_tdata(24) => 
                           axi4s_tx_tdata(24), axi4s_tx_tdata(23) => 
                           axi4s_tx_tdata(23), axi4s_tx_tdata(22) => 
                           axi4s_tx_tdata(22), axi4s_tx_tdata(21) => 
                           axi4s_tx_tdata(21), axi4s_tx_tdata(20) => 
                           axi4s_tx_tdata(20), axi4s_tx_tdata(19) => 
                           axi4s_tx_tdata(19), axi4s_tx_tdata(18) => 
                           axi4s_tx_tdata(18), axi4s_tx_tdata(17) => 
                           axi4s_tx_tdata(17), axi4s_tx_tdata(16) => 
                           axi4s_tx_tdata(16), axi4s_tx_tdata(15) => 
                           axi4s_tx_tdata(15), axi4s_tx_tdata(14) => 
                           axi4s_tx_tdata(14), axi4s_tx_tdata(13) => 
                           axi4s_tx_tdata(13), axi4s_tx_tdata(12) => 
                           axi4s_tx_tdata(12), axi4s_tx_tdata(11) => 
                           axi4s_tx_tdata(11), axi4s_tx_tdata(10) => 
                           axi4s_tx_tdata(10), axi4s_tx_tdata(9) => 
                           axi4s_tx_tdata(9), axi4s_tx_tdata(8) => 
                           axi4s_tx_tdata(8), axi4s_tx_tdata(7) => 
                           axi4s_tx_tdata(7), axi4s_tx_tdata(6) => 
                           axi4s_tx_tdata(6), axi4s_tx_tdata(5) => 
                           axi4s_tx_tdata(5), axi4s_tx_tdata(4) => 
                           axi4s_tx_tdata(4), axi4s_tx_tdata(3) => 
                           axi4s_tx_tdata(3), axi4s_tx_tdata(2) => 
                           axi4s_tx_tdata(2), axi4s_tx_tdata(1) => 
                           axi4s_tx_tdata(1), axi4s_tx_tdata(0) => 
                           axi4s_tx_tdata(0), axi4s_tx_tstrb(3) => 
                           axi4s_tx_tstrb(3), axi4s_tx_tstrb(2) => 
                           axi4s_tx_tstrb(2), axi4s_tx_tstrb(1) => 
                           axi4s_tx_tstrb(1), axi4s_tx_tstrb(0) => 
                           axi4s_tx_tstrb(0), axi4s_tx_tkeep(3) => 
                           axi4s_tx_tkeep(3), axi4s_tx_tkeep(2) => 
                           axi4s_tx_tkeep(2), axi4s_tx_tkeep(1) => 
                           axi4s_tx_tkeep(1), axi4s_tx_tkeep(0) => 
                           axi4s_tx_tkeep(0), axi4s_tx_tvalid => 
                           axi4s_tx_tvalid, axi4s_tx_tlast => axi4s_tx_tlast, 
                           axi4s_tx_tid(2) => n_1267, axi4s_tx_tid(1) => n_1268
                           , axi4s_tx_tid(0) => n_1269, axi4s_tx_tdest(4) => 
                           axi4s_tx_tdest(4), axi4s_tx_tdest(3) => 
                           axi4s_tx_tdest(3), axi4s_tx_tdest(2) => 
                           axi4s_tx_tdest(2), axi4s_tx_tdest(1) => 
                           axi4s_tx_tdest(1), axi4s_tx_tdest(0) => 
                           axi4s_tx_tdest(0), axi4s_tx_tuser(3) => n_1270, 
                           axi4s_tx_tuser(2) => n_1271, axi4s_tx_tuser(1) => 
                           n_1272, axi4s_tx_tuser(0) => n_1273, axi4s_tx_tready
                           => axi4s_tx_tready, axi4s_rx_tdata(31) => 
                           axi4s_rx_tdata(31), axi4s_rx_tdata(30) => 
                           axi4s_rx_tdata(30), axi4s_rx_tdata(29) => 
                           axi4s_rx_tdata(29), axi4s_rx_tdata(28) => 
                           axi4s_rx_tdata(28), axi4s_rx_tdata(27) => 
                           axi4s_rx_tdata(27), axi4s_rx_tdata(26) => 
                           axi4s_rx_tdata(26), axi4s_rx_tdata(25) => 
                           axi4s_rx_tdata(25), axi4s_rx_tdata(24) => 
                           axi4s_rx_tdata(24), axi4s_rx_tdata(23) => 
                           axi4s_rx_tdata(23), axi4s_rx_tdata(22) => 
                           axi4s_rx_tdata(22), axi4s_rx_tdata(21) => 
                           axi4s_rx_tdata(21), axi4s_rx_tdata(20) => 
                           axi4s_rx_tdata(20), axi4s_rx_tdata(19) => 
                           axi4s_rx_tdata(19), axi4s_rx_tdata(18) => 
                           axi4s_rx_tdata(18), axi4s_rx_tdata(17) => 
                           axi4s_rx_tdata(17), axi4s_rx_tdata(16) => 
                           axi4s_rx_tdata(16), axi4s_rx_tdata(15) => 
                           axi4s_rx_tdata(15), axi4s_rx_tdata(14) => 
                           axi4s_rx_tdata(14), axi4s_rx_tdata(13) => 
                           axi4s_rx_tdata(13), axi4s_rx_tdata(12) => 
                           axi4s_rx_tdata(12), axi4s_rx_tdata(11) => 
                           axi4s_rx_tdata(11), axi4s_rx_tdata(10) => 
                           axi4s_rx_tdata(10), axi4s_rx_tdata(9) => 
                           axi4s_rx_tdata(9), axi4s_rx_tdata(8) => 
                           axi4s_rx_tdata(8), axi4s_rx_tdata(7) => 
                           axi4s_rx_tdata(7), axi4s_rx_tdata(6) => 
                           axi4s_rx_tdata(6), axi4s_rx_tdata(5) => 
                           axi4s_rx_tdata(5), axi4s_rx_tdata(4) => 
                           axi4s_rx_tdata(4), axi4s_rx_tdata(3) => 
                           axi4s_rx_tdata(3), axi4s_rx_tdata(2) => 
                           axi4s_rx_tdata(2), axi4s_rx_tdata(1) => 
                           axi4s_rx_tdata(1), axi4s_rx_tdata(0) => 
                           axi4s_rx_tdata(0), axi4s_rx_tstrb(3) => 
                           axi4s_rx_tstrb(3), axi4s_rx_tstrb(2) => 
                           axi4s_rx_tstrb(2), axi4s_rx_tstrb(1) => 
                           axi4s_rx_tstrb(1), axi4s_rx_tstrb(0) => 
                           axi4s_rx_tstrb(0), axi4s_rx_tkeep(3) => 
                           axi4s_rx_tkeep(3), axi4s_rx_tkeep(2) => 
                           axi4s_rx_tkeep(2), axi4s_rx_tkeep(1) => 
                           axi4s_rx_tkeep(1), axi4s_rx_tkeep(0) => 
                           axi4s_rx_tkeep(0), axi4s_rx_tvalid => 
                           axi4s_rx_tvalid, axi4s_rx_tlast => axi4s_rx_tlast, 
                           axi4s_rx_tid(2) => axi4s_rx_tid(2), axi4s_rx_tid(1) 
                           => axi4s_rx_tid(1), axi4s_rx_tid(0) => 
                           axi4s_rx_tid(0), axi4s_rx_tdest(4) => 
                           axi4s_rx_tdest(4), axi4s_rx_tdest(3) => 
                           axi4s_rx_tdest(3), axi4s_rx_tdest(2) => 
                           axi4s_rx_tdest(2), axi4s_rx_tdest(1) => 
                           axi4s_rx_tdest(1), axi4s_rx_tdest(0) => 
                           axi4s_rx_tdest(0), axi4s_rx_tuser(3) => 
                           axi4s_rx_tuser(3), axi4s_rx_tuser(2) => 
                           axi4s_rx_tuser(2), axi4s_rx_tuser(1) => 
                           axi4s_rx_tuser(1), axi4s_rx_tuser(0) => 
                           axi4s_rx_tuser(0), axi4s_rx_tready => 
                           axi4s_rx_tready);
   n1 <= '0';
   axi4s_tx_tuser(0) <= '0';
   axi4s_tx_tuser(1) <= '0';
   axi4s_tx_tuser(2) <= '0';
   axi4s_tx_tuser(3) <= '0';
   axi4s_tx_tid(0) <= '0';
   axi4s_tx_tid(1) <= '0';
   axi4s_tx_tid(2) <= '0';

end SYN_beh;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_itag3a.all;

entity crypto_subsystem is

   port( clk, reset_b : in std_logic;  axi4s_tx_tdata : out std_logic_vector 
         (31 downto 0);  axi4s_tx_tstrb, axi4s_tx_tkeep : out std_logic_vector 
         (3 downto 0);  axi4s_tx_tvalid, axi4s_tx_tlast : out std_logic;  
         axi4s_tx_tid : out std_logic_vector (2 downto 0);  axi4s_tx_tdest : 
         out std_logic_vector (4 downto 0);  axi4s_tx_tuser : out 
         std_logic_vector (3 downto 0);  axi4s_tx_tready : in std_logic;  
         axi4s_rx_tdata : in std_logic_vector (31 downto 0);  axi4s_rx_tstrb, 
         axi4s_rx_tkeep : in std_logic_vector (3 downto 0);  axi4s_rx_tvalid, 
         axi4s_rx_tlast : in std_logic;  axi4s_rx_tid : in std_logic_vector (2 
         downto 0);  axi4s_rx_tdest : in std_logic_vector (4 downto 0);  
         axi4s_rx_tuser : in std_logic_vector (3 downto 0);  axi4s_rx_tready : 
         out std_logic;  arm_cpuwait : in std_logic);

end crypto_subsystem;

architecture SYN_beh of crypto_subsystem is

   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOR2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component performance_monitors_core
      port( clk, reset_b, zpu_cpuwait : in std_logic;  zpu_pc, zpu_inst : in 
            std_logic_vector (31 downto 0);  arm_cpuwait : in std_logic;  
            ll_sic_rx_port_data : in std_logic_vector (31 downto 0);  
            ll_sic_rx_port_src_rdy_n : in std_logic;  ll_sic_rx_port_dst_rdy_n 
            : out std_logic;  ll_sic_rx_port_sof_n, ll_sic_rx_port_eof_n : in 
            std_logic;  ll_sic_tx_port_data : out std_logic_vector (31 downto 
            0);  ll_sic_tx_port_src_rdy_n : out std_logic;  
            ll_sic_tx_port_dst_rdy_n : in std_logic;  ll_sic_tx_port_sof_n, 
            ll_sic_tx_port_eof_n : out std_logic);
   end component;
   
   component crypto_core
      port( clk, reset_b : in std_logic;  sel : in std_logic_vector (1 downto 
            0);  ll_rx_port_data : in std_logic_vector (31 downto 0);  
            ll_rx_port_sof_n, ll_rx_port_eof_n, ll_rx_port_src_rdy_n : in 
            std_logic;  ll_rx_port_dst_rdy_n : out std_logic;  ll_tx_port_data 
            : out std_logic_vector (31 downto 0);  ll_tx_port_sof_n, 
            ll_tx_port_eof_n, ll_tx_port_src_rdy_n : out std_logic;  
            ll_tx_port_dst_rdy_n : in std_logic);
   end component;
   
   component sic_v2
      port( clk, reset_b : in std_logic;  axi4s_tx_tdata : out std_logic_vector
            (31 downto 0);  axi4s_tx_tstrb, axi4s_tx_tkeep : out 
            std_logic_vector (3 downto 0);  axi4s_tx_tvalid, axi4s_tx_tlast : 
            out std_logic;  axi4s_tx_tid : out std_logic_vector (2 downto 0);  
            axi4s_tx_tdest : out std_logic_vector (4 downto 0);  axi4s_tx_tuser
            : out std_logic_vector (3 downto 0);  axi4s_tx_tready : in 
            std_logic;  axi4s_rx_tdata : in std_logic_vector (31 downto 0);  
            axi4s_rx_tstrb, axi4s_rx_tkeep : in std_logic_vector (3 downto 0); 
            axi4s_rx_tvalid, axi4s_rx_tlast : in std_logic;  axi4s_rx_tid : in 
            std_logic_vector (2 downto 0);  axi4s_rx_tdest : in 
            std_logic_vector (4 downto 0);  axi4s_rx_tuser : in 
            std_logic_vector (3 downto 0);  axi4s_rx_tready, cpuwait, cpu_reset
            : out std_logic;  addr : in std_logic_vector (31 downto 0);  re, we
            : in std_logic;  din : in std_logic_vector (31 downto 0);  dout : 
            out std_logic_vector (31 downto 0);  crypto_sel : out 
            std_logic_vector (1 downto 0);  ll_rx_data : out std_logic_vector 
            (31 downto 0);  ll_rx_sof_n, ll_rx_eof_n, ll_rx_src_rdy_n : out 
            std_logic;  ll_rx_dst_rdy_n : in std_logic;  ll_tx_data : in 
            std_logic_vector (31 downto 0);  ll_tx_sof_n, ll_tx_eof_n, 
            ll_tx_src_rdy_n : in std_logic;  ll_tx_dst_rdy_n : out std_logic;  
            ll_perf_rx_data : out std_logic_vector (31 downto 0);  
            ll_perf_rx_sof_n, ll_perf_rx_eof_n, ll_perf_rx_src_rdy_n : out 
            std_logic;  ll_perf_rx_dst_rdy_n : in std_logic;  ll_perf_tx_data :
            in std_logic_vector (31 downto 0);  ll_perf_tx_sof_n, 
            ll_perf_tx_eof_n, ll_perf_tx_src_rdy_n : in std_logic;  
            ll_perf_tx_dst_rdy_n : out std_logic);
   end component;
   
   component zpu_core
      port( clk, reset_b, enable, in_mem_busy : in std_logic;  mem_read : in 
            std_logic_vector (31 downto 0);  mem_write, out_mem_addr : out 
            std_logic_vector (31 downto 0);  out_mem_writeEnable, 
            out_mem_readEnable : out std_logic;  mem_writeMask : out 
            std_logic_vector (3 downto 0);  interrupt : in std_logic;  break : 
            out std_logic);
   end component;
   
   signal cpu_reset, cpuwait, enable, out_mem_writeEnable, out_mem_addr_9_port,
      out_mem_addr_8_port, out_mem_addr_7_port, out_mem_addr_6_port, 
      out_mem_addr_5_port, out_mem_addr_4_port, out_mem_addr_3_port, 
      out_mem_addr_31_port, out_mem_addr_30_port, out_mem_addr_2_port, 
      out_mem_addr_29_port, out_mem_addr_28_port, out_mem_addr_27_port, 
      out_mem_addr_26_port, out_mem_addr_25_port, out_mem_addr_24_port, 
      out_mem_addr_23_port, out_mem_addr_22_port, out_mem_addr_21_port, 
      out_mem_addr_20_port, out_mem_addr_1_port, out_mem_addr_19_port, 
      out_mem_addr_18_port, out_mem_addr_17_port, out_mem_addr_16_port, 
      out_mem_addr_15_port, out_mem_addr_14_port, out_mem_addr_13_port, 
      out_mem_addr_12_port, out_mem_addr_11_port, out_mem_addr_10_port, 
      out_mem_addr_0_port, mem_write_9_port, mem_write_8_port, mem_write_7_port
      , mem_write_6_port, mem_write_5_port, mem_write_4_port, mem_write_3_port,
      mem_write_31_port, mem_write_30_port, mem_write_2_port, mem_write_29_port
      , mem_write_28_port, mem_write_27_port, mem_write_26_port, 
      mem_write_25_port, mem_write_24_port, mem_write_23_port, 
      mem_write_22_port, mem_write_21_port, mem_write_20_port, mem_write_1_port
      , mem_write_19_port, mem_write_18_port, mem_write_17_port, 
      mem_write_16_port, mem_write_15_port, mem_write_14_port, 
      mem_write_13_port, mem_write_12_port, mem_write_11_port, 
      mem_write_10_port, mem_write_0_port, mem_read_9_port, mem_read_8_port, 
      mem_read_7_port, mem_read_6_port, mem_read_5_port, mem_read_4_port, 
      mem_read_3_port, mem_read_31_port, mem_read_30_port, mem_read_2_port, 
      mem_read_29_port, mem_read_28_port, mem_read_27_port, mem_read_26_port, 
      mem_read_25_port, mem_read_24_port, mem_read_23_port, mem_read_22_port, 
      mem_read_21_port, mem_read_20_port, mem_read_1_port, mem_read_19_port, 
      mem_read_18_port, mem_read_17_port, mem_read_16_port, mem_read_15_port, 
      mem_read_14_port, mem_read_13_port, mem_read_12_port, mem_read_11_port, 
      mem_read_10_port, mem_read_0_port, ll_tx_src_rdy_n, ll_tx_sof_n, 
      ll_tx_eof_n, ll_tx_dst_rdy_n, ll_tx_data_9_port, ll_tx_data_8_port, 
      ll_tx_data_7_port, ll_tx_data_6_port, ll_tx_data_5_port, 
      ll_tx_data_4_port, ll_tx_data_3_port, ll_tx_data_31_port, 
      ll_tx_data_30_port, ll_tx_data_2_port, ll_tx_data_29_port, 
      ll_tx_data_28_port, ll_tx_data_27_port, ll_tx_data_26_port, 
      ll_tx_data_25_port, ll_tx_data_24_port, ll_tx_data_23_port, 
      ll_tx_data_22_port, ll_tx_data_21_port, ll_tx_data_20_port, 
      ll_tx_data_1_port, ll_tx_data_19_port, ll_tx_data_18_port, 
      ll_tx_data_17_port, ll_tx_data_16_port, ll_tx_data_15_port, 
      ll_tx_data_14_port, ll_tx_data_13_port, ll_tx_data_12_port, 
      ll_tx_data_11_port, ll_tx_data_10_port, ll_tx_data_0_port, 
      ll_rx_src_rdy_n, ll_rx_sof_n, ll_rx_eof_n, ll_rx_dst_rdy_n, 
      ll_rx_data_9_port, ll_rx_data_8_port, ll_rx_data_7_port, 
      ll_rx_data_6_port, ll_rx_data_5_port, ll_rx_data_4_port, 
      ll_rx_data_3_port, ll_rx_data_31_port, ll_rx_data_30_port, 
      ll_rx_data_2_port, ll_rx_data_29_port, ll_rx_data_28_port, 
      ll_rx_data_27_port, ll_rx_data_26_port, ll_rx_data_25_port, 
      ll_rx_data_24_port, ll_rx_data_23_port, ll_rx_data_22_port, 
      ll_rx_data_21_port, ll_rx_data_20_port, ll_rx_data_1_port, 
      ll_rx_data_19_port, ll_rx_data_18_port, ll_rx_data_17_port, 
      ll_rx_data_16_port, ll_rx_data_15_port, ll_rx_data_14_port, 
      ll_rx_data_13_port, ll_rx_data_12_port, ll_rx_data_11_port, 
      ll_rx_data_10_port, ll_rx_data_0_port, ll_perf_tx_src_rdy_n, 
      ll_perf_tx_sof_n, ll_perf_tx_eof_n, ll_perf_tx_dst_rdy_n, 
      ll_perf_tx_data_9_port, ll_perf_tx_data_8_port, ll_perf_tx_data_7_port, 
      ll_perf_tx_data_6_port, ll_perf_tx_data_5_port, ll_perf_tx_data_4_port, 
      ll_perf_tx_data_3_port, ll_perf_tx_data_31_port, ll_perf_tx_data_30_port,
      ll_perf_tx_data_2_port, ll_perf_tx_data_29_port, ll_perf_tx_data_28_port,
      ll_perf_tx_data_27_port, ll_perf_tx_data_26_port, ll_perf_tx_data_25_port
      , ll_perf_tx_data_24_port, ll_perf_tx_data_23_port, 
      ll_perf_tx_data_22_port, ll_perf_tx_data_21_port, ll_perf_tx_data_20_port
      , ll_perf_tx_data_1_port, ll_perf_tx_data_19_port, 
      ll_perf_tx_data_18_port, ll_perf_tx_data_17_port, ll_perf_tx_data_16_port
      , ll_perf_tx_data_15_port, ll_perf_tx_data_14_port, 
      ll_perf_tx_data_13_port, ll_perf_tx_data_12_port, ll_perf_tx_data_11_port
      , ll_perf_tx_data_10_port, ll_perf_tx_data_0_port, ll_perf_rx_src_rdy_n, 
      ll_perf_rx_sof_n, ll_perf_rx_eof_n, ll_perf_rx_dst_rdy_n, 
      ll_perf_rx_data_9_port, ll_perf_rx_data_8_port, ll_perf_rx_data_7_port, 
      ll_perf_rx_data_6_port, ll_perf_rx_data_5_port, ll_perf_rx_data_4_port, 
      ll_perf_rx_data_3_port, ll_perf_rx_data_31_port, ll_perf_rx_data_30_port,
      ll_perf_rx_data_2_port, ll_perf_rx_data_29_port, ll_perf_rx_data_28_port,
      ll_perf_rx_data_27_port, ll_perf_rx_data_26_port, ll_perf_rx_data_25_port
      , ll_perf_rx_data_24_port, ll_perf_rx_data_23_port, 
      ll_perf_rx_data_22_port, ll_perf_rx_data_21_port, ll_perf_rx_data_20_port
      , ll_perf_rx_data_1_port, ll_perf_rx_data_19_port, 
      ll_perf_rx_data_18_port, ll_perf_rx_data_17_port, ll_perf_rx_data_16_port
      , ll_perf_rx_data_15_port, ll_perf_rx_data_14_port, 
      ll_perf_rx_data_13_port, ll_perf_rx_data_12_port, ll_perf_rx_data_11_port
      , ll_perf_rx_data_10_port, ll_perf_rx_data_0_port, in_mem_busy, 
      crypto_sel_1_port, crypto_sel_0_port, n1, n2, n_1274, n_1275, n_1276, 
      n_1277, n_1278 : std_logic;

begin
   
   zpu_i : zpu_core port map( clk => clk, reset_b => reset_b, enable => enable,
                           in_mem_busy => in_mem_busy, mem_read(31) => 
                           mem_read_31_port, mem_read(30) => mem_read_30_port, 
                           mem_read(29) => mem_read_29_port, mem_read(28) => 
                           mem_read_28_port, mem_read(27) => mem_read_27_port, 
                           mem_read(26) => mem_read_26_port, mem_read(25) => 
                           mem_read_25_port, mem_read(24) => mem_read_24_port, 
                           mem_read(23) => mem_read_23_port, mem_read(22) => 
                           mem_read_22_port, mem_read(21) => mem_read_21_port, 
                           mem_read(20) => mem_read_20_port, mem_read(19) => 
                           mem_read_19_port, mem_read(18) => mem_read_18_port, 
                           mem_read(17) => mem_read_17_port, mem_read(16) => 
                           mem_read_16_port, mem_read(15) => mem_read_15_port, 
                           mem_read(14) => mem_read_14_port, mem_read(13) => 
                           mem_read_13_port, mem_read(12) => mem_read_12_port, 
                           mem_read(11) => mem_read_11_port, mem_read(10) => 
                           mem_read_10_port, mem_read(9) => mem_read_9_port, 
                           mem_read(8) => mem_read_8_port, mem_read(7) => 
                           mem_read_7_port, mem_read(6) => mem_read_6_port, 
                           mem_read(5) => mem_read_5_port, mem_read(4) => 
                           mem_read_4_port, mem_read(3) => mem_read_3_port, 
                           mem_read(2) => mem_read_2_port, mem_read(1) => 
                           mem_read_1_port, mem_read(0) => mem_read_0_port, 
                           mem_write(31) => mem_write_31_port, mem_write(30) =>
                           mem_write_30_port, mem_write(29) => 
                           mem_write_29_port, mem_write(28) => 
                           mem_write_28_port, mem_write(27) => 
                           mem_write_27_port, mem_write(26) => 
                           mem_write_26_port, mem_write(25) => 
                           mem_write_25_port, mem_write(24) => 
                           mem_write_24_port, mem_write(23) => 
                           mem_write_23_port, mem_write(22) => 
                           mem_write_22_port, mem_write(21) => 
                           mem_write_21_port, mem_write(20) => 
                           mem_write_20_port, mem_write(19) => 
                           mem_write_19_port, mem_write(18) => 
                           mem_write_18_port, mem_write(17) => 
                           mem_write_17_port, mem_write(16) => 
                           mem_write_16_port, mem_write(15) => 
                           mem_write_15_port, mem_write(14) => 
                           mem_write_14_port, mem_write(13) => 
                           mem_write_13_port, mem_write(12) => 
                           mem_write_12_port, mem_write(11) => 
                           mem_write_11_port, mem_write(10) => 
                           mem_write_10_port, mem_write(9) => mem_write_9_port,
                           mem_write(8) => mem_write_8_port, mem_write(7) => 
                           mem_write_7_port, mem_write(6) => mem_write_6_port, 
                           mem_write(5) => mem_write_5_port, mem_write(4) => 
                           mem_write_4_port, mem_write(3) => mem_write_3_port, 
                           mem_write(2) => mem_write_2_port, mem_write(1) => 
                           mem_write_1_port, mem_write(0) => mem_write_0_port, 
                           out_mem_addr(31) => out_mem_addr_31_port, 
                           out_mem_addr(30) => out_mem_addr_30_port, 
                           out_mem_addr(29) => out_mem_addr_29_port, 
                           out_mem_addr(28) => out_mem_addr_28_port, 
                           out_mem_addr(27) => out_mem_addr_27_port, 
                           out_mem_addr(26) => out_mem_addr_26_port, 
                           out_mem_addr(25) => out_mem_addr_25_port, 
                           out_mem_addr(24) => out_mem_addr_24_port, 
                           out_mem_addr(23) => out_mem_addr_23_port, 
                           out_mem_addr(22) => out_mem_addr_22_port, 
                           out_mem_addr(21) => out_mem_addr_21_port, 
                           out_mem_addr(20) => out_mem_addr_20_port, 
                           out_mem_addr(19) => out_mem_addr_19_port, 
                           out_mem_addr(18) => out_mem_addr_18_port, 
                           out_mem_addr(17) => out_mem_addr_17_port, 
                           out_mem_addr(16) => out_mem_addr_16_port, 
                           out_mem_addr(15) => out_mem_addr_15_port, 
                           out_mem_addr(14) => out_mem_addr_14_port, 
                           out_mem_addr(13) => out_mem_addr_13_port, 
                           out_mem_addr(12) => out_mem_addr_12_port, 
                           out_mem_addr(11) => out_mem_addr_11_port, 
                           out_mem_addr(10) => out_mem_addr_10_port, 
                           out_mem_addr(9) => out_mem_addr_9_port, 
                           out_mem_addr(8) => out_mem_addr_8_port, 
                           out_mem_addr(7) => out_mem_addr_7_port, 
                           out_mem_addr(6) => out_mem_addr_6_port, 
                           out_mem_addr(5) => out_mem_addr_5_port, 
                           out_mem_addr(4) => out_mem_addr_4_port, 
                           out_mem_addr(3) => out_mem_addr_3_port, 
                           out_mem_addr(2) => out_mem_addr_2_port, 
                           out_mem_addr(1) => out_mem_addr_1_port, 
                           out_mem_addr(0) => out_mem_addr_0_port, 
                           out_mem_writeEnable => out_mem_writeEnable, 
                           out_mem_readEnable => in_mem_busy, mem_writeMask(3) 
                           => n_1274, mem_writeMask(2) => n_1275, 
                           mem_writeMask(1) => n_1276, mem_writeMask(0) => 
                           n_1277, interrupt => n2, break => n_1278);
   sic_i : sic_v2 port map( clk => clk, reset_b => reset_b, axi4s_tx_tdata(31) 
                           => axi4s_tx_tdata(31), axi4s_tx_tdata(30) => 
                           axi4s_tx_tdata(30), axi4s_tx_tdata(29) => 
                           axi4s_tx_tdata(29), axi4s_tx_tdata(28) => 
                           axi4s_tx_tdata(28), axi4s_tx_tdata(27) => 
                           axi4s_tx_tdata(27), axi4s_tx_tdata(26) => 
                           axi4s_tx_tdata(26), axi4s_tx_tdata(25) => 
                           axi4s_tx_tdata(25), axi4s_tx_tdata(24) => 
                           axi4s_tx_tdata(24), axi4s_tx_tdata(23) => 
                           axi4s_tx_tdata(23), axi4s_tx_tdata(22) => 
                           axi4s_tx_tdata(22), axi4s_tx_tdata(21) => 
                           axi4s_tx_tdata(21), axi4s_tx_tdata(20) => 
                           axi4s_tx_tdata(20), axi4s_tx_tdata(19) => 
                           axi4s_tx_tdata(19), axi4s_tx_tdata(18) => 
                           axi4s_tx_tdata(18), axi4s_tx_tdata(17) => 
                           axi4s_tx_tdata(17), axi4s_tx_tdata(16) => 
                           axi4s_tx_tdata(16), axi4s_tx_tdata(15) => 
                           axi4s_tx_tdata(15), axi4s_tx_tdata(14) => 
                           axi4s_tx_tdata(14), axi4s_tx_tdata(13) => 
                           axi4s_tx_tdata(13), axi4s_tx_tdata(12) => 
                           axi4s_tx_tdata(12), axi4s_tx_tdata(11) => 
                           axi4s_tx_tdata(11), axi4s_tx_tdata(10) => 
                           axi4s_tx_tdata(10), axi4s_tx_tdata(9) => 
                           axi4s_tx_tdata(9), axi4s_tx_tdata(8) => 
                           axi4s_tx_tdata(8), axi4s_tx_tdata(7) => 
                           axi4s_tx_tdata(7), axi4s_tx_tdata(6) => 
                           axi4s_tx_tdata(6), axi4s_tx_tdata(5) => 
                           axi4s_tx_tdata(5), axi4s_tx_tdata(4) => 
                           axi4s_tx_tdata(4), axi4s_tx_tdata(3) => 
                           axi4s_tx_tdata(3), axi4s_tx_tdata(2) => 
                           axi4s_tx_tdata(2), axi4s_tx_tdata(1) => 
                           axi4s_tx_tdata(1), axi4s_tx_tdata(0) => 
                           axi4s_tx_tdata(0), axi4s_tx_tstrb(3) => 
                           axi4s_tx_tstrb(3), axi4s_tx_tstrb(2) => 
                           axi4s_tx_tstrb(2), axi4s_tx_tstrb(1) => 
                           axi4s_tx_tstrb(1), axi4s_tx_tstrb(0) => 
                           axi4s_tx_tstrb(0), axi4s_tx_tkeep(3) => 
                           axi4s_tx_tkeep(3), axi4s_tx_tkeep(2) => 
                           axi4s_tx_tkeep(2), axi4s_tx_tkeep(1) => 
                           axi4s_tx_tkeep(1), axi4s_tx_tkeep(0) => 
                           axi4s_tx_tkeep(0), axi4s_tx_tvalid => 
                           axi4s_tx_tvalid, axi4s_tx_tlast => axi4s_tx_tlast, 
                           axi4s_tx_tid(2) => axi4s_tx_tid(2), axi4s_tx_tid(1) 
                           => axi4s_tx_tid(1), axi4s_tx_tid(0) => 
                           axi4s_tx_tid(0), axi4s_tx_tdest(4) => 
                           axi4s_tx_tdest(4), axi4s_tx_tdest(3) => 
                           axi4s_tx_tdest(3), axi4s_tx_tdest(2) => 
                           axi4s_tx_tdest(2), axi4s_tx_tdest(1) => 
                           axi4s_tx_tdest(1), axi4s_tx_tdest(0) => 
                           axi4s_tx_tdest(0), axi4s_tx_tuser(3) => 
                           axi4s_tx_tuser(3), axi4s_tx_tuser(2) => 
                           axi4s_tx_tuser(2), axi4s_tx_tuser(1) => 
                           axi4s_tx_tuser(1), axi4s_tx_tuser(0) => 
                           axi4s_tx_tuser(0), axi4s_tx_tready => 
                           axi4s_tx_tready, axi4s_rx_tdata(31) => 
                           axi4s_rx_tdata(31), axi4s_rx_tdata(30) => 
                           axi4s_rx_tdata(30), axi4s_rx_tdata(29) => 
                           axi4s_rx_tdata(29), axi4s_rx_tdata(28) => 
                           axi4s_rx_tdata(28), axi4s_rx_tdata(27) => 
                           axi4s_rx_tdata(27), axi4s_rx_tdata(26) => 
                           axi4s_rx_tdata(26), axi4s_rx_tdata(25) => 
                           axi4s_rx_tdata(25), axi4s_rx_tdata(24) => 
                           axi4s_rx_tdata(24), axi4s_rx_tdata(23) => 
                           axi4s_rx_tdata(23), axi4s_rx_tdata(22) => 
                           axi4s_rx_tdata(22), axi4s_rx_tdata(21) => 
                           axi4s_rx_tdata(21), axi4s_rx_tdata(20) => 
                           axi4s_rx_tdata(20), axi4s_rx_tdata(19) => 
                           axi4s_rx_tdata(19), axi4s_rx_tdata(18) => 
                           axi4s_rx_tdata(18), axi4s_rx_tdata(17) => 
                           axi4s_rx_tdata(17), axi4s_rx_tdata(16) => 
                           axi4s_rx_tdata(16), axi4s_rx_tdata(15) => 
                           axi4s_rx_tdata(15), axi4s_rx_tdata(14) => 
                           axi4s_rx_tdata(14), axi4s_rx_tdata(13) => 
                           axi4s_rx_tdata(13), axi4s_rx_tdata(12) => 
                           axi4s_rx_tdata(12), axi4s_rx_tdata(11) => 
                           axi4s_rx_tdata(11), axi4s_rx_tdata(10) => 
                           axi4s_rx_tdata(10), axi4s_rx_tdata(9) => 
                           axi4s_rx_tdata(9), axi4s_rx_tdata(8) => 
                           axi4s_rx_tdata(8), axi4s_rx_tdata(7) => 
                           axi4s_rx_tdata(7), axi4s_rx_tdata(6) => 
                           axi4s_rx_tdata(6), axi4s_rx_tdata(5) => 
                           axi4s_rx_tdata(5), axi4s_rx_tdata(4) => 
                           axi4s_rx_tdata(4), axi4s_rx_tdata(3) => 
                           axi4s_rx_tdata(3), axi4s_rx_tdata(2) => 
                           axi4s_rx_tdata(2), axi4s_rx_tdata(1) => 
                           axi4s_rx_tdata(1), axi4s_rx_tdata(0) => 
                           axi4s_rx_tdata(0), axi4s_rx_tstrb(3) => 
                           axi4s_rx_tstrb(3), axi4s_rx_tstrb(2) => 
                           axi4s_rx_tstrb(2), axi4s_rx_tstrb(1) => 
                           axi4s_rx_tstrb(1), axi4s_rx_tstrb(0) => 
                           axi4s_rx_tstrb(0), axi4s_rx_tkeep(3) => 
                           axi4s_rx_tkeep(3), axi4s_rx_tkeep(2) => 
                           axi4s_rx_tkeep(2), axi4s_rx_tkeep(1) => 
                           axi4s_rx_tkeep(1), axi4s_rx_tkeep(0) => 
                           axi4s_rx_tkeep(0), axi4s_rx_tvalid => 
                           axi4s_rx_tvalid, axi4s_rx_tlast => axi4s_rx_tlast, 
                           axi4s_rx_tid(2) => axi4s_rx_tid(2), axi4s_rx_tid(1) 
                           => axi4s_rx_tid(1), axi4s_rx_tid(0) => 
                           axi4s_rx_tid(0), axi4s_rx_tdest(4) => 
                           axi4s_rx_tdest(4), axi4s_rx_tdest(3) => 
                           axi4s_rx_tdest(3), axi4s_rx_tdest(2) => 
                           axi4s_rx_tdest(2), axi4s_rx_tdest(1) => 
                           axi4s_rx_tdest(1), axi4s_rx_tdest(0) => 
                           axi4s_rx_tdest(0), axi4s_rx_tuser(3) => 
                           axi4s_rx_tuser(3), axi4s_rx_tuser(2) => 
                           axi4s_rx_tuser(2), axi4s_rx_tuser(1) => 
                           axi4s_rx_tuser(1), axi4s_rx_tuser(0) => 
                           axi4s_rx_tuser(0), axi4s_rx_tready => 
                           axi4s_rx_tready, cpuwait => cpuwait, cpu_reset => 
                           cpu_reset, addr(31) => out_mem_addr_31_port, 
                           addr(30) => out_mem_addr_30_port, addr(29) => 
                           out_mem_addr_29_port, addr(28) => 
                           out_mem_addr_28_port, addr(27) => 
                           out_mem_addr_27_port, addr(26) => 
                           out_mem_addr_26_port, addr(25) => 
                           out_mem_addr_25_port, addr(24) => 
                           out_mem_addr_24_port, addr(23) => 
                           out_mem_addr_23_port, addr(22) => 
                           out_mem_addr_22_port, addr(21) => 
                           out_mem_addr_21_port, addr(20) => 
                           out_mem_addr_20_port, addr(19) => 
                           out_mem_addr_19_port, addr(18) => 
                           out_mem_addr_18_port, addr(17) => 
                           out_mem_addr_17_port, addr(16) => 
                           out_mem_addr_16_port, addr(15) => 
                           out_mem_addr_15_port, addr(14) => 
                           out_mem_addr_14_port, addr(13) => 
                           out_mem_addr_13_port, addr(12) => 
                           out_mem_addr_12_port, addr(11) => 
                           out_mem_addr_11_port, addr(10) => 
                           out_mem_addr_10_port, addr(9) => out_mem_addr_9_port
                           , addr(8) => out_mem_addr_8_port, addr(7) => 
                           out_mem_addr_7_port, addr(6) => out_mem_addr_6_port,
                           addr(5) => out_mem_addr_5_port, addr(4) => 
                           out_mem_addr_4_port, addr(3) => out_mem_addr_3_port,
                           addr(2) => out_mem_addr_2_port, addr(1) => 
                           out_mem_addr_1_port, addr(0) => out_mem_addr_0_port,
                           re => in_mem_busy, we => out_mem_writeEnable, 
                           din(31) => mem_write_31_port, din(30) => 
                           mem_write_30_port, din(29) => mem_write_29_port, 
                           din(28) => mem_write_28_port, din(27) => 
                           mem_write_27_port, din(26) => mem_write_26_port, 
                           din(25) => mem_write_25_port, din(24) => 
                           mem_write_24_port, din(23) => mem_write_23_port, 
                           din(22) => mem_write_22_port, din(21) => 
                           mem_write_21_port, din(20) => mem_write_20_port, 
                           din(19) => mem_write_19_port, din(18) => 
                           mem_write_18_port, din(17) => mem_write_17_port, 
                           din(16) => mem_write_16_port, din(15) => 
                           mem_write_15_port, din(14) => mem_write_14_port, 
                           din(13) => mem_write_13_port, din(12) => 
                           mem_write_12_port, din(11) => mem_write_11_port, 
                           din(10) => mem_write_10_port, din(9) => 
                           mem_write_9_port, din(8) => mem_write_8_port, din(7)
                           => mem_write_7_port, din(6) => mem_write_6_port, 
                           din(5) => mem_write_5_port, din(4) => 
                           mem_write_4_port, din(3) => mem_write_3_port, din(2)
                           => mem_write_2_port, din(1) => mem_write_1_port, 
                           din(0) => mem_write_0_port, dout(31) => 
                           mem_read_31_port, dout(30) => mem_read_30_port, 
                           dout(29) => mem_read_29_port, dout(28) => 
                           mem_read_28_port, dout(27) => mem_read_27_port, 
                           dout(26) => mem_read_26_port, dout(25) => 
                           mem_read_25_port, dout(24) => mem_read_24_port, 
                           dout(23) => mem_read_23_port, dout(22) => 
                           mem_read_22_port, dout(21) => mem_read_21_port, 
                           dout(20) => mem_read_20_port, dout(19) => 
                           mem_read_19_port, dout(18) => mem_read_18_port, 
                           dout(17) => mem_read_17_port, dout(16) => 
                           mem_read_16_port, dout(15) => mem_read_15_port, 
                           dout(14) => mem_read_14_port, dout(13) => 
                           mem_read_13_port, dout(12) => mem_read_12_port, 
                           dout(11) => mem_read_11_port, dout(10) => 
                           mem_read_10_port, dout(9) => mem_read_9_port, 
                           dout(8) => mem_read_8_port, dout(7) => 
                           mem_read_7_port, dout(6) => mem_read_6_port, dout(5)
                           => mem_read_5_port, dout(4) => mem_read_4_port, 
                           dout(3) => mem_read_3_port, dout(2) => 
                           mem_read_2_port, dout(1) => mem_read_1_port, dout(0)
                           => mem_read_0_port, crypto_sel(1) => 
                           crypto_sel_1_port, crypto_sel(0) => 
                           crypto_sel_0_port, ll_rx_data(31) => 
                           ll_rx_data_31_port, ll_rx_data(30) => 
                           ll_rx_data_30_port, ll_rx_data(29) => 
                           ll_rx_data_29_port, ll_rx_data(28) => 
                           ll_rx_data_28_port, ll_rx_data(27) => 
                           ll_rx_data_27_port, ll_rx_data(26) => 
                           ll_rx_data_26_port, ll_rx_data(25) => 
                           ll_rx_data_25_port, ll_rx_data(24) => 
                           ll_rx_data_24_port, ll_rx_data(23) => 
                           ll_rx_data_23_port, ll_rx_data(22) => 
                           ll_rx_data_22_port, ll_rx_data(21) => 
                           ll_rx_data_21_port, ll_rx_data(20) => 
                           ll_rx_data_20_port, ll_rx_data(19) => 
                           ll_rx_data_19_port, ll_rx_data(18) => 
                           ll_rx_data_18_port, ll_rx_data(17) => 
                           ll_rx_data_17_port, ll_rx_data(16) => 
                           ll_rx_data_16_port, ll_rx_data(15) => 
                           ll_rx_data_15_port, ll_rx_data(14) => 
                           ll_rx_data_14_port, ll_rx_data(13) => 
                           ll_rx_data_13_port, ll_rx_data(12) => 
                           ll_rx_data_12_port, ll_rx_data(11) => 
                           ll_rx_data_11_port, ll_rx_data(10) => 
                           ll_rx_data_10_port, ll_rx_data(9) => 
                           ll_rx_data_9_port, ll_rx_data(8) => 
                           ll_rx_data_8_port, ll_rx_data(7) => 
                           ll_rx_data_7_port, ll_rx_data(6) => 
                           ll_rx_data_6_port, ll_rx_data(5) => 
                           ll_rx_data_5_port, ll_rx_data(4) => 
                           ll_rx_data_4_port, ll_rx_data(3) => 
                           ll_rx_data_3_port, ll_rx_data(2) => 
                           ll_rx_data_2_port, ll_rx_data(1) => 
                           ll_rx_data_1_port, ll_rx_data(0) => 
                           ll_rx_data_0_port, ll_rx_sof_n => ll_rx_sof_n, 
                           ll_rx_eof_n => ll_rx_eof_n, ll_rx_src_rdy_n => 
                           ll_rx_src_rdy_n, ll_rx_dst_rdy_n => ll_rx_dst_rdy_n,
                           ll_tx_data(31) => ll_tx_data_31_port, ll_tx_data(30)
                           => ll_tx_data_30_port, ll_tx_data(29) => 
                           ll_tx_data_29_port, ll_tx_data(28) => 
                           ll_tx_data_28_port, ll_tx_data(27) => 
                           ll_tx_data_27_port, ll_tx_data(26) => 
                           ll_tx_data_26_port, ll_tx_data(25) => 
                           ll_tx_data_25_port, ll_tx_data(24) => 
                           ll_tx_data_24_port, ll_tx_data(23) => 
                           ll_tx_data_23_port, ll_tx_data(22) => 
                           ll_tx_data_22_port, ll_tx_data(21) => 
                           ll_tx_data_21_port, ll_tx_data(20) => 
                           ll_tx_data_20_port, ll_tx_data(19) => 
                           ll_tx_data_19_port, ll_tx_data(18) => 
                           ll_tx_data_18_port, ll_tx_data(17) => 
                           ll_tx_data_17_port, ll_tx_data(16) => 
                           ll_tx_data_16_port, ll_tx_data(15) => 
                           ll_tx_data_15_port, ll_tx_data(14) => 
                           ll_tx_data_14_port, ll_tx_data(13) => 
                           ll_tx_data_13_port, ll_tx_data(12) => 
                           ll_tx_data_12_port, ll_tx_data(11) => 
                           ll_tx_data_11_port, ll_tx_data(10) => 
                           ll_tx_data_10_port, ll_tx_data(9) => 
                           ll_tx_data_9_port, ll_tx_data(8) => 
                           ll_tx_data_8_port, ll_tx_data(7) => 
                           ll_tx_data_7_port, ll_tx_data(6) => 
                           ll_tx_data_6_port, ll_tx_data(5) => 
                           ll_tx_data_5_port, ll_tx_data(4) => 
                           ll_tx_data_4_port, ll_tx_data(3) => 
                           ll_tx_data_3_port, ll_tx_data(2) => 
                           ll_tx_data_2_port, ll_tx_data(1) => 
                           ll_tx_data_1_port, ll_tx_data(0) => 
                           ll_tx_data_0_port, ll_tx_sof_n => ll_tx_sof_n, 
                           ll_tx_eof_n => ll_tx_eof_n, ll_tx_src_rdy_n => 
                           ll_tx_src_rdy_n, ll_tx_dst_rdy_n => ll_tx_dst_rdy_n,
                           ll_perf_rx_data(31) => ll_perf_rx_data_31_port, 
                           ll_perf_rx_data(30) => ll_perf_rx_data_30_port, 
                           ll_perf_rx_data(29) => ll_perf_rx_data_29_port, 
                           ll_perf_rx_data(28) => ll_perf_rx_data_28_port, 
                           ll_perf_rx_data(27) => ll_perf_rx_data_27_port, 
                           ll_perf_rx_data(26) => ll_perf_rx_data_26_port, 
                           ll_perf_rx_data(25) => ll_perf_rx_data_25_port, 
                           ll_perf_rx_data(24) => ll_perf_rx_data_24_port, 
                           ll_perf_rx_data(23) => ll_perf_rx_data_23_port, 
                           ll_perf_rx_data(22) => ll_perf_rx_data_22_port, 
                           ll_perf_rx_data(21) => ll_perf_rx_data_21_port, 
                           ll_perf_rx_data(20) => ll_perf_rx_data_20_port, 
                           ll_perf_rx_data(19) => ll_perf_rx_data_19_port, 
                           ll_perf_rx_data(18) => ll_perf_rx_data_18_port, 
                           ll_perf_rx_data(17) => ll_perf_rx_data_17_port, 
                           ll_perf_rx_data(16) => ll_perf_rx_data_16_port, 
                           ll_perf_rx_data(15) => ll_perf_rx_data_15_port, 
                           ll_perf_rx_data(14) => ll_perf_rx_data_14_port, 
                           ll_perf_rx_data(13) => ll_perf_rx_data_13_port, 
                           ll_perf_rx_data(12) => ll_perf_rx_data_12_port, 
                           ll_perf_rx_data(11) => ll_perf_rx_data_11_port, 
                           ll_perf_rx_data(10) => ll_perf_rx_data_10_port, 
                           ll_perf_rx_data(9) => ll_perf_rx_data_9_port, 
                           ll_perf_rx_data(8) => ll_perf_rx_data_8_port, 
                           ll_perf_rx_data(7) => ll_perf_rx_data_7_port, 
                           ll_perf_rx_data(6) => ll_perf_rx_data_6_port, 
                           ll_perf_rx_data(5) => ll_perf_rx_data_5_port, 
                           ll_perf_rx_data(4) => ll_perf_rx_data_4_port, 
                           ll_perf_rx_data(3) => ll_perf_rx_data_3_port, 
                           ll_perf_rx_data(2) => ll_perf_rx_data_2_port, 
                           ll_perf_rx_data(1) => ll_perf_rx_data_1_port, 
                           ll_perf_rx_data(0) => ll_perf_rx_data_0_port, 
                           ll_perf_rx_sof_n => ll_perf_rx_sof_n, 
                           ll_perf_rx_eof_n => ll_perf_rx_eof_n, 
                           ll_perf_rx_src_rdy_n => ll_perf_rx_src_rdy_n, 
                           ll_perf_rx_dst_rdy_n => ll_perf_rx_dst_rdy_n, 
                           ll_perf_tx_data(31) => ll_perf_tx_data_31_port, 
                           ll_perf_tx_data(30) => ll_perf_tx_data_30_port, 
                           ll_perf_tx_data(29) => ll_perf_tx_data_29_port, 
                           ll_perf_tx_data(28) => ll_perf_tx_data_28_port, 
                           ll_perf_tx_data(27) => ll_perf_tx_data_27_port, 
                           ll_perf_tx_data(26) => ll_perf_tx_data_26_port, 
                           ll_perf_tx_data(25) => ll_perf_tx_data_25_port, 
                           ll_perf_tx_data(24) => ll_perf_tx_data_24_port, 
                           ll_perf_tx_data(23) => ll_perf_tx_data_23_port, 
                           ll_perf_tx_data(22) => ll_perf_tx_data_22_port, 
                           ll_perf_tx_data(21) => ll_perf_tx_data_21_port, 
                           ll_perf_tx_data(20) => ll_perf_tx_data_20_port, 
                           ll_perf_tx_data(19) => ll_perf_tx_data_19_port, 
                           ll_perf_tx_data(18) => ll_perf_tx_data_18_port, 
                           ll_perf_tx_data(17) => ll_perf_tx_data_17_port, 
                           ll_perf_tx_data(16) => ll_perf_tx_data_16_port, 
                           ll_perf_tx_data(15) => ll_perf_tx_data_15_port, 
                           ll_perf_tx_data(14) => ll_perf_tx_data_14_port, 
                           ll_perf_tx_data(13) => ll_perf_tx_data_13_port, 
                           ll_perf_tx_data(12) => ll_perf_tx_data_12_port, 
                           ll_perf_tx_data(11) => ll_perf_tx_data_11_port, 
                           ll_perf_tx_data(10) => ll_perf_tx_data_10_port, 
                           ll_perf_tx_data(9) => ll_perf_tx_data_9_port, 
                           ll_perf_tx_data(8) => ll_perf_tx_data_8_port, 
                           ll_perf_tx_data(7) => ll_perf_tx_data_7_port, 
                           ll_perf_tx_data(6) => ll_perf_tx_data_6_port, 
                           ll_perf_tx_data(5) => ll_perf_tx_data_5_port, 
                           ll_perf_tx_data(4) => ll_perf_tx_data_4_port, 
                           ll_perf_tx_data(3) => ll_perf_tx_data_3_port, 
                           ll_perf_tx_data(2) => ll_perf_tx_data_2_port, 
                           ll_perf_tx_data(1) => ll_perf_tx_data_1_port, 
                           ll_perf_tx_data(0) => ll_perf_tx_data_0_port, 
                           ll_perf_tx_sof_n => ll_perf_tx_sof_n, 
                           ll_perf_tx_eof_n => ll_perf_tx_eof_n, 
                           ll_perf_tx_src_rdy_n => ll_perf_tx_src_rdy_n, 
                           ll_perf_tx_dst_rdy_n => ll_perf_tx_dst_rdy_n);
   ca_i : crypto_core port map( clk => clk, reset_b => reset_b, sel(1) => 
                           crypto_sel_1_port, sel(0) => crypto_sel_0_port, 
                           ll_rx_port_data(31) => ll_rx_data_31_port, 
                           ll_rx_port_data(30) => ll_rx_data_30_port, 
                           ll_rx_port_data(29) => ll_rx_data_29_port, 
                           ll_rx_port_data(28) => ll_rx_data_28_port, 
                           ll_rx_port_data(27) => ll_rx_data_27_port, 
                           ll_rx_port_data(26) => ll_rx_data_26_port, 
                           ll_rx_port_data(25) => ll_rx_data_25_port, 
                           ll_rx_port_data(24) => ll_rx_data_24_port, 
                           ll_rx_port_data(23) => ll_rx_data_23_port, 
                           ll_rx_port_data(22) => ll_rx_data_22_port, 
                           ll_rx_port_data(21) => ll_rx_data_21_port, 
                           ll_rx_port_data(20) => ll_rx_data_20_port, 
                           ll_rx_port_data(19) => ll_rx_data_19_port, 
                           ll_rx_port_data(18) => ll_rx_data_18_port, 
                           ll_rx_port_data(17) => ll_rx_data_17_port, 
                           ll_rx_port_data(16) => ll_rx_data_16_port, 
                           ll_rx_port_data(15) => ll_rx_data_15_port, 
                           ll_rx_port_data(14) => ll_rx_data_14_port, 
                           ll_rx_port_data(13) => ll_rx_data_13_port, 
                           ll_rx_port_data(12) => ll_rx_data_12_port, 
                           ll_rx_port_data(11) => ll_rx_data_11_port, 
                           ll_rx_port_data(10) => ll_rx_data_10_port, 
                           ll_rx_port_data(9) => ll_rx_data_9_port, 
                           ll_rx_port_data(8) => ll_rx_data_8_port, 
                           ll_rx_port_data(7) => ll_rx_data_7_port, 
                           ll_rx_port_data(6) => ll_rx_data_6_port, 
                           ll_rx_port_data(5) => ll_rx_data_5_port, 
                           ll_rx_port_data(4) => ll_rx_data_4_port, 
                           ll_rx_port_data(3) => ll_rx_data_3_port, 
                           ll_rx_port_data(2) => ll_rx_data_2_port, 
                           ll_rx_port_data(1) => ll_rx_data_1_port, 
                           ll_rx_port_data(0) => ll_rx_data_0_port, 
                           ll_rx_port_sof_n => ll_rx_sof_n, ll_rx_port_eof_n =>
                           ll_rx_eof_n, ll_rx_port_src_rdy_n => ll_rx_src_rdy_n
                           , ll_rx_port_dst_rdy_n => ll_rx_dst_rdy_n, 
                           ll_tx_port_data(31) => ll_tx_data_31_port, 
                           ll_tx_port_data(30) => ll_tx_data_30_port, 
                           ll_tx_port_data(29) => ll_tx_data_29_port, 
                           ll_tx_port_data(28) => ll_tx_data_28_port, 
                           ll_tx_port_data(27) => ll_tx_data_27_port, 
                           ll_tx_port_data(26) => ll_tx_data_26_port, 
                           ll_tx_port_data(25) => ll_tx_data_25_port, 
                           ll_tx_port_data(24) => ll_tx_data_24_port, 
                           ll_tx_port_data(23) => ll_tx_data_23_port, 
                           ll_tx_port_data(22) => ll_tx_data_22_port, 
                           ll_tx_port_data(21) => ll_tx_data_21_port, 
                           ll_tx_port_data(20) => ll_tx_data_20_port, 
                           ll_tx_port_data(19) => ll_tx_data_19_port, 
                           ll_tx_port_data(18) => ll_tx_data_18_port, 
                           ll_tx_port_data(17) => ll_tx_data_17_port, 
                           ll_tx_port_data(16) => ll_tx_data_16_port, 
                           ll_tx_port_data(15) => ll_tx_data_15_port, 
                           ll_tx_port_data(14) => ll_tx_data_14_port, 
                           ll_tx_port_data(13) => ll_tx_data_13_port, 
                           ll_tx_port_data(12) => ll_tx_data_12_port, 
                           ll_tx_port_data(11) => ll_tx_data_11_port, 
                           ll_tx_port_data(10) => ll_tx_data_10_port, 
                           ll_tx_port_data(9) => ll_tx_data_9_port, 
                           ll_tx_port_data(8) => ll_tx_data_8_port, 
                           ll_tx_port_data(7) => ll_tx_data_7_port, 
                           ll_tx_port_data(6) => ll_tx_data_6_port, 
                           ll_tx_port_data(5) => ll_tx_data_5_port, 
                           ll_tx_port_data(4) => ll_tx_data_4_port, 
                           ll_tx_port_data(3) => ll_tx_data_3_port, 
                           ll_tx_port_data(2) => ll_tx_data_2_port, 
                           ll_tx_port_data(1) => ll_tx_data_1_port, 
                           ll_tx_port_data(0) => ll_tx_data_0_port, 
                           ll_tx_port_sof_n => ll_tx_sof_n, ll_tx_port_eof_n =>
                           ll_tx_eof_n, ll_tx_port_src_rdy_n => ll_tx_src_rdy_n
                           , ll_tx_port_dst_rdy_n => ll_tx_dst_rdy_n);
   performance_monitors_core_1 : performance_monitors_core port map( clk => clk
                           , reset_b => reset_b, zpu_cpuwait => cpuwait, 
                           zpu_pc(31) => out_mem_addr_31_port, zpu_pc(30) => 
                           out_mem_addr_30_port, zpu_pc(29) => 
                           out_mem_addr_29_port, zpu_pc(28) => 
                           out_mem_addr_28_port, zpu_pc(27) => 
                           out_mem_addr_27_port, zpu_pc(26) => 
                           out_mem_addr_26_port, zpu_pc(25) => 
                           out_mem_addr_25_port, zpu_pc(24) => 
                           out_mem_addr_24_port, zpu_pc(23) => 
                           out_mem_addr_23_port, zpu_pc(22) => 
                           out_mem_addr_22_port, zpu_pc(21) => 
                           out_mem_addr_21_port, zpu_pc(20) => 
                           out_mem_addr_20_port, zpu_pc(19) => 
                           out_mem_addr_19_port, zpu_pc(18) => 
                           out_mem_addr_18_port, zpu_pc(17) => 
                           out_mem_addr_17_port, zpu_pc(16) => 
                           out_mem_addr_16_port, zpu_pc(15) => 
                           out_mem_addr_15_port, zpu_pc(14) => 
                           out_mem_addr_14_port, zpu_pc(13) => 
                           out_mem_addr_13_port, zpu_pc(12) => 
                           out_mem_addr_12_port, zpu_pc(11) => 
                           out_mem_addr_11_port, zpu_pc(10) => 
                           out_mem_addr_10_port, zpu_pc(9) => 
                           out_mem_addr_9_port, zpu_pc(8) => 
                           out_mem_addr_8_port, zpu_pc(7) => 
                           out_mem_addr_7_port, zpu_pc(6) => 
                           out_mem_addr_6_port, zpu_pc(5) => 
                           out_mem_addr_5_port, zpu_pc(4) => 
                           out_mem_addr_4_port, zpu_pc(3) => 
                           out_mem_addr_3_port, zpu_pc(2) => 
                           out_mem_addr_2_port, zpu_pc(1) => 
                           out_mem_addr_1_port, zpu_pc(0) => 
                           out_mem_addr_0_port, zpu_inst(31) => 
                           mem_read_31_port, zpu_inst(30) => mem_read_30_port, 
                           zpu_inst(29) => mem_read_29_port, zpu_inst(28) => 
                           mem_read_28_port, zpu_inst(27) => mem_read_27_port, 
                           zpu_inst(26) => mem_read_26_port, zpu_inst(25) => 
                           mem_read_25_port, zpu_inst(24) => mem_read_24_port, 
                           zpu_inst(23) => mem_read_23_port, zpu_inst(22) => 
                           mem_read_22_port, zpu_inst(21) => mem_read_21_port, 
                           zpu_inst(20) => mem_read_20_port, zpu_inst(19) => 
                           mem_read_19_port, zpu_inst(18) => mem_read_18_port, 
                           zpu_inst(17) => mem_read_17_port, zpu_inst(16) => 
                           mem_read_16_port, zpu_inst(15) => mem_read_15_port, 
                           zpu_inst(14) => mem_read_14_port, zpu_inst(13) => 
                           mem_read_13_port, zpu_inst(12) => mem_read_12_port, 
                           zpu_inst(11) => mem_read_11_port, zpu_inst(10) => 
                           mem_read_10_port, zpu_inst(9) => mem_read_9_port, 
                           zpu_inst(8) => mem_read_8_port, zpu_inst(7) => 
                           mem_read_7_port, zpu_inst(6) => mem_read_6_port, 
                           zpu_inst(5) => mem_read_5_port, zpu_inst(4) => 
                           mem_read_4_port, zpu_inst(3) => mem_read_3_port, 
                           zpu_inst(2) => mem_read_2_port, zpu_inst(1) => 
                           mem_read_1_port, zpu_inst(0) => mem_read_0_port, 
                           arm_cpuwait => arm_cpuwait, ll_sic_rx_port_data(31) 
                           => ll_perf_rx_data_31_port, ll_sic_rx_port_data(30) 
                           => ll_perf_rx_data_30_port, ll_sic_rx_port_data(29) 
                           => ll_perf_rx_data_29_port, ll_sic_rx_port_data(28) 
                           => ll_perf_rx_data_28_port, ll_sic_rx_port_data(27) 
                           => ll_perf_rx_data_27_port, ll_sic_rx_port_data(26) 
                           => ll_perf_rx_data_26_port, ll_sic_rx_port_data(25) 
                           => ll_perf_rx_data_25_port, ll_sic_rx_port_data(24) 
                           => ll_perf_rx_data_24_port, ll_sic_rx_port_data(23) 
                           => ll_perf_rx_data_23_port, ll_sic_rx_port_data(22) 
                           => ll_perf_rx_data_22_port, ll_sic_rx_port_data(21) 
                           => ll_perf_rx_data_21_port, ll_sic_rx_port_data(20) 
                           => ll_perf_rx_data_20_port, ll_sic_rx_port_data(19) 
                           => ll_perf_rx_data_19_port, ll_sic_rx_port_data(18) 
                           => ll_perf_rx_data_18_port, ll_sic_rx_port_data(17) 
                           => ll_perf_rx_data_17_port, ll_sic_rx_port_data(16) 
                           => ll_perf_rx_data_16_port, ll_sic_rx_port_data(15) 
                           => ll_perf_rx_data_15_port, ll_sic_rx_port_data(14) 
                           => ll_perf_rx_data_14_port, ll_sic_rx_port_data(13) 
                           => ll_perf_rx_data_13_port, ll_sic_rx_port_data(12) 
                           => ll_perf_rx_data_12_port, ll_sic_rx_port_data(11) 
                           => ll_perf_rx_data_11_port, ll_sic_rx_port_data(10) 
                           => ll_perf_rx_data_10_port, ll_sic_rx_port_data(9) 
                           => ll_perf_rx_data_9_port, ll_sic_rx_port_data(8) =>
                           ll_perf_rx_data_8_port, ll_sic_rx_port_data(7) => 
                           ll_perf_rx_data_7_port, ll_sic_rx_port_data(6) => 
                           ll_perf_rx_data_6_port, ll_sic_rx_port_data(5) => 
                           ll_perf_rx_data_5_port, ll_sic_rx_port_data(4) => 
                           ll_perf_rx_data_4_port, ll_sic_rx_port_data(3) => 
                           ll_perf_rx_data_3_port, ll_sic_rx_port_data(2) => 
                           ll_perf_rx_data_2_port, ll_sic_rx_port_data(1) => 
                           ll_perf_rx_data_1_port, ll_sic_rx_port_data(0) => 
                           ll_perf_rx_data_0_port, ll_sic_rx_port_src_rdy_n => 
                           ll_perf_rx_src_rdy_n, ll_sic_rx_port_dst_rdy_n => 
                           ll_perf_rx_dst_rdy_n, ll_sic_rx_port_sof_n => 
                           ll_perf_rx_sof_n, ll_sic_rx_port_eof_n => 
                           ll_perf_rx_eof_n, ll_sic_tx_port_data(31) => 
                           ll_perf_tx_data_31_port, ll_sic_tx_port_data(30) => 
                           ll_perf_tx_data_30_port, ll_sic_tx_port_data(29) => 
                           ll_perf_tx_data_29_port, ll_sic_tx_port_data(28) => 
                           ll_perf_tx_data_28_port, ll_sic_tx_port_data(27) => 
                           ll_perf_tx_data_27_port, ll_sic_tx_port_data(26) => 
                           ll_perf_tx_data_26_port, ll_sic_tx_port_data(25) => 
                           ll_perf_tx_data_25_port, ll_sic_tx_port_data(24) => 
                           ll_perf_tx_data_24_port, ll_sic_tx_port_data(23) => 
                           ll_perf_tx_data_23_port, ll_sic_tx_port_data(22) => 
                           ll_perf_tx_data_22_port, ll_sic_tx_port_data(21) => 
                           ll_perf_tx_data_21_port, ll_sic_tx_port_data(20) => 
                           ll_perf_tx_data_20_port, ll_sic_tx_port_data(19) => 
                           ll_perf_tx_data_19_port, ll_sic_tx_port_data(18) => 
                           ll_perf_tx_data_18_port, ll_sic_tx_port_data(17) => 
                           ll_perf_tx_data_17_port, ll_sic_tx_port_data(16) => 
                           ll_perf_tx_data_16_port, ll_sic_tx_port_data(15) => 
                           ll_perf_tx_data_15_port, ll_sic_tx_port_data(14) => 
                           ll_perf_tx_data_14_port, ll_sic_tx_port_data(13) => 
                           ll_perf_tx_data_13_port, ll_sic_tx_port_data(12) => 
                           ll_perf_tx_data_12_port, ll_sic_tx_port_data(11) => 
                           ll_perf_tx_data_11_port, ll_sic_tx_port_data(10) => 
                           ll_perf_tx_data_10_port, ll_sic_tx_port_data(9) => 
                           ll_perf_tx_data_9_port, ll_sic_tx_port_data(8) => 
                           ll_perf_tx_data_8_port, ll_sic_tx_port_data(7) => 
                           ll_perf_tx_data_7_port, ll_sic_tx_port_data(6) => 
                           ll_perf_tx_data_6_port, ll_sic_tx_port_data(5) => 
                           ll_perf_tx_data_5_port, ll_sic_tx_port_data(4) => 
                           ll_perf_tx_data_4_port, ll_sic_tx_port_data(3) => 
                           ll_perf_tx_data_3_port, ll_sic_tx_port_data(2) => 
                           ll_perf_tx_data_2_port, ll_sic_tx_port_data(1) => 
                           ll_perf_tx_data_1_port, ll_sic_tx_port_data(0) => 
                           ll_perf_tx_data_0_port, ll_sic_tx_port_src_rdy_n => 
                           ll_perf_tx_src_rdy_n, ll_sic_tx_port_dst_rdy_n => 
                           ll_perf_tx_dst_rdy_n, ll_sic_tx_port_sof_n => 
                           ll_perf_tx_sof_n, ll_sic_tx_port_eof_n => 
                           ll_perf_tx_eof_n);
   U2 : GTECH_NOR2 port map( A => cpuwait, B => n1, Z => enable);
   U3 : GTECH_NOT port map( A => cpu_reset, Z => n1);
   n2 <= '0';

end SYN_beh;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_itag3a.all;

entity peripheral_subsystem is

   port( clk, reset_b : in std_logic;  axi4s_tx_tdata : out std_logic_vector 
         (31 downto 0);  axi4s_tx_tstrb, axi4s_tx_tkeep : out std_logic_vector 
         (3 downto 0);  axi4s_tx_tvalid, axi4s_tx_tlast : out std_logic;  
         axi4s_tx_tid : out std_logic_vector (2 downto 0);  axi4s_tx_tdest : 
         out std_logic_vector (4 downto 0);  axi4s_tx_tuser : out 
         std_logic_vector (3 downto 0);  axi4s_tx_tready : in std_logic;  
         axi4s_rx_tdata : in std_logic_vector (31 downto 0);  axi4s_rx_tstrb, 
         axi4s_rx_tkeep : in std_logic_vector (3 downto 0);  axi4s_rx_tvalid, 
         axi4s_rx_tlast : in std_logic;  axi4s_rx_tid : in std_logic_vector (2 
         downto 0);  axi4s_rx_tdest : in std_logic_vector (4 downto 0);  
         axi4s_rx_tuser : in std_logic_vector (3 downto 0);  axi4s_rx_tready : 
         out std_logic;  serial_in : in std_logic;  serial_out, baud_clk, o_irq
         , o_firq : out std_logic;  i_ethmac_int, i_test_reg_irq, 
         i_test_reg_firq : in std_logic);

end peripheral_subsystem;

architecture SYN_str of peripheral_subsystem is

   component axi4s_to_ll_bridge
      port( clk, reset_b : in std_logic;  axi4s_tx_tdata : out std_logic_vector
            (31 downto 0);  axi4s_tx_tstrb, axi4s_tx_tkeep : out 
            std_logic_vector (3 downto 0);  axi4s_tx_tvalid, axi4s_tx_tlast : 
            out std_logic;  axi4s_tx_tid : out std_logic_vector (2 downto 0);  
            axi4s_tx_tdest : out std_logic_vector (4 downto 0);  axi4s_tx_tuser
            : out std_logic_vector (3 downto 0);  axi4s_tx_tready : in 
            std_logic;  axi4s_rx_tdata : in std_logic_vector (31 downto 0);  
            axi4s_rx_tstrb, axi4s_rx_tkeep : in std_logic_vector (3 downto 0); 
            axi4s_rx_tvalid, axi4s_rx_tlast : in std_logic;  axi4s_rx_tid : in 
            std_logic_vector (2 downto 0);  axi4s_rx_tdest : in 
            std_logic_vector (4 downto 0);  axi4s_rx_tuser : in 
            std_logic_vector (3 downto 0);  axi4s_rx_tready : out std_logic;  
            ll_rx_data : out std_logic_vector (31 downto 0);  ll_rx_data_be : 
            out std_logic_vector (3 downto 0);  ll_rx_sof_n, ll_rx_eof_n, 
            ll_rx_src_rdy_n : out std_logic;  ll_rx_dst_rdy_n : in std_logic;  
            ll_tx_data : in std_logic_vector (31 downto 0);  ll_tx_data_be : in
            std_logic_vector (3 downto 0);  ll_tx_sof_n, ll_tx_eof_n, 
            ll_tx_src_rdy_n : in std_logic;  ll_tx_dst_rdy_n : out std_logic;  
            rx_dst, rx_src : out std_logic_vector (4 downto 0);  rx_len : out 
            std_logic_vector (31 downto 0);  tx_dst, tx_src : in 
            std_logic_vector (4 downto 0);  tx_len : in std_logic_vector (31 
            downto 0));
   end component;
   
   component IntCtr_core
      port( clk, reset_b : in std_logic;  base_addr : in std_logic_vector (31 
            downto 0);  o_irq, o_firq : out std_logic;  i_ethmac_int : in 
            std_logic;  i_tm_timer_int : in std_logic_vector (2 downto 0);  
            i_uart1_int, i_uart0_int, i_test_reg_irq, i_test_reg_firq : in 
            std_logic;  ll_rx_port_data : in std_logic_vector (31 downto 0);  
            ll_rx_port_data_be : in std_logic_vector (3 downto 0);  
            ll_rx_port_src_rdy_n : in std_logic;  ll_rx_port_dst_rdy_n : out 
            std_logic;  ll_rx_port_sof_n, ll_rx_port_eof_n : in std_logic;  
            rx_dst, rx_src : in std_logic_vector (4 downto 0);  rx_len : in 
            std_logic_vector (31 downto 0);  ll_tx_port_data : out 
            std_logic_vector (31 downto 0);  ll_tx_port_data_be : out 
            std_logic_vector (3 downto 0);  ll_tx_port_src_rdy_n : out 
            std_logic;  ll_tx_port_dst_rdy_n : in std_logic;  ll_tx_port_sof_n,
            ll_tx_port_eof_n : out std_logic;  tx_dst, tx_src : out 
            std_logic_vector (4 downto 0);  tx_len : out std_logic_vector (31 
            downto 0));
   end component;
   
   component uart_ll
      port( clk, reset_b : in std_logic;  base_addr, ll_rx_port_data : in 
            std_logic_vector (31 downto 0);  ll_rx_port_data_be : in 
            std_logic_vector (3 downto 0);  ll_rx_port_src_rdy_n : in std_logic
            ;  ll_rx_port_dst_rdy_n : out std_logic;  ll_rx_port_sof_n, 
            ll_rx_port_eof_n : in std_logic;  rx_dst, rx_src : in 
            std_logic_vector (4 downto 0);  rx_len : in std_logic_vector (31 
            downto 0);  ll_tx_port_data : out std_logic_vector (31 downto 0);  
            ll_tx_port_data_be : out std_logic_vector (3 downto 0);  
            ll_tx_port_src_rdy_n : out std_logic;  ll_tx_port_dst_rdy_n : in 
            std_logic;  ll_tx_port_sof_n, ll_tx_port_eof_n : out std_logic;  
            tx_dst, tx_src : out std_logic_vector (4 downto 0);  tx_len : out 
            std_logic_vector (31 downto 0);  serial_in : in std_logic;  
            serial_out, baud_clk : out std_logic);
   end component;
   
   component timer_core
      port( clk, reset_b : in std_logic;  base_addr : in std_logic_vector (31 
            downto 0);  o_timer_int : out std_logic_vector (2 downto 0);  
            ll_rx_port_data : in std_logic_vector (31 downto 0);  
            ll_rx_port_data_be : in std_logic_vector (3 downto 0);  
            ll_rx_port_src_rdy_n : in std_logic;  ll_rx_port_dst_rdy_n : out 
            std_logic;  ll_rx_port_sof_n, ll_rx_port_eof_n : in std_logic;  
            rx_dst, rx_src : in std_logic_vector (4 downto 0);  rx_len : in 
            std_logic_vector (31 downto 0);  ll_tx_port_data : out 
            std_logic_vector (31 downto 0);  ll_tx_port_data_be : out 
            std_logic_vector (3 downto 0);  ll_tx_port_src_rdy_n : out 
            std_logic;  ll_tx_port_dst_rdy_n : in std_logic;  ll_tx_port_sof_n,
            ll_tx_port_eof_n : out std_logic;  tx_dst, tx_src : out 
            std_logic_vector (4 downto 0);  tx_len : out std_logic_vector (31 
            downto 0));
   end component;
   
   signal ll_bridge_rx_port_SOF_N_port, ll_bridge_rx_port_EOF_N_port, 
      ll_timer_rx_port_DATA_31_port, ll_timer_rx_port_DATA_30_port, 
      ll_timer_rx_port_DATA_29_port, ll_timer_rx_port_DATA_28_port, 
      ll_timer_rx_port_DATA_27_port, ll_timer_rx_port_DATA_26_port, 
      ll_timer_rx_port_DATA_25_port, ll_timer_rx_port_DATA_24_port, 
      ll_timer_rx_port_DATA_23_port, ll_timer_rx_port_DATA_22_port, 
      ll_timer_rx_port_DATA_21_port, ll_timer_rx_port_DATA_20_port, 
      ll_timer_rx_port_DATA_19_port, ll_timer_rx_port_DATA_18_port, 
      ll_timer_rx_port_DATA_17_port, ll_timer_rx_port_DATA_16_port, 
      ll_timer_rx_port_DATA_15_port, ll_timer_rx_port_DATA_14_port, 
      ll_timer_rx_port_DATA_13_port, ll_timer_rx_port_DATA_12_port, 
      ll_timer_rx_port_DATA_11_port, ll_timer_rx_port_DATA_10_port, 
      ll_timer_rx_port_DATA_9_port, ll_timer_rx_port_DATA_8_port, 
      ll_timer_rx_port_DATA_7_port, ll_timer_rx_port_DATA_6_port, 
      ll_timer_rx_port_DATA_5_port, ll_timer_rx_port_DATA_4_port, 
      ll_timer_rx_port_DATA_3_port, ll_timer_rx_port_DATA_2_port, 
      ll_timer_rx_port_DATA_1_port, ll_timer_rx_port_DATA_0_port, 
      ll_timer_rx_port_DATA_BE_3_port, ll_timer_rx_port_DATA_BE_2_port, 
      ll_timer_rx_port_DATA_BE_1_port, ll_timer_rx_port_DATA_BE_0_port, 
      ll_timer_rx_port_SRC_RDY_N_port, ll_timer_rx_port_DST_RDY_N_port, 
      ll_bridge_tx_port_DATA_31_port, ll_bridge_tx_port_DATA_30_port, 
      ll_bridge_tx_port_DATA_29_port, ll_bridge_tx_port_DATA_28_port, 
      ll_bridge_tx_port_DATA_27_port, ll_bridge_tx_port_DATA_26_port, 
      ll_bridge_tx_port_DATA_25_port, ll_bridge_tx_port_DATA_24_port, 
      ll_bridge_tx_port_DATA_23_port, ll_bridge_tx_port_DATA_22_port, 
      ll_bridge_tx_port_DATA_21_port, ll_bridge_tx_port_DATA_20_port, 
      ll_bridge_tx_port_DATA_19_port, ll_bridge_tx_port_DATA_18_port, 
      ll_bridge_tx_port_DATA_17_port, ll_bridge_tx_port_DATA_16_port, 
      ll_bridge_tx_port_DATA_15_port, ll_bridge_tx_port_DATA_14_port, 
      ll_bridge_tx_port_DATA_13_port, ll_bridge_tx_port_DATA_12_port, 
      ll_bridge_tx_port_DATA_11_port, ll_bridge_tx_port_DATA_10_port, 
      ll_bridge_tx_port_DATA_9_port, ll_bridge_tx_port_DATA_8_port, 
      ll_bridge_tx_port_DATA_7_port, ll_bridge_tx_port_DATA_6_port, 
      ll_bridge_tx_port_DATA_5_port, ll_bridge_tx_port_DATA_4_port, 
      ll_bridge_tx_port_DATA_3_port, ll_bridge_tx_port_DATA_2_port, 
      ll_bridge_tx_port_DATA_1_port, ll_bridge_tx_port_DATA_0_port, 
      ll_bridge_tx_port_DATA_BE_3_port, ll_bridge_tx_port_DATA_BE_2_port, 
      ll_bridge_tx_port_DATA_BE_1_port, ll_bridge_tx_port_DATA_BE_0_port, 
      ll_bridge_tx_port_SRC_RDY_N_port, ll_bridge_tx_port_DST_RDY_N_port, 
      ll_bridge_tx_port_SOF_N_port, ll_bridge_tx_port_EOF_N_port, 
      dsl_timer_rx_port_DST_4_port, dsl_timer_rx_port_DST_3_port, 
      dsl_timer_rx_port_DST_2_port, dsl_timer_rx_port_DST_1_port, 
      dsl_timer_rx_port_DST_0_port, dsl_timer_rx_port_SRC_4_port, 
      dsl_timer_rx_port_SRC_3_port, dsl_timer_rx_port_SRC_2_port, 
      dsl_timer_rx_port_SRC_1_port, dsl_timer_rx_port_SRC_0_port, 
      dsl_timer_rx_port_LEN_31_port, dsl_timer_rx_port_LEN_30_port, 
      dsl_timer_rx_port_LEN_29_port, dsl_timer_rx_port_LEN_28_port, 
      dsl_timer_rx_port_LEN_27_port, dsl_timer_rx_port_LEN_26_port, 
      dsl_timer_rx_port_LEN_25_port, dsl_timer_rx_port_LEN_24_port, 
      dsl_timer_rx_port_LEN_23_port, dsl_timer_rx_port_LEN_22_port, 
      dsl_timer_rx_port_LEN_21_port, dsl_timer_rx_port_LEN_20_port, 
      dsl_timer_rx_port_LEN_19_port, dsl_timer_rx_port_LEN_18_port, 
      dsl_timer_rx_port_LEN_17_port, dsl_timer_rx_port_LEN_16_port, 
      dsl_timer_rx_port_LEN_15_port, dsl_timer_rx_port_LEN_14_port, 
      dsl_timer_rx_port_LEN_13_port, dsl_timer_rx_port_LEN_12_port, 
      dsl_timer_rx_port_LEN_11_port, dsl_timer_rx_port_LEN_10_port, 
      dsl_timer_rx_port_LEN_9_port, dsl_timer_rx_port_LEN_8_port, 
      dsl_timer_rx_port_LEN_7_port, dsl_timer_rx_port_LEN_6_port, 
      dsl_timer_rx_port_LEN_5_port, dsl_timer_rx_port_LEN_4_port, 
      dsl_timer_rx_port_LEN_3_port, dsl_timer_rx_port_LEN_2_port, 
      dsl_timer_rx_port_LEN_1_port, dsl_timer_rx_port_LEN_0_port, 
      dsl_bridge_tx_port_DST_4_port, dsl_bridge_tx_port_DST_3_port, 
      dsl_bridge_tx_port_DST_2_port, dsl_bridge_tx_port_DST_1_port, 
      dsl_bridge_tx_port_DST_0_port, dsl_bridge_tx_port_SRC_4_port, 
      dsl_bridge_tx_port_SRC_3_port, dsl_bridge_tx_port_SRC_2_port, 
      dsl_bridge_tx_port_SRC_1_port, dsl_bridge_tx_port_SRC_0_port, 
      dsl_bridge_tx_port_LEN_31_port, dsl_bridge_tx_port_LEN_30_port, 
      dsl_bridge_tx_port_LEN_29_port, dsl_bridge_tx_port_LEN_28_port, 
      dsl_bridge_tx_port_LEN_27_port, dsl_bridge_tx_port_LEN_26_port, 
      dsl_bridge_tx_port_LEN_25_port, dsl_bridge_tx_port_LEN_24_port, 
      dsl_bridge_tx_port_LEN_23_port, dsl_bridge_tx_port_LEN_22_port, 
      dsl_bridge_tx_port_LEN_21_port, dsl_bridge_tx_port_LEN_20_port, 
      dsl_bridge_tx_port_LEN_19_port, dsl_bridge_tx_port_LEN_18_port, 
      dsl_bridge_tx_port_LEN_17_port, dsl_bridge_tx_port_LEN_16_port, 
      dsl_bridge_tx_port_LEN_15_port, dsl_bridge_tx_port_LEN_14_port, 
      dsl_bridge_tx_port_LEN_13_port, dsl_bridge_tx_port_LEN_12_port, 
      dsl_bridge_tx_port_LEN_11_port, dsl_bridge_tx_port_LEN_10_port, 
      dsl_bridge_tx_port_LEN_9_port, dsl_bridge_tx_port_LEN_8_port, 
      dsl_bridge_tx_port_LEN_7_port, dsl_bridge_tx_port_LEN_6_port, 
      dsl_bridge_tx_port_LEN_5_port, dsl_bridge_tx_port_LEN_4_port, 
      dsl_bridge_tx_port_LEN_3_port, dsl_bridge_tx_port_LEN_2_port, 
      dsl_bridge_tx_port_LEN_1_port, dsl_bridge_tx_port_LEN_0_port, 
      timer_int_2_port, timer_int_1_port, timer_int_0_port, 
      ll_uart_rx_port_SRC_RDY_N_port, ll_uart_rx_port_DST_RDY_N_port, 
      ll_uart_rx_port_DATA_BE_3_port, ll_uart_rx_port_DATA_BE_2_port, 
      ll_uart_rx_port_DATA_BE_1_port, ll_uart_rx_port_DATA_BE_0_port, 
      ll_uart_rx_port_DATA_9_port, ll_uart_rx_port_DATA_8_port, 
      ll_uart_rx_port_DATA_7_port, ll_uart_rx_port_DATA_6_port, 
      ll_uart_rx_port_DATA_5_port, ll_uart_rx_port_DATA_4_port, 
      ll_uart_rx_port_DATA_3_port, ll_uart_rx_port_DATA_31_port, 
      ll_uart_rx_port_DATA_30_port, ll_uart_rx_port_DATA_2_port, 
      ll_uart_rx_port_DATA_29_port, ll_uart_rx_port_DATA_28_port, 
      ll_uart_rx_port_DATA_27_port, ll_uart_rx_port_DATA_26_port, 
      ll_uart_rx_port_DATA_25_port, ll_uart_rx_port_DATA_24_port, 
      ll_uart_rx_port_DATA_23_port, ll_uart_rx_port_DATA_22_port, 
      ll_uart_rx_port_DATA_21_port, ll_uart_rx_port_DATA_20_port, 
      ll_uart_rx_port_DATA_1_port, ll_uart_rx_port_DATA_19_port, 
      ll_uart_rx_port_DATA_18_port, ll_uart_rx_port_DATA_17_port, 
      ll_uart_rx_port_DATA_16_port, ll_uart_rx_port_DATA_15_port, 
      ll_uart_rx_port_DATA_14_port, ll_uart_rx_port_DATA_13_port, 
      ll_uart_rx_port_DATA_12_port, ll_uart_rx_port_DATA_11_port, 
      ll_uart_rx_port_DATA_10_port, ll_uart_rx_port_DATA_0_port, 
      ll_timer_tx_port_SOF_N_port, ll_timer_tx_port_EOF_N_port, 
      ll_intctr_tx_port_SOF_N_port, ll_intctr_tx_port_EOF_N_port, 
      ll_intctr_rx_port_SRC_RDY_N_port, ll_intctr_rx_port_DST_RDY_N_port, 
      ll_intctr_rx_port_DATA_BE_3_port, ll_intctr_rx_port_DATA_BE_2_port, 
      ll_intctr_rx_port_DATA_BE_1_port, ll_intctr_rx_port_DATA_BE_0_port, 
      ll_intctr_rx_port_DATA_9_port, ll_intctr_rx_port_DATA_8_port, 
      ll_intctr_rx_port_DATA_7_port, ll_intctr_rx_port_DATA_6_port, 
      ll_intctr_rx_port_DATA_5_port, ll_intctr_rx_port_DATA_4_port, 
      ll_intctr_rx_port_DATA_3_port, ll_intctr_rx_port_DATA_31_port, 
      ll_intctr_rx_port_DATA_30_port, ll_intctr_rx_port_DATA_2_port, 
      ll_intctr_rx_port_DATA_29_port, ll_intctr_rx_port_DATA_28_port, 
      ll_intctr_rx_port_DATA_27_port, ll_intctr_rx_port_DATA_26_port, 
      ll_intctr_rx_port_DATA_25_port, ll_intctr_rx_port_DATA_24_port, 
      ll_intctr_rx_port_DATA_23_port, ll_intctr_rx_port_DATA_22_port, 
      ll_intctr_rx_port_DATA_21_port, ll_intctr_rx_port_DATA_20_port, 
      ll_intctr_rx_port_DATA_1_port, ll_intctr_rx_port_DATA_19_port, 
      ll_intctr_rx_port_DATA_18_port, ll_intctr_rx_port_DATA_17_port, 
      ll_intctr_rx_port_DATA_16_port, ll_intctr_rx_port_DATA_15_port, 
      ll_intctr_rx_port_DATA_14_port, ll_intctr_rx_port_DATA_13_port, 
      ll_intctr_rx_port_DATA_12_port, ll_intctr_rx_port_DATA_11_port, 
      ll_intctr_rx_port_DATA_10_port, ll_intctr_rx_port_DATA_0_port, 
      dsl_uart_rx_port_SRC_4_port, dsl_uart_rx_port_SRC_3_port, 
      dsl_uart_rx_port_SRC_2_port, dsl_uart_rx_port_SRC_1_port, 
      dsl_uart_rx_port_SRC_0_port, dsl_uart_rx_port_LEN_9_port, 
      dsl_uart_rx_port_LEN_8_port, dsl_uart_rx_port_LEN_7_port, 
      dsl_uart_rx_port_LEN_6_port, dsl_uart_rx_port_LEN_5_port, 
      dsl_uart_rx_port_LEN_4_port, dsl_uart_rx_port_LEN_3_port, 
      dsl_uart_rx_port_LEN_31_port, dsl_uart_rx_port_LEN_30_port, 
      dsl_uart_rx_port_LEN_2_port, dsl_uart_rx_port_LEN_29_port, 
      dsl_uart_rx_port_LEN_28_port, dsl_uart_rx_port_LEN_27_port, 
      dsl_uart_rx_port_LEN_26_port, dsl_uart_rx_port_LEN_25_port, 
      dsl_uart_rx_port_LEN_24_port, dsl_uart_rx_port_LEN_23_port, 
      dsl_uart_rx_port_LEN_22_port, dsl_uart_rx_port_LEN_21_port, 
      dsl_uart_rx_port_LEN_20_port, dsl_uart_rx_port_LEN_1_port, 
      dsl_uart_rx_port_LEN_19_port, dsl_uart_rx_port_LEN_18_port, 
      dsl_uart_rx_port_LEN_17_port, dsl_uart_rx_port_LEN_16_port, 
      dsl_uart_rx_port_LEN_15_port, dsl_uart_rx_port_LEN_14_port, 
      dsl_uart_rx_port_LEN_13_port, dsl_uart_rx_port_LEN_12_port, 
      dsl_uart_rx_port_LEN_11_port, dsl_uart_rx_port_LEN_10_port, 
      dsl_uart_rx_port_LEN_0_port, dsl_uart_rx_port_DST_4_port, 
      dsl_uart_rx_port_DST_3_port, dsl_uart_rx_port_DST_2_port, 
      dsl_uart_rx_port_DST_1_port, dsl_uart_rx_port_DST_0_port, 
      dsl_intctr_rx_port_SRC_4_port, dsl_intctr_rx_port_SRC_3_port, 
      dsl_intctr_rx_port_SRC_2_port, dsl_intctr_rx_port_SRC_1_port, 
      dsl_intctr_rx_port_SRC_0_port, dsl_intctr_rx_port_LEN_9_port, 
      dsl_intctr_rx_port_LEN_8_port, dsl_intctr_rx_port_LEN_7_port, 
      dsl_intctr_rx_port_LEN_6_port, dsl_intctr_rx_port_LEN_5_port, 
      dsl_intctr_rx_port_LEN_4_port, dsl_intctr_rx_port_LEN_3_port, 
      dsl_intctr_rx_port_LEN_31_port, dsl_intctr_rx_port_LEN_30_port, 
      dsl_intctr_rx_port_LEN_2_port, dsl_intctr_rx_port_LEN_29_port, 
      dsl_intctr_rx_port_LEN_28_port, dsl_intctr_rx_port_LEN_27_port, 
      dsl_intctr_rx_port_LEN_26_port, dsl_intctr_rx_port_LEN_25_port, 
      dsl_intctr_rx_port_LEN_24_port, dsl_intctr_rx_port_LEN_23_port, 
      dsl_intctr_rx_port_LEN_22_port, dsl_intctr_rx_port_LEN_21_port, 
      dsl_intctr_rx_port_LEN_20_port, dsl_intctr_rx_port_LEN_1_port, 
      dsl_intctr_rx_port_LEN_19_port, dsl_intctr_rx_port_LEN_18_port, 
      dsl_intctr_rx_port_LEN_17_port, dsl_intctr_rx_port_LEN_16_port, 
      dsl_intctr_rx_port_LEN_15_port, dsl_intctr_rx_port_LEN_14_port, 
      dsl_intctr_rx_port_LEN_13_port, dsl_intctr_rx_port_LEN_12_port, 
      dsl_intctr_rx_port_LEN_11_port, dsl_intctr_rx_port_LEN_10_port, 
      dsl_intctr_rx_port_LEN_0_port, dsl_intctr_rx_port_DST_4_port, 
      dsl_intctr_rx_port_DST_3_port, dsl_intctr_rx_port_DST_2_port, 
      dsl_intctr_rx_port_DST_1_port, dsl_intctr_rx_port_DST_0_port, n1, n2, 
      n_1279, n_1280, n_1281, n_1282, n_1283, n_1284, n_1285 : std_logic;

begin
   
   U_timer_core : timer_core port map( clk => clk, reset_b => reset_b, 
                           base_addr(31) => n1, base_addr(30) => n1, 
                           base_addr(29) => n2, base_addr(28) => n1, 
                           base_addr(27) => n1, base_addr(26) => n1, 
                           base_addr(25) => n1, base_addr(24) => n1, 
                           base_addr(23) => n1, base_addr(22) => n1, 
                           base_addr(21) => n1, base_addr(20) => n1, 
                           base_addr(19) => n1, base_addr(18) => n1, 
                           base_addr(17) => n1, base_addr(16) => n1, 
                           base_addr(15) => n1, base_addr(14) => n1, 
                           base_addr(13) => n1, base_addr(12) => n1, 
                           base_addr(11) => n1, base_addr(10) => n1, 
                           base_addr(9) => n1, base_addr(8) => n1, base_addr(7)
                           => n1, base_addr(6) => n1, base_addr(5) => n1, 
                           base_addr(4) => n1, base_addr(3) => n1, base_addr(2)
                           => n1, base_addr(1) => n1, base_addr(0) => n1, 
                           o_timer_int(2) => timer_int_2_port, o_timer_int(1) 
                           => timer_int_1_port, o_timer_int(0) => 
                           timer_int_0_port, ll_rx_port_data(31) => 
                           ll_timer_rx_port_DATA_31_port, ll_rx_port_data(30) 
                           => ll_timer_rx_port_DATA_30_port, 
                           ll_rx_port_data(29) => ll_timer_rx_port_DATA_29_port
                           , ll_rx_port_data(28) => 
                           ll_timer_rx_port_DATA_28_port, ll_rx_port_data(27) 
                           => ll_timer_rx_port_DATA_27_port, 
                           ll_rx_port_data(26) => ll_timer_rx_port_DATA_26_port
                           , ll_rx_port_data(25) => 
                           ll_timer_rx_port_DATA_25_port, ll_rx_port_data(24) 
                           => ll_timer_rx_port_DATA_24_port, 
                           ll_rx_port_data(23) => ll_timer_rx_port_DATA_23_port
                           , ll_rx_port_data(22) => 
                           ll_timer_rx_port_DATA_22_port, ll_rx_port_data(21) 
                           => ll_timer_rx_port_DATA_21_port, 
                           ll_rx_port_data(20) => ll_timer_rx_port_DATA_20_port
                           , ll_rx_port_data(19) => 
                           ll_timer_rx_port_DATA_19_port, ll_rx_port_data(18) 
                           => ll_timer_rx_port_DATA_18_port, 
                           ll_rx_port_data(17) => ll_timer_rx_port_DATA_17_port
                           , ll_rx_port_data(16) => 
                           ll_timer_rx_port_DATA_16_port, ll_rx_port_data(15) 
                           => ll_timer_rx_port_DATA_15_port, 
                           ll_rx_port_data(14) => ll_timer_rx_port_DATA_14_port
                           , ll_rx_port_data(13) => 
                           ll_timer_rx_port_DATA_13_port, ll_rx_port_data(12) 
                           => ll_timer_rx_port_DATA_12_port, 
                           ll_rx_port_data(11) => ll_timer_rx_port_DATA_11_port
                           , ll_rx_port_data(10) => 
                           ll_timer_rx_port_DATA_10_port, ll_rx_port_data(9) =>
                           ll_timer_rx_port_DATA_9_port, ll_rx_port_data(8) => 
                           ll_timer_rx_port_DATA_8_port, ll_rx_port_data(7) => 
                           ll_timer_rx_port_DATA_7_port, ll_rx_port_data(6) => 
                           ll_timer_rx_port_DATA_6_port, ll_rx_port_data(5) => 
                           ll_timer_rx_port_DATA_5_port, ll_rx_port_data(4) => 
                           ll_timer_rx_port_DATA_4_port, ll_rx_port_data(3) => 
                           ll_timer_rx_port_DATA_3_port, ll_rx_port_data(2) => 
                           ll_timer_rx_port_DATA_2_port, ll_rx_port_data(1) => 
                           ll_timer_rx_port_DATA_1_port, ll_rx_port_data(0) => 
                           ll_timer_rx_port_DATA_0_port, ll_rx_port_data_be(3) 
                           => ll_timer_rx_port_DATA_BE_3_port, 
                           ll_rx_port_data_be(2) => 
                           ll_timer_rx_port_DATA_BE_2_port, 
                           ll_rx_port_data_be(1) => 
                           ll_timer_rx_port_DATA_BE_1_port, 
                           ll_rx_port_data_be(0) => 
                           ll_timer_rx_port_DATA_BE_0_port, 
                           ll_rx_port_src_rdy_n => 
                           ll_timer_rx_port_SRC_RDY_N_port, 
                           ll_rx_port_dst_rdy_n => 
                           ll_timer_rx_port_DST_RDY_N_port, ll_rx_port_sof_n =>
                           ll_bridge_rx_port_SOF_N_port, ll_rx_port_eof_n => 
                           ll_bridge_rx_port_EOF_N_port, rx_dst(4) => 
                           dsl_timer_rx_port_DST_4_port, rx_dst(3) => 
                           dsl_timer_rx_port_DST_3_port, rx_dst(2) => 
                           dsl_timer_rx_port_DST_2_port, rx_dst(1) => 
                           dsl_timer_rx_port_DST_1_port, rx_dst(0) => 
                           dsl_timer_rx_port_DST_0_port, rx_src(4) => 
                           dsl_timer_rx_port_SRC_4_port, rx_src(3) => 
                           dsl_timer_rx_port_SRC_3_port, rx_src(2) => 
                           dsl_timer_rx_port_SRC_2_port, rx_src(1) => 
                           dsl_timer_rx_port_SRC_1_port, rx_src(0) => 
                           dsl_timer_rx_port_SRC_0_port, rx_len(31) => 
                           dsl_timer_rx_port_LEN_31_port, rx_len(30) => 
                           dsl_timer_rx_port_LEN_30_port, rx_len(29) => 
                           dsl_timer_rx_port_LEN_29_port, rx_len(28) => 
                           dsl_timer_rx_port_LEN_28_port, rx_len(27) => 
                           dsl_timer_rx_port_LEN_27_port, rx_len(26) => 
                           dsl_timer_rx_port_LEN_26_port, rx_len(25) => 
                           dsl_timer_rx_port_LEN_25_port, rx_len(24) => 
                           dsl_timer_rx_port_LEN_24_port, rx_len(23) => 
                           dsl_timer_rx_port_LEN_23_port, rx_len(22) => 
                           dsl_timer_rx_port_LEN_22_port, rx_len(21) => 
                           dsl_timer_rx_port_LEN_21_port, rx_len(20) => 
                           dsl_timer_rx_port_LEN_20_port, rx_len(19) => 
                           dsl_timer_rx_port_LEN_19_port, rx_len(18) => 
                           dsl_timer_rx_port_LEN_18_port, rx_len(17) => 
                           dsl_timer_rx_port_LEN_17_port, rx_len(16) => 
                           dsl_timer_rx_port_LEN_16_port, rx_len(15) => 
                           dsl_timer_rx_port_LEN_15_port, rx_len(14) => 
                           dsl_timer_rx_port_LEN_14_port, rx_len(13) => 
                           dsl_timer_rx_port_LEN_13_port, rx_len(12) => 
                           dsl_timer_rx_port_LEN_12_port, rx_len(11) => 
                           dsl_timer_rx_port_LEN_11_port, rx_len(10) => 
                           dsl_timer_rx_port_LEN_10_port, rx_len(9) => 
                           dsl_timer_rx_port_LEN_9_port, rx_len(8) => 
                           dsl_timer_rx_port_LEN_8_port, rx_len(7) => 
                           dsl_timer_rx_port_LEN_7_port, rx_len(6) => 
                           dsl_timer_rx_port_LEN_6_port, rx_len(5) => 
                           dsl_timer_rx_port_LEN_5_port, rx_len(4) => 
                           dsl_timer_rx_port_LEN_4_port, rx_len(3) => 
                           dsl_timer_rx_port_LEN_3_port, rx_len(2) => 
                           dsl_timer_rx_port_LEN_2_port, rx_len(1) => 
                           dsl_timer_rx_port_LEN_1_port, rx_len(0) => 
                           dsl_timer_rx_port_LEN_0_port, ll_tx_port_data(31) =>
                           ll_intctr_rx_port_DATA_31_port, ll_tx_port_data(30) 
                           => ll_intctr_rx_port_DATA_30_port, 
                           ll_tx_port_data(29) => 
                           ll_intctr_rx_port_DATA_29_port, ll_tx_port_data(28) 
                           => ll_intctr_rx_port_DATA_28_port, 
                           ll_tx_port_data(27) => 
                           ll_intctr_rx_port_DATA_27_port, ll_tx_port_data(26) 
                           => ll_intctr_rx_port_DATA_26_port, 
                           ll_tx_port_data(25) => 
                           ll_intctr_rx_port_DATA_25_port, ll_tx_port_data(24) 
                           => ll_intctr_rx_port_DATA_24_port, 
                           ll_tx_port_data(23) => 
                           ll_intctr_rx_port_DATA_23_port, ll_tx_port_data(22) 
                           => ll_intctr_rx_port_DATA_22_port, 
                           ll_tx_port_data(21) => 
                           ll_intctr_rx_port_DATA_21_port, ll_tx_port_data(20) 
                           => ll_intctr_rx_port_DATA_20_port, 
                           ll_tx_port_data(19) => 
                           ll_intctr_rx_port_DATA_19_port, ll_tx_port_data(18) 
                           => ll_intctr_rx_port_DATA_18_port, 
                           ll_tx_port_data(17) => 
                           ll_intctr_rx_port_DATA_17_port, ll_tx_port_data(16) 
                           => ll_intctr_rx_port_DATA_16_port, 
                           ll_tx_port_data(15) => 
                           ll_intctr_rx_port_DATA_15_port, ll_tx_port_data(14) 
                           => ll_intctr_rx_port_DATA_14_port, 
                           ll_tx_port_data(13) => 
                           ll_intctr_rx_port_DATA_13_port, ll_tx_port_data(12) 
                           => ll_intctr_rx_port_DATA_12_port, 
                           ll_tx_port_data(11) => 
                           ll_intctr_rx_port_DATA_11_port, ll_tx_port_data(10) 
                           => ll_intctr_rx_port_DATA_10_port, 
                           ll_tx_port_data(9) => ll_intctr_rx_port_DATA_9_port,
                           ll_tx_port_data(8) => ll_intctr_rx_port_DATA_8_port,
                           ll_tx_port_data(7) => ll_intctr_rx_port_DATA_7_port,
                           ll_tx_port_data(6) => ll_intctr_rx_port_DATA_6_port,
                           ll_tx_port_data(5) => ll_intctr_rx_port_DATA_5_port,
                           ll_tx_port_data(4) => ll_intctr_rx_port_DATA_4_port,
                           ll_tx_port_data(3) => ll_intctr_rx_port_DATA_3_port,
                           ll_tx_port_data(2) => ll_intctr_rx_port_DATA_2_port,
                           ll_tx_port_data(1) => ll_intctr_rx_port_DATA_1_port,
                           ll_tx_port_data(0) => ll_intctr_rx_port_DATA_0_port,
                           ll_tx_port_data_be(3) => 
                           ll_intctr_rx_port_DATA_BE_3_port, 
                           ll_tx_port_data_be(2) => 
                           ll_intctr_rx_port_DATA_BE_2_port, 
                           ll_tx_port_data_be(1) => 
                           ll_intctr_rx_port_DATA_BE_1_port, 
                           ll_tx_port_data_be(0) => 
                           ll_intctr_rx_port_DATA_BE_0_port, 
                           ll_tx_port_src_rdy_n => 
                           ll_intctr_rx_port_SRC_RDY_N_port, 
                           ll_tx_port_dst_rdy_n => 
                           ll_intctr_rx_port_DST_RDY_N_port, ll_tx_port_sof_n 
                           => ll_timer_tx_port_SOF_N_port, ll_tx_port_eof_n => 
                           ll_timer_tx_port_EOF_N_port, tx_dst(4) => 
                           dsl_intctr_rx_port_DST_4_port, tx_dst(3) => 
                           dsl_intctr_rx_port_DST_3_port, tx_dst(2) => 
                           dsl_intctr_rx_port_DST_2_port, tx_dst(1) => 
                           dsl_intctr_rx_port_DST_1_port, tx_dst(0) => 
                           dsl_intctr_rx_port_DST_0_port, tx_src(4) => 
                           dsl_intctr_rx_port_SRC_4_port, tx_src(3) => 
                           dsl_intctr_rx_port_SRC_3_port, tx_src(2) => 
                           dsl_intctr_rx_port_SRC_2_port, tx_src(1) => 
                           dsl_intctr_rx_port_SRC_1_port, tx_src(0) => 
                           dsl_intctr_rx_port_SRC_0_port, tx_len(31) => 
                           dsl_intctr_rx_port_LEN_31_port, tx_len(30) => 
                           dsl_intctr_rx_port_LEN_30_port, tx_len(29) => 
                           dsl_intctr_rx_port_LEN_29_port, tx_len(28) => 
                           dsl_intctr_rx_port_LEN_28_port, tx_len(27) => 
                           dsl_intctr_rx_port_LEN_27_port, tx_len(26) => 
                           dsl_intctr_rx_port_LEN_26_port, tx_len(25) => 
                           dsl_intctr_rx_port_LEN_25_port, tx_len(24) => 
                           dsl_intctr_rx_port_LEN_24_port, tx_len(23) => 
                           dsl_intctr_rx_port_LEN_23_port, tx_len(22) => 
                           dsl_intctr_rx_port_LEN_22_port, tx_len(21) => 
                           dsl_intctr_rx_port_LEN_21_port, tx_len(20) => 
                           dsl_intctr_rx_port_LEN_20_port, tx_len(19) => 
                           dsl_intctr_rx_port_LEN_19_port, tx_len(18) => 
                           dsl_intctr_rx_port_LEN_18_port, tx_len(17) => 
                           dsl_intctr_rx_port_LEN_17_port, tx_len(16) => 
                           dsl_intctr_rx_port_LEN_16_port, tx_len(15) => 
                           dsl_intctr_rx_port_LEN_15_port, tx_len(14) => 
                           dsl_intctr_rx_port_LEN_14_port, tx_len(13) => 
                           dsl_intctr_rx_port_LEN_13_port, tx_len(12) => 
                           dsl_intctr_rx_port_LEN_12_port, tx_len(11) => 
                           dsl_intctr_rx_port_LEN_11_port, tx_len(10) => 
                           dsl_intctr_rx_port_LEN_10_port, tx_len(9) => 
                           dsl_intctr_rx_port_LEN_9_port, tx_len(8) => 
                           dsl_intctr_rx_port_LEN_8_port, tx_len(7) => 
                           dsl_intctr_rx_port_LEN_7_port, tx_len(6) => 
                           dsl_intctr_rx_port_LEN_6_port, tx_len(5) => 
                           dsl_intctr_rx_port_LEN_5_port, tx_len(4) => 
                           dsl_intctr_rx_port_LEN_4_port, tx_len(3) => 
                           dsl_intctr_rx_port_LEN_3_port, tx_len(2) => 
                           dsl_intctr_rx_port_LEN_2_port, tx_len(1) => 
                           dsl_intctr_rx_port_LEN_1_port, tx_len(0) => 
                           dsl_intctr_rx_port_LEN_0_port);
   uart_1 : uart_ll port map( clk => clk, reset_b => reset_b, base_addr(31) => 
                           n1, base_addr(30) => n1, base_addr(29) => n2, 
                           base_addr(28) => n1, base_addr(27) => n1, 
                           base_addr(26) => n1, base_addr(25) => n2, 
                           base_addr(24) => n1, base_addr(23) => n1, 
                           base_addr(22) => n1, base_addr(21) => n1, 
                           base_addr(20) => n1, base_addr(19) => n1, 
                           base_addr(18) => n1, base_addr(17) => n1, 
                           base_addr(16) => n1, base_addr(15) => n1, 
                           base_addr(14) => n1, base_addr(13) => n1, 
                           base_addr(12) => n1, base_addr(11) => n1, 
                           base_addr(10) => n1, base_addr(9) => n1, 
                           base_addr(8) => n1, base_addr(7) => n1, base_addr(6)
                           => n1, base_addr(5) => n1, base_addr(4) => n1, 
                           base_addr(3) => n1, base_addr(2) => n1, base_addr(1)
                           => n1, base_addr(0) => n1, ll_rx_port_data(31) => 
                           ll_uart_rx_port_DATA_31_port, ll_rx_port_data(30) =>
                           ll_uart_rx_port_DATA_30_port, ll_rx_port_data(29) =>
                           ll_uart_rx_port_DATA_29_port, ll_rx_port_data(28) =>
                           ll_uart_rx_port_DATA_28_port, ll_rx_port_data(27) =>
                           ll_uart_rx_port_DATA_27_port, ll_rx_port_data(26) =>
                           ll_uart_rx_port_DATA_26_port, ll_rx_port_data(25) =>
                           ll_uart_rx_port_DATA_25_port, ll_rx_port_data(24) =>
                           ll_uart_rx_port_DATA_24_port, ll_rx_port_data(23) =>
                           ll_uart_rx_port_DATA_23_port, ll_rx_port_data(22) =>
                           ll_uart_rx_port_DATA_22_port, ll_rx_port_data(21) =>
                           ll_uart_rx_port_DATA_21_port, ll_rx_port_data(20) =>
                           ll_uart_rx_port_DATA_20_port, ll_rx_port_data(19) =>
                           ll_uart_rx_port_DATA_19_port, ll_rx_port_data(18) =>
                           ll_uart_rx_port_DATA_18_port, ll_rx_port_data(17) =>
                           ll_uart_rx_port_DATA_17_port, ll_rx_port_data(16) =>
                           ll_uart_rx_port_DATA_16_port, ll_rx_port_data(15) =>
                           ll_uart_rx_port_DATA_15_port, ll_rx_port_data(14) =>
                           ll_uart_rx_port_DATA_14_port, ll_rx_port_data(13) =>
                           ll_uart_rx_port_DATA_13_port, ll_rx_port_data(12) =>
                           ll_uart_rx_port_DATA_12_port, ll_rx_port_data(11) =>
                           ll_uart_rx_port_DATA_11_port, ll_rx_port_data(10) =>
                           ll_uart_rx_port_DATA_10_port, ll_rx_port_data(9) => 
                           ll_uart_rx_port_DATA_9_port, ll_rx_port_data(8) => 
                           ll_uart_rx_port_DATA_8_port, ll_rx_port_data(7) => 
                           ll_uart_rx_port_DATA_7_port, ll_rx_port_data(6) => 
                           ll_uart_rx_port_DATA_6_port, ll_rx_port_data(5) => 
                           ll_uart_rx_port_DATA_5_port, ll_rx_port_data(4) => 
                           ll_uart_rx_port_DATA_4_port, ll_rx_port_data(3) => 
                           ll_uart_rx_port_DATA_3_port, ll_rx_port_data(2) => 
                           ll_uart_rx_port_DATA_2_port, ll_rx_port_data(1) => 
                           ll_uart_rx_port_DATA_1_port, ll_rx_port_data(0) => 
                           ll_uart_rx_port_DATA_0_port, ll_rx_port_data_be(3) 
                           => ll_uart_rx_port_DATA_BE_3_port, 
                           ll_rx_port_data_be(2) => 
                           ll_uart_rx_port_DATA_BE_2_port, 
                           ll_rx_port_data_be(1) => 
                           ll_uart_rx_port_DATA_BE_1_port, 
                           ll_rx_port_data_be(0) => 
                           ll_uart_rx_port_DATA_BE_0_port, ll_rx_port_src_rdy_n
                           => ll_uart_rx_port_SRC_RDY_N_port, 
                           ll_rx_port_dst_rdy_n => 
                           ll_uart_rx_port_DST_RDY_N_port, ll_rx_port_sof_n => 
                           ll_intctr_tx_port_SOF_N_port, ll_rx_port_eof_n => 
                           ll_intctr_tx_port_EOF_N_port, rx_dst(4) => 
                           dsl_uart_rx_port_DST_4_port, rx_dst(3) => 
                           dsl_uart_rx_port_DST_3_port, rx_dst(2) => 
                           dsl_uart_rx_port_DST_2_port, rx_dst(1) => 
                           dsl_uart_rx_port_DST_1_port, rx_dst(0) => 
                           dsl_uart_rx_port_DST_0_port, rx_src(4) => 
                           dsl_uart_rx_port_SRC_4_port, rx_src(3) => 
                           dsl_uart_rx_port_SRC_3_port, rx_src(2) => 
                           dsl_uart_rx_port_SRC_2_port, rx_src(1) => 
                           dsl_uart_rx_port_SRC_1_port, rx_src(0) => 
                           dsl_uart_rx_port_SRC_0_port, rx_len(31) => 
                           dsl_uart_rx_port_LEN_31_port, rx_len(30) => 
                           dsl_uart_rx_port_LEN_30_port, rx_len(29) => 
                           dsl_uart_rx_port_LEN_29_port, rx_len(28) => 
                           dsl_uart_rx_port_LEN_28_port, rx_len(27) => 
                           dsl_uart_rx_port_LEN_27_port, rx_len(26) => 
                           dsl_uart_rx_port_LEN_26_port, rx_len(25) => 
                           dsl_uart_rx_port_LEN_25_port, rx_len(24) => 
                           dsl_uart_rx_port_LEN_24_port, rx_len(23) => 
                           dsl_uart_rx_port_LEN_23_port, rx_len(22) => 
                           dsl_uart_rx_port_LEN_22_port, rx_len(21) => 
                           dsl_uart_rx_port_LEN_21_port, rx_len(20) => 
                           dsl_uart_rx_port_LEN_20_port, rx_len(19) => 
                           dsl_uart_rx_port_LEN_19_port, rx_len(18) => 
                           dsl_uart_rx_port_LEN_18_port, rx_len(17) => 
                           dsl_uart_rx_port_LEN_17_port, rx_len(16) => 
                           dsl_uart_rx_port_LEN_16_port, rx_len(15) => 
                           dsl_uart_rx_port_LEN_15_port, rx_len(14) => 
                           dsl_uart_rx_port_LEN_14_port, rx_len(13) => 
                           dsl_uart_rx_port_LEN_13_port, rx_len(12) => 
                           dsl_uart_rx_port_LEN_12_port, rx_len(11) => 
                           dsl_uart_rx_port_LEN_11_port, rx_len(10) => 
                           dsl_uart_rx_port_LEN_10_port, rx_len(9) => 
                           dsl_uart_rx_port_LEN_9_port, rx_len(8) => 
                           dsl_uart_rx_port_LEN_8_port, rx_len(7) => 
                           dsl_uart_rx_port_LEN_7_port, rx_len(6) => 
                           dsl_uart_rx_port_LEN_6_port, rx_len(5) => 
                           dsl_uart_rx_port_LEN_5_port, rx_len(4) => 
                           dsl_uart_rx_port_LEN_4_port, rx_len(3) => 
                           dsl_uart_rx_port_LEN_3_port, rx_len(2) => 
                           dsl_uart_rx_port_LEN_2_port, rx_len(1) => 
                           dsl_uart_rx_port_LEN_1_port, rx_len(0) => 
                           dsl_uart_rx_port_LEN_0_port, ll_tx_port_data(31) => 
                           ll_bridge_tx_port_DATA_31_port, ll_tx_port_data(30) 
                           => ll_bridge_tx_port_DATA_30_port, 
                           ll_tx_port_data(29) => 
                           ll_bridge_tx_port_DATA_29_port, ll_tx_port_data(28) 
                           => ll_bridge_tx_port_DATA_28_port, 
                           ll_tx_port_data(27) => 
                           ll_bridge_tx_port_DATA_27_port, ll_tx_port_data(26) 
                           => ll_bridge_tx_port_DATA_26_port, 
                           ll_tx_port_data(25) => 
                           ll_bridge_tx_port_DATA_25_port, ll_tx_port_data(24) 
                           => ll_bridge_tx_port_DATA_24_port, 
                           ll_tx_port_data(23) => 
                           ll_bridge_tx_port_DATA_23_port, ll_tx_port_data(22) 
                           => ll_bridge_tx_port_DATA_22_port, 
                           ll_tx_port_data(21) => 
                           ll_bridge_tx_port_DATA_21_port, ll_tx_port_data(20) 
                           => ll_bridge_tx_port_DATA_20_port, 
                           ll_tx_port_data(19) => 
                           ll_bridge_tx_port_DATA_19_port, ll_tx_port_data(18) 
                           => ll_bridge_tx_port_DATA_18_port, 
                           ll_tx_port_data(17) => 
                           ll_bridge_tx_port_DATA_17_port, ll_tx_port_data(16) 
                           => ll_bridge_tx_port_DATA_16_port, 
                           ll_tx_port_data(15) => 
                           ll_bridge_tx_port_DATA_15_port, ll_tx_port_data(14) 
                           => ll_bridge_tx_port_DATA_14_port, 
                           ll_tx_port_data(13) => 
                           ll_bridge_tx_port_DATA_13_port, ll_tx_port_data(12) 
                           => ll_bridge_tx_port_DATA_12_port, 
                           ll_tx_port_data(11) => 
                           ll_bridge_tx_port_DATA_11_port, ll_tx_port_data(10) 
                           => ll_bridge_tx_port_DATA_10_port, 
                           ll_tx_port_data(9) => ll_bridge_tx_port_DATA_9_port,
                           ll_tx_port_data(8) => ll_bridge_tx_port_DATA_8_port,
                           ll_tx_port_data(7) => ll_bridge_tx_port_DATA_7_port,
                           ll_tx_port_data(6) => ll_bridge_tx_port_DATA_6_port,
                           ll_tx_port_data(5) => ll_bridge_tx_port_DATA_5_port,
                           ll_tx_port_data(4) => ll_bridge_tx_port_DATA_4_port,
                           ll_tx_port_data(3) => ll_bridge_tx_port_DATA_3_port,
                           ll_tx_port_data(2) => ll_bridge_tx_port_DATA_2_port,
                           ll_tx_port_data(1) => ll_bridge_tx_port_DATA_1_port,
                           ll_tx_port_data(0) => ll_bridge_tx_port_DATA_0_port,
                           ll_tx_port_data_be(3) => 
                           ll_bridge_tx_port_DATA_BE_3_port, 
                           ll_tx_port_data_be(2) => 
                           ll_bridge_tx_port_DATA_BE_2_port, 
                           ll_tx_port_data_be(1) => 
                           ll_bridge_tx_port_DATA_BE_1_port, 
                           ll_tx_port_data_be(0) => 
                           ll_bridge_tx_port_DATA_BE_0_port, 
                           ll_tx_port_src_rdy_n => 
                           ll_bridge_tx_port_SRC_RDY_N_port, 
                           ll_tx_port_dst_rdy_n => 
                           ll_bridge_tx_port_DST_RDY_N_port, ll_tx_port_sof_n 
                           => ll_bridge_tx_port_SOF_N_port, ll_tx_port_eof_n =>
                           ll_bridge_tx_port_EOF_N_port, tx_dst(4) => 
                           dsl_bridge_tx_port_DST_4_port, tx_dst(3) => 
                           dsl_bridge_tx_port_DST_3_port, tx_dst(2) => 
                           dsl_bridge_tx_port_DST_2_port, tx_dst(1) => 
                           dsl_bridge_tx_port_DST_1_port, tx_dst(0) => 
                           dsl_bridge_tx_port_DST_0_port, tx_src(4) => 
                           dsl_bridge_tx_port_SRC_4_port, tx_src(3) => 
                           dsl_bridge_tx_port_SRC_3_port, tx_src(2) => 
                           dsl_bridge_tx_port_SRC_2_port, tx_src(1) => 
                           dsl_bridge_tx_port_SRC_1_port, tx_src(0) => 
                           dsl_bridge_tx_port_SRC_0_port, tx_len(31) => 
                           dsl_bridge_tx_port_LEN_31_port, tx_len(30) => 
                           dsl_bridge_tx_port_LEN_30_port, tx_len(29) => 
                           dsl_bridge_tx_port_LEN_29_port, tx_len(28) => 
                           dsl_bridge_tx_port_LEN_28_port, tx_len(27) => 
                           dsl_bridge_tx_port_LEN_27_port, tx_len(26) => 
                           dsl_bridge_tx_port_LEN_26_port, tx_len(25) => 
                           dsl_bridge_tx_port_LEN_25_port, tx_len(24) => 
                           dsl_bridge_tx_port_LEN_24_port, tx_len(23) => 
                           dsl_bridge_tx_port_LEN_23_port, tx_len(22) => 
                           dsl_bridge_tx_port_LEN_22_port, tx_len(21) => 
                           dsl_bridge_tx_port_LEN_21_port, tx_len(20) => 
                           dsl_bridge_tx_port_LEN_20_port, tx_len(19) => 
                           dsl_bridge_tx_port_LEN_19_port, tx_len(18) => 
                           dsl_bridge_tx_port_LEN_18_port, tx_len(17) => 
                           dsl_bridge_tx_port_LEN_17_port, tx_len(16) => 
                           dsl_bridge_tx_port_LEN_16_port, tx_len(15) => 
                           dsl_bridge_tx_port_LEN_15_port, tx_len(14) => 
                           dsl_bridge_tx_port_LEN_14_port, tx_len(13) => 
                           dsl_bridge_tx_port_LEN_13_port, tx_len(12) => 
                           dsl_bridge_tx_port_LEN_12_port, tx_len(11) => 
                           dsl_bridge_tx_port_LEN_11_port, tx_len(10) => 
                           dsl_bridge_tx_port_LEN_10_port, tx_len(9) => 
                           dsl_bridge_tx_port_LEN_9_port, tx_len(8) => 
                           dsl_bridge_tx_port_LEN_8_port, tx_len(7) => 
                           dsl_bridge_tx_port_LEN_7_port, tx_len(6) => 
                           dsl_bridge_tx_port_LEN_6_port, tx_len(5) => 
                           dsl_bridge_tx_port_LEN_5_port, tx_len(4) => 
                           dsl_bridge_tx_port_LEN_4_port, tx_len(3) => 
                           dsl_bridge_tx_port_LEN_3_port, tx_len(2) => 
                           dsl_bridge_tx_port_LEN_2_port, tx_len(1) => 
                           dsl_bridge_tx_port_LEN_1_port, tx_len(0) => 
                           dsl_bridge_tx_port_LEN_0_port, serial_in => 
                           serial_in, serial_out => serial_out, baud_clk => 
                           baud_clk);
   U_intctr : IntCtr_core port map( clk => clk, reset_b => reset_b, 
                           base_addr(31) => n1, base_addr(30) => n1, 
                           base_addr(29) => n2, base_addr(28) => n1, 
                           base_addr(27) => n1, base_addr(26) => n1, 
                           base_addr(25) => n1, base_addr(24) => n2, 
                           base_addr(23) => n1, base_addr(22) => n1, 
                           base_addr(21) => n1, base_addr(20) => n1, 
                           base_addr(19) => n1, base_addr(18) => n1, 
                           base_addr(17) => n1, base_addr(16) => n1, 
                           base_addr(15) => n1, base_addr(14) => n1, 
                           base_addr(13) => n1, base_addr(12) => n1, 
                           base_addr(11) => n1, base_addr(10) => n1, 
                           base_addr(9) => n1, base_addr(8) => n1, base_addr(7)
                           => n1, base_addr(6) => n1, base_addr(5) => n1, 
                           base_addr(4) => n1, base_addr(3) => n1, base_addr(2)
                           => n1, base_addr(1) => n1, base_addr(0) => n1, o_irq
                           => o_irq, o_firq => o_firq, i_ethmac_int => 
                           i_ethmac_int, i_tm_timer_int(2) => timer_int_2_port,
                           i_tm_timer_int(1) => timer_int_1_port, 
                           i_tm_timer_int(0) => timer_int_0_port, i_uart1_int 
                           => n1, i_uart0_int => n1, i_test_reg_irq => 
                           i_test_reg_irq, i_test_reg_firq => i_test_reg_firq, 
                           ll_rx_port_data(31) => 
                           ll_intctr_rx_port_DATA_31_port, ll_rx_port_data(30) 
                           => ll_intctr_rx_port_DATA_30_port, 
                           ll_rx_port_data(29) => 
                           ll_intctr_rx_port_DATA_29_port, ll_rx_port_data(28) 
                           => ll_intctr_rx_port_DATA_28_port, 
                           ll_rx_port_data(27) => 
                           ll_intctr_rx_port_DATA_27_port, ll_rx_port_data(26) 
                           => ll_intctr_rx_port_DATA_26_port, 
                           ll_rx_port_data(25) => 
                           ll_intctr_rx_port_DATA_25_port, ll_rx_port_data(24) 
                           => ll_intctr_rx_port_DATA_24_port, 
                           ll_rx_port_data(23) => 
                           ll_intctr_rx_port_DATA_23_port, ll_rx_port_data(22) 
                           => ll_intctr_rx_port_DATA_22_port, 
                           ll_rx_port_data(21) => 
                           ll_intctr_rx_port_DATA_21_port, ll_rx_port_data(20) 
                           => ll_intctr_rx_port_DATA_20_port, 
                           ll_rx_port_data(19) => 
                           ll_intctr_rx_port_DATA_19_port, ll_rx_port_data(18) 
                           => ll_intctr_rx_port_DATA_18_port, 
                           ll_rx_port_data(17) => 
                           ll_intctr_rx_port_DATA_17_port, ll_rx_port_data(16) 
                           => ll_intctr_rx_port_DATA_16_port, 
                           ll_rx_port_data(15) => 
                           ll_intctr_rx_port_DATA_15_port, ll_rx_port_data(14) 
                           => ll_intctr_rx_port_DATA_14_port, 
                           ll_rx_port_data(13) => 
                           ll_intctr_rx_port_DATA_13_port, ll_rx_port_data(12) 
                           => ll_intctr_rx_port_DATA_12_port, 
                           ll_rx_port_data(11) => 
                           ll_intctr_rx_port_DATA_11_port, ll_rx_port_data(10) 
                           => ll_intctr_rx_port_DATA_10_port, 
                           ll_rx_port_data(9) => ll_intctr_rx_port_DATA_9_port,
                           ll_rx_port_data(8) => ll_intctr_rx_port_DATA_8_port,
                           ll_rx_port_data(7) => ll_intctr_rx_port_DATA_7_port,
                           ll_rx_port_data(6) => ll_intctr_rx_port_DATA_6_port,
                           ll_rx_port_data(5) => ll_intctr_rx_port_DATA_5_port,
                           ll_rx_port_data(4) => ll_intctr_rx_port_DATA_4_port,
                           ll_rx_port_data(3) => ll_intctr_rx_port_DATA_3_port,
                           ll_rx_port_data(2) => ll_intctr_rx_port_DATA_2_port,
                           ll_rx_port_data(1) => ll_intctr_rx_port_DATA_1_port,
                           ll_rx_port_data(0) => ll_intctr_rx_port_DATA_0_port,
                           ll_rx_port_data_be(3) => 
                           ll_intctr_rx_port_DATA_BE_3_port, 
                           ll_rx_port_data_be(2) => 
                           ll_intctr_rx_port_DATA_BE_2_port, 
                           ll_rx_port_data_be(1) => 
                           ll_intctr_rx_port_DATA_BE_1_port, 
                           ll_rx_port_data_be(0) => 
                           ll_intctr_rx_port_DATA_BE_0_port, 
                           ll_rx_port_src_rdy_n => 
                           ll_intctr_rx_port_SRC_RDY_N_port, 
                           ll_rx_port_dst_rdy_n => 
                           ll_intctr_rx_port_DST_RDY_N_port, ll_rx_port_sof_n 
                           => ll_timer_tx_port_SOF_N_port, ll_rx_port_eof_n => 
                           ll_timer_tx_port_EOF_N_port, rx_dst(4) => 
                           dsl_intctr_rx_port_DST_4_port, rx_dst(3) => 
                           dsl_intctr_rx_port_DST_3_port, rx_dst(2) => 
                           dsl_intctr_rx_port_DST_2_port, rx_dst(1) => 
                           dsl_intctr_rx_port_DST_1_port, rx_dst(0) => 
                           dsl_intctr_rx_port_DST_0_port, rx_src(4) => 
                           dsl_intctr_rx_port_SRC_4_port, rx_src(3) => 
                           dsl_intctr_rx_port_SRC_3_port, rx_src(2) => 
                           dsl_intctr_rx_port_SRC_2_port, rx_src(1) => 
                           dsl_intctr_rx_port_SRC_1_port, rx_src(0) => 
                           dsl_intctr_rx_port_SRC_0_port, rx_len(31) => 
                           dsl_intctr_rx_port_LEN_31_port, rx_len(30) => 
                           dsl_intctr_rx_port_LEN_30_port, rx_len(29) => 
                           dsl_intctr_rx_port_LEN_29_port, rx_len(28) => 
                           dsl_intctr_rx_port_LEN_28_port, rx_len(27) => 
                           dsl_intctr_rx_port_LEN_27_port, rx_len(26) => 
                           dsl_intctr_rx_port_LEN_26_port, rx_len(25) => 
                           dsl_intctr_rx_port_LEN_25_port, rx_len(24) => 
                           dsl_intctr_rx_port_LEN_24_port, rx_len(23) => 
                           dsl_intctr_rx_port_LEN_23_port, rx_len(22) => 
                           dsl_intctr_rx_port_LEN_22_port, rx_len(21) => 
                           dsl_intctr_rx_port_LEN_21_port, rx_len(20) => 
                           dsl_intctr_rx_port_LEN_20_port, rx_len(19) => 
                           dsl_intctr_rx_port_LEN_19_port, rx_len(18) => 
                           dsl_intctr_rx_port_LEN_18_port, rx_len(17) => 
                           dsl_intctr_rx_port_LEN_17_port, rx_len(16) => 
                           dsl_intctr_rx_port_LEN_16_port, rx_len(15) => 
                           dsl_intctr_rx_port_LEN_15_port, rx_len(14) => 
                           dsl_intctr_rx_port_LEN_14_port, rx_len(13) => 
                           dsl_intctr_rx_port_LEN_13_port, rx_len(12) => 
                           dsl_intctr_rx_port_LEN_12_port, rx_len(11) => 
                           dsl_intctr_rx_port_LEN_11_port, rx_len(10) => 
                           dsl_intctr_rx_port_LEN_10_port, rx_len(9) => 
                           dsl_intctr_rx_port_LEN_9_port, rx_len(8) => 
                           dsl_intctr_rx_port_LEN_8_port, rx_len(7) => 
                           dsl_intctr_rx_port_LEN_7_port, rx_len(6) => 
                           dsl_intctr_rx_port_LEN_6_port, rx_len(5) => 
                           dsl_intctr_rx_port_LEN_5_port, rx_len(4) => 
                           dsl_intctr_rx_port_LEN_4_port, rx_len(3) => 
                           dsl_intctr_rx_port_LEN_3_port, rx_len(2) => 
                           dsl_intctr_rx_port_LEN_2_port, rx_len(1) => 
                           dsl_intctr_rx_port_LEN_1_port, rx_len(0) => 
                           dsl_intctr_rx_port_LEN_0_port, ll_tx_port_data(31) 
                           => ll_uart_rx_port_DATA_31_port, ll_tx_port_data(30)
                           => ll_uart_rx_port_DATA_30_port, ll_tx_port_data(29)
                           => ll_uart_rx_port_DATA_29_port, ll_tx_port_data(28)
                           => ll_uart_rx_port_DATA_28_port, ll_tx_port_data(27)
                           => ll_uart_rx_port_DATA_27_port, ll_tx_port_data(26)
                           => ll_uart_rx_port_DATA_26_port, ll_tx_port_data(25)
                           => ll_uart_rx_port_DATA_25_port, ll_tx_port_data(24)
                           => ll_uart_rx_port_DATA_24_port, ll_tx_port_data(23)
                           => ll_uart_rx_port_DATA_23_port, ll_tx_port_data(22)
                           => ll_uart_rx_port_DATA_22_port, ll_tx_port_data(21)
                           => ll_uart_rx_port_DATA_21_port, ll_tx_port_data(20)
                           => ll_uart_rx_port_DATA_20_port, ll_tx_port_data(19)
                           => ll_uart_rx_port_DATA_19_port, ll_tx_port_data(18)
                           => ll_uart_rx_port_DATA_18_port, ll_tx_port_data(17)
                           => ll_uart_rx_port_DATA_17_port, ll_tx_port_data(16)
                           => ll_uart_rx_port_DATA_16_port, ll_tx_port_data(15)
                           => ll_uart_rx_port_DATA_15_port, ll_tx_port_data(14)
                           => ll_uart_rx_port_DATA_14_port, ll_tx_port_data(13)
                           => ll_uart_rx_port_DATA_13_port, ll_tx_port_data(12)
                           => ll_uart_rx_port_DATA_12_port, ll_tx_port_data(11)
                           => ll_uart_rx_port_DATA_11_port, ll_tx_port_data(10)
                           => ll_uart_rx_port_DATA_10_port, ll_tx_port_data(9) 
                           => ll_uart_rx_port_DATA_9_port, ll_tx_port_data(8) 
                           => ll_uart_rx_port_DATA_8_port, ll_tx_port_data(7) 
                           => ll_uart_rx_port_DATA_7_port, ll_tx_port_data(6) 
                           => ll_uart_rx_port_DATA_6_port, ll_tx_port_data(5) 
                           => ll_uart_rx_port_DATA_5_port, ll_tx_port_data(4) 
                           => ll_uart_rx_port_DATA_4_port, ll_tx_port_data(3) 
                           => ll_uart_rx_port_DATA_3_port, ll_tx_port_data(2) 
                           => ll_uart_rx_port_DATA_2_port, ll_tx_port_data(1) 
                           => ll_uart_rx_port_DATA_1_port, ll_tx_port_data(0) 
                           => ll_uart_rx_port_DATA_0_port, 
                           ll_tx_port_data_be(3) => 
                           ll_uart_rx_port_DATA_BE_3_port, 
                           ll_tx_port_data_be(2) => 
                           ll_uart_rx_port_DATA_BE_2_port, 
                           ll_tx_port_data_be(1) => 
                           ll_uart_rx_port_DATA_BE_1_port, 
                           ll_tx_port_data_be(0) => 
                           ll_uart_rx_port_DATA_BE_0_port, ll_tx_port_src_rdy_n
                           => ll_uart_rx_port_SRC_RDY_N_port, 
                           ll_tx_port_dst_rdy_n => 
                           ll_uart_rx_port_DST_RDY_N_port, ll_tx_port_sof_n => 
                           ll_intctr_tx_port_SOF_N_port, ll_tx_port_eof_n => 
                           ll_intctr_tx_port_EOF_N_port, tx_dst(4) => 
                           dsl_uart_rx_port_DST_4_port, tx_dst(3) => 
                           dsl_uart_rx_port_DST_3_port, tx_dst(2) => 
                           dsl_uart_rx_port_DST_2_port, tx_dst(1) => 
                           dsl_uart_rx_port_DST_1_port, tx_dst(0) => 
                           dsl_uart_rx_port_DST_0_port, tx_src(4) => 
                           dsl_uart_rx_port_SRC_4_port, tx_src(3) => 
                           dsl_uart_rx_port_SRC_3_port, tx_src(2) => 
                           dsl_uart_rx_port_SRC_2_port, tx_src(1) => 
                           dsl_uart_rx_port_SRC_1_port, tx_src(0) => 
                           dsl_uart_rx_port_SRC_0_port, tx_len(31) => 
                           dsl_uart_rx_port_LEN_31_port, tx_len(30) => 
                           dsl_uart_rx_port_LEN_30_port, tx_len(29) => 
                           dsl_uart_rx_port_LEN_29_port, tx_len(28) => 
                           dsl_uart_rx_port_LEN_28_port, tx_len(27) => 
                           dsl_uart_rx_port_LEN_27_port, tx_len(26) => 
                           dsl_uart_rx_port_LEN_26_port, tx_len(25) => 
                           dsl_uart_rx_port_LEN_25_port, tx_len(24) => 
                           dsl_uart_rx_port_LEN_24_port, tx_len(23) => 
                           dsl_uart_rx_port_LEN_23_port, tx_len(22) => 
                           dsl_uart_rx_port_LEN_22_port, tx_len(21) => 
                           dsl_uart_rx_port_LEN_21_port, tx_len(20) => 
                           dsl_uart_rx_port_LEN_20_port, tx_len(19) => 
                           dsl_uart_rx_port_LEN_19_port, tx_len(18) => 
                           dsl_uart_rx_port_LEN_18_port, tx_len(17) => 
                           dsl_uart_rx_port_LEN_17_port, tx_len(16) => 
                           dsl_uart_rx_port_LEN_16_port, tx_len(15) => 
                           dsl_uart_rx_port_LEN_15_port, tx_len(14) => 
                           dsl_uart_rx_port_LEN_14_port, tx_len(13) => 
                           dsl_uart_rx_port_LEN_13_port, tx_len(12) => 
                           dsl_uart_rx_port_LEN_12_port, tx_len(11) => 
                           dsl_uart_rx_port_LEN_11_port, tx_len(10) => 
                           dsl_uart_rx_port_LEN_10_port, tx_len(9) => 
                           dsl_uart_rx_port_LEN_9_port, tx_len(8) => 
                           dsl_uart_rx_port_LEN_8_port, tx_len(7) => 
                           dsl_uart_rx_port_LEN_7_port, tx_len(6) => 
                           dsl_uart_rx_port_LEN_6_port, tx_len(5) => 
                           dsl_uart_rx_port_LEN_5_port, tx_len(4) => 
                           dsl_uart_rx_port_LEN_4_port, tx_len(3) => 
                           dsl_uart_rx_port_LEN_3_port, tx_len(2) => 
                           dsl_uart_rx_port_LEN_2_port, tx_len(1) => 
                           dsl_uart_rx_port_LEN_1_port, tx_len(0) => 
                           dsl_uart_rx_port_LEN_0_port);
   U_axi4s_to_ll_bridge_i : axi4s_to_ll_bridge port map( clk => clk, reset_b =>
                           reset_b, axi4s_tx_tdata(31) => axi4s_tx_tdata(31), 
                           axi4s_tx_tdata(30) => axi4s_tx_tdata(30), 
                           axi4s_tx_tdata(29) => axi4s_tx_tdata(29), 
                           axi4s_tx_tdata(28) => axi4s_tx_tdata(28), 
                           axi4s_tx_tdata(27) => axi4s_tx_tdata(27), 
                           axi4s_tx_tdata(26) => axi4s_tx_tdata(26), 
                           axi4s_tx_tdata(25) => axi4s_tx_tdata(25), 
                           axi4s_tx_tdata(24) => axi4s_tx_tdata(24), 
                           axi4s_tx_tdata(23) => axi4s_tx_tdata(23), 
                           axi4s_tx_tdata(22) => axi4s_tx_tdata(22), 
                           axi4s_tx_tdata(21) => axi4s_tx_tdata(21), 
                           axi4s_tx_tdata(20) => axi4s_tx_tdata(20), 
                           axi4s_tx_tdata(19) => axi4s_tx_tdata(19), 
                           axi4s_tx_tdata(18) => axi4s_tx_tdata(18), 
                           axi4s_tx_tdata(17) => axi4s_tx_tdata(17), 
                           axi4s_tx_tdata(16) => axi4s_tx_tdata(16), 
                           axi4s_tx_tdata(15) => axi4s_tx_tdata(15), 
                           axi4s_tx_tdata(14) => axi4s_tx_tdata(14), 
                           axi4s_tx_tdata(13) => axi4s_tx_tdata(13), 
                           axi4s_tx_tdata(12) => axi4s_tx_tdata(12), 
                           axi4s_tx_tdata(11) => axi4s_tx_tdata(11), 
                           axi4s_tx_tdata(10) => axi4s_tx_tdata(10), 
                           axi4s_tx_tdata(9) => axi4s_tx_tdata(9), 
                           axi4s_tx_tdata(8) => axi4s_tx_tdata(8), 
                           axi4s_tx_tdata(7) => axi4s_tx_tdata(7), 
                           axi4s_tx_tdata(6) => axi4s_tx_tdata(6), 
                           axi4s_tx_tdata(5) => axi4s_tx_tdata(5), 
                           axi4s_tx_tdata(4) => axi4s_tx_tdata(4), 
                           axi4s_tx_tdata(3) => axi4s_tx_tdata(3), 
                           axi4s_tx_tdata(2) => axi4s_tx_tdata(2), 
                           axi4s_tx_tdata(1) => axi4s_tx_tdata(1), 
                           axi4s_tx_tdata(0) => axi4s_tx_tdata(0), 
                           axi4s_tx_tstrb(3) => axi4s_tx_tstrb(3), 
                           axi4s_tx_tstrb(2) => axi4s_tx_tstrb(2), 
                           axi4s_tx_tstrb(1) => axi4s_tx_tstrb(1), 
                           axi4s_tx_tstrb(0) => axi4s_tx_tstrb(0), 
                           axi4s_tx_tkeep(3) => axi4s_tx_tkeep(3), 
                           axi4s_tx_tkeep(2) => axi4s_tx_tkeep(2), 
                           axi4s_tx_tkeep(1) => axi4s_tx_tkeep(1), 
                           axi4s_tx_tkeep(0) => axi4s_tx_tkeep(0), 
                           axi4s_tx_tvalid => axi4s_tx_tvalid, axi4s_tx_tlast 
                           => axi4s_tx_tlast, axi4s_tx_tid(2) => n_1279, 
                           axi4s_tx_tid(1) => n_1280, axi4s_tx_tid(0) => n_1281
                           , axi4s_tx_tdest(4) => axi4s_tx_tdest(4), 
                           axi4s_tx_tdest(3) => axi4s_tx_tdest(3), 
                           axi4s_tx_tdest(2) => axi4s_tx_tdest(2), 
                           axi4s_tx_tdest(1) => axi4s_tx_tdest(1), 
                           axi4s_tx_tdest(0) => axi4s_tx_tdest(0), 
                           axi4s_tx_tuser(3) => n_1282, axi4s_tx_tuser(2) => 
                           n_1283, axi4s_tx_tuser(1) => n_1284, 
                           axi4s_tx_tuser(0) => n_1285, axi4s_tx_tready => 
                           axi4s_tx_tready, axi4s_rx_tdata(31) => 
                           axi4s_rx_tdata(31), axi4s_rx_tdata(30) => 
                           axi4s_rx_tdata(30), axi4s_rx_tdata(29) => 
                           axi4s_rx_tdata(29), axi4s_rx_tdata(28) => 
                           axi4s_rx_tdata(28), axi4s_rx_tdata(27) => 
                           axi4s_rx_tdata(27), axi4s_rx_tdata(26) => 
                           axi4s_rx_tdata(26), axi4s_rx_tdata(25) => 
                           axi4s_rx_tdata(25), axi4s_rx_tdata(24) => 
                           axi4s_rx_tdata(24), axi4s_rx_tdata(23) => 
                           axi4s_rx_tdata(23), axi4s_rx_tdata(22) => 
                           axi4s_rx_tdata(22), axi4s_rx_tdata(21) => 
                           axi4s_rx_tdata(21), axi4s_rx_tdata(20) => 
                           axi4s_rx_tdata(20), axi4s_rx_tdata(19) => 
                           axi4s_rx_tdata(19), axi4s_rx_tdata(18) => 
                           axi4s_rx_tdata(18), axi4s_rx_tdata(17) => 
                           axi4s_rx_tdata(17), axi4s_rx_tdata(16) => 
                           axi4s_rx_tdata(16), axi4s_rx_tdata(15) => 
                           axi4s_rx_tdata(15), axi4s_rx_tdata(14) => 
                           axi4s_rx_tdata(14), axi4s_rx_tdata(13) => 
                           axi4s_rx_tdata(13), axi4s_rx_tdata(12) => 
                           axi4s_rx_tdata(12), axi4s_rx_tdata(11) => 
                           axi4s_rx_tdata(11), axi4s_rx_tdata(10) => 
                           axi4s_rx_tdata(10), axi4s_rx_tdata(9) => 
                           axi4s_rx_tdata(9), axi4s_rx_tdata(8) => 
                           axi4s_rx_tdata(8), axi4s_rx_tdata(7) => 
                           axi4s_rx_tdata(7), axi4s_rx_tdata(6) => 
                           axi4s_rx_tdata(6), axi4s_rx_tdata(5) => 
                           axi4s_rx_tdata(5), axi4s_rx_tdata(4) => 
                           axi4s_rx_tdata(4), axi4s_rx_tdata(3) => 
                           axi4s_rx_tdata(3), axi4s_rx_tdata(2) => 
                           axi4s_rx_tdata(2), axi4s_rx_tdata(1) => 
                           axi4s_rx_tdata(1), axi4s_rx_tdata(0) => 
                           axi4s_rx_tdata(0), axi4s_rx_tstrb(3) => 
                           axi4s_rx_tstrb(3), axi4s_rx_tstrb(2) => 
                           axi4s_rx_tstrb(2), axi4s_rx_tstrb(1) => 
                           axi4s_rx_tstrb(1), axi4s_rx_tstrb(0) => 
                           axi4s_rx_tstrb(0), axi4s_rx_tkeep(3) => 
                           axi4s_rx_tkeep(3), axi4s_rx_tkeep(2) => 
                           axi4s_rx_tkeep(2), axi4s_rx_tkeep(1) => 
                           axi4s_rx_tkeep(1), axi4s_rx_tkeep(0) => 
                           axi4s_rx_tkeep(0), axi4s_rx_tvalid => 
                           axi4s_rx_tvalid, axi4s_rx_tlast => axi4s_rx_tlast, 
                           axi4s_rx_tid(2) => axi4s_rx_tid(2), axi4s_rx_tid(1) 
                           => axi4s_rx_tid(1), axi4s_rx_tid(0) => 
                           axi4s_rx_tid(0), axi4s_rx_tdest(4) => 
                           axi4s_rx_tdest(4), axi4s_rx_tdest(3) => 
                           axi4s_rx_tdest(3), axi4s_rx_tdest(2) => 
                           axi4s_rx_tdest(2), axi4s_rx_tdest(1) => 
                           axi4s_rx_tdest(1), axi4s_rx_tdest(0) => 
                           axi4s_rx_tdest(0), axi4s_rx_tuser(3) => 
                           axi4s_rx_tuser(3), axi4s_rx_tuser(2) => 
                           axi4s_rx_tuser(2), axi4s_rx_tuser(1) => 
                           axi4s_rx_tuser(1), axi4s_rx_tuser(0) => 
                           axi4s_rx_tuser(0), axi4s_rx_tready => 
                           axi4s_rx_tready, ll_rx_data(31) => 
                           ll_timer_rx_port_DATA_31_port, ll_rx_data(30) => 
                           ll_timer_rx_port_DATA_30_port, ll_rx_data(29) => 
                           ll_timer_rx_port_DATA_29_port, ll_rx_data(28) => 
                           ll_timer_rx_port_DATA_28_port, ll_rx_data(27) => 
                           ll_timer_rx_port_DATA_27_port, ll_rx_data(26) => 
                           ll_timer_rx_port_DATA_26_port, ll_rx_data(25) => 
                           ll_timer_rx_port_DATA_25_port, ll_rx_data(24) => 
                           ll_timer_rx_port_DATA_24_port, ll_rx_data(23) => 
                           ll_timer_rx_port_DATA_23_port, ll_rx_data(22) => 
                           ll_timer_rx_port_DATA_22_port, ll_rx_data(21) => 
                           ll_timer_rx_port_DATA_21_port, ll_rx_data(20) => 
                           ll_timer_rx_port_DATA_20_port, ll_rx_data(19) => 
                           ll_timer_rx_port_DATA_19_port, ll_rx_data(18) => 
                           ll_timer_rx_port_DATA_18_port, ll_rx_data(17) => 
                           ll_timer_rx_port_DATA_17_port, ll_rx_data(16) => 
                           ll_timer_rx_port_DATA_16_port, ll_rx_data(15) => 
                           ll_timer_rx_port_DATA_15_port, ll_rx_data(14) => 
                           ll_timer_rx_port_DATA_14_port, ll_rx_data(13) => 
                           ll_timer_rx_port_DATA_13_port, ll_rx_data(12) => 
                           ll_timer_rx_port_DATA_12_port, ll_rx_data(11) => 
                           ll_timer_rx_port_DATA_11_port, ll_rx_data(10) => 
                           ll_timer_rx_port_DATA_10_port, ll_rx_data(9) => 
                           ll_timer_rx_port_DATA_9_port, ll_rx_data(8) => 
                           ll_timer_rx_port_DATA_8_port, ll_rx_data(7) => 
                           ll_timer_rx_port_DATA_7_port, ll_rx_data(6) => 
                           ll_timer_rx_port_DATA_6_port, ll_rx_data(5) => 
                           ll_timer_rx_port_DATA_5_port, ll_rx_data(4) => 
                           ll_timer_rx_port_DATA_4_port, ll_rx_data(3) => 
                           ll_timer_rx_port_DATA_3_port, ll_rx_data(2) => 
                           ll_timer_rx_port_DATA_2_port, ll_rx_data(1) => 
                           ll_timer_rx_port_DATA_1_port, ll_rx_data(0) => 
                           ll_timer_rx_port_DATA_0_port, ll_rx_data_be(3) => 
                           ll_timer_rx_port_DATA_BE_3_port, ll_rx_data_be(2) =>
                           ll_timer_rx_port_DATA_BE_2_port, ll_rx_data_be(1) =>
                           ll_timer_rx_port_DATA_BE_1_port, ll_rx_data_be(0) =>
                           ll_timer_rx_port_DATA_BE_0_port, ll_rx_sof_n => 
                           ll_bridge_rx_port_SOF_N_port, ll_rx_eof_n => 
                           ll_bridge_rx_port_EOF_N_port, ll_rx_src_rdy_n => 
                           ll_timer_rx_port_SRC_RDY_N_port, ll_rx_dst_rdy_n => 
                           ll_timer_rx_port_DST_RDY_N_port, ll_tx_data(31) => 
                           ll_bridge_tx_port_DATA_31_port, ll_tx_data(30) => 
                           ll_bridge_tx_port_DATA_30_port, ll_tx_data(29) => 
                           ll_bridge_tx_port_DATA_29_port, ll_tx_data(28) => 
                           ll_bridge_tx_port_DATA_28_port, ll_tx_data(27) => 
                           ll_bridge_tx_port_DATA_27_port, ll_tx_data(26) => 
                           ll_bridge_tx_port_DATA_26_port, ll_tx_data(25) => 
                           ll_bridge_tx_port_DATA_25_port, ll_tx_data(24) => 
                           ll_bridge_tx_port_DATA_24_port, ll_tx_data(23) => 
                           ll_bridge_tx_port_DATA_23_port, ll_tx_data(22) => 
                           ll_bridge_tx_port_DATA_22_port, ll_tx_data(21) => 
                           ll_bridge_tx_port_DATA_21_port, ll_tx_data(20) => 
                           ll_bridge_tx_port_DATA_20_port, ll_tx_data(19) => 
                           ll_bridge_tx_port_DATA_19_port, ll_tx_data(18) => 
                           ll_bridge_tx_port_DATA_18_port, ll_tx_data(17) => 
                           ll_bridge_tx_port_DATA_17_port, ll_tx_data(16) => 
                           ll_bridge_tx_port_DATA_16_port, ll_tx_data(15) => 
                           ll_bridge_tx_port_DATA_15_port, ll_tx_data(14) => 
                           ll_bridge_tx_port_DATA_14_port, ll_tx_data(13) => 
                           ll_bridge_tx_port_DATA_13_port, ll_tx_data(12) => 
                           ll_bridge_tx_port_DATA_12_port, ll_tx_data(11) => 
                           ll_bridge_tx_port_DATA_11_port, ll_tx_data(10) => 
                           ll_bridge_tx_port_DATA_10_port, ll_tx_data(9) => 
                           ll_bridge_tx_port_DATA_9_port, ll_tx_data(8) => 
                           ll_bridge_tx_port_DATA_8_port, ll_tx_data(7) => 
                           ll_bridge_tx_port_DATA_7_port, ll_tx_data(6) => 
                           ll_bridge_tx_port_DATA_6_port, ll_tx_data(5) => 
                           ll_bridge_tx_port_DATA_5_port, ll_tx_data(4) => 
                           ll_bridge_tx_port_DATA_4_port, ll_tx_data(3) => 
                           ll_bridge_tx_port_DATA_3_port, ll_tx_data(2) => 
                           ll_bridge_tx_port_DATA_2_port, ll_tx_data(1) => 
                           ll_bridge_tx_port_DATA_1_port, ll_tx_data(0) => 
                           ll_bridge_tx_port_DATA_0_port, ll_tx_data_be(3) => 
                           ll_bridge_tx_port_DATA_BE_3_port, ll_tx_data_be(2) 
                           => ll_bridge_tx_port_DATA_BE_2_port, 
                           ll_tx_data_be(1) => ll_bridge_tx_port_DATA_BE_1_port
                           , ll_tx_data_be(0) => 
                           ll_bridge_tx_port_DATA_BE_0_port, ll_tx_sof_n => 
                           ll_bridge_tx_port_SOF_N_port, ll_tx_eof_n => 
                           ll_bridge_tx_port_EOF_N_port, ll_tx_src_rdy_n => 
                           ll_bridge_tx_port_SRC_RDY_N_port, ll_tx_dst_rdy_n =>
                           ll_bridge_tx_port_DST_RDY_N_port, rx_dst(4) => 
                           dsl_timer_rx_port_DST_4_port, rx_dst(3) => 
                           dsl_timer_rx_port_DST_3_port, rx_dst(2) => 
                           dsl_timer_rx_port_DST_2_port, rx_dst(1) => 
                           dsl_timer_rx_port_DST_1_port, rx_dst(0) => 
                           dsl_timer_rx_port_DST_0_port, rx_src(4) => 
                           dsl_timer_rx_port_SRC_4_port, rx_src(3) => 
                           dsl_timer_rx_port_SRC_3_port, rx_src(2) => 
                           dsl_timer_rx_port_SRC_2_port, rx_src(1) => 
                           dsl_timer_rx_port_SRC_1_port, rx_src(0) => 
                           dsl_timer_rx_port_SRC_0_port, rx_len(31) => 
                           dsl_timer_rx_port_LEN_31_port, rx_len(30) => 
                           dsl_timer_rx_port_LEN_30_port, rx_len(29) => 
                           dsl_timer_rx_port_LEN_29_port, rx_len(28) => 
                           dsl_timer_rx_port_LEN_28_port, rx_len(27) => 
                           dsl_timer_rx_port_LEN_27_port, rx_len(26) => 
                           dsl_timer_rx_port_LEN_26_port, rx_len(25) => 
                           dsl_timer_rx_port_LEN_25_port, rx_len(24) => 
                           dsl_timer_rx_port_LEN_24_port, rx_len(23) => 
                           dsl_timer_rx_port_LEN_23_port, rx_len(22) => 
                           dsl_timer_rx_port_LEN_22_port, rx_len(21) => 
                           dsl_timer_rx_port_LEN_21_port, rx_len(20) => 
                           dsl_timer_rx_port_LEN_20_port, rx_len(19) => 
                           dsl_timer_rx_port_LEN_19_port, rx_len(18) => 
                           dsl_timer_rx_port_LEN_18_port, rx_len(17) => 
                           dsl_timer_rx_port_LEN_17_port, rx_len(16) => 
                           dsl_timer_rx_port_LEN_16_port, rx_len(15) => 
                           dsl_timer_rx_port_LEN_15_port, rx_len(14) => 
                           dsl_timer_rx_port_LEN_14_port, rx_len(13) => 
                           dsl_timer_rx_port_LEN_13_port, rx_len(12) => 
                           dsl_timer_rx_port_LEN_12_port, rx_len(11) => 
                           dsl_timer_rx_port_LEN_11_port, rx_len(10) => 
                           dsl_timer_rx_port_LEN_10_port, rx_len(9) => 
                           dsl_timer_rx_port_LEN_9_port, rx_len(8) => 
                           dsl_timer_rx_port_LEN_8_port, rx_len(7) => 
                           dsl_timer_rx_port_LEN_7_port, rx_len(6) => 
                           dsl_timer_rx_port_LEN_6_port, rx_len(5) => 
                           dsl_timer_rx_port_LEN_5_port, rx_len(4) => 
                           dsl_timer_rx_port_LEN_4_port, rx_len(3) => 
                           dsl_timer_rx_port_LEN_3_port, rx_len(2) => 
                           dsl_timer_rx_port_LEN_2_port, rx_len(1) => 
                           dsl_timer_rx_port_LEN_1_port, rx_len(0) => 
                           dsl_timer_rx_port_LEN_0_port, tx_dst(4) => 
                           dsl_bridge_tx_port_DST_4_port, tx_dst(3) => 
                           dsl_bridge_tx_port_DST_3_port, tx_dst(2) => 
                           dsl_bridge_tx_port_DST_2_port, tx_dst(1) => 
                           dsl_bridge_tx_port_DST_1_port, tx_dst(0) => 
                           dsl_bridge_tx_port_DST_0_port, tx_src(4) => 
                           dsl_bridge_tx_port_SRC_4_port, tx_src(3) => 
                           dsl_bridge_tx_port_SRC_3_port, tx_src(2) => 
                           dsl_bridge_tx_port_SRC_2_port, tx_src(1) => 
                           dsl_bridge_tx_port_SRC_1_port, tx_src(0) => 
                           dsl_bridge_tx_port_SRC_0_port, tx_len(31) => 
                           dsl_bridge_tx_port_LEN_31_port, tx_len(30) => 
                           dsl_bridge_tx_port_LEN_30_port, tx_len(29) => 
                           dsl_bridge_tx_port_LEN_29_port, tx_len(28) => 
                           dsl_bridge_tx_port_LEN_28_port, tx_len(27) => 
                           dsl_bridge_tx_port_LEN_27_port, tx_len(26) => 
                           dsl_bridge_tx_port_LEN_26_port, tx_len(25) => 
                           dsl_bridge_tx_port_LEN_25_port, tx_len(24) => 
                           dsl_bridge_tx_port_LEN_24_port, tx_len(23) => 
                           dsl_bridge_tx_port_LEN_23_port, tx_len(22) => 
                           dsl_bridge_tx_port_LEN_22_port, tx_len(21) => 
                           dsl_bridge_tx_port_LEN_21_port, tx_len(20) => 
                           dsl_bridge_tx_port_LEN_20_port, tx_len(19) => 
                           dsl_bridge_tx_port_LEN_19_port, tx_len(18) => 
                           dsl_bridge_tx_port_LEN_18_port, tx_len(17) => 
                           dsl_bridge_tx_port_LEN_17_port, tx_len(16) => 
                           dsl_bridge_tx_port_LEN_16_port, tx_len(15) => 
                           dsl_bridge_tx_port_LEN_15_port, tx_len(14) => 
                           dsl_bridge_tx_port_LEN_14_port, tx_len(13) => 
                           dsl_bridge_tx_port_LEN_13_port, tx_len(12) => 
                           dsl_bridge_tx_port_LEN_12_port, tx_len(11) => 
                           dsl_bridge_tx_port_LEN_11_port, tx_len(10) => 
                           dsl_bridge_tx_port_LEN_10_port, tx_len(9) => 
                           dsl_bridge_tx_port_LEN_9_port, tx_len(8) => 
                           dsl_bridge_tx_port_LEN_8_port, tx_len(7) => 
                           dsl_bridge_tx_port_LEN_7_port, tx_len(6) => 
                           dsl_bridge_tx_port_LEN_6_port, tx_len(5) => 
                           dsl_bridge_tx_port_LEN_5_port, tx_len(4) => 
                           dsl_bridge_tx_port_LEN_4_port, tx_len(3) => 
                           dsl_bridge_tx_port_LEN_3_port, tx_len(2) => 
                           dsl_bridge_tx_port_LEN_2_port, tx_len(1) => 
                           dsl_bridge_tx_port_LEN_1_port, tx_len(0) => 
                           dsl_bridge_tx_port_LEN_0_port);
   n1 <= '0';
   n2 <= '1';
   axi4s_tx_tuser(0) <= '0';
   axi4s_tx_tuser(1) <= '0';
   axi4s_tx_tuser(2) <= '0';
   axi4s_tx_tuser(3) <= '0';
   axi4s_tx_tid(0) <= '0';
   axi4s_tx_tid(1) <= '0';
   axi4s_tx_tid(2) <= '0';

end SYN_str;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_itag3a.all;

entity arm_lite_subsystem is

   port( clk, reset_b, irq, firq : in std_logic;  axi4s_tx_tdata : out 
         std_logic_vector (31 downto 0);  axi4s_tx_tstrb, axi4s_tx_tkeep : out 
         std_logic_vector (3 downto 0);  axi4s_tx_tvalid, axi4s_tx_tlast : out 
         std_logic;  axi4s_tx_tid : out std_logic_vector (2 downto 0);  
         axi4s_tx_tdest : out std_logic_vector (4 downto 0);  axi4s_tx_tuser : 
         out std_logic_vector (3 downto 0);  axi4s_tx_tready : in std_logic;  
         axi4s_rx_tdata : in std_logic_vector (31 downto 0);  axi4s_rx_tstrb, 
         axi4s_rx_tkeep : in std_logic_vector (3 downto 0);  axi4s_rx_tvalid, 
         axi4s_rx_tlast : in std_logic;  axi4s_rx_tid : in std_logic_vector (2 
         downto 0);  axi4s_rx_tdest : in std_logic_vector (4 downto 0);  
         axi4s_rx_tuser : in std_logic_vector (3 downto 0);  axi4s_rx_tready, 
         arm_cpuwait : out std_logic);

end arm_lite_subsystem;

architecture SYN_beh of arm_lite_subsystem is

   component arm_lite
      port( clk, reset_b, irq, firq : in std_logic;  axi4s_tx_tdata : out 
            std_logic_vector (31 downto 0);  axi4s_tx_tstrb, axi4s_tx_tkeep : 
            out std_logic_vector (3 downto 0);  axi4s_tx_tvalid, axi4s_tx_tlast
            : out std_logic;  axi4s_tx_tid : out std_logic_vector (2 downto 0);
            axi4s_tx_tdest : out std_logic_vector (4 downto 0);  axi4s_tx_tuser
            : out std_logic_vector (3 downto 0);  axi4s_tx_tready : in 
            std_logic;  axi4s_rx_tdata : in std_logic_vector (31 downto 0);  
            axi4s_rx_tstrb, axi4s_rx_tkeep : in std_logic_vector (3 downto 0); 
            axi4s_rx_tvalid, axi4s_rx_tlast : in std_logic;  axi4s_rx_tid : in 
            std_logic_vector (2 downto 0);  axi4s_rx_tdest : in 
            std_logic_vector (4 downto 0);  axi4s_rx_tuser : in 
            std_logic_vector (3 downto 0);  axi4s_rx_tready, o_cpuwait : out 
            std_logic);
   end component;
   
   signal n_1286, n_1287, n_1288, n_1289, n_1290, n_1291, n_1292 : std_logic;

begin
   
   i_arm_lite : arm_lite port map( clk => clk, reset_b => reset_b, irq => irq, 
                           firq => firq, axi4s_tx_tdata(31) => 
                           axi4s_tx_tdata(31), axi4s_tx_tdata(30) => 
                           axi4s_tx_tdata(30), axi4s_tx_tdata(29) => 
                           axi4s_tx_tdata(29), axi4s_tx_tdata(28) => 
                           axi4s_tx_tdata(28), axi4s_tx_tdata(27) => 
                           axi4s_tx_tdata(27), axi4s_tx_tdata(26) => 
                           axi4s_tx_tdata(26), axi4s_tx_tdata(25) => 
                           axi4s_tx_tdata(25), axi4s_tx_tdata(24) => 
                           axi4s_tx_tdata(24), axi4s_tx_tdata(23) => 
                           axi4s_tx_tdata(23), axi4s_tx_tdata(22) => 
                           axi4s_tx_tdata(22), axi4s_tx_tdata(21) => 
                           axi4s_tx_tdata(21), axi4s_tx_tdata(20) => 
                           axi4s_tx_tdata(20), axi4s_tx_tdata(19) => 
                           axi4s_tx_tdata(19), axi4s_tx_tdata(18) => 
                           axi4s_tx_tdata(18), axi4s_tx_tdata(17) => 
                           axi4s_tx_tdata(17), axi4s_tx_tdata(16) => 
                           axi4s_tx_tdata(16), axi4s_tx_tdata(15) => 
                           axi4s_tx_tdata(15), axi4s_tx_tdata(14) => 
                           axi4s_tx_tdata(14), axi4s_tx_tdata(13) => 
                           axi4s_tx_tdata(13), axi4s_tx_tdata(12) => 
                           axi4s_tx_tdata(12), axi4s_tx_tdata(11) => 
                           axi4s_tx_tdata(11), axi4s_tx_tdata(10) => 
                           axi4s_tx_tdata(10), axi4s_tx_tdata(9) => 
                           axi4s_tx_tdata(9), axi4s_tx_tdata(8) => 
                           axi4s_tx_tdata(8), axi4s_tx_tdata(7) => 
                           axi4s_tx_tdata(7), axi4s_tx_tdata(6) => 
                           axi4s_tx_tdata(6), axi4s_tx_tdata(5) => 
                           axi4s_tx_tdata(5), axi4s_tx_tdata(4) => 
                           axi4s_tx_tdata(4), axi4s_tx_tdata(3) => 
                           axi4s_tx_tdata(3), axi4s_tx_tdata(2) => 
                           axi4s_tx_tdata(2), axi4s_tx_tdata(1) => 
                           axi4s_tx_tdata(1), axi4s_tx_tdata(0) => 
                           axi4s_tx_tdata(0), axi4s_tx_tstrb(3) => 
                           axi4s_tx_tstrb(3), axi4s_tx_tstrb(2) => 
                           axi4s_tx_tstrb(2), axi4s_tx_tstrb(1) => 
                           axi4s_tx_tstrb(1), axi4s_tx_tstrb(0) => 
                           axi4s_tx_tstrb(0), axi4s_tx_tkeep(3) => 
                           axi4s_tx_tkeep(3), axi4s_tx_tkeep(2) => 
                           axi4s_tx_tkeep(2), axi4s_tx_tkeep(1) => 
                           axi4s_tx_tkeep(1), axi4s_tx_tkeep(0) => 
                           axi4s_tx_tkeep(0), axi4s_tx_tvalid => 
                           axi4s_tx_tvalid, axi4s_tx_tlast => axi4s_tx_tlast, 
                           axi4s_tx_tid(2) => n_1286, axi4s_tx_tid(1) => n_1287
                           , axi4s_tx_tid(0) => n_1288, axi4s_tx_tdest(4) => 
                           axi4s_tx_tdest(4), axi4s_tx_tdest(3) => 
                           axi4s_tx_tdest(3), axi4s_tx_tdest(2) => 
                           axi4s_tx_tdest(2), axi4s_tx_tdest(1) => 
                           axi4s_tx_tdest(1), axi4s_tx_tdest(0) => 
                           axi4s_tx_tdest(0), axi4s_tx_tuser(3) => n_1289, 
                           axi4s_tx_tuser(2) => n_1290, axi4s_tx_tuser(1) => 
                           n_1291, axi4s_tx_tuser(0) => n_1292, axi4s_tx_tready
                           => axi4s_tx_tready, axi4s_rx_tdata(31) => 
                           axi4s_rx_tdata(31), axi4s_rx_tdata(30) => 
                           axi4s_rx_tdata(30), axi4s_rx_tdata(29) => 
                           axi4s_rx_tdata(29), axi4s_rx_tdata(28) => 
                           axi4s_rx_tdata(28), axi4s_rx_tdata(27) => 
                           axi4s_rx_tdata(27), axi4s_rx_tdata(26) => 
                           axi4s_rx_tdata(26), axi4s_rx_tdata(25) => 
                           axi4s_rx_tdata(25), axi4s_rx_tdata(24) => 
                           axi4s_rx_tdata(24), axi4s_rx_tdata(23) => 
                           axi4s_rx_tdata(23), axi4s_rx_tdata(22) => 
                           axi4s_rx_tdata(22), axi4s_rx_tdata(21) => 
                           axi4s_rx_tdata(21), axi4s_rx_tdata(20) => 
                           axi4s_rx_tdata(20), axi4s_rx_tdata(19) => 
                           axi4s_rx_tdata(19), axi4s_rx_tdata(18) => 
                           axi4s_rx_tdata(18), axi4s_rx_tdata(17) => 
                           axi4s_rx_tdata(17), axi4s_rx_tdata(16) => 
                           axi4s_rx_tdata(16), axi4s_rx_tdata(15) => 
                           axi4s_rx_tdata(15), axi4s_rx_tdata(14) => 
                           axi4s_rx_tdata(14), axi4s_rx_tdata(13) => 
                           axi4s_rx_tdata(13), axi4s_rx_tdata(12) => 
                           axi4s_rx_tdata(12), axi4s_rx_tdata(11) => 
                           axi4s_rx_tdata(11), axi4s_rx_tdata(10) => 
                           axi4s_rx_tdata(10), axi4s_rx_tdata(9) => 
                           axi4s_rx_tdata(9), axi4s_rx_tdata(8) => 
                           axi4s_rx_tdata(8), axi4s_rx_tdata(7) => 
                           axi4s_rx_tdata(7), axi4s_rx_tdata(6) => 
                           axi4s_rx_tdata(6), axi4s_rx_tdata(5) => 
                           axi4s_rx_tdata(5), axi4s_rx_tdata(4) => 
                           axi4s_rx_tdata(4), axi4s_rx_tdata(3) => 
                           axi4s_rx_tdata(3), axi4s_rx_tdata(2) => 
                           axi4s_rx_tdata(2), axi4s_rx_tdata(1) => 
                           axi4s_rx_tdata(1), axi4s_rx_tdata(0) => 
                           axi4s_rx_tdata(0), axi4s_rx_tstrb(3) => 
                           axi4s_rx_tstrb(3), axi4s_rx_tstrb(2) => 
                           axi4s_rx_tstrb(2), axi4s_rx_tstrb(1) => 
                           axi4s_rx_tstrb(1), axi4s_rx_tstrb(0) => 
                           axi4s_rx_tstrb(0), axi4s_rx_tkeep(3) => 
                           axi4s_rx_tkeep(3), axi4s_rx_tkeep(2) => 
                           axi4s_rx_tkeep(2), axi4s_rx_tkeep(1) => 
                           axi4s_rx_tkeep(1), axi4s_rx_tkeep(0) => 
                           axi4s_rx_tkeep(0), axi4s_rx_tvalid => 
                           axi4s_rx_tvalid, axi4s_rx_tlast => axi4s_rx_tlast, 
                           axi4s_rx_tid(2) => axi4s_rx_tid(2), axi4s_rx_tid(1) 
                           => axi4s_rx_tid(1), axi4s_rx_tid(0) => 
                           axi4s_rx_tid(0), axi4s_rx_tdest(4) => 
                           axi4s_rx_tdest(4), axi4s_rx_tdest(3) => 
                           axi4s_rx_tdest(3), axi4s_rx_tdest(2) => 
                           axi4s_rx_tdest(2), axi4s_rx_tdest(1) => 
                           axi4s_rx_tdest(1), axi4s_rx_tdest(0) => 
                           axi4s_rx_tdest(0), axi4s_rx_tuser(3) => 
                           axi4s_rx_tuser(3), axi4s_rx_tuser(2) => 
                           axi4s_rx_tuser(2), axi4s_rx_tuser(1) => 
                           axi4s_rx_tuser(1), axi4s_rx_tuser(0) => 
                           axi4s_rx_tuser(0), axi4s_rx_tready => 
                           axi4s_rx_tready, o_cpuwait => arm_cpuwait);
   axi4s_tx_tuser(0) <= '0';
   axi4s_tx_tuser(1) <= '0';
   axi4s_tx_tuser(2) <= '0';
   axi4s_tx_tuser(3) <= '0';
   axi4s_tx_tid(0) <= '0';
   axi4s_tx_tid(1) <= '0';
   axi4s_tx_tid(2) <= '0';

end SYN_beh;

library IEEE;

use IEEE.std_logic_1164.all;

use work.CONV_PACK_itag3a.all;

entity itag3a is

   port( CLK, RESET_B, RESET_ARM_B, RESET_MEM_B, RESET_PERIPH_B, RESET_CRYPTO_B
         : in std_logic;  MEM_DATA_IN : in std_logic_vector (31 downto 0);  
         MEM_DATA_OUT : out std_logic_vector (31 downto 0);  MEM_DATA_BE : out 
         std_logic_vector (3 downto 0);  MEM_ADDR : out std_logic_vector (27 
         downto 0);  MEM_RD_EN, MEM_WR_EN : out std_logic;  MEM_ACK, UART_IN : 
         in std_logic;  UART_OUT : out std_logic);

end itag3a;

architecture SYN_beh of itag3a is

   component GTECH_NAND2
      port( A, B : in std_logic;  Z : out std_logic);
   end component;
   
   component GTECH_NOT
      port( A : in std_logic;  Z : out std_logic);
   end component;
   
   component axi4s_switch_wrapper
      port( SYS2AXI_0_TDATA : in std_logic_vector (31 downto 0);  
            SYS2AXI_0_TSTRB, SYS2AXI_0_TKEEP : in std_logic_vector (3 downto 0)
            ;  SYS2AXI_0_TVALID, SYS2AXI_0_TLAST : in std_logic;  SYS2AXI_0_TID
            : in std_logic_vector (2 downto 0);  SYS2AXI_0_TDEST : in 
            std_logic_vector (4 downto 0);  SYS2AXI_0_TUSER : in 
            std_logic_vector (3 downto 0);  SYS2AXI_0_TREADY : out std_logic;  
            SYS2AXI_1_TDATA : in std_logic_vector (31 downto 0);  
            SYS2AXI_1_TSTRB, SYS2AXI_1_TKEEP : in std_logic_vector (3 downto 0)
            ;  SYS2AXI_1_TVALID, SYS2AXI_1_TLAST : in std_logic;  SYS2AXI_1_TID
            : in std_logic_vector (2 downto 0);  SYS2AXI_1_TDEST : in 
            std_logic_vector (4 downto 0);  SYS2AXI_1_TUSER : in 
            std_logic_vector (3 downto 0);  SYS2AXI_1_TREADY : out std_logic;  
            SYS2AXI_2_TDATA : in std_logic_vector (31 downto 0);  
            SYS2AXI_2_TSTRB, SYS2AXI_2_TKEEP : in std_logic_vector (3 downto 0)
            ;  SYS2AXI_2_TVALID, SYS2AXI_2_TLAST : in std_logic;  SYS2AXI_2_TID
            : in std_logic_vector (2 downto 0);  SYS2AXI_2_TDEST : in 
            std_logic_vector (4 downto 0);  SYS2AXI_2_TUSER : in 
            std_logic_vector (3 downto 0);  SYS2AXI_2_TREADY : out std_logic;  
            SYS2AXI_3_TDATA : in std_logic_vector (31 downto 0);  
            SYS2AXI_3_TSTRB, SYS2AXI_3_TKEEP : in std_logic_vector (3 downto 0)
            ;  SYS2AXI_3_TVALID, SYS2AXI_3_TLAST : in std_logic;  SYS2AXI_3_TID
            : in std_logic_vector (2 downto 0);  SYS2AXI_3_TDEST : in 
            std_logic_vector (4 downto 0);  SYS2AXI_3_TUSER : in 
            std_logic_vector (3 downto 0);  SYS2AXI_3_TREADY : out std_logic;  
            AXI2SYS_0_TDATA : out std_logic_vector (31 downto 0);  
            AXI2SYS_0_TSTRB, AXI2SYS_0_TKEEP : out std_logic_vector (3 downto 
            0);  AXI2SYS_0_TVALID, AXI2SYS_0_TLAST : out std_logic;  
            AXI2SYS_0_TID : out std_logic_vector (2 downto 0);  AXI2SYS_0_TDEST
            : out std_logic_vector (4 downto 0);  AXI2SYS_0_TUSER : out 
            std_logic_vector (3 downto 0);  AXI2SYS_0_TREADY : in std_logic;  
            AXI2SYS_1_TDATA : out std_logic_vector (31 downto 0);  
            AXI2SYS_1_TSTRB, AXI2SYS_1_TKEEP : out std_logic_vector (3 downto 
            0);  AXI2SYS_1_TVALID, AXI2SYS_1_TLAST : out std_logic;  
            AXI2SYS_1_TID : out std_logic_vector (2 downto 0);  AXI2SYS_1_TDEST
            : out std_logic_vector (4 downto 0);  AXI2SYS_1_TUSER : out 
            std_logic_vector (3 downto 0);  AXI2SYS_1_TREADY : in std_logic;  
            AXI2SYS_2_TDATA : out std_logic_vector (31 downto 0);  
            AXI2SYS_2_TSTRB, AXI2SYS_2_TKEEP : out std_logic_vector (3 downto 
            0);  AXI2SYS_2_TVALID, AXI2SYS_2_TLAST : out std_logic;  
            AXI2SYS_2_TID : out std_logic_vector (2 downto 0);  AXI2SYS_2_TDEST
            : out std_logic_vector (4 downto 0);  AXI2SYS_2_TUSER : out 
            std_logic_vector (3 downto 0);  AXI2SYS_2_TREADY : in std_logic;  
            AXI2SYS_3_TDATA : out std_logic_vector (31 downto 0);  
            AXI2SYS_3_TSTRB, AXI2SYS_3_TKEEP : out std_logic_vector (3 downto 
            0);  AXI2SYS_3_TVALID, AXI2SYS_3_TLAST : out std_logic;  
            AXI2SYS_3_TID : out std_logic_vector (2 downto 0);  AXI2SYS_3_TDEST
            : out std_logic_vector (4 downto 0);  AXI2SYS_3_TUSER : out 
            std_logic_vector (3 downto 0);  AXI2SYS_3_TREADY, clk, rst : in 
            std_logic);
   end component;
   
   component crypto_subsystem
      port( clk, reset_b : in std_logic;  axi4s_tx_tdata : out std_logic_vector
            (31 downto 0);  axi4s_tx_tstrb, axi4s_tx_tkeep : out 
            std_logic_vector (3 downto 0);  axi4s_tx_tvalid, axi4s_tx_tlast : 
            out std_logic;  axi4s_tx_tid : out std_logic_vector (2 downto 0);  
            axi4s_tx_tdest : out std_logic_vector (4 downto 0);  axi4s_tx_tuser
            : out std_logic_vector (3 downto 0);  axi4s_tx_tready : in 
            std_logic;  axi4s_rx_tdata : in std_logic_vector (31 downto 0);  
            axi4s_rx_tstrb, axi4s_rx_tkeep : in std_logic_vector (3 downto 0); 
            axi4s_rx_tvalid, axi4s_rx_tlast : in std_logic;  axi4s_rx_tid : in 
            std_logic_vector (2 downto 0);  axi4s_rx_tdest : in 
            std_logic_vector (4 downto 0);  axi4s_rx_tuser : in 
            std_logic_vector (3 downto 0);  axi4s_rx_tready : out std_logic;  
            arm_cpuwait : in std_logic);
   end component;
   
   component peripheral_subsystem
      port( clk, reset_b : in std_logic;  axi4s_tx_tdata : out std_logic_vector
            (31 downto 0);  axi4s_tx_tstrb, axi4s_tx_tkeep : out 
            std_logic_vector (3 downto 0);  axi4s_tx_tvalid, axi4s_tx_tlast : 
            out std_logic;  axi4s_tx_tid : out std_logic_vector (2 downto 0);  
            axi4s_tx_tdest : out std_logic_vector (4 downto 0);  axi4s_tx_tuser
            : out std_logic_vector (3 downto 0);  axi4s_tx_tready : in 
            std_logic;  axi4s_rx_tdata : in std_logic_vector (31 downto 0);  
            axi4s_rx_tstrb, axi4s_rx_tkeep : in std_logic_vector (3 downto 0); 
            axi4s_rx_tvalid, axi4s_rx_tlast : in std_logic;  axi4s_rx_tid : in 
            std_logic_vector (2 downto 0);  axi4s_rx_tdest : in 
            std_logic_vector (4 downto 0);  axi4s_rx_tuser : in 
            std_logic_vector (3 downto 0);  axi4s_rx_tready : out std_logic;  
            serial_in : in std_logic;  serial_out, baud_clk, o_irq, o_firq : 
            out std_logic;  i_ethmac_int, i_test_reg_irq, i_test_reg_firq : in 
            std_logic);
   end component;
   
   component memory_subsystem
      port( clk, reset_b : in std_logic;  axi4s_tx_tdata : out std_logic_vector
            (31 downto 0);  axi4s_tx_tstrb, axi4s_tx_tkeep : out 
            std_logic_vector (3 downto 0);  axi4s_tx_tvalid, axi4s_tx_tlast : 
            out std_logic;  axi4s_tx_tid : out std_logic_vector (2 downto 0);  
            axi4s_tx_tdest : out std_logic_vector (4 downto 0);  axi4s_tx_tuser
            : out std_logic_vector (3 downto 0);  axi4s_tx_tready : in 
            std_logic;  axi4s_rx_tdata : in std_logic_vector (31 downto 0);  
            axi4s_rx_tstrb, axi4s_rx_tkeep : in std_logic_vector (3 downto 0); 
            axi4s_rx_tvalid, axi4s_rx_tlast : in std_logic;  axi4s_rx_tid : in 
            std_logic_vector (2 downto 0);  axi4s_rx_tdest : in 
            std_logic_vector (4 downto 0);  axi4s_rx_tuser : in 
            std_logic_vector (3 downto 0);  axi4s_rx_tready : out std_logic;  
            mem_addr : out std_logic_vector (27 downto 0);  mem_rd_en, 
            mem_wr_en : out std_logic;  mem_data_in : in std_logic_vector (31 
            downto 0);  mem_data_out : out std_logic_vector (31 downto 0);  
            mem_data_be : out std_logic_vector (3 downto 0);  ack : in 
            std_logic);
   end component;
   
   component arm_lite_subsystem
      port( clk, reset_b, irq, firq : in std_logic;  axi4s_tx_tdata : out 
            std_logic_vector (31 downto 0);  axi4s_tx_tstrb, axi4s_tx_tkeep : 
            out std_logic_vector (3 downto 0);  axi4s_tx_tvalid, axi4s_tx_tlast
            : out std_logic;  axi4s_tx_tid : out std_logic_vector (2 downto 0);
            axi4s_tx_tdest : out std_logic_vector (4 downto 0);  axi4s_tx_tuser
            : out std_logic_vector (3 downto 0);  axi4s_tx_tready : in 
            std_logic;  axi4s_rx_tdata : in std_logic_vector (31 downto 0);  
            axi4s_rx_tstrb, axi4s_rx_tkeep : in std_logic_vector (3 downto 0); 
            axi4s_rx_tvalid, axi4s_rx_tlast : in std_logic;  axi4s_rx_tid : in 
            std_logic_vector (2 downto 0);  axi4s_rx_tdest : in 
            std_logic_vector (4 downto 0);  axi4s_rx_tuser : in 
            std_logic_vector (3 downto 0);  axi4s_rx_tready, arm_cpuwait : out 
            std_logic);
   end component;
   
   signal X_Logic0_port, arm_irq, arm_firq, arm_axi_tx_tdata_31_port, 
      arm_axi_tx_tdata_30_port, arm_axi_tx_tdata_29_port, 
      arm_axi_tx_tdata_28_port, arm_axi_tx_tdata_27_port, 
      arm_axi_tx_tdata_26_port, arm_axi_tx_tdata_25_port, 
      arm_axi_tx_tdata_24_port, arm_axi_tx_tdata_23_port, 
      arm_axi_tx_tdata_22_port, arm_axi_tx_tdata_21_port, 
      arm_axi_tx_tdata_20_port, arm_axi_tx_tdata_19_port, 
      arm_axi_tx_tdata_18_port, arm_axi_tx_tdata_17_port, 
      arm_axi_tx_tdata_16_port, arm_axi_tx_tdata_15_port, 
      arm_axi_tx_tdata_14_port, arm_axi_tx_tdata_13_port, 
      arm_axi_tx_tdata_12_port, arm_axi_tx_tdata_11_port, 
      arm_axi_tx_tdata_10_port, arm_axi_tx_tdata_9_port, 
      arm_axi_tx_tdata_8_port, arm_axi_tx_tdata_7_port, arm_axi_tx_tdata_6_port
      , arm_axi_tx_tdata_5_port, arm_axi_tx_tdata_4_port, 
      arm_axi_tx_tdata_3_port, arm_axi_tx_tdata_2_port, arm_axi_tx_tdata_1_port
      , arm_axi_tx_tdata_0_port, arm_axi_tx_tstrb_3_port, 
      arm_axi_tx_tstrb_2_port, arm_axi_tx_tstrb_1_port, arm_axi_tx_tstrb_0_port
      , arm_axi_tx_tkeep_3_port, arm_axi_tx_tkeep_2_port, 
      arm_axi_tx_tkeep_1_port, arm_axi_tx_tkeep_0_port, arm_axi_tx_tvalid, 
      arm_axi_tx_tlast, arm_axi_tx_tdest_4_port, arm_axi_tx_tdest_3_port, 
      arm_axi_tx_tdest_2_port, arm_axi_tx_tdest_1_port, arm_axi_tx_tdest_0_port
      , axi_arm_tx_tready, axi_arm_rx_tdata_31_port, axi_arm_rx_tdata_30_port, 
      axi_arm_rx_tdata_29_port, axi_arm_rx_tdata_28_port, 
      axi_arm_rx_tdata_27_port, axi_arm_rx_tdata_26_port, 
      axi_arm_rx_tdata_25_port, axi_arm_rx_tdata_24_port, 
      axi_arm_rx_tdata_23_port, axi_arm_rx_tdata_22_port, 
      axi_arm_rx_tdata_21_port, axi_arm_rx_tdata_20_port, 
      axi_arm_rx_tdata_19_port, axi_arm_rx_tdata_18_port, 
      axi_arm_rx_tdata_17_port, axi_arm_rx_tdata_16_port, 
      axi_arm_rx_tdata_15_port, axi_arm_rx_tdata_14_port, 
      axi_arm_rx_tdata_13_port, axi_arm_rx_tdata_12_port, 
      axi_arm_rx_tdata_11_port, axi_arm_rx_tdata_10_port, 
      axi_arm_rx_tdata_9_port, axi_arm_rx_tdata_8_port, axi_arm_rx_tdata_7_port
      , axi_arm_rx_tdata_6_port, axi_arm_rx_tdata_5_port, 
      axi_arm_rx_tdata_4_port, axi_arm_rx_tdata_3_port, axi_arm_rx_tdata_2_port
      , axi_arm_rx_tdata_1_port, axi_arm_rx_tdata_0_port, 
      axi_arm_rx_tstrb_3_port, axi_arm_rx_tstrb_2_port, axi_arm_rx_tstrb_1_port
      , axi_arm_rx_tstrb_0_port, axi_arm_rx_tkeep_3_port, 
      axi_arm_rx_tkeep_2_port, axi_arm_rx_tkeep_1_port, axi_arm_rx_tkeep_0_port
      , axi_arm_rx_tvalid, axi_arm_rx_tlast, axi_arm_rx_tid_2_port, 
      axi_arm_rx_tid_1_port, axi_arm_rx_tid_0_port, axi_arm_rx_tdest_4_port, 
      axi_arm_rx_tdest_3_port, axi_arm_rx_tdest_2_port, axi_arm_rx_tdest_1_port
      , axi_arm_rx_tdest_0_port, axi_arm_rx_tuser_3_port, 
      axi_arm_rx_tuser_2_port, axi_arm_rx_tuser_1_port, axi_arm_rx_tuser_0_port
      , arm_axi_rx_tready, arm_cpuwait, periph_axi_tx_tdata_31_port, 
      periph_axi_tx_tdata_30_port, periph_axi_tx_tdata_29_port, 
      periph_axi_tx_tdata_28_port, periph_axi_tx_tdata_27_port, 
      periph_axi_tx_tdata_26_port, periph_axi_tx_tdata_25_port, 
      periph_axi_tx_tdata_24_port, periph_axi_tx_tdata_23_port, 
      periph_axi_tx_tdata_22_port, periph_axi_tx_tdata_21_port, 
      periph_axi_tx_tdata_20_port, periph_axi_tx_tdata_19_port, 
      periph_axi_tx_tdata_18_port, periph_axi_tx_tdata_17_port, 
      periph_axi_tx_tdata_16_port, periph_axi_tx_tdata_15_port, 
      periph_axi_tx_tdata_14_port, periph_axi_tx_tdata_13_port, 
      periph_axi_tx_tdata_12_port, periph_axi_tx_tdata_11_port, 
      periph_axi_tx_tdata_10_port, periph_axi_tx_tdata_9_port, 
      periph_axi_tx_tdata_8_port, periph_axi_tx_tdata_7_port, 
      periph_axi_tx_tdata_6_port, periph_axi_tx_tdata_5_port, 
      periph_axi_tx_tdata_4_port, periph_axi_tx_tdata_3_port, 
      periph_axi_tx_tdata_2_port, periph_axi_tx_tdata_1_port, 
      periph_axi_tx_tdata_0_port, periph_axi_tx_tstrb_3_port, 
      periph_axi_tx_tstrb_2_port, periph_axi_tx_tstrb_1_port, 
      periph_axi_tx_tstrb_0_port, periph_axi_tx_tkeep_3_port, 
      periph_axi_tx_tkeep_2_port, periph_axi_tx_tkeep_1_port, 
      periph_axi_tx_tkeep_0_port, periph_axi_tx_tvalid, periph_axi_tx_tlast, 
      periph_axi_tx_tid_2_port, periph_axi_tx_tid_1_port, 
      periph_axi_tx_tid_0_port, periph_axi_tx_tdest_4_port, 
      periph_axi_tx_tdest_3_port, periph_axi_tx_tdest_2_port, 
      periph_axi_tx_tdest_1_port, periph_axi_tx_tdest_0_port, 
      periph_axi_tx_tuser_3_port, periph_axi_tx_tuser_2_port, 
      periph_axi_tx_tuser_1_port, periph_axi_tx_tuser_0_port, 
      axi_periph_tx_tready, axi_periph_rx_tdata_31_port, 
      axi_periph_rx_tdata_30_port, axi_periph_rx_tdata_29_port, 
      axi_periph_rx_tdata_28_port, axi_periph_rx_tdata_27_port, 
      axi_periph_rx_tdata_26_port, axi_periph_rx_tdata_25_port, 
      axi_periph_rx_tdata_24_port, axi_periph_rx_tdata_23_port, 
      axi_periph_rx_tdata_22_port, axi_periph_rx_tdata_21_port, 
      axi_periph_rx_tdata_20_port, axi_periph_rx_tdata_19_port, 
      axi_periph_rx_tdata_18_port, axi_periph_rx_tdata_17_port, 
      axi_periph_rx_tdata_16_port, axi_periph_rx_tdata_15_port, 
      axi_periph_rx_tdata_14_port, axi_periph_rx_tdata_13_port, 
      axi_periph_rx_tdata_12_port, axi_periph_rx_tdata_11_port, 
      axi_periph_rx_tdata_10_port, axi_periph_rx_tdata_9_port, 
      axi_periph_rx_tdata_8_port, axi_periph_rx_tdata_7_port, 
      axi_periph_rx_tdata_6_port, axi_periph_rx_tdata_5_port, 
      axi_periph_rx_tdata_4_port, axi_periph_rx_tdata_3_port, 
      axi_periph_rx_tdata_2_port, axi_periph_rx_tdata_1_port, 
      axi_periph_rx_tdata_0_port, axi_periph_rx_tstrb_3_port, 
      axi_periph_rx_tstrb_2_port, axi_periph_rx_tstrb_1_port, 
      axi_periph_rx_tstrb_0_port, axi_periph_rx_tkeep_3_port, 
      axi_periph_rx_tkeep_2_port, axi_periph_rx_tkeep_1_port, 
      axi_periph_rx_tkeep_0_port, axi_periph_rx_tvalid, axi_periph_rx_tlast, 
      axi_periph_rx_tid_2_port, axi_periph_rx_tid_1_port, 
      axi_periph_rx_tid_0_port, axi_periph_rx_tdest_4_port, 
      axi_periph_rx_tdest_3_port, axi_periph_rx_tdest_2_port, 
      axi_periph_rx_tdest_1_port, axi_periph_rx_tdest_0_port, 
      axi_periph_rx_tuser_3_port, axi_periph_rx_tuser_2_port, 
      axi_periph_rx_tuser_1_port, axi_periph_rx_tuser_0_port, 
      periph_axi_rx_tready, crypto_axi_tx_tdata_31_port, 
      crypto_axi_tx_tdata_30_port, crypto_axi_tx_tdata_29_port, 
      crypto_axi_tx_tdata_28_port, crypto_axi_tx_tdata_27_port, 
      crypto_axi_tx_tdata_26_port, crypto_axi_tx_tdata_25_port, 
      crypto_axi_tx_tdata_24_port, crypto_axi_tx_tdata_23_port, 
      crypto_axi_tx_tdata_22_port, crypto_axi_tx_tdata_21_port, 
      crypto_axi_tx_tdata_20_port, crypto_axi_tx_tdata_19_port, 
      crypto_axi_tx_tdata_18_port, crypto_axi_tx_tdata_17_port, 
      crypto_axi_tx_tdata_16_port, crypto_axi_tx_tdata_15_port, 
      crypto_axi_tx_tdata_14_port, crypto_axi_tx_tdata_13_port, 
      crypto_axi_tx_tdata_12_port, crypto_axi_tx_tdata_11_port, 
      crypto_axi_tx_tdata_10_port, crypto_axi_tx_tdata_9_port, 
      crypto_axi_tx_tdata_8_port, crypto_axi_tx_tdata_7_port, 
      crypto_axi_tx_tdata_6_port, crypto_axi_tx_tdata_5_port, 
      crypto_axi_tx_tdata_4_port, crypto_axi_tx_tdata_3_port, 
      crypto_axi_tx_tdata_2_port, crypto_axi_tx_tdata_1_port, 
      crypto_axi_tx_tdata_0_port, crypto_axi_tx_tstrb_3_port, 
      crypto_axi_tx_tstrb_2_port, crypto_axi_tx_tstrb_1_port, 
      crypto_axi_tx_tstrb_0_port, crypto_axi_tx_tkeep_3_port, 
      crypto_axi_tx_tkeep_2_port, crypto_axi_tx_tkeep_1_port, 
      crypto_axi_tx_tkeep_0_port, crypto_axi_tx_tvalid, crypto_axi_tx_tlast, 
      crypto_axi_tx_tid_2_port, crypto_axi_tx_tid_1_port, 
      crypto_axi_tx_tid_0_port, crypto_axi_tx_tdest_4_port, 
      crypto_axi_tx_tdest_3_port, crypto_axi_tx_tdest_2_port, 
      crypto_axi_tx_tdest_1_port, crypto_axi_tx_tdest_0_port, 
      crypto_axi_tx_tuser_3_port, crypto_axi_tx_tuser_2_port, 
      crypto_axi_tx_tuser_1_port, crypto_axi_tx_tuser_0_port, 
      axi_crypto_tx_tready, axi_crypto_rx_tdata_31_port, 
      axi_crypto_rx_tdata_30_port, axi_crypto_rx_tdata_29_port, 
      axi_crypto_rx_tdata_28_port, axi_crypto_rx_tdata_27_port, 
      axi_crypto_rx_tdata_26_port, axi_crypto_rx_tdata_25_port, 
      axi_crypto_rx_tdata_24_port, axi_crypto_rx_tdata_23_port, 
      axi_crypto_rx_tdata_22_port, axi_crypto_rx_tdata_21_port, 
      axi_crypto_rx_tdata_20_port, axi_crypto_rx_tdata_19_port, 
      axi_crypto_rx_tdata_18_port, axi_crypto_rx_tdata_17_port, 
      axi_crypto_rx_tdata_16_port, axi_crypto_rx_tdata_15_port, 
      axi_crypto_rx_tdata_14_port, axi_crypto_rx_tdata_13_port, 
      axi_crypto_rx_tdata_12_port, axi_crypto_rx_tdata_11_port, 
      axi_crypto_rx_tdata_10_port, axi_crypto_rx_tdata_9_port, 
      axi_crypto_rx_tdata_8_port, axi_crypto_rx_tdata_7_port, 
      axi_crypto_rx_tdata_6_port, axi_crypto_rx_tdata_5_port, 
      axi_crypto_rx_tdata_4_port, axi_crypto_rx_tdata_3_port, 
      axi_crypto_rx_tdata_2_port, axi_crypto_rx_tdata_1_port, 
      axi_crypto_rx_tdata_0_port, axi_crypto_rx_tstrb_3_port, 
      axi_crypto_rx_tstrb_2_port, axi_crypto_rx_tstrb_1_port, 
      axi_crypto_rx_tstrb_0_port, axi_crypto_rx_tkeep_3_port, 
      axi_crypto_rx_tkeep_2_port, axi_crypto_rx_tkeep_1_port, 
      axi_crypto_rx_tkeep_0_port, axi_crypto_rx_tvalid, axi_crypto_rx_tlast, 
      axi_crypto_rx_tid_2_port, axi_crypto_rx_tid_1_port, 
      axi_crypto_rx_tid_0_port, axi_crypto_rx_tdest_4_port, 
      axi_crypto_rx_tdest_3_port, axi_crypto_rx_tdest_2_port, 
      axi_crypto_rx_tdest_1_port, axi_crypto_rx_tdest_0_port, 
      axi_crypto_rx_tuser_3_port, axi_crypto_rx_tuser_2_port, 
      axi_crypto_rx_tuser_1_port, axi_crypto_rx_tuser_0_port, 
      crypto_axi_rx_tready, mem_axi_tx_tvalid, mem_axi_tx_tuser_3_port, 
      mem_axi_tx_tuser_2_port, mem_axi_tx_tuser_1_port, mem_axi_tx_tuser_0_port
      , mem_axi_tx_tstrb_3_port, mem_axi_tx_tstrb_2_port, 
      mem_axi_tx_tstrb_1_port, mem_axi_tx_tstrb_0_port, mem_axi_tx_tlast, 
      mem_axi_tx_tkeep_3_port, mem_axi_tx_tkeep_2_port, mem_axi_tx_tkeep_1_port
      , mem_axi_tx_tkeep_0_port, mem_axi_tx_tid_2_port, mem_axi_tx_tid_1_port, 
      mem_axi_tx_tid_0_port, mem_axi_tx_tdest_4_port, mem_axi_tx_tdest_3_port, 
      mem_axi_tx_tdest_2_port, mem_axi_tx_tdest_1_port, mem_axi_tx_tdest_0_port
      , mem_axi_tx_tdata_9_port, mem_axi_tx_tdata_8_port, 
      mem_axi_tx_tdata_7_port, mem_axi_tx_tdata_6_port, mem_axi_tx_tdata_5_port
      , mem_axi_tx_tdata_4_port, mem_axi_tx_tdata_3_port, 
      mem_axi_tx_tdata_31_port, mem_axi_tx_tdata_30_port, 
      mem_axi_tx_tdata_2_port, mem_axi_tx_tdata_29_port, 
      mem_axi_tx_tdata_28_port, mem_axi_tx_tdata_27_port, 
      mem_axi_tx_tdata_26_port, mem_axi_tx_tdata_25_port, 
      mem_axi_tx_tdata_24_port, mem_axi_tx_tdata_23_port, 
      mem_axi_tx_tdata_22_port, mem_axi_tx_tdata_21_port, 
      mem_axi_tx_tdata_20_port, mem_axi_tx_tdata_1_port, 
      mem_axi_tx_tdata_19_port, mem_axi_tx_tdata_18_port, 
      mem_axi_tx_tdata_17_port, mem_axi_tx_tdata_16_port, 
      mem_axi_tx_tdata_15_port, mem_axi_tx_tdata_14_port, 
      mem_axi_tx_tdata_13_port, mem_axi_tx_tdata_12_port, 
      mem_axi_tx_tdata_11_port, mem_axi_tx_tdata_10_port, 
      mem_axi_tx_tdata_0_port, mem_axi_rx_tready, axi_mem_tx_tready, 
      axi_mem_rx_tvalid, axi_mem_rx_tuser_3_port, axi_mem_rx_tuser_2_port, 
      axi_mem_rx_tuser_1_port, axi_mem_rx_tuser_0_port, axi_mem_rx_tstrb_3_port
      , axi_mem_rx_tstrb_2_port, axi_mem_rx_tstrb_1_port, 
      axi_mem_rx_tstrb_0_port, axi_mem_rx_tlast, axi_mem_rx_tkeep_3_port, 
      axi_mem_rx_tkeep_2_port, axi_mem_rx_tkeep_1_port, axi_mem_rx_tkeep_0_port
      , axi_mem_rx_tid_2_port, axi_mem_rx_tid_1_port, axi_mem_rx_tid_0_port, 
      axi_mem_rx_tdest_4_port, axi_mem_rx_tdest_3_port, axi_mem_rx_tdest_2_port
      , axi_mem_rx_tdest_1_port, axi_mem_rx_tdest_0_port, 
      axi_mem_rx_tdata_9_port, axi_mem_rx_tdata_8_port, axi_mem_rx_tdata_7_port
      , axi_mem_rx_tdata_6_port, axi_mem_rx_tdata_5_port, 
      axi_mem_rx_tdata_4_port, axi_mem_rx_tdata_3_port, 
      axi_mem_rx_tdata_31_port, axi_mem_rx_tdata_30_port, 
      axi_mem_rx_tdata_2_port, axi_mem_rx_tdata_29_port, 
      axi_mem_rx_tdata_28_port, axi_mem_rx_tdata_27_port, 
      axi_mem_rx_tdata_26_port, axi_mem_rx_tdata_25_port, 
      axi_mem_rx_tdata_24_port, axi_mem_rx_tdata_23_port, 
      axi_mem_rx_tdata_22_port, axi_mem_rx_tdata_21_port, 
      axi_mem_rx_tdata_20_port, axi_mem_rx_tdata_1_port, 
      axi_mem_rx_tdata_19_port, axi_mem_rx_tdata_18_port, 
      axi_mem_rx_tdata_17_port, axi_mem_rx_tdata_16_port, 
      axi_mem_rx_tdata_15_port, axi_mem_rx_tdata_14_port, 
      axi_mem_rx_tdata_13_port, axi_mem_rx_tdata_12_port, 
      axi_mem_rx_tdata_11_port, axi_mem_rx_tdata_10_port, 
      axi_mem_rx_tdata_0_port, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19
      , n_1293, n_1294, n_1295, n_1296, n_1297, n_1298, n_1299, n_1300, n_1301,
      n_1302, n_1303, n_1304, n_1305, n_1306, n_1307 : std_logic;

begin
   
   X_Logic0_port <= '0';
   i_arm : arm_lite_subsystem port map( clk => CLK, reset_b => n19, irq => 
                           arm_irq, firq => arm_firq, axi4s_tx_tdata(31) => 
                           arm_axi_tx_tdata_31_port, axi4s_tx_tdata(30) => 
                           arm_axi_tx_tdata_30_port, axi4s_tx_tdata(29) => 
                           arm_axi_tx_tdata_29_port, axi4s_tx_tdata(28) => 
                           arm_axi_tx_tdata_28_port, axi4s_tx_tdata(27) => 
                           arm_axi_tx_tdata_27_port, axi4s_tx_tdata(26) => 
                           arm_axi_tx_tdata_26_port, axi4s_tx_tdata(25) => 
                           arm_axi_tx_tdata_25_port, axi4s_tx_tdata(24) => 
                           arm_axi_tx_tdata_24_port, axi4s_tx_tdata(23) => 
                           arm_axi_tx_tdata_23_port, axi4s_tx_tdata(22) => 
                           arm_axi_tx_tdata_22_port, axi4s_tx_tdata(21) => 
                           arm_axi_tx_tdata_21_port, axi4s_tx_tdata(20) => 
                           arm_axi_tx_tdata_20_port, axi4s_tx_tdata(19) => 
                           arm_axi_tx_tdata_19_port, axi4s_tx_tdata(18) => 
                           arm_axi_tx_tdata_18_port, axi4s_tx_tdata(17) => 
                           arm_axi_tx_tdata_17_port, axi4s_tx_tdata(16) => 
                           arm_axi_tx_tdata_16_port, axi4s_tx_tdata(15) => 
                           arm_axi_tx_tdata_15_port, axi4s_tx_tdata(14) => 
                           arm_axi_tx_tdata_14_port, axi4s_tx_tdata(13) => 
                           arm_axi_tx_tdata_13_port, axi4s_tx_tdata(12) => 
                           arm_axi_tx_tdata_12_port, axi4s_tx_tdata(11) => 
                           arm_axi_tx_tdata_11_port, axi4s_tx_tdata(10) => 
                           arm_axi_tx_tdata_10_port, axi4s_tx_tdata(9) => 
                           arm_axi_tx_tdata_9_port, axi4s_tx_tdata(8) => 
                           arm_axi_tx_tdata_8_port, axi4s_tx_tdata(7) => 
                           arm_axi_tx_tdata_7_port, axi4s_tx_tdata(6) => 
                           arm_axi_tx_tdata_6_port, axi4s_tx_tdata(5) => 
                           arm_axi_tx_tdata_5_port, axi4s_tx_tdata(4) => 
                           arm_axi_tx_tdata_4_port, axi4s_tx_tdata(3) => 
                           arm_axi_tx_tdata_3_port, axi4s_tx_tdata(2) => 
                           arm_axi_tx_tdata_2_port, axi4s_tx_tdata(1) => 
                           arm_axi_tx_tdata_1_port, axi4s_tx_tdata(0) => 
                           arm_axi_tx_tdata_0_port, axi4s_tx_tstrb(3) => 
                           arm_axi_tx_tstrb_3_port, axi4s_tx_tstrb(2) => 
                           arm_axi_tx_tstrb_2_port, axi4s_tx_tstrb(1) => 
                           arm_axi_tx_tstrb_1_port, axi4s_tx_tstrb(0) => 
                           arm_axi_tx_tstrb_0_port, axi4s_tx_tkeep(3) => 
                           arm_axi_tx_tkeep_3_port, axi4s_tx_tkeep(2) => 
                           arm_axi_tx_tkeep_2_port, axi4s_tx_tkeep(1) => 
                           arm_axi_tx_tkeep_1_port, axi4s_tx_tkeep(0) => 
                           arm_axi_tx_tkeep_0_port, axi4s_tx_tvalid => 
                           arm_axi_tx_tvalid, axi4s_tx_tlast => 
                           arm_axi_tx_tlast, axi4s_tx_tid(2) => n_1293, 
                           axi4s_tx_tid(1) => n_1294, axi4s_tx_tid(0) => n_1295
                           , axi4s_tx_tdest(4) => arm_axi_tx_tdest_4_port, 
                           axi4s_tx_tdest(3) => arm_axi_tx_tdest_3_port, 
                           axi4s_tx_tdest(2) => arm_axi_tx_tdest_2_port, 
                           axi4s_tx_tdest(1) => arm_axi_tx_tdest_1_port, 
                           axi4s_tx_tdest(0) => arm_axi_tx_tdest_0_port, 
                           axi4s_tx_tuser(3) => n_1296, axi4s_tx_tuser(2) => 
                           n_1297, axi4s_tx_tuser(1) => n_1298, 
                           axi4s_tx_tuser(0) => n_1299, axi4s_tx_tready => 
                           axi_arm_tx_tready, axi4s_rx_tdata(31) => 
                           axi_arm_rx_tdata_31_port, axi4s_rx_tdata(30) => 
                           axi_arm_rx_tdata_30_port, axi4s_rx_tdata(29) => 
                           axi_arm_rx_tdata_29_port, axi4s_rx_tdata(28) => 
                           axi_arm_rx_tdata_28_port, axi4s_rx_tdata(27) => 
                           axi_arm_rx_tdata_27_port, axi4s_rx_tdata(26) => 
                           axi_arm_rx_tdata_26_port, axi4s_rx_tdata(25) => 
                           axi_arm_rx_tdata_25_port, axi4s_rx_tdata(24) => 
                           axi_arm_rx_tdata_24_port, axi4s_rx_tdata(23) => 
                           axi_arm_rx_tdata_23_port, axi4s_rx_tdata(22) => 
                           axi_arm_rx_tdata_22_port, axi4s_rx_tdata(21) => 
                           axi_arm_rx_tdata_21_port, axi4s_rx_tdata(20) => 
                           axi_arm_rx_tdata_20_port, axi4s_rx_tdata(19) => 
                           axi_arm_rx_tdata_19_port, axi4s_rx_tdata(18) => 
                           axi_arm_rx_tdata_18_port, axi4s_rx_tdata(17) => 
                           axi_arm_rx_tdata_17_port, axi4s_rx_tdata(16) => 
                           axi_arm_rx_tdata_16_port, axi4s_rx_tdata(15) => 
                           axi_arm_rx_tdata_15_port, axi4s_rx_tdata(14) => 
                           axi_arm_rx_tdata_14_port, axi4s_rx_tdata(13) => 
                           axi_arm_rx_tdata_13_port, axi4s_rx_tdata(12) => 
                           axi_arm_rx_tdata_12_port, axi4s_rx_tdata(11) => 
                           axi_arm_rx_tdata_11_port, axi4s_rx_tdata(10) => 
                           axi_arm_rx_tdata_10_port, axi4s_rx_tdata(9) => 
                           axi_arm_rx_tdata_9_port, axi4s_rx_tdata(8) => 
                           axi_arm_rx_tdata_8_port, axi4s_rx_tdata(7) => 
                           axi_arm_rx_tdata_7_port, axi4s_rx_tdata(6) => 
                           axi_arm_rx_tdata_6_port, axi4s_rx_tdata(5) => 
                           axi_arm_rx_tdata_5_port, axi4s_rx_tdata(4) => 
                           axi_arm_rx_tdata_4_port, axi4s_rx_tdata(3) => 
                           axi_arm_rx_tdata_3_port, axi4s_rx_tdata(2) => 
                           axi_arm_rx_tdata_2_port, axi4s_rx_tdata(1) => 
                           axi_arm_rx_tdata_1_port, axi4s_rx_tdata(0) => 
                           axi_arm_rx_tdata_0_port, axi4s_rx_tstrb(3) => 
                           axi_arm_rx_tstrb_3_port, axi4s_rx_tstrb(2) => 
                           axi_arm_rx_tstrb_2_port, axi4s_rx_tstrb(1) => 
                           axi_arm_rx_tstrb_1_port, axi4s_rx_tstrb(0) => 
                           axi_arm_rx_tstrb_0_port, axi4s_rx_tkeep(3) => 
                           axi_arm_rx_tkeep_3_port, axi4s_rx_tkeep(2) => 
                           axi_arm_rx_tkeep_2_port, axi4s_rx_tkeep(1) => 
                           axi_arm_rx_tkeep_1_port, axi4s_rx_tkeep(0) => 
                           axi_arm_rx_tkeep_0_port, axi4s_rx_tvalid => 
                           axi_arm_rx_tvalid, axi4s_rx_tlast => 
                           axi_arm_rx_tlast, axi4s_rx_tid(2) => 
                           axi_arm_rx_tid_2_port, axi4s_rx_tid(1) => 
                           axi_arm_rx_tid_1_port, axi4s_rx_tid(0) => 
                           axi_arm_rx_tid_0_port, axi4s_rx_tdest(4) => 
                           axi_arm_rx_tdest_4_port, axi4s_rx_tdest(3) => 
                           axi_arm_rx_tdest_3_port, axi4s_rx_tdest(2) => 
                           axi_arm_rx_tdest_2_port, axi4s_rx_tdest(1) => 
                           axi_arm_rx_tdest_1_port, axi4s_rx_tdest(0) => 
                           axi_arm_rx_tdest_0_port, axi4s_rx_tuser(3) => 
                           axi_arm_rx_tuser_3_port, axi4s_rx_tuser(2) => 
                           axi_arm_rx_tuser_2_port, axi4s_rx_tuser(1) => 
                           axi_arm_rx_tuser_1_port, axi4s_rx_tuser(0) => 
                           axi_arm_rx_tuser_0_port, axi4s_rx_tready => 
                           arm_axi_rx_tready, arm_cpuwait => arm_cpuwait);
   i_mem : memory_subsystem port map( clk => CLK, reset_b => n17, 
                           axi4s_tx_tdata(31) => mem_axi_tx_tdata_31_port, 
                           axi4s_tx_tdata(30) => mem_axi_tx_tdata_30_port, 
                           axi4s_tx_tdata(29) => mem_axi_tx_tdata_29_port, 
                           axi4s_tx_tdata(28) => mem_axi_tx_tdata_28_port, 
                           axi4s_tx_tdata(27) => mem_axi_tx_tdata_27_port, 
                           axi4s_tx_tdata(26) => mem_axi_tx_tdata_26_port, 
                           axi4s_tx_tdata(25) => mem_axi_tx_tdata_25_port, 
                           axi4s_tx_tdata(24) => mem_axi_tx_tdata_24_port, 
                           axi4s_tx_tdata(23) => mem_axi_tx_tdata_23_port, 
                           axi4s_tx_tdata(22) => mem_axi_tx_tdata_22_port, 
                           axi4s_tx_tdata(21) => mem_axi_tx_tdata_21_port, 
                           axi4s_tx_tdata(20) => mem_axi_tx_tdata_20_port, 
                           axi4s_tx_tdata(19) => mem_axi_tx_tdata_19_port, 
                           axi4s_tx_tdata(18) => mem_axi_tx_tdata_18_port, 
                           axi4s_tx_tdata(17) => mem_axi_tx_tdata_17_port, 
                           axi4s_tx_tdata(16) => mem_axi_tx_tdata_16_port, 
                           axi4s_tx_tdata(15) => mem_axi_tx_tdata_15_port, 
                           axi4s_tx_tdata(14) => mem_axi_tx_tdata_14_port, 
                           axi4s_tx_tdata(13) => mem_axi_tx_tdata_13_port, 
                           axi4s_tx_tdata(12) => mem_axi_tx_tdata_12_port, 
                           axi4s_tx_tdata(11) => mem_axi_tx_tdata_11_port, 
                           axi4s_tx_tdata(10) => mem_axi_tx_tdata_10_port, 
                           axi4s_tx_tdata(9) => mem_axi_tx_tdata_9_port, 
                           axi4s_tx_tdata(8) => mem_axi_tx_tdata_8_port, 
                           axi4s_tx_tdata(7) => mem_axi_tx_tdata_7_port, 
                           axi4s_tx_tdata(6) => mem_axi_tx_tdata_6_port, 
                           axi4s_tx_tdata(5) => mem_axi_tx_tdata_5_port, 
                           axi4s_tx_tdata(4) => mem_axi_tx_tdata_4_port, 
                           axi4s_tx_tdata(3) => mem_axi_tx_tdata_3_port, 
                           axi4s_tx_tdata(2) => mem_axi_tx_tdata_2_port, 
                           axi4s_tx_tdata(1) => mem_axi_tx_tdata_1_port, 
                           axi4s_tx_tdata(0) => mem_axi_tx_tdata_0_port, 
                           axi4s_tx_tstrb(3) => mem_axi_tx_tstrb_3_port, 
                           axi4s_tx_tstrb(2) => mem_axi_tx_tstrb_2_port, 
                           axi4s_tx_tstrb(1) => mem_axi_tx_tstrb_1_port, 
                           axi4s_tx_tstrb(0) => mem_axi_tx_tstrb_0_port, 
                           axi4s_tx_tkeep(3) => mem_axi_tx_tkeep_3_port, 
                           axi4s_tx_tkeep(2) => mem_axi_tx_tkeep_2_port, 
                           axi4s_tx_tkeep(1) => mem_axi_tx_tkeep_1_port, 
                           axi4s_tx_tkeep(0) => mem_axi_tx_tkeep_0_port, 
                           axi4s_tx_tvalid => mem_axi_tx_tvalid, axi4s_tx_tlast
                           => mem_axi_tx_tlast, axi4s_tx_tid(2) => 
                           mem_axi_tx_tid_2_port, axi4s_tx_tid(1) => 
                           mem_axi_tx_tid_1_port, axi4s_tx_tid(0) => 
                           mem_axi_tx_tid_0_port, axi4s_tx_tdest(4) => 
                           mem_axi_tx_tdest_4_port, axi4s_tx_tdest(3) => 
                           mem_axi_tx_tdest_3_port, axi4s_tx_tdest(2) => 
                           mem_axi_tx_tdest_2_port, axi4s_tx_tdest(1) => 
                           mem_axi_tx_tdest_1_port, axi4s_tx_tdest(0) => 
                           mem_axi_tx_tdest_0_port, axi4s_tx_tuser(3) => 
                           mem_axi_tx_tuser_3_port, axi4s_tx_tuser(2) => 
                           mem_axi_tx_tuser_2_port, axi4s_tx_tuser(1) => 
                           mem_axi_tx_tuser_1_port, axi4s_tx_tuser(0) => 
                           mem_axi_tx_tuser_0_port, axi4s_tx_tready => 
                           axi_mem_tx_tready, axi4s_rx_tdata(31) => 
                           axi_mem_rx_tdata_31_port, axi4s_rx_tdata(30) => 
                           axi_mem_rx_tdata_30_port, axi4s_rx_tdata(29) => 
                           axi_mem_rx_tdata_29_port, axi4s_rx_tdata(28) => 
                           axi_mem_rx_tdata_28_port, axi4s_rx_tdata(27) => 
                           axi_mem_rx_tdata_27_port, axi4s_rx_tdata(26) => 
                           axi_mem_rx_tdata_26_port, axi4s_rx_tdata(25) => 
                           axi_mem_rx_tdata_25_port, axi4s_rx_tdata(24) => 
                           axi_mem_rx_tdata_24_port, axi4s_rx_tdata(23) => 
                           axi_mem_rx_tdata_23_port, axi4s_rx_tdata(22) => 
                           axi_mem_rx_tdata_22_port, axi4s_rx_tdata(21) => 
                           axi_mem_rx_tdata_21_port, axi4s_rx_tdata(20) => 
                           axi_mem_rx_tdata_20_port, axi4s_rx_tdata(19) => 
                           axi_mem_rx_tdata_19_port, axi4s_rx_tdata(18) => 
                           axi_mem_rx_tdata_18_port, axi4s_rx_tdata(17) => 
                           axi_mem_rx_tdata_17_port, axi4s_rx_tdata(16) => 
                           axi_mem_rx_tdata_16_port, axi4s_rx_tdata(15) => 
                           axi_mem_rx_tdata_15_port, axi4s_rx_tdata(14) => 
                           axi_mem_rx_tdata_14_port, axi4s_rx_tdata(13) => 
                           axi_mem_rx_tdata_13_port, axi4s_rx_tdata(12) => 
                           axi_mem_rx_tdata_12_port, axi4s_rx_tdata(11) => 
                           axi_mem_rx_tdata_11_port, axi4s_rx_tdata(10) => 
                           axi_mem_rx_tdata_10_port, axi4s_rx_tdata(9) => 
                           axi_mem_rx_tdata_9_port, axi4s_rx_tdata(8) => 
                           axi_mem_rx_tdata_8_port, axi4s_rx_tdata(7) => 
                           axi_mem_rx_tdata_7_port, axi4s_rx_tdata(6) => 
                           axi_mem_rx_tdata_6_port, axi4s_rx_tdata(5) => 
                           axi_mem_rx_tdata_5_port, axi4s_rx_tdata(4) => 
                           axi_mem_rx_tdata_4_port, axi4s_rx_tdata(3) => 
                           axi_mem_rx_tdata_3_port, axi4s_rx_tdata(2) => 
                           axi_mem_rx_tdata_2_port, axi4s_rx_tdata(1) => 
                           axi_mem_rx_tdata_1_port, axi4s_rx_tdata(0) => 
                           axi_mem_rx_tdata_0_port, axi4s_rx_tstrb(3) => 
                           axi_mem_rx_tstrb_3_port, axi4s_rx_tstrb(2) => 
                           axi_mem_rx_tstrb_2_port, axi4s_rx_tstrb(1) => 
                           axi_mem_rx_tstrb_1_port, axi4s_rx_tstrb(0) => 
                           axi_mem_rx_tstrb_0_port, axi4s_rx_tkeep(3) => 
                           axi_mem_rx_tkeep_3_port, axi4s_rx_tkeep(2) => 
                           axi_mem_rx_tkeep_2_port, axi4s_rx_tkeep(1) => 
                           axi_mem_rx_tkeep_1_port, axi4s_rx_tkeep(0) => 
                           axi_mem_rx_tkeep_0_port, axi4s_rx_tvalid => 
                           axi_mem_rx_tvalid, axi4s_rx_tlast => 
                           axi_mem_rx_tlast, axi4s_rx_tid(2) => 
                           axi_mem_rx_tid_2_port, axi4s_rx_tid(1) => 
                           axi_mem_rx_tid_1_port, axi4s_rx_tid(0) => 
                           axi_mem_rx_tid_0_port, axi4s_rx_tdest(4) => 
                           axi_mem_rx_tdest_4_port, axi4s_rx_tdest(3) => 
                           axi_mem_rx_tdest_3_port, axi4s_rx_tdest(2) => 
                           axi_mem_rx_tdest_2_port, axi4s_rx_tdest(1) => 
                           axi_mem_rx_tdest_1_port, axi4s_rx_tdest(0) => 
                           axi_mem_rx_tdest_0_port, axi4s_rx_tuser(3) => 
                           axi_mem_rx_tuser_3_port, axi4s_rx_tuser(2) => 
                           axi_mem_rx_tuser_2_port, axi4s_rx_tuser(1) => 
                           axi_mem_rx_tuser_1_port, axi4s_rx_tuser(0) => 
                           axi_mem_rx_tuser_0_port, axi4s_rx_tready => 
                           mem_axi_rx_tready, mem_addr(27) => MEM_ADDR(27), 
                           mem_addr(26) => MEM_ADDR(26), mem_addr(25) => 
                           MEM_ADDR(25), mem_addr(24) => MEM_ADDR(24), 
                           mem_addr(23) => MEM_ADDR(23), mem_addr(22) => 
                           MEM_ADDR(22), mem_addr(21) => MEM_ADDR(21), 
                           mem_addr(20) => MEM_ADDR(20), mem_addr(19) => 
                           MEM_ADDR(19), mem_addr(18) => MEM_ADDR(18), 
                           mem_addr(17) => MEM_ADDR(17), mem_addr(16) => 
                           MEM_ADDR(16), mem_addr(15) => MEM_ADDR(15), 
                           mem_addr(14) => MEM_ADDR(14), mem_addr(13) => 
                           MEM_ADDR(13), mem_addr(12) => MEM_ADDR(12), 
                           mem_addr(11) => MEM_ADDR(11), mem_addr(10) => 
                           MEM_ADDR(10), mem_addr(9) => MEM_ADDR(9), 
                           mem_addr(8) => MEM_ADDR(8), mem_addr(7) => 
                           MEM_ADDR(7), mem_addr(6) => MEM_ADDR(6), mem_addr(5)
                           => MEM_ADDR(5), mem_addr(4) => MEM_ADDR(4), 
                           mem_addr(3) => MEM_ADDR(3), mem_addr(2) => 
                           MEM_ADDR(2), mem_addr(1) => MEM_ADDR(1), mem_addr(0)
                           => MEM_ADDR(0), mem_rd_en => MEM_RD_EN, mem_wr_en =>
                           MEM_WR_EN, mem_data_in(31) => MEM_DATA_IN(31), 
                           mem_data_in(30) => MEM_DATA_IN(30), mem_data_in(29) 
                           => MEM_DATA_IN(29), mem_data_in(28) => 
                           MEM_DATA_IN(28), mem_data_in(27) => MEM_DATA_IN(27),
                           mem_data_in(26) => MEM_DATA_IN(26), mem_data_in(25) 
                           => MEM_DATA_IN(25), mem_data_in(24) => 
                           MEM_DATA_IN(24), mem_data_in(23) => MEM_DATA_IN(23),
                           mem_data_in(22) => MEM_DATA_IN(22), mem_data_in(21) 
                           => MEM_DATA_IN(21), mem_data_in(20) => 
                           MEM_DATA_IN(20), mem_data_in(19) => MEM_DATA_IN(19),
                           mem_data_in(18) => MEM_DATA_IN(18), mem_data_in(17) 
                           => MEM_DATA_IN(17), mem_data_in(16) => 
                           MEM_DATA_IN(16), mem_data_in(15) => MEM_DATA_IN(15),
                           mem_data_in(14) => MEM_DATA_IN(14), mem_data_in(13) 
                           => MEM_DATA_IN(13), mem_data_in(12) => 
                           MEM_DATA_IN(12), mem_data_in(11) => MEM_DATA_IN(11),
                           mem_data_in(10) => MEM_DATA_IN(10), mem_data_in(9) 
                           => MEM_DATA_IN(9), mem_data_in(8) => MEM_DATA_IN(8),
                           mem_data_in(7) => MEM_DATA_IN(7), mem_data_in(6) => 
                           MEM_DATA_IN(6), mem_data_in(5) => MEM_DATA_IN(5), 
                           mem_data_in(4) => MEM_DATA_IN(4), mem_data_in(3) => 
                           MEM_DATA_IN(3), mem_data_in(2) => MEM_DATA_IN(2), 
                           mem_data_in(1) => MEM_DATA_IN(1), mem_data_in(0) => 
                           MEM_DATA_IN(0), mem_data_out(31) => MEM_DATA_OUT(31)
                           , mem_data_out(30) => MEM_DATA_OUT(30), 
                           mem_data_out(29) => MEM_DATA_OUT(29), 
                           mem_data_out(28) => MEM_DATA_OUT(28), 
                           mem_data_out(27) => MEM_DATA_OUT(27), 
                           mem_data_out(26) => MEM_DATA_OUT(26), 
                           mem_data_out(25) => MEM_DATA_OUT(25), 
                           mem_data_out(24) => MEM_DATA_OUT(24), 
                           mem_data_out(23) => MEM_DATA_OUT(23), 
                           mem_data_out(22) => MEM_DATA_OUT(22), 
                           mem_data_out(21) => MEM_DATA_OUT(21), 
                           mem_data_out(20) => MEM_DATA_OUT(20), 
                           mem_data_out(19) => MEM_DATA_OUT(19), 
                           mem_data_out(18) => MEM_DATA_OUT(18), 
                           mem_data_out(17) => MEM_DATA_OUT(17), 
                           mem_data_out(16) => MEM_DATA_OUT(16), 
                           mem_data_out(15) => MEM_DATA_OUT(15), 
                           mem_data_out(14) => MEM_DATA_OUT(14), 
                           mem_data_out(13) => MEM_DATA_OUT(13), 
                           mem_data_out(12) => MEM_DATA_OUT(12), 
                           mem_data_out(11) => MEM_DATA_OUT(11), 
                           mem_data_out(10) => MEM_DATA_OUT(10), 
                           mem_data_out(9) => MEM_DATA_OUT(9), mem_data_out(8) 
                           => MEM_DATA_OUT(8), mem_data_out(7) => 
                           MEM_DATA_OUT(7), mem_data_out(6) => MEM_DATA_OUT(6),
                           mem_data_out(5) => MEM_DATA_OUT(5), mem_data_out(4) 
                           => MEM_DATA_OUT(4), mem_data_out(3) => 
                           MEM_DATA_OUT(3), mem_data_out(2) => MEM_DATA_OUT(2),
                           mem_data_out(1) => MEM_DATA_OUT(1), mem_data_out(0) 
                           => MEM_DATA_OUT(0), mem_data_be(3) => MEM_DATA_BE(3)
                           , mem_data_be(2) => MEM_DATA_BE(2), mem_data_be(1) 
                           => MEM_DATA_BE(1), mem_data_be(0) => MEM_DATA_BE(0),
                           ack => MEM_ACK);
   i_periph : peripheral_subsystem port map( clk => CLK, reset_b => n16, 
                           axi4s_tx_tdata(31) => periph_axi_tx_tdata_31_port, 
                           axi4s_tx_tdata(30) => periph_axi_tx_tdata_30_port, 
                           axi4s_tx_tdata(29) => periph_axi_tx_tdata_29_port, 
                           axi4s_tx_tdata(28) => periph_axi_tx_tdata_28_port, 
                           axi4s_tx_tdata(27) => periph_axi_tx_tdata_27_port, 
                           axi4s_tx_tdata(26) => periph_axi_tx_tdata_26_port, 
                           axi4s_tx_tdata(25) => periph_axi_tx_tdata_25_port, 
                           axi4s_tx_tdata(24) => periph_axi_tx_tdata_24_port, 
                           axi4s_tx_tdata(23) => periph_axi_tx_tdata_23_port, 
                           axi4s_tx_tdata(22) => periph_axi_tx_tdata_22_port, 
                           axi4s_tx_tdata(21) => periph_axi_tx_tdata_21_port, 
                           axi4s_tx_tdata(20) => periph_axi_tx_tdata_20_port, 
                           axi4s_tx_tdata(19) => periph_axi_tx_tdata_19_port, 
                           axi4s_tx_tdata(18) => periph_axi_tx_tdata_18_port, 
                           axi4s_tx_tdata(17) => periph_axi_tx_tdata_17_port, 
                           axi4s_tx_tdata(16) => periph_axi_tx_tdata_16_port, 
                           axi4s_tx_tdata(15) => periph_axi_tx_tdata_15_port, 
                           axi4s_tx_tdata(14) => periph_axi_tx_tdata_14_port, 
                           axi4s_tx_tdata(13) => periph_axi_tx_tdata_13_port, 
                           axi4s_tx_tdata(12) => periph_axi_tx_tdata_12_port, 
                           axi4s_tx_tdata(11) => periph_axi_tx_tdata_11_port, 
                           axi4s_tx_tdata(10) => periph_axi_tx_tdata_10_port, 
                           axi4s_tx_tdata(9) => periph_axi_tx_tdata_9_port, 
                           axi4s_tx_tdata(8) => periph_axi_tx_tdata_8_port, 
                           axi4s_tx_tdata(7) => periph_axi_tx_tdata_7_port, 
                           axi4s_tx_tdata(6) => periph_axi_tx_tdata_6_port, 
                           axi4s_tx_tdata(5) => periph_axi_tx_tdata_5_port, 
                           axi4s_tx_tdata(4) => periph_axi_tx_tdata_4_port, 
                           axi4s_tx_tdata(3) => periph_axi_tx_tdata_3_port, 
                           axi4s_tx_tdata(2) => periph_axi_tx_tdata_2_port, 
                           axi4s_tx_tdata(1) => periph_axi_tx_tdata_1_port, 
                           axi4s_tx_tdata(0) => periph_axi_tx_tdata_0_port, 
                           axi4s_tx_tstrb(3) => periph_axi_tx_tstrb_3_port, 
                           axi4s_tx_tstrb(2) => periph_axi_tx_tstrb_2_port, 
                           axi4s_tx_tstrb(1) => periph_axi_tx_tstrb_1_port, 
                           axi4s_tx_tstrb(0) => periph_axi_tx_tstrb_0_port, 
                           axi4s_tx_tkeep(3) => periph_axi_tx_tkeep_3_port, 
                           axi4s_tx_tkeep(2) => periph_axi_tx_tkeep_2_port, 
                           axi4s_tx_tkeep(1) => periph_axi_tx_tkeep_1_port, 
                           axi4s_tx_tkeep(0) => periph_axi_tx_tkeep_0_port, 
                           axi4s_tx_tvalid => periph_axi_tx_tvalid, 
                           axi4s_tx_tlast => periph_axi_tx_tlast, 
                           axi4s_tx_tid(2) => n_1300, axi4s_tx_tid(1) => n_1301
                           , axi4s_tx_tid(0) => n_1302, axi4s_tx_tdest(4) => 
                           periph_axi_tx_tdest_4_port, axi4s_tx_tdest(3) => 
                           periph_axi_tx_tdest_3_port, axi4s_tx_tdest(2) => 
                           periph_axi_tx_tdest_2_port, axi4s_tx_tdest(1) => 
                           periph_axi_tx_tdest_1_port, axi4s_tx_tdest(0) => 
                           periph_axi_tx_tdest_0_port, axi4s_tx_tuser(3) => 
                           n_1303, axi4s_tx_tuser(2) => n_1304, 
                           axi4s_tx_tuser(1) => n_1305, axi4s_tx_tuser(0) => 
                           n_1306, axi4s_tx_tready => axi_periph_tx_tready, 
                           axi4s_rx_tdata(31) => axi_periph_rx_tdata_31_port, 
                           axi4s_rx_tdata(30) => axi_periph_rx_tdata_30_port, 
                           axi4s_rx_tdata(29) => axi_periph_rx_tdata_29_port, 
                           axi4s_rx_tdata(28) => axi_periph_rx_tdata_28_port, 
                           axi4s_rx_tdata(27) => axi_periph_rx_tdata_27_port, 
                           axi4s_rx_tdata(26) => axi_periph_rx_tdata_26_port, 
                           axi4s_rx_tdata(25) => axi_periph_rx_tdata_25_port, 
                           axi4s_rx_tdata(24) => axi_periph_rx_tdata_24_port, 
                           axi4s_rx_tdata(23) => axi_periph_rx_tdata_23_port, 
                           axi4s_rx_tdata(22) => axi_periph_rx_tdata_22_port, 
                           axi4s_rx_tdata(21) => axi_periph_rx_tdata_21_port, 
                           axi4s_rx_tdata(20) => axi_periph_rx_tdata_20_port, 
                           axi4s_rx_tdata(19) => axi_periph_rx_tdata_19_port, 
                           axi4s_rx_tdata(18) => axi_periph_rx_tdata_18_port, 
                           axi4s_rx_tdata(17) => axi_periph_rx_tdata_17_port, 
                           axi4s_rx_tdata(16) => axi_periph_rx_tdata_16_port, 
                           axi4s_rx_tdata(15) => axi_periph_rx_tdata_15_port, 
                           axi4s_rx_tdata(14) => axi_periph_rx_tdata_14_port, 
                           axi4s_rx_tdata(13) => axi_periph_rx_tdata_13_port, 
                           axi4s_rx_tdata(12) => axi_periph_rx_tdata_12_port, 
                           axi4s_rx_tdata(11) => axi_periph_rx_tdata_11_port, 
                           axi4s_rx_tdata(10) => axi_periph_rx_tdata_10_port, 
                           axi4s_rx_tdata(9) => axi_periph_rx_tdata_9_port, 
                           axi4s_rx_tdata(8) => axi_periph_rx_tdata_8_port, 
                           axi4s_rx_tdata(7) => axi_periph_rx_tdata_7_port, 
                           axi4s_rx_tdata(6) => axi_periph_rx_tdata_6_port, 
                           axi4s_rx_tdata(5) => axi_periph_rx_tdata_5_port, 
                           axi4s_rx_tdata(4) => axi_periph_rx_tdata_4_port, 
                           axi4s_rx_tdata(3) => axi_periph_rx_tdata_3_port, 
                           axi4s_rx_tdata(2) => axi_periph_rx_tdata_2_port, 
                           axi4s_rx_tdata(1) => axi_periph_rx_tdata_1_port, 
                           axi4s_rx_tdata(0) => axi_periph_rx_tdata_0_port, 
                           axi4s_rx_tstrb(3) => axi_periph_rx_tstrb_3_port, 
                           axi4s_rx_tstrb(2) => axi_periph_rx_tstrb_2_port, 
                           axi4s_rx_tstrb(1) => axi_periph_rx_tstrb_1_port, 
                           axi4s_rx_tstrb(0) => axi_periph_rx_tstrb_0_port, 
                           axi4s_rx_tkeep(3) => axi_periph_rx_tkeep_3_port, 
                           axi4s_rx_tkeep(2) => axi_periph_rx_tkeep_2_port, 
                           axi4s_rx_tkeep(1) => axi_periph_rx_tkeep_1_port, 
                           axi4s_rx_tkeep(0) => axi_periph_rx_tkeep_0_port, 
                           axi4s_rx_tvalid => axi_periph_rx_tvalid, 
                           axi4s_rx_tlast => axi_periph_rx_tlast, 
                           axi4s_rx_tid(2) => axi_periph_rx_tid_2_port, 
                           axi4s_rx_tid(1) => axi_periph_rx_tid_1_port, 
                           axi4s_rx_tid(0) => axi_periph_rx_tid_0_port, 
                           axi4s_rx_tdest(4) => axi_periph_rx_tdest_4_port, 
                           axi4s_rx_tdest(3) => axi_periph_rx_tdest_3_port, 
                           axi4s_rx_tdest(2) => axi_periph_rx_tdest_2_port, 
                           axi4s_rx_tdest(1) => axi_periph_rx_tdest_1_port, 
                           axi4s_rx_tdest(0) => axi_periph_rx_tdest_0_port, 
                           axi4s_rx_tuser(3) => axi_periph_rx_tuser_3_port, 
                           axi4s_rx_tuser(2) => axi_periph_rx_tuser_2_port, 
                           axi4s_rx_tuser(1) => axi_periph_rx_tuser_1_port, 
                           axi4s_rx_tuser(0) => axi_periph_rx_tuser_0_port, 
                           axi4s_rx_tready => periph_axi_rx_tready, serial_in 
                           => UART_IN, serial_out => UART_OUT, baud_clk => 
                           n_1307, o_irq => arm_irq, o_firq => arm_firq, 
                           i_ethmac_int => X_Logic0_port, i_test_reg_irq => 
                           X_Logic0_port, i_test_reg_firq => X_Logic0_port);
   i_crypto : crypto_subsystem port map( clk => CLK, reset_b => n18, 
                           axi4s_tx_tdata(31) => crypto_axi_tx_tdata_31_port, 
                           axi4s_tx_tdata(30) => crypto_axi_tx_tdata_30_port, 
                           axi4s_tx_tdata(29) => crypto_axi_tx_tdata_29_port, 
                           axi4s_tx_tdata(28) => crypto_axi_tx_tdata_28_port, 
                           axi4s_tx_tdata(27) => crypto_axi_tx_tdata_27_port, 
                           axi4s_tx_tdata(26) => crypto_axi_tx_tdata_26_port, 
                           axi4s_tx_tdata(25) => crypto_axi_tx_tdata_25_port, 
                           axi4s_tx_tdata(24) => crypto_axi_tx_tdata_24_port, 
                           axi4s_tx_tdata(23) => crypto_axi_tx_tdata_23_port, 
                           axi4s_tx_tdata(22) => crypto_axi_tx_tdata_22_port, 
                           axi4s_tx_tdata(21) => crypto_axi_tx_tdata_21_port, 
                           axi4s_tx_tdata(20) => crypto_axi_tx_tdata_20_port, 
                           axi4s_tx_tdata(19) => crypto_axi_tx_tdata_19_port, 
                           axi4s_tx_tdata(18) => crypto_axi_tx_tdata_18_port, 
                           axi4s_tx_tdata(17) => crypto_axi_tx_tdata_17_port, 
                           axi4s_tx_tdata(16) => crypto_axi_tx_tdata_16_port, 
                           axi4s_tx_tdata(15) => crypto_axi_tx_tdata_15_port, 
                           axi4s_tx_tdata(14) => crypto_axi_tx_tdata_14_port, 
                           axi4s_tx_tdata(13) => crypto_axi_tx_tdata_13_port, 
                           axi4s_tx_tdata(12) => crypto_axi_tx_tdata_12_port, 
                           axi4s_tx_tdata(11) => crypto_axi_tx_tdata_11_port, 
                           axi4s_tx_tdata(10) => crypto_axi_tx_tdata_10_port, 
                           axi4s_tx_tdata(9) => crypto_axi_tx_tdata_9_port, 
                           axi4s_tx_tdata(8) => crypto_axi_tx_tdata_8_port, 
                           axi4s_tx_tdata(7) => crypto_axi_tx_tdata_7_port, 
                           axi4s_tx_tdata(6) => crypto_axi_tx_tdata_6_port, 
                           axi4s_tx_tdata(5) => crypto_axi_tx_tdata_5_port, 
                           axi4s_tx_tdata(4) => crypto_axi_tx_tdata_4_port, 
                           axi4s_tx_tdata(3) => crypto_axi_tx_tdata_3_port, 
                           axi4s_tx_tdata(2) => crypto_axi_tx_tdata_2_port, 
                           axi4s_tx_tdata(1) => crypto_axi_tx_tdata_1_port, 
                           axi4s_tx_tdata(0) => crypto_axi_tx_tdata_0_port, 
                           axi4s_tx_tstrb(3) => crypto_axi_tx_tstrb_3_port, 
                           axi4s_tx_tstrb(2) => crypto_axi_tx_tstrb_2_port, 
                           axi4s_tx_tstrb(1) => crypto_axi_tx_tstrb_1_port, 
                           axi4s_tx_tstrb(0) => crypto_axi_tx_tstrb_0_port, 
                           axi4s_tx_tkeep(3) => crypto_axi_tx_tkeep_3_port, 
                           axi4s_tx_tkeep(2) => crypto_axi_tx_tkeep_2_port, 
                           axi4s_tx_tkeep(1) => crypto_axi_tx_tkeep_1_port, 
                           axi4s_tx_tkeep(0) => crypto_axi_tx_tkeep_0_port, 
                           axi4s_tx_tvalid => crypto_axi_tx_tvalid, 
                           axi4s_tx_tlast => crypto_axi_tx_tlast, 
                           axi4s_tx_tid(2) => crypto_axi_tx_tid_2_port, 
                           axi4s_tx_tid(1) => crypto_axi_tx_tid_1_port, 
                           axi4s_tx_tid(0) => crypto_axi_tx_tid_0_port, 
                           axi4s_tx_tdest(4) => crypto_axi_tx_tdest_4_port, 
                           axi4s_tx_tdest(3) => crypto_axi_tx_tdest_3_port, 
                           axi4s_tx_tdest(2) => crypto_axi_tx_tdest_2_port, 
                           axi4s_tx_tdest(1) => crypto_axi_tx_tdest_1_port, 
                           axi4s_tx_tdest(0) => crypto_axi_tx_tdest_0_port, 
                           axi4s_tx_tuser(3) => crypto_axi_tx_tuser_3_port, 
                           axi4s_tx_tuser(2) => crypto_axi_tx_tuser_2_port, 
                           axi4s_tx_tuser(1) => crypto_axi_tx_tuser_1_port, 
                           axi4s_tx_tuser(0) => crypto_axi_tx_tuser_0_port, 
                           axi4s_tx_tready => axi_crypto_tx_tready, 
                           axi4s_rx_tdata(31) => axi_crypto_rx_tdata_31_port, 
                           axi4s_rx_tdata(30) => axi_crypto_rx_tdata_30_port, 
                           axi4s_rx_tdata(29) => axi_crypto_rx_tdata_29_port, 
                           axi4s_rx_tdata(28) => axi_crypto_rx_tdata_28_port, 
                           axi4s_rx_tdata(27) => axi_crypto_rx_tdata_27_port, 
                           axi4s_rx_tdata(26) => axi_crypto_rx_tdata_26_port, 
                           axi4s_rx_tdata(25) => axi_crypto_rx_tdata_25_port, 
                           axi4s_rx_tdata(24) => axi_crypto_rx_tdata_24_port, 
                           axi4s_rx_tdata(23) => axi_crypto_rx_tdata_23_port, 
                           axi4s_rx_tdata(22) => axi_crypto_rx_tdata_22_port, 
                           axi4s_rx_tdata(21) => axi_crypto_rx_tdata_21_port, 
                           axi4s_rx_tdata(20) => axi_crypto_rx_tdata_20_port, 
                           axi4s_rx_tdata(19) => axi_crypto_rx_tdata_19_port, 
                           axi4s_rx_tdata(18) => axi_crypto_rx_tdata_18_port, 
                           axi4s_rx_tdata(17) => axi_crypto_rx_tdata_17_port, 
                           axi4s_rx_tdata(16) => axi_crypto_rx_tdata_16_port, 
                           axi4s_rx_tdata(15) => axi_crypto_rx_tdata_15_port, 
                           axi4s_rx_tdata(14) => axi_crypto_rx_tdata_14_port, 
                           axi4s_rx_tdata(13) => axi_crypto_rx_tdata_13_port, 
                           axi4s_rx_tdata(12) => axi_crypto_rx_tdata_12_port, 
                           axi4s_rx_tdata(11) => axi_crypto_rx_tdata_11_port, 
                           axi4s_rx_tdata(10) => axi_crypto_rx_tdata_10_port, 
                           axi4s_rx_tdata(9) => axi_crypto_rx_tdata_9_port, 
                           axi4s_rx_tdata(8) => axi_crypto_rx_tdata_8_port, 
                           axi4s_rx_tdata(7) => axi_crypto_rx_tdata_7_port, 
                           axi4s_rx_tdata(6) => axi_crypto_rx_tdata_6_port, 
                           axi4s_rx_tdata(5) => axi_crypto_rx_tdata_5_port, 
                           axi4s_rx_tdata(4) => axi_crypto_rx_tdata_4_port, 
                           axi4s_rx_tdata(3) => axi_crypto_rx_tdata_3_port, 
                           axi4s_rx_tdata(2) => axi_crypto_rx_tdata_2_port, 
                           axi4s_rx_tdata(1) => axi_crypto_rx_tdata_1_port, 
                           axi4s_rx_tdata(0) => axi_crypto_rx_tdata_0_port, 
                           axi4s_rx_tstrb(3) => axi_crypto_rx_tstrb_3_port, 
                           axi4s_rx_tstrb(2) => axi_crypto_rx_tstrb_2_port, 
                           axi4s_rx_tstrb(1) => axi_crypto_rx_tstrb_1_port, 
                           axi4s_rx_tstrb(0) => axi_crypto_rx_tstrb_0_port, 
                           axi4s_rx_tkeep(3) => axi_crypto_rx_tkeep_3_port, 
                           axi4s_rx_tkeep(2) => axi_crypto_rx_tkeep_2_port, 
                           axi4s_rx_tkeep(1) => axi_crypto_rx_tkeep_1_port, 
                           axi4s_rx_tkeep(0) => axi_crypto_rx_tkeep_0_port, 
                           axi4s_rx_tvalid => axi_crypto_rx_tvalid, 
                           axi4s_rx_tlast => axi_crypto_rx_tlast, 
                           axi4s_rx_tid(2) => axi_crypto_rx_tid_2_port, 
                           axi4s_rx_tid(1) => axi_crypto_rx_tid_1_port, 
                           axi4s_rx_tid(0) => axi_crypto_rx_tid_0_port, 
                           axi4s_rx_tdest(4) => axi_crypto_rx_tdest_4_port, 
                           axi4s_rx_tdest(3) => axi_crypto_rx_tdest_3_port, 
                           axi4s_rx_tdest(2) => axi_crypto_rx_tdest_2_port, 
                           axi4s_rx_tdest(1) => axi_crypto_rx_tdest_1_port, 
                           axi4s_rx_tdest(0) => axi_crypto_rx_tdest_0_port, 
                           axi4s_rx_tuser(3) => axi_crypto_rx_tuser_3_port, 
                           axi4s_rx_tuser(2) => axi_crypto_rx_tuser_2_port, 
                           axi4s_rx_tuser(1) => axi_crypto_rx_tuser_1_port, 
                           axi4s_rx_tuser(0) => axi_crypto_rx_tuser_0_port, 
                           axi4s_rx_tready => crypto_axi_rx_tready, arm_cpuwait
                           => arm_cpuwait);
   i_axi : axi4s_switch_wrapper port map( SYS2AXI_0_TDATA(31) => 
                           mem_axi_tx_tdata_31_port, SYS2AXI_0_TDATA(30) => 
                           mem_axi_tx_tdata_30_port, SYS2AXI_0_TDATA(29) => 
                           mem_axi_tx_tdata_29_port, SYS2AXI_0_TDATA(28) => 
                           mem_axi_tx_tdata_28_port, SYS2AXI_0_TDATA(27) => 
                           mem_axi_tx_tdata_27_port, SYS2AXI_0_TDATA(26) => 
                           mem_axi_tx_tdata_26_port, SYS2AXI_0_TDATA(25) => 
                           mem_axi_tx_tdata_25_port, SYS2AXI_0_TDATA(24) => 
                           mem_axi_tx_tdata_24_port, SYS2AXI_0_TDATA(23) => 
                           mem_axi_tx_tdata_23_port, SYS2AXI_0_TDATA(22) => 
                           mem_axi_tx_tdata_22_port, SYS2AXI_0_TDATA(21) => 
                           mem_axi_tx_tdata_21_port, SYS2AXI_0_TDATA(20) => 
                           mem_axi_tx_tdata_20_port, SYS2AXI_0_TDATA(19) => 
                           mem_axi_tx_tdata_19_port, SYS2AXI_0_TDATA(18) => 
                           mem_axi_tx_tdata_18_port, SYS2AXI_0_TDATA(17) => 
                           mem_axi_tx_tdata_17_port, SYS2AXI_0_TDATA(16) => 
                           mem_axi_tx_tdata_16_port, SYS2AXI_0_TDATA(15) => 
                           mem_axi_tx_tdata_15_port, SYS2AXI_0_TDATA(14) => 
                           mem_axi_tx_tdata_14_port, SYS2AXI_0_TDATA(13) => 
                           mem_axi_tx_tdata_13_port, SYS2AXI_0_TDATA(12) => 
                           mem_axi_tx_tdata_12_port, SYS2AXI_0_TDATA(11) => 
                           mem_axi_tx_tdata_11_port, SYS2AXI_0_TDATA(10) => 
                           mem_axi_tx_tdata_10_port, SYS2AXI_0_TDATA(9) => 
                           mem_axi_tx_tdata_9_port, SYS2AXI_0_TDATA(8) => 
                           mem_axi_tx_tdata_8_port, SYS2AXI_0_TDATA(7) => 
                           mem_axi_tx_tdata_7_port, SYS2AXI_0_TDATA(6) => 
                           mem_axi_tx_tdata_6_port, SYS2AXI_0_TDATA(5) => 
                           mem_axi_tx_tdata_5_port, SYS2AXI_0_TDATA(4) => 
                           mem_axi_tx_tdata_4_port, SYS2AXI_0_TDATA(3) => 
                           mem_axi_tx_tdata_3_port, SYS2AXI_0_TDATA(2) => 
                           mem_axi_tx_tdata_2_port, SYS2AXI_0_TDATA(1) => 
                           mem_axi_tx_tdata_1_port, SYS2AXI_0_TDATA(0) => 
                           mem_axi_tx_tdata_0_port, SYS2AXI_0_TSTRB(3) => 
                           mem_axi_tx_tstrb_3_port, SYS2AXI_0_TSTRB(2) => 
                           mem_axi_tx_tstrb_2_port, SYS2AXI_0_TSTRB(1) => 
                           mem_axi_tx_tstrb_1_port, SYS2AXI_0_TSTRB(0) => 
                           mem_axi_tx_tstrb_0_port, SYS2AXI_0_TKEEP(3) => 
                           mem_axi_tx_tkeep_3_port, SYS2AXI_0_TKEEP(2) => 
                           mem_axi_tx_tkeep_2_port, SYS2AXI_0_TKEEP(1) => 
                           mem_axi_tx_tkeep_1_port, SYS2AXI_0_TKEEP(0) => 
                           mem_axi_tx_tkeep_0_port, SYS2AXI_0_TVALID => 
                           mem_axi_tx_tvalid, SYS2AXI_0_TLAST => 
                           mem_axi_tx_tlast, SYS2AXI_0_TID(2) => 
                           mem_axi_tx_tid_2_port, SYS2AXI_0_TID(1) => 
                           mem_axi_tx_tid_1_port, SYS2AXI_0_TID(0) => 
                           mem_axi_tx_tid_0_port, SYS2AXI_0_TDEST(4) => 
                           mem_axi_tx_tdest_4_port, SYS2AXI_0_TDEST(3) => 
                           mem_axi_tx_tdest_3_port, SYS2AXI_0_TDEST(2) => 
                           mem_axi_tx_tdest_2_port, SYS2AXI_0_TDEST(1) => 
                           mem_axi_tx_tdest_1_port, SYS2AXI_0_TDEST(0) => 
                           mem_axi_tx_tdest_0_port, SYS2AXI_0_TUSER(3) => 
                           mem_axi_tx_tuser_3_port, SYS2AXI_0_TUSER(2) => 
                           mem_axi_tx_tuser_2_port, SYS2AXI_0_TUSER(1) => 
                           mem_axi_tx_tuser_1_port, SYS2AXI_0_TUSER(0) => 
                           mem_axi_tx_tuser_0_port, SYS2AXI_0_TREADY => 
                           axi_mem_tx_tready, SYS2AXI_1_TDATA(31) => 
                           arm_axi_tx_tdata_31_port, SYS2AXI_1_TDATA(30) => 
                           arm_axi_tx_tdata_30_port, SYS2AXI_1_TDATA(29) => 
                           arm_axi_tx_tdata_29_port, SYS2AXI_1_TDATA(28) => 
                           arm_axi_tx_tdata_28_port, SYS2AXI_1_TDATA(27) => 
                           arm_axi_tx_tdata_27_port, SYS2AXI_1_TDATA(26) => 
                           arm_axi_tx_tdata_26_port, SYS2AXI_1_TDATA(25) => 
                           arm_axi_tx_tdata_25_port, SYS2AXI_1_TDATA(24) => 
                           arm_axi_tx_tdata_24_port, SYS2AXI_1_TDATA(23) => 
                           arm_axi_tx_tdata_23_port, SYS2AXI_1_TDATA(22) => 
                           arm_axi_tx_tdata_22_port, SYS2AXI_1_TDATA(21) => 
                           arm_axi_tx_tdata_21_port, SYS2AXI_1_TDATA(20) => 
                           arm_axi_tx_tdata_20_port, SYS2AXI_1_TDATA(19) => 
                           arm_axi_tx_tdata_19_port, SYS2AXI_1_TDATA(18) => 
                           arm_axi_tx_tdata_18_port, SYS2AXI_1_TDATA(17) => 
                           arm_axi_tx_tdata_17_port, SYS2AXI_1_TDATA(16) => 
                           arm_axi_tx_tdata_16_port, SYS2AXI_1_TDATA(15) => 
                           arm_axi_tx_tdata_15_port, SYS2AXI_1_TDATA(14) => 
                           arm_axi_tx_tdata_14_port, SYS2AXI_1_TDATA(13) => 
                           arm_axi_tx_tdata_13_port, SYS2AXI_1_TDATA(12) => 
                           arm_axi_tx_tdata_12_port, SYS2AXI_1_TDATA(11) => 
                           arm_axi_tx_tdata_11_port, SYS2AXI_1_TDATA(10) => 
                           arm_axi_tx_tdata_10_port, SYS2AXI_1_TDATA(9) => 
                           arm_axi_tx_tdata_9_port, SYS2AXI_1_TDATA(8) => 
                           arm_axi_tx_tdata_8_port, SYS2AXI_1_TDATA(7) => 
                           arm_axi_tx_tdata_7_port, SYS2AXI_1_TDATA(6) => 
                           arm_axi_tx_tdata_6_port, SYS2AXI_1_TDATA(5) => 
                           arm_axi_tx_tdata_5_port, SYS2AXI_1_TDATA(4) => 
                           arm_axi_tx_tdata_4_port, SYS2AXI_1_TDATA(3) => 
                           arm_axi_tx_tdata_3_port, SYS2AXI_1_TDATA(2) => 
                           arm_axi_tx_tdata_2_port, SYS2AXI_1_TDATA(1) => 
                           arm_axi_tx_tdata_1_port, SYS2AXI_1_TDATA(0) => 
                           arm_axi_tx_tdata_0_port, SYS2AXI_1_TSTRB(3) => 
                           arm_axi_tx_tstrb_3_port, SYS2AXI_1_TSTRB(2) => 
                           arm_axi_tx_tstrb_2_port, SYS2AXI_1_TSTRB(1) => 
                           arm_axi_tx_tstrb_1_port, SYS2AXI_1_TSTRB(0) => 
                           arm_axi_tx_tstrb_0_port, SYS2AXI_1_TKEEP(3) => 
                           arm_axi_tx_tkeep_3_port, SYS2AXI_1_TKEEP(2) => 
                           arm_axi_tx_tkeep_2_port, SYS2AXI_1_TKEEP(1) => 
                           arm_axi_tx_tkeep_1_port, SYS2AXI_1_TKEEP(0) => 
                           arm_axi_tx_tkeep_0_port, SYS2AXI_1_TVALID => 
                           arm_axi_tx_tvalid, SYS2AXI_1_TLAST => 
                           arm_axi_tx_tlast, SYS2AXI_1_TID(2) => n10, 
                           SYS2AXI_1_TID(1) => n10, SYS2AXI_1_TID(0) => n10, 
                           SYS2AXI_1_TDEST(4) => arm_axi_tx_tdest_4_port, 
                           SYS2AXI_1_TDEST(3) => arm_axi_tx_tdest_3_port, 
                           SYS2AXI_1_TDEST(2) => arm_axi_tx_tdest_2_port, 
                           SYS2AXI_1_TDEST(1) => arm_axi_tx_tdest_1_port, 
                           SYS2AXI_1_TDEST(0) => arm_axi_tx_tdest_0_port, 
                           SYS2AXI_1_TUSER(3) => n10, SYS2AXI_1_TUSER(2) => n10
                           , SYS2AXI_1_TUSER(1) => n10, SYS2AXI_1_TUSER(0) => 
                           n10, SYS2AXI_1_TREADY => axi_arm_tx_tready, 
                           SYS2AXI_2_TDATA(31) => periph_axi_tx_tdata_31_port, 
                           SYS2AXI_2_TDATA(30) => periph_axi_tx_tdata_30_port, 
                           SYS2AXI_2_TDATA(29) => periph_axi_tx_tdata_29_port, 
                           SYS2AXI_2_TDATA(28) => periph_axi_tx_tdata_28_port, 
                           SYS2AXI_2_TDATA(27) => periph_axi_tx_tdata_27_port, 
                           SYS2AXI_2_TDATA(26) => periph_axi_tx_tdata_26_port, 
                           SYS2AXI_2_TDATA(25) => periph_axi_tx_tdata_25_port, 
                           SYS2AXI_2_TDATA(24) => periph_axi_tx_tdata_24_port, 
                           SYS2AXI_2_TDATA(23) => periph_axi_tx_tdata_23_port, 
                           SYS2AXI_2_TDATA(22) => periph_axi_tx_tdata_22_port, 
                           SYS2AXI_2_TDATA(21) => periph_axi_tx_tdata_21_port, 
                           SYS2AXI_2_TDATA(20) => periph_axi_tx_tdata_20_port, 
                           SYS2AXI_2_TDATA(19) => periph_axi_tx_tdata_19_port, 
                           SYS2AXI_2_TDATA(18) => periph_axi_tx_tdata_18_port, 
                           SYS2AXI_2_TDATA(17) => periph_axi_tx_tdata_17_port, 
                           SYS2AXI_2_TDATA(16) => periph_axi_tx_tdata_16_port, 
                           SYS2AXI_2_TDATA(15) => periph_axi_tx_tdata_15_port, 
                           SYS2AXI_2_TDATA(14) => periph_axi_tx_tdata_14_port, 
                           SYS2AXI_2_TDATA(13) => periph_axi_tx_tdata_13_port, 
                           SYS2AXI_2_TDATA(12) => periph_axi_tx_tdata_12_port, 
                           SYS2AXI_2_TDATA(11) => periph_axi_tx_tdata_11_port, 
                           SYS2AXI_2_TDATA(10) => periph_axi_tx_tdata_10_port, 
                           SYS2AXI_2_TDATA(9) => periph_axi_tx_tdata_9_port, 
                           SYS2AXI_2_TDATA(8) => periph_axi_tx_tdata_8_port, 
                           SYS2AXI_2_TDATA(7) => periph_axi_tx_tdata_7_port, 
                           SYS2AXI_2_TDATA(6) => periph_axi_tx_tdata_6_port, 
                           SYS2AXI_2_TDATA(5) => periph_axi_tx_tdata_5_port, 
                           SYS2AXI_2_TDATA(4) => periph_axi_tx_tdata_4_port, 
                           SYS2AXI_2_TDATA(3) => periph_axi_tx_tdata_3_port, 
                           SYS2AXI_2_TDATA(2) => periph_axi_tx_tdata_2_port, 
                           SYS2AXI_2_TDATA(1) => periph_axi_tx_tdata_1_port, 
                           SYS2AXI_2_TDATA(0) => periph_axi_tx_tdata_0_port, 
                           SYS2AXI_2_TSTRB(3) => periph_axi_tx_tstrb_3_port, 
                           SYS2AXI_2_TSTRB(2) => periph_axi_tx_tstrb_2_port, 
                           SYS2AXI_2_TSTRB(1) => periph_axi_tx_tstrb_1_port, 
                           SYS2AXI_2_TSTRB(0) => periph_axi_tx_tstrb_0_port, 
                           SYS2AXI_2_TKEEP(3) => periph_axi_tx_tkeep_3_port, 
                           SYS2AXI_2_TKEEP(2) => periph_axi_tx_tkeep_2_port, 
                           SYS2AXI_2_TKEEP(1) => periph_axi_tx_tkeep_1_port, 
                           SYS2AXI_2_TKEEP(0) => periph_axi_tx_tkeep_0_port, 
                           SYS2AXI_2_TVALID => periph_axi_tx_tvalid, 
                           SYS2AXI_2_TLAST => periph_axi_tx_tlast, 
                           SYS2AXI_2_TID(2) => periph_axi_tx_tid_2_port, 
                           SYS2AXI_2_TID(1) => periph_axi_tx_tid_1_port, 
                           SYS2AXI_2_TID(0) => periph_axi_tx_tid_0_port, 
                           SYS2AXI_2_TDEST(4) => periph_axi_tx_tdest_4_port, 
                           SYS2AXI_2_TDEST(3) => periph_axi_tx_tdest_3_port, 
                           SYS2AXI_2_TDEST(2) => periph_axi_tx_tdest_2_port, 
                           SYS2AXI_2_TDEST(1) => periph_axi_tx_tdest_1_port, 
                           SYS2AXI_2_TDEST(0) => periph_axi_tx_tdest_0_port, 
                           SYS2AXI_2_TUSER(3) => periph_axi_tx_tuser_3_port, 
                           SYS2AXI_2_TUSER(2) => periph_axi_tx_tuser_2_port, 
                           SYS2AXI_2_TUSER(1) => periph_axi_tx_tuser_1_port, 
                           SYS2AXI_2_TUSER(0) => periph_axi_tx_tuser_0_port, 
                           SYS2AXI_2_TREADY => axi_periph_tx_tready, 
                           SYS2AXI_3_TDATA(31) => crypto_axi_tx_tdata_31_port, 
                           SYS2AXI_3_TDATA(30) => crypto_axi_tx_tdata_30_port, 
                           SYS2AXI_3_TDATA(29) => crypto_axi_tx_tdata_29_port, 
                           SYS2AXI_3_TDATA(28) => crypto_axi_tx_tdata_28_port, 
                           SYS2AXI_3_TDATA(27) => crypto_axi_tx_tdata_27_port, 
                           SYS2AXI_3_TDATA(26) => crypto_axi_tx_tdata_26_port, 
                           SYS2AXI_3_TDATA(25) => crypto_axi_tx_tdata_25_port, 
                           SYS2AXI_3_TDATA(24) => crypto_axi_tx_tdata_24_port, 
                           SYS2AXI_3_TDATA(23) => crypto_axi_tx_tdata_23_port, 
                           SYS2AXI_3_TDATA(22) => crypto_axi_tx_tdata_22_port, 
                           SYS2AXI_3_TDATA(21) => crypto_axi_tx_tdata_21_port, 
                           SYS2AXI_3_TDATA(20) => crypto_axi_tx_tdata_20_port, 
                           SYS2AXI_3_TDATA(19) => crypto_axi_tx_tdata_19_port, 
                           SYS2AXI_3_TDATA(18) => crypto_axi_tx_tdata_18_port, 
                           SYS2AXI_3_TDATA(17) => crypto_axi_tx_tdata_17_port, 
                           SYS2AXI_3_TDATA(16) => crypto_axi_tx_tdata_16_port, 
                           SYS2AXI_3_TDATA(15) => crypto_axi_tx_tdata_15_port, 
                           SYS2AXI_3_TDATA(14) => crypto_axi_tx_tdata_14_port, 
                           SYS2AXI_3_TDATA(13) => crypto_axi_tx_tdata_13_port, 
                           SYS2AXI_3_TDATA(12) => crypto_axi_tx_tdata_12_port, 
                           SYS2AXI_3_TDATA(11) => crypto_axi_tx_tdata_11_port, 
                           SYS2AXI_3_TDATA(10) => crypto_axi_tx_tdata_10_port, 
                           SYS2AXI_3_TDATA(9) => crypto_axi_tx_tdata_9_port, 
                           SYS2AXI_3_TDATA(8) => crypto_axi_tx_tdata_8_port, 
                           SYS2AXI_3_TDATA(7) => crypto_axi_tx_tdata_7_port, 
                           SYS2AXI_3_TDATA(6) => crypto_axi_tx_tdata_6_port, 
                           SYS2AXI_3_TDATA(5) => crypto_axi_tx_tdata_5_port, 
                           SYS2AXI_3_TDATA(4) => crypto_axi_tx_tdata_4_port, 
                           SYS2AXI_3_TDATA(3) => crypto_axi_tx_tdata_3_port, 
                           SYS2AXI_3_TDATA(2) => crypto_axi_tx_tdata_2_port, 
                           SYS2AXI_3_TDATA(1) => crypto_axi_tx_tdata_1_port, 
                           SYS2AXI_3_TDATA(0) => crypto_axi_tx_tdata_0_port, 
                           SYS2AXI_3_TSTRB(3) => crypto_axi_tx_tstrb_3_port, 
                           SYS2AXI_3_TSTRB(2) => crypto_axi_tx_tstrb_2_port, 
                           SYS2AXI_3_TSTRB(1) => crypto_axi_tx_tstrb_1_port, 
                           SYS2AXI_3_TSTRB(0) => crypto_axi_tx_tstrb_0_port, 
                           SYS2AXI_3_TKEEP(3) => crypto_axi_tx_tkeep_3_port, 
                           SYS2AXI_3_TKEEP(2) => crypto_axi_tx_tkeep_2_port, 
                           SYS2AXI_3_TKEEP(1) => crypto_axi_tx_tkeep_1_port, 
                           SYS2AXI_3_TKEEP(0) => crypto_axi_tx_tkeep_0_port, 
                           SYS2AXI_3_TVALID => crypto_axi_tx_tvalid, 
                           SYS2AXI_3_TLAST => crypto_axi_tx_tlast, 
                           SYS2AXI_3_TID(2) => crypto_axi_tx_tid_2_port, 
                           SYS2AXI_3_TID(1) => crypto_axi_tx_tid_1_port, 
                           SYS2AXI_3_TID(0) => crypto_axi_tx_tid_0_port, 
                           SYS2AXI_3_TDEST(4) => crypto_axi_tx_tdest_4_port, 
                           SYS2AXI_3_TDEST(3) => crypto_axi_tx_tdest_3_port, 
                           SYS2AXI_3_TDEST(2) => crypto_axi_tx_tdest_2_port, 
                           SYS2AXI_3_TDEST(1) => crypto_axi_tx_tdest_1_port, 
                           SYS2AXI_3_TDEST(0) => crypto_axi_tx_tdest_0_port, 
                           SYS2AXI_3_TUSER(3) => crypto_axi_tx_tuser_3_port, 
                           SYS2AXI_3_TUSER(2) => crypto_axi_tx_tuser_2_port, 
                           SYS2AXI_3_TUSER(1) => crypto_axi_tx_tuser_1_port, 
                           SYS2AXI_3_TUSER(0) => crypto_axi_tx_tuser_0_port, 
                           SYS2AXI_3_TREADY => axi_crypto_tx_tready, 
                           AXI2SYS_0_TDATA(31) => axi_mem_rx_tdata_31_port, 
                           AXI2SYS_0_TDATA(30) => axi_mem_rx_tdata_30_port, 
                           AXI2SYS_0_TDATA(29) => axi_mem_rx_tdata_29_port, 
                           AXI2SYS_0_TDATA(28) => axi_mem_rx_tdata_28_port, 
                           AXI2SYS_0_TDATA(27) => axi_mem_rx_tdata_27_port, 
                           AXI2SYS_0_TDATA(26) => axi_mem_rx_tdata_26_port, 
                           AXI2SYS_0_TDATA(25) => axi_mem_rx_tdata_25_port, 
                           AXI2SYS_0_TDATA(24) => axi_mem_rx_tdata_24_port, 
                           AXI2SYS_0_TDATA(23) => axi_mem_rx_tdata_23_port, 
                           AXI2SYS_0_TDATA(22) => axi_mem_rx_tdata_22_port, 
                           AXI2SYS_0_TDATA(21) => axi_mem_rx_tdata_21_port, 
                           AXI2SYS_0_TDATA(20) => axi_mem_rx_tdata_20_port, 
                           AXI2SYS_0_TDATA(19) => axi_mem_rx_tdata_19_port, 
                           AXI2SYS_0_TDATA(18) => axi_mem_rx_tdata_18_port, 
                           AXI2SYS_0_TDATA(17) => axi_mem_rx_tdata_17_port, 
                           AXI2SYS_0_TDATA(16) => axi_mem_rx_tdata_16_port, 
                           AXI2SYS_0_TDATA(15) => axi_mem_rx_tdata_15_port, 
                           AXI2SYS_0_TDATA(14) => axi_mem_rx_tdata_14_port, 
                           AXI2SYS_0_TDATA(13) => axi_mem_rx_tdata_13_port, 
                           AXI2SYS_0_TDATA(12) => axi_mem_rx_tdata_12_port, 
                           AXI2SYS_0_TDATA(11) => axi_mem_rx_tdata_11_port, 
                           AXI2SYS_0_TDATA(10) => axi_mem_rx_tdata_10_port, 
                           AXI2SYS_0_TDATA(9) => axi_mem_rx_tdata_9_port, 
                           AXI2SYS_0_TDATA(8) => axi_mem_rx_tdata_8_port, 
                           AXI2SYS_0_TDATA(7) => axi_mem_rx_tdata_7_port, 
                           AXI2SYS_0_TDATA(6) => axi_mem_rx_tdata_6_port, 
                           AXI2SYS_0_TDATA(5) => axi_mem_rx_tdata_5_port, 
                           AXI2SYS_0_TDATA(4) => axi_mem_rx_tdata_4_port, 
                           AXI2SYS_0_TDATA(3) => axi_mem_rx_tdata_3_port, 
                           AXI2SYS_0_TDATA(2) => axi_mem_rx_tdata_2_port, 
                           AXI2SYS_0_TDATA(1) => axi_mem_rx_tdata_1_port, 
                           AXI2SYS_0_TDATA(0) => axi_mem_rx_tdata_0_port, 
                           AXI2SYS_0_TSTRB(3) => axi_mem_rx_tstrb_3_port, 
                           AXI2SYS_0_TSTRB(2) => axi_mem_rx_tstrb_2_port, 
                           AXI2SYS_0_TSTRB(1) => axi_mem_rx_tstrb_1_port, 
                           AXI2SYS_0_TSTRB(0) => axi_mem_rx_tstrb_0_port, 
                           AXI2SYS_0_TKEEP(3) => axi_mem_rx_tkeep_3_port, 
                           AXI2SYS_0_TKEEP(2) => axi_mem_rx_tkeep_2_port, 
                           AXI2SYS_0_TKEEP(1) => axi_mem_rx_tkeep_1_port, 
                           AXI2SYS_0_TKEEP(0) => axi_mem_rx_tkeep_0_port, 
                           AXI2SYS_0_TVALID => axi_mem_rx_tvalid, 
                           AXI2SYS_0_TLAST => axi_mem_rx_tlast, 
                           AXI2SYS_0_TID(2) => axi_mem_rx_tid_2_port, 
                           AXI2SYS_0_TID(1) => axi_mem_rx_tid_1_port, 
                           AXI2SYS_0_TID(0) => axi_mem_rx_tid_0_port, 
                           AXI2SYS_0_TDEST(4) => axi_mem_rx_tdest_4_port, 
                           AXI2SYS_0_TDEST(3) => axi_mem_rx_tdest_3_port, 
                           AXI2SYS_0_TDEST(2) => axi_mem_rx_tdest_2_port, 
                           AXI2SYS_0_TDEST(1) => axi_mem_rx_tdest_1_port, 
                           AXI2SYS_0_TDEST(0) => axi_mem_rx_tdest_0_port, 
                           AXI2SYS_0_TUSER(3) => axi_mem_rx_tuser_3_port, 
                           AXI2SYS_0_TUSER(2) => axi_mem_rx_tuser_2_port, 
                           AXI2SYS_0_TUSER(1) => axi_mem_rx_tuser_1_port, 
                           AXI2SYS_0_TUSER(0) => axi_mem_rx_tuser_0_port, 
                           AXI2SYS_0_TREADY => mem_axi_rx_tready, 
                           AXI2SYS_1_TDATA(31) => axi_arm_rx_tdata_31_port, 
                           AXI2SYS_1_TDATA(30) => axi_arm_rx_tdata_30_port, 
                           AXI2SYS_1_TDATA(29) => axi_arm_rx_tdata_29_port, 
                           AXI2SYS_1_TDATA(28) => axi_arm_rx_tdata_28_port, 
                           AXI2SYS_1_TDATA(27) => axi_arm_rx_tdata_27_port, 
                           AXI2SYS_1_TDATA(26) => axi_arm_rx_tdata_26_port, 
                           AXI2SYS_1_TDATA(25) => axi_arm_rx_tdata_25_port, 
                           AXI2SYS_1_TDATA(24) => axi_arm_rx_tdata_24_port, 
                           AXI2SYS_1_TDATA(23) => axi_arm_rx_tdata_23_port, 
                           AXI2SYS_1_TDATA(22) => axi_arm_rx_tdata_22_port, 
                           AXI2SYS_1_TDATA(21) => axi_arm_rx_tdata_21_port, 
                           AXI2SYS_1_TDATA(20) => axi_arm_rx_tdata_20_port, 
                           AXI2SYS_1_TDATA(19) => axi_arm_rx_tdata_19_port, 
                           AXI2SYS_1_TDATA(18) => axi_arm_rx_tdata_18_port, 
                           AXI2SYS_1_TDATA(17) => axi_arm_rx_tdata_17_port, 
                           AXI2SYS_1_TDATA(16) => axi_arm_rx_tdata_16_port, 
                           AXI2SYS_1_TDATA(15) => axi_arm_rx_tdata_15_port, 
                           AXI2SYS_1_TDATA(14) => axi_arm_rx_tdata_14_port, 
                           AXI2SYS_1_TDATA(13) => axi_arm_rx_tdata_13_port, 
                           AXI2SYS_1_TDATA(12) => axi_arm_rx_tdata_12_port, 
                           AXI2SYS_1_TDATA(11) => axi_arm_rx_tdata_11_port, 
                           AXI2SYS_1_TDATA(10) => axi_arm_rx_tdata_10_port, 
                           AXI2SYS_1_TDATA(9) => axi_arm_rx_tdata_9_port, 
                           AXI2SYS_1_TDATA(8) => axi_arm_rx_tdata_8_port, 
                           AXI2SYS_1_TDATA(7) => axi_arm_rx_tdata_7_port, 
                           AXI2SYS_1_TDATA(6) => axi_arm_rx_tdata_6_port, 
                           AXI2SYS_1_TDATA(5) => axi_arm_rx_tdata_5_port, 
                           AXI2SYS_1_TDATA(4) => axi_arm_rx_tdata_4_port, 
                           AXI2SYS_1_TDATA(3) => axi_arm_rx_tdata_3_port, 
                           AXI2SYS_1_TDATA(2) => axi_arm_rx_tdata_2_port, 
                           AXI2SYS_1_TDATA(1) => axi_arm_rx_tdata_1_port, 
                           AXI2SYS_1_TDATA(0) => axi_arm_rx_tdata_0_port, 
                           AXI2SYS_1_TSTRB(3) => axi_arm_rx_tstrb_3_port, 
                           AXI2SYS_1_TSTRB(2) => axi_arm_rx_tstrb_2_port, 
                           AXI2SYS_1_TSTRB(1) => axi_arm_rx_tstrb_1_port, 
                           AXI2SYS_1_TSTRB(0) => axi_arm_rx_tstrb_0_port, 
                           AXI2SYS_1_TKEEP(3) => axi_arm_rx_tkeep_3_port, 
                           AXI2SYS_1_TKEEP(2) => axi_arm_rx_tkeep_2_port, 
                           AXI2SYS_1_TKEEP(1) => axi_arm_rx_tkeep_1_port, 
                           AXI2SYS_1_TKEEP(0) => axi_arm_rx_tkeep_0_port, 
                           AXI2SYS_1_TVALID => axi_arm_rx_tvalid, 
                           AXI2SYS_1_TLAST => axi_arm_rx_tlast, 
                           AXI2SYS_1_TID(2) => axi_arm_rx_tid_2_port, 
                           AXI2SYS_1_TID(1) => axi_arm_rx_tid_1_port, 
                           AXI2SYS_1_TID(0) => axi_arm_rx_tid_0_port, 
                           AXI2SYS_1_TDEST(4) => axi_arm_rx_tdest_4_port, 
                           AXI2SYS_1_TDEST(3) => axi_arm_rx_tdest_3_port, 
                           AXI2SYS_1_TDEST(2) => axi_arm_rx_tdest_2_port, 
                           AXI2SYS_1_TDEST(1) => axi_arm_rx_tdest_1_port, 
                           AXI2SYS_1_TDEST(0) => axi_arm_rx_tdest_0_port, 
                           AXI2SYS_1_TUSER(3) => axi_arm_rx_tuser_3_port, 
                           AXI2SYS_1_TUSER(2) => axi_arm_rx_tuser_2_port, 
                           AXI2SYS_1_TUSER(1) => axi_arm_rx_tuser_1_port, 
                           AXI2SYS_1_TUSER(0) => axi_arm_rx_tuser_0_port, 
                           AXI2SYS_1_TREADY => arm_axi_rx_tready, 
                           AXI2SYS_2_TDATA(31) => axi_periph_rx_tdata_31_port, 
                           AXI2SYS_2_TDATA(30) => axi_periph_rx_tdata_30_port, 
                           AXI2SYS_2_TDATA(29) => axi_periph_rx_tdata_29_port, 
                           AXI2SYS_2_TDATA(28) => axi_periph_rx_tdata_28_port, 
                           AXI2SYS_2_TDATA(27) => axi_periph_rx_tdata_27_port, 
                           AXI2SYS_2_TDATA(26) => axi_periph_rx_tdata_26_port, 
                           AXI2SYS_2_TDATA(25) => axi_periph_rx_tdata_25_port, 
                           AXI2SYS_2_TDATA(24) => axi_periph_rx_tdata_24_port, 
                           AXI2SYS_2_TDATA(23) => axi_periph_rx_tdata_23_port, 
                           AXI2SYS_2_TDATA(22) => axi_periph_rx_tdata_22_port, 
                           AXI2SYS_2_TDATA(21) => axi_periph_rx_tdata_21_port, 
                           AXI2SYS_2_TDATA(20) => axi_periph_rx_tdata_20_port, 
                           AXI2SYS_2_TDATA(19) => axi_periph_rx_tdata_19_port, 
                           AXI2SYS_2_TDATA(18) => axi_periph_rx_tdata_18_port, 
                           AXI2SYS_2_TDATA(17) => axi_periph_rx_tdata_17_port, 
                           AXI2SYS_2_TDATA(16) => axi_periph_rx_tdata_16_port, 
                           AXI2SYS_2_TDATA(15) => axi_periph_rx_tdata_15_port, 
                           AXI2SYS_2_TDATA(14) => axi_periph_rx_tdata_14_port, 
                           AXI2SYS_2_TDATA(13) => axi_periph_rx_tdata_13_port, 
                           AXI2SYS_2_TDATA(12) => axi_periph_rx_tdata_12_port, 
                           AXI2SYS_2_TDATA(11) => axi_periph_rx_tdata_11_port, 
                           AXI2SYS_2_TDATA(10) => axi_periph_rx_tdata_10_port, 
                           AXI2SYS_2_TDATA(9) => axi_periph_rx_tdata_9_port, 
                           AXI2SYS_2_TDATA(8) => axi_periph_rx_tdata_8_port, 
                           AXI2SYS_2_TDATA(7) => axi_periph_rx_tdata_7_port, 
                           AXI2SYS_2_TDATA(6) => axi_periph_rx_tdata_6_port, 
                           AXI2SYS_2_TDATA(5) => axi_periph_rx_tdata_5_port, 
                           AXI2SYS_2_TDATA(4) => axi_periph_rx_tdata_4_port, 
                           AXI2SYS_2_TDATA(3) => axi_periph_rx_tdata_3_port, 
                           AXI2SYS_2_TDATA(2) => axi_periph_rx_tdata_2_port, 
                           AXI2SYS_2_TDATA(1) => axi_periph_rx_tdata_1_port, 
                           AXI2SYS_2_TDATA(0) => axi_periph_rx_tdata_0_port, 
                           AXI2SYS_2_TSTRB(3) => axi_periph_rx_tstrb_3_port, 
                           AXI2SYS_2_TSTRB(2) => axi_periph_rx_tstrb_2_port, 
                           AXI2SYS_2_TSTRB(1) => axi_periph_rx_tstrb_1_port, 
                           AXI2SYS_2_TSTRB(0) => axi_periph_rx_tstrb_0_port, 
                           AXI2SYS_2_TKEEP(3) => axi_periph_rx_tkeep_3_port, 
                           AXI2SYS_2_TKEEP(2) => axi_periph_rx_tkeep_2_port, 
                           AXI2SYS_2_TKEEP(1) => axi_periph_rx_tkeep_1_port, 
                           AXI2SYS_2_TKEEP(0) => axi_periph_rx_tkeep_0_port, 
                           AXI2SYS_2_TVALID => axi_periph_rx_tvalid, 
                           AXI2SYS_2_TLAST => axi_periph_rx_tlast, 
                           AXI2SYS_2_TID(2) => axi_periph_rx_tid_2_port, 
                           AXI2SYS_2_TID(1) => axi_periph_rx_tid_1_port, 
                           AXI2SYS_2_TID(0) => axi_periph_rx_tid_0_port, 
                           AXI2SYS_2_TDEST(4) => axi_periph_rx_tdest_4_port, 
                           AXI2SYS_2_TDEST(3) => axi_periph_rx_tdest_3_port, 
                           AXI2SYS_2_TDEST(2) => axi_periph_rx_tdest_2_port, 
                           AXI2SYS_2_TDEST(1) => axi_periph_rx_tdest_1_port, 
                           AXI2SYS_2_TDEST(0) => axi_periph_rx_tdest_0_port, 
                           AXI2SYS_2_TUSER(3) => axi_periph_rx_tuser_3_port, 
                           AXI2SYS_2_TUSER(2) => axi_periph_rx_tuser_2_port, 
                           AXI2SYS_2_TUSER(1) => axi_periph_rx_tuser_1_port, 
                           AXI2SYS_2_TUSER(0) => axi_periph_rx_tuser_0_port, 
                           AXI2SYS_2_TREADY => periph_axi_rx_tready, 
                           AXI2SYS_3_TDATA(31) => axi_crypto_rx_tdata_31_port, 
                           AXI2SYS_3_TDATA(30) => axi_crypto_rx_tdata_30_port, 
                           AXI2SYS_3_TDATA(29) => axi_crypto_rx_tdata_29_port, 
                           AXI2SYS_3_TDATA(28) => axi_crypto_rx_tdata_28_port, 
                           AXI2SYS_3_TDATA(27) => axi_crypto_rx_tdata_27_port, 
                           AXI2SYS_3_TDATA(26) => axi_crypto_rx_tdata_26_port, 
                           AXI2SYS_3_TDATA(25) => axi_crypto_rx_tdata_25_port, 
                           AXI2SYS_3_TDATA(24) => axi_crypto_rx_tdata_24_port, 
                           AXI2SYS_3_TDATA(23) => axi_crypto_rx_tdata_23_port, 
                           AXI2SYS_3_TDATA(22) => axi_crypto_rx_tdata_22_port, 
                           AXI2SYS_3_TDATA(21) => axi_crypto_rx_tdata_21_port, 
                           AXI2SYS_3_TDATA(20) => axi_crypto_rx_tdata_20_port, 
                           AXI2SYS_3_TDATA(19) => axi_crypto_rx_tdata_19_port, 
                           AXI2SYS_3_TDATA(18) => axi_crypto_rx_tdata_18_port, 
                           AXI2SYS_3_TDATA(17) => axi_crypto_rx_tdata_17_port, 
                           AXI2SYS_3_TDATA(16) => axi_crypto_rx_tdata_16_port, 
                           AXI2SYS_3_TDATA(15) => axi_crypto_rx_tdata_15_port, 
                           AXI2SYS_3_TDATA(14) => axi_crypto_rx_tdata_14_port, 
                           AXI2SYS_3_TDATA(13) => axi_crypto_rx_tdata_13_port, 
                           AXI2SYS_3_TDATA(12) => axi_crypto_rx_tdata_12_port, 
                           AXI2SYS_3_TDATA(11) => axi_crypto_rx_tdata_11_port, 
                           AXI2SYS_3_TDATA(10) => axi_crypto_rx_tdata_10_port, 
                           AXI2SYS_3_TDATA(9) => axi_crypto_rx_tdata_9_port, 
                           AXI2SYS_3_TDATA(8) => axi_crypto_rx_tdata_8_port, 
                           AXI2SYS_3_TDATA(7) => axi_crypto_rx_tdata_7_port, 
                           AXI2SYS_3_TDATA(6) => axi_crypto_rx_tdata_6_port, 
                           AXI2SYS_3_TDATA(5) => axi_crypto_rx_tdata_5_port, 
                           AXI2SYS_3_TDATA(4) => axi_crypto_rx_tdata_4_port, 
                           AXI2SYS_3_TDATA(3) => axi_crypto_rx_tdata_3_port, 
                           AXI2SYS_3_TDATA(2) => axi_crypto_rx_tdata_2_port, 
                           AXI2SYS_3_TDATA(1) => axi_crypto_rx_tdata_1_port, 
                           AXI2SYS_3_TDATA(0) => axi_crypto_rx_tdata_0_port, 
                           AXI2SYS_3_TSTRB(3) => axi_crypto_rx_tstrb_3_port, 
                           AXI2SYS_3_TSTRB(2) => axi_crypto_rx_tstrb_2_port, 
                           AXI2SYS_3_TSTRB(1) => axi_crypto_rx_tstrb_1_port, 
                           AXI2SYS_3_TSTRB(0) => axi_crypto_rx_tstrb_0_port, 
                           AXI2SYS_3_TKEEP(3) => axi_crypto_rx_tkeep_3_port, 
                           AXI2SYS_3_TKEEP(2) => axi_crypto_rx_tkeep_2_port, 
                           AXI2SYS_3_TKEEP(1) => axi_crypto_rx_tkeep_1_port, 
                           AXI2SYS_3_TKEEP(0) => axi_crypto_rx_tkeep_0_port, 
                           AXI2SYS_3_TVALID => axi_crypto_rx_tvalid, 
                           AXI2SYS_3_TLAST => axi_crypto_rx_tlast, 
                           AXI2SYS_3_TID(2) => axi_crypto_rx_tid_2_port, 
                           AXI2SYS_3_TID(1) => axi_crypto_rx_tid_1_port, 
                           AXI2SYS_3_TID(0) => axi_crypto_rx_tid_0_port, 
                           AXI2SYS_3_TDEST(4) => axi_crypto_rx_tdest_4_port, 
                           AXI2SYS_3_TDEST(3) => axi_crypto_rx_tdest_3_port, 
                           AXI2SYS_3_TDEST(2) => axi_crypto_rx_tdest_2_port, 
                           AXI2SYS_3_TDEST(1) => axi_crypto_rx_tdest_1_port, 
                           AXI2SYS_3_TDEST(0) => axi_crypto_rx_tdest_0_port, 
                           AXI2SYS_3_TUSER(3) => axi_crypto_rx_tuser_3_port, 
                           AXI2SYS_3_TUSER(2) => axi_crypto_rx_tuser_2_port, 
                           AXI2SYS_3_TUSER(1) => axi_crypto_rx_tuser_1_port, 
                           AXI2SYS_3_TUSER(0) => axi_crypto_rx_tuser_0_port, 
                           AXI2SYS_3_TREADY => crypto_axi_rx_tready, clk => CLK
                           , rst => n15);
   n10 <= '0';
   U12 : GTECH_NOT port map( A => RESET_B, Z => n15);
   U13 : GTECH_NOT port map( A => n11, Z => n16);
   U14 : GTECH_NAND2 port map( A => RESET_PERIPH_B, B => RESET_B, Z => n11);
   U15 : GTECH_NOT port map( A => n12, Z => n17);
   U16 : GTECH_NAND2 port map( A => RESET_MEM_B, B => RESET_B, Z => n12);
   U17 : GTECH_NOT port map( A => n13, Z => n18);
   U18 : GTECH_NAND2 port map( A => RESET_CRYPTO_B, B => RESET_B, Z => n13);
   U19 : GTECH_NOT port map( A => n14, Z => n19);
   U20 : GTECH_NAND2 port map( A => RESET_ARM_B, B => RESET_B, Z => n14);
   periph_axi_tx_tuser_0_port <= '0';
   periph_axi_tx_tuser_1_port <= '0';
   periph_axi_tx_tuser_2_port <= '0';
   periph_axi_tx_tuser_3_port <= '0';
   periph_axi_tx_tid_0_port <= '0';
   periph_axi_tx_tid_1_port <= '0';
   periph_axi_tx_tid_2_port <= '0';

end SYN_beh;

------------------------------------------------------------------------
-- Disclaimer: USC makes no representation, either expressed or implied,
-- as to the adequacy, accuracy, sufficiency or freedom from defect of
-- any kind, nor shall USC incur any responsibility or obligation
-- whatsoever by reason of such Data. All Data is provided on an “as-is”
-- basis. To the maximum extent permitted by law, in no event will USC be
-- responsible for any incidental damages, consequential damages,
-- exemplary damages of any kind, lost goodwill, lost profits, lost
-- business and/or any indirect economic damages whatsoever regardless of
-- whether such damages arise from claims based upon contract,
-- negligence, tort (including strict liability or other legal theory), a
-- breach of any warranty or term of any agreement, and regardless of
-- whether a party was advised or had reason to know of the possibility
-- of incurring such damages in advance.
--
-- Software Distribution Notice: Software downloaded through this website
-- is being provided for the sole use of the Integrity and Reliability of
-- Integrated Circuits Program. DARPA has stipulated that neither this
-- software nor any derivatives of this software may be redistributed to
-- any third party. This software must be returned unmodified to the IRIS
-- Release Server website upon DARPA notification or, in any event,
-- before the end of the IRIS Program.
------------------------------------------------------------------------

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.std_logic_arith.all;
use IEEE.std_logic_unsigned.all;

-- Simulation Only MCU Memory
-- Used as part of Post Synthesis Behavior Model Simulation

-- Dual Port RAM with Address width of 14 bit
-- capable of addressing 2^14 words, each being 32-bits

-- 64 KB Memory

entity mcu_memory_v2 is
  generic (
    -- Address Width of Memory (2^14 = 16K elements)
    C_ADDR_WIDTH  : integer := 14;
    -- Data Width of Memory (32-bit elements)
    C_DATA_WIDTH  : integer := 32);
  port(
    -- Port A
    clka  : in  std_logic;
    cea   : in  std_logic;
    addra : in  std_logic_vector(C_ADDR_WIDTH-1 downto 0);
    dina  : in  std_logic_vector(C_DATA_WIDTH-1 downto 0);
    douta : out std_logic_vector(C_DATA_WIDTH-1 downto 0);
    wea   : in  std_logic;
    rma   : in  std_logic_vector(1 downto 0);    
    -- Port B
    clkb  : in  std_logic;
    ceb   : in  std_logic;
    addrb : in  std_logic_vector(C_ADDR_WIDTH-1 downto 0);
    dinb  : in  std_logic_vector(C_DATA_WIDTH-1 downto 0);
    doutb : out std_logic_vector(C_DATA_WIDTH-1 downto 0);
    web   : in  std_logic;
    rmb   : in  std_logic_vector(1 downto 0)    
    );
end entity mcu_memory_v2;

architecture IMP of mcu_memory_v2 is
  constant C_UNDEFINED : std_logic_vector(C_DATA_WIDTH-1 downto 0) := (others => 'U');
  
  constant BRAM_SIZE : integer := 2**C_ADDR_WIDTH;
  type BRAM_DATA_TYPE is array (0 to BRAM_SIZE-1) of std_logic_vector(C_DATA_WIDTH-1 downto 0);
  shared variable bram_data : BRAM_DATA_TYPE;
  
-------------------------------------------------------------------------------
-- BEGIN
-------------------------------------------------------------------------------
begin
  -----------------------------------------------------------------------------
  -- PORT_A_PROC
  -----------------------------------------------------------------------------
  PORT_A_PROC : process (clka) is
  begin
    if ((clka'event) and (clka = '1')) then
      if (cea = '1') then
        if (wea = '1') then
          bram_data(conv_integer(addra)) := dina;
        end if;
        if (bram_data(conv_integer(addra)) = C_UNDEFINED) then
          douta <= (others => '0');
        else
          douta <= bram_data(conv_integer(addra));
        end if;
      end if;
    end if;
  end process PORT_A_PROC;

  -----------------------------------------------------------------------------
  -- PORT_B_PROC
  -----------------------------------------------------------------------------
  PORT_B_PROC : process (clkb) is
  begin
    if ((clkb'event) and (clkb = '1')) then
      if (ceb = '1') then
        if (web = '1') then        
          bram_data(conv_integer(addrb)) := dinb;
        end if;
        if (bram_data(conv_integer(addrb)) = C_UNDEFINED) then
          doutb <= (others => '0');
        else
          doutb <= bram_data(conv_integer(addrb));
        end if;
      end if;
    end if;
  end process PORT_B_PROC;
  
end IMP;

Input Backlog Matrix 

[[2 0 0 0 8]
 [3 0 4 0 0]
 [0 1 7 0 0]
 [5 2 0 6 0]
 [0 4 3 0 0]]

 Output traffic matrices at different time intervals

Time Interval 1

[[0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 1 0 0]
 [0 0 0 1 0]
 [0 1 0 0 0]]

Time Interval 2

[[0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 1 0 0]
 [0 0 0 1 0]
 [0 1 0 0 0]]

Time Interval 3

[[0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 1 0 0]
 [1 0 0 0 0]
 [0 1 0 0 0]]

Time Interval 4

[[0 0 0 0 1]
 [1 0 0 0 0]
 [0 0 1 0 0]
 [0 0 0 1 0]
 [0 0 0 0 0]]

Time Interval 5

[[0 0 0 0 1]
 [0 0 1 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [0 1 0 0 0]]

Time Interval 6

[[0 0 0 0 1]
 [1 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 1 0]
 [0 0 1 0 0]]

Time Interval 7

[[0 0 0 0 1]
 [0 0 0 0 0]
 [0 0 1 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]]

Time Interval 8

[[1 0 0 0 0]
 [0 0 1 0 0]
 [0 1 0 0 0]
 [0 0 0 1 0]
 [0 0 0 0 0]]

Time Interval 9

[[0 0 0 0 1]
 [1 0 0 0 0]
 [0 0 0 0 0]
 [0 1 0 0 0]
 [0 0 1 0 0]]

Time Interval 10

[[0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 1 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]]

Time Interval 11

[[1 0 0 0 0]
 [0 0 1 0 0]
 [0 0 0 0 0]
 [0 0 0 1 0]
 [0 0 0 0 0]]

Time Interval 12

[[0 0 0 0 0]
 [0 0 0 0 0]
 [0 0 0 0 0]
 [0 1 0 0 0]
 [0 0 1 0 0]]

Time Interval 13

[[0 0 0 0 0]
 [0 0 1 0 0]
 [0 0 0 0 0]
 [1 0 0 0 0]
 [0 0 0 0 0]]


------------------------------------------------------------------------
-- Disclaimer: USC makes no representation, either expressed or implied,
-- as to the adequacy, accuracy, sufficiency or freedom from defect of
-- any kind, nor shall USC incur any responsibility or obligation
-- whatsoever by reason of such Data. All Data is provided on an “as-is”
-- basis. To the maximum extent permitted by law, in no event will USC be
-- responsible for any incidental damages, consequential damages,
-- exemplary damages of any kind, lost goodwill, lost profits, lost
-- business and/or any indirect economic damages whatsoever regardless of
-- whether such damages arise from claims based upon contract,
-- negligence, tort (including strict liability or other legal theory), a
-- breach of any warranty or term of any agreement, and regardless of
-- whether a party was advised or had reason to know of the possibility
-- of incurring such damages in advance.
--
-- Software Distribution Notice: Software downloaded through this website
-- is being provided for the sole use of the Integrity and Reliability of
-- Integrated Circuits Program. DARPA has stipulated that neither this
-- software nor any derivatives of this software may be redistributed to
-- any third party. This software must be returned unmodified to the IRIS
-- Release Server website upon DARPA notification or, in any event,
-- before the end of the IRIS Program.
------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use ieee.std_logic_unsigned.all;

entity ramn_M32_N16 is
	generic(
		M : INTEGER := 32;
		N : INTEGER := 16
		);
	port(
		input : in STD_LOGIC_VECTOR(M-1 DOWNTO 0);
		addr : in STD_LOGIC_VECTOR(3 DOWNTO 0);
		write : in STD_LOGIC;
		clk : in STD_LOGIC;
		output : out STD_LOGIC_VECTOR(M-1 DOWNTO 0)
	    );
end ramn_M32_N16;

architecture behavioral of ramn_M32_N16 is
	type ram is array( 0 to N-1 ) of std_logic_vector(M-1 downto 0);
	signal data : ram;
begin
	PROCESS (clk)
	BEGIN
		IF rising_edge(clk) THEN
			IF write = '1'THEN
				data(to_integer(unsigned(addr))) <= input;
			END IF;
		END IF;
	END PROCESS;
	output <= data(to_integer(unsigned(addr)));
end behavioral;

------------------------------------------------------------------------
-- Disclaimer: USC makes no representation, either expressed or implied,
-- as to the adequacy, accuracy, sufficiency or freedom from defect of
-- any kind, nor shall USC incur any responsibility or obligation
-- whatsoever by reason of such Data. All Data is provided on an “as-is”
-- basis. To the maximum extent permitted by law, in no event will USC be
-- responsible for any incidental damages, consequential damages,
-- exemplary damages of any kind, lost goodwill, lost profits, lost
-- business and/or any indirect economic damages whatsoever regardless of
-- whether such damages arise from claims based upon contract,
-- negligence, tort (including strict liability or other legal theory), a
-- breach of any warranty or term of any agreement, and regardless of
-- whether a party was advised or had reason to know of the possibility
-- of incurring such damages in advance.
--
-- Software Distribution Notice: Software downloaded through this website
-- is being provided for the sole use of the Integrity and Reliability of
-- Integrated Circuits Program. DARPA has stipulated that neither this
-- software nor any derivatives of this software may be redistributed to
-- any third party. This software must be returned unmodified to the IRIS
-- Release Server website upon DARPA notification or, in any event,
-- before the end of the IRIS Program.
------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use ieee.std_logic_unsigned.all;

entity ramn_M8_N16 is
	generic(
		M : INTEGER := 8;
		N : INTEGER := 16
		);
	port(
		input : in STD_LOGIC_VECTOR(M-1 DOWNTO 0);
        addr : in STD_LOGIC_VECTOR(3 DOWNTO 0);
		write : in STD_LOGIC;
		clk : in STD_LOGIC;
		output : out STD_LOGIC_VECTOR(M-1 DOWNTO 0)
	    );
end ramn_M8_N16;

architecture behavioral of ramn_M8_N16 is
	type ram is array( 0 to N-1 ) of std_logic_vector(M-1 downto 0);
	signal data : ram;
begin
	PROCESS (clk)
	BEGIN
		IF rising_edge(clk) THEN
			IF write = '1'THEN
				data(to_integer(unsigned(addr))) <= input;
			END IF;
		END IF;
	END PROCESS;
	output <= data(to_integer(unsigned(addr)));
end behavioral;
